{
    "00401260": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401260(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401296:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x53f5a8 != NULL) {\n                        *(*0x20 + -0x38) = *0x53f5a8;\n                        iVar6 = 0;\n                        puVar5 = *0x53f5a8;\n                        puVar4 = *0x53f5a0;\n                        while( true ) {\n                            uVar1 = *puVar4;\n                            if (*(puVar4 + 3) != '\\0') {\n                                if ((*(puVar4 + 0x19) == '\\0') || (*puVar4[2] != '\\0')) {\n                                    *puVar4[2] = *(puVar4 + 0x19);\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = puVar4[1];\n                                    *(*0x20 + -0x10) = uVar1;\n                                    *(*0x20 + -0x48) = iVar6;\n                                    *(*0x20 + -0x18) = puVar4;\n                                    *(*0x20 + -0x90) = 0x40153b;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x90) = 0x40154c;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x90) = 0x40155b;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x90) = 0x40156c;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x90) = 0x401571;\n                                    fcn.00434e60();\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar4 = *(*0x20 + -0x18);\n                                    iVar6 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar6 = iVar6 + 1;\n                            if (puVar5 <= iVar6) break;\n                            puVar4 = puVar4 + 4;\n                        }\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x004012ad;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x004012ad:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401790;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401785;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x0040130c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040130c:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401488;\n                fcn.00434de0();\n                *(*0x20 + -0x90) = 0x401499;\n                fcn.004356e0();\n                *(*0x20 + -0x90) = 0x4014a8;\n                fcn.004356e0();\n                *(*0x20 + -0x90) = 0x4014b9;\n                fcn.004356e0();\n                *(*0x20 + -0x90) = 0x4014be;\n                fcn.00434e60();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401296;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x0040140c:\n                                *(*0x20 + -0x90) = 0x401411;\n                                fcn.00434de0();\n                                *(*0x20 + -0x90) = 0x401425;\n                                fcn.004356e0();\n                                *(*0x20 + -0x90) = 0x401434;\n                                fcn.004356e0();\n                                *(*0x20 + -0x90) = 0x401445;\n                                fcn.004356e0();\n                                *(*0x20 + -0x90) = 0x401454;\n                                fcn.004356e0();\n                                *(*0x20 + -0x90) = 0x401465;\n                                fcn.004356e0();\n                                *(*0x20 + -0x90) = 0x40146a;\n                                fcn.00434e60();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401296;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x0040140c;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x53f5a8;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x53f5a8;\n                                if (*0x53f5a8 <= puVar3) {\ncode_r0x00401757:\n                                    *(*0x20 + -0x90) = 0x40175c;\n                                    fcn.0045ca80(puVar7);\n                                    goto code_r0x0040175c;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x53f5a0 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x53f5a0;\n                                if (*0x53f5a8 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x401757;\n                                    puVar7 = *0x53f5a8;\n                                    fcn.0045ca80(*0x53f5a8);\n                                    goto code_r0x00401757;\n                                }\ncode_r0x0040170a:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x53f5a8;\n                            puVar4 = NULL;\n                            arg2 = *0x53f5a8;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x53f5a8;\n                                puVar10 = *0x53f5a0;\n                                if (*0x53f5a8 <= puVar4) {\ncode_r0x00401705:\n                                    *(*0x20 + -0x90) = 0x40170a;\n                                    iVar6 = fcn.0045ca80(puVar7);\n                                    goto code_r0x0040170a;\n                                }\n                                puVar7 = (*0x53f5a0)[puVar4 * 4 + 1];\n                                puVar10 = (*0x53f5a0)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x401630;\n                                    cVar2 = fcn.004027a0(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x53f5a8;\n                                        in_RAX = *0x53f5a0;\n                                        if (puVar3 < *0x53f5a8) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x53f5a0 + 3 + puVar10) = 1;\n                                            in_RAX = *0x53f5a0;\n                                            if (puVar3 < *0x53f5a8) {\n                                                *(*0x53f5a0 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401296;\n                                            }\n                                            *(*0x20 + -0x90) = 0x4016ff;\n                                            puVar7 = *0x53f5a8;\n                                            fcn.0045ca80(*0x53f5a8);\n                                        }\n                                        *(*0x20 + -0x90) = 0x401705;\n                                        fcn.0045ca80(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x00401705;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x4016b5;\n                            fcn.00434de0();\n                            *(*0x20 + -0x90) = 0x4016c6;\n                            fcn.004356e0();\n                            *(*0x20 + -0x90) = 0x4016d5;\n                            fcn.004356e0();\n                            *(*0x20 + -0x90) = 0x4016e6;\n                            fcn.004356e0();\n                            *(*0x20 + -0x90) = 0x4016eb;\n                            fcn.00434e60();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401296;\n                    }\ncode_r0x0040175c:\n                    *(*0x20 + -0x90) = 0x401765;\n                    fcn.0045cb40(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x401772;\n                arg2 = puVar7;\n                fcn.0045cb40(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401785;\n            fcn.0045cac0(arg2, puVar7);\ncode_r0x00401785:\n            *(*0x20 + -0x90) = 0x401790;\n            puVar7 = unaff_RBX;\n            fcn.0045cb40(unaff_RBX);\ncode_r0x00401790:\n            *(*0x20 + -0x90) = 0x401798;\n            in_RAX = fcn.0045cac0(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4017a8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3469
    },
    "00402ae0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402ae0(uint64_t arg1)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [32];\n    uint64_t uVar5;\n    uchar auVar6 [32];\n    uchar auVar7 [16];\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uchar (*pauStackX24) [32];\n    uint64_t uStackX32;\n    uint8_t uVar10;\n    \n    if (uStackX16 < uStackX32) {\n        return;\n    }\n    if ((0xf < uStackX16) && (*0x593b6f == '\\x01')) {\n        if (0xb < uStackX32) goto code_r0x004028f7;\n        if ((*pauStackX24 + 0x10 & 0xff0) != 0) {\n            pauVar4 = pauStackX8[-1];\n            uVar5 = 0x10 - uStackX32;\n            do {\n                uVar3 = pcmpestri(**pauStackX24, **pauStackX8, 0xc);\n                if ((arg1 & 0xffffffff00000000 | uVar3) < uVar5 || (arg1 & 0xffffffff00000000 | uVar3) == uVar5) {\n                    return;\n                }\n                pauStackX8 = pauStackX8 + uVar5;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n            uVar3 = pcmpestri(**pauStackX24, *((*pauVar4 + uStackX16 + 0x11)[-1] + 0x1f), 0xc);\n            if (uVar5 <= (arg1 & 0xffffffff00000000 | uVar3) && (arg1 & 0xffffffff00000000 | uVar3) != uVar5) {\n                return;\n            }\n            return;\n        }\n    }\n    if (uStackX32 < 3) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1f);\n        return;\n    }\n    if (uStackX32 < 4) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (*pauVar4 + uStackX16 + 0x1e <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(*pauStackX8 + 1) == *(*pauStackX24 + 1)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1e);\n        return;\n    }\n    if (uStackX32 < 5) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x1d);\n        return;\n    }\n    if (uStackX32 < 8) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 != **pauStackX24) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            if (*(pauStackX8[-1] + uStackX32 + 0x1c) == *(pauStackX24[-1] + uStackX32 + 0x1c)) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n        return;\n    }\n    if (uStackX32 < 9) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            if (**pauStackX8 == **pauStackX24) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x19);\n        return;\n    }\ncode_r0x004028f7:\n    if (uStackX32 < 0x10) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        do {\n            while (**pauStackX8 == **pauStackX24) {\n                if (*(pauStackX8[-1] + uStackX32 + 0x18) == *(pauStackX24[-1] + uStackX32 + 0x18)) {\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else if (uStackX32 < 0x11) {\n        pauVar4 = pauStackX8[-1];\n        do {\n            uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]);\n            auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                 CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                           CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc]), \n                                                                     CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                (*pauStackX24)[0xb]), \n                                                                               CONCAT110(-((*pauStackX8)[10] ==\n                                                                                          (*pauStackX24)[10]), \n                                                                                         CONCAT19(-((*pauStackX8)[9] ==\n                                                                                                   (*pauStackX24)[9]), \n                                                                                                  CONCAT18(-((*\n                                                            pauStackX8)[8] == (*pauStackX24)[8]), \n                                                            CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                     CONCAT16(-((*pauStackX8)[6] == (*pauStackX24)[6]), \n                                                                              CONCAT15(-((*pauStackX8)[5] ==\n                                                                                        (*pauStackX24)[5]), \n                                                                                       CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                 (*pauStackX24)[4]), \n                                                                                                CONCAT13(-((*pauStackX8)\n                                                                                                           [3] == (*\n                                                            pauStackX24)[3]), \n                                                            CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                     CONCAT11(-((*pauStackX8)[1] == (*pauStackX24)[1]), \n                                                                              -((*pauStackX8)[0] == (*pauStackX24)[0])))\n                                                            )))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf)\n                == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < *pauVar4 + uStackX16 + 0x11);\n    }\n    else if (uStackX32 < 0x20) {\n        pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n        pcVar1 = pauStackX24[-1] + uStackX32 + 0x10;\n        do {\n            while (uVar10 = -((*pauStackX8)[0xf] == (*pauStackX24)[0xf]), \n                  auVar7 = CONCAT115(uVar10, CONCAT114(-((*pauStackX8)[0xe] == (*pauStackX24)[0xe]), \n                                                       CONCAT113(-((*pauStackX8)[0xd] == (*pauStackX24)[0xd]), \n                                                                 CONCAT112(-((*pauStackX8)[0xc] == (*pauStackX24)[0xc])\n                                                                           , CONCAT111(-((*pauStackX8)[0xb] ==\n                                                                                        (*pauStackX24)[0xb]), \n                                                                                       CONCAT110(-((*pauStackX8)[10] ==\n                                                                                                  (*pauStackX24)[10]), \n                                                                                                 CONCAT19(-((*pauStackX8\n                                                                                                            )[9] == (*\n                                                            pauStackX24)[9]), \n                                                            CONCAT18(-((*pauStackX8)[8] == (*pauStackX24)[8]), \n                                                                     CONCAT17(-((*pauStackX8)[7] == (*pauStackX24)[7]), \n                                                                              CONCAT16(-((*pauStackX8)[6] ==\n                                                                                        (*pauStackX24)[6]), \n                                                                                       CONCAT15(-((*pauStackX8)[5] ==\n                                                                                                 (*pauStackX24)[5]), \n                                                                                                CONCAT14(-((*pauStackX8)\n                                                                                                           [4] == (*\n                                                            pauStackX24)[4]), \n                                                            CONCAT13(-((*pauStackX8)[3] == (*pauStackX24)[3]), \n                                                                     CONCAT12(-((*pauStackX8)[2] == (*pauStackX24)[2]), \n                                                                              CONCAT11(-((*pauStackX8)[1] ==\n                                                                                        (*pauStackX24)[1]), \n                                                                                       -((*pauStackX8)[0] ==\n                                                                                        (*pauStackX24)[0])))))))))))))))\n                                    ), \n                  (SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar10 >> 7) << 0xf) != 0xffff) {\n                pauStackX8 = *pauStackX8 + 1;\n                if (pauVar4 <= pauStackX8) {\n                    return;\n                }\n            }\n            pcVar2 = pauStackX8[-1] + uStackX32 + 0x10;\n            auVar7 = CONCAT115(-(pcVar2[0xf] == pcVar1[0xf]), \n                               CONCAT114(-(pcVar2[0xe] == pcVar1[0xe]), \n                                         CONCAT113(-(pcVar2[0xd] == pcVar1[0xd]), \n                                                   CONCAT112(-(pcVar2[0xc] == pcVar1[0xc]), \n                                                             CONCAT111(-(pcVar2[0xb] == pcVar1[0xb]), \n                                                                       CONCAT110(-(pcVar2[10] == pcVar1[10]), \n                                                                                 CONCAT19(-(pcVar2[9] == pcVar1[9]), \n                                                                                          CONCAT18(-(pcVar2[8] ==\n                                                                                                    pcVar1[8]), \n                                                                                                   CONCAT17(-(pcVar2[7]\n                                                                                                             == pcVar1[7\n                                                            ]), CONCAT16(-(pcVar2[6] == pcVar1[6]), \n                                                                         CONCAT15(-(pcVar2[5] == pcVar1[5]), \n                                                                                  CONCAT14(-(pcVar2[4] == pcVar1[4]), \n                                                                                           CONCAT13(-(pcVar2[3] ==\n                                                                                                     pcVar1[3]), \n                                                                                                    CONCAT12(-(pcVar2[2]\n                                                                                                              == pcVar1[\n                                                            2]), CONCAT11(-(pcVar2[1] == pcVar1[1]), \n                                                                          -(*pcVar2 == *pcVar1))))))))))))))));\n            if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                 (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                 (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                 (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                 (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                 (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe |\n                (-(pcVar2[0xf] == pcVar1[0xf]) >> 7) << 0xf) == 0xffff) {\n                return;\n            }\n            pauStackX8 = *pauStackX8 + 1;\n        } while (pauStackX8 < pauVar4);\n    }\n    else {\n        if (uStackX32 < 0x21) {\n            auVar6 = vmovdqu_avx(*pauStackX24);\n            pauVar4 = pauStackX8[-1];\n            do {\n                auVar8 = vmovdqu_avx(*pauStackX8);\n                auVar8 = vpcmpeqb_avx2(auVar8, auVar6);\n                if ((SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) == 0xffffffff) {\ncode_r0x00402a68:\n                    vzeroupper_avx();\n                    return;\n                }\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < *pauVar4 + uStackX16 + 1);\n        }\n        else {\n            pauVar4 = pauStackX8 + ((uStackX16 + 1) - uStackX32);\n            auVar6 = vmovdqu_avx(*(pauStackX24[-1] + uStackX32));\n            auVar8 = vmovdqu_avx(*pauStackX24);\n            do {\n                while( true ) {\n                    auVar9 = vmovdqu_avx(*pauStackX8);\n                    auVar9 = vpcmpeqb_avx2(auVar9, auVar8);\n                    if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                    break;\n                    pauStackX8 = *pauStackX8 + 1;\n                    if (pauVar4 <= pauStackX8) goto code_r0x00402a5d;\n                }\n                auVar9 = vmovdqu_avx(*(pauStackX8[-1] + uStackX32));\n                auVar9 = vpcmpeqb_avx2(auVar9, auVar6);\n                if ((SUB321(auVar9 >> 7, 0) & 1 | (SUB321(auVar9 >> 0xf, 0) & 1) << 1 |\n                     (SUB321(auVar9 >> 0x17, 0) & 1) << 2 | (SUB321(auVar9 >> 0x1f, 0) & 1) << 3 |\n                     (SUB321(auVar9 >> 0x27, 0) & 1) << 4 | (SUB321(auVar9 >> 0x2f, 0) & 1) << 5 |\n                     (SUB321(auVar9 >> 0x37, 0) & 1) << 6 | (SUB321(auVar9 >> 0x3f, 0) & 1) << 7 |\n                     (SUB321(auVar9 >> 0x47, 0) & 1) << 8 | (SUB321(auVar9 >> 0x4f, 0) & 1) << 9 |\n                     (SUB321(auVar9 >> 0x57, 0) & 1) << 10 | (SUB321(auVar9 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB321(auVar9 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar9 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB321(auVar9 >> 0x77, 0) & 1) << 0xe | SUB321(auVar9 >> 0x7f, 0) << 0xf |\n                     (SUB321(auVar9 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar9 >> 0x8f, 0) & 1) << 0x11 |\n                     (SUB321(auVar9 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar9 >> 0x9f, 0) & 1) << 0x13 |\n                     (SUB321(auVar9 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar9 >> 0xaf, 0) & 1) << 0x15 |\n                     (SUB321(auVar9 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar9 >> 0xbf, 0) << 0x17 |\n                     (SUB321(auVar9 >> 199, 0) & 1) << 0x18 | (SUB321(auVar9 >> 0xcf, 0) & 1) << 0x19 |\n                     (SUB321(auVar9 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar9 >> 0xdf, 0) & 1) << 0x1b |\n                     (SUB321(auVar9 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar9 >> 0xef, 0) & 1) << 0x1d |\n                     (SUB321(auVar9 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar9 >> 0xff, 0) << 0x1f) == 0xffffffff)\n                goto code_r0x00402a68;\n                pauStackX8 = *pauStackX8 + 1;\n            } while (pauStackX8 < pauVar4);\n        }\ncode_r0x00402a5d:\n        vzeroupper_avx();\n    }\n    return;\n}\n",
        "token_count": 6763
    },
    "00404740": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404740(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404ae0(arg1);\n        return;\n    }\n    if (*0x53ecd8 == NULL) {\n        iVar8 = 0;\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = **0x53ecd8;\n        iVar8 = (*0x53ecd8)[1];\n    }\n    for (iVar12 = 0; iVar12 < iVar8; iVar12 = iVar12 + 1) {\n        iVar2 = *(iVar10 + iVar12 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00404ae0(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00404ae0(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x565870) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.0045a260();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar11 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x565870) + (uVar11 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar11 = 0;\n                uVar13 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar10;\n                uVar13 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar10 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar7 = unaff_RBX;\n            do {\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar13 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar7;\n                    cVar4 = fcn.00404340(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.00433640();\n                        break;\n                    }\n                    uVar11 = uVar11 & 0xffffffff;\n                    uVar7 = unaff_RBX;\n                }\n                if (uVar13 < 3) {\n                    uVar13 = uVar13 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar11 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar9 = fcn.00412020(uVar11 & 0xffffffff);\n                    uVar11 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar13 = 0;\n                }\n                uVar5 = uVar5 + 8;\n            } while( true );\n        }\n        fcn.0045caa0(0x40);\n    }\n    fcn.0045caa0(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1173
    },
    "00408940": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408940(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t noname_0;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00454ee0();\n    uVar5 = *(in_RAX + 0x17);\n    noname_0 = uVar5;\n    if (uVar5 < 9) {\n        if (4 < uVar5) {\n            if (6 < uVar5) {\n                if (uVar5 == 7) {\n                    fcn.00434de0();\n                    fcn.004356e0();\n                    fcn.004356e0();\n                    fcn.004353e0();\n                    fcn.004356e0();\n                    fcn.00434e60();\n                    return;\n                }\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.004356e0();\n                fcn.004353e0();\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n            if (uVar5 == 5) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.004356e0();\n                fcn.004354e0();\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n        if (2 < uVar5) {\n            if (uVar5 == 3) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.004356e0();\n                fcn.004354e0();\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n        if (uVar5 == 1) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.00435080();\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n        if (uVar5 == 2) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n    }\n    else {\n        if (uVar5 < 0xd) {\n            if (10 < uVar5) {\n                if (uVar5 == 0xb) {\n                    fcn.00434de0();\n                    fcn.004356e0();\n                    fcn.004356e0();\n                    fcn.004353e0();\n                    fcn.004356e0();\n                    fcn.00434e60();\n                    return;\n                }\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.004356e0();\n                fcn.004353e0();\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n            if (uVar5 == 9) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.004356e0();\n                fcn.004353e0();\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n        if (uVar5 < 0xf) {\n            if (uVar5 == 0xd) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.004356e0();\n                fcn.004350e0(noname_0, param_2);\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004350e0(noname_0, param_2);\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n        if (uVar5 == 0xf) {\n            fVar1 = *unaff_RBX;\n            fVar2 = *(unaff_RBX + 4);\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00435340(fVar1, fVar2);\n            fcn.00434e60();\n            return;\n        }\n        if (uVar5 == 0x10) {\n            uVar3 = *unaff_RBX;\n            uVar4 = unaff_RBX[1];\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00435340(uVar3, uVar4);\n            fcn.00434e60();\n            return;\n        }\n        if (uVar5 == 0x18) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            return;\n        }\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.00435660();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 1479
    },
    "0040dcc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040dcc0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x40) = 0x40ddb9;\n                    (*pcVar1)();\n                }\n                return 0x5944a0;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x40) = 0x40dd2b;\n                uVar4 = (*pcVar1)();\n                iVar10 = *(*0x20 + 0x10);\n                uVar8 = (1 << (*(iVar10 + 9) & 0x3f)) - 1;\n                iVar9 = *(*0x20 + 8);\n                iVar2 = *(iVar10 + 0x18);\n                iVar5 = (uVar8 & uVar4) * *(iVar9 + 0x52) + *(iVar10 + 0x10);\n                if (iVar2 != 0) {\n                    if ((*(iVar10 + 8) & 8) == 0) {\n                        uVar8 = uVar8 >> 1;\n                    }\n                    iVar10 = *(iVar9 + 0x52) * (uVar8 & uVar4);\n                    if (2 < *(iVar2 + iVar10) - 2U) {\n                        iVar5 = iVar2 + iVar10;\n                    }\n                }\n                uVar8 = uVar4 >> 0x38;\n                if (uVar4 >> 0x38 < 5) {\n                    uVar8 = (uVar4 >> 0x38) + 5;\n                }\n                *(*0x20 + -0x21) = uVar8;\n                do {\n                    if (iVar5 == 0) {\n                        return 0x5944a0;\n                    }\n                    *(*0x20 + -0x18) = iVar5;\n                    for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                        if (uVar8 == *(uVar4 + iVar5)) {\n                            *(*0x20 + -0x20) = uVar4;\n                            piVar6 = *(iVar9 + 0x50) * uVar4 + iVar5 + 8;\n                            if ((*(iVar9 + 0x54) & 1) != 0) {\n                                piVar6 = *piVar6;\n                            }\n                            pcVar1 = **(*(iVar9 + 0x30) + 0x18);\n                            *(*0x20 + -0x40) = 0x40de50;\n                            cVar3 = (*pcVar1)(piVar6);\n                            if (cVar3 != '\\0') {\n                                iVar10 = *(*0x20 + 8);\n                                piVar6 = *(*0x20 + -0x18) + *(iVar10 + 0x51) * *(*0x20 + -0x20) + *(iVar10 + 0x50) * 8 +\n                                         8;\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    piVar6 = *piVar6;\n                                }\n                                return piVar6;\n                            }\n                            uVar8 = *(*0x20 + -0x21);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + 8);\n                        }\n                        else if (*(uVar4 + iVar5) == '\\0') {\n                            return 0x5944a0;\n                        }\n                    }\n                    iVar5 = *(iVar5 + *(iVar9 + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x40) = 0x40dec5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40deda;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1325
    },
    "0040df00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040df00(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0;\n    }\n    uVar3 = (***(in_RAX + 0x48))();\n    uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n    iVar1 = unaff_RBX[3];\n    iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n    if (iVar1 != 0) {\n        if ((*(unaff_RBX + 1) & 8) == 0) {\n            uVar7 = uVar7 >> 1;\n        }\n        iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n        if (2 < *(iVar1 + iVar8) - 2U) {\n            iVar5 = iVar1 + iVar8;\n        }\n    }\n    uVar4 = uVar3 >> 0x38;\n    uVar7 = uVar4;\n    if (uVar3 >> 0x38 < 5) {\n        uVar4 = (uVar3 >> 0x38) + 5;\n        uVar7 = uVar4;\n    }\n    do {\n        if (iVar5 == 0) {\n            return 0;\n        }\n        for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n            if (uVar4 == *(uVar3 + iVar5)) {\n                piVar6 = *(in_RAX + 0x50) * uVar3 + iVar5 + 8;\n                if ((*(in_RAX + 0x54) & 1) != 0) {\n                    piVar6 = *piVar6;\n                }\n                cVar2 = (***(*(in_RAX + 0x30) + 0x18))();\n                if (cVar2 != '\\0') {\n                    return piVar6;\n                }\n                uVar4 = uVar7 & 0xff;\n            }\n            else if (*(uVar3 + iVar5) == '\\0') {\n                return 0;\n            }\n        }\n        iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0040e620": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e620(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t arg1_00;\n    int64_t *piVar5;\n    int64_t *arg2_00;\n    uint64_t uVar6;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593680 == 0) {\n        *(arg1 + 0x10) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045c5e0(arg1, arg2, arg3, arg4);\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if (*0x593680 == 0) {\n            *(arg1 + 0x18) = unaff_RBX;\n        }\n        else {\n            in_RAX = fcn.0045c720(arg1, arg2, arg3, arg4);\n        }\n        *(arg1 + 0x4a) = *(unaff_RBX + 9);\n        if (*0x593680 == 0) {\n            *(arg1 + 0x20) = unaff_RBX[2];\n        }\n        else {\n            in_RAX = fcn.0045c700(arg1, unaff_RBX[2], arg3, arg4);\n        }\n        piVar5 = unaff_RBX;\n        if (*(*(in_RAX + 0x40) + 8) == 0) {\n            if (unaff_RBX[5] == 0) {\n                arg1_00 = arg1;\n                iVar3 = fcn.0040cd00();\n                if (*0x593680 == 0) {\n                    unaff_RBX[5] = iVar3;\n                }\n                else {\n                    fcn.0045c5e0(arg1_00, unaff_RBX, arg3, arg4);\n                }\n            }\n            arg2_00 = piVar5[5];\n            if (*arg2_00 == 0) {\n                uVar4 = fcn.0040cd00();\n                if (*0x593680 == 0) {\n                    *unaff_RBX[5] = uVar4;\n                    piVar5 = unaff_RBX;\n                }\n                else {\n                    fcn.0045c5e0(unaff_RBX, arg2_00, arg3, arg4);\n                    piVar5 = unaff_RBX;\n                }\n            }\n            if (*0x593680 == 0) {\n                *(arg1 + 0x30) = *piVar5[5];\n            }\n            else {\n                fcn.0045c700(arg1, *piVar5[5], arg3, arg4);\n            }\n            if (*0x593680 == 0) {\n                *(arg1 + 0x38) = *(piVar5[5] + 8);\n            }\n            else {\n                fcn.0045c700(arg1, *(piVar5[5] + 8), arg3, arg4);\n            }\n        }\n        uVar6 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar6) * ZEXT816(uVar6 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar6;\n        uVar6 = SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0);\n        if (0x1c < *(piVar5 + 9)) {\n            uVar1 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n            auVar2 = ZEXT816(uVar1) * ZEXT816(uVar1 ^ 0xe7037ed1a0b428db);\n            *(*(unaff_R14 + 0x30) + 0xf0) = uVar1;\n            uVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * 0x80000000 + uVar6;\n        }\n        *(arg1 + 0x40) = (1 << (*(piVar5 + 9) & 0x3f)) - 1U & uVar6;\n        *(arg1 + 0x48) = uVar6 >> (*(piVar5 + 9) & 0x3f) & -(*(piVar5 + 9) < 0x40) & 7;\n        *(arg1 + 0x50) = *(arg1 + 0x40);\n        if ((*(piVar5 + 1) & 3) != 3) {\n            LOCK();\n            *(piVar5 + 1) = *(piVar5 + 1) | 3;\n        }\n        fcn.0040e8a0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 1228
    },
    "0040e8a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e8a0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar (*in_RAX) [16];\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint8_t uVar6;\n    code **ppcVar7;\n    ulong arg1;\n    code **arg2;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    code **arg1_00;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int64_t iVar15;\n    int64_t **ppiVar16;\n    int64_t *piVar17;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = *(in_RAX[1] + 8);\n            if ((*(iVar8 + 8) & 4) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = iVar8;\n                iVar10 = *in_RAX[1];\n                *(*0x20 + -0x28) = iVar10;\n                arg1_00 = *in_RAX[5];\n                iVar5 = *(in_RAX[2] + 8);\n                uVar14 = in_RAX[4][0xb];\n                ppcVar7 = *(in_RAX[5] + 8);\n                do {\n                    if (iVar5 == 0) {\n                        if ((*in_RAX[4] == arg1_00) && (in_RAX[4][9] != '\\0')) {\n                            if (*0x593680 == 0) {\n                                *in_RAX = in_XMM15;\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40ea09;\n                                fcn.0045c6e0(0);\n                                *(*0x20 + -0x70) = 0x40ea12;\n                                fcn.0045c6e0();\n                            }\n                            return;\n                        }\n                        iVar1 = *(iVar8 + 0x18);\n                        if ((iVar1 == 0) || (*(iVar8 + 9) != in_RAX[4][10])) {\n                            iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                            ppcVar7 = 0xffffffffffffffff;\n                        }\n                        else {\n                            uVar13 = *(*(in_RAX[1] + 8) + 9);\n                            if ((*(*(in_RAX[1] + 8) + 8) & 8) == 0) {\n                                uVar13 = uVar13 - 1;\n                            }\n                            iVar15 = ((1 << (uVar13 & 0x3f)) - 1U & arg1_00) * *(iVar10 + 0x52);\n                            iVar5 = iVar1 + iVar15;\n                            ppcVar7 = arg1_00;\n                            if (*(iVar15 + iVar1) - 2U < 3) {\n                                iVar5 = *(iVar10 + 0x52) * arg1_00 + *in_RAX[2];\n                                ppcVar7 = 0xffffffffffffffff;\n                            }\n                        }\n                        arg1_00 = arg1_00 + 1;\n                        if (1 << (in_RAX[4][10] & 0x3f) == arg1_00) {\n                            in_RAX[4][9] = 1;\n                            arg1_00 = NULL;\n                        }\n                        uVar14 = 0;\n                    }\n                    *(*0x20 + -0x40) = arg1_00;\n                    *(*0x20 + -0x48) = ppcVar7;\n                    *(*0x20 + -0x10) = iVar5;\n                    for (; uVar13 = uVar14,  uVar13 < 8; uVar14 = uVar14 + 1) {\n                        uVar12 = in_RAX[4][8] + uVar14;\n                        uVar4 = uVar12 & 7;\n                        if ((*(iVar5 + uVar4) < 2) || (*(iVar5 + uVar4) == 4)) goto code_r0x0040ea1c;\n                        uVar11 = uVar12 & 7;\n                        uVar6 = *(iVar10 + 0x50);\n                        piVar17 = uVar11 * uVar6 + iVar5 + 8;\n                        uVar12 = *(iVar10 + 0x54);\n                        if ((uVar12 & 1) != 0) {\n                            piVar17 = *piVar17;\n                        }\n                        *(*0x20 + -0x49) = uVar13;\n                        *(*0x20 + -0x20) = piVar17;\n                        ppiVar16 = *(iVar10 + 0x51) * uVar11 + uVar6 * 8 + iVar5 + 8;\n                        *(*0x20 + -0x30) = ppiVar16;\n                        arg2 = ppcVar7;\n                        if ((ppcVar7 == 0xffffffffffffffff) || ((*(iVar8 + 8) & 8) != 0)) {\ncode_r0x0040ebe4:\n                            uVar6 = *(iVar5 + uVar4);\n                            uVar11 = uVar6;\n                            if ((uVar6 == 2) || (uVar6 == 3)) {\n                                uVar11 = *(iVar10 + 0x54);\n                                if ((*(iVar10 + 0x54) >> 2 & 1) == 0) {\n                                    arg2 = *(*(iVar10 + 0x30) + 0x18);\n                                    pcVar2 = *arg2;\n                                    *(*0x20 + -0x70) = 0x40ec24;\n                                    uVar6 = (*pcVar2)();\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    ppcVar7 = *(*0x20 + -0x48);\n                                    in_RAX = *(*0x20 + 8);\n                                }\n                                else {\n                                    uVar6 = 1;\n                                }\n                                uVar6 = uVar6 ^ 1;\n                            }\n                            else {\n                                uVar6 = 1;\n                            }\n                            if (uVar6 != 0) {\n                                if (*0x593680 == 0) {\n                                    **in_RAX = *(*0x20 + -0x20);\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40ed05;\n                                    in_RAX = fcn.0045c700(arg1_00, *(*0x20 + -0x20), uVar11, uVar4);\n                                }\n                                if ((*(iVar10 + 0x54) >> 1 & 1) != 0) {\n                                    ppiVar16 = *ppiVar16;\n                                }\n                                if (*0x593680 == 0) {\n                                    *(*in_RAX + 8) = ppiVar16;\n                                }\n                                else {\n                                    *(*0x20 + -0x70) = 0x40ed35;\n                                    in_RAX = fcn.0045c720(*in_RAX + 8, arg1_00, uVar11, uVar4);\n                                }\ncode_r0x0040ed38:\n                                *in_RAX[5] = arg1_00;\n                                if (*(in_RAX[2] + 8) != iVar5) {\n                                    if (*0x593680 == 0) {\n                                        *(in_RAX[2] + 8) = iVar5;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x70) = 0x40ed65;\n                                        in_RAX = fcn.0045c6e0();\n                                    }\n                                }\n                                in_RAX[4][0xb] = uVar13 + 1;\n                                *(in_RAX[5] + 8) = ppcVar7;\n                                return;\n                            }\n                            arg1 = *(*0x20 + -0x20);\n                            *(*0x20 + -0x70) = 0x40ec67;\n                            iVar5 = fcn.0040df00(arg1);\n                            if (iVar5 != 0) {\n                                if (*0x593680 == 0) {\n                                    in_RAX = *(*0x20 + 8);\n                                    **in_RAX = iVar5;\n                                    *(*in_RAX + 8) = iVar8;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(*0x20 + -0x70) = 0x40ecb6;\n                                    fcn.0045c5e0(arg1, arg2, uVar11, uVar4);\n                                    *(*0x20 + -0x70) = 0x40ecc5;\n                                    fcn.0045c720(in_RAX, arg2, uVar11, uVar4);\n                                }\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar13 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                goto code_r0x0040ed38;\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            ppcVar7 = *(*0x20 + -0x48);\n                            iVar8 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x28);\n                            arg1_00 = *(*0x20 + -0x40);\n                            uVar14 = *(*0x20 + -0x49);\n                            iVar5 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = uVar4;\n                            if ((uVar12 >> 2 & 1) == 0) {\n                                pcVar2 = **(*(iVar10 + 0x30) + 0x18);\n                                *(*0x20 + -0x70) = 0x40eae2;\n                                cVar3 = (*pcVar2)();\n                                iVar5 = *(*0x20 + -0x10);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar4 = *(*0x20 + -0x38);\n                                uVar14 = *(*0x20 + -0x49);\n                                ppiVar16 = *(*0x20 + -0x30);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            else {\n                                cVar3 = '\\x01';\n                            }\n                            uVar13 = uVar14;\n                            if (cVar3 == '\\0') {\n                                uVar6 = in_RAX[4][10] - 1;\n                                arg2 = ppcVar7 >> (uVar6 & 0x3f) & -(uVar6 < 0x40);\n                                if ((*(iVar5 + uVar4) & 1) == arg2) goto code_r0x0040ebe4;\n                            }\n                            else {\n                                arg2 = *(iVar10 + 0x48);\n                                pcVar2 = *arg2;\n                                *(*0x20 + -0x70) = 0x40eb6b;\n                                uVar4 = (*pcVar2)();\n                                in_RAX = *(*0x20 + 8);\n                                ppcVar7 = *(*0x20 + -0x48);\n                                if (ppcVar7 == (uVar4 & (1 << (in_RAX[4][10] & 0x3f)) - 1U)) {\n                                    iVar8 = *(*0x20 + -0x18);\n                                    iVar10 = *(*0x20 + -0x28);\n                                    arg1_00 = *(*0x20 + -0x40);\n                                    uVar4 = *(*0x20 + -0x38);\n                                    uVar13 = *(*0x20 + -0x49);\n                                    ppiVar16 = *(*0x20 + -0x30);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    goto code_r0x0040ebe4;\n                                }\n                                iVar8 = *(*0x20 + -0x18);\n                                iVar10 = *(*0x20 + -0x28);\n                                arg1_00 = *(*0x20 + -0x40);\n                                uVar14 = *(*0x20 + -0x49);\n                                iVar5 = *(*0x20 + -0x10);\n                            }\n                        }\ncode_r0x0040ea1c:\n                    }\n                    iVar5 = *(iVar5 + *(iVar10 + 0x52) + -8);\n                    uVar14 = 0;\n                } while( true );\n            }\n            *(*0x20 + -0x70) = 0x40ed8b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x40ed96;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3155
    },
    "0040f040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f040(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f5aa:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40f5be;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x78) = iVar7;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x90) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40f29d;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x88) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40f2e2;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x90);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x80) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40f3c5;\n                                iVar8 = fcn.0040d540(arg1_00);\n                                iVar7 = *(*0x20 + -0x80);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40f4a5;\n                                fcn.004117c0(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x593680 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40f485;\n                                    in_RAX = fcn.0045c740(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40f52f;\n                                fcn.004117c0(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x90);\n                                iVar7 = *(*0x20 + -0x80);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x593680 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40f510;\n                                    in_RAX = fcn.0045c740(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040f213;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40f598;\n                        fcn.0045ca80(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40f5a9;\n                    in_RAX = fcn.00433640();\n                    goto code_r0x0040f5aa;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040f213:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40f1f4;\n            fcn.00411ac0(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x78);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40f179;\n        fcn.0040f5e0(iVar7);\n    }\n    return;\n}\n",
        "token_count": 3278
    },
    "0040f5e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f5e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    uVar3 = iVar1 + 0x401;\n    if (arg1 < uVar3) {\n        uVar3 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != uVar3 && (*(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2U < 3)))\n    {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x593680 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c6e0(0);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x593680 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.0045c6e0();\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 432
    },
    "0040f6e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f6e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5944a0;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f756;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x5944a0;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40f849;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40f85d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 956
    },
    "0040f880": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040f880(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5944a0;\n            }\n            arg1._0_4_ = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    iVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x40f8f6;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    iVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            iVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (iVar4 == 0) {\n                        return 0x5944a0;\n                    }\n                    piVar5 = iVar4 + 8;\n                    for (uVar6 = 0; uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + iVar4))) {\n                            return uVar6 * *(in_RAX + 0x51) + iVar4 + 0x28;\n                        }\n                        piVar5 = piVar5 + 1;\n                    }\n                    iVar4 = *(iVar4 + *(in_RAX + 0x52) + -8);\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x40f9f6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x40fa0a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 958
    },
    "0040fdc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fdc0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0041014b:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41015f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x68) = iVar7;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40ffe2;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x410065;\n                                iVar8 = fcn.0040d540(arg1_00);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x4100d6;\n                            fcn.004117c0(arg1_01);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x80);\n                            goto code_r0x0040ff69;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x410139;\n                        fcn.0045ca80(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x41014a;\n                    in_RAX = fcn.00433640();\n                    goto code_r0x0041014b;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040ff69:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40ff4a;\n            fcn.00411ac0(uVar1 * uVar3 + iVar7 + 8);\n            uVar3 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40fed9;\n        fcn.0040f5e0(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2247
    },
    "00410180": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00410180(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5944a0;\n            }\n            arg1 = *(unaff_RBX + 1);\n            if ((*(unaff_RBX + 1) & 4) == 0) {\n                if (*(unaff_RBX + 9) == '\\0') {\n                    piVar4 = unaff_RBX[2];\n                }\n                else {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    pcVar1 = **(in_RAX + 0x48);\n                    *(*0x20 + -0x20) = 0x4101f6;\n                    uVar3 = (*pcVar1)();\n                    iVar8 = *(*0x20 + 0x10);\n                    uVar6 = (1 << (*(iVar8 + 9) & 0x3f)) - 1;\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(iVar8 + 0x18);\n                    piVar4 = (uVar6 & uVar3) * *(in_RAX + 0x52) + *(iVar8 + 0x10);\n                    if (iVar2 != 0) {\n                        if ((*(iVar8 + 8) & 8) == 0) {\n                            uVar6 = uVar6 >> 1;\n                        }\n                        iVar8 = *(in_RAX + 0x52) * (uVar6 & uVar3);\n                        if (2 < *(iVar2 + iVar8) - 2U) {\n                            piVar4 = iVar2 + iVar8;\n                        }\n                    }\n                }\n                do {\n                    if (piVar4 == NULL) {\n                        return 0x5944a0;\n                    }\n                    piVar5 = piVar4;\n                    for (uVar6 = 0; piVar5 = piVar5 + 1,  uVar6 < 8; uVar6 = uVar6 + 1) {\n                        if ((*(*0x20 + 0x18) == *piVar5) && (1 < *(uVar6 + piVar4))) {\n                            return piVar4 + *(in_RAX + 0x51) * uVar6 + 0x48;\n                        }\n                    }\n                    piVar4 = *(piVar4 + (*(in_RAX + 0x52) - 8));\n                } while( true );\n            }\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x20) = 0x4102f6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x41030b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 952
    },
    "004106e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004106e0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong *puVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00410adb:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x410aef;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *puVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x48;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x48;\n        }\n        *(*0x20 + -0x68) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x70) = iVar7;\n        for (; arg1 = uVar4,  puVar6 != NULL; puVar6 = *(puVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = puVar6;\n            arg1_00 = puVar6 + 9;\n            puVar9 = puVar6;\n            for (iVar8 = 0; puVar9 = puVar9 + 1,  iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = *(puVar6 + iVar8);\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x410902;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg2 = *(*0x20 + -0x68);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            puVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(puVar6 + iVar8) = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x78) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x410986;\n                                iVar8 = fcn.0040d540(uVar3);\n                                iVar7 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x48;\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x68);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x78);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            if ((*(*(in_RAX + 0x30) + 8) == 0) || (*0x593680 == '\\0')) {\n                                **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            }\n                            else {\n                                puVar6 = *(*0x20 + iVar7 + -0x38);\n                                uVar3 = *puVar9;\n                                if (*0x593680 == 0) {\n                                    *puVar6 = uVar3;\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = 0x410a3c;\n                                    fcn.0045c760(arg1, arg2, uVar3, puVar6);\n                                }\n                            }\n                            *(*0x20 + -0xa8) = 0x410a65;\n                            fcn.004117c0(arg1_00);\n                            iVar7 = *(*0x20 + -0x78);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 8;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x68);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x70);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x00410888;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x410ac9;\n                        fcn.0045ca80(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x410ada;\n                    in_RAX = fcn.00433640();\n                    goto code_r0x00410adb;\n                }\n                *(puVar6 + iVar8) = '\\x04';\ncode_r0x00410888:\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x410869;\n            fcn.00411ac0(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x68);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x70);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x4107f9;\n        fcn.0040f5e0(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2466
    },
    "00410b20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00410b20(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    int64_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t *unaff_RDI;\n    int64_t iVar11;\n    int64_t iVar12;\n    int32_t **ppiVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n                return 0x5944a0;\n            }\n            if ((*(unaff_RBX + 1) & 4) == 0) break;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x68) = 0x410ec5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x410edf;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x00410ba7:\n        *(*0x20 + 0x10) = unaff_RBX;\n        pcVar1 = **(in_RAX + 0x48);\n        *(*0x20 + -0x68) = 0x410bc2;\n        uVar7 = (*pcVar1)();\n        iVar12 = *(*0x20 + 0x10);\n        uVar8 = (1 << (*(iVar12 + 9) & 0x3f)) - 1;\n        iVar11 = *(*0x20 + 8);\n        iVar2 = *(iVar12 + 0x18);\n        iVar6 = (uVar8 & uVar7) * *(iVar11 + 0x52) + *(iVar12 + 0x10);\n        if (iVar2 != 0) {\n            if ((*(iVar12 + 8) & 8) == 0) {\n                uVar8 = uVar8 >> 1;\n            }\n            iVar12 = *(iVar11 + 0x52) * (uVar8 & uVar7);\n            if (2 < *(iVar2 + iVar12) - 2U) {\n                iVar6 = iVar2 + iVar12;\n            }\n        }\n        uVar8 = uVar7 >> 0x38;\n        if (uVar7 >> 0x38 < 5) {\n            uVar8 = (uVar7 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x41) = uVar8;\n        do {\n            if (iVar6 == 0) {\n                return 0x5944a0;\n            }\n            *(*0x20 + -0x18) = iVar6;\n            piVar9 = iVar6 + 8;\n            for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n                if ((piVar9[1] == *(*0x20 + 0x20)) && (*(uVar7 + iVar6) == uVar8)) {\n                    if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410ce5:\n                        return iVar6 + uVar7 * *(iVar11 + 0x51) + 0x88;\n                    }\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = piVar9;\n                    *(*0x20 + -0x68) = 0x410cb7;\n                    cVar5 = fcn.004027a0(*(*0x20 + 0x20), piVar9);\n                    if (cVar5 != '\\0') {\n                        iVar6 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + 8);\n                        goto code_r0x00410ce5;\n                    }\n                    uVar8 = *(*0x20 + -0x41);\n                    iVar6 = *(*0x20 + -0x18);\n                    piVar9 = *(*0x20 + -0x28);\n                    uVar7 = *(*0x20 + -0x38);\n                    iVar11 = *(*0x20 + 8);\n                }\n                piVar9 = piVar9 + 2;\n            }\n            iVar6 = *(iVar6 + *(iVar11 + 0x52) + -8);\n        } while( true );\n    }\n    iVar12 = unaff_RBX[2];\n    *(*0x20 + -0x10) = iVar12;\n    if (0x1f < unaff_RDI) {\n        ppiVar13 = iVar12 + 8;\n        uVar8 = 8;\n        for (uVar7 = 0; uVar7 < 8; uVar7 = uVar7 + 1) {\n            if ((ppiVar13[1] == unaff_RDI) && (1 < *(uVar7 + iVar12))) {\n                piVar3 = *ppiVar13;\n                piVar4 = *(*0x20 + 0x18);\n                if (piVar4 == piVar3) {\n                    return uVar7 * *(in_RAX + 0x51) + iVar12 + 0x88;\n                }\n                if (((*piVar3 == *piVar4) && (*(unaff_RDI + piVar4 + -4) == *(unaff_RDI + piVar3 + -4))) &&\n                   (bVar14 = uVar8 != 8,  uVar8 = uVar7,  bVar14)) goto code_r0x00410ba7;\n            }\n            else if (*(uVar7 + iVar12) == '\\0') break;\n            ppiVar13 = ppiVar13 + 2;\n        }\n        if (uVar8 != 8) {\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x68) = 0x410db8;\n            cVar5 = fcn.004027a0(unaff_RDI, uVar8 * 0x10 + iVar12 + 8);\n            if (cVar5 != '\\0') {\n                return *(*0x20 + -0x10) + *(*0x20 + -0x40) * *(*(*0x20 + 8) + 0x51) + 0x88;\n            }\n        }\n        return 0x5944a0;\n    }\n    piVar9 = iVar12 + 8;\n    uVar8 = 0;\n    do {\n        if (7 < uVar8) {\n            return 0x5944a0;\n        }\n        if ((piVar9[1] == *(*0x20 + 0x20)) && (1 < *(uVar8 + iVar12))) {\n            if (*(*0x20 + 0x18) == *piVar9) {\ncode_r0x00410e83:\n                return iVar12 + uVar8 * *(in_RAX + 0x51) + 0x88;\n            }\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x20) = piVar9;\n            *(*0x20 + -0x68) = 0x410e5a;\n            cVar5 = fcn.004027a0(*(*0x20 + 0x20), piVar9);\n            if (cVar5 != '\\0') {\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x30);\n                iVar12 = *(*0x20 + -0x10);\n                goto code_r0x00410e83;\n            }\n            in_RAX = *(*0x20 + 8);\n            uVar8 = *(*0x20 + -0x30);\n            piVar9 = *(*0x20 + -0x20);\n            iVar12 = *(*0x20 + -0x10);\n        }\n        else if (*(uVar8 + iVar12) == '\\0') {\n            return 0x5944a0;\n        }\n        uVar8 = uVar8 + 1;\n        piVar9 = piVar9 + 2;\n    } while( true );\n}\n",
        "token_count": 2193
    },
    "004113a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004113a0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0041177b:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41178f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x78) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x68) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        for (; arg1 = uVar4,  pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x80) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x4115c2;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x78);\n                            iVar8 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x70) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x411646;\n                                iVar8 = fcn.0040d540(uVar3);\n                                iVar7 = *(*0x20 + -0x70);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x78);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x593680 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x4116ed;\n                                fcn.0045c760(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x411705;\n                            fcn.004117c0(arg1_00);\n                            iVar7 = *(*0x20 + -0x70);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x78);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x80);\n                            iVar7 = *(*0x20 + -0x68);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x00411553;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x411769;\n                        fcn.0045ca80(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x41177a;\n                    in_RAX = fcn.00433640();\n                    goto code_r0x0041177b;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x00411553:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n            uVar4 = arg1;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x411534;\n            fcn.00411ac0(uVar1 * arg2 + iVar7 + 8);\n            arg2 = *(*0x20 + -0x78);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x68);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x4114bf;\n        fcn.0040f5e0(iVar7);\n    }\n    return;\n}\n",
        "token_count": 2398
    },
    "00412240": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412240(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x593684 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x565870);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x53ecd8 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x53ecd8;\n                iVar15 = (*0x53ecd8)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x53ecd8 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x53ecd8;\n                        iVar15 = (*0x53ecd8)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.004128c0(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.004128c0(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x565870) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar13 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar13 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar10 = 0; uVar10 < arg1; uVar10 = uVar10 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1260);\n                        *puVar4 = *(uVar10 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x1260) + 0x10;\n                        *(iVar12 + 0x1260) = iVar15;\n                        if (*(iVar12 + 0x1268) == iVar15) {\n                            fcn.0042cca0();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.00412020(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            else {\n                uVar10 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1260);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x1260) + 0x10;\n                        *(iVar12 + 0x1260) = iVar15;\n                        if (*(iVar12 + 0x1268) == iVar15) {\n                            unaff_RBX = uVar10;\n                            fcn.0042cca0();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar10 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar10;\n                        puVar14 = fcn.00412020(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                        uVar10 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.0045caa0(0x40);\n    }\n    fcn.00433640();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1703
    },
    "004126c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004126c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x593684 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x565870) + (uVar9 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                uVar11 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar10 + (in_RAX >> 5 & 0x1ffff);\n                uVar11 = in_RAX >> 3 & 3;\n                puVar8 = iVar10 + 0x1ffff;\n            }\n            uVar7 = unaff_RBX;\n            for (uVar5 = 0; uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar11 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar10 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar10;\n                    if (*(iVar1 + 0x1268) == iVar10) {\n                        unaff_RBX = uVar7;\n                        fcn.0042cca0();\n                        uVar9 = uVar9 & 0xffffffff;\n                        uVar7 = unaff_RBX;\n                    }\n                }\n                if (uVar11 < 3) {\n                    uVar11 = uVar11 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar9 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar12 = fcn.00412020(uVar9 & 0xffffffff);\n                    uVar9 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar11 = 0;\n                }\n            }\n            return;\n        }\n        fcn.0045caa0(0x40);\n    }\n    fcn.00433640();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 779
    },
    "00412e00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413308)\n\nvoid fcn.00412e00(uint64_t arg1)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint8_t *in_RAX;\n    uint8_t *puVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int8_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t *puVar10;\n    uint64_t uVar11;\n    uint64_t *unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar17;\n    uint8_t uVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint64_t uVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar16;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar7 < 0x40) {\n                puVar22 = in_RAX + 0x800000000000 >> 0x16;\n                uVar25 = puVar22 & 0xfffff;\n                iVar20 = *(*(uVar7 * 8 + 0x565870) + uVar25 * 8);\n                if (iVar20 == 0) {\n                    puVar3 = NULL;\n                    uVar5 = 0;\n                    puVar24 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar3 = iVar20 + (in_RAX >> 5 & 0x1ffff);\n                    uVar5 = in_RAX >> 3 & 3;\n                    puVar24 = iVar20 + 0x1ffff;\n                    puVar10 = puVar22;\n                }\n                puVar1 = unaff_RDI[4];\n                uVar13 = uVar5;\n                if (unaff_RBX == 0x10) {\n                    iVar6 = uVar5;\n                    if (*unaff_RDI != 8) {\n                        *puVar3 = -(uVar13 < 0x20) &\n                                  (*puVar1 & 3 |\n                                  (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) <<\n                                  iVar6 | ~(0x33 << iVar6 & -(uVar13 < 0x20)) & *puVar3;\n                        return;\n                    }\n                    *puVar3 = *puVar3 | 0x33 << iVar6 & -(uVar13 < 0x20);\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar14 = *puVar1;\n                    if (*unaff_RDI == 8) {\n                        uVar14 = 7;\n                    }\n                    uVar14 = (uVar14 & 7) << 4 | uVar14 & 7;\n                    uVar16 = (uVar14 & 0x40) >> 1;\n                    uVar15 = uVar16 | uVar14;\n                    uVar17 = uVar15 | 0x10;\n                    uVar19 = uVar17;\n                    if (uVar13 < 2) {\n                        if (uVar13 == 0) {\n                            *puVar3 = *puVar3 & 0x88 | uVar15 | 0x10;\n                        }\n                        else {\n                            *puVar3 = uVar17 << 1 | *puVar3 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xeb) = uVar19;\n                        if (uVar13 == 2) {\n                            *puVar3 = (uVar16 | uVar14 & 0x33 | 0x10) << 2 | *puVar3 & 0x33;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x413137;\n                                puVar3 = fcn.00412020(puVar10 & 0xffffffff);\n                                uVar19 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar19 >> 2 & 0x11 | *puVar3 & 0xee;\n                        }\n                        else if (uVar13 == 3) {\n                            *puVar3 = *puVar3 & 0x77 | (uVar14 & 0x11 | 0x10) << 3;\n                            if (puVar3 == puVar24) {\n                                *(*0x20 + -0x138) = 0x413192;\n                                puVar3 = fcn.00412020(puVar10 & 0xffffffff);\n                                uVar19 = *(*0x20 + -0xeb);\n                            }\n                            else {\n                                puVar3 = puVar3 + 1;\n                            }\n                            *puVar3 = uVar19 >> 1 & 0x33 | *puVar3 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = puVar1;\n                *(*0x20 + -0x30) = puVar3;\n                uVar23 = puVar10 & 0xffffffff;\n                uVar8 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar3 = in_RAX;\n                if (uVar23 == uVar8) {\n                    puVar3 = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x60) = uVar25;\n                *(*0x20 + -0x68) = uVar8;\n                *(*0x20 + -0x70) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x78) = puVar22;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar3;\n                    uVar7 = *unaff_RDI;\n                    if (arg1 <= uVar7) {\n                        uVar4 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                        goto code_r0x004134ca;\n                    }\n                    *(*0x20 + -0x80) = uVar7;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        puVar22 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xa8) = puVar3;\n                        *(*0x20 + -200) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        puVar3 = *(*0x20 + -0xa8);\n                        while (uVar11 = *(*0x20 + -200),  uVar11 < uVar25) {\n                            uVar19 = *puVar22;\n                            puVar22 = puVar22 + 1;\n                            uVar8 = *(*0x20 + -0x68);\n                            *(*0x20 + -200) = uVar11 + 8;\n                            *(*0x20 + -0xb0) = *(*0x20 + -0xb0) | uVar19 << (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        uVar7 = uVar7 >> 3;\n                        if (uVar7 * 2 < 0x3a) {\n                            uVar11 = *(*0x20 + -0xb0);\n                            for (uVar25 = uVar7; uVar25 < 0x41; uVar25 = uVar25 * 2) {\n                                *(*0x20 + -0xd8) = uVar11;\n                                uVar11 = uVar11 << (uVar25 & 0x3f) & -(uVar25 < 0x40) | *(*0x20 + -0xd8);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar7 == '\\0') {\n                                *(*0x20 + -0x138) = 0x413a59;\n                                fcn.00431cc0();\n                                goto code_r0x00413a59;\n                            }\n                            *(*0x20 + -0xea) = uVar7 & 0xff;\n                            uVar7 = (0x39 / *(*0x20 + -0xea)) * uVar7;\n                            uVar11 = (1 << (uVar7 & 0x3f) & -(uVar7 < 0x40)) - 1 & uVar11;\n                            puVar3 = *(*0x20 + -0x38);\n                            uVar8 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            uVar11 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0xd0) = uVar7;\n                        uVar25 = 0;\n                        *(*0x20 + -0xd8) = uVar11;\n                        puVar10 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar7 = (uVar7 >> 3) + (uVar25 - 1) * -8;\n                        uVar25 = (uVar25 + *(*0x20 + -0x48)) - 1;\n                        *(*0x20 + -0xd0) = 0;\n                        *(*0x20 + -0xd8) = 0;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    break;\n                }\n                *(*0x20 + -0x88) = uVar23;\n                uVar7 = unaff_RDI[1];\n                uVar25 = *unaff_RDI;\n                *(*0x20 + -0x138) = 0x413070;\n                fcn.00413aa0(puVar10 & 0xffffffff, uVar7, uVar25, arg1);\n                bVar26 = *(*0x20 + -0x88) == *(*0x20 + -0x68);\n                goto code_r0x00413261;\n            }\ncode_r0x00413a59:\n            arg1 = 0x40;\n            *(*0x20 + -0x138) = 0x413a66;\n            in_RAX = fcn.0045caa0(0x40);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + -8) = 0x413a85;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x004138d2:\n    uVar4 = *(*0x20 + -0xd0);\n    *(*0x20 + -0x28) = uVar25;\n    *(*0x20 + -0xc0) = uVar7;\n    puVar22 = *(*0x20 + -0x78);\n    uVar7 = *(*0x20 + -0x80);\ncode_r0x004134ca:\n    if (puVar10 == NULL) {\n        uVar25 = *(*0x20 + -0xd8);\n        *(*0x20 + -0xd0) = uVar4;\n        puVar22 = *(*0x20 + -0x78);\n    }\n    else {\n        uVar25 = *puVar10;\n        puVar10 = puVar10 + 1;\n        *(*0x20 + -0xa0) = puVar3;\n        *(*0x20 + -0xd0) = 8;\n        puVar3 = *(*0x20 + -0xa0);\n    }\n    if (arg1 == uVar7) {\n        uVar7 = unaff_RDI[1];\ncode_r0x0041354f:\n        uVar7 = uVar7 >> 3;\n        if (uVar7 != 0) {\n            if (uVar5 == 0) {\n                uVar19 = uVar25 & 0xf | 0xf0;\n                if (4 < uVar7) {\n                    *puVar3 = uVar19;\n                    iVar2 = 4;\n                    iVar20 = *(*0x20 + -0xd0) + -4;\n                    uVar5 = 4;\n                    goto code_r0x0041361a;\n                }\n                puVar22 = puVar3;\n                uVar25 = 4;\n                goto code_r0x004137c0;\n            }\n            if (uVar5 == 2) goto code_r0x004135aa;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x138) = 0x41386f;\n            fcn.00433640();\n        }\n        *(*0x20 + -0x138) = 0x413877;\n        uVar4 = fcn.00454ee0();\n        *(*0x20 + -0x18) = uVar4;\n        *(*0x20 + -0x98) = unaff_RBX;\n        *(*0x20 + -0x138) = 0x41388c;\n        fcn.00434de0();\n        *(*0x20 + -0x138) = 0x41389d;\n        fcn.004356e0();\n        *(*0x20 + -0x138) = 0x4138b2;\n        fcn.004356e0();\n        *(*0x20 + -0x138) = 0x4138b7;\n        fcn.00435040();\n        *(*0x20 + -0x138) = 0x4138bc;\n        fcn.00434e60();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x138) = 0x4138cd;\n        fcn.00433640();\n    }\n    else if (uVar7 != 0) {\n        uVar7 = uVar7 * (arg1 / uVar7 - 1) + unaff_RDI[1];\n        puVar3 = *(*0x20 + -0x38);\n        arg1 = uVar8;\n        goto code_r0x0041354f;\n    }\n    *(*0x20 + -0x138) = 0x4138d2;\n    puVar3 = fcn.00431cc0();\n    puVar10 = puVar22;\n    goto code_r0x004138d2;\ncode_r0x004135aa:\n    uVar19 = (uVar25 & 3) << 2;\n    uVar18 = uVar19 | 0x40;\n    if (1 < uVar7) {\n        uVar18 = uVar19 | 0xc0;\n    }\n    *puVar3 = uVar18 | *puVar3 & 0x33;\n    puVar22 = puVar3 + 1;\n    if (uVar7 < 3) {\n        uVar19 = 0;\n        uVar25 = 6;\n    }\n    else {\n        iVar2 = 2;\n        iVar20 = *(*0x20 + -0xd0) + -2;\n        uVar5 = 2;\ncode_r0x0041361a:\n        puVar22 = puVar3 + 1;\n        uVar25 = uVar25 >> iVar2;\n        iVar12 = *(*0x20 + -0xd8);\n        uVar11 = iVar20 - 4;\n        while( true ) {\n            *(*0x20 + -0xb0) = uVar25;\n            uVar19 = uVar25 & 0xf | 0xf0;\n            uVar25 = uVar5 + 4;\n            if (uVar7 <= uVar5 + 4) break;\n            *puVar22 = uVar19;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            uVar19 = uVar11;\n            if (puVar10 == *(*0x20 + -0x28)) {\n                if (puVar10 == NULL) {\n                    if (uVar11 < 8) {\n                        uVar25 = uVar25 | iVar12 << (uVar19 & 0x3f);\n                        uVar11 = uVar11 + *(*0x20 + -0xc0);\n                        iVar12 = *(*0x20 + -0xd8);\n                    }\n                    uVar21 = uVar11 - 8;\n                }\n                else {\n                    uVar25 = uVar25 | -(uVar11 < 0x40) & *puVar10 << (uVar19 & 0x3f);\n                    uVar21 = uVar11 + *(*0x20 + -0xc0);\n                    if (uVar21 < 8) {\n                        uVar25 = uVar25 | **(*0x20 + -0x48) << (uVar21 & 0x3f);\n                        puVar10 = *(*0x20 + -0x48) + 1;\n                    }\n                    else {\n                        uVar21 = (uVar11 + *(*0x20 + -0xc0)) - 8;\n                        puVar10 = *(*0x20 + -0x48);\n                    }\n                    uVar8 = *(*0x20 + -0x68);\n                }\n            }\n            else if (uVar11 < 8) {\n                uVar25 = uVar25 | *puVar10 << (uVar19 & 0x3f);\n                puVar10 = puVar10 + 1;\n                uVar21 = uVar11;\n            }\n            else {\n                uVar21 = uVar11 - 8;\n            }\n            *(*0x20 + -0xb0) = uVar25;\n            uVar19 = uVar25 & 0xf | 0xf0;\n            uVar5 = uVar5 + 8;\n            if (uVar7 <= uVar5) {\n                puVar22 = puVar22 + 1;\n                uVar25 = uVar5;\n                break;\n            }\n            puVar22[1] = uVar19;\n            uVar25 = *(*0x20 + -0xb0) >> 4;\n            puVar22 = puVar22 + 2;\n            uVar11 = uVar21;\n        }\n    }\ncode_r0x004137c0:\n    if (uVar7 < uVar25) {\n        uVar7 = -((uVar25 - uVar7) + -4);\n        uVar18 = (1 << (uVar7 & 0x3f) & -(uVar7 < 0x40)) - 1;\n        uVar19 = uVar19 & (uVar18 * '\\x10' | uVar18);\n    }\n    uVar7 = unaff_RBX >> 3;\n    if (uVar25 <= uVar7) {\n        *puVar22 = uVar19;\n        while( true ) {\n            puVar22 = puVar22 + 1;\n            uVar25 = uVar25 + 4;\n            if (uVar7 < uVar25) break;\n            *puVar22 = 0;\n        }\n        uVar19 = 0;\n    }\n    if (uVar25 == uVar7 + 2) {\n        *puVar22 = uVar19 | *puVar22 & 0xcc;\n        bVar26 = uVar23 == uVar8;\n    }\n    else {\n        bVar26 = uVar23 == uVar8;\n    }\ncode_r0x00413261:\n    if (!bVar26) {\n        iVar20 = *(*(*(*0x20 + -0x70) * 8 + 0x565870) + *(*0x20 + -0x60) * 8);\n        if (iVar20 == 0) {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = NULL;\n            uVar13 = 0;\n            puVar10 = NULL;\n            uVar7 = 0;\n        }\n        else {\n            puVar3 = *(*0x20 + -0x58);\n            puVar22 = iVar20 + (puVar3 >> 5 & 0x1ffff);\n            uVar13 = puVar3 >> 3 & 3;\n            puVar10 = iVar20 + 0x1ffff;\n            uVar7 = *(*0x20 + -0x78);\n        }\n        uVar25 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar3;\n        if (uVar13 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0x33;\n            uVar13 = 3;\n            if (puVar10 == puVar22) {\n                *(*0x20 + -0x10) = puVar3;\n                *(*0x20 + -0x90) = uVar25;\n                *(*0x20 + -0x138) = 0x413336;\n                puVar22 = fcn.00412020(uVar7);\n                uVar25 = *(*0x20 + -0x90);\n                puVar24 = *(*0x20 + -0x58);\n                puVar3 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            uVar25 = uVar25 - 2;\n            puVar3 = puVar3 + 1;\n        }\n        while (*(*0x20 + -0x50) = puVar3,  3 < uVar25) {\n            *(*0x20 + -0x40) = puVar22;\n            *(*0x20 + -0xb8) = uVar25;\n            *(*0x20 + -0x138) = 0x41339b;\n            uVar4 = fcn.004121a0(uVar7);\n            *(*0x20 + -0x18) = uVar4;\n            *(*0x20 + -0xe4) = uVar13;\n            *(*0x20 + -0xe8) = uVar7;\n            *(*0x20 + -0x20) = puVar10;\n            *(*0x20 + -0xe0) = uVar25 & 0xfffffffffffffffc;\n            *(*0x20 + -0x68) = uVar25 >> 2;\n            *(*0x20 + -0x138) = 0x4133dc;\n            fcn.0045d3c0(uVar25 >> 2);\n            puVar3 = *(*0x20 + -0x50) + *(*0x20 + -0x68);\n            puVar24 = *(*0x20 + -0x58);\n            puVar22 = *(*0x20 + -0x18);\n            uVar13 = *(*0x20 + -0xe4);\n            puVar10 = *(*0x20 + -0x20);\n            uVar7 = *(*0x20 + -0xe8);\n            uVar25 = *(*0x20 + -0xb8) - *(*0x20 + -0xe0);\n        }\n        if (uVar25 == 2) {\n            *puVar22 = *puVar3 | *puVar22 & 0xcc;\n            if (uVar13 < 3) {\n                uVar13 = uVar13 + 1;\n            }\n            else if (puVar10 == puVar22) {\n                *(*0x20 + -0x138) = 0x413470;\n                puVar22 = fcn.00412020(uVar7);\n                puVar24 = *(*0x20 + -0x58);\n            }\n            else {\n                puVar22 = puVar22 + 1;\n                uVar13 = 0;\n            }\n            if ((2 < uVar13) && (puVar22 == puVar10)) {\n                *(*0x20 + -0x138) = 0x41349f;\n                fcn.00412020(uVar7);\n                puVar24 = *(*0x20 + -0x58);\n            }\n        }\n        *(*0x20 + -0x138) = 0x4134c5;\n        fcn.0045d100(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5836
    },
    "00418540": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418a59)\n// WARNING: Removing unreachable block (ram,0x00418585)\n// WARNING: Removing unreachable block (ram,0x004185ac)\n\nvoid fcn.00418540(ulong param_1, ulong param_2, ulong param_3, int64_t param_4, uint64_t param_5)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x59344c = 2;\n            *0x593684 = 1;\n            *(*0x20 + -0x100) = param_1;\n            *0x593680 = *0x593680 & 0xffffff00 | 1;\n            *0x53fb80 = *0x593d58;\n            *(*0x20 + -0x1b8) = 0x4185cd;\n            fcn.0045e360();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar9 = **(in_GS_OFFSET + 0x28);\n            iVar8 = *(iVar9 + 0x30);\n            uVar5 = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x178) = uVar5;\n            piVar1 = iVar8 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar8 = *(iVar9 + 0x30);\n            *(*0x20 + -0x30) = iVar8;\n            *(iVar8 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar8 + 200;\n            if (*0x593680 == 0) {\n                *(iVar8 + 200) = 0x4a6d0b;\n            }\n            else {\n                *(*0x20 + -0x1b8) = 0x418645;\n                fcn.0045c700(uVar5, 0x4a6d0b, param_4, param_5);\n            }\n            *(*0x20 + -0x20) = iVar9;\n            *(*(iVar9 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar9 + 0x30) + 0x90);\n            *(*0x20 + -0x1b8) = 0x41867a;\n            fcn.004379a0(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0xf8) = 0x4191e0;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x178);\n            *(*0x20 + -0x1b0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1b8) = 0x4186bf;\n            fcn.0045a260();\n            *(*0x20 + -0x1b0) = 0x4b0f78;\n            *(*0x20 + -0x1b8) = 0x4186e5;\n            fcn.0045a260();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar9 = *(*(*0x20 + -0x20) + 0x30);\n            *(iVar9 + 0xf9) = 0;\n            *(*0x20 + -0x1b8) = 0x418725;\n            fcn.004379a0(2);\n            if (*0x545610 != '\\0') {\n                *(*0x20 + -0x1b8) = 0x418747;\n                fcn.0044f540(0);\n            }\n            iVar8 = *(*0x20 + -0x30);\n            *(iVar8 + 0xd0) = 0;\n            if (*0x593680 == 0) {\n                *(iVar8 + 200) = 0;\n            }\n            else {\n                iVar9 = 0;\n                *(*0x20 + -0x1b8) = 0x41877f;\n                fcn.0045c700(iVar8, 0, param_4, param_5);\n            }\n            if (*0x59344c == 0) {\n                *0x5967c0 = *0x5950b8;\n                *(*0x20 + -0x1b8) = 0x4187af;\n                fcn.0041eb60(*(*0x20 + -0x100));\n                *(*0x20 + -0x1b8) = 0x4187bb;\n                func_0x00422d20();\n                *(*0x20 + -0x1b8) = 0x4187ce;\n                fcn.0041f000();\n                *(*0x20 + -0x1b8) = 0x4187d4;\n                fcn.0045e360();\n                *(*0x20 + -0x180) = *(*0x20 + -0x1b0);\n                *(*0x20 + -0x1b8) = 0x4187f6;\n                fcn.0045e3c0(*(*0x20 + -0x1b0), iVar9);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar9 = *(*0x20 + -0x1b0);\n                iVar4 = *(*0x20 + -0x1a8);\n                iVar8 = *(*0x20 + -0x180);\n                *0x53fb68 = *0x53fb68 + (iVar8 - *0x53fb70);\n                uVar11 = iVar8 - *0x53fb70;\n                *0x53fb60 = iVar8;\n                if (uVar11 < 0) {\n                    LOCK();\n                    *0x598c38 = *0x598c38 + 1;\ncode_r0x00418902:\n                    *0x595128 = iVar9 * 1000000000 + iVar4;\n                    *0x5967b8 = iVar8;\n                    *((*0x596138 & 0xff) * 8 + 0x595138) = *0x53fb68;\n                    *((*0x596138 & 0xff) * 8 + 0x595938) = iVar9 * 1000000000 + iVar4;\n                    *0x595130 = *0x595130 + *0x53fb68;\n                    iVar9 = (*0x53fb50 - *0x53fb48) * *0x53fb3c;\n                    *(*0x20 + -0x170) = iVar9;\n                    iVar12 = (*0x53fb60 - *0x53fb58) * *0x53fb3c;\n                    *(*0x20 + -0x158) = iVar12;\n                    *0x53fb00 = *0x593db8 + *0x593db0 + *0x593dc0 + iVar9 + iVar12 + *0x53fb00;\n                    *0x596140 = *0x53fb00 / ((iVar8 - *0x5400a0) * *0x593450 + *0x5400a8);\n                    *0x53f814 = 0;\n                    if (*0x53faf8 != '\\0') {\n                        *0x59613c = *0x59613c + 1;\n                    }\n                    *(*0x20 + -0x1b8) = 0x418a16;\n                    fcn.0040ac20();\n                    *0x596138 = *0x596138 + 1;\n                    *(*0x20 + -0x1b8) = 0x418a28;\n                    fcn.0043bb20();\n                    *(*0x20 + -0x1b8) = 0x418a36;\n                    fcn.0040ae40();\n                    *(*0x20 + -0x1b8) = 0x418a3b;\n                    fcn.0042a9c0();\n                    if ((*0x53f81c & 0x80000000) == 0) {\n                        *0x53f81c = *0x53f81c + 1;\n                        LOCK();\n                        *(*0x20 + -0x184) = 0;\n                        *(*0x20 + -0x188) = *0x565810;\n                        *(*0x20 + -0x1b0) = 0x4b0f80;\n                        *(*0x20 + -0x1b8) = 0x418a92;\n                        fcn.0045a260();\n                        *(*0x20 + -0x1b8) = 0x418aab;\n                        fcn.0042aa40();\n                        *(*0x20 + -0x1b8) = 0x418ab0;\n                        fcn.00423940();\n                        *(*0x20 + -0x1b0) = 0x4b0f48;\n                        *(*0x20 + -0x1b8) = 0x418ac5;\n                        fcn.0045a260();\n                        *(*0x20 + -0x1b0) = 0x4b0f90;\n                        *(*0x20 + -0x1b8) = 0x418ae9;\n                        fcn.0045a260();\n                        uVar14 = 0;\n                        uVar15 = 0;\n                        uVar16 = 0;\n                        uVar17 = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        *(*0x20 + -0x1b8) = 0x418b16;\n                        fcn.00421400();\n                        if (*0x5938bc < 1) {\ncode_r0x00418b78:\n                            *(*0x20 + -0x1b8) = 0x418b88;\n                            fcn.00443980(0);\n                            *(*0x20 + -0x1b8) = 0x418b99;\n                            fcn.00443980(0);\n                            iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                            *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x100) = *0x4c9770 * *0x596140;\n                        *(*0x20 + -0xe8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xe0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x1b8) = 0x418b4f;\n                        fcn.00434de0();\n                        uVar7 = (*0x53fb48 - *0x5935c8) / 1000000;\n                        uVar11 = 0x17;\n                        while ((cVar3 = uVar7,  9 < uVar7 || (0x13 < uVar11))) {\n                            uVar7 = uVar7 / 10;\n                            if (0x17 < uVar11) goto code_r0x00419186;\n                            *(*0x20 + (uVar11 - 0xe8)) = cVar3 + uVar7 * -10 + '0';\n                            bVar13 = uVar11 == 0x15;\n                            uVar11 = uVar11 - 1;\n                            if (bVar13) {\n                                *(*0x20 + -0xd4) = 0x2e;\n                                uVar11 = 0x13;\n                            }\n                        }\n                        if (uVar11 < 0x18) {\n                            *(*0x20 + (uVar11 - 0xe8)) = cVar3 + '0';\n                            *(*0x20 + -0x108) = *0x596138;\n                            *(*0x20 + -0x1b8) = 0x418c8c;\n                            uVar5 = fcn.00448f60(-(uVar11 - 0x18));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x110) = *0x20 + ((uVar11 & uVar11 - 0x18 >> 0x3f) - 0xe8);\n                            *(*0x20 + -0x1b8) = 0x418ca5;\n                            fcn.00434de0();\n                            *(*0x20 + -0x1b8) = 0x418cb6;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x418cc5;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x418cd6;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x418ceb;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x418cfc;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x418d0f;\n                            fcn.004354e0(*(*0x20 + -0x100));\n                            *(*0x20 + -0x1b8) = 0x418d25;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x418d2a;\n                            fcn.00434e60();\n                            *(*0x20 + -0xd0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -200) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0xd0) = *0x53fb50;\n                            *(*0x20 + -200) = *0x53fb58;\n                            *(*0x20 + -0xc0) = *0x53fb60;\n                            iVar9 = 0;\n                            iVar8 = *0x53fb48;\n                            while (iVar9 < 3) {\n                                *(*0x20 + -0x148) = iVar9;\n                                *(*0x20 + -0x168) = *(*0x20 + iVar9 * 8 + -0xd0);\n                                if (iVar9 != 0) {\n                                    *(*0x20 + -0x118) = iVar8;\n                                    *(*0x20 + -0x1b8) = 0x418e16;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x1b8) = 0x418e27;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x1b8) = 0x418e2c;\n                                    fcn.00434e60();\n                                }\n                                *(*0x20 + -0x1b8) = 0x418d8c;\n                                uVar5 = fcn.0041a1e0(0x18);\n                                *(*0x20 + -0x1b8) = 0x418d9f;\n                                uVar6 = fcn.00448f60(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x418db4;\n                                fcn.00434de0();\n                                *(*0x20 + -0x1b8) = 0x418dc9;\n                                fcn.004356e0();\n                                *(*0x20 + -0x1b8) = 0x418dce;\n                                fcn.00434e60();\n                                iVar8 = *(*0x20 + -0x168);\n                                iVar9 = *(*0x20 + -0x148) + 1;\n                            }\n                            *(*0x20 + -0x1b8) = 0x418e45;\n                            fcn.00434de0();\n                            *(*0x20 + -0x1b8) = 0x418e56;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x418e5b;\n                            fcn.00434e60();\n                            *(*0x20 + -0x58) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x50) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x40) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            *(*0x20 + -0x58) = *(*0x20 + -0x170);\n                            *(*0x20 + -0x50) = *0x593db0;\n                            *(*0x20 + -0x48) = *0x593dc0 + *0x593db8;\n                            *(*0x20 + -0x40) = *0x593dc8;\n                            *(*0x20 + -0x38) = *(*0x20 + -0x158);\n                            iVar9 = 0;\n                            while (iVar9 < 5) {\n                                *(*0x20 + -0x150) = iVar9;\n                                *(*0x20 + -0x160) = *(*0x20 + iVar9 * 8 + -0x58);\n                                if ((iVar9 == 2) || (iVar9 == 3)) {\n                                    *(*0x20 + -0x1b8) = 0x418f51;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x1b8) = 0x418f65;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x1b8) = 0x418f6a;\n                                    fcn.00434e60();\n                                }\n                                else if (iVar9 != 0) {\n                                    *(*0x20 + -0x1b8) = 0x418f85;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x1b8) = 0x418f96;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x1b8) = 0x418f9b;\n                                    fcn.00434e60();\n                                }\n                                *(*0x20 + -0x1b8) = 0x418edd;\n                                uVar5 = fcn.0041a1e0(0x18);\n                                *(*0x20 + -0x1b8) = 0x418ef0;\n                                uVar6 = fcn.00448f60(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x418f05;\n                                fcn.00434de0();\n                                *(*0x20 + -0x1b8) = 0x418f1a;\n                                fcn.004356e0();\n                                *(*0x20 + -0x1b8) = 0x418f1f;\n                                fcn.00434e60();\n                                iVar9 = *(*0x20 + -0x150) + 1;\n                            }\n                            *(*0x20 + -0x108) = *0x53fb78;\n                            *(*0x20 + -0x120) = *0x53fb80;\n                            *(*0x20 + -0x128) = *0x53fb88;\n                            *(*0x20 + -0x130) = *0x53fb90;\n                            *(*0x20 + -0x138) = *0x593d70;\n                            *(*0x20 + -0x140) = *0x593d80;\n                            *(*0x20 + -0x118) = *0x53fb40;\n                            *(*0x20 + -0x1b8) = 0x419012;\n                            fcn.00434de0();\n                            *(*0x20 + -0x1b8) = 0x419025;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x419036;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x419047;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x419058;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x419069;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x41907a;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x41908b;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x41909c;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x4190ad;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x4190bb;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x4190cc;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x4190da;\n                            fcn.004353e0();\n                            *(*0x20 + -0x1b8) = 0x4190eb;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x4190f8;\n                            fcn.004354e0();\n                            *(*0x20 + -0x1b8) = 0x419109;\n                            fcn.004356e0();\n                            *(*0x20 + -0x1b8) = 0x41910e;\n                            fcn.00434e60();\n                            if (*0x53faf8 != '\\0') {\n                                *(*0x20 + -0x1b8) = 0x41911c;\n                                fcn.00434de0();\n                                *(*0x20 + -0x1b8) = 0x41912d;\n                                fcn.004356e0();\n                                *(*0x20 + -0x1b8) = 0x419132;\n                                fcn.00434e60();\n                            }\n                            *(*0x20 + -0x1b8) = 0x419137;\n                            fcn.00434de0();\n                            *(*0x20 + -0x1b8) = 0x41913c;\n                            fcn.00435040();\n                            *(*0x20 + -0x1b8) = 0x419145;\n                            fcn.00434e60();\n                            cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                            *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                            if (cVar3 == '\\x01') {\n                                *(*0x20 + -0x1b8) = 0x419177;\n                                fcn.0040ae40();\n                            }\n                            goto code_r0x00418b78;\n                        }\n                        *(*0x20 + -0x1b8) = 0x419186;\n                        fcn.0045ca80(0x18);\ncode_r0x00419186:\n                        *(*0x20 + -0x1b8) = 0x419193;\n                        fcn.0045ca80(0x18);\n                    }\n                    *(*0x20 + -0x1b8) = 0x4191a5;\n                    fcn.00433640();\n                }\n                else {\n                    if (uVar11 < 0x10) {\n                        param_4 = 0;\n                    }\n                    else {\n                        iVar12 = 0x3f;\n                        if (uVar11 != 0) {\n                            for (; uVar11 >> iVar12 == 0; iVar12 = iVar12 + -1) {\n                            }\n                        }\n                        if (uVar11 == 0) {\n                            iVar12 = -1;\n                        }\n                        param_4 = iVar12 + -3;\n                        if (param_4 * 0x10 < 0x2d0) {\n                            param_5 = ~-(iVar12 - 4U < 0x40);\n                            iVar12 = uVar11 >> ((iVar12 - 4U | param_5) & 0x3f);\n                            uVar11 = iVar12 + (((iVar12 >> 0x3f) >> 0x3c) + iVar12 >> 4) * -0x10;\n                        }\n                        else {\n                            param_4 = 0x2c;\n                            uVar11 = 0xf;\n                        }\n                    }\n                    param_4 = param_4 * 0x10;\n                    if (param_4 + uVar11 < 0x2d0) {\n                        piVar2 = (param_4 + uVar11) * 8 + 0x5975b8;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00418902;\n                    }\n                }\n                *(*0x20 + -0x1b8) = 0x4191af;\n                fcn.0045caa0(0x2d0);\n            }\n            *(*0x20 + -0x1b8) = 0x4191c5;\n            param_1 = fcn.00433640();\n        }\n        *(puVar10 + 8) = param_1;\n        *(puVar10 + -8) = 0x4191d1;\n        fcn.0045a3a0();\n        param_1 = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 6280
    },
    "0041a800": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0041a800(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x53faa8) || (*0x53faac <= unaff_EBX)) {\n        if ((unaff_EBX < *0x53faac) || (*0x53fab0 <= unaff_EBX)) {\n            puVar4 = *0x5934a0;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041aadb:\n                    puStack88 = puVar4;\n                    fcn.0041cbc0(0x593800);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.0045a260();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x53fab0) || (*0x53fab4 <= unaff_EBX)) {\n                    puVar4 = *0x53fab4;\n                    if ((*0x53fab4 <= unaff_EBX) && (unaff_EBX < *0x53fab8)) {\n                        if (unaff_EBX - *0x53fab4 < *0x53fac8) {\n                            iVar3 = *(*0x53fac0 + (unaff_EBX - *0x53fab4) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x53fa78;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x41ac60);\n                            auStack24 = CONCAT88(&iStack96, in_RAX);\n                            fcn.0045a260();\n                            piVar2 = 0x593d98;\n                            goto code_r0x0041a9e8;\n                        }\n                        fcn.0045ca80(*0x53fac8);\n                    }\n                    fcn.00434de0();\n                    uStack64 = *0x53fab4;\n                    uStack72 = *0x53fab8;\n                    fcn.00434de0();\n                    fcn.004356e0();\n                    fcn.004353e0();\n                    fcn.004356e0();\n                    fcn.004353e0();\n                    fcn.004356e0();\n                    fcn.004353e0();\n                    fcn.004356e0();\n                    fcn.00434e60();\n                    fcn.00433640();\n                    goto code_r0x0041aadb;\n                }\n                fcn.0041afa0();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x53ecd8 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x53ecd8;\n                iVar3 = (*0x53ecd8)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.0041adc0(*(*(iStack56 + iVar1 * 8) + 0x208));\n                iStack96 = iVar1 + iStack96;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x593da0;\n        }\n    }\n    else {\n        if (*0x53ecd8 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x53ecd8;\n            iVar3 = (*0x53ecd8)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.0041adc0(*(*(iStack48 + iVar1 * 8) + 0x1f8));\n            iStack96 = iVar1 + iStack96;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x593da0;\n    }\ncode_r0x0041a9e8:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.0041ba20();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1201
    },
    "0041c340": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c340(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar5;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    int64_t iVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar3 = *in_RAX;\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        bVar9 = false;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(iVar3 + 0x24) == '\\x03';\n        bVar9 = *(iVar3 + 0x24) == '\\x05';\n    }\n    cVar5 = uVar7;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar5 == '\\0')) && (!bVar9)) {\n        iVar4 = 0;\n        iVar2 = fcn.00448140();\n        if (0 < iVar2) {\n            fcn.0041cbc0(unaff_RBX);\n        }\n        if (0 < iVar4) {\n            fcn.0041cbc0(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar10 = unaff_RSI;\n            for (iVar3 = 0; iVar3 < uVar7; iVar3 = iVar3 + 1) {\n                arg1_00 = unaff_RSI + iVar3 * 0x10;\n                iVar2 = *(unaff_RSI + iVar3 * 0x10);\n                iVar8 = in_RAX[7];\n                if (-1 < iVar2) {\n                    iVar8 = in_RAX[8];\n                }\n                uVar1 = iVar8 + iVar2;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    unaff_RSI = iVar10;\n                    fcn.00420f80(arg1_00);\n                    iVar10 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041d0e0(0);\n        uVar7 = uVar7 & 0xff;\n    }\n    cVar6 = uVar7;\n    if (in_RAX[9] != 0) {\n        fcn.0041d0e0(0);\n        cVar6 = cVar5;\n    }\n    if ((cVar6 != '\\0') || (bVar9)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 752
    },
    "0041cd60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cd60(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \ncode_r0x0041cd60:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x90;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar5 = *(*(uVar7 * 8 + 0x565870) + (uVar9 & 0xfffff) * 8);\n            if (iVar5 == 0) {\n                uVar9 = 0;\n                uVar10 = 0;\n                puVar12 = NULL;\n                puVar11 = NULL;\n            }\n            else {\n                puVar11 = iVar5 + (in_RAX >> 5 & 0x1ffff);\n                uVar10 = in_RAX >> 3 & 3;\n                puVar12 = iVar5 + 0x1ffff;\n            }\n            iVar5 = *(iVar5 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            uVar7 = *(iVar5 + 0x68);\n            if (uVar7 != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x30) = in_RAX;\n                if (0x20000 < uVar7) {\n                    if (*(iVar5 + 0x18) == in_RAX) {\n                        if ((*(iVar5 + 0x62) & 1) != 0) {\n                            unaff_RBX[2] = unaff_RBX[2] + uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x50) = iVar5;\n                        *(*0x20 + -0x28) = puVar12;\n                        *(*0x20 + -0x58) = uVar9;\n                        *(*0x20 + -0x60) = uVar10;\n                        *(*0x20 + -0x10) = puVar11;\n                        uVar7 = in_RAX;\ncode_r0x0041cff6:\n                        uVar7 = uVar7 + 0x20000;\n                        if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar7) goto code_r0x0041cfce;\n                        iVar2 = *unaff_RBX;\n                        if (iVar2 == 0) {\n                            bVar3 = false;\n                        }\n                        else {\n                            uVar4 = *(iVar2 + 0x10);\n                            if (uVar4 == 0xfd) {\n                                bVar3 = false;\n                            }\n                            else {\n                                if (0xfc < uVar4) goto code_r0x0041d078;\n                                *(iVar2 + 0x18 + uVar4 * 8) = uVar7;\n                                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                                bVar3 = true;\n                            }\n                        }\n                        if (!bVar3) {\n                            *(*0x20 + -0x48) = uVar7;\n                            *(*0x20 + -0x98) = 0x41d045;\n                            fcn.00422e20();\n                            uVar7 = *(*0x20 + -0x48);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x30);\n                            uVar9 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x60);\n                            puVar11 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x50);\n                            puVar12 = *(*0x20 + -0x28);\n                        }\n                        goto code_r0x0041cff6;\n                    }\ncode_r0x0041cfce:\n                    uVar7 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n                    if (0x20000 < uVar7) {\n                        uVar7 = 0x20000;\n                    }\n                }\n                *(*0x20 + -0x40) = uVar7;\n                uVar4 = 0;\n                while ((uVar4 < uVar7 && (uVar1 = *puVar11,  ((uVar1 >> (uVar10 & 0x1f)) >> 4 & 1) != 0))) {\n                    *(*0x20 + -0x38) = uVar4;\n                    if (((uVar1 >> (uVar10 & 0x1f) & 1) != 0) &&\n                       ((*(uVar4 + in_RAX) != 0 && (uVar7 <= *(uVar4 + in_RAX) - in_RAX)))) {\n                        *(*0x20 + -0x54) = uVar10;\n                        *(*0x20 + -0x18) = puVar11;\n                        *(*0x20 + -0x20) = puVar12;\n                        *(*0x20 + -0x5c) = uVar9;\n                        *(*0x20 + -0x98) = 0x41cf11;\n                        iVar5 = fcn.00411ec0(uVar4);\n                        if (iVar5 != 0) {\n                            *(*0x20 + -0x98) = 0x41cf33;\n                            fcn.0041d3a0(*(*0x20 + -0x38), uVar7, uVar4);\n                        }\n                        uVar4 = *(*0x20 + -0x38);\n                        uVar10 = *(*0x20 + -0x54);\n                        uVar7 = *(*0x20 + -0x40);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar9 = *(*0x20 + -0x5c);\n                        puVar11 = *(*0x20 + -0x18);\n                        puVar12 = *(*0x20 + -0x20);\n                    }\n                    if (uVar10 < 3) {\n                        uVar10 = uVar10 + 1;\n                    }\n                    else if (puVar12 == puVar11) {\n                        uVar6 = uVar9 & 0xffffffff;\n                        *(*0x20 + -0x98) = 0x41cf8e;\n                        puVar11 = fcn.00412020(uVar9 & 0xffffffff);\n                        uVar7 = *(*0x20 + -0x40);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar9 = uVar6;\n                        uVar4 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        puVar11 = puVar11 + 1;\n                        uVar10 = 0;\n                    }\n                    uVar4 = uVar4 + 8;\n                }\n                unaff_RBX[2] = unaff_RBX[2] + uVar7;\n                unaff_RBX[3] = unaff_RBX[3] + uVar4;\n                return;\n            }\n            goto code_r0x0041d085;\n        }\n        goto code_r0x0041d096;\n    }\n    goto code_r0x0041d0a6;\ncode_r0x0041d078:\n    *(*0x20 + -0x98) = 0x41d085;\n    fcn.0045ca80(0xfd);\ncode_r0x0041d085:\n    unaff_RBX = 0x11;\n    *(*0x20 + -0x98) = 0x41d096;\n    fcn.00433640();\ncode_r0x0041d096:\n    *(*0x20 + -0x98) = 0x41d0a5;\n    in_RAX = fcn.0045caa0(0x40);\ncode_r0x0041d0a6:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x41d0b5;\n    fcn.0045a3a0();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    goto code_r0x0041cd60;\n}\n",
        "token_count": 2135
    },
    "0041ee60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ee8b)\n// WARNING: Removing unreachable block (ram,0x0041ee92)\n// WARNING: Removing unreachable block (ram,0x0041ee98)\n\nint64_t fcn.0041ee60(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004077c0();\n    iVar1 = fcn.004499a0();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "00421d00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00421d00(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t **in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x00421d00:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x48 && *0x20 + -0x48 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -200;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar1 = *(unaff_R14 + 0x30);\n        if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xa8) = *0x565810;\n            uVar3 = puVar10[99];\n            *(*0x20 + -0xad) = uVar3;\n            if ((uVar3 == 1) && (*(puVar10 + 0x58) == *0x565810 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x88) = puVar10;\n                *(*0x20 + -0xa4) = *0x565810 - 1;\n                uVar12 = *0x565810;\n                if (*0x545610 != '\\0') {\n                    *(*0x20 + -0xd0) = 0x421db1;\n                    fcn.00450520();\n                    puVar10 = *(*0x20 + -0x88);\n                    uVar12 = *(*0x20 + -0xa8);\n                }\n                LOCK();\n                *0x565838 = *0x565838 + *(puVar10 + 0x20);\n                uVar3 = puVar10[0x62];\n                *(*0x20 + -0xb0) = uVar3;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0x90) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0xa0) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar4 = uVar3;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x00422725:\n                                uVar5 = 0;\n                                *(*0x20 + -0xd0) = 0x422732;\n                                fcn.0045caa0(0x40);\n                                goto code_r0x00422732;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x565870) + puVar13 * 8);\n                            uVar5 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar5 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd0) = 0x422725;\n                                fcn.0045caa0(0x40);\n                                goto code_r0x00422725;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar5 & 7));\n                        }\n                        if ((*0x5938e4 != 0) || (*0x5938a4 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x5938e4 != 0) {\n                                        *(*0x20 + -0x70) = uVar14;\n                                        *(*0x20 + -0x98) = iVar15;\n                                        *(*0x20 + -0xd0) = 0x42265e;\n                                        fcn.0042b3c0();\n                                        uVar14 = *(*0x20 + -0x70);\n                                        puVar10 = *(*0x20 + -0x88);\n                                        uVar8 = *(*0x20 + -0x90);\n                                        iVar15 = *(*0x20 + -0x98);\n                                    }\n                                    if (*0x5938a4 != 0) {\n                                        for (uVar4 = 0; uVar4 < uVar8; uVar4 = uVar4 + 4) {\n                                            *(iVar15 + uVar4) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x00422086;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x50) = uVar8;\n                            *(*0x20 + -0xd0) = 0x422052;\n                            fcn.004228c0();\n                            uVar8 = *(*0x20 + -0x50);\n                            puVar10 = *(*0x20 + -0x88);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x78) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x4225b2;\n                                    fcn.004228c0();\n                                    uVar8 = *(*0x20 + -0x78);\n                                    puVar10 = *(*0x20 + -0x88);\n                                }\n                            }\ncode_r0x00422086:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x50) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x60) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x593415 == '\\0') {\n                                    *(*0x20 + -0x80) = uVar8;\n                                    *(*0x20 + -0xd0) = 0x4220d9;\n                                    iVar17 = fcn.00401e80();\n                                    uVar14 = *(*0x20 + -0x50);\n                                    puVar10 = *(*0x20 + -0x88);\n                                    iVar15 = *(*0x20 + -0x60);\n                                    uVar8 = *(*0x20 + -0x80);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xac) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                if (*0x545610 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd0) = 0x422176;\n                                uVar7 = fcn.00426580();\n                                uVar14 = *(*0x20 + -0x88);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd0) = 0x422189;\n                                fcn.00411b00();\n                                iVar15 = *(*0x20 + -0x88);\n                                uVar3 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar3;\n                                *(*0x20 + -0xad) = uVar3;\n                                if (uVar3 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xa4)) {\n                                        uVar18 = *(*0x20 + -0xa8);\n                                        if ((uVar12 != uVar18 + 1) && (uVar12 != uVar18 + 3)) {\n                                            puVar10 = uVar18;\n                                            *(iVar15 + 0x58) = uVar18;\n                                            uVar14 = *(*0x20 + -0xb0);\n                                            uVar3 = *(*0x20 + -0xb0) >> 1;\n                                            if (uVar3 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xac) != 0) {\n                                                    if (*0x5938a8 < 1) {\n                                                        *(*0x20 + -0xd0) = 0x422366;\n                                                        fcn.004254c0();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd0) = 0x422358;\n                                                        fcn.00415f80();\n                                                    }\n                                                    *(*0x20 + -0xd0) = 0x422372;\n                                                    iVar15 = fcn.0042ca60();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar1 = iVar15 + 0x268;\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0x90);\n                                                    *(*0x20 + -0xd0) = 0x42239a;\n                                                    fcn.0042cb40(iVar15);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd0) = 0x4223e5;\n                                                    fcn.0042c400(uVar14 * 0xc0 + 0x565b70, (uVar18 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd0) = 0x422405;\n                                                fcn.0045ca80(0x88);\ncode_r0x00422405:\n                                                *(*0x20 + -0xd0) = 0x422411;\n                                                fcn.0045ca80(0x88);\ncode_r0x00422411:\n                                                *(*0x20 + -0xd0) = 0x42241d;\n                                                fcn.0045ca80(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xac) == 0) {\n                                                    cVar2 = *(*0x20 + 0x10);\ncode_r0x00422260:\n                                                    if (cVar2 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x60) == 0) {\n                                                        *(*0x20 + -0xd0) = 0x422307;\n                                                        fcn.004254c0();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x60) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd0) = 0x4222f6;\n                                                            fcn.0042c400(uVar14 * 0xc0 + 0x565b20, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00422405;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd0) = 0x4222b6;\n                                                        fcn.0042c400(uVar14 * 0xc0 + 0x565b70, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x00422411;\n                                                }\n                                                *(*0x20 + -0xae) = uVar3;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd0) = 0x422209;\n                                                iVar15 = fcn.0042ca60();\n                                                if (*(*0x20 + -0xae) < 0x44) {\n                                                    piVar1 = iVar15 + *(*0x20 + -0xae) * 8 + 0x278;\n                                                    LOCK();\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xac);\n                                                    *(*0x20 + -0xd0) = 0x422245;\n                                                    fcn.0042cb40();\n                                                    cVar2 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xa8);\n                                                    iVar15 = *(*0x20 + -0x88);\n                                                    uVar14 = *(*0x20 + -0xb0);\n                                                    goto code_r0x00422260;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd0) = 0x42242a;\n                                            fcn.0045ca80(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd0) = 0x42243b;\n                                        fcn.00433640();\n                                    }\n                                }\n                                *(*0x20 + -0x58) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd0) = 0x422448;\n                                fcn.00434de0();\n                                *(*0x20 + -0xd0) = 0x422459;\n                                fcn.004356e0();\n                                *(*0x20 + -0xd0) = 0x422466;\n                                fcn.004353e0();\n                                *(*0x20 + -0xd0) = 0x422477;\n                                fcn.004356e0();\n                                *(*0x20 + -0xd0) = 0x422485;\n                                fcn.004353e0();\n                                *(*0x20 + -0xd0) = 0x422496;\n                                fcn.004356e0();\n                                *(*0x20 + -0xd0) = 0x42249f;\n                                fcn.004353e0();\n                                *(*0x20 + -0xd0) = 0x4224a5;\n                                fcn.00435040();\n                                *(*0x20 + -0xd0) = 0x4224aa;\n                                fcn.00434e60();\n                                *(*0x20 + -0xd0) = 0x4224bb;\n                                fcn.00433640();\n                            }\n                            *(*0x20 + -0xaa) = uVar16;\n                            *(*0x20 + -0x50) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd0) = 0x4224cf;\n                            fcn.00434de0();\n                            *(*0x20 + -0xd0) = 0x4224e5;\n                            fcn.004356e0();\n                            *(*0x20 + -0xd0) = 0x4224ef;\n                            fcn.004353e0();\n                            *(*0x20 + -0xd0) = 0x422505;\n                            fcn.004356e0();\n                            *(*0x20 + -0xd0) = 0x422512;\n                            fcn.004353e0();\n                            *(*0x20 + -0xd0) = 0x422525;\n                            fcn.004356e0();\n                            *(*0x20 + -0xd0) = 0x42252f;\n                            fcn.004353e0();\n                            *(*0x20 + -0xd0) = 0x422545;\n                            fcn.004356e0();\n                            *(*0x20 + -0xd0) = 0x422552;\n                            fcn.004353e0();\n                            *(*0x20 + -0xd0) = 0x422557;\n                            fcn.00435040();\n                            *(*0x20 + -0xd0) = 0x42255c;\n                            fcn.00434e60();\n                            *(*0x20 + -0xd0) = 0x42256d;\n                            fcn.00433640();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x004227f0;\n                    uVar4 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0);\n                    uVar18 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0) & 7;\n                    uVar5 = uVar18;\n                    puVar9 = (uVar4 >> 3) + *(puVar10 + 0x50);\n                    uVar3 = *puVar9;\n                    uVar12 = uVar3;\n                    if ((uVar3 & 1 << uVar18) == 0) {\n                        uVar4 = uVar4 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar4 <= *(puVar13 + 1)) {\n                                cVar2 = '\\0';\n                                goto code_r0x00421f04;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar5 & 0x1f);\n                                cVar2 = '\\x01';\n                                goto code_r0x00421f04;\n                            }\ncode_r0x00422732:\n                            puVar9 = puVar10;\n                        }\n                        cVar2 = '\\0';\ncode_r0x00421f04:\n                        *(*0x20 + -0x68) = uVar4;\n                        *(*0x20 + -0xaf) = cVar2;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar4))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar2 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd0) = 0x4227c5;\n                                fcn.00426440(uVar8);\n                                cVar2 = *(*0x20 + -0xaf);\n                                uVar4 = *(*0x20 + -0x68);\n                                uVar8 = *(*0x20 + -0x90);\n                                uVar14 = *(*0x20 + -0xa0);\n                                unaff_R15 = *(*0x20 + -0x88);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd0) = 0x421ec5;\n                        fcn.00426440(uVar8);\n                        uVar8 = *(*0x20 + -0x90);\n                        uVar14 = *(*0x20 + -0xa0);\n                        puVar10 = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xa8);\n                    uVar3 = *(*0x20 + -0xb0);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x004227f5;\n        }\n        goto code_r0x0042287b;\n    }\n    goto code_r0x0042288d;\ncode_r0x004227f0:\n    *(*0x20 + -0xd0) = 0x4227f5;\n    fcn.00431cc0();\ncode_r0x004227f5:\n    *(*0x20 + -0x58) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd0) = 0x422805;\n    fcn.00434de0();\n    *(*0x20 + -0xd0) = 0x422816;\n    fcn.004356e0();\n    *(*0x20 + -0xd0) = 0x422825;\n    fcn.004353e0();\n    *(*0x20 + -0xd0) = 0x422836;\n    fcn.004356e0();\n    *(*0x20 + -0xd0) = 0x422845;\n    fcn.004353e0();\n    *(*0x20 + -0xd0) = 0x422856;\n    fcn.004356e0();\n    *(*0x20 + -0xd0) = 0x42285f;\n    fcn.004353e0();\n    *(*0x20 + -0xd0) = 0x422865;\n    fcn.00435040();\n    *(*0x20 + -0xd0) = 0x42286a;\n    fcn.00434e60();\n    *(*0x20 + -0xd0) = 0x42287b;\n    fcn.00433640();\ncode_r0x0042287b:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd0) = 0x42288c;\n    in_RAX = fcn.00433640();\ncode_r0x0042288d:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x42289b;\n    fcn.0045a3a0();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x00421d00;\n}\n",
        "token_count": 6212
    },
    "00424ba0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00424ba0(uchar param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    char cVar14;\n    uchar (*pauVar15) [16];\n    uchar uVar16;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar16 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar16;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar15 = NULL;\n                unaff_RBX = 0;\ncode_r0x00424cae:\n                *(*0x20 + -0x48) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar15;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x78) = 0x424cc5;\n                fcn.0040ac20();\n                iVar7 = *(*0x20 + -0x38);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x424cf6;\n                    iVar7 = fcn.00428620();\n                    if (iVar7 != 0) {\n                        uVar6 = 0;\n                        goto code_r0x00424d56;\n                    }\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x424d11;\n                    uVar6 = fcn.00425200();\n                    if (uVar8 == '\\0') {\n                        *(*0x20 + -0x78) = 0x424d25;\n                        fcn.0040ae40();\n                        return 0;\n                    }\n                    *(*0x20 + -0x40) = uVar6;\n                    uVar8 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x78) = 0x424d48;\n                    iVar7 = fcn.00428620();\n                    if (iVar7 != 0) {\n                        uVar6 = *(*0x20 + -0x40);\n                        goto code_r0x00424d56;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                    uVar8 = *(*0x20 + -0x48);\ncode_r0x00424d56:\n                    *(*0x20 + -0x48) = uVar8;\n                    *(*0x20 + -0x40) = uVar6;\n                    *(*0x20 + -0x38) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x78) = 0x424d79;\n                        iVar7 = fcn.00424aa0();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x78) = 0x424d8d;\n                    fcn.0040ae40();\n                    if ((*(*0x20 + -0x40) != 0) &&\n                       (*(*(*0x20 + 8) + 0x10178) < (*0x5950b0 - *0x5950c0) + *(*0x20 + -0x40))) {\n                        *(*0x20 + -0x78) = 0x424dd2;\n                        fcn.0041f760(*(*0x20 + 8) + 8);\n                    }\n                    pauVar15 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x48);\ncode_r0x00424ded:\n                    *(*0x20 + -0x50) = pauVar15;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x48) = unaff_RBX;\n                    *pauVar15 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar15[1] = 0;\n                    *(pauVar15[1] + 8) = iVar7;\n                    uVar8 = *(*0x20 + 0x10);\n                    *pauVar15[2] = uVar8;\n                    *pauVar15[6] = 0;\n                    pauVar15[6][2] = 0;\n                    *(pauVar15[6] + 8) = 0;\n                    *(pauVar15[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar15[6][4] = 0;\n                    *pauVar15[3] = 0;\n                    *(pauVar15[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar15[6] + 3;\n                    pauVar15[6][3] = 0;\n                    *(*0x20 + -0x78) = 0x424e5f;\n                    cVar5 = fcn.00424940(uVar8);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x50);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    cVar5 = *(*0x20 + 0x18);\n                    if (cVar5 == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00424f46:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x78) = 0x424f5f;\n                            uVar8 = fcn.00426580();\n                            *(*(*0x20 + -0x50) + 0x50) = uVar8;\n                            *(*0x20 + -0x78) = 0x424f71;\n                            uVar8 = fcn.004268a0();\n                            iVar7 = *(*0x20 + -0x50);\n                            *(iVar7 + 0x48) = uVar8;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10130);\n                            **(*0x20 + -0x20) = 1;\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar5 = *(*0x20 + 0x18);\n                            goto code_r0x00424faf;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x52a480);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x52b6e0);\n                                goto code_r0x00424f46;\n                            }\n                            goto code_r0x0042519a;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x00424faf:\n                        iVar11 = *(*0x20 + -0x48);\n                        cVar14 = cVar5;\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x78) = 0x424fc8;\n                            fcn.00415c20(iVar11, iVar7);\n                            iVar11 = *(*0x20 + -0x48);\n                            LOCK();\n                            *0x5950c0 = *0x5950c0 - iVar11;\n                            cVar5 = *(*0x20 + 0x18);\n                            iVar7 = *(*0x20 + -0x50);\n                            uVar12 = *(*0x20 + -0x30);\n                            cVar14 = *(*0x20 + 0x18);\n                        }\n                        if (cVar5 == '\\0') {\n                            LOCK();\n                            *0x5950b8 = *0x5950b8 + uVar12;\n                        }\n                        if (cVar5 != '\\0' || cVar14 != '\\0') {\n                            *(*0x20 + -0x78) = 0x425034;\n                            fcn.0042c9a0(iVar11, iVar7);\n                        }\n                        *(*0x20 + -0x78) = 0x425045;\n                        piVar9 = fcn.0042ca60();\n                        iVar7 = *(*0x20 + -0x48);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x78) = 0x4250b4;\n                        fcn.0042cb40(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x50);\n                        *(*0x20 + -0x78) = 0x4250cf;\n                        fcn.00424840(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x00425168:\n                            *(*0x20 + -0x78) = 0x42516d;\n                            fcn.0045c1a0();\n                            return *(*0x20 + -0x50);\n                        }\n                        uVar12 = *(*(*0x20 + -0x50) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x565870) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10150) = *(*(*0x20 + 8) + 0x10150) + *(*0x20 + 0x10);\n                            goto code_r0x00425168;\n                        }\n                        *(*0x20 + -0x78) = 0x42519a;\n                        fcn.0045caa0(0x40);\ncode_r0x0042519a:\n                        *(*0x20 + -0x78) = 0x42519f;\n                        fcn.00431cc0();\n                    }\n                    *(*0x20 + -0x78) = 0x4251ac;\n                    fcn.0045ca80(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x78) = 0x4251bd;\n                fcn.00433640();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x78) = 0x424c07;\n                    fcn.0040ac20();\n                    uVar8 = *(*0x20 + 8);\n                    *(*0x20 + -0x78) = 0x424c15;\n                    uVar6 = fcn.004298a0();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = uVar8;\n                    *(*0x20 + -0x78) = 0x424c32;\n                    fcn.0040ae40();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x78) = 0x424c48;\n                iVar7 = fcn.00429480();\n                if (iVar7 == 0) {\n                    pauVar15 = NULL;\n                    goto code_r0x00424cae;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0xdc8),  iVar4 == 0)) {\n                    pauVar15 = NULL;\ncode_r0x00424c8d:\n                    if (pauVar15 == NULL) goto code_r0x00424cae;\n                    goto code_r0x00424ded;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar15 = *(iVar11 + 0xdc8 + iVar4 * 8);\n                    *(iVar11 + 0xdc8) = unaff_RDI;\n                    goto code_r0x00424c8d;\n                }\n            }\n            uVar16 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x78) = 0x4251ca;\n            in_RAX = fcn.0045ca80(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar16;\n        *(puVar13 + -8) = 0x4251e5;\n        fcn.0045eaa0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 4065
    },
    "00425640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425640(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1_00;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10130) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10150) = *(in_RAX + 0x10150) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x565870) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00425736:\n                        iVar6 = *(unaff_RBX + 0x20);\n                        if (arg1 == '\\0') {\n                            LOCK();\n                            *0x5950b8 = *0x5950b8 + iVar6 * -0x2000;\n                        }\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x2b) = arg1;\n                        *(*0x20 + -0x10) = iVar6 * 0x2000;\n                        if (arg1 != '\\0') {\n                            *(*0x20 + -0x58) = 0x42577f;\n                            fcn.0042c9a0();\n                        }\n                        *(*0x20 + -0x58) = 0x42578b;\n                        iVar6 = fcn.0042ca60();\n                        uVar3 = *(*0x20 + -0x2b);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x4257ed;\n                        fcn.0042cb40(uVar7);\n                        arg1_00 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x425813;\n                        fcn.004288e0(arg1_00);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x0042585c:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a68) = *(iVar6 + 0x16a68) - *(iVar6 + 0x16a38);\n                            *puVar5 = *(iVar6 + 0x16a50);\n                            *(iVar6 + 0x16a50) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0xdc8);\n                        if (0x7f < uVar7) goto code_r0x0042585c;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0xdd0 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0xdc8) = *(iVar6 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x42589b;\n                        fcn.0045ca80(0x80);\n                        goto code_r0x0042589b;\n                    }\n                    goto code_r0x004258bd;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00425736;\ncode_r0x0042589b:\n                    *(*0x20 + -0x58) = 0x4258ac;\n                    fcn.00433640();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x4258bd;\n                fcn.00433640();\ncode_r0x004258bd:\n                *(*0x20 + -0x58) = 0x4258ca;\n                in_RAX = fcn.0045caa0(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10130);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x58) = 0x4258eb;\n            fcn.00434de0();\n            arg1._0_1_ = uVar7;\n            *(*0x20 + -0x58) = 0x4258fc;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x425906;\n            fcn.004356a0();\n            *(*0x20 + -0x58) = 0x425917;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x425925;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x425936;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x425945;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x425956;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x425965;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x425976;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x425985;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x42598a;\n            fcn.00435040();\n            *(*0x20 + -0x58) = 0x42598f;\n            fcn.00434e60();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x58) = 0x4259a5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = arg1;\n        *(puVar8 + -8) = 0x4259b9;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_1_ = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2164
    },
    "00426440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426440(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4264f0;\n                fcn.00416120(uVar2);\n                *(*0x20 + -0x38) = 0x4264fe;\n                fcn.0040ac20();\n                *0x56c1d8 = *0x56c1d8 - *0x56c1a8;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x56c1c0;\n                *(*0x20 + -0x38) = 0x426538;\n                *0x56c1c0 = puVar3;\n                fcn.0040ae40();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x42648c;\n                fcn.0042ad80(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x42649a;\n                fcn.0040ac20();\n                *0x56c220 = *0x56c220 - *0x56c1f0;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x56c208;\n                *(*0x20 + -0x38) = 0x4264d3;\n                *0x56c208 = puVar3;\n                fcn.0040ae40();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x426553;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426568;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 774
    },
    "0042a660": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042a660(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a6ad;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a6b8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 308
    },
    "0042a6c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0042a6c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    uint64_t uVar2;\n    uint64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong *in_R9;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \ncode_r0x0042a6c0:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x53ecb0 != NULL) {\ncode_r0x0042a752:\n            uVar4 = 0;\n            for (iVar5 = 0; iVar5 < unaff_RDI; iVar5 = iVar5 + 1) {\n                uVar4 = (*(arg1 + iVar5 * 8) + uVar4) * 0x401;\n                uVar4 = uVar4 >> 6 ^ uVar4;\n            }\n            uVar4 = (uVar4 + unaff_RBX) * 0x401;\n            uVar4 = (uVar4 ^ uVar4 >> 6) * 9;\n            uVar4 = uVar4 ^ uVar4 >> 0xb;\n            in_RDX = uVar4 / 179999;\n            iVar5 = in_RDX * 179999;\n            uVar2 = uVar4 % 179999;\n            in_R9 = *0x53ecb0;\n            if (uVar2 < 179999) {\n                in_R9 = (*0x53ecb0)[uVar2];\n                do {\n                    if (in_R9 == NULL) {\n                        if (in_R8 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x40) = 0x42a83e;\n                        puVar1 = fcn.0042a540();\n                        in_RDX = puVar1[5];\n                        if (0x20 < in_RDX) {\n                            unaff_RBX = 0x20;\n                            *(*0x20 + -0x40) = 0x42a91f;\n                            uVar2 = fcn.0045cba0(arg1, in_RDX);\n                            goto code_r0x0042a91f;\n                        }\n                        if (*(*0x20 + 0x20) < in_RDX) {\n                            in_RDX = *(*0x20 + 0x20);\n                        }\n                        if (*(*0x20 + 0x18) != puVar1 + 6) {\n                            *(*0x20 + -0x18) = puVar1;\n                            *(*0x20 + -0x40) = 0x42a87b;\n                            fcn.0045d3c0(in_RDX << 3);\n                            puVar1 = *(*0x20 + -0x18);\n                        }\n                        puVar1[3] = *(*0x20 + -0x20);\n                        puVar1[4] = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + -0x10);\n                        *puVar1 = (*0x53ecb0)[iVar5];\n                        (*0x53ecb0)[iVar5] = puVar1;\n                        if (*(*0x20 + 8) == 1) {\n                            puVar1[1] = *0x593548;\n                            *0x593548 = puVar1;\n                        }\n                        else if (*(*0x20 + 8) == 3) {\n                            puVar1[1] = *0x593610;\n                            *0x593610 = puVar1;\n                        }\n                        else {\n                            puVar1[1] = *0x5934c0;\n                            *0x5934c0 = puVar1;\n                        }\n                        return puVar1;\n                    }\n                    if (((in_R9[2] == in_RAX) && (in_R9[3] == uVar4)) && (in_R9[4] == unaff_RBX)) {\n                        in_RDX = in_R9[5];\n                        if (0x20 < in_RDX) goto code_r0x0042a947;\n                        if (unaff_RDI == in_RDX) {\n                            iVar5 = 0;\n                            while( true ) {\n                                if (in_RDX <= iVar5) {\n                                    return in_R9;\n                                }\n                                if (*(arg1 + iVar5 * 8) != in_R9[iVar5 + 6]) break;\ncode_r0x0042a91f:\n                                iVar5 = iVar5 + 1;\n                            }\n                        }\n                    }\n                    in_R9 = *in_R9;\n                } while( true );\n            }\n            goto code_r0x0042a951;\n        }\n        *(*0x20 + 0x30) = in_R8;\n        *(*0x20 + -0x40) = 0x42a70c;\n        puVar1 = fcn.004159c0();\n        if (*0x593680 != 0) {\n            unaff_RDI = 0x53ecb0;\n            *(*0x20 + -0x40) = 0x42a72a;\n            fcn.0045c5e0(arg1, in_RDX, in_R8, in_R9);\n            puVar1 = *0x53ecb0;\n        }\n        *0x53ecb0 = puVar1;\n        if (*0x53ecb0 != NULL) {\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            goto code_r0x0042a752;\n        }\n        goto code_r0x0042a95b;\n    }\n    goto code_r0x0042a96d;\ncode_r0x0042a947:\n    *(*0x20 + -0x40) = 0x42a951;\n    fcn.0045cba0(arg1, in_RDX);\ncode_r0x0042a951:\n    arg1 = 179999;\n    *(*0x20 + -0x40) = 0x42a95b;\n    fcn.0045ca80(179999);\n    unaff_RSI = in_RAX;\ncode_r0x0042a95b:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x40) = 0x42a96c;\n    in_RAX = fcn.00433640();\ncode_r0x0042a96d:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    *(puVar3 + 0x20) = unaff_RDI;\n    *(puVar3 + 0x28) = unaff_RSI;\n    puVar3[0x30] = in_R8;\n    *(puVar3 + -8) = 0x42a990;\n    fcn.0045a3a0();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = *(puVar3 + 0x20);\n    unaff_RSI = *(puVar3 + 0x28);\n    in_R8 = puVar3[0x30];\n    *0x20 = puVar3;\n    goto code_r0x0042a6c0;\n}\n",
        "token_count": 1933
    },
    "0042ca60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042ca60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.0040ac20(in_RAX + 0xde8);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x0042caf2;\n    }\n    uVar5 = *(in_RAX + 0xde0) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x4a0;\n    }\n    fcn.0045ca80(3);\ncode_r0x0042caf2:\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00433640();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 339
    },
    "0042e8a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e8a0(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x53ec70;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42e8fe;\n            fcn.00430a80();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42e945;\n            iVar3 = fcn.00430920();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42e970;\n            fcn.0042f160(0x21);\n            uVar5 = *0x5935e8;\n            if (*0x5935e8 < 0x106) {\n                *(*0x20 + -0x18) = *0x5935e8;\n                *(*0x20 + -0x78) = 0x42e9a5;\n                fcn.0045d3c0(*0x5935e8);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042eb25;\n                    *(uVar5 + 0x594040) = *((*(iVar4 + 0x59422a) >> 4) + 0x4a89b4);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042eb15;\n                    *(uVar5 + 0x594041) = *((*(iVar4 + 0x59422a) & 0xf) + 0x4a89b4);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x594040;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42ea93;\n                        fcn.00430c80();\n                        *(*0x20 + -0x78) = 0x42eaac;\n                        fcn.0045df00();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x593402 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42ead7;\n                        fcn.00434de0();\n                        *(*0x20 + -0x78) = 0x42eae8;\n                        fcn.004356e0();\n                        *(*0x20 + -0x78) = 0x42eaed;\n                        fcn.00434e60();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x594040) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42eb15;\n                fcn.0045ca80(0x20b);\ncode_r0x0042eb15:\n                *(*0x20 + -0x78) = 0x42eb25;\n                fcn.0045ca80(0x20b);\ncode_r0x0042eb25:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42eb32;\n                fcn.0045ca80(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42eb3c;\n            fcn.0045cae0(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42eb45;\n        fcn.0045a3a0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1530
    },
    "00434040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00434040(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00434040:\n    puVar7 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar7 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar8 == 0) || (*(iVar8 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar5 = 0;\n            iVar6 = 0;\n            iVar4 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar5) {\n                                    bVar11 = *(iVar5 + 0x300) == iVar6;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x434158;\n                                cVar2 = fcn.004378c0(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar5 = *(*0x20 + -0x20);\n                                    iVar6 = *(*0x20 + -0x50);\n                                    iVar4 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + 8);\n                                    *(iVar8 + 0xb1) = 0x101;\n                                    *(iVar8 + 0x10) = 0xfffffffffffffade;\n                                    iVar8 = *(iVar8 + 0x30);\n                                    *(*0x20 + -0x10) = iVar8;\n                                    iVar6 = *(iVar8 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar6;\n                                    if (*(*0x20 + -0x20) == iVar8) {\n                                        bVar11 = iVar6 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x4341c5;\n                                    fcn.00437500(2);\n                                    if ((*0x5938d8 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x4341dd;\n                                        fcn.0045e360();\n                                        iVar4 = *(*0x20 + -0x38);\n                                        if (iVar4 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x43420e;\n                                            fcn.00430f60();\n                                            iVar4 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    iVar6 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00434330;\n                        }\n                        if (uVar10 < 3) goto code_r0x0043429a;\n                    }\ncode_r0x004342f2:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x434306;\n                    cVar2 = fcn.004378c0(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar5 = *(*0x20 + -0x20);\n                    iVar6 = *(*0x20 + -0x50);\n                    iVar4 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x4342ba;\n                            cVar2 = fcn.00437e80(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x004342f2;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar5 = *(*0x20 + -0x20);\n                            iVar6 = *(*0x20 + -0x50);\n                            iVar4 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x0043429a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00434453;\n                        }\n                    }\n                }\ncode_r0x00434330:\n                *(*0x20 + -0x38) = iVar4;\n                *(*0x20 + -0x50) = iVar6;\n                *(*0x20 + -0x20) = iVar5;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x43434c;\n                    fcn.0045e360();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x434375;\n                fcn.0045e360();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x4343a5;\n                    fcn.0045c180();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4b1128;\n                    *(*0x20 + -0x78) = 0x4343d5;\n                    fcn.0045a260();\n                    *(*0x20 + -0x78) = 0x4343ee;\n                    fcn.0045e360();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x50);\n                iVar5 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x0043456b;\n    }\n    goto code_r0x0043457d;\ncode_r0x00434453:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x434473;\n    fcn.00434de0();\n    *(*0x20 + -0x78) = 0x434485;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x43448f;\n    fcn.00435660();\n    *(*0x20 + -0x78) = 0x4344a5;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x4344af;\n    fcn.004354e0();\n    *(*0x20 + -0x78) = 0x4344c5;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x4344d0;\n    fcn.004353e0();\n    *(*0x20 + -0x78) = 0x4344d5;\n    fcn.00435040();\n    *(*0x20 + -0x78) = 0x4344da;\n    fcn.00434e60();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x4344fa;\n    fcn.00434de0();\n    *(*0x20 + -0x78) = 0x43450b;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x434515;\n    fcn.00435660();\n    *(*0x20 + -0x78) = 0x434526;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x434530;\n    fcn.004354e0();\n    *(*0x20 + -0x78) = 0x434545;\n    fcn.004356e0();\n    *(*0x20 + -0x78) = 0x434550;\n    fcn.004353e0();\n    *(*0x20 + -0x78) = 0x434555;\n    fcn.00435040();\n    *(*0x20 + -0x78) = 0x43455a;\n    fcn.00434e60();\n    *(*0x20 + -0x78) = 0x43456b;\n    fcn.00433640();\ncode_r0x0043456b:\n    *(*0x20 + -0x78) = 0x43457c;\n    in_RAX = fcn.00433640();\ncode_r0x0043457d:\n    *(puVar7 + 8) = in_RAX;\n    *(puVar7 + -8) = 0x434587;\n    fcn.0045eaa0();\n    in_RAX = *(puVar7 + 8);\n    *0x20 = puVar7;\n    goto code_r0x00434040;\n}\n",
        "token_count": 2999
    },
    "004348a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004348a0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x527370)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x434947;\n            iVar4 = fcn.0044b660();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x434969;\n            iVar3 = fcn.0044c5c0(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x27) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x27 + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x130) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x25) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x27;\n            *(*0x20 + -0x78) = 0x4349ef;\n            piVar5 = fcn.0044bde0();\n            if (*(*(*0x20 + -0x10) + 0x27) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x00434aaa:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x434af4;\n                        cVar2 = fcn.004027a0(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x434baa;\n                    fcn.0044b600();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x434c13;\n                fcn.00433640();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x434a65;\n                iVar3 = fcn.0044c480(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x00434aaa;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar3 * 0x14);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x434a94;\n                    piVar5 = fcn.0044bf40(uVar1);\n                    goto code_r0x00434aaa;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x434c1d;\n            in_RAX = fcn.0045ca80(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x434c37;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1940
    },
    "00437500": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00437500(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x43756b;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x43757c;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437586;\n                fcn.00435660();\n                *(*0x20 + -0x48) = 0x437597;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x4375a5;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x4375b6;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x4375c5;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x4375ca;\n                fcn.00435040();\n                *(*0x20 + -0x48) = 0x4375cf;\n                fcn.00434e60();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x4375f5;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x437606;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437610;\n                fcn.00435660();\n                *(*0x20 + -0x48) = 0x437625;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x43762f;\n                fcn.004354e0();\n                *(*0x20 + -0x48) = 0x437645;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437650;\n                fcn.004353e0();\n                *(*0x20 + -0x48) = 0x437655;\n                fcn.00435040();\n                *(*0x20 + -0x48) = 0x43765a;\n                fcn.00434e60();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x43767a;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x43768b;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x437695;\n                fcn.00435660();\n                *(*0x20 + -0x48) = 0x4376a6;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x4376b0;\n                fcn.004354e0();\n                *(*0x20 + -0x48) = 0x4376c5;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x4376d0;\n                fcn.004353e0();\n                *(*0x20 + -0x48) = 0x4376d5;\n                fcn.00435040();\n                *(*0x20 + -0x48) = 0x4376da;\n                fcn.00434e60();\n                *(*0x20 + -0x48) = 0x4376eb;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x48) = 0x4376f0;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x437705;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43770f;\n            fcn.00435660();\n            *(*0x20 + -0x48) = 0x437725;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x437730;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x437745;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x437750;\n            fcn.00435540();\n            *(*0x20 + -0x48) = 0x437755;\n            fcn.00435040();\n            *(*0x20 + -0x48) = 0x43775a;\n            fcn.00434e60();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x437785;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x437796;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x4377a5;\n            fcn.00435660();\n            *(*0x20 + -0x48) = 0x4377b6;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x4377c5;\n            fcn.004354e0();\n            *(*0x20 + -0x48) = 0x4377d6;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x4377e5;\n            fcn.004353e0();\n            *(*0x20 + -0x48) = 0x4377ea;\n            fcn.00435040();\n            *(*0x20 + -0x48) = 0x4377ef;\n            fcn.00434e60();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x43780f;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x437825;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43782f;\n            fcn.00435660();\n            *(*0x20 + -0x48) = 0x437845;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43784f;\n            fcn.004354e0();\n            *(*0x20 + -0x48) = 0x437865;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x437870;\n            fcn.004353e0();\n            *(*0x20 + -0x48) = 0x437875;\n            fcn.00435040();\n            *(*0x20 + -0x48) = 0x43787a;\n            fcn.00434e60();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x43788b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43789e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2267
    },
    "004378c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004378c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                bVar2 = unaff_EBX == *(in_RAX + 0x90);\n                if (bVar2) {\n                    *(in_RAX + 0x90) = arg1;\n                }\n                return arg1 & 0xffffff00 | bVar2;\n            }\n            *(*0x20 + -0x20) = 0x437913;\n            fcn.00434de0();\n            *(*0x20 + -0x20) = 0x437925;\n            fcn.004356e0();\n            *(*0x20 + -0x20) = 0x437930;\n            fcn.00435540();\n            *(*0x20 + -0x20) = 0x437945;\n            fcn.004356e0();\n            *(*0x20 + -0x20) = 0x437950;\n            fcn.00435540();\n            *(*0x20 + -0x20) = 0x437955;\n            fcn.00435040();\n            *(*0x20 + -0x20) = 0x43795a;\n            fcn.00434e60();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x43796b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x43797e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 656
    },
    "00438220": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438220(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint32_t uVar8;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xd8) < 1) {\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x60) = 0x43825c;\n                fcn.0040ac20();\n                uVar1 = *0x540060;\n                *0x540064 = *0x593450;\n                *0x540060 = 1;\n                *(*0x20 + -0x60) = 0x43827b;\n                fcn.004409e0(uVar1);\n                *(*(*(*(*0x20 + -0x18) + 0x30) + 0xa0) + 4) = 3;\n                *0x540064 = *0x540064 + -1;\n                *(*0x20 + -0x10) = *0x53f640;\n                *(*0x20 + -0x30) = *0x53f648;\n                uVar9 = *0x53f640;\n                uVar5 = *0x53f648;\n                for (iVar3 = 0; iVar3 < uVar5; iVar3 = iVar3 + 1) {\n                    iVar4 = *(uVar9 + iVar3 * 8);\n                    if (*(iVar4 + 4) == 2) {\n                        LOCK();\n                        bVar10 = *(iVar4 + 4) == 2;\n                        if (bVar10) {\n                            *(iVar4 + 4) = 3;\n                        }\n                        uVar8 = bVar10;\n                    }\n                    else {\n                        uVar8 = 0;\n                    }\n                    unaff_RSI = uVar8;\n                    if (uVar8 != '\\0') {\n                        if (*0x545610 != '\\0') {\n                            *(*0x20 + -0x38) = iVar3;\n                            *(*0x20 + -0x28) = iVar4;\n                            *(*0x20 + -0x60) = 0x438317;\n                            fcn.00450b80(uVar9, uVar5, 3);\n                            *(*0x20 + -0x60) = 0x438325;\n                            fcn.00450400();\n                            uVar9 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x30);\n                            iVar4 = *(*0x20 + -0x28);\n                            iVar3 = *(*0x20 + -0x38);\n                        }\n                        *(iVar4 + 0x14) = *(iVar4 + 0x14) + 1;\n                        *0x540064 = *0x540064 + -1;\n                    }\n                }\n                while( true ) {\n                    *(*0x20 + -0x60) = 0x43835f;\n                    iVar3 = fcn.004419a0();\n                    if (iVar3 == 0) break;\n                    *(iVar3 + 4) = 3;\n                    *0x540064 = *0x540064 + -1;\n                }\n                *(*0x20 + -0x44) = *0x540064;\n                *(*0x20 + -0x60) = 0x43837d;\n                fcn.0040ae40();\n                if (0 < *(*0x20 + -0x44)) {\n                    while( true ) {\n                        *(*0x20 + -0x60) = 0x43839d;\n                        cVar2 = fcn.0040b380();\n                        if (cVar2 != '\\0') break;\n                        *(*0x20 + -0x60) = 0x43838c;\n                        fcn.004409e0();\n                    }\n                    *0x540068 = 0;\n                }\n                if (*0x540064 == 0) {\n                    iVar4 = 0;\n                    iVar3 = 0;\n                    uVar9 = 0;\n                    uVar5 = *0x53f640;\n                    uVar6 = *0x53f648;\n                    do {\n                        unaff_RSI = uVar9;\n                        if (uVar6 <= iVar4) {\ncode_r0x004383de:\n                            uVar6 = *0x59343c;\n                            uVar5 = uVar9;\n                            if (*0x59343c != 0) {\n                                *(*0x20 + -0x40) = iVar3;\n                                *(*0x20 + -0x20) = uVar9;\n                                *(*0x20 + -0x60) = 0x438405;\n                                fcn.0040ac20();\n                                *(*0x20 + -0x60) = 0x438413;\n                                fcn.0040ac20();\n                                iVar3 = *(*0x20 + -0x40);\n                                uVar5 = *(*0x20 + -0x20);\n                            }\n                            if (iVar3 == 0) {\n                                return;\n                            }\n                            *(*0x20 + -0x60) = 0x43843a;\n                            iVar4 = fcn.00433640();\n                            uVar9 = unaff_RSI;\n                        }\n                        if (*(*(uVar5 + iVar4 * 8) + 4) != 3) {\n                            iVar3 = 0x2e;\n                            uVar9 = 0x4af080;\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\n                iVar3 = 0x29;\n                uVar9 = 0x4ae667;\n                goto code_r0x004383de;\n            }\n            *(*0x20 + -0x60) = 0x43847a;\n            fcn.00433640();\n        }\n        *(puVar7 + -8) = 0x438485;\n        fcn.0045a3a0();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1499
    },
    "0043b360": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0043b360(void)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar6;\n            iVar5 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar5) {\n                    return 0;\n                }\n                uVar11 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar11) * ZEXT816(uVar11 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar11;\n                uVar11 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                if (*0x53f760 == 0) goto code_r0x0043b6b2;\n                if (*0x53f770 == 0) goto code_r0x0043b6ad;\n                uVar12 = (uVar11 & 0xffffffff) % (*0x53f770 & 0xffffffff);\n                arg1 = *0x53f770;\n                if (*0x53f770 <= uVar12) break;\n                *(*0x20 + -0x50) = iVar5;\n                uVar1 = *(*0x53f768 + uVar12 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x53f760;\n                *(*0x20 + -0x20) = (uVar11 & 0xffffffff) % *0x53f760;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar11 = uVar1 & 0xffffff00 | iVar5 == 3;\n                *(*0x20 + -0x5b) = iVar5 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x540060 != 0) {\n                        return 0;\n                    }\n                    uVar1 = *(*0x20 + -0x20);\n                    arg1 = *0x53f648;\n                    if (*0x53f648 <= uVar1) {\ncode_r0x0043b69d:\n                        *(*0x20 + -0x80) = 0x43b6a5;\n                        fcn.0045ca80(arg1);\n                        goto code_r0x0043b6a5;\n                    }\n                    arg1 = *(*0x53f640 + uVar1 * 8);\n                    uVar12 = *0x53f640;\n                    if (uVar6 != arg1) {\n                        if (iVar5 != 3) {\n                            bVar13 = false;\ncode_r0x0043b500:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x43b525;\n                                iVar3 = fcn.0043c240();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x0043b540:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x0043b540;\n                                }\n                                if (iVar5 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar3;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x43b565;\n                                    iVar5 = fcn.00441f00();\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar3 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar11 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x10);\n                                iVar5 = *(*0x20 + -0x50);\n                                in_RAX = iVar3;\n                            }\n                            uVar4 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x53f6a8;\n                            if (uVar4 < *0x53f6a8) {\n                                uVar1 = *(*0x53f6a0 + uVar4 * 4);\n                                uVar12 = uVar1;\n                                if ((uVar1 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x43b5f2;\n                                    iVar5 = fcn.00442260(uVar11);\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar5 = *(*0x20 + -0x50);\n                                    uVar11 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar6 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043b61f;\n                            }\n                            goto code_r0x0043b68d;\n                        }\n                        uVar12 = *0x53f6e8;\n                        if (uVar1 >> 5 < *0x53f6e8) {\n                            bVar13 = (*(*0x53f6e0 + (uVar1 >> 5) * 4) >> (uVar1 & 0x1f) & 1) != 0;\n                            goto code_r0x0043b500;\n                        }\ncode_r0x0043b695:\n                        *(*0x20 + -0x80) = 0x43b69d;\n                        fcn.0045ca80(uVar12);\n                        goto code_r0x0043b69d;\n                    }\ncode_r0x0043b61f:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                    arg1 = uVar1;\n                    if (uVar1 == 0) {\n                        *(*0x20 + -0x80) = 0x43b68d;\n                        fcn.00431cc0();\ncode_r0x0043b68d:\n                        *(*0x20 + -0x80) = 0x43b695;\n                        fcn.0045ca80(uVar12);\n                        goto code_r0x0043b695;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar1;\n                }\n                iVar5 = iVar5 + 1;\n            }\ncode_r0x0043b6a5:\n            *(*0x20 + -0x80) = 0x43b6ad;\n            fcn.0045ca80(arg1);\ncode_r0x0043b6ad:\n            *(*0x20 + -0x80) = 0x43b6b2;\n            fcn.00431cc0();\ncode_r0x0043b6b2:\n            *(*0x20 + -0x80) = 0x43b6b7;\n            in_RAX = fcn.00431cc0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x43b6c5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2193
    },
    "00444e40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00444f13)\n// WARNING: Removing unreachable block (ram,0x00444f34)\n\nulong fcn.00444e40(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x59387c + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x593854) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x593848);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x593848;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x59387c = *0x59387c + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x593878 == 0) {\n                    LOCK();\n                    *0x593878 = 2;\ncode_r0x00444f58:\n                    LOCK();\n                    *0x59387c = *0x59387c + -1;\n                    return 1;\n                }\n                if (*0x593878 == 1) {\n                    LOCK();\n                    *0x593878 = 0;\n                    *(*0x20 + -0x20) = 0x444f51;\n                    fcn.0040af20();\n                    goto code_r0x00444f58;\n                }\n                if (*0x593878 == 2) goto code_r0x00444f58;\n                *(*0x20 + -0x20) = 0x444f88;\n                fcn.00433640();\n                iVar3 = *0x59387c;\n            }\n            *0x59387c = iVar3;\n            *(*0x20 + -0x20) = 0x444f92;\n            in_EAX = fcn.0045ca80(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x444f9c;\n        fcn.0045a3a0();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 754
    },
    "00449da0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00449da0(int64_t *param_1, ulong param_2, ulong param_3, int64_t *param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t **arg2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t arg1;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *piVar11;\n    int64_t *unaff_RBX;\n    uchar *puVar12;\n    ulong unaff_RBP;\n    int64_t *piVar13;\n    int64_t **arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x88 && *0x20 + -0x88 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x108;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0x58) = in_RAX;\n            *(*0x20 + -0x118) = *0x20 + -8;\n            *(*0x20 + -0x110) = 0x449def;\n            arg2 = fcn.0045cd30();\n            unaff_RBP = *(*0x20 + -0x118);\n            while( true ) {\n                piVar7 = arg2[4];\n                piVar10 = arg2[3];\n                arg3 = arg2 + 3;\n                *(*0x20 + -0x60) = arg3;\n                if (1 < piVar7) break;\n                param_4 = arg2[1];\n                piVar11 = arg2[2];\n                if (param_4 == NULL) {\n                    if (piVar7 == NULL) {\n                        return 0;\n                    }\n                    if (piVar7 == 0x1) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x44a22f;\n                        uVar8 = fcn.0045d09a();\n                        *(uVar8 + 0x20) = 0;\n                        *(uVar8 + 0x28) = 2;\n                        if (*0x593680 == 0) {\n                            *(uVar8 + 0x18) = uVar8 + 0x30;\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x44a265;\n                            uVar8 = fcn.0045c700(param_1, uVar8 + 0x30, arg3, param_4);\n                        }\n                        goto code_r0x0044a3be;\n                    }\n                    break;\n                }\n                param_1 = **arg2;\n                arg2[1] = param_4 + -1;\n                arg2[2] = piVar11 + -1;\n                piVar10 = (-(piVar11 + -1) >> 0x3f & 8) + *arg2;\n                if (*0x593680 == 0) {\n                    *arg2 = piVar10;\n                }\n                else {\n                    *(*0x20 + -0x110) = 0x449e65;\n                    fcn.0045c700(param_1, piVar10, arg3, param_4);\n                }\n                *(*0x20 + -200) = param_1;\n                *(*0x20 + -0x110) = 0x449e72;\n                iVar3 = fcn.0044b660();\n                if (iVar3 == 0) {\n                    if (*0x53ecb8 == 0) {\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x449e9c;\n                        uVar4 = fcn.0044a480();\n                        iVar3 = *(*0x20 + 0x58);\n                        piVar7 = *(iVar3 + 0x20);\n                        piVar10 = piVar7 + unaff_RBX;\n                        *(*0x20 + -0x98) = piVar10;\n                        iVar5 = *(iVar3 + 0x18);\n                        piVar11 = piVar7;\n                        param_1 = unaff_RBX;\n                        piVar13 = *(iVar3 + 0x28);\n                        if (*(iVar3 + 0x28) < piVar10) {\n                            *(*0x20 + -0xa0) = unaff_RBX;\n                            *(*0x20 + -0x68) = uVar4;\n                            *(*0x20 + -0xa8) = piVar7;\n                            *(*0x20 + -0x110) = 0x449ee5;\n                            iVar5 = fcn.00445200(piVar7);\n                            piVar11 = *(*0x20 + -0xa8);\n                            param_1 = *(*0x20 + -0xa0);\n                            piVar10 = *(*0x20 + -0x98);\n                            piVar13 = piVar7;\n                        }\n                        unaff_RBX = param_1;\n                        if (piVar10 < piVar11) goto code_r0x0044a44f;\n                        *(*0x20 + -0xa0) = piVar13;\n                        *(*0x20 + -0x70) = iVar5;\n                        param_4 = piVar11 * 0x50;\n                        unaff_RBX = (piVar11 - piVar13 >> 0x3f & param_4) + iVar5;\n                        *(*0x20 + -0x110) = 0x449f53;\n                        fcn.00411980(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[4] = *(*0x20 + -0x98);\n                        arg2[5] = *(*0x20 + -0xa0);\n                        if (*0x593680 == 0) {\n                            arg2[3] = *(*0x20 + -0x70);\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x449f9f;\n                            arg2 = fcn.0045c700(param_1, *(*0x20 + -0x70), iVar5, param_4);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x80) = iVar3;\n                    *(*0x20 + -0x110) = 0x449fbc;\n                    uVar4 = fcn.0044b560();\n                    *(*0x20 + -0xb8) = uVar4;\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x110) = 0x449fd6;\n                    uVar6 = fcn.0044bde0();\n                    uVar9 = *(*0x20 + -200);\n                    uVar8 = *(*0x20 + -0xb8);\n                    if (uVar8 < uVar9) {\n                        uVar9 = uVar9 - 1;\n                    }\n                    iVar3 = *(*0x20 + -0x80);\n                    if (*(iVar3 + 0x27) < 4) {\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = NULL;\n                    }\n                    else {\n                        uVar1 = *(iVar3 + *(iVar3 + 0x1c) * 4 + 0x34);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        param_4 = uVar1 + unaff_RBX[0x26] & (uVar1 == 0xffffffff) - 1;\n                    }\n                    iVar5 = iVar3;\n                    if (param_4 != NULL) {\n                        *(*0x20 + -0x90) = param_4;\n                        *(*0x20 + -0xc0) = uVar4;\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -200) = uVar9;\n                        piVar10 = NULL;\n                        *(*0x20 + -0x110) = 0x44a079;\n                        iVar2 = fcn.0044c520(2);\n                        if (iVar2 < 0) {\n                            iVar3 = *(*0x20 + -0x80);\n                            uVar4 = *(*0x20 + -0xc0);\n                        }\n                        else {\n                            if (0xfffff < iVar2) goto code_r0x0044a445;\n                            uVar1 = *(*(*0x20 + -0x90) + 0xc + iVar2 * 0x14);\n                            uVar4 = *(*0x20 + -0x78);\n                            *(*0x20 + -0x110) = 0x44a0ce;\n                            fcn.0044bf40(uVar1);\n                            iVar3 = 0;\n                        }\n                        uVar8 = *(*0x20 + -0xb8);\n                        uVar9 = *(*0x20 + -200);\n                        unaff_RBX = *(*0x20 + -0x78);\n                        iVar5 = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x118) = unaff_RBP;\n                    *(*0x20 + -0x110) = 0x44a10f;\n                    uVar6 = fcn.0045cd30();\n                    unaff_RBP = *(*0x20 + -0x118);\n                    *(*0x20 + -0x58) = uVar9;\n                    *(*0x20 + -0x50) = iVar3;\n                    *(*0x20 + -0x48) = uVar6;\n                    *(*0x20 + -0x40) = uVar4;\n                    *(*0x20 + -0x20) = uVar8;\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    arg2 = *(*0x20 + 0x58);\n                    param_1 = arg2[4];\n                    piVar10 = arg2[3];\n                    piVar7 = piVar10;\n                    if (arg2[5] < param_1 + 1U) {\n                        *(*0x20 + -0x110) = 0x44a174;\n                        piVar7 = fcn.00445200(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                        arg2[5] = param_1;\n                        if (*0x593680 == 0) {\n                            arg2[3] = piVar7;\n                            param_1 = piVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x110) = 0x44a19c;\n                            piVar7 = fcn.0045c5e0(param_1, arg2, uVar9, param_4);\n                            param_1 = piVar10;\n                        }\n                    }\n                    arg2[4] = param_1 + 1;\n                    unaff_RBX = piVar7 + param_1 * 10;\n                    if (*0x593680 == 0) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x44a1d6;\n                        fcn.0045d09a();\n                        unaff_RBP = *(*0x20 + -0x118);\n                        unaff_RBX = piVar7;\n                    }\n                    else {\n                        param_1 = *0x20 + -0x58;\n                        *(*0x20 + -0x110) = 0x44a1f3;\n                        fcn.004117c0(param_1);\n                        arg2 = *(*0x20 + 0x58);\n                    }\n                }\n            }\n            if (piVar7 == 0x2) {\n                *(*0x20 + -0x118) = unaff_RBP;\n                *(*0x20 + -0x110) = 0x44a2af;\n                iVar3 = fcn.0045d09a();\n                unaff_RBP = *(*0x20 + -0x118);\n                uVar9 = *(iVar3 + 0x20);\n                if (1 < uVar9) {\n                    arg1 = *(iVar3 + 0x18) + 0x50;\n                    if (*0x593680 == 0) {\n                        *(*0x20 + -0x118) = unaff_RBP;\n                        *(*0x20 + -0x110) = 0x44a2ef;\n                        uVar8 = fcn.0045d09a();\n                        arg1 = uVar9;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44a307;\n                        fcn.004117c0(arg1);\n                        uVar8 = *(*0x20 + 0x58);\n                        arg3 = *(*0x20 + -0x60);\n                    }\n                    *(uVar8 + 0x20) = 1;\n                    *(uVar8 + 0x28) = 2;\n                    if (*0x593680 == 0) {\n                        *(uVar8 + 0x18) = uVar8 + 0x30;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44a345;\n                        uVar8 = fcn.0045c700(arg1, uVar8 + 0x30, arg3, param_4);\n                    }\ncode_r0x0044a3be:\n                    iVar3 = *(uVar8 + 0x20);\n                    if (*(*0x20 + 0x48) != 0) {\n                        *(*0x20 + -0xb0) = iVar3;\n                        uVar4 = *(*0x20 + 0x50);\n                        uVar6 = *(*0x20 + 8);\n                        *(*0x20 + -0x110) = 0x44a3f6;\n                        uVar8 = fcn.0044c100(uVar6);\n                        *(*0x20 + 0x28) = uVar8;\n                        *(*0x20 + 0x30) = uVar4;\n                        *(*0x20 + 0x38) = uVar6;\n                        iVar3 = *(*0x20 + -0xb0);\n                    }\n                    return uVar8 & 0xffffffffffffff00 | iVar3 != 0;\n                }\n            }\n            else {\n                *(*0x20 + -0x118) = unaff_RBP;\n                *(*0x20 + -0x110) = 0x44a36f;\n                uVar8 = fcn.0045d09a();\n                unaff_RBP = *(*0x20 + -0x118);\n                uVar9 = *(uVar8 + 0x20);\n                param_4 = *(uVar8 + 0x28);\n                if (uVar9 != 0) {\n                    *(uVar8 + 0x20) = uVar9 - 1;\n                    *(uVar8 + 0x28) = param_4 + -1;\n                    iVar3 = *(uVar8 + 0x18) + (-(param_4 + -1) >> 0x3f & 0x50);\n                    if (*0x593680 == 0) {\n                        *(uVar8 + 0x18) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x110) = 0x44a3be;\n                        uVar8 = fcn.0045c700(uVar9, iVar3, arg3, param_4);\n                    }\n                    goto code_r0x0044a3be;\n                }\n                *(*0x20 + -0x110) = 0x44a436;\n                fcn.0045cb40(0);\n            }\n            *(*0x20 + -0x110) = 0x44a445;\n            fcn.0045ca80(uVar9);\ncode_r0x0044a445:\n            *(*0x20 + -0x110) = 0x44a44f;\n            fcn.0045ca80(0x100000);\ncode_r0x0044a44f:\n            param_1 = piVar10;\n            *(*0x20 + -0x110) = 0x44a45a;\n            in_RAX = fcn.0045cb40(param_1);\n        }\n        *(puVar12 + 0x58) = in_RAX;\n        *(puVar12 + -8) = 0x44a465;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 0x58);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3810
    },
    "0044b2a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * fcn.0044b2a0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    uint *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = in_RAX;\n            *(*0x20 + -0x90) = 0x44b2d0;\n            puVar3 = fcn.0044b660();\n            if (puVar3 == NULL) {\n                return NULL;\n            }\n            if (*(puVar3 + 0x27) < 4) {\n                uVar7 = 0;\n            }\n            else {\n                uVar7 = puVar3[puVar3[7] + 0xd] + *(unaff_RBX + 0x130) & (puVar3[puVar3[7] + 0xd] == 0xffffffff) - 1;\n            }\n            if (uVar7 == 0) {\n                return puVar3;\n            }\n            *(*0x20 + -0x30) = uVar7;\n            *(*0x20 + -0x10) = puVar3;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x90) = 0x44b33c;\n            iVar2 = fcn.0044c520(2);\n            if (iVar2 < 0) {\n                return *(*0x20 + -0x10);\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                uVar6 = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x44b373;\n                uVar4 = fcn.0044bf40(uVar1);\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x48) = uVar6;\n                uVar6 = *(*0x20 + -0x38);\n                uVar4 = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x44b397;\n                uVar5 = fcn.0044c100(uVar6);\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x40) = uVar4;\n                *(*0x20 + -0x54) = uVar6;\n                *(*0x20 + -0x90) = 0x44b3b8;\n                uVar6 = fcn.0044b180();\n                *(*0x20 + -0x50) = uVar6;\n                *(*0x20 + -0x90) = 0x44b3c9;\n                puVar3 = fcn.0040cd00();\n                *puVar3 = 0xffffffff;\n                *(puVar3 + 2) = *(*0x20 + -0x50);\n                *(puVar3 + 6) = *(*0x20 + -0x48);\n                if (*0x593680 == 0) {\n                    *(puVar3 + 4) = *(*0x20 + -0x28);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44b405;\n                    puVar3 = fcn.0045c6e0(*(*0x20 + -0x28));\n                }\n                *(puVar3 + 10) = *(*0x20 + -0x40);\n                if (*0x593680 == 0) {\n                    *(puVar3 + 8) = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x44b430;\n                    puVar3 = fcn.0045c6e0();\n                }\n                *(puVar3 + 0xc) = *(*0x20 + -0x54);\n                return puVar3;\n            }\n            *(*0x20 + -0x90) = 0x44b47d;\n            in_RAX = fcn.0045ca80(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x44b488;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1172
    },
    "0044dee0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044dee0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar3 = 0;\n    do {\n        if (arg1 <= iVar3) {\n            return;\n        }\n        puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044dffa:\n        do {\n            while (uVar1 = *(puVar2 + 8),  uVar1 < 4) {\n                if (uVar1 < 2) {\n                    if (uVar1 == 0) {\ncode_r0x0044e0d4:\n                        fcn.0044f300();\n                    }\n                    else {\n                        LOCK();\n                        if (uVar1 == *(puVar2 + 8)) {\n                            *(puVar2 + 8) = 9;\n                            *puVar2 = 0;\n                            fcn.0044d1a0();\n                            LOCK();\n                            if (*(puVar2 + 8) == 9) {\n                                *(puVar2 + 8) = 1;\n                            }\n                            else {\n                                fcn.0044f300();\n                            }\n                            goto code_r0x0044df0b;\n                        }\n                    }\n                }\n                else if (uVar1 == 2) {\ncode_r0x0044e0cd:\n                    fcn.0044f300();\n                }\n                else {\n                    LOCK();\n                    if (uVar1 == *(puVar2 + 8)) {\n                        *(puVar2 + 8) = 5;\n                        *puVar2 = 0;\n                        goto code_r0x0044df0b;\n                    }\n                }\n            }\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044e0cd;\n                goto code_r0x0044e0d4;\n            }\n            if (uVar1 == 6) {\n                fcn.0045a260();\n                goto code_r0x0044dffa;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044e0cd;\n                fcn.0044f300();\n                goto code_r0x0044dffa;\n            }\n            LOCK();\n        } while (uVar1 != *(puVar2 + 8));\n        *(puVar2 + 8) = 9;\n        puVar2[1] = puVar2[7];\n        *puVar2 = 0;\n        fcn.0044d1a0();\n        LOCK();\n        if (*(puVar2 + 8) == 9) {\n            *(puVar2 + 8) = 1;\n        }\n        else {\n            fcn.0044f300();\n        }\ncode_r0x0044df0b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 716
    },
    "0044e140": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e140(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1210) == 0) || (unaff_RBX < *(in_RAX + 0x1210))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1210) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar2 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2288);\n                if (arg1_00 <= noname_0) {\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x88) = 0x44e445;\n                        fcn.0044e4a0(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044e465;\n                arg1_00 = *(*(in_RAX + 0x2280) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar2;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 4) {\n                    if (uVar1 < 2) {\n                        if (uVar1 == 0) {\ncode_r0x0044e38e:\n                            *(*0x20 + -0x88) = 0x44e393;\n                            fcn.0044f300();\n                            in_RAX = *(*0x20 + 8);\n                            noname_0 = *(*0x20 + -0x30);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            arg1 = *(*0x20 + -0x40);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                    else {\n                        if (uVar1 == 2) goto code_r0x0044e38e;\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44e235;\n                            iVar2 = fcn.0044d600(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar2;\n                                *(*0x20 + -0x88) = 0x44e25d;\n                                fcn.0044f300();\n                                iVar2 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                            noname_0 = iVar2 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x10);\n                        }\n                    }\n                }\n                else if (uVar1 < 7) {\n                    if (uVar1 < 6) goto code_r0x0044e38e;\n                    if (uVar1 != 6) goto code_r0x0044e3ba;\n                    *(*0x20 + -0x80) = 0x4b1128;\n                    *(*0x20 + -0x88) = 0x44e3f5;\n                    fcn.0045a260();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    noname_0 = *(*0x20 + -0x30) + -1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                else if (uVar1 < 9) {\n                    LOCK();\n                    if (uVar1 == *(arg1_00 + 8)) {\n                        *(arg1_00 + 8) = 9;\n                        iVar2 = arg1_00[7];\n                        arg1_00[1] = iVar2;\n                        *(*0x20 + -0x88) = 0x44e2e6;\n                        iVar3 = fcn.0044d600(noname_0, iVar2);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        arg1 = unaff_RBX + 1;\n                        if (*(*0x20 + -0x38) < arg1) {\n                            *(*0x20 + -0x28) = iVar3;\n                            iVar3 = *(*0x20 + -0x10);\n                            *(*0x20 + -0x88) = 0x44e318;\n                            iVar2 = fcn.00445200(unaff_RBX);\n                            arg1 = iVar3 + 1;\n                            iVar3 = *(*0x20 + -0x28);\n                            uVar4 = *(*0x20 + -0x40);\n                        }\n                        else {\n                            iVar2 = *(*0x20 + -0x10);\n                            uVar4 = unaff_RBX;\n                            unaff_RBX = *(*0x20 + -0x38);\n                        }\n                        if (*0x593680 == 0) {\n                            *(iVar2 + uVar4 * 8) = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x88) = 0x44e354;\n                            iVar3 = fcn.0045c780(unaff_RBX, iVar2, iVar2 + uVar4 * 8);\n                        }\n                        noname_0 = iVar3 + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                }\n                else {\n                    if (uVar1 == 9) goto code_r0x0044e38e;\ncode_r0x0044e3ba:\n                    *(*0x20 + -0x88) = 0x44e3bf;\n                    fcn.0044f300();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44e465;\n            fcn.00433640();\ncode_r0x0044e465:\n            *(*0x20 + -0x88) = 0x44e470;\n            in_RAX = fcn.0045ca80(arg1_00);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44e485;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1995
    },
    "0044e580": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0044e580(void)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044e580:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044e5a7:\n        arg1 = *(in_RAX + 0x2288);\n        if (arg1 == 0) goto code_r0x0044e80e;\n        arg2 = **(in_RAX + 0x2280);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44e80e;\n            fcn.00433640();\n            goto code_r0x0044e80e;\n        }\n        *(*0x20 + -0x10) = arg2;\n        uVar1 = *(arg2 + 8);\n        if (uVar1 < 4) {\n            if (uVar1 < 2) {\n                if (uVar1 == 0) {\ncode_r0x0044e7a2:\n                    *(*0x20 + -0x30) = 0x44e7a7;\n                    fcn.0044f300();\n                    in_RAX = *(*0x20 + 8);\n                    goto code_r0x0044e7b1;\n                }\n                if (unaff_RBX < arg2[1]) {\n                    return arg2[1];\n                }\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 2;\n                    *(*0x20 + -0x30) = 0x44e7d3;\n                    fcn.0044e840(unaff_RBX);\n                    return 0;\n                }\n                goto code_r0x0044e5a7;\n            }\n            if (uVar1 != 2) {\n                LOCK();\n                if (uVar1 == *(arg2 + 8)) {\n                    *(arg2 + 8) = 4;\n                    *(*0x20 + -0x30) = 0x44e665;\n                    fcn.0044d820(in_RAX, arg2);\n                    LOCK();\n                    if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                        *(*(*0x20 + -0x10) + 0x40) = 5;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x44e689;\n                        fcn.0044f300();\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    LOCK();\n                    *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                    if (*(in_RAX + 0x2288) == 0) {\n                        return -1;\n                    }\n                    goto code_r0x0044e7b1;\n                }\n                goto code_r0x0044e5a7;\n            }\ncode_r0x0044e790:\n            *(*0x20 + -0x30) = 0x44e795;\n            fcn.0044f300();\n            in_RAX = *(*0x20 + 8);\n        }\n        else {\n            if (uVar1 < 6) {\n                if (uVar1 == 4) goto code_r0x0044e790;\n                goto code_r0x0044e7a2;\n            }\n            if (uVar1 == 6) {\n                *(*0x20 + -0x28) = 0x4b1128;\n                *(*0x20 + -0x30) = 0x44e76b;\n                fcn.0045a260();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044e7b1;\n            }\n            if (8 < uVar1) {\n                if (uVar1 == 9) goto code_r0x0044e790;\n                *(*0x20 + -0x30) = 0x44e74f;\n                fcn.0044f300();\n                in_RAX = *(*0x20 + 8);\n                goto code_r0x0044e7b1;\n            }\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044e5a7;\n            *(arg2 + 8) = 9;\n            arg2[1] = arg2[7];\n            *(*0x20 + -0x30) = 0x44e705;\n            fcn.0044d820(in_RAX, arg2);\n            *(*0x20 + -0x30) = 0x44e714;\n            fcn.0044d1a0();\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44e734;\n                fcn.0044f300();\n            }\n            in_RAX = *(*0x20 + 8);\n        }\ncode_r0x0044e7b1:\n        unaff_RBX = *(*0x20 + 0x10);\n        goto code_r0x0044e5a7;\n    }\n    goto code_r0x0044e816;\ncode_r0x0044e80e:\n    *(*0x20 + -0x30) = 0x44e815;\n    in_RAX = fcn.0045ca80(arg1);\ncode_r0x0044e816:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44e825;\n    fcn.0045eaa0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044e580;\n}\n",
        "token_count": 1567
    },
    "0044e9e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e9e0(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    ulong *arg1_00;\n    ulong *arg3;\n    int32_t iVar7;\n    ulong *arg4;\n    ulong *in_R10;\n    int64_t unaff_R12;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    \ncode_r0x0044e9e0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1210) = 0;\n        piVar5 = *(in_RAX + 0x2280);\n        *(*0x20 + -0x18) = piVar5;\n        arg1 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x28) = arg2;\n        puVar3 = NULL;\n        piVar6 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        iVar8 = unaff_R12;\n        do {\n            arg3 = arg1_00;\n            if (puVar3 < arg1) {\n                *(*0x20 + -0x20) = puVar3;\n                *(*0x20 + -0x3c) = arg4;\n                *(*0x20 + -0x38) = arg1_00;\n                *(*0x20 + -0x3d) = piVar6;\n                in_R10 = piVar5[puVar3];\n                *(*0x20 + -0x10) = in_R10;\n                unaff_R12 = in_RAX;\n            }\n            else {\n                for (; arg3 < arg1; arg3 = arg3 + 1) {\n                    if (arg1 <= arg3) goto code_r0x0044ec89;\n                    piVar6 = piVar5 + arg3;\n                    if (*0x593680 == 0) {\n                        piVar5[arg3] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44ec07;\n                        in_RAX = fcn.0045c720(arg1, arg2, arg3, arg4);\n                        in_R10 = arg1_00;\n                    }\n                }\n                iVar7 = arg4;\n                LOCK();\n                puVar1 = in_RAX + 0x229c;\n                arg4 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                LOCK();\n                puVar1 = in_RAX + 0x2298;\n                arg3 = *puVar1;\n                *puVar1 = *puVar1 + -iVar7;\n                if (arg1_00 <= arg2) {\n                    *(in_RAX + 0x2288) = arg1_00;\n                    *(in_RAX + 0x2290) = arg2;\n                    if (*0x593680 == 0) {\n                        *(in_RAX + 0x2280) = piVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x44ec57;\n                        in_RAX = fcn.0045c740(arg1, arg2, arg3, arg4);\n                    }\n                    if (arg1_00 == NULL) {\n                        *(in_RAX + 0x1208) = 0;\n                    }\n                    else {\n                        *(in_RAX + 0x1208) = *(*piVar5 + 8);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x44ec89;\n                arg1 = arg1_00;\n                fcn.0045cb00(arg1_00, arg2);\ncode_r0x0044ec89:\n                *(*0x20 + -0x68) = 0x44ec91;\n                fcn.0045ca80(arg1);\n                unaff_R12 = iVar8;\n                puVar3 = arg1_00;\n                arg1_00 = arg3;\n            }\ncode_r0x0044ec94:\n            do {\n                while (uVar2 = *(in_R10 + 8),  uVar2 < 4) {\n                    in_RAX = unaff_R12;\n                    if (uVar2 < 2) {\n                        if (uVar2 != 0) {\n                            unaff_R12 = iVar8;\n                            if (piVar6 != '\\0') {\n                                if (arg1 <= arg1_00) goto code_r0x0044ee50;\n                                if (*0x593680 == 0) {\n                                    piVar5[arg1_00] = in_R10;\n                                }\n                                else {\n                                    *(*0x20 + -0x68) = 0x44ea97;\n                                    puVar3 = in_R10;\n                                    fcn.0045c780(arg1, arg2, arg1_00);\n                                    arg4 = in_R10;\n                                    in_R10 = puVar3;\n                                }\n                                *(*0x20 + -0x68) = 0x44eaa8;\n                                fcn.0044ef60(arg2, arg2, arg1_00, arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                piVar6 = *(*0x20 + -0x3d);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                            }\n                            arg1_00 = arg1_00 + 1;\n                            goto code_r0x0044ea38;\n                        }\ncode_r0x0044ee0b:\n                        *(*0x20 + -0x68) = 0x44ee10;\n                        fcn.0044f300();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else if (uVar2 == 2) {\ncode_r0x0044edce:\n                        *(*0x20 + -0x68) = 0x44edd3;\n                        fcn.0044f300();\n                        arg1 = *(*0x20 + -0x30);\n                        arg2 = *(*0x20 + -0x28);\n                        piVar5 = *(*0x20 + -0x18);\n                        piVar6 = *(*0x20 + -0x3d);\n                        arg4 = *(*0x20 + -0x3c);\n                        in_R10 = *(*0x20 + -0x10);\n                        unaff_R12 = *(*0x20 + 8);\n                        puVar3 = *(*0x20 + -0x20);\n                        arg1_00 = *(*0x20 + -0x38);\n                        iVar8 = *(*0x20 + 8);\n                    }\n                    else {\n                        LOCK();\n                        iVar8 = unaff_R12;\n                        if (uVar2 == *(in_R10 + 8)) {\n                            *(in_R10 + 8) = 4;\n                            *in_R10 = 0;\n                            LOCK();\n                            bVar9 = *(in_R10 + 8) == 4;\n                            if (bVar9) {\n                                *(in_R10 + 8) = 5;\n                            }\n                            in_R10 = in_R10 & 0xffffffffffffff00 | bVar9;\n                            if (!bVar9) {\n                                *(*0x20 + -0x68) = 0x44eafc;\n                                fcn.0044f300();\n                                arg1 = *(*0x20 + -0x30);\n                                arg2 = *(*0x20 + -0x28);\n                                puVar3 = *(*0x20 + -0x20);\n                                piVar5 = *(*0x20 + -0x18);\n                                arg1_00 = *(*0x20 + -0x38);\n                                arg4 = *(*0x20 + -0x3c);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            arg4 = arg4 + 1;\n                            piVar6 = 0x1;\n                            unaff_R12 = in_RAX;\n                            goto code_r0x0044ea38;\n                        }\n                    }\n                }\n                if (uVar2 < 6) {\n                    if (uVar2 == 4) goto code_r0x0044edce;\n                    goto code_r0x0044ee0b;\n                }\n                if (uVar2 == 6) {\n                    *(*0x20 + -0x60) = 0x4b1128;\n                    *(*0x20 + -0x68) = 0x44ed7c;\n                    fcn.0045a260();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044ec94;\n                }\n                if (8 < uVar2) {\n                    if (uVar2 == 9) goto code_r0x0044edce;\n                    *(*0x20 + -0x68) = 0x44ed34;\n                    fcn.0044f300();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    piVar5 = *(*0x20 + -0x18);\n                    piVar6 = *(*0x20 + -0x3d);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_R10 = *(*0x20 + -0x10);\n                    unaff_R12 = *(*0x20 + 8);\n                    puVar3 = *(*0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x38);\n                    iVar8 = *(*0x20 + 8);\n                    goto code_r0x0044ec94;\n                }\n                LOCK();\n                iVar8 = unaff_R12;\n            } while (uVar2 != *(in_R10 + 8));\n            *(in_R10 + 8) = 9;\n            in_R10[1] = in_R10[7];\n            if (arg1 <= arg1_00) goto code_r0x0044ee48;\n            if (*0x593680 == 0) {\n                piVar5[arg1_00] = in_R10;\n                in_R10 = arg4;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44eb67;\n                fcn.0045c780(arg1, arg2, arg1_00);\n            }\n            *(*0x20 + -0x68) = 0x44eb78;\n            fcn.0044ef60(arg2, arg2, arg1_00, in_R10);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n                *(*(*0x20 + -0x10) + 0x40) = 1;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x44eb98;\n                fcn.0044f300();\n            }\n            in_R10 = *(*0x20 + -0x38);\n            arg1_00 = in_R10 + 1;\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar3 = *(*0x20 + -0x20);\n            piVar5 = *(*0x20 + -0x18);\n            piVar6 = 0x1;\n            arg4 = *(*0x20 + -0x3c);\ncode_r0x0044ea38:\n            puVar3 = puVar3 + 1;\n            iVar8 = unaff_R12;\n        } while( true );\n    }\n    goto code_r0x0044ee59;\ncode_r0x0044ee48:\n    *(*0x20 + -0x68) = 0x44ee50;\n    fcn.0045ca80(arg1);\ncode_r0x0044ee50:\n    *(*0x20 + -0x68) = 0x44ee58;\n    in_RAX = fcn.0045ca80(arg1);\ncode_r0x0044ee59:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x44ee65;\n    fcn.0045a3a0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0044e9e0;\n}\n",
        "token_count": 3287
    },
    "0044f640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f640(int64_t *arg1, ulong noname_1, uint64_t arg3, code *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    code *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t uVar7;\n    code *unaff_RDI;\n    uint32_t uVar8;\n    uint64_t in_R10;\n    uint64_t uVar9;\n    uint64_t in_R11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_SIL;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x38) = arg4;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                *(*0x20 + -0x60) = 0x44f6b0;\n                iVar1 = fcn.0044fd00();\n                arg1 = *(*0x20 + 0x20);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x44f6c6;\n            fcn.0045c460(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            uVar4 = *(*0x20 + -0x20);\n            uVar2 = (*(*0x20 + -0x58) >> 6) - *(uVar4 + 8);\n            unaff_RBX = *(*0x20 + -0x58) >> 6;\n            if (uVar2 == 0) {\n                unaff_RBX = *(uVar4 + 8) + 1;\n            }\n            *(uVar4 + 8) = unaff_RBX;\n            if (uVar2 == 0) {\n                uVar2 = 1;\n            }\n            uVar7 = *(*0x20 + 0x30);\n            if (uVar7 < 0) {\n                uVar5 = *(*0x20 + 0x40);\n                uVar9 = uVar5;\n            }\n            else {\n                uVar5 = *(*0x20 + 0x40);\n                uVar9 = uVar5 + 1;\n            }\n            if (3 < uVar9) {\n                uVar9 = 3;\n            }\n            arg3 = *(uVar4 + 0x10);\n            arg4 = uVar9 & 0xffffffff;\n            in_R11 = *(*0x20 + 0x28);\n            uVar8 = uVar9 << 6 | *(*0x20 + 0x28);\n            in_R10 = uVar8;\n            if (arg3 < 0xfbe8) {\n                *(uVar4 + 0x418 + arg3) = uVar8;\n                in_R10 = *(uVar4 + 0x10) + 1;\n                *(uVar4 + 0x10) = in_R10;\n                if (arg4 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044f780;\n                }\n                unaff_RBX = NULL;\ncode_r0x0044fa00:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (in_R10 < 0xfbe8) {\n                        *(uVar4 + 0x418 + in_R10) = unaff_RBX;\n                        *(uVar4 + 0x10) = in_R10 + 1;\n                        unaff_RBX = uVar4 + in_R10 + 0x418;\ncode_r0x0044f780:\n                        uVar9 = *(uVar4 + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar9) goto code_r0x0044f9d2;\n                            *(uVar4 + 0x418 + uVar9) = uVar2 | 0x80;\n                            uVar9 = uVar9 + 1;\n                            uVar2 = uVar2 >> 7;\n                            in_R10 = uVar2;\n                        }\n                        if (uVar9 < 0xfbe8) {\n                            *(uVar4 + 0x418 + uVar9) = uVar2;\n                            *(uVar4 + 0x10) = uVar9 + 1;\n                            iVar1 = *(*0x20 + 0x38);\n                            iVar3 = 0;\n                            do {\n                                if (iVar3 < uVar5) {\n                                    in_R10 = *(iVar1 + iVar3 * 8);\n                                    in_R11 = *(uVar4 + 0x10);\n                                    goto code_r0x0044f98f;\n                                }\n                                if (uVar7 != 0) {\n                                    if (uVar7 < 1) goto code_r0x0044f862;\n                                    *(*0x20 + -0x30) = arg3;\n                                    *(*0x20 + -0x18) = unaff_RBX;\n                                    unaff_RBX = uVar4 + 0x18;\n                                    unaff_RDI = pe_nt_image_headers64;\n                                    *(*0x20 + -0x60) = 0x44f857;\n                                    uVar2 = fcn.0044fae0(0x80);\n                                    uVar4 = *(*0x20 + -0x20);\n                                    arg3 = *(uVar4 + 0x10);\n                                    goto code_r0x0044f8b1;\n                                }\n                                uVar5 = *(uVar4 + 0x10);\n                                uVar2 = 0;\ncode_r0x0044f929:\n                                if (0x7f < uVar2) {\n                                    if (0xfbe7 < uVar5) goto code_r0x0044f969;\ncode_r0x0044f912:\n                                    *(uVar4 + 0x418 + uVar5) = uVar2 | 0x80;\n                                    uVar2 = uVar2 >> 7;\n                                    uVar5 = uVar5 + 1;\n                                    uVar7 = uVar2;\n                                    goto code_r0x0044f929;\n                                }\n                                if (uVar5 < 0xfbe8) {\n                                    *(uVar4 + 0x418 + uVar5) = uVar2;\n                                    *(uVar4 + 0x10) = uVar5 + 1;\ncode_r0x0044f862:\n                                    while( true ) {\n                                        iVar3 = *(uVar4 + 0x10) - arg3;\n                                        uVar4 = *(*0x20 + -0x28);\n                                        if (iVar3 <= uVar4) {\n                                            if (unaff_RBX != NULL) {\n                                                *unaff_RBX = iVar3 + -2;\n                                            }\n                                            return;\n                                        }\n                                        unaff_RBX = 0x1d;\n                                        *(*0x20 + -0x60) = 0x44f899;\n                                        uVar2 = fcn.00433640();\n                                        while( true ) {\n                                            *(uVar4 + 0x418 + arg3) = uVar2 | 0x80;\n                                            uVar2 = uVar2 >> 7;\n                                            arg3 = arg3 + 1;\ncode_r0x0044f8b1:\n                                            if (uVar2 < 0x80) break;\n                                            uVar5 = uVar4;\n                                            if (0xfbe7 < arg3) goto code_r0x0044f905;\n                                        }\n                                        if (0xfbe7 < arg3) break;\n                                        *(uVar4 + 0x418 + arg3) = uVar2;\n                                        *(uVar4 + 0x10) = arg3 + 1;\n                                        unaff_RBX = *(*0x20 + -0x18);\n                                        arg3 = *(*0x20 + -0x30);\n                                    }\n                                    *(*0x20 + -0x60) = 0x44f905;\n                                    fcn.0045ca80(0xfbe8);\n                                    uVar5 = uVar4;\ncode_r0x0044f905:\n                                    uVar4 = 0xfbe8;\n                                    *(*0x20 + -0x60) = 0x44f912;\n                                    uVar2 = fcn.0045ca80(0xfbe8);\n                                    goto code_r0x0044f912;\n                                }\n                                *(*0x20 + -0x60) = 0x44f969;\n                                fcn.0045ca80(0xfbe8);\ncode_r0x0044f969:\n                                uVar4 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x44f976;\n                                iVar3 = fcn.0045ca80(0xfbe8);\n                                while( true ) {\n                                    *(uVar4 + 0x418 + in_R11) = in_R10 | 0x80;\n                                    in_R10 = in_R10 >> 7;\n                                    in_R11 = in_R11 + 1;\ncode_r0x0044f98f:\n                                    if (in_R10 < 0x80) break;\n                                    if (0xfbe7 < in_R11) goto code_r0x0044f9b8;\n                                }\n                                if (0xfbe7 < in_R11) goto code_r0x0044f9ab;\n                                *(uVar4 + 0x418 + in_R11) = in_R10;\n                                in_R10 = in_R11 + 1;\n                                *(uVar4 + 0x10) = in_R10;\n                                iVar3 = iVar3 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044f9c5;\n                    }\n                    *(*0x20 + -0x60) = 0x44fa4a;\n                    fcn.0045ca80(0xfbe8);\n                }\n                else if (in_R10 < 0xfbe8) goto code_r0x0044f9df;\n                *(*0x20 + -0x60) = 0x44fa57;\n                fcn.0045ca80(0xfbe8);\n            }\n            unaff_SIL = uVar7;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x44fa65;\n            in_RAX = fcn.0045ca80(0xfbe8);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        puVar6[0x28] = unaff_SIL;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + 0x40) = in_R10;\n        *(puVar6 + 0x48) = in_R11;\n        *(puVar6 + -8) = 0x44fa97;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_SIL = puVar6[0x28];\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        in_R10 = *(puVar6 + 0x40);\n        in_R11 = *(puVar6 + 0x48);\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0044f9ab:\n    *(*0x20 + -0x60) = 0x44f9b8;\n    fcn.0045ca80(0xfbe8);\ncode_r0x0044f9b8:\n    *(*0x20 + -0x60) = 0x44f9c5;\n    fcn.0045ca80(0xfbe8);\ncode_r0x0044f9c5:\n    *(*0x20 + -0x60) = 0x44f9d2;\n    fcn.0045ca80(0xfbe8);\ncode_r0x0044f9d2:\n    uVar4 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x44f9df;\n    uVar2 = fcn.0045ca80(0xfbe8);\ncode_r0x0044f9df:\n    *(uVar4 + 0x418 + in_R10) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    in_R10 = in_R10 + 1;\n    arg4 = unaff_RBX;\n    goto code_r0x0044fa00;\n}\n",
        "token_count": 3180
    },
    "00450e00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.00450e00(uchar *arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    ulong uVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uchar uVar15;\n    ulong *unaff_RBX;\n    uint64_t uVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uchar *puVar18;\n    int64_t *piVar19;\n    uint64_t uVar20;\n    code **ppcVar21;\n    uchar *in_R10;\n    uint8_t uVar22;\n    uint64_t in_R11;\n    uint64_t uVar23;\n    uchar *unaff_R14;\n    bool bVar24;\n    uchar in_XMM15 [16];\n    \ncode_r0x00450e00:\n    puVar17 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x2e0 && *0x20 + -0x2e0 != *(unaff_R14 + 0x10)) {\n        puVar17 = *0x20 + -0x360;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) != unaff_R14)) {\n                uVar14 = *0x527288 >> 2;\n                if (*(*(unaff_R14 + 0x30) + 0xf9) != 0) {\n                    uVar14 = *(*(unaff_R14 + 0x30) + 0xf9);\n                }\n                if ((in_RAX == -1) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = *(unaff_RDI + 0x70);\n                    if (unaff_RBX == NULL) {\n                        in_RAX = *(unaff_RDI + 0x40);\n                        unaff_RBX = *(unaff_RDI + 0x38);\n                        uVar10 = *(unaff_RDI + 0x50);\n                    }\n                    else {\n                        in_RAX = *(unaff_RDI + 0x78);\n                        uVar10 = 0;\n                    }\n                }\n                else {\n                    uVar10 = 0;\n                }\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x370) = unaff_RBP;\n                *(*0x20 + -0x368) = 0x450ecf;\n                iVar6 = fcn.0045cd30();\n                unaff_RBP = *(*0x20 + -0x370);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                uVar23 = *(iVar6 + 0x150);\n                iVar9 = *(iVar6 + 0x158);\n                if (arg3 == 0) {\n                    puVar18 = *0x20 + -0x88 & 0xffffffffffffff00 | in_R10 == NULL;\n                }\n                else {\n                    puVar18 = NULL;\n                }\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x240) = in_RAX;\n                *(*0x20 + -0x248) = unaff_RBX;\n                *(*0x20 + -0x332) = puVar18;\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + -0x70) = iVar6;\n                *(*0x20 + -0x2c0) = iVar9;\n                *(*0x20 + -0xb0) = uVar23;\n                *(*0x20 + -0xb8) = uVar10;\n                *(*0x20 + -0x324) = uVar14;\n                if (in_RAX == 0) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    *(*0x20 + -0x38) = *(*0x20 + -0x248) + 8;\n                }\n                *(*0x20 + -0x368) = 0x450f93;\n                iVar6 = fcn.0044b660();\n                if (iVar6 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (puVar13 = in_R10,  puVar2 = arg1,  *(*0x20 + -0x332) != '\\0')) {\n                        *(*0x20 + -0x240) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x368) = 0x451050;\n                        fcn.00434de0();\n                        *(*0x20 + -0x368) = 0x451065;\n                        fcn.004356e0();\n                        *(*0x20 + -0x368) = 0x451072;\n                        fcn.00435540();\n                        *(*0x20 + -0x368) = 0x451077;\n                        fcn.00435040();\n                        *(*0x20 + -0x368) = 0x45107c;\n                        fcn.00434e60();\n                        arg1 = *0x20 + -0x60;\n                        puVar18 = NULL;\n                        *(*0x20 + -0x368) = 0x45109a;\n                        fcn.00454760(arg1);\n                        puVar13 = in_R10;\n                        puVar2 = *(*0x20 + 0x48);\n                    }\n                    if (puVar2 == NULL) {\n                        return NULL;\n                    }\n                    uVar16 = 10;\n                    *(*0x20 + -0x368) = 0x4510cf;\n                    fcn.00433640();\n                    goto code_r0x004510cf;\n                }\n                *(*0x20 + -0x60) = iVar6;\n                *(*0x20 + -0x58) = in_RAX;\n                *(*0x20 + -0x370) = unaff_RBP;\n                *(*0x20 + -0x368) = 0x450fcf;\n                fcn.0045ccf4();\n                unaff_RBP = *(*0x20 + -0x370);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -0x240);\n                in_R10 = *(*0x20 + -0x248);\n                in_R11 = *(*0x20 + 0x30);\n                uVar23 = *(*0x20 + -0xb0);\n                iVar9 = *(*0x20 + -0x2c0);\n                arg3 = *(*0x20 + -0xb8);\n                puVar13 = NULL;\n                uVar10 = 0;\n                uVar16 = 0;\n                unaff_RDI = NULL;\ncode_r0x0045114f:\n                puVar18 = unaff_RDI;\n                if (puVar13 < unaff_RSI) {\n                    *(*0x20 + -0x250) = in_R11;\n                    iVar6 = *(*0x20 + -0x60);\n                    if (*(iVar6 + 0x10) != 0) {\n                        *(*0x20 + -0x78) = iVar6;\n                        *(*0x20 + -0x80) = *(*0x20 + -0x58);\n                        uVar22 = *(iVar6 + 0x25);\n                        cVar4 = *(iVar6 + 0x24);\n                        if (cVar4 == '\\x04') {\n                            uVar22 = uVar22 & 0xfd;\n                        }\n                        if ((((*(*0x20 + -0x50) == arg4) && (*(*0x20 + -0x38) == in_R10)) && (*(arg1 + 0x78) == arg4))\n                           && (*(arg1 + 0x70) == in_R10)) {\n                            uVar22 = uVar22 & 0xfd;\n                        }\n                        *(*0x20 + -0x2e8) = puVar13;\n                        *(*0x20 + -0x300) = unaff_RDI;\n                        *(*0x20 + -0x331) = uVar16;\n                        *(*0x20 + -0x88) = arg3;\n                        *(*0x20 + -0x333) = uVar10;\n                        if (*(*0x20 + -0x30) == 0) {\n                            if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (**(arg1 + 0x30) != arg1)) ||\n                               (uVar10 = (*(arg1 + 0x30))[0x12],  uVar10 == 0)) {\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            else if (cVar4 == '\\f') {\n                                *(*0x20 + -0x50) = *(uVar10 + 0x40);\n                                *(*0x20 + -0x368) = 0x4512ba;\n                                iVar6 = fcn.0044b660();\n                                *(*0x20 + -0x60) = iVar6;\n                                *(*0x20 + -0x58) = uVar16;\n                                uVar22 = *(iVar6 + 0x25);\n                                *(*0x20 + -0x38) = *(*(*(*(*0x20 + -0x70) + 0x30) + 0x90) + 0x38);\n                                iVar9 = *(*(*(*0x20 + -0x70) + 0x30) + 0x90);\n                                uVar23 = *(iVar9 + 0x150);\n                                iVar9 = *(iVar9 + 0x158);\n                            }\n                            else if (cVar4 == '\\x13') {\n                                *(*0x20 + -0x38) = *(uVar10 + 0x38);\n                                uVar23 = *(*(*(arg1 + 0x30) + 0x90) + 0x150);\n                                iVar9 = *(*(*(arg1 + 0x30) + 0x90) + 0x158);\n                                uVar22 = uVar22 & 0xfd;\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                iVar6 = *(*0x20 + -0x78);\n                                uVar16 = *(*0x20 + -0x80);\n                            }\n                            *(*0x20 + -0x2c0) = iVar9;\n                            *(*0x20 + -0xb0) = uVar23;\n                            *(*0x20 + -200) = uVar16;\n                            *(*0x20 + -0xc0) = iVar6;\n                            *(*0x20 + -0x330) = uVar22;\n                            *(*0x20 + -0x368) = 0x45139d;\n                            iVar5 = fcn.0044c280(*(*0x20 + -0x50));\n                            *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38);\n                            *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38) + 8;\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -0x240);\n                            in_R10 = *(*0x20 + -0x248);\n                            uVar22 = *(*0x20 + -0x330);\n                            iVar6 = *(*0x20 + -0xc0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                            uVar23 = *(*0x20 + -0xb0);\n                        }\n                        else {\n                            *(*0x20 + -200) = *(*0x20 + -0x80);\n                            iVar6 = *(*0x20 + -0x78);\n                        }\n                        *(*0x20 + -0x2c0) = iVar9;\n                        *(*0x20 + -0xb0) = uVar23;\n                        *(*0x20 + -0xc0) = iVar6;\n                        if ((uVar22 & 1) == 0) {\n                            if ((uVar22 & 2) == 0) {\ncode_r0x004514b4:\n                                if (*(*0x20 + -0x40) == 0) {\n                                    *(*0x20 + -0x2e0) = *(*0x20 + -0x30) + -8;\n                                    *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                                }\n                                else {\n                                    *(*0x20 + -0x298) = puVar13;\n                                    *(*0x20 + -0x2e0) = 0;\n                                }\n                                *(*0x20 + -0x368) = 0x451505;\n                                iVar7 = fcn.0044b660();\n                                if (iVar7 == 0) {\n                                    arg4 = *(*0x20 + -0x332);\n                                    if (*(*0x20 + -0x332) == 0) {\n                                        arg1 = *(*0x20 + -0x70);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                    }\n                                    else {\n                                        arg1 = *(*0x20 + -0x70);\n                                        if (*(*(arg1 + 0x30) + 0xe8) == '\\0') {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + -0xc0);\n                                            if (in_R10[0x24] == '\\x12') {\n                                                arg4 = 0;\n                                            }\n                                        }\n                                    }\n                                    *(*0x20 + -0x90) = 0;\n                                    *(*0x20 + -0x98) = uVar16;\n                                    in_R11 = *(*0x20 + 0x48);\n                                    if ((in_R11 != 0) || (uVar10 = in_R11,  arg4 != '\\0')) {\n                                        uVar8 = *(*0x20 + -200);\n                                        *(*0x20 + -0x368) = 0x4515bd;\n                                        uVar11 = fcn.0044bde0();\n                                        *(*0x20 + -0xa0) = uVar11;\n                                        *(*0x20 + -600) = uVar8;\n                                        *(*0x20 + -0x260) = *(*0x20 + -0x40);\n                                        *(*0x20 + -0x368) = 0x4515e5;\n                                        fcn.00434de0();\n                                        *(*0x20 + -0x368) = 0x4515f6;\n                                        fcn.004356e0();\n                                        *(*0x20 + -0x368) = 0x45160b;\n                                        fcn.004356e0();\n                                        *(*0x20 + -0x368) = 0x45161c;\n                                        fcn.004356e0();\n                                        *(*0x20 + -0x368) = 0x451629;\n                                        fcn.00435540();\n                                        *(*0x20 + -0x368) = 0x45162e;\n                                        fcn.00435040();\n                                        *(*0x20 + -0x368) = 0x451633;\n                                        fcn.00434e60();\n                                        unaff_RDI = *(*0x20 + -0x2e0);\n                                        *(*0x20 + -0x368) = 0x451657;\n                                        fcn.00454760(*0x20 + -0x60);\n                                        iVar7 = *(*0x20 + -0x90);\n                                        arg1 = *(*0x20 + -0x70);\n                                        uVar16 = *(*0x20 + -0x98);\n                                        in_R10 = *(*0x20 + -0xc0);\n                                        in_R11 = *(*0x20 + 0x48);\n                                        uVar10 = *(*0x20 + 0x48);\n                                    }\n                                    if (uVar10 != 0) goto code_r0x00452825;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                }\n                                uVar10 = *(*0x20 + -0x333);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                iVar6 = *(*0x20 + -0xc0);\n                                uVar23 = *(*0x20 + -0xb0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0xe8) = iVar7;\n                                *(*0x20 + -0xf0) = uVar16;\n                                uVar8 = *(*0x20 + -0x2e8);\n                                uVar16 = *(*0x20 + -0x331);\n                            }\n                            else {\n                                in_R11 = *(*0x20 + 0x48);\n                                if (in_R11 != 0) {\n                                    if (puVar13 < 1) goto code_r0x004514b4;\n                                    if (in_R11 != 0) goto code_r0x00452836;\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                *(*0x20 + -0x2a0) = puVar13;\n                                *(*0x20 + -0xe8) = 0;\n                                *(*0x20 + -0xf0) = 0;\n                                uVar8 = *(*0x20 + -0x2a0);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            *(*0x20 + -0x2a8) = uVar8;\n                            *(*0x20 + -0xd0) = *(*0x20 + -0xf0);\n                            puVar13 = *(*0x20 + -0x2a8);\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0xd0) = 0;\n                            arg3 = 0;\n                        }\n                        iVar7 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x28) = iVar7;\n                        *(*0x20 + -0x28) = iVar7 - 8U;\n                        if (*(*0x20 + -0x38) < iVar7 - 8U) {\n                            *(*0x20 + -0x28) = iVar7 + -0x10;\n                        }\n                        *(*0x20 + -0xe8) = arg3;\n                        ppcVar21 = *(*0x20 + 0x48);\n                        if (ppcVar21 == NULL) {\n                            in_R10 = *(*0x20 + -0x332);\n                            if (*(*0x20 + -0x332) != 0) goto code_r0x0045177f;\n                        }\n                        else {\n                            in_R10 = *(*0x20 + -0x332);\ncode_r0x0045177f:\n                            *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                            if (ppcVar21 == NULL) {\n                                bVar24 = false;\n                            }\n                            else {\n                                bVar24 = *(iVar6 + 8) == -0x80000000;\n                            }\n                            *(*0x20 + -0x18) = *(iVar6 + 8);\n                            *(*0x20 + -0x10) = 0;\n                            if (bVar24) {\n                                *(*0x20 + -0x368) = 0x4517e7;\n                                uVar8 = fcn.00452ea0(*(*0x20 + -200));\n                                *(*0x20 + -0x18) = uVar8;\n                                *(*0x20 + -0x10) = iVar6;\n                                puVar13 = *(*0x20 + -0x2e8);\n                                arg1 = *(*0x20 + -0x70);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x331);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                ppcVar21 = *(*0x20 + 0x48);\n                                in_R10 = *(*0x20 + -0x332);\n                                iVar6 = *(*0x20 + -0xc0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                            }\n                            arg3 = *(*0x20 + -0xe8);\n                            uVar23 = *(*0x20 + -0xb0);\n                        }\n                        *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                        if (uVar10 == '\\0') {\n                            bVar24 = ppcVar21 == NULL;\n                        }\n                        else if (*(*(*0x20 + -0x60) + 0xc) == 0) {\n                            *(*0x20 + -0x48) = 0;\n                            bVar24 = ppcVar21 == NULL;\n                        }\n                        else {\n                            *(*0x20 + -0x368) = 0x45189b;\n                            iVar9 = fcn.0044b180();\n                            *(*0x20 + -0x48) = *(*(*0x20 + -0x60) + 0xc) + iVar9 + 1;\n                            bVar24 = *(*0x20 + 0x48) == 0;\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            ppcVar21 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x332);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                        }\n                        if (bVar24) {\n                            in_R11 = *(*0x20 + 0x38);\n                            uVar20 = in_R11;\n                        }\n                        else {\n                            pcVar3 = *ppcVar21;\n                            *(*0x20 + -0x368) = 0x451942;\n                            cVar4 = (*pcVar3)();\n                            if (cVar4 == '\\0') {\n                                return *(*0x20 + -0x2e8);\n                            }\n                            uVar20 = *(*0x20 + 0x38);\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            ppcVar21 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                        }\n                        puVar18 = unaff_RDI;\n                        if (uVar20 == 0) goto code_r0x00451b56;\n                        iVar9 = *(*0x20 + -0x50);\n                        if (((puVar13 != NULL) || ((*(*0x20 + 8) >> 1 & 1) == 0)) && (uVar10 == '\\0')) {\n                            *(*0x20 + -0x308) = iVar9;\n                            *(*0x20 + -0x368) = 0x4519fe;\n                            iVar9 = fcn.0044b180();\n                            if (iVar9 != *(*0x20 + -0x308)) {\n                                iVar9 = *(*0x20 + -0x308) + -1;\n                                puVar13 = *(*0x20 + -0x2e8);\n                                arg1 = *(*0x20 + -0x70);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x331);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x300);\n                                arg3 = *(*0x20 + -0xe8);\n                                in_R10 = *(*0x20 + -0x332);\n                                in_R11 = *(*0x20 + 0x38);\n                                iVar6 = *(*0x20 + -0xc0);\n                                iVar7 = *(*0x20 + -0x308);\n                                goto code_r0x00451ab8;\n                            }\n                            puVar13 = *(*0x20 + -0x2e8);\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            uVar16 = *(*0x20 + -0x331);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            iVar9 = *(*0x20 + -0x308);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                        }\n                        iVar7 = iVar9 + 1;\ncode_r0x00451ab8:\n                        uVar15 = uVar16;\n                        *(*0x20 + -0x310) = iVar9;\n                        if (*(iVar6 + 0x27) < 4) {\n                            *(*0x20 + -0x2b0) = puVar13;\n                            *(*0x20 + -0x108) = 0;\n                            puVar13 = *(*0x20 + -0x2b0);\n                        }\n                        else {\n                            uVar14 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                            in_R10 = *(*0x20 + -0x332);\n                            *(*0x20 + -0x108) = uVar14 + *(*(*0x20 + -200) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                        }\n                        arg4 = *(*0x20 + -0x108);\n                        if (arg4 != 0) goto code_r0x00452619;\n                        arg4 = *(*0x20 + -0x250);\n                        do {\n                            if (((*(iVar6 + 0x24) != '\\x15') || (cVar4 = uVar16,  cVar4 == '\\t')) ||\n                               ((cVar4 == '\\x12' || (cVar4 == '\\x0e')))) {\n                                if (arg4 < 1) {\n                                    if (puVar13 < unaff_RSI) {\n                                        if (0xfffff < puVar13) {\n                                            *(*0x20 + -0x368) = 0x45280f;\n                                            fcn.0045ca80(0x100000);\ncode_r0x0045280f:\n                                            *(*0x20 + -0x368) = 0x452819;\n                                            fcn.0045ca80(0x100000);\ncode_r0x00452819:\n                                            arg1 = 0x100000;\n                                            *(*0x20 + -0x368) = 0x452825;\n                                            fcn.0045ca80(0x100000);\n                                            goto code_r0x00452825;\n                                        }\n                                        *(in_R11 + puVar13 * 8) = iVar7;\n                                        puVar13 = puVar13 + 1;\n                                    }\n                                }\n                                else {\n                                    arg4 = arg4 - 1;\n                                }\n                            }\n                            uVar16 = *(iVar6 + 0x24);\n                            puVar13 = puVar13 + -1;\n                            uVar23 = *(*0x20 + -0xb0);\n                            iVar9 = *(*0x20 + -0x2c0);\n                            *(*0x20 + -0x250) = arg4;\n                            ppcVar21 = *(*0x20 + 0x48);\n                            puVar18 = unaff_RDI;\ncode_r0x00451b56:\n                            if (in_R10 == '\\0') goto code_r0x00451cba;\n                            *(*0x20 + -0x32d) = uVar16;\n                            *(*0x20 + -600) = puVar13;\n                            unaff_RDI = *(*0x20 + -0x50);\n                            *(*0x20 + -0x318) = unaff_RDI;\n                            if ((puVar13 < 1) && (in_R11 = *(*0x20 + 8),  (in_R11 >> 1 & 1) != 0)) {\n                                *(*0x20 + -0x2b8) = puVar13;\n                                *(*0x20 + -0x32e) = 0;\n                                puVar13 = *(*0x20 + -0x2b8);\n                            }\n                            else {\n                                *(*0x20 + -0x368) = 0x451bb8;\n                                uVar20 = fcn.0044b180();\n                                puVar13 = *(*0x20 + -600);\n                                uVar10 = *(*0x20 + -0x333);\n                                uVar16 = *(*0x20 + -0x32d);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                puVar18 = *(*0x20 + -0x300);\n                                arg3 = *(*0x20 + -0xe8);\n                                unaff_RDI = *(*0x20 + -0x318);\n                                in_R11 = *(*0x20 + 8);\n                                iVar6 = *(*0x20 + -0xc0);\n                                uVar23 = *(*0x20 + -0xb0);\n                                iVar9 = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0x32e) = uVar20 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar20;\n                                arg1 = *(*0x20 + -0x70);\n                            }\n                            uVar14 = uVar16;\n                            if ((*(*0x20 + -0x32e) != '\\0') && (uVar10 == '\\0')) {\n                                unaff_RDI = unaff_RDI + -1;\n                            }\n                            if (*(iVar6 + 0x27) < 4) {\n                                uVar20 = 0;\n                            }\n                            else {\n                                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                                uVar20 = uVar1 + *(*(*0x20 + -200) + 0x130) & (uVar1 == 0xffffffff) - 1;\n                                iVar9 = *(*0x20 + -0x2c0);\n                                uVar10 = uVar23;\n                            }\n                            if (uVar20 == 0) goto code_r0x004521d7;\n                            *(*0x20 + -0x110) = uVar20;\n                            *(*0x20 + -0x238) = in_XMM15;\n                            *(*0x20 + -0x230) = in_XMM15;\n                            *(*0x20 + -0x220) = in_XMM15;\n                            while( true ) {\n                                *(*0x20 + -0x278) = puVar18;\n                                *(*0x20 + -0x331) = uVar16;\n                                *(*0x20 + -0x318) = unaff_RDI;\n                                *(*0x20 + -0x368) = 0x451fdb;\n                                in_R10 = unaff_RDI;\n                                iVar5 = fcn.0044c480(2);\n                                if (iVar5 < 0) {\n                                    puVar13 = *(*0x20 + -600);\n                                    arg1 = *(*0x20 + -0x70);\n                                    unaff_RSI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -0xe8);\n                                    in_R11 = *(*0x20 + 8);\n                                    iVar6 = *(*0x20 + -0xc0);\n                                    uVar23 = *(*0x20 + -0xb0);\n                                    iVar9 = *(*0x20 + -0x2c0);\n                                    uVar14 = *(*0x20 + -0x331);\n                                    unaff_RDI = *(*0x20 + -0x318);\n                                    puVar18 = *(*0x20 + -0x278);\n                                    goto code_r0x004521d7;\n                                }\n                                uVar10 = iVar5;\n                                if (0xfffff < uVar10) break;\n                                *(*0x20 + -0x280) = uVar10 * 5;\n                                iVar9 = *(*0x20 + -0x110);\n                                *(*0x20 + -0x234) = *(iVar9 + 0xc + uVar10 * 0x14);\n                                *(*0x20 + -0x214) = *(iVar9 + uVar10 * 0x14 + 2);\n                                *(*0x20 + -0xa8) = iVar9 + uVar10 * 0x14;\n                                in_R11 = *(*0x20 + 8);\n                                if ((in_R11 & 1) == 0) {\n                                    arg3 = *(*0x20 + -0x331);\n                                    *(*0x20 + -0x368) = 0x452079;\n                                    cVar4 = fcn.00454060(*(*0x20 + -0x70), *(*0x20 + -0x278), arg3);\n                                    if (cVar4 != '\\0') goto code_r0x00452088;\n                                    iVar9 = *(*0x20 + -0x278);\n                                }\n                                else {\ncode_r0x00452088:\n                                    uVar8 = *(*0x20 + -200);\n                                    *(*0x20 + -0x368) = 0x45209d;\n                                    uVar11 = fcn.0044bde0();\n                                    *(*0x20 + -0xf8) = uVar11;\n                                    *(*0x20 + -0x2f0) = uVar8;\n                                    uVar8 = *(*0x20 + -0x318);\n                                    uVar11 = *(*0x20 + -200);\n                                    *(*0x20 + -0x368) = 0x4520c5;\n                                    uVar12 = fcn.0044c220(uVar8);\n                                    *(*0x20 + -0xd8) = uVar12;\n                                    *(*0x20 + -0x2d0) = uVar11;\n                                    *(*0x20 + -0x328) = uVar8;\n                                    *(*0x20 + -0x368) = 0x4520de;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x368) = 0x4520f0;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x368) = 0x452105;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x368) = 0x45210a;\n                                    fcn.00434e60();\n                                    *(*0x20 + -0x368) = 0x45210f;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x368) = 0x452125;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x368) = 0x45213a;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x368) = 0x45214b;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x368) = 0x452157;\n                                    fcn.004354e0(*(*0x20 + -0x328));\n                                    *(*0x20 + -0x368) = 0x45215c;\n                                    fcn.00435040();\n                                    *(*0x20 + -0x368) = 0x452165;\n                                    fcn.00434e60();\n                                    iVar9 = *(*0x20 + -0x278) + 1;\n                                }\n                                *(*0x20 + -0x278) = iVar9;\n                                *(*0x20 + -0x331) = *(*(*0x20 + -0xa8) + 2);\n                                *(*0x20 + -0x368) = 0x451f7c;\n                                iVar9 = fcn.0044b180();\n                                uVar10 = *(*0x20 + -0x110);\n                                unaff_RDI = *(uVar10 + *(*0x20 + -0x280) * 4 + 0x10) + iVar9;\n                                uVar16 = *(*0x20 + -0x331);\n                                puVar18 = *(*0x20 + -0x278);\n                            }\n                            *(*0x20 + -0x368) = 0x4525a6;\n                            uVar10 = fcn.0045ca80(0x100000);\n                            while( true ) {\n                                *(*0x20 + -0x250) = arg3;\n                                *(*0x20 + -600) = uVar10;\n                                *(*0x20 + -0x331) = unaff_RDI[2];\n                                *(*0x20 + -0x368) = 0x4525d8;\n                                iVar9 = fcn.0044b180();\n                                arg4 = *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10) + iVar9;\n                                iVar7 = *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10) + iVar9 + 1;\n                                *(*0x20 + -0x310) = arg4;\n                                uVar15 = *(*0x20 + -0x331);\n                                puVar13 = *(*0x20 + -600);\ncode_r0x00452619:\n                                *(*0x20 + -0x260) = iVar7;\n                                *(*0x20 + -600) = puVar13;\n                                *(*0x20 + -0x331) = uVar15;\n                                unaff_RDI = *(*0x20 + -0x310);\n                                unaff_RSI = *0x20 + -0x210;\n                                *(*0x20 + -0x368) = 0x45264f;\n                                iVar5 = fcn.0044c480(2);\n                                if (iVar5 < 0) break;\n                                uVar10 = iVar5;\n                                if (0xfffff < uVar10) goto code_r0x00452819;\n                                *(*0x20 + -0x278) = uVar10 * 5;\n                                unaff_RSI = *(*0x20 + -0x108);\n                                unaff_RDI = unaff_RSI + uVar10 * 0x14;\n                                if ((((unaff_RSI[uVar10 * 0x14 + 2] == '\\x15') &&\n                                     (cVar4 = *(*0x20 + -0x331),  cVar4 != '\\t')) && (cVar4 != '\\x12')) &&\n                                   (cVar4 != '\\x0e')) {\n                                    uVar10 = *(*0x20 + -600);\n                                    arg3 = *(*0x20 + -0x250);\n                                }\n                                else {\n                                    arg3 = *(*0x20 + -0x250);\n                                    if (arg3 < 1) {\n                                        arg4 = *(*0x20 + 0x40);\n                                        uVar10 = *(*0x20 + -600);\n                                        if (uVar10 < arg4) {\n                                            if (0xfffff < uVar10) goto code_r0x0045280f;\n                                            in_R10 = *(*0x20 + 0x38);\n                                            *(in_R10 + uVar10 * 8) = *(*0x20 + -0x260);\n                                            uVar10 = uVar10 + 1;\n                                        }\n                                        else {\n                                            in_R10 = *(*0x20 + 0x38);\n                                        }\n                                    }\n                                    else {\n                                        arg3 = arg3 - 1;\n                                        in_R10 = *(*0x20 + 0x38);\n                                        uVar10 = *(*0x20 + -600);\n                                    }\n                                }\n                            }\n                            arg1 = *(*0x20 + -0x70);\n                            uVar10 = *(*0x20 + -0x333);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x300);\n                            arg3 = *(*0x20 + -0xe8);\n                            in_R10 = *(*0x20 + -0x332);\n                            in_R11 = *(*0x20 + 0x38);\n                            iVar6 = *(*0x20 + -0xc0);\n                            uVar16 = *(*0x20 + -0x331);\n                            puVar13 = *(*0x20 + -600);\n                            iVar7 = *(*0x20 + -0x260);\n                            arg4 = *(*0x20 + -0x250);\n                        } while( true );\n                    }\n                }\ncode_r0x00451db0:\n                while( true ) {\n                    if (*(*0x20 + -0x332) != '\\0') {\n                        puVar13 = puVar18;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= puVar13)) break;\n                    iVar9 = *(arg1 + 0x80);\n                    if (iVar9 == *(*0x20 + -0x38)) {\n                        return puVar13;\n                    }\n                    *(*0x20 + -0x240) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x2e8) = puVar13;\n                    *(*0x20 + -0x268) = *(arg1 + 0x98);\n                    *(*0x20 + -0x368) = 0x451e1e;\n                    fcn.00434de0();\n                    *(*0x20 + -0x368) = 0x451e2f;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451e3c;\n                    fcn.004354e0();\n                    *(*0x20 + -0x368) = 0x451e4d;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451e5a;\n                    fcn.00435540();\n                    *(*0x20 + -0x368) = 0x451e6b;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451e78;\n                    fcn.00435540();\n                    *(*0x20 + -0x368) = 0x451e7d;\n                    fcn.00435040();\n                    *(*0x20 + -0x368) = 0x451e85;\n                    fcn.00434e60();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -0x240) = arg1;\n                    *(*0x20 + -0x248) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x368) = 0x451ea9;\n                    fcn.00434de0();\n                    *(*0x20 + -0x368) = 0x451eba;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451ec7;\n                    fcn.00435540();\n                    *(*0x20 + -0x368) = 0x451ed8;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451ee5;\n                    fcn.00435540();\n                    *(*0x20 + -0x368) = 0x451ef6;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451f05;\n                    fcn.004354e0();\n                    *(*0x20 + -0x368) = 0x451f16;\n                    fcn.004356e0();\n                    *(*0x20 + -0x368) = 0x451f25;\n                    fcn.004354e0();\n                    *(*0x20 + -0x368) = 0x451f2a;\n                    fcn.00435040();\n                    *(*0x20 + -0x368) = 0x451f2f;\n                    fcn.00434e60();\n                    *(*0x20 + -0x368) = 0x451f45;\n                    puVar13 = in_R10;\n                    fcn.00433640();\n                    in_R10 = puVar13;\n                }\n                return puVar13;\n            }\n            goto code_r0x004528a5;\n        }\n        goto code_r0x004528b6;\n    }\n    goto code_r0x004528c8;\ncode_r0x004521d7:\n    *(*0x20 + -0x278) = puVar18;\n    *(*0x20 + -0x318) = unaff_RDI;\n    if ((in_R11 & 1) == 0) {\n        *(*0x20 + -0x368) = 0x452213;\n        cVar4 = fcn.00454060(arg1, uVar10 & 0xffffffffffffff00 | puVar18 == NULL, uVar14);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        puVar18 = *(*0x20 + -0x278);\n        arg3 = *(*0x20 + -0xe8);\n        iVar6 = *(*0x20 + -0xc0);\n        uVar23 = *(*0x20 + -0xb0);\n        iVar9 = *(*0x20 + -0x2c0);\n        puVar13 = *(*0x20 + -600);\n    }\n    else {\n        cVar4 = '\\x01';\n    }\n    if (cVar4 != '\\0') {\n        uVar8 = *(*0x20 + -200);\n        *(*0x20 + -0x368) = 0x45227a;\n        uVar11 = fcn.0044bde0();\n        *(*0x20 + -0x100) = uVar11;\n        *(*0x20 + -0x2f8) = uVar8;\n        uVar8 = *(*0x20 + -0x318);\n        uVar11 = *(*0x20 + -200);\n        *(*0x20 + -0x368) = 0x4522a5;\n        uVar12 = fcn.0044c220(uVar8);\n        *(*0x20 + -0xe0) = uVar12;\n        *(*0x20 + -0x2d8) = uVar11;\n        *(*0x20 + -0x32c) = uVar8;\n        iVar9 = *(*0x20 + -0x2f8);\n        if (iVar9 == 0xf) {\n            piVar19 = *(*0x20 + -0x100);\n            if ((((*piVar19 == 0x2e656d69746e7572) && (*(piVar19 + 1) == 0x61706f67)) && (*(piVar19 + 0xc) == 0x696e))\n               && (*(piVar19 + 0xe) == 'c')) {\n                iVar9 = 5;\n                piVar19 = 0x4a6d38;\n            }\n        }\n        else {\n            piVar19 = *(*0x20 + -0x100);\n        }\n        *(*0x20 + -0x2f8) = iVar9;\n        *(*0x20 + -0x100) = piVar19;\n        *(*0x20 + -0x368) = 0x45231c;\n        fcn.00434de0();\n        *(*0x20 + -0x368) = 0x45232e;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x45233f;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x452345;\n        fcn.00434e60();\n        *(*0x20 + -0x368) = 0x452367;\n        fcn.00452940(*(*0x20 + -0x20));\n        *(*0x20 + -0x368) = 0x45236c;\n        fcn.00434de0();\n        *(*0x20 + -0x368) = 0x45237d;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x452385;\n        fcn.00434e60();\n        *(*0x20 + -0x368) = 0x45238a;\n        fcn.00434de0();\n        *(*0x20 + -0x368) = 0x45239b;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x4523b0;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x4523c5;\n        fcn.004356e0();\n        *(*0x20 + -0x368) = 0x4523d1;\n        fcn.004354e0();\n        *(*0x20 + -0x368) = 0x4523d6;\n        fcn.00434e60();\n        *(*0x20 + -0x368) = 0x4523ed;\n        uVar10 = fcn.0044b180();\n        if (uVar10 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar10) {\n            *(*0x20 + -0x368) = 0x45240e;\n            uVar8 = fcn.0044b180();\n            *(*0x20 + -800) = uVar8;\n            *(*0x20 + -0x260) = *(*0x20 + -0x50);\n            *(*0x20 + -0x368) = 0x452428;\n            fcn.00434de0();\n            *(*0x20 + -0x368) = 0x452439;\n            fcn.004356e0();\n            *(*0x20 + -0x368) = 0x45244e;\n            fcn.00435540(*(*0x20 + -800));\n            *(*0x20 + -0x368) = 0x452453;\n            fcn.00434e60();\n        }\n        iVar9 = *(*(*0x20 + -0x70) + 0x30);\n        if ((((iVar9 != 0) && (0 < *(iVar9 + 0xc4))) && (*(iVar9 + 0x90) == *(*0x20 + -0x70))) ||\n           (1 < *(*0x20 + -0x324))) {\n            *(*0x20 + -0x260) = *(*0x20 + -0x30);\n            *(*0x20 + -0x288) = *(*0x20 + -0x38);\n            *(*0x20 + -0x290) = *(*0x20 + -0x50);\n            *(*0x20 + -0x368) = 0x4524be;\n            fcn.00434de0();\n            *(*0x20 + -0x368) = 0x4524cf;\n            fcn.004356e0();\n            *(*0x20 + -0x368) = 0x4524dc;\n            fcn.00435540();\n            *(*0x20 + -0x368) = 0x4524ed;\n            fcn.004356e0();\n            *(*0x20 + -0x368) = 0x4524fa;\n            fcn.00435540();\n            *(*0x20 + -0x368) = 0x45250b;\n            fcn.004356e0();\n            *(*0x20 + -0x368) = 0x452518;\n            fcn.00435540();\n            *(*0x20 + -0x368) = 0x45251d;\n            fcn.00434e60();\n        }\n        *(*0x20 + -0x368) = 0x452525;\n        fcn.00434de0();\n        *(*0x20 + -0x368) = 0x45252a;\n        fcn.00435040();\n        *(*0x20 + -0x368) = 0x45252f;\n        fcn.00434e60();\n        puVar18 = *(*0x20 + -0x278) + 1;\n        puVar13 = *(*0x20 + -600);\n        arg1 = *(*0x20 + -0x70);\n        unaff_RSI = *(*0x20 + 0x40);\n        arg3 = *(*0x20 + -0xe8);\n        iVar6 = *(*0x20 + -0xc0);\n        uVar23 = *(*0x20 + -0xb0);\n        iVar9 = *(*0x20 + -0x2c0);\n    }\n    uVar16 = *(iVar6 + 0x24);\n    ppcVar21 = *(*0x20 + 0x48);\ncode_r0x00451cba:\n    puVar13 = puVar13 + 1;\n    if ((*(iVar6 + 0x24) == '\\x04') && (iVar9 != 0)) {\n        *(*0x20 + -0x2c8) = *((uVar23 - 8) + iVar9 * 8);\n        in_R11 = *(*0x20 + -0x250);\n        if ((in_R11 == 0) && (ppcVar21 == NULL)) {\n            *(*0x20 + -0x270) = puVar18;\n            *(*0x20 + -0x32f) = uVar16;\n            *(*0x20 + -0x368) = 0x451d1a;\n            puVar13 = fcn.00453080(*(*0x20 + -0x2c8));\n            arg1 = *(*0x20 + -0x70);\n            uVar16 = *(*0x20 + -0x32f);\n            unaff_RSI = *(*0x20 + 0x40);\n            puVar18 = *(*0x20 + -0x270);\n            arg3 = *(*0x20 + -0xe8);\n            in_R11 = *(*0x20 + -0x250);\n            iVar6 = *(*0x20 + -0xc0);\n            uVar23 = *(*0x20 + -0xb0);\n            iVar9 = *(*0x20 + -0x2c0);\n        }\n        iVar9 = iVar9 + -1;\n    }\n    else {\n        in_R11 = *(*0x20 + -0x250);\n    }\n    uVar10 = *(iVar6 + 0x24);\n    in_R10 = puVar13;\n    if (arg3 == 0) goto code_r0x00451db0;\ncode_r0x004510cf:\n    *(*0x20 + -0x60) = arg3;\n    *(*0x20 + -0x58) = *(*0x20 + -0xd0);\n    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n    *(*0x20 + -0x40) = 0;\n    uVar20 = *(*0x20 + -0x30);\n    *(*0x20 + -0x38) = uVar20;\n    *(*0x20 + -0x30) = 0;\n    *(*0x20 + -0x10) = 0;\n    arg4 = *(*0x20 + -0x240);\n    arg3 = 0;\n    uVar10 = uVar20 & 0xffffff00 | uVar10 == '\\x12';\n    in_R10 = *(*0x20 + -0x248);\n    unaff_RDI = puVar18;\n    goto code_r0x0045114f;\ncode_r0x00452825:\n    *(*0x20 + -0x368) = 0x452836;\n    fcn.00433640();\ncode_r0x00452836:\n    uVar8 = *(*0x20 + -200);\n    *(*0x20 + -0x368) = 0x452846;\n    uVar11 = fcn.0044bde0();\n    *(*0x20 + -0xa0) = uVar11;\n    *(*0x20 + -0x250) = uVar8;\n    *(*0x20 + -0x368) = 0x45285b;\n    fcn.00434de0();\n    *(*0x20 + -0x368) = 0x45286c;\n    fcn.004356e0();\n    *(*0x20 + -0x368) = 0x452885;\n    fcn.004356e0();\n    *(*0x20 + -0x368) = 0x45288a;\n    fcn.00435040();\n    *(*0x20 + -0x368) = 0x45288f;\n    fcn.00434e60();\n    *(*0x20 + -0x368) = 0x4528a5;\n    fcn.00433640();\ncode_r0x004528a5:\n    *(*0x20 + -0x368) = 0x4528b6;\n    fcn.00433640();\ncode_r0x004528b6:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x368) = 0x4528c7;\n    in_RAX = fcn.00433640();\ncode_r0x004528c8:\n    *(puVar17 + 0x10) = in_RAX;\n    *(puVar17 + 0x18) = unaff_RBX;\n    *(puVar17 + 0x20) = arg1;\n    *(puVar17 + 0x28) = unaff_RDI;\n    *(puVar17 + 0x30) = unaff_RSI;\n    *(puVar17 + 0x38) = arg3;\n    *(puVar17 + 0x40) = arg4;\n    *(puVar17 + 0x48) = in_R10;\n    *(puVar17 + 0x50) = in_R11;\n    *(puVar17 + -8) = 0x4528fa;\n    fcn.0045a3a0();\n    in_RAX = *(puVar17 + 0x10);\n    unaff_RBX = *(puVar17 + 0x18);\n    arg1 = *(puVar17 + 0x20);\n    unaff_RDI = *(puVar17 + 0x28);\n    unaff_RSI = *(puVar17 + 0x30);\n    arg3 = *(puVar17 + 0x38);\n    arg4 = *(puVar17 + 0x40);\n    in_R10 = *(puVar17 + 0x48);\n    in_R11 = *(puVar17 + 0x50);\n    *0x20 = puVar17;\n    goto code_r0x00450e00;\n}\n",
        "token_count": 13811
    },
    "00453660": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453660(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (((((*0x59340b != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.0045d000();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.00454a60();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = *(unaff_RDI + 0x30);\n    if ((iVar1 != 0) && (*(iVar1 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.00450e00(arg1, iVar1, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.00450e00(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    fcn.00453300();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.004539c0(puStack56[2]);\n            iVar2 = iVar2 + 1;\n            if (iVar1 <= iVar2) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 830
    },
    "00453b80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453b80(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x453bbf;\n            uVar3 = fcn.0044bde0();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x27) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x00453c7e;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x453c33;\n            iVar2 = fcn.0044c480(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x00453c74;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x453c68;\n                uVar3 = fcn.0044bf40(uVar1);\ncode_r0x00453c74:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x00453c7e:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x453ca5;\n                uVar4 = fcn.0044c100(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x4a6d38;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x453d0b;\n                fcn.00434de0();\n                *(*0x20 + -0x80) = 0x453d1a;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x453d2b;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x453d30;\n                fcn.00434e60();\n                *(*0x20 + -0x80) = 0x453d35;\n                fcn.00434de0();\n                *(*0x20 + -0x80) = 0x453d46;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x453d55;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x453d66;\n                fcn.004356e0();\n                *(*0x20 + -0x80) = 0x453d72;\n                fcn.004354e0();\n                *(*0x20 + -0x80) = 0x453d77;\n                fcn.00434e60();\n                *(*0x20 + -0x80) = 0x453d88;\n                uVar5 = fcn.0044b180();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x453da6;\n                    uVar3 = fcn.0044b180();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x453db0;\n                    fcn.00434de0();\n                    *(*0x20 + -0x80) = 0x453dc5;\n                    fcn.004356e0();\n                    *(*0x20 + -0x80) = 0x453dda;\n                    fcn.00435540(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x453ddf;\n                    fcn.00434e60();\n                }\n                *(*0x20 + -0x80) = 0x453de5;\n                fcn.00434de0();\n                *(*0x20 + -0x80) = 0x453dea;\n                fcn.00435040();\n                *(*0x20 + -0x80) = 0x453def;\n                fcn.00434e60();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x453e05;\n            in_RAX = fcn.0045ca80(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x453e1a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1825
    },
    "00454300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454300(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045e360();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.00434e60();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    if (0 < iVar3) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 458
    },
    "00456e80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00456e80(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.0045ca80(0);\n    }\n    fcn.0045cb40(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 801
    },
    "00457060": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00457060(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x004571ac;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00457100;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045ca80(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00457100:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045ca80(unaff_RBX);\n    }\n    fcn.0045ca80(unaff_RBX);\ncode_r0x004571ac:\n    fcn.0045ca80(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 593
    },
    "00458120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00458120(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x004581b6:\n            uVar1 = 4;\n            goto code_r0x004581f2;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x004581f2;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x004581f2;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x004581f2;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x004581b6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x004581f2;\n        }\n    }\n    uVar3 = fcn.004499a0();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x004581f2:\n    if ((*0x59340c != '\\0') || (*0x59340a != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x527288;\n    *0x527288 = uVar1 | *0x593478;\n    return uVar2;\n}\n",
        "token_count": 605
    },
    "0046bb40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0046bb40(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x52b280);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x528140)) || (*(iVar1 + 0x528141) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045ca80(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 571
    },
    "0046bd00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0046bd00(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint8_t *in_RAX;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RBX;\n    uint32_t uVar6;\n    \n    if (unaff_RBX == 0) {\n        return 0xfffd;\n    }\n    uVar2 = *(*in_RAX + 0x52b280);\n    uVar5 = *in_RAX;\n    if (0xef < uVar2) {\n        uVar6 = (uVar2 << 0x1f) >> 0x1f;\n        return ~uVar6 & uVar5 | uVar6 & 0xfffd;\n    }\n    uVar4 = uVar2 & 7;\n    iVar1 = (uVar2 >> 4) * 2;\n    if (unaff_RBX < uVar4) {\n        return 0xfffd;\n    }\n    if (1 < unaff_RBX) {\n        uVar2 = in_RAX[1];\n        if ((uVar2 < *(iVar1 + 0x528140)) || (*(iVar1 + 0x528141) < uVar2)) {\n            return 0xfffd;\n        }\n        uVar6 = uVar2;\n        if (uVar4 < 3) {\n            return (uVar5 & 0x1f) << 6 | uVar6 & 0x3f;\n        }\n        uVar2 = in_RAX[2];\n        if (uVar2 + 0x80 < 0x40) {\n            if (uVar4 < 4) {\n                return (uVar5 & 0xf) << 0xc | (uVar6 & 0x3f) << 6 | uVar2 & 0x3f;\n            }\n            if (0x3f < in_RAX[3] + 0x80) {\n                return 0xfffd;\n            }\n            return in_RAX[3] & 0x3f | (uVar5 & 7) << 0x12 | (uVar6 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6;\n        }\n        return 0xfffd;\n    }\n    fcn.0045ca80(unaff_RBX);\n    pcVar3 = swi(3);\n    uVar4 = (*pcVar3)();\n    return uVar4;\n}\n",
        "token_count": 571
    },
    "0046bec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0046bec0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x0046c00c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x0046bf60;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.0045ca80(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x0046bf60:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.0045ca80(unaff_RBX);\n    }\n    fcn.0045ca80(unaff_RBX);\ncode_r0x0046c00c:\n    fcn.0045ca80(unaff_RBX);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 600
    },
    "0046c020": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0046c020(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x0046c173;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x52b280);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x0046c168:\n                        fcn.0045ca80(unaff_RBX);\ncode_r0x0046c173:\n                        fcn.0045ca80(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x528140)) || (*(iVar1 + 0x528141) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046c15d:\n                            fcn.0045ca80(unaff_RBX);\n                            goto code_r0x0046c168;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045ca80(unaff_RBX);\n                                    goto code_r0x0046c15d;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 672
    },
    "0046c180": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0046c180(void)\n\n{\n    int64_t iVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar6 = 0;\n    iVar4 = 0;\n    do {\n        if (unaff_RBX <= uVar6) {\n            return iVar4;\n        }\n        if (unaff_RBX <= uVar6) goto code_r0x0046c2d3;\n        if (*(in_RAX + uVar6) < 0x80) {\n            uVar6 = uVar6 + 1;\n        }\n        else {\n            uVar2 = *(*(in_RAX + uVar6) + 0x52b280);\n            if (uVar2 == 0xf1) {\n                uVar6 = uVar6 + 1;\n            }\n            else {\n                uVar5 = uVar2 & 7;\n                if (unaff_RBX < uVar5 + uVar6) {\n                    uVar6 = uVar6 + 1;\n                }\n                else {\n                    iVar1 = (uVar2 >> 4) * 2;\n                    if (unaff_RBX <= uVar6 + 1) {\ncode_r0x0046c2c8:\n                        fcn.0045ca80(unaff_RBX);\ncode_r0x0046c2d3:\n                        fcn.0045ca80(unaff_RBX);\n                        pcVar3 = swi(3);\n                        iVar4 = (*pcVar3)();\n                        return iVar4;\n                    }\n                    uVar2 = *(uVar6 + 1 + in_RAX);\n                    if ((uVar2 < *(iVar1 + 0x528140)) || (*(iVar1 + 0x528141) < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    else if (uVar5 != 2) {\n                        if (unaff_RBX <= uVar6 + 2) {\ncode_r0x0046c2bd:\n                            fcn.0045ca80(unaff_RBX);\n                            goto code_r0x0046c2c8;\n                        }\n                        if (*(uVar6 + 2 + in_RAX) + 0x80U < 0x40) {\n                            if (uVar5 != 3) {\n                                if (unaff_RBX <= uVar6 + 3) {\n                                    fcn.0045ca80(unaff_RBX);\n                                    goto code_r0x0046c2bd;\n                                }\n                                if (0x3f < *(uVar6 + 3 + in_RAX) + 0x80U) {\n                                    uVar5 = 1;\n                                }\n                            }\n                        }\n                        else {\n                            uVar5 = 1;\n                        }\n                    }\n                    uVar6 = uVar5 + uVar6;\n                }\n            }\n        }\n        iVar4 = iVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 680
    },
    "004766e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004766e0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint *puVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    ulong unaff_RBP;\n    uint *puVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    int64_t iVar16;\n    uint *puVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x120 && *0x20 + -0x120 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1a0;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 0xc0) = in_RAX;\n            *(*0x20 + 200) = unaff_RBX;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x1b0) = *0x20 + -8;\n            *(*0x20 + -0x1a8) = 0x47674f;\n            fcn.0045cd0f();\n            unaff_RBP = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x1a8) = 0x47675f;\n            uVar4 = fcn.0040cd00();\n            *(*0x20 + -0xb0) = uVar4;\n            *(*0x20 + -0x15a) = 0;\n            *(*0x20 + -0x50) = in_XMM15;\n            *(*0x20 + -0x48) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            unaff_RBX = *(*0x20 + 200);\n            if (unaff_RBX == 0) {\n                puVar11 = NULL;\ncode_r0x00476917:\n                iVar5 = *(*0x20 + 0xc0);\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                puVar13 = *(iVar5 + 0x30);\n                if (*(iVar5 + 0x30) == 0) {\n                    iVar7 = 0;\n                    puVar17 = NULL;\ncode_r0x0047695f:\n                    *(*0x20 + -0x150) = puVar17;\n                    *(*0x20 + -0xb8) = iVar7;\n                    iVar9 = 0;\n                    puVar13 = puVar11;\ncode_r0x00476999:\n                    *(*0x20 + -0x138) = puVar13;\n                    if (puVar17 <= iVar9) {\n                        iVar7 = *(*0x20 + -0x20);\n                        *(*0x20 + -0x15c) = 0;\n                        *(*0x20 + -0x98) = in_XMM15;\n                        *(*0x20 + -0x90) = in_XMM15;\n                        *(*0x20 + -0x80) = in_XMM15;\n                        *(*0x20 + -0x70) = in_XMM15;\n                        *(*0x20 + -0x60) = in_XMM15;\n                        puVar11 = iVar7 + 7U & 0xfffffffffffffff8;\n                        *(*0x20 + -0x68) = puVar11;\n                        if ((*(iVar5 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        uVar15 = *(iVar5 + 0x32) & 0x7fff;\n                        puVar17 = uVar15;\n                        if (uVar15 == 0) {\n                            iVar16 = 0;\n                            iVar5 = 0;\ncode_r0x00476b60:\n                            *(*0x20 + -0x140) = iVar7;\n                            *(*0x20 + -0x148) = puVar11;\n                            *(*0x20 + -0x158) = iVar16;\n                            *(*0x20 + -0xc0) = iVar5;\n                            iVar9 = 0;\n                            do {\n                                if (iVar16 <= iVar9) {\n                                    *(*0x20 + -0x68) = *(*0x20 + -0x68) - puVar11;\n                                    *(*0x20 + 8) = in_XMM15;\n                                    *(*0x20 + -0x1b0) = unaff_RBP;\n                                    *(*0x20 + -0x1a8) = 0x476ccf;\n                                    uVar4 = fcn.0045cd0f();\n                                    *(*0x20 + 8) = *(*0x20 + -0x50);\n                                    *(*0x20 + 0x10) = *(*0x20 + -0x48);\n                                    *(*0x20 + 0x14) = *(*0x20 + -0x44);\n                                    *(*0x20 + 0x18) = *(*0x20 + -0x40);\n                                    *(*0x20 + 0x1c) = *(*0x20 + -0x3c);\n                                    *(*0x20 + 0x20) = *(*0x20 + -0x38);\n                                    *(*0x20 + 0x24) = *(*0x20 + -0x34);\n                                    *(*0x20 + 0x28) = *(*0x20 + -0x30);\n                                    *(*0x20 + 0x2c) = *(*0x20 + -0x2c);\n                                    *(*0x20 + 0x30) = *(*0x20 + -0x28);\n                                    *(*0x20 + 0x34) = *(*0x20 + -0x24);\n                                    *(*0x20 + 0x38) = *(*0x20 + -0x20);\n                                    *(*0x20 + 0x3c) = *(*0x20 + -0x1c);\n                                    *(*0x20 + 0x40) = *(*0x20 + -0x18);\n                                    *(*0x20 + 0x44) = *(*0x20 + -0x14);\n                                    *(*0x20 + 0x48) = *(*0x20 + -0x10);\n                                    *(*0x20 + 0x4c) = *(*0x20 + -0xc);\n                                    *(*0x20 + 0x50) = *(*0x20 + -0x98);\n                                    *(*0x20 + 0x58) = *(*0x20 + -0x90);\n                                    *(*0x20 + 0x5c) = *(*0x20 + -0x8c);\n                                    *(*0x20 + 0x60) = *(*0x20 + -0x88);\n                                    *(*0x20 + 100) = *(*0x20 + -0x84);\n                                    *(*0x20 + 0x68) = *(*0x20 + -0x80);\n                                    *(*0x20 + 0x6c) = *(*0x20 + -0x7c);\n                                    *(*0x20 + 0x70) = *(*0x20 + -0x78);\n                                    *(*0x20 + 0x74) = *(*0x20 + -0x74);\n                                    *(*0x20 + 0x78) = *(*0x20 + -0x70);\n                                    *(*0x20 + 0x7c) = *(*0x20 + -0x6c);\n                                    *(*0x20 + 0x80) = *(*0x20 + -0x68);\n                                    *(*0x20 + 0x84) = *(*0x20 + -100);\n                                    *(*0x20 + 0x88) = *(*0x20 + -0x60);\n                                    *(*0x20 + 0x8c) = *(*0x20 + -0x5c);\n                                    *(*0x20 + 0x90) = *(*0x20 + -0x58);\n                                    *(*0x20 + 0x94) = *(*0x20 + -0x54);\n                                    *(*0x20 + 0x98) = iVar7;\n                                    *(*0x20 + 0xa0) = puVar11;\n                                    *(*0x20 + 0xa8) = puVar13 + 7U & 0xfffffffffffffff8;\n                                    *(*0x20 + 0xb0) = uVar4;\n                                    *(*0x20 + 0xb8) = *(*0x20 + -0x15a);\n                                    *(*0x20 + 0xba) = *(*0x20 + -0x15c);\n                                    return;\n                                }\n                                *(*0x20 + -0x130) = iVar9;\n                                *(*0x20 + -0xa8) = *(iVar5 + iVar9 * 8);\n                                *(*0x20 + -0x1a8) = 0x476bd2;\n                                iVar5 = fcn.00475800();\n                                if (iVar5 == 0) {\n                                    puVar13 = *(*0x20 + -0x78);\n                                    puVar8 = *(*0x20 + -0x130);\n                                    if (puVar13 <= puVar8) goto code_r0x00476ea5;\n                                    puVar11 = *(*(*0x20 + -0x80) + puVar8 * 8);\n                                    if (puVar8 == puVar13 - 1U) {\n                                        puVar13 = *(*0x20 + -0x90);\n                                    }\n                                    else {\n                                        puVar17 = puVar8 + 1;\n                                        if (puVar13 <= puVar17) goto code_r0x00476e98;\n                                        puVar13 = *(*(*0x20 + -0x80) + 8 + puVar8 * 8);\n                                    }\n                                    puVar8 = *(*0x20 + -0x88);\n                                    puVar17 = *(*0x20 + -0x98);\n                                    if (puVar8 < puVar13) goto code_r0x00476e90;\n                                    if (puVar13 < puVar11) goto code_r0x00476e85;\n                                    puVar13 = puVar13 - puVar11;\n                                    puVar8 = puVar17 + (puVar11 - puVar8 >> 0x3f & puVar11 * 0x30);\n                                    if (puVar13 != NULL) {\n                                        iVar5 = 0;\n                                        do {\n                                            uVar1 = puVar8[1];\n                                            uVar2 = puVar8[2];\n                                            uVar3 = puVar8[3];\n                                            *(*0x20 + -0x120) = *puVar8;\n                                            *(*0x20 + -0x11c) = uVar1;\n                                            *(*0x20 + -0x118) = uVar2;\n                                            *(*0x20 + -0x114) = uVar3;\n                                            uVar1 = puVar8[5];\n                                            uVar2 = puVar8[6];\n                                            uVar3 = puVar8[7];\n                                            *(*0x20 + -0x110) = puVar8[4];\n                                            *(*0x20 + -0x10c) = uVar1;\n                                            *(*0x20 + -0x108) = uVar2;\n                                            *(*0x20 + -0x104) = uVar3;\n                                            uVar1 = puVar8[9];\n                                            uVar2 = puVar8[10];\n                                            uVar3 = puVar8[0xb];\n                                            *(*0x20 + -0x100) = puVar8[8];\n                                            *(*0x20 + -0xfc) = uVar1;\n                                            *(*0x20 + -0xf8) = uVar2;\n                                            *(*0x20 + -0xf4) = uVar3;\n                                            if (*(*0x20 + -0x120) == 3) {\n                                                puVar17 = *(*0x20 + -0x100);\n                                                puVar14 = ((puVar17 >> 0x3f) >> 0x3d) + puVar17 >> 3;\n                                                puVar11 = puVar14;\n                                                if (puVar14 < 0x2) {\n                                                    puVar11 = puVar14 * 8;\n                                                    puVar17 = puVar17 + puVar14 * -2;\n                                                    if (-1 < puVar17) {\n                                                        (*0x20 + -0x15c)[puVar14] =\n                                                             (*0x20 + -0x15c)[puVar14] |\n                                                             1 << (puVar17 & 0x1f) & -(puVar17 < 0x20);\n                                                        goto code_r0x00476e55;\n                                                    }\n                                                    *(*0x20 + -0x1a8) = 0x476e73;\n                                                    fcn.00431c60();\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x476e85;\n                                                fcn.0045ca80(2);\n                                                goto code_r0x00476e85;\n                                            }\ncode_r0x00476e55:\n                                            iVar5 = iVar5 + 1;\n                                            if (puVar13 <= iVar5) break;\n                                            puVar8 = puVar8 + 0xc;\n                                        } while( true );\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x1a8) = 0x476c8b;\n                                    fcn.00478a60(*(*0x20 + -0xa8));\n                                }\n                                puVar17 = *(*0x20 + -0x130);\n                                iVar9 = puVar17 + 1;\n                                puVar13 = *(*0x20 + -0x138);\n                                iVar7 = *(*0x20 + -0x140);\n                                iVar5 = *(*0x20 + -0xc0);\n                                puVar11 = *(*0x20 + -0x148);\n                                iVar16 = *(*0x20 + -0x158);\n                            } while( true );\n                        }\n                        puVar8 = *(iVar5 + 0x30);\n                        puVar17 = uVar15 + *(iVar5 + 0x30) & 0xffff;\n                        if (puVar8 <= puVar17) {\n                            iVar16 = puVar17 - puVar8;\n                            puVar17 = -iVar16 >> 0x3f;\n                            iVar5 = iVar5 + iVar9 + (puVar8 << 3 & puVar17);\n                            goto code_r0x00476b60;\n                        }\n                        goto code_r0x00476eaa;\n                    }\n                    *(*0x20 + -0x128) = iVar9;\n                    *(*0x20 + -0xa0) = *(iVar7 + iVar9 * 8);\n                    *(*0x20 + -0x1a8) = 0x4769c7;\n                    iVar5 = fcn.00475800();\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x1a8) = 0x476aa9;\n                        fcn.00478a60(*(*0x20 + -0xa0));\n                        puVar13 = *(*0x20 + -0x138);\n                        goto code_r0x00476970;\n                    }\n                    uVar18 = *(*(*0x20 + -0xa0) + 0x15);\n                    puVar13 = (-uVar18 & (*(*0x20 + -0x138) + uVar18) - 1) + **(*0x20 + -0xa0);\n                    puVar11 = *(*0x20 + -0x30);\n                    puVar17 = *(*0x20 + -0x128);\n                    if (puVar17 < puVar11) {\n                        puVar8 = *(*(*0x20 + -0x38) + puVar17 * 8);\n                        if (puVar17 == puVar11 - 1U) {\n                            puVar11 = *(*0x20 + -0x48);\n                        }\n                        else {\n                            if (puVar11 <= puVar17 + 1U) goto code_r0x00476f85;\n                            puVar11 = *(*(*0x20 + -0x38) + 8 + puVar17 * 8);\n                        }\n                        puVar17 = *(*0x20 + -0x40);\n                        if (puVar11 <= puVar17) {\n                            if (puVar8 <= puVar11) {\n                                puVar11 = puVar11 - puVar8;\n                                puVar17 = *(*0x20 + -0x50) + (puVar8 - puVar17 >> 0x3f & puVar8 * 0x30);\n                                if (puVar11 != NULL) {\n                                    iVar5 = 0;\n                                    do {\n                                        uVar1 = puVar17[1];\n                                        uVar2 = puVar17[2];\n                                        uVar3 = puVar17[3];\n                                        *(*0x20 + -0xf0) = *puVar17;\n                                        *(*0x20 + -0xec) = uVar1;\n                                        *(*0x20 + -0xe8) = uVar2;\n                                        *(*0x20 + -0xe4) = uVar3;\n                                        uVar1 = puVar17[5];\n                                        uVar2 = puVar17[6];\n                                        uVar3 = puVar17[7];\n                                        *(*0x20 + -0xe0) = puVar17[4];\n                                        *(*0x20 + -0xdc) = uVar1;\n                                        *(*0x20 + -0xd8) = uVar2;\n                                        *(*0x20 + -0xd4) = uVar3;\n                                        uVar1 = puVar17[9];\n                                        uVar2 = puVar17[10];\n                                        uVar3 = puVar17[0xb];\n                                        *(*0x20 + -0xd0) = puVar17[8];\n                                        *(*0x20 + -0xcc) = uVar1;\n                                        *(*0x20 + -200) = uVar2;\n                                        *(*0x20 + -0xc4) = uVar3;\n                                        if (*(*0x20 + -0xf0) == 3) {\n                                            iVar7 = *(*0x20 + -0xd0);\n                                            uVar18 = ((iVar7 >> 0x3f) >> 0x3d) + iVar7 >> 3;\n                                            if (uVar18 < 2) {\n                                                uVar19 = iVar7 + uVar18 * -8;\n                                                if (-1 < uVar19) {\n                                                    *(*0x20 + (uVar18 - 0x15a)) =\n                                                         *(*0x20 + (uVar18 - 0x15a)) |\n                                                         1 << (uVar19 & 0x1f) & -(uVar19 < 0x20);\n                                                    goto code_r0x00476f4d;\n                                                }\n                                                *(*0x20 + -0x1a8) = 0x476f65;\n                                                fcn.00431c60();\n                                            }\n                                            *(*0x20 + -0x1a8) = 0x476f72;\n                                            fcn.0045ca80(2);\n                                            goto code_r0x00476f72;\n                                        }\ncode_r0x00476f4d:\n                                        iVar5 = iVar5 + 1;\n                                        if (puVar11 <= iVar5) break;\n                                        puVar17 = puVar17 + 0xc;\n                                    } while( true );\n                                }\n                                goto code_r0x00476970;\n                            }\ncode_r0x00476f72:\n                            *(*0x20 + -0x1a8) = 0x476f7d;\n                            fcn.0045cb40(puVar11);\n                        }\n                        *(*0x20 + -0x1a8) = 0x476f85;\n                        fcn.0045cb00(puVar11, puVar17);\ncode_r0x00476f85:\n                        *(*0x20 + -0x1a8) = 0x476f8d;\n                        fcn.0045ca80(puVar11);\n                    }\n                    *(*0x20 + -0x1a8) = 0x476f92;\n                    fcn.0045ca80(puVar11);\n                }\n                else {\n                    iVar7 = iVar7 + iVar5;\n                    puVar17 = puVar13;\n                    if (puVar13 < 0x100001) goto code_r0x0047695f;\n                }\n                unaff_RBX = 0x100000;\n                *(*0x20 + -0x1a8) = 0x476f9f;\n                fcn.0045cb80(puVar11, puVar13 & 0xffffffff);\ncode_r0x00476fa0:\n                *(*0x20 + -0x1a8) = 0x476fa5;\n                fcn.0045ca80(puVar11);\n            }\n            else {\n                *(*0x20 + -0x1a8) = 0x4767bc;\n                iVar5 = fcn.00475b00();\n                if (iVar5 == 0) {\n                    puVar11 = 0x8;\n                    goto code_r0x00476917;\n                }\n                if (unaff_RBX == '\\0') {\n                    puVar12 = *(*0x20 + -0xb0);\n                    uVar18 = *puVar12;\n                    puVar6 = puVar12;\n                    if ((*puVar12 & 7) == 0) {\n                        iVar5 = *(puVar12 + 4);\n                        iVar7 = *(puVar12 + 2);\n                        unaff_RBX = iVar7;\n                        if (*(puVar12 + 6) < iVar5 + 1U) {\n                            *(*0x20 + -0x1a8) = 0x4768b1;\n                            unaff_RBX = fcn.00445200(iVar5);\n                            puVar6 = *(*0x20 + -0xb0);\n                            *(puVar6 + 6) = iVar5;\n                            if (*0x593680 == 0) {\n                                *(puVar6 + 2) = unaff_RBX;\n                                iVar5 = iVar7;\n                            }\n                            else {\n                                *(*0x20 + -0x1a8) = 0x4768d5;\n                                unaff_RBX = fcn.0045c5e0(iVar5, puVar6, puVar12, uVar18);\n                                iVar5 = iVar7;\n                            }\n                        }\n                        *(puVar6 + 4) = iVar5 + 1;\n                        *(unaff_RBX + iVar5) = 0;\n                    }\n                    puVar11 = *(puVar6 + 4);\n                    if (*puVar6 >> 3 < puVar11) {\n                        *puVar6 = *puVar6 + 1;\n                        goto code_r0x00476900;\n                    }\n                    goto code_r0x00476fa0;\n                }\n                puVar12 = *(*0x20 + -0xb0);\n                uVar18 = *puVar12;\n                puVar6 = puVar12;\n                if ((*puVar12 & 7) == 0) {\n                    iVar5 = *(puVar12 + 4);\n                    iVar7 = *(puVar12 + 2);\n                    unaff_RBX = iVar7;\n                    if (*(puVar12 + 6) < iVar5 + 1U) {\n                        *(*0x20 + -0x1a8) = 0x47680a;\n                        unaff_RBX = fcn.00445200(iVar5);\n                        puVar6 = *(*0x20 + -0xb0);\n                        *(puVar6 + 6) = iVar5;\n                        if (*0x593680 == 0) {\n                            *(puVar6 + 2) = unaff_RBX;\n                            iVar5 = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0x1a8) = 0x47682e;\n                            unaff_RBX = fcn.0045c5e0(iVar5, puVar6, puVar12, uVar18);\n                            iVar5 = iVar7;\n                        }\n                    }\n                    *(puVar6 + 4) = iVar5 + 1;\n                    *(unaff_RBX + iVar5) = 0;\n                }\n                puVar11 = *(puVar6 + 4);\n                puVar13 = *puVar6 >> 3;\n                if (puVar13 < puVar11) {\n                    *(*(puVar6 + 2) + puVar13) = *(*(puVar6 + 2) + puVar13) | 1 << (*puVar6 & 7);\n                    *puVar6 = *puVar6 + 1;\ncode_r0x00476900:\n                    puVar11 = NULL;\n                    goto code_r0x00476917;\n                }\n            }\n            *(*0x20 + -0x1a8) = 0x476faa;\n            in_RAX = fcn.0045ca80(puVar11);\n        }\n        *(puVar10 + 0xc0) = in_RAX;\n        *(puVar10 + 200) = unaff_RBX;\n        *(puVar10 + -8) = 0x476fc5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 0xc0);\n        unaff_RBX = *(puVar10 + 200);\n        *0x20 = puVar10;\n    } while( true );\ncode_r0x00476e85:\n    *(*0x20 + -0x1a8) = 0x476e90;\n    fcn.0045cb40(puVar13);\ncode_r0x00476e90:\n    *(*0x20 + -0x1a8) = 0x476e98;\n    fcn.0045cb00(puVar13, puVar8);\ncode_r0x00476e98:\n    *(*0x20 + -0x1a8) = 0x476ea5;\n    fcn.0045ca80(puVar13);\ncode_r0x00476ea5:\n    *(*0x20 + -0x1a8) = 0x476eaa;\n    fcn.0045ca80(puVar13);\ncode_r0x00476eaa:\n    puVar13 = puVar11;\n    *(*0x20 + -0x1a8) = 0x476eb5;\n    fcn.0045cbc0(puVar17);\ncode_r0x00476970:\n    iVar9 = *(*0x20 + -0x128) + 1;\n    iVar5 = *(*0x20 + 0xc0);\n    puVar17 = *(*0x20 + -0x150);\n    iVar7 = *(*0x20 + -0xb8);\n    goto code_r0x00476999;\n}\n",
        "token_count": 6114
    },
    "00479640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00479640(ulong arg1)\n\n{\n    int64_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    ulong *arg1_00;\n    uint64_t unaff_RBX;\n    ulong *arg1_01;\n    uchar *puVar11;\n    ulong unaff_RBP;\n    ulong *puVar12;\n    ulong *unaff_RDI;\n    ulong *arg3;\n    ulong arg3_00;\n    ulong arg4;\n    uint64_t uVar13;\n    ulong *arg2;\n    ulong *puVar14;\n    ulong *puVar15;\n    int64_t iVar16;\n    ulong *puVar17;\n    int64_t unaff_R14;\n    uint64_t uVar18;\n    ulong *arg2_00;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x590 && *0x20 + -0x590 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x610;\n            *(*0x20 + -8) = unaff_RBP;\n            piVar1 = *(unaff_R14 + 0x20);\n            if ((piVar1 != NULL) && (*piVar1 == *0x20 + 8)) {\n                *piVar1 = *0x20 + -0x610;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = *(in_RAX + 0x30);\n            *(*0x20 + -0x348) = uVar6;\n            uVar7 = *(in_RAX + 0x28);\n            *(*0x20 + -0x350) = uVar7;\n            *(*0x20 + -0x520) = *(in_RAX + 0x38);\n            arg3_00 = *(in_RAX + 0x20);\n            *(*0x20 + -0x618) = 0x4796d5;\n            arg4 = uVar7;\n            uVar6 = fcn.00479340(uVar7, uVar6, arg3_00);\n            *(*0x20 + -0x380) = uVar6;\n            *(*0x20 + -0x388) = 4;\n            *(*0x20 + -0x360) = uVar7;\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x620) = *0x20 + -8;\n            *(*0x20 + -0x618) = 0x479711;\n            fcn.0045cd0f();\n            uVar6 = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47971f;\n            fcn.00478340();\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x47974f;\n            fcn.0045d046();\n            *(*0x20 + -0x340) = *(*0x20 + -0x1d0);\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47978f;\n            fcn.0045d046();\n            *(*0x20 + -0x1d0) = in_XMM15;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x4797b7;\n            fcn.0045cd0f();\n            uVar6 = *(*0x20 + -0x620);\n            arg1_01 = *(*0x20 + -0x380);\n            *(*0x20 + -0x618) = 0x4797d0;\n            uVar7 = fcn.00478340();\n            *(*0x20 + -0x378) = uVar7;\n            *(*0x20 + -0x370) = arg1_01;\n            *(*0x20 + -0x1d0) = *(*0x20 + -0x610);\n            *(*0x20 + -0x620) = uVar6;\n            *(*0x20 + -0x618) = 0x47980f;\n            fcn.0045d046();\n            *(*0x20 + -0x288) = *(*0x20 + -0x1d0);\n            unaff_RDI = *0x20 + -0x280;\n            *(*0x20 + -0x620) = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47984f;\n            fcn.0045d046();\n            unaff_RBP = *(*0x20 + -0x620);\n            *(*0x20 + -0x618) = 0x47985b;\n            iVar8 = fcn.00463460();\n            unaff_RBX = 0x495dc0;\n            if (iVar8 == 0x495dc0) {\n                unaff_RDI = *0x20 + -0x148;\n                *(*0x20 + -0x620) = unaff_RBP;\n                *(*0x20 + -0x618) = 0x47988f;\n                fcn.0045cceb();\n                unaff_RBP = *(*0x20 + -0x620);\n                puVar2 = *(*0x20 + -0x288);\n                puVar15 = *(*0x20 + -0x280);\n                if (puVar15 != NULL) {\n                    uVar3 = puVar2[1];\n                    uVar4 = puVar2[2];\n                    uVar5 = puVar2[3];\n                    *(*0x20 + -0x488) = *puVar2;\n                    *(*0x20 + -0x484) = uVar3;\n                    *(*0x20 + -0x480) = uVar4;\n                    *(*0x20 + -0x47c) = uVar5;\n                    uVar3 = puVar2[5];\n                    uVar4 = puVar2[6];\n                    uVar5 = puVar2[7];\n                    *(*0x20 + -0x478) = puVar2[4];\n                    *(*0x20 + -0x474) = uVar3;\n                    *(*0x20 + -0x470) = uVar4;\n                    *(*0x20 + -0x46c) = uVar5;\n                    uVar3 = puVar2[9];\n                    uVar4 = puVar2[10];\n                    uVar5 = puVar2[0xb];\n                    *(*0x20 + -0x468) = puVar2[8];\n                    *(*0x20 + -0x464) = uVar3;\n                    *(*0x20 + -0x460) = uVar4;\n                    *(*0x20 + -0x45c) = uVar5;\n                    if (*(*0x20 + -0x488) == 1) {\n                        if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                            if (*0x593680 == 0) {\n                                *arg1_01 = *(*(*0x20 + -0x348) + 8);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x479930;\n                                fcn.0045c5e0(puVar15, unaff_RBX, arg3_00, arg4);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                            if (*0x593680 == 0) {\n                                *arg1_01 = *(*0x20 + -0x348);\n                            }\n                            else {\n                                *(*0x20 + -0x618) = 0x4799a5;\n                                fcn.0045c5e0(puVar15, unaff_RBX, arg3_00, arg4);\n                                unaff_RDI = arg1_01;\n                            }\n                        }\n                        else if (*0x593680 == 0) {\n                            *arg1_01 = **(*0x20 + -0x348);\n                        }\n                        else {\n                            *(*0x20 + -0x618) = 0x479975;\n                            fcn.0045c5e0(puVar15, unaff_RBX, arg3_00, arg4);\n                            unaff_RDI = arg1_01;\n                        }\n                    }\n                    else if ((*(*(*0x20 + -0x350) + 0x17) & 0x1f) == 0x14) {\n                        *(*0x20 + -0x118) = *(*(*0x20 + -0x348) + 8);\n                    }\n                    else if (((*(*0x20 + -0x520) >> 7 & 1) == 0) || ((*(*(*0x20 + -0x350) + 0x17) & 0x20) == 0)) {\n                        *(*0x20 + -0x118) = *(*0x20 + -0x348);\n                    }\n                    else {\n                        *(*0x20 + -0x118) = **(*0x20 + -0x348);\n                    }\n                    iVar8 = *(*0x20 + -0x388);\n                    if ((*(iVar8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    arg3 = *(iVar8 + 0x30);\n                    if (*(iVar8 + 0x30) == 0) {\n                        arg3 = NULL;\n                        arg1_00 = NULL;\ncode_r0x00479a5e:\n                        *(*0x20 + -0x368) = arg1_01;\n                        *(*0x20 + -0x390) = arg1_00;\n                        *(*0x20 + -0x538) = arg3;\n                        puVar10 = NULL;\ncode_r0x00479a83:\n                        do {\n                            if (arg3 <= puVar10) {\n                                iVar8 = **(*0x20 + -0x378);\n                                *(*0x20 + -0x10) = *(*0x20 + -0x1d6);\n                                *(*0x20 + -0x618) = 0x479dd4;\n                                fcn.0045eae0(arg1_01, *(*0x20 + -0x1d6), \n                                             (iVar8 + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x1e8), *0x20 + -0x118);\n                                if (*(*0x20 + 0x20) != 0) {\n                                    if (*0x593680 == 0) {\n                                        *(*0x20 + -0x620) = unaff_RBP;\n                                        *(*0x20 + -0x618) = 0x479e0f;\n                                        fcn.0045cff2();\n                                    }\n                                    else {\n                                        *(*0x20 + -0x618) = 0x479e2c;\n                                        fcn.004117c0(*0x20 + -0x118);\n                                    }\n                                }\n                                iVar8 = **(*0x20 + -0x378);\n                                if (iVar8 - *(*0x20 + -0x1f0) != 0) {\n                                    *(*0x20 + -0x618) = 0x479e75;\n                                    fcn.004587a0(iVar8 - *(*0x20 + -0x1f0));\n                                }\n                                **(*0x20 + 0x18) = 1;\n                                *(*0x20 + -0x618) = 0x479e95;\n                                fcn.00457640();\n                                *(*0x20 + -0x618) = 0x479eb1;\n                                fcn.00463380(*(*0x20 + -0x368));\n                                return;\n                            }\n                            puVar12 = arg1_00[puVar10];\n                            puVar15 = *(*0x20 + -800);\n                            if (puVar15 <= puVar10) goto code_r0x0047a4cf;\n                            puVar17 = *(*(*0x20 + -0x328) + puVar10 * 8);\n                            if (puVar10 == puVar15 + -1) {\n                                puVar15 = *(*0x20 + -0x338);\n                            }\n                            else {\n                                if (puVar15 <= puVar10 + 1U) goto code_r0x0047a4c7;\n                                puVar15 = *(*(*0x20 + -0x328) + 8 + puVar10 * 8);\n                            }\n                            iVar8 = *(*0x20 + -0x340);\n                            arg2 = *(*0x20 + -0x330);\n                            puVar14 = arg3;\n                            if (arg2 < puVar15) goto code_r0x0047a4bc;\n                            if (puVar15 < puVar17) goto code_r0x0047a4b1;\n                            puVar14 = puVar10 + 1;\n                            puVar15 = puVar15 - puVar17;\n                            uVar18 = puVar17 - arg2 >> 0x3f & puVar17 * 0x30;\n                            arg2 = iVar8 + uVar18;\n                            puVar17 = *(*0x20 + -0x268);\n                            if (puVar17 <= puVar14) goto code_r0x0047a4a6;\n                            *(*0x20 + -0x540) = puVar15;\n                            *(*0x20 + -0x398) = arg2;\n                            arg2 = *(*(*0x20 + -0x270) + 8 + puVar10 * 8);\n                            if (puVar17 - 1U == puVar14) {\n                                puVar15 = *(*0x20 + -0x280);\n                            }\n                            else {\n                                puVar15 = puVar10 + 2;\n                                if (puVar17 <= puVar15) goto code_r0x0047a49b;\n                                puVar15 = *(*(*0x20 + -0x270) + 0x10 + puVar10 * 8);\n                            }\n                            puVar17 = *(*0x20 + -0x288);\n                            arg2_00 = *(*0x20 + -0x278);\n                            if (arg2_00 < puVar15) goto code_r0x0047a490;\n                            if (puVar15 < arg2) goto code_r0x0047a485;\n                            puVar15 = puVar15 - arg2;\n                            uVar13 = arg2 - arg2_00 >> 0x3f & arg2 * 0x30;\n                            arg2_00 = uVar13 + puVar17;\n                            arg2 = *(*0x20 + -0x540);\n                            unaff_RDI = arg3;\n                            if (arg2 != NULL) {\n                                *(*0x20 + -0x530) = puVar14;\n                                puVar2 = *(*0x20 + -0x398);\n                                uVar3 = puVar2[1];\n                                uVar4 = puVar2[2];\n                                uVar5 = puVar2[3];\n                                *(*0x20 + -0x4b8) = *puVar2;\n                                *(*0x20 + -0x4b4) = uVar3;\n                                *(*0x20 + -0x4b0) = uVar4;\n                                *(*0x20 + -0x4ac) = uVar5;\n                                iVar9 = iVar8 + uVar18;\n                                uVar3 = *(iVar9 + 0x14);\n                                uVar4 = *(iVar9 + 0x18);\n                                uVar5 = *(iVar9 + 0x1c);\n                                *(*0x20 + -0x4a8) = *(iVar9 + 0x10);\n                                *(*0x20 + -0x4a4) = uVar3;\n                                *(*0x20 + -0x4a0) = uVar4;\n                                *(*0x20 + -0x49c) = uVar5;\n                                iVar8 = iVar8 + uVar18;\n                                puVar14 = iVar8 + 0x20;\n                                uVar3 = *(iVar8 + 0x24);\n                                uVar4 = *(iVar8 + 0x28);\n                                uVar5 = *(iVar8 + 0x2c);\n                                *(*0x20 + -0x498) = *puVar14;\n                                *(*0x20 + -0x494) = uVar3;\n                                *(*0x20 + -0x490) = uVar4;\n                                *(*0x20 + -0x48c) = uVar5;\n                                if (*(*0x20 + -0x4b8) == 1) {\n                                    if (puVar15 == NULL) {\ncode_r0x0047a465:\n                                        *(*0x20 + -0x618) = 0x47a46f;\n                                        fcn.0045ca80(puVar15);\n                                        break;\n                                    }\n                                    uVar3 = *(arg2_00 + 4);\n                                    uVar4 = *(arg2_00 + 1);\n                                    uVar5 = *(arg2_00 + 0xc);\n                                    *(*0x20 + -0x3c8) = *arg2_00;\n                                    *(*0x20 + -0x3c4) = uVar3;\n                                    *(*0x20 + -0x3c0) = uVar4;\n                                    *(*0x20 + -0x3bc) = uVar5;\n                                    uVar3 = *(puVar17 + uVar13 + 0x14);\n                                    uVar4 = *(puVar17 + uVar13 + 0x18);\n                                    uVar5 = *(puVar17 + uVar13 + 0x1c);\n                                    *(*0x20 + -0x3b8) = *(puVar17 + uVar13 + 0x10);\n                                    *(*0x20 + -0x3b4) = uVar3;\n                                    *(*0x20 + -0x3b0) = uVar4;\n                                    *(*0x20 + -0x3ac) = uVar5;\n                                    arg2 = puVar17 + uVar13 + 0x20;\n                                    uVar3 = *(puVar17 + uVar13 + 0x24);\n                                    uVar4 = *(puVar17 + uVar13 + 0x28);\n                                    uVar5 = *(puVar17 + uVar13 + 0x2c);\n                                    *(*0x20 + -0x3a8) = *arg2;\n                                    *(*0x20 + -0x3a4) = uVar3;\n                                    *(*0x20 + -0x3a0) = uVar4;\n                                    *(*0x20 + -0x39c) = uVar5;\n                                    if (*(*0x20 + -0x3c8) != 1) {\n                                        *(*0x20 + -0x548) = puVar15;\n                                        arg2 = *(*0x20 + 0x10);\n                                        puVar10 = NULL;\n                                        puVar12 = arg2_00;\n                                        goto code_r0x0047a29f;\n                                    }\n                                    if (*(*0x20 + -0x3b8) == *(*0x20 + -0x4a8)) {\n                                        *(*0x20 + -0x618) = 0x479cc9;\n                                        fcn.004575e0(*(*0x20 + -0x4a0) + *(*0x20 + 0x10));\n                                        arg1_00 = *(*0x20 + -0x390);\n                                        unaff_RBX = 0x495dc0;\n                                        arg1_01 = *(*0x20 + -0x368);\n                                        arg3 = *(*0x20 + -0x538);\n                                        puVar10 = *(*0x20 + -0x530);\n                                        unaff_RDI = arg3;\n                                        goto code_r0x00479a83;\n                                    }\n                                }\n                                else {\n                                    if (puVar15 != NULL) {\n                                        uVar3 = *(arg2_00 + 4);\n                                        uVar4 = *(arg2_00 + 1);\n                                        uVar5 = *(arg2_00 + 0xc);\n                                        *(*0x20 + -0x428) = *arg2_00;\n                                        *(*0x20 + -0x424) = uVar3;\n                                        *(*0x20 + -0x420) = uVar4;\n                                        *(*0x20 + -0x41c) = uVar5;\n                                        uVar3 = *(puVar17 + uVar13 + 0x14);\n                                        uVar4 = *(puVar17 + uVar13 + 0x18);\n                                        uVar5 = *(puVar17 + uVar13 + 0x1c);\n                                        *(*0x20 + -0x418) = *(puVar17 + uVar13 + 0x10);\n                                        *(*0x20 + -0x414) = uVar3;\n                                        *(*0x20 + -0x410) = uVar4;\n                                        *(*0x20 + -0x40c) = uVar5;\n                                        puVar14 = puVar17 + uVar13 + 0x20;\n                                        uVar3 = *(puVar17 + uVar13 + 0x24);\n                                        uVar4 = *(puVar17 + uVar13 + 0x28);\n                                        uVar5 = *(puVar17 + uVar13 + 0x2c);\n                                        *(*0x20 + -0x408) = *puVar14;\n                                        *(*0x20 + -0x404) = uVar3;\n                                        *(*0x20 + -0x400) = uVar4;\n                                        *(*0x20 + -0x3fc) = uVar5;\n                                        if (*(*0x20 + -0x428) != 1) {\n                                            if (puVar15 != arg2) {\ncode_r0x0047a085:\n                                                arg1_01 = 0x4c9a30;\n                                                *(*0x20 + -0x618) = 0x47a098;\n                                                iVar8 = fcn.00432ec0();\n                                                puVar12 = puVar15;\n                                                goto code_r0x0047a098;\n                                            }\n                                            iVar9 = *(*0x20 + 0x20);\n                                            puVar14 = *(*0x20 + -0x398);\n                                            iVar8 = 0;\n                                            do {\n                                                uVar3 = *(puVar14 + 4);\n                                                uVar4 = *(puVar14 + 1);\n                                                uVar5 = *(puVar14 + 0xc);\n                                                *(*0x20 + -0x518) = *puVar14;\n                                                *(*0x20 + -0x514) = uVar3;\n                                                *(*0x20 + -0x510) = uVar4;\n                                                *(*0x20 + -0x50c) = uVar5;\n                                                uVar3 = *(puVar14 + 0x14);\n                                                uVar4 = *(puVar14 + 3);\n                                                uVar5 = *(puVar14 + 0x1c);\n                                                *(*0x20 + -0x508) = *(puVar14 + 2);\n                                                *(*0x20 + -0x504) = uVar3;\n                                                *(*0x20 + -0x500) = uVar4;\n                                                *(*0x20 + -0x4fc) = uVar5;\n                                                uVar3 = *(puVar14 + 0x24);\n                                                uVar4 = *(puVar14 + 5);\n                                                uVar5 = *(puVar14 + 0x2c);\n                                                *(*0x20 + -0x4f8) = *(puVar14 + 4);\n                                                *(*0x20 + -0x4f4) = uVar3;\n                                                *(*0x20 + -0x4f0) = uVar4;\n                                                *(*0x20 + -0x4ec) = uVar5;\n                                                iVar16 = iVar8 * 0x30;\n                                                puVar15 = arg2_00 + iVar8 * 6;\n                                                uVar3 = *(puVar15 + 4);\n                                                uVar4 = *(puVar15 + 1);\n                                                uVar5 = *(puVar15 + 0xc);\n                                                *(*0x20 + -0x458) = *puVar15;\n                                                *(*0x20 + -0x454) = uVar3;\n                                                *(*0x20 + -0x450) = uVar4;\n                                                *(*0x20 + -0x44c) = uVar5;\n                                                uVar3 = *(arg2_00 + iVar16 + 0x14);\n                                                uVar4 = *(arg2_00 + iVar8 * 6 + 3);\n                                                uVar5 = *(arg2_00 + iVar16 + 0x1c);\n                                                *(*0x20 + -0x448) = *(arg2_00 + iVar8 * 6 + 2);\n                                                *(*0x20 + -0x444) = uVar3;\n                                                *(*0x20 + -0x440) = uVar4;\n                                                *(*0x20 + -0x43c) = uVar5;\n                                                uVar3 = *(arg2_00 + iVar16 + 0x24);\n                                                uVar4 = *(arg2_00 + iVar8 * 6 + 5);\n                                                uVar5 = *(arg2_00 + iVar16 + 0x2c);\n                                                *(*0x20 + -0x438) = *(arg2_00 + iVar8 * 6 + 4);\n                                                *(*0x20 + -0x434) = uVar3;\n                                                *(*0x20 + -0x430) = uVar4;\n                                                *(*0x20 + -0x42c) = uVar5;\n                                                puVar15 = *(*0x20 + -0x518);\n                                                if (*(*0x20 + -0x458) != puVar15) {\ncode_r0x0047a072:\n                                                    *(*0x20 + -0x618) = 0x47a085;\n                                                    fcn.00432ec0();\n                                                    goto code_r0x0047a085;\n                                                }\n                                                if (puVar15 != 0x2) {\n                                                    if (puVar15 != 0x3) {\n                                                        if (puVar15 == 0x4) {\n                                                            puVar15 = *(*0x20 + -0x4f0);\n                                                            if (puVar15 < 0xf) {\n                                                                puVar15 = *(iVar9 + 0x48 + puVar15 * 8);\n                                                                if (*(*0x20 + -0x430) < 0xf) {\n                                                                    *(*0x20 + *(*0x20 + -0x430) * 8 + -0xd0) = puVar15;\n                                                                    goto code_r0x00479ff7;\n                                                                }\n                                                                *(*0x20 + -0x618) = 0x47a01b;\n                                                                fcn.0045ca80(0xf);\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x47a028;\n                                                            fcn.0045ca80(0xf);\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x47a03b;\n                                                        fcn.00432ec0();\ncode_r0x0047a03b:\n                                                        *(*0x20 + -0x618) = 0x47a048;\n                                                        fcn.0045ca80(9);\n                                                        goto code_r0x0047a048;\n                                                    }\n                                                    puVar15 = *(*0x20 + -0x4f8);\n                                                    if (puVar15 < 0x9) {\n                                                        puVar15 = *(iVar9 + 0xc0 + puVar15 * 8);\n                                                        if (*(*0x20 + -0x438) < 9) {\n                                                            *(*0x20 + *(*0x20 + -0x438) * 8 + -0x58) = puVar15;\n                                                            goto code_r0x00479f92;\n                                                        }\n                                                        goto code_r0x0047a055;\n                                                    }\ncode_r0x0047a065:\n                                                    arg1_00 = 0x9;\n                                                    *(*0x20 + -0x618) = 0x47a072;\n                                                    fcn.0045ca80(9);\n                                                    goto code_r0x0047a072;\n                                                }\ncode_r0x00479f92:\n                                                puVar15 = *(*0x20 + -0x4f8);\n                                                if (0x8 < puVar15) {\ncode_r0x0047a048:\n                                                    *(*0x20 + -0x618) = 0x47a055;\n                                                    fcn.0045ca80(9);\ncode_r0x0047a055:\n                                                    *(*0x20 + -0x618) = 0x47a065;\n                                                    fcn.0045ca80(9);\n                                                    goto code_r0x0047a065;\n                                                }\n                                                puVar15 = *(iVar9 + puVar15 * 8);\n                                                if (8 < *(*0x20 + -0x438)) goto code_r0x0047a03b;\n                                                *(*0x20 + *(*0x20 + -0x438) * 8 + -0x118) = puVar15;\ncode_r0x00479ff7:\n                                                iVar8 = iVar8 + 1;\n                                                if (arg2 <= iVar8) goto code_r0x00479d76;\n                                                puVar14 = puVar14 + 6;\n                                            } while( true );\n                                        }\n                                        iVar8 = *(*0x20 + 0x20);\n                                        puVar14 = *(*0x20 + -0x398);\n                                        puVar12 = NULL;\n                                        do {\n                                            uVar3 = *(puVar14 + 4);\n                                            uVar4 = *(puVar14 + 1);\n                                            uVar5 = *(puVar14 + 0xc);\n                                            *(*0x20 + -0x4e8) = *puVar14;\n                                            *(*0x20 + -0x4e4) = uVar3;\n                                            *(*0x20 + -0x4e0) = uVar4;\n                                            *(*0x20 + -0x4dc) = uVar5;\n                                            uVar3 = *(puVar14 + 0x14);\n                                            uVar4 = *(puVar14 + 3);\n                                            uVar5 = *(puVar14 + 0x1c);\n                                            *(*0x20 + -0x4d8) = *(puVar14 + 2);\n                                            *(*0x20 + -0x4d4) = uVar3;\n                                            *(*0x20 + -0x4d0) = uVar4;\n                                            *(*0x20 + -0x4cc) = uVar5;\n                                            uVar3 = *(puVar14 + 0x24);\n                                            uVar4 = *(puVar14 + 5);\n                                            uVar5 = *(puVar14 + 0x2c);\n                                            *(*0x20 + -0x4c8) = *(puVar14 + 4);\n                                            *(*0x20 + -0x4c4) = uVar3;\n                                            *(*0x20 + -0x4c0) = uVar4;\n                                            *(*0x20 + -0x4bc) = uVar5;\n                                            puVar15 = *(*0x20 + -0x4e0) + *(*0x20 + -0x410);\n                                            iVar9 = *(*0x20 + -0x4e8);\n                                            if (iVar9 != 2) {\n                                                if (iVar9 == 3) {\n                                                    if (*(*0x20 + -0x4c8) < 9) {\n                                                        if (*0x593680 == 0) {\n                                                            *(arg1_01 + puVar15) =\n                                                                 *(iVar8 + 0xc0 + *(*0x20 + -0x4c8) * 8);\n                                                        }\n                                                        else {\n                                                            *(*0x20 + -0x618) = 0x47a133;\n                                                            iVar8 = fcn.0045c780(arg1_00, unaff_RBX, arg3);\n                                                        }\n                                                        goto code_r0x0047a211;\n                                                    }\n                                                }\n                                                else {\n                                                    if (iVar9 == 4) {\n                                                        uVar18 = *(*0x20 + -0x4c0);\n                                                        if (*(*0x20 + -0x4d8) == 4) {\n                                                            if (uVar18 < 0xf) {\n                                                                *(arg1_01 + puVar15) = *(iVar8 + 0x48 + uVar18 * 8);\n                                                                goto code_r0x0047a211;\n                                                            }\n                                                        }\n                                                        else {\n                                                            if (*(*0x20 + -0x4d8) == 8) {\n                                                                if (uVar18 < 0xf) {\n                                                                    *(arg1_01 + puVar15) = *(iVar8 + 0x48 + uVar18 * 8);\n                                                                    goto code_r0x0047a211;\n                                                                }\n                                                                *(*0x20 + -0x618) = 0x47a238;\n                                                                fcn.0045ca80(0xf);\n                                                            }\n                                                            *(*0x20 + -0x618) = 0x47a24b;\n                                                            fcn.00432ec0();\n                                                        }\n                                                        *(*0x20 + -0x618) = 0x47a258;\n                                                        fcn.0045ca80(0xf);\n                                                    }\n                                                    *(*0x20 + -0x618) = 0x47a26b;\n                                                    fcn.00432ec0();\n                                                }\n                                                *(*0x20 + -0x618) = 0x47a278;\n                                                fcn.0045ca80(9);\n                                                break;\n                                            }\n                                            *(*0x20 + -0x528) = puVar12;\n                                            *(*0x20 + -0x358) = puVar14;\n                                            *(*0x20 + -0x618) = 0x47a1d2;\n                                            fcn.00476fe0(*(*0x20 + -0x4d8));\n                                            iVar8 = *(*0x20 + 0x20);\n                                            arg1_00 = *(*0x20 + -0x390);\n                                            unaff_RBX = 0x495dc0;\n                                            arg1_01 = *(*0x20 + -0x368);\n                                            puVar12 = *(*0x20 + -0x528);\n                                            arg3 = *(*0x20 + -0x538);\n                                            arg2 = *(*0x20 + -0x540);\n                                            puVar14 = *(*0x20 + -0x358);\ncode_r0x0047a211:\n                                            puVar12 = puVar12 + 1;\n                                            if (arg2 <= puVar12) goto code_r0x0047a21e;\ncode_r0x0047a098:\n                                            puVar14 = puVar14 + 6;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x618) = 0x47a285;\n                                    arg1_00 = puVar15;\n                                    fcn.0045ca80(puVar15);\n                                }\n                                arg1_01 = 0x4c9a00;\n                                *(*0x20 + -0x618) = 0x47a298;\n                                fcn.00432ec0();\n                                puVar10 = puVar14;\n                                do {\n                                    puVar12 = puVar12 + 6;\ncode_r0x0047a29f:\n                                    *(*0x20 + -0x528) = puVar10;\n                                    *(*0x20 + -0x358) = puVar12;\n                                    uVar3 = *(puVar12 + 4);\n                                    uVar4 = *(puVar12 + 1);\n                                    uVar5 = *(puVar12 + 0xc);\n                                    *(*0x20 + -0x3f8) = *puVar12;\n                                    *(*0x20 + -0x3f4) = uVar3;\n                                    *(*0x20 + -0x3f0) = uVar4;\n                                    *(*0x20 + -0x3ec) = uVar5;\n                                    uVar3 = *(puVar12 + 0x14);\n                                    uVar4 = *(puVar12 + 3);\n                                    uVar5 = *(puVar12 + 0x1c);\n                                    *(*0x20 + -1000) = *(puVar12 + 2);\n                                    *(*0x20 + -0x3e4) = uVar3;\n                                    *(*0x20 + -0x3e0) = uVar4;\n                                    *(*0x20 + -0x3dc) = uVar5;\n                                    uVar3 = *(puVar12 + 0x24);\n                                    uVar4 = *(puVar12 + 5);\n                                    uVar5 = *(puVar12 + 0x2c);\n                                    *(*0x20 + -0x3d8) = *(puVar12 + 4);\n                                    *(*0x20 + -0x3d4) = uVar3;\n                                    *(*0x20 + -0x3d0) = uVar4;\n                                    *(*0x20 + -0x3cc) = uVar5;\n                                    puVar14 = *(*0x20 + -0x3f0) + *(*0x20 + -0x4a0);\n                                    puVar17 = *(*0x20 + -0x3f8);\n                                    arg2_00 = puVar14 + arg2;\n                                    if (puVar17 == 0x2) {\ncode_r0x0047a395:\n                                        *(*0x20 + -0x618) = 0x47a3b5;\n                                        fcn.00477080(*(*0x20 + -1000));\n                                        puVar10 = *(*0x20 + -0x528);\n                                        arg1_00 = *(*0x20 + -0x390);\n                                        unaff_RBX = 0x495dc0;\n                                        arg1_01 = *(*0x20 + -0x368);\n                                        puVar12 = *(*0x20 + -0x358);\n                                        arg3 = *(*0x20 + -0x538);\n                                        arg2 = *(*0x20 + 0x10);\n                                        puVar15 = *(*0x20 + -0x548);\n                                    }\n                                    else {\n                                        if (puVar17 == 0x3) {\n                                            if (8 < *(*0x20 + -0x3d8)) {\n                                                *(*0x20 + -0x618) = 0x47a425;\n                                                fcn.0045ca80(9);\ncode_r0x0047a425:\n                                                *(*0x20 + -0x618) = 0x47a432;\n                                                fcn.0045ca80(0xf);\ncode_r0x0047a432:\n                                                *(*0x20 + -0x618) = 0x47a445;\n                                                fcn.00432ec0();\ncode_r0x0047a445:\n                                                *(*0x20 + -0x618) = 0x47a452;\n                                                fcn.0045ca80(0xf);\n                                                goto code_r0x0047a452;\n                                            }\n                                            *(*0x20 + *(*0x20 + -0x3d8) * 8 + -0x58) = *(arg2 + puVar14);\n                                            goto code_r0x0047a395;\n                                        }\n                                        if (puVar17 != 0x4) {\ncode_r0x0047a452:\n                                            *(*0x20 + -0x618) = 0x47a465;\n                                            fcn.00432ec0();\n                                            goto code_r0x0047a465;\n                                        }\n                                        puVar17 = *(*0x20 + -0x3d0);\n                                        arg2_00 = *(*0x20 + -1000);\n                                        if (arg2_00 == 0x4) {\n                                            if (0xe < puVar17) goto code_r0x0047a445;\n                                            *(*0x20 + puVar17 * 8 + -0xd0) = *(arg2 + puVar14);\n                                        }\n                                        else {\n                                            if (arg2_00 != 0x8) goto code_r0x0047a432;\n                                            puVar14 = *(arg2 + puVar14);\n                                            if (0xe < puVar17) goto code_r0x0047a425;\n                                            *(*0x20 + puVar17 * 8 + -0xd0) = puVar14;\n                                        }\n                                    }\n                                    puVar10 = puVar10 + 1;\n                                } while (puVar10 < puVar15);\n                                puVar10 = *(*0x20 + -0x530);\n                                unaff_RDI = arg3;\n                                goto code_r0x00479a83;\n                            }\n                            puVar10 = puVar14;\n                        } while (puVar15 == NULL);\n                        *(*0x20 + -0x618) = 0x47a485;\n                        fcn.00432ec0();\ncode_r0x0047a485:\n                        *(*0x20 + -0x618) = 0x47a490;\n                        fcn.0045cb40(puVar15);\ncode_r0x0047a490:\n                        *(*0x20 + -0x618) = 0x47a49b;\n                        fcn.0045cb00(puVar15, arg2_00);\ncode_r0x0047a49b:\n                        *(*0x20 + -0x618) = 0x47a4a6;\n                        fcn.0045ca80(puVar17);\ncode_r0x0047a4a6:\n                        *(*0x20 + -0x618) = 0x47a4b1;\n                        fcn.0045ca80(puVar17);\n                        unaff_RDI = arg3;\ncode_r0x0047a4b1:\n                        *(*0x20 + -0x618) = 0x47a4bc;\n                        fcn.0045cb40(puVar15);\ncode_r0x0047a4bc:\n                        *(*0x20 + -0x618) = 0x47a4c7;\n                        fcn.0045cb00(puVar15, arg2);\n                        arg3 = puVar14;\ncode_r0x0047a4c7:\n                        *(*0x20 + -0x618) = 0x47a4cf;\n                        fcn.0045ca80(puVar15);\ncode_r0x0047a4cf:\n                        *(*0x20 + -0x618) = 0x47a4d4;\n                        fcn.0045ca80(puVar15);\n                    }\n                    else {\n                        arg1_00 = iVar8 + iVar9;\n                        if (arg3 < 0x100001) goto code_r0x00479a5e;\n                    }\n                    unaff_RBX = arg3 & 0xffffffff;\n                    *(*0x20 + -0x618) = 0x47a4e5;\n                    fcn.0045cb80(puVar15, unaff_RBX);\n                }\n                *(*0x20 + -0x618) = 0x47a4ec;\n                fcn.0045ca80(puVar15);\n            }\n            arg1 = 0x497ae0;\n            *(*0x20 + -0x618) = 0x47a4fb;\n            in_RAX = fcn.0040a2a0(0x497ae0);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x47a515;\n        fcn.0045a3a0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00479d76:\n    puVar10 = *(*0x20 + -0x530);\n    goto code_r0x00479a83;\ncode_r0x0047a21e:\n    puVar10 = *(*0x20 + -0x530);\n    unaff_RDI = arg3;\n    goto code_r0x00479a83;\n}\n",
        "token_count": 10140
    },
    "0047d2e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047d845)\n// WARNING: Removing unreachable block (ram,0x0047d75e)\n// WARNING: Removing unreachable block (ram,0x0047d76f)\n// WARNING: Removing unreachable block (ram,0x0047d878)\n// WARNING: Removing unreachable block (ram,0x0047d834)\n// WARNING: Removing unreachable block (ram,0x0047d88a)\n\nint64_t fcn.0047d2e0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    ulong uVar10;\n    ulong *puVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    double dVar18;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x90 && *0x20 + -0x90 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x110;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x90) = arg3;\n            *(*0x20 + -0x30) = unaff_RSI;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x98) = arg1;\n            *(*0x20 + -0x118) = 0x47d35b;\n            uVar5 = fcn.0047b8a0(arg1);\n            *(*0x20 + -0x50) = uVar5;\n            *(*0x20 + -0x58) = unaff_RBX;\n            uVar5 = *(*0x20 + -0x30);\n            *(*0x20 + -0x118) = 0x47d388;\n            iVar6 = fcn.0047b8a0(*(*0x20 + -0x90));\n            if (iVar6 != *(*0x20 + -0x50)) {\n                return -1;\n            }\n            *(*0x20 + -0x118) = 0x47d3ac;\n            cVar3 = fcn.00403900(uVar5);\n            if (cVar3 == '\\0') {\n                return -1;\n            }\n            uVar5 = *(*0x20 + -0x98);\n            uVar8 = uVar5 & 0x1f;\n            if (0x11 < uVar8) {\n                if (uVar8 < 0x17) {\n                    if (uVar8 == 0x12) {\n                        uVar9 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x47dbab;\n                        iVar6 = fcn.0047e120(uVar5, uVar5, *(*0x20 + -0x90));\n                        if (uVar9 != '\\0') {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x118) = 0x47dbcd;\n                        uVar5 = fcn.0047b360(*(*0x20 + -0x98));\n                        *(*0x20 + -0xb8) = uVar5;\n                        *(*0x20 + -0x118) = 0x47dbef;\n                        uVar8 = fcn.0047b360(*(*0x20 + -0x90));\n                        if (uVar8 <= *(*0x20 + -0xb8)) {\n                            if (uVar8 < *(*0x20 + -0xb8)) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        return -1;\n                    }\n                    if (uVar8 == 0x14) {\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar7 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x47d93f;\n                        iVar6 = fcn.0047e120(uVar5, uVar5, uVar7);\n                        if (uVar9 != '\\0') {\n                            return iVar6;\n                        }\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar10 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x47d965;\n                        fcn.0047a560(uVar10);\n                        *(*0x20 + -0x118) = 0x47d96a;\n                        iVar6 = fcn.0047b8a0(uVar10);\n                        if (iVar6 != 0) {\n                            iVar6 = *(iVar6 + 8);\n                        }\n                        if (iVar6 == 0) {\n                            iVar6 = 0;\n                            uVar9 = 0;\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar2 = *0x53f5f0;\n                            if ((*0x53f5e0 != '\\0') && (*0x53f5e8 = iVar6,  uVar2 = uVar9,  *0x593680 != 0)) {\n                                *(*0x20 + -0x118) = 0x47d9a7;\n                                iVar6 = fcn.0045c720(uVar10, uVar5, uVar7, in_R9);\n                                uVar2 = *0x53f5f0;\n                            }\n                            *0x53f5f0 = uVar2;\n                            *(*0x20 + -0x18) = iVar6;\n                            *(*0x20 + -0x10) = uVar9;\n                            iVar6 = *(*0x20 + -0x18);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar9 = 0;\n                                uVar8 = 0;\n                            }\n                            else {\n                                uVar8 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar8 = uVar8 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x80) = uVar9;\n                        *(*0x20 + -0x88) = iVar6;\n                        *(*0x20 + -0xd8) = uVar8;\n                        uVar5 = *(*0x20 + -0x90);\n                        uVar9 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x47da25;\n                        fcn.0047a560(uVar5);\n                        *(*0x20 + -0x118) = 0x47da2a;\n                        iVar12 = fcn.0047b8a0(uVar5);\n                        if (iVar12 != 0) {\n                            iVar12 = *(iVar12 + 8);\n                        }\n                        if (iVar12 == 0) {\n                            iVar6 = 0;\n                            uVar8 = 0;\n                        }\n                        else {\n                            uVar7 = *0x53f5f0;\n                            if ((*0x53f5e0 != '\\0') && (*0x53f5e8 = iVar12,  uVar7 = uVar9,  *0x593680 != 0)) {\n                                *(*0x20 + -0x118) = 0x47da67;\n                                iVar12 = fcn.0045c720(uVar5, iVar6, uVar8, in_R9);\n                                uVar7 = *0x53f5f0;\n                            }\n                            *0x53f5f0 = uVar7;\n                            *(*0x20 + -0x28) = iVar12;\n                            *(*0x20 + -0x20) = uVar9;\n                            iVar6 = *(*0x20 + -0x28);\n                            if (iVar6 == 0) {\n                                iVar6 = 0;\n                                uVar8 = 0;\n                            }\n                            else {\n                                uVar8 = *(iVar6 + 0x17) & 0x1f;\n                                if ((*(iVar6 + 0x17) & 0x20) == 0) {\n                                    uVar8 = uVar8 | 0x80;\n                                }\n                            }\n                        }\n                        *(*0x20 + -0x118) = 0x47dad7;\n                        iVar12 = fcn.0047d2e0(*(*0x20 + -0xd8), iVar6, uVar8);\n                        if (iVar12 != 0) {\n                            return iVar12;\n                        }\n                        uVar5 = *(*0x20 + -0x40);\n                        uVar9 = *(*0x20 + -0x98);\n                        *(*0x20 + -0x118) = 0x47db06;\n                        uVar7 = fcn.0047a560(uVar9);\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x98) = uVar9;\n                        uVar5 = *(*0x20 + -0x90);\n                        *(*0x20 + -0x118) = 0x47db38;\n                        fcn.0047a560(uVar5);\n                        *(*0x20 + -0x118) = 0x47db5b;\n                        iVar6 = fcn.0047d2e0(*(*0x20 + -0x98), iVar6, uVar5);\n                        return iVar6;\n                    }\n                    if (uVar8 == 0x16) {\ncode_r0x0047dc6f:\n                        *(*0x20 + -0x118) = 0x47dc87;\n                        uVar5 = fcn.0047b360(uVar5);\n                        *(*0x20 + -0xa8) = uVar5;\n                        *(*0x20 + -0x118) = 0x47dca9;\n                        uVar8 = fcn.0047b360(*(*0x20 + -0x90));\n                        if (*(*0x20 + -0xa8) < uVar8) {\n                            return -1;\n                        }\n                        if (uVar8 < *(*0x20 + -0xa8)) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == 0x18) {\n                        uVar9 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x118) = 0x47dd0b;\n                        uVar5 = fcn.0047b7c0(uVar5);\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0xb0) = uVar9;\n                        uVar5 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x118) = 0x47dd35;\n                        uVar9 = fcn.0047b7c0(*(*0x20 + -0x90));\n                        *(*0x20 + -0x78) = uVar9;\n                        *(*0x20 + -0xc0) = uVar5;\n                        *(*0x20 + -0x118) = 0x47dd5a;\n                        iVar6 = fcn.00402480(uVar9);\n                        if (iVar6 < 0) {\n                            return -1;\n                        }\n                        *(*0x20 + -0x118) = 0x47dd7e;\n                        iVar6 = fcn.00402480(*(*0x20 + -0x78));\n                        if (0 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                    if (uVar8 == 0x19) {\n                        iVar6 = 0;\n                        goto code_r0x0047de33;\n                    }\n                    if (uVar8 == 0x1a) goto code_r0x0047dc6f;\n                }\ncode_r0x0047ddda:\n                pcVar1 = *(*(*0x20 + -0x50) + 0xf8);\n                *(*0x20 + -0x118) = 0x47ddf3;\n                (*pcVar1)();\n                *(*0x20 + -0x118) = 0x47de0c;\n                fcn.00448bc0(0x15);\n                *(*0x20 + -0x118) = 0x47de11;\n                fcn.0040a660();\n                *(*0x20 + -0x118) = 0x47de25;\n                fcn.00432ec0();\n                while( true ) {\n                    iVar6 = *(*0x20 + -200) + 1;\n                    uVar5 = *(*0x20 + -0x98);\ncode_r0x0047de33:\n                    *(*0x20 + -200) = iVar6;\n                    *(*0x20 + -0x118) = 0x47de50;\n                    iVar6 = fcn.0047b280(uVar5);\n                    if (iVar6 <= *(*0x20 + -200)) break;\n                    uVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x98);\n                    *(*0x20 + -0x118) = 0x47de78;\n                    uVar10 = fcn.0047a740(uVar7);\n                    *(*0x20 + -0x60) = uVar10;\n                    *(*0x20 + -0x68) = uVar9;\n                    *(*0x20 + -0xa0) = uVar7;\n                    uVar9 = *(*0x20 + -0x90);\n                    *(*0x20 + -0x118) = 0x47deaf;\n                    fcn.0047a740(uVar9);\n                    *(*0x20 + -0x118) = 0x47ded2;\n                    iVar6 = fcn.0047d2e0(*(*0x20 + -0xa0), uVar5, uVar9);\n                    if (iVar6 != 0) {\n                        return iVar6;\n                    }\n                }\n                return 0;\n            }\n            if (uVar8 < 0xd) {\n                if (uVar8 == 1) {\n                    *(*0x20 + -0x118) = 0x47d679;\n                    uVar4 = fcn.00479160(uVar5);\n                    *(*0x20 + -0xd9) = uVar4;\n                    *(*0x20 + -0x118) = 0x47d69a;\n                    cVar3 = fcn.00479160(*(*0x20 + -0x90));\n                    if (cVar3 == *(*0x20 + -0xd9)) {\n                        return 0;\n                    }\n                    if (*(*0x20 + -0xd9) != '\\0') {\n                        return 1;\n                    }\n                    return -1;\n                }\n                if (4 < uVar8 - 2) {\n                    if (uVar8 < 7) goto code_r0x0047ddda;\n                    if (uVar8 < 10) {\n                        if (uVar8 == 7) {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                        else if (uVar8 == 8) {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                        else {\n                            uVar8 = **(*0x20 + -0x40);\n                        }\n                    }\n                    else if (uVar8 == 10) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else if (uVar8 == 0xb) {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        uVar8 = **(*0x20 + -0x40);\n                    }\n                    uVar13 = *(*0x20 + -0x90) & 0x1f;\n                    *(*0x20 + -0x90) = uVar13;\n                    if (uVar13 < 10) {\n                        if (uVar13 == 7) {\n                            uVar13 = **(*0x20 + -0x30);\ncode_r0x0047d61a:\n                            if (uVar8 < uVar13) {\n                                return -1;\n                            }\n                            if (uVar13 < uVar8) {\n                                return 1;\n                            }\n                            return 0;\n                        }\n                        if (uVar13 == 8) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047d61a;\n                        }\n                        if (uVar13 == 9) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047d61a;\n                        }\n                    }\n                    else {\n                        if (uVar13 == 10) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047d61a;\n                        }\n                        if (uVar13 == 0xb) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047d61a;\n                        }\n                        if (uVar13 == 0xc) {\n                            uVar13 = **(*0x20 + -0x30);\n                            goto code_r0x0047d61a;\n                        }\n                    }\n                    goto code_r0x0047e057;\n                }\n                if (uVar8 < 4) {\n                    if (uVar8 == 2) {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar6 = **(*0x20 + -0x40);\n                    }\n                }\n                else if (uVar8 == 4) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else if (uVar8 == 5) {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                else {\n                    iVar6 = **(*0x20 + -0x40);\n                }\n                uVar8 = *(*0x20 + -0x90) & 0x1f;\n                *(*0x20 + -0x90) = uVar8;\n                if (uVar8 < 4) {\n                    if (uVar8 == 2) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x0047d4c8;\n                    }\n                    if (uVar8 == 3) {\n                        iVar12 = **(*0x20 + -0x30);\ncode_r0x0047d4c8:\n                        if (iVar6 < iVar12) {\n                            return -1;\n                        }\n                        if (iVar12 < iVar6) {\n                            return 1;\n                        }\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == 4) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x0047d4c8;\n                    }\n                    if (uVar8 == 5) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x0047d4c8;\n                    }\n                    if (uVar8 == 6) {\n                        iVar12 = **(*0x20 + -0x30);\n                        goto code_r0x0047d4c8;\n                    }\n                }\n            }\n            else {\n                if (uVar8 < 0xf) {\n                    if (uVar8 == 0xd) {\n                        dVar15 = **(*0x20 + -0x40);\n                    }\n                    else {\n                        dVar15 = **(*0x20 + -0x40);\n                    }\n                    uVar8 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar8 == 0xd) {\n                        dVar16 = **(*0x20 + -0x30);\ncode_r0x0047d756:\n                        if (dVar16 <= dVar15) {\n                            if (dVar15 <= dVar16) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar8 == 0xe) {\n                        dVar16 = **(*0x20 + -0x30);\n                        goto code_r0x0047d756;\n                    }\n                }\n                else {\n                    unaff_RSI = uVar8 - 0xf;\n                    if (1 < unaff_RSI) {\n                        if (uVar8 == 0x11) {\n                            iVar6 = 0;\n                            while( true ) {\n                                *(*0x20 + -0xd0) = iVar6;\n                                *(*0x20 + -0x118) = 0x47df28;\n                                iVar6 = fcn.0047abc0(uVar5);\n                                if (iVar6 <= *(*0x20 + -0xd0)) {\n                                    return 0;\n                                }\n                                uVar9 = *(*0x20 + -0x40);\n                                uVar7 = *(*0x20 + -0x98);\n                                *(*0x20 + -0x118) = 0x47df50;\n                                uVar10 = fcn.0047a880(uVar7);\n                                *(*0x20 + -0x60) = uVar10;\n                                *(*0x20 + -0x68) = uVar9;\n                                *(*0x20 + -0xa0) = uVar7;\n                                uVar9 = *(*0x20 + -0x90);\n                                *(*0x20 + -0x118) = 0x47df87;\n                                fcn.0047a880(uVar9);\n                                *(*0x20 + -0x118) = 0x47dfaa;\n                                iVar6 = fcn.0047d2e0(*(*0x20 + -0xa0), uVar5, uVar9);\n                                if (iVar6 != 0) break;\n                                iVar6 = *(*0x20 + -0xd0) + 1;\n                                uVar5 = *(*0x20 + -0x98);\n                            }\n                            return iVar6;\n                        }\n                        goto code_r0x0047ddda;\n                    }\n                    if (uVar8 == 0xf) {\n                        dVar15 = **(*0x20 + -0x40);\n                        dVar16 = (*(*0x20 + -0x40))[1];\n                    }\n                    else {\n                        dVar15 = **(*0x20 + -0x40);\n                        dVar16 = (*(*0x20 + -0x40))[1];\n                    }\n                    uVar8 = *(*0x20 + -0x90) & 0x1f;\n                    if (uVar8 == 0xf) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\ncode_r0x0047d82c:\n                        if (dVar17 <= dVar15) {\n                            if (dVar15 <= dVar17) {\n                                iVar6 = 0;\n                            }\n                            else {\n                                iVar6 = 1;\n                            }\n                        }\n                        else {\n                            iVar6 = -1;\n                        }\n                        if (iVar6 == 0) {\n                            if (dVar18 <= dVar16) {\n                                if (dVar16 <= dVar18) {\n                                    iVar6 = 0;\n                                }\n                                else {\n                                    iVar6 = 1;\n                                }\n                            }\n                            else {\n                                iVar6 = -1;\n                            }\n                            return iVar6;\n                        }\n                        return iVar6;\n                    }\n                    if (uVar8 == 0x10) {\n                        dVar17 = **(*0x20 + -0x30);\n                        dVar18 = (*(*0x20 + -0x30))[1];\n                        goto code_r0x0047d82c;\n                    }\n                    *(*0x20 + -0x90) = uVar8;\n                    *(*0x20 + -0x118) = 0x47dfe9;\n                    puVar11 = fcn.0040cd00();\n                    puVar11[1] = 0x15;\n                    *puVar11 = 0x4aa272;\n                    uVar8 = *(*0x20 + -0x90);\n                    puVar11[2] = uVar8;\n                    *(*0x20 + -0x118) = 0x47e016;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x90) = uVar8;\n                *(*0x20 + -0x118) = 0x47e02a;\n                puVar11 = fcn.0040cd00();\n                puVar11[1] = 0x13;\n                *puVar11 = 0x4a9959;\n                puVar11[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x47e057;\n                fcn.00432ec0();\ncode_r0x0047e057:\n                *(*0x20 + -0x118) = 0x47e065;\n                puVar11 = fcn.0040cd00();\n                puVar11[1] = 0x12;\n                *puVar11 = 0x4a93ad;\n                puVar11[2] = *(*0x20 + -0x90);\n                *(*0x20 + -0x118) = 0x47e092;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x118) = 0x47e09e;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x11;\n            *unaff_RBX = 0x4a8f77;\n            arg1 = *(*0x20 + -0x90);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x118) = 0x47e0cb;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + 0x20) = unaff_RDI;\n        *(puVar14 + 0x28) = unaff_RSI;\n        *(puVar14 + 0x30) = arg3;\n        *(puVar14 + -8) = 0x47e0ef;\n        fcn.0045a3a0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        unaff_RDI = *(puVar14 + 0x20);\n        unaff_RSI = *(puVar14 + 0x28);\n        arg3 = *(puVar14 + 0x30);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 6321
    },
    "00480aa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00480aa0(uint *arg1)\n\n{\n    bool bVar1;\n    uint *in_RAX;\n    uint *noname_1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong arg1_00;\n    int64_t *unaff_RBX;\n    uint *puVar4;\n    char unaff_DIL;\n    code *in_R8;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    uint *puStack32;\n    ulong uStack24;\n    uint *puStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53f340 != 0) {\n        return 0;\n    }\n    if (arg1 < 5) {\n        if (arg1 == 0x2) {\n            if (*unaff_RBX != 0x7069) goto code_r0x004810da;\n            goto code_r0x00480e7c;\n        }\n        if (arg1 == 0x3) {\n            iVar2 = fcn.00402480(0x4a6adb);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX == 0x6964) && (*(unaff_RBX + 2) == 'r')) {\n                    *(in_RAX + 0x88) = 3;\n                    goto code_r0x00480e83;\n                }\n                if ((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '4')) goto code_r0x004810da;\n            }\n            else if (((*unaff_RBX != 0x7069) || (*(unaff_RBX + 2) != '6')) &&\n                    (((*unaff_RBX != 0x6374 || (*(unaff_RBX + 2) != 'p')) &&\n                     ((*unaff_RBX != 0x6475 || (*(unaff_RBX + 2) != 'p')))))) goto code_r0x004810da;\n            goto code_r0x00480e7c;\n        }\n        if (arg1 != 0x4) goto code_r0x004810da;\n        iVar2 = fcn.00402480(0x4a6c0b);\n        if (0 < iVar2) {\n            iVar2 = fcn.00402480(0x4a6c13);\n            if (iVar2 < 1) {\n                if ((*unaff_RBX != 0x36706374) && (*unaff_RBX != 0x34706475)) goto code_r0x004810da;\n            }\n            else if ((*unaff_RBX != 0x36706475) && (*unaff_RBX != 0x78696e75)) goto code_r0x004810da;\n            goto code_r0x00480e7c;\n        }\n        if (*unaff_RBX == 0x656c6966) {\n            *(in_RAX + 0x88) = 1;\n        }\n        else {\n            if (*unaff_RBX != 0x65706970) {\n                if (*unaff_RBX != 0x34706374) goto code_r0x004810da;\n                goto code_r0x00480e7c;\n            }\n            *(in_RAX + 0x88) = 4;\n        }\n    }\n    else {\n        if (arg1 == 0x7) {\n            if (((*unaff_RBX != 0x736e6f63) || (*(unaff_RBX + 4) != 0x6c6f)) || (*(unaff_RBX + 6) != 'e'))\n            goto code_r0x004810da;\n            *(in_RAX + 0x88) = 2;\n            goto code_r0x00480e83;\n        }\n        if (arg1 == 0x8) {\n            if (*unaff_RBX != 0x6d61726778696e75) {\ncode_r0x004810da:\n                arg1_00 = 0x25;\n                uStack24 = fcn.00448bc0(0x25);\n                uStack40 = 0x4add1b;\n                puVar3 = fcn.0040cd00();\n                puVar3[1] = uStack40;\n                if (*0x593680 == 0) {\n                    *puVar3 = uStack24;\n                }\n                else {\n                    fcn.0045c700(arg1_00, uStack24, in_R8, in_R9);\n                }\n                return 0;\n            }\n        }\n        else if (((arg1 != 0xa) || (*unaff_RBX != 0x6b63617078696e75)) || (*(unaff_RBX + 1) != 0x7465))\n        goto code_r0x004810da;\ncode_r0x00480e7c:\n        *(in_RAX + 0x88) = 0;\n    }\ncode_r0x00480e83:\n    *(in_RAX + 0x21f) = *(in_RAX + 0x88) != '\\0';\n    if (unaff_DIL == '\\0') {\n        noname_1 = NULL;\n        puVar4 = NULL;\n    }\n    else {\n        noname_1 = fcn.004807e0(in_RAX + 0x6e);\n        puVar4 = in_RAX;\n    }\n    if (*0x53ea60 != NULL) {\n        in_R8 = **0x53ea60;\n        in_R9 = in_RAX;\n        puStack32 = noname_1;\n        puStack16 = puVar4;\n        (*in_R8)(in_RAX, *0x53ea60);\n        noname_1 = puStack32;\n    }\n    if (noname_1 != NULL) {\n        return 0;\n    }\n    if ((unaff_DIL != '\\0') && (*0x593400 != '\\0')) {\n        if ((arg1 == 0x3) && ((*unaff_RBX == 0x6374 && (*(unaff_RBX + 2) == 'p')))) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        iVar2 = fcn.00466860(*(in_RAX + 4));\n        noname_1 = in_RAX;\n        if ((iVar2 == 0) && (bVar1)) {\n            *(in_RAX + 0x87) = 1;\n        }\n    }\n    if (arg1 == 0x3) {\n        if ((*unaff_RBX != 0x6475) || (*(unaff_RBX + 2) != 'p')) goto code_r0x0048105e;\n    }\n    else if ((arg1 != 0x4) || ((*unaff_RBX != 0x34706475 && (*unaff_RBX != 0x36706475)))) goto code_r0x0048105e;\n    uStack48 = 0;\n    uStack44 = 0;\n    noname_1 = *(in_RAX + 4);\n    arg1 = &uStack44;\n    in_R8 = NULL;\n    in_R9 = &uStack48;\n    iVar2 = fcn.00466a80(arg1, noname_1, 0, in_R9);\n    if (iVar2 != 0) {\n        return 0x4a73b0;\n    }\ncode_r0x0048105e:\n    in_RAX[0x10] = 0x72;\n    in_RAX[0x44] = 0x77;\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x14) = in_RAX;\n        *(in_RAX + 0x48) = in_RAX;\n    }\n    else {\n        fcn.0045c5e0(arg1, noname_1, in_R8, in_R9);\n        in_RAX = fcn.0045c5e0(arg1, noname_1, in_R8, in_R9);\n    }\n    *(in_RAX + 0xe) = *(in_RAX + 0x6e);\n    *(in_RAX + 0x42) = *(in_RAX + 0x6e);\n    return 0;\n}\n",
        "token_count": 1905
    },
    "004811a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004811a0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x10) != -1) {\n        if (*(in_RAX + 0x1b8) != 0) {\n            fcn.00457a40();\n            *(in_RAX + 0x1b8) = 0;\n        }\n        if (*(in_RAX + 0x220) == '\\0') {\n            uVar1 = (***0x5379c8)();\n        }\n        else if (*(in_RAX + 0x220) == '\\x03') {\n            uVar1 = fcn.00466160(*(in_RAX + 0x10));\n        }\n        else {\n            uVar1 = fcn.00466080(*(in_RAX + 0x10));\n        }\n        *(in_RAX + 0x10) = 0xffffffffffffffff;\n        fcn.004585a0(in_RAX + 0x218);\n        return uVar1;\n    }\n    return 0x4c9dd8;\n}\n",
        "token_count": 304
    },
    "00481ce0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00481ce0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    int64_t unaff_RSI;\n    int32_t *unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((unaff_RSI == 4) && (*unaff_RDI == 0x656c6966)) {\n        iVar2 = fcn.00466460();\n        if (iVar2 == 0) {\n            unaff_RSI = 7;\n        }\n        iVar1 = fcn.00466560();\n        if ((*0x20 == 0x24) && (iVar1 == 3)) {\n            unaff_RSI = 4;\n        }\n    }\n    piVar3 = fcn.0040cd00();\n    iVar2 = fcn.0040cd00();\n    *(iVar2 + 0x10) = in_RAX;\n    *(iVar2 + 0x21d) = 0x101;\n    *(iVar2 + 0x230) = arg1;\n    if (*0x593680 == 0) {\n        *(iVar2 + 0x228) = unaff_RBX;\n        *piVar3 = iVar2;\n    }\n    else {\n        fcn.0045c700(arg1, unaff_RBX, in_R8, in_R9);\n        fcn.0045c5e0(arg1, unaff_RBX, in_R8, in_R9);\n    }\n    fcn.004168e0(0x496ac0);\n    fcn.00480aa0(unaff_RSI);\n    return piVar3;\n}\n",
        "token_count": 448
    },
    "00487e20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.00487e20(uint64_t *arg1, ulong noname_1, uint64_t **arg3)\n\n{\n    ulong uVar1;\n    uint64_t *puVar2;\n    char cVar3;\n    uint64_t *in_RAX;\n    ulong uVar4;\n    ulong *puVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong *puVar15;\n    uint64_t **ppuVar16;\n    uint32_t uVar17;\n    uint64_t **arg1_00;\n    uint64_t uVar18;\n    uint8_t *puVar19;\n    uint64_t *puVar20;\n    uchar uVar21;\n    uint64_t uVar22;\n    int64_t *piVar23;\n    int64_t *piVar24;\n    int64_t *piVar25;\n    code *pcVar26;\n    uint64_t *unaff_RBX;\n    uchar *puVar27;\n    uchar *unaff_RBP;\n    uint64_t **unaff_RSI;\n    uint64_t **unaff_RDI;\n    uint64_t **ppuVar28;\n    uint8_t *puVar29;\n    uint64_t **in_R9;\n    uint64_t **ppuVar30;\n    int64_t unaff_R14;\n    bool bVar31;\n    \n    while (uVar17 = unaff_RSI,  puVar27 = *0x20, \n          *0x20 + -0x160 < *(unaff_R14 + 0x10) || *0x20 + -0x160 == *(unaff_R14 + 0x10)) {\ncode_r0x00489bfe:\n        *(puVar27 + 8) = in_RAX;\n        *(puVar27 + 0x10) = unaff_RBX;\n        *(puVar27 + 0x18) = arg1;\n        *(puVar27 + 0x20) = unaff_RDI;\n        *(puVar27 + 0x28) = unaff_RSI;\n        *(puVar27 + 0x30) = arg3;\n        *(puVar27 + -8) = 0x489c25;\n        fcn.0045a3a0();\n        in_RAX = *(puVar27 + 8);\n        unaff_RBX = *(puVar27 + 0x10);\n        arg1 = *(puVar27 + 0x18);\n        unaff_RDI = *(puVar27 + 0x20);\n        unaff_RSI = *(puVar27 + 0x28);\n        arg3 = *(puVar27 + 0x30);\n        *0x20 = puVar27;\n    }\n    puVar27 = *0x20 + -0x1e0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + 0x28) = uVar17;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xe0) = unaff_RDI;\n    *(*0x20 + -0x78) = arg1;\n    *(*0x20 + -0x80) = unaff_RBX;\n    if (((0 < arg3) && (unaff_RDI != NULL)) && ((unaff_RDI & 0x60) == 0)) {\n        *(*0x20 + -0x1e8) = 0x487ec5;\n        uVar4 = fcn.0047aa40(unaff_RDI);\n        iVar13 = *(*0x20 + 8);\n        *(iVar13 + 0x18) = uVar4;\n        if (*0x593680 == 0) {\n            *(iVar13 + 0x20) = arg1;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x487eeb;\n            fcn.0045c720(unaff_RDI, iVar13, arg3, in_R9);\n        }\n        *(*0x20 + -0x1e8) = 0x487efa;\n        cVar3 = fcn.00486e20();\n        if (cVar3 != '\\0') {\n            return;\n        }\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x78);\n        unaff_RBX = *(*0x20 + -0x80);\n        uVar17 = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0xe0);\n        arg3 = *(*0x20 + 0x30);\n    }\n    in_RAX[3] = 0;\n    if (*0x593680 == 0) {\n        in_RAX[4] = 0;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x487f6f;\n        in_RAX = fcn.0045c760(arg1, in_RAX + 4, 0, unaff_RDI);\n        in_R9 = unaff_RDI;\n    }\n    in_RAX[7] = unaff_RDI;\n    if (*0x593680 == 0) {\n        in_RAX[5] = unaff_RBX;\n        in_RAX[6] = arg1;\n    }\n    else {\n        *(*0x20 + -0x1e8) = 0x487f9b;\n        fcn.0045c720(arg1, in_RAX + 5, arg3, unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x487fa5;\n        in_RAX = fcn.0045c6e0();\n        in_R9 = unaff_RDI;\n    }\n    uVar22 = unaff_RDI & 0x1f;\n    if (uVar22 < 0x11) {\n        if (0xc < uVar22) {\n            if (0xe < uVar22) {\n                if (uVar22 == 0xf) {\n                    *(*0x20 + -0x1e8) = 0x488ffc;\n                    fcn.00485a60(uVar17);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x489013;\n                fcn.00485a60(uVar17);\n                return;\n            }\n            if (uVar22 == 0xd) {\n                *(*0x20 + -0x1e8) = 0x488fc5;\n                fcn.00485960(uVar17);\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x488fd7;\n            fcn.00485960(uVar17);\n            return;\n        }\n        if (1 < uVar22) {\n            if (uVar22 < 7) {\n                if (uVar22 < 4) {\n                    if (uVar22 == 2) {\n                        uVar22 = *arg1;\n                    }\n                    else {\n                        uVar22 = *arg1;\n                    }\n                }\n                else if (uVar22 == 4) {\n                    uVar22 = *arg1;\n                }\n                else if (uVar22 == 5) {\n                    uVar22 = *arg1;\n                }\n                else {\n                    uVar22 = *arg1;\n                }\n                *(*0x20 + -0x1e8) = 0x488f4b;\n                fcn.00485760(1, uVar22);\n                return;\n            }\n            if (uVar22 < 10) {\n                if (uVar22 == 7) {\n                    uVar22 = *arg1;\n                }\n                else if (uVar22 == 8) {\n                    uVar22 = *arg1;\n                }\n                else {\n                    uVar22 = *arg1;\n                }\n            }\n            else if (uVar22 == 10) {\n                uVar22 = *arg1;\n            }\n            else if (uVar22 == 0xb) {\n                uVar22 = *arg1;\n            }\n            else {\n                uVar22 = *arg1;\n            }\n            *(*0x20 + -0x1e8) = 0x488f9a;\n            fcn.00485760(0, uVar22);\n            return;\n        }\n        if (uVar22 == 0) {\n            if (arg3 == NULL) {\n                uVar22 = in_RAX[1];\n                *(*0x20 + -0xe8) = uVar22 + 0x17;\n                uVar9 = *in_RAX;\n                uVar6 = in_RAX[2];\n                if (in_RAX[2] < uVar22 + 0x17) {\n                    *(*0x20 + -0xf0) = uVar22;\n                    *(*0x20 + -0x1e8) = 0x488dba;\n                    uVar9 = fcn.00445200(uVar22);\n                    uVar6 = uVar22;\n                }\n                *(*0x20 + -0xf0) = uVar6;\n                *(*0x20 + -0x88) = uVar9;\n                uVar7 = 0x17;\n                *(*0x20 + -0x1e8) = 0x488ded;\n                fcn.0045d3c0(0x17);\n                puVar15 = *(*0x20 + 8);\n                puVar15[1] = *(*0x20 + -0xe8);\n                uVar4 = *(*0x20 + -0xf0);\n                puVar15[2] = uVar4;\n                if (*0x593680 == 0) {\n                    *puVar15 = *(*0x20 + -0x88);\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x488e33;\n                fcn.0045c5e0(uVar7, uVar4, arg3, in_R9);\n                return;\n            }\n            if (uVar17 != 0x76) {\n                *(*0x20 + -0x1e8) = 0x488ed1;\n                fcn.00485160(arg1, unaff_RDI, arg3);\n                return;\n            }\n            uVar9 = in_RAX[1];\n            uVar22 = uVar9 + 5;\n            uVar6 = *in_RAX;\n            uVar8 = uVar9;\n            uVar18 = in_RAX[2];\n            if (in_RAX[2] < uVar22) {\n                *(*0x20 + -0xe8) = uVar22;\n                *(*0x20 + -0xf0) = uVar9;\n                *(*0x20 + -0x1e8) = 0x488e7a;\n                uVar6 = fcn.00445200(uVar9);\n                uVar22 = *(*0x20 + -0xe8);\n                in_RAX = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0xf0);\n                uVar18 = uVar9;\n            }\n            *(uVar6 + uVar8) = 0x6c696e3c;\n            *(uVar6 + 4 + uVar8) = 0x3e;\n            in_RAX[1] = uVar22;\n            in_RAX[2] = uVar18;\n            if (*0x593680 == 0) {\n                *in_RAX = uVar6;\n                return;\n            }\n            *(*0x20 + -0x1e8) = 0x488ec5;\n            fcn.0045c720(uVar8, unaff_RDI, arg3, in_R9);\n            return;\n        }\n        *(*0x20 + -0x1e8) = 0x488ee5;\n        fcn.00479160(unaff_RDI);\n        *(*0x20 + -0x1e8) = 0x488efb;\n        fcn.00485660(*(*0x20 + 0x28));\n        return;\n    }\n    if (uVar22 < 0x16) {\n        if (0x13 < uVar22) {\n            if (uVar22 == 0x14) {\n                *(*0x20 + -0x1e8) = 0x48832a;\n                fcn.0047a560(unaff_RDI);\n                if (unaff_RDI != NULL) {\n                    *(*0x20 + -0x1e8) = 0x48857d;\n                    fcn.00487e20(arg1, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n                    return;\n                }\n                piVar24 = *(*0x20 + 8);\n                if (*(piVar24 + 10) == '\\0') {\n                    uVar9 = piVar24[1];\n                    uVar22 = uVar9 + 5;\n                    iVar13 = *piVar24;\n                    uVar6 = uVar9;\n                    uVar8 = piVar24[2];\n                    if (piVar24[2] < uVar22) {\n                        *(*0x20 + -0xe8) = uVar9;\n                        *(*0x20 + -0xf0) = uVar22;\n                        *(*0x20 + -0x1e8) = 0x48837a;\n                        iVar13 = fcn.00445200(uVar9);\n                        uVar22 = *(*0x20 + -0xf0);\n                        piVar24 = *(*0x20 + 8);\n                        uVar6 = *(*0x20 + -0xe8);\n                        uVar8 = uVar9;\n                    }\n                    *(iVar13 + uVar6) = 0x6c696e3c;\n                    *(iVar13 + 4 + uVar6) = 0x3e;\n                    piVar24[1] = uVar22;\n                    piVar24[2] = uVar8;\n                    if (*0x593680 == 0) {\n                        *piVar24 = iVar13;\n                        return;\n                    }\n                    *(*0x20 + -0x1e8) = 0x4883c5;\n                    fcn.0045c720(uVar6, uVar8, arg3, in_R9);\n                    return;\n                }\n                iVar13 = *(*0x20 + -0x78);\n                *(*0x20 + -0x1e8) = 0x4883e7;\n                iVar11 = fcn.0047b8a0(*(*0x20 + -0xe0));\n                pcVar26 = *(iVar11 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x4883f3;\n                uVar7 = (*pcVar26)();\n                *(*0x20 + -0x158) = iVar13;\n                puVar15 = *(*0x20 + 8);\n                uVar22 = puVar15[1];\n                *(*0x20 + -0xe8) = uVar22;\n                *(*0x20 + -0xf0) = uVar22 + iVar13;\n                uVar4 = *puVar15;\n                uVar9 = puVar15[2];\n                if (puVar15[2] < uVar22 + iVar13) {\n                    *(*0x20 + -0xc0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x48843e;\n                    uVar4 = fcn.00445200(uVar22);\n                    iVar13 = *(*0x20 + -0x158);\n                    uVar9 = uVar22;\n                }\n                *(*0x20 + -0xf8) = uVar9;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x488485;\n                fcn.0045d3c0(iVar13);\n                uVar9 = *(*0x20 + -0xf0);\n                piVar24 = *(*0x20 + 8);\n                piVar24[1] = uVar9;\n                uVar6 = *(*0x20 + -0xf8);\n                piVar24[2] = uVar6;\n                iVar11 = *(*0x20 + -0xe8);\n                uVar22 = iVar11 + *(*0x20 + -0x158) + 5;\n                if (*0x593680 == 0) {\n                    iVar14 = *(*0x20 + -0x88);\n                    *piVar24 = iVar14;\n                }\n                else {\n                    iVar14 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x4884e5;\n                    fcn.0045c720(uVar9, uVar6, iVar11, iVar13);\n                }\n                uVar8 = uVar9;\n                if (uVar6 < uVar22) {\n                    *(*0x20 + -0xe8) = uVar22;\n                    *(*0x20 + -0x1e8) = 0x488505;\n                    iVar14 = fcn.00445200(uVar9);\n                    uVar22 = *(*0x20 + -0xe8);\n                    piVar24 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0xf0);\n                    uVar6 = uVar9;\n                }\n                *(iVar14 + uVar8) = 0x6c696e28;\n                *(iVar14 + 4 + uVar8) = 0x29;\n                piVar24[1] = uVar22;\n                piVar24[2] = uVar6;\n                if (*0x593680 == 0) {\n                    *piVar24 = iVar14;\n                    return;\n                }\n                *(*0x20 + -0x1e8) = 0x48854f;\n                fcn.0045c720(uVar8, uVar6, iVar11, iVar13);\n                return;\n            }\n            if (*(in_RAX + 10) == '\\0') {\n                arg1_00 = in_RAX[1];\n                ppuVar16 = arg1_00 + 4;\n                in_R9 = *in_RAX;\n                ppuVar28 = in_RAX[2];\n                ppuVar30 = arg1_00;\n                if (in_RAX[2] < ppuVar16) {\n                    *(*0x20 + -0xe8) = arg1_00;\n                    *(*0x20 + -0xf0) = ppuVar16;\n                    *(*0x20 + -0x1e8) = 0x48802e;\n                    in_R9 = fcn.00445200(arg1_00);\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    ppuVar30 = *(*0x20 + -0xe8);\n                    ppuVar16 = *(*0x20 + -0xf0);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x78);\n                    ppuVar28 = arg1_00;\n                }\n                *(in_R9 + ppuVar30) = 0x5b70616d;\n                in_RAX[1] = ppuVar16;\n                in_RAX[2] = ppuVar28;\n                if (*0x593680 == 0) {\n                    *in_RAX = in_R9;\n                    in_R9 = ppuVar30;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x48809f;\n                    fcn.0045c780(arg1, unaff_RDI, arg3);\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4880b3;\n                iVar13 = fcn.0047b8a0(unaff_RDI);\n                pcVar26 = *(iVar13 + 0xf8);\n                *(*0x20 + -0x1e8) = 0x4880bf;\n                uVar7 = (*pcVar26)();\n                *(*0x20 + -0x148) = arg1;\n                puVar15 = *(*0x20 + 8);\n                puVar19 = puVar15[1];\n                *(*0x20 + -0xe8) = puVar19;\n                *(*0x20 + -0xf0) = puVar19 + arg1;\n                uVar4 = *puVar15;\n                puVar29 = puVar15[2];\n                if (puVar15[2] < puVar19 + arg1) {\n                    *(*0x20 + -0xb0) = uVar7;\n                    *(*0x20 + -0x1e8) = 0x48810a;\n                    uVar4 = fcn.00445200(puVar19);\n                    arg1 = *(*0x20 + -0x148);\n                    puVar29 = puVar19;\n                }\n                *(*0x20 + -0xf8) = puVar29;\n                *(*0x20 + -0x88) = uVar4;\n                *(*0x20 + -0x1e8) = 0x488150;\n                fcn.0045d3c0(arg1);\n                uVar22 = *(*0x20 + -0xf0);\n                puVar20 = *(*0x20 + 8);\n                puVar20[1] = uVar22;\n                uVar9 = *(*0x20 + -0xf8);\n                puVar20[2] = uVar9;\n                if (*0x593680 == 0) {\n                    uVar6 = *(*0x20 + -0x88);\n                    *puVar20 = uVar6;\n                }\n                else {\n                    uVar6 = *(*0x20 + -0x88);\n                    *(*0x20 + -0x1e8) = 0x488193;\n                    fcn.0045c720(uVar22, uVar9, uVar4, arg1);\n                }\n                unaff_RDI = *(*0x20 + -0xe0);\n                if ((unaff_RDI >> 9 & 1) == 0) {\n                    if ((unaff_RDI >> 7 & 1) == 0) {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = in_R9;\n                    }\n                    else {\n                        in_R9 = *(*0x20 + -0x78);\n                        ppuVar16 = *in_R9;\n                    }\n                    if (ppuVar16 == NULL) {\n                        iVar13 = *(*0x20 + -0x148);\n                        iVar11 = *(*0x20 + -0xe8);\n                        uVar8 = iVar11 + iVar13 + 5;\n                        uVar18 = uVar22;\n                        if (uVar9 < uVar8) {\n                            *(*0x20 + -0xe8) = uVar8;\n                            *(*0x20 + -0x1e8) = 0x4882c5;\n                            uVar6 = fcn.00445200(uVar22);\n                            uVar8 = *(*0x20 + -0xe8);\n                            puVar20 = *(*0x20 + 8);\n                            uVar18 = *(*0x20 + -0xf0);\n                            uVar9 = uVar22;\n                        }\n                        *(uVar6 + uVar18) = 0x6c696e28;\n                        *(uVar6 + 4 + uVar18) = 0x29;\n                        puVar20[1] = uVar8;\n                        puVar20[2] = uVar9;\n                        if (*0x593680 == 0) {\n                            *puVar20 = uVar6;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x48830c;\n                            fcn.0045c720(uVar18, uVar9, iVar13, iVar11);\n                        }\n                        return;\n                    }\n                }\n                else {\n                    in_R9 = *(*0x20 + -0x78);\n                }\n                uVar8 = uVar6;\n                if (uVar9 < *(*0x20 + -0xe8) + *(*0x20 + -0x148) + 1U) {\n                    *(*0x20 + -0x1e8) = 0x488205;\n                    uVar8 = fcn.00445200(uVar22);\n                    puVar20 = *(*0x20 + 8);\n                    puVar20[2] = uVar22;\n                    if (*0x593680 == 0) {\n                        *puVar20 = uVar8;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x488225;\n                        uVar8 = fcn.0045c5e0(uVar22, uVar9, unaff_RDI, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    in_R9 = *(*0x20 + -0x78);\n                    uVar22 = uVar6;\n                }\n                puVar20[1] = uVar22 + 1;\n                *(uVar8 + uVar22) = 0x7b;\n                arg3 = unaff_RDI;\n            }\n            *(*0x20 + -0x1e8) = 0x488265;\n            puVar5 = fcn.0047cf20(unaff_RDI);\n            ppuVar16 = puVar5[1];\n            puVar15 = *puVar5;\n            if (ppuVar16 != NULL) {\n                *(*0x20 + -0xe8) = ppuVar16;\n                *(*0x20 + -0xd0) = puVar5;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x98) = puVar15;\n                    *(*0x20 + -0x118) = iVar13;\n                    uVar4 = puVar15[1];\n                    uVar7 = puVar15[2];\n                    uVar1 = *puVar15;\n                    if (0 < iVar13) {\n                        *(*0x20 + -0xe0) = uVar7;\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -0x80) = uVar1;\n                        piVar24 = *(*0x20 + 8);\n                        if (*(piVar24 + 10) == '\\0') {\n                            iVar13 = piVar24[1];\n                            iVar11 = *piVar24;\n                            iVar14 = iVar11;\n                            if (piVar24[2] < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x489a91;\n                                iVar14 = fcn.00445200(iVar13);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar13;\n                                if (*0x593680 == 0) {\n                                    *piVar24 = iVar14;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x489ab0;\n                                    iVar14 = fcn.0045c5e0(iVar13, ppuVar16, arg3, uVar4);\n                                }\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar24 = *(*0x20 + 8);\n                                iVar13 = iVar11;\n                            }\n                            piVar24[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar9 = piVar24[1];\n                            uVar22 = uVar9 + 2;\n                            iVar11 = *piVar24;\n                            uVar6 = uVar9;\n                            uVar8 = piVar24[2];\n                            if (piVar24[2] < uVar22) {\n                                *(*0x20 + -0xf0) = uVar9;\n                                *(*0x20 + -0xf8) = uVar22;\n                                *(*0x20 + -0x1e8) = 0x4899d1;\n                                iVar11 = fcn.00445200(uVar9);\n                                uVar7 = *(*0x20 + -0xe0);\n                                uVar4 = *(*0x20 + -0x78);\n                                piVar24 = *(*0x20 + 8);\n                                uVar6 = *(*0x20 + -0xf0);\n                                uVar22 = *(*0x20 + -0xf8);\n                                iVar13 = *(*0x20 + -0x118);\n                                uVar8 = uVar9;\n                            }\n                            *(iVar11 + uVar6) = 0x202c;\n                            piVar24[1] = uVar22;\n                            piVar24[2] = uVar8;\n                            if (*0x593680 == 0) {\n                                *piVar24 = iVar11;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x489a58;\n                                fcn.0045c700(iVar13, iVar11, uVar7, uVar4);\n                            }\n                        }\n                    }\n                    iVar13 = *(*0x20 + 0x30);\n                    arg3 = iVar13 + 1;\n                    *(*0x20 + -0xf0) = arg3;\n                    *(*0x20 + -0x1e8) = 0x489b34;\n                    fcn.00487e20(uVar4, iVar13, arg3);\n                    ppuVar16 = *(*0x20 + 8);\n                    puVar20 = ppuVar16[1];\n                    unaff_RSI = puVar20 + 1;\n                    puVar2 = *ppuVar16;\n                    unaff_RBX = puVar2;\n                    unaff_RDI = ppuVar16[2];\n                    if (ppuVar16[2] < unaff_RSI) {\n                        *(*0x20 + -0x1e8) = 0x489b5d;\n                        unaff_RBX = fcn.00445200(puVar20);\n                        ppuVar16 = *(*0x20 + 8);\n                        ppuVar16[2] = puVar20;\n                        unaff_RDI = ppuVar16;\n                        if (*0x593680 == 0) {\n                            *ppuVar16 = unaff_RBX;\n                            puVar20 = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x1e8) = 0x489b7c;\n                            unaff_RBX = fcn.0045c5e0(puVar20, iVar13, arg3, uVar4);\n                            puVar20 = puVar2;\n                        }\n                    }\n                    ppuVar16[1] = puVar20 + 1;\n                    *(unaff_RBX + puVar20) = 0x3a;\n                    in_R9 = *(*(*0x20 + -0xd0) + 0x18);\n                    arg1 = *(*(*0x20 + -0xd0) + 0x20);\n                    puVar20 = *(*0x20 + -0x118);\n                    if (arg1 <= puVar20) break;\n                    puVar2 = in_R9[puVar20 * 3 + 1];\n                    arg3 = *(*0x20 + -0xf0);\n                    *(*0x20 + -0x1e8) = 0x489bd4;\n                    fcn.00487e20(puVar2, puVar20 * 3, arg3);\n                    iVar13 = *(*0x20 + -0x118) + 1;\n                    ppuVar16 = *(*0x20 + -0xe8);\n                    in_R9 = ppuVar16;\n                    if (ppuVar16 <= iVar13) goto code_r0x00489865;\n                    puVar15 = *(*0x20 + -0x98) + 0x18;\n                }\n                *(*0x20 + -0x1e8) = 0x489bfd;\n                in_RAX = fcn.0045ca80(arg1);\n                goto code_r0x00489bfe;\n            }\ncode_r0x00489865:\n            piVar24 = *(*0x20 + 8);\n            if (*(piVar24 + 10) != '\\0') {\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (piVar24[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x489894;\n                    iVar14 = fcn.00445200(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x593680 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4898b3;\n                        iVar14 = fcn.0045c5e0(iVar13, piVar24, arg3, in_R9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            iVar13 = piVar24[1];\n            iVar11 = *piVar24;\n            piVar23 = piVar24;\n            iVar14 = iVar11;\n            if (piVar24[2] < iVar13 + 1U) {\n                *(*0x20 + -0x1e8) = 0x4898f1;\n                iVar14 = fcn.00445200(iVar13);\n                piVar23 = *(*0x20 + 8);\n                piVar23[2] = iVar13;\n                if (*0x593680 == 0) {\n                    *piVar23 = iVar14;\n                    iVar13 = iVar11;\n                }\n                else {\n                    *(*0x20 + -0x1e8) = 0x489910;\n                    iVar14 = fcn.0045c5e0(iVar13, piVar24, arg3, in_R9);\n                    iVar13 = iVar11;\n                }\n            }\n            piVar23[1] = iVar13 + 1;\n            *(iVar14 + iVar13) = 0x5d;\n            return;\n        }\n        if (uVar22 != 0x11) goto code_r0x00488d0f;\n    }\n    else {\n        if (0x17 < uVar22) {\n            if (uVar22 == 0x18) {\n                *(*0x20 + -0x1e8) = 0x488d38;\n                fcn.0047b7c0(unaff_RDI);\n                *(*0x20 + -0x1e8) = 0x488d52;\n                fcn.00485c60(arg1, unaff_RDI);\n                return;\n            }\n            if (uVar22 == 0x19) {\n                if (*(in_RAX + 10) != '\\0') {\n                    *(*0x20 + -0x1e8) = 0x488b74;\n                    iVar13 = fcn.0047b8a0(unaff_RDI);\n                    pcVar26 = *(iVar13 + 0xf8);\n                    *(*0x20 + -0x1e8) = 0x488b82;\n                    uVar7 = (*pcVar26)();\n                    puVar15 = *(*0x20 + 8);\n                    puVar19 = puVar15[1];\n                    *(*0x20 + -0xe8) = arg1 + puVar19;\n                    uVar4 = *puVar15;\n                    puVar29 = puVar15[2];\n                    if (puVar15[2] < arg1 + puVar19) {\n                        *(*0x20 + -0xf0) = puVar19;\n                        *(*0x20 + -0x150) = arg1;\n                        *(*0x20 + -0xb8) = uVar7;\n                        *(*0x20 + -0x1e8) = 0x488bcd;\n                        uVar4 = fcn.00445200(puVar19);\n                        arg1 = *(*0x20 + -0x150);\n                        puVar29 = puVar19;\n                    }\n                    *(*0x20 + -0x88) = uVar4;\n                    *(*0x20 + -0xf0) = puVar29;\n                    *(*0x20 + -0x1e8) = 0x488c0d;\n                    fcn.0045d3c0(arg1);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0xe8);\n                    in_RAX[2] = *(*0x20 + -0xf0);\n                    if (*0x593680 == 0) {\n                        *in_RAX = *(*0x20 + -0x88);\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x488c50;\n                        fcn.0045c700(arg1, *(*0x20 + -0x88), uVar4, in_R9);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                }\n                uVar9 = in_RAX[1];\n                uVar22 = *in_RAX;\n                uVar6 = uVar22;\n                if (in_RAX[2] < uVar9 + 1) {\n                    *(*0x20 + -0x1e8) = 0x488ca5;\n                    uVar8 = uVar9;\n                    uVar6 = fcn.00445200(uVar9);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = uVar9;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x488cc5;\n                        uVar6 = fcn.0045c5e0(uVar9, unaff_RDI, arg3, uVar8);\n                    }\n                    unaff_RDI = *(*0x20 + -0xe0);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar9 = uVar22;\n                }\n                in_RAX[1] = uVar9 + 1;\n                *(uVar6 + uVar9) = 0x7b;\n                iVar13 = 0;\n                while( true ) {\n                    *(*0x20 + -0x120) = iVar13;\n                    *(*0x20 + -0x1e8) = 0x4890a8;\n                    iVar13 = fcn.0047b280(unaff_RDI);\n                    if (iVar13 <= *(*0x20 + -0x120)) break;\n                    if (*(*0x20 + -0x120) < 1) {\n                        piVar24 = *(*0x20 + 8);\n                    }\n                    else {\n                        piVar23 = *(*0x20 + 8);\n                        piVar24 = piVar23;\n                        if (*(piVar23 + 10) == '\\0') {\n                            iVar13 = piVar23[1];\n                            iVar11 = *piVar23;\n                            uVar22 = piVar23[2];\n                            iVar14 = iVar11;\n                            if (uVar22 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x489185;\n                                iVar14 = fcn.00445200(iVar13);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar13;\n                                if (*0x593680 == 0) {\n                                    *piVar24 = iVar14;\n                                    iVar13 = iVar11;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x4891a5;\n                                    iVar14 = fcn.0045c5e0(iVar13, piVar23, uVar22, uVar9);\n                                    iVar13 = iVar11;\n                                }\n                            }\n                            piVar24[1] = iVar13 + 1;\n                            *(iVar14 + iVar13) = 0x20;\n                        }\n                        else {\n                            uVar6 = piVar23[1];\n                            uVar22 = uVar6 + 2;\n                            iVar13 = *piVar23;\n                            uVar8 = uVar6;\n                            uVar18 = piVar23[2];\n                            if (piVar23[2] < uVar22) {\n                                *(*0x20 + -0xe8) = uVar6;\n                                *(*0x20 + -0xf0) = uVar22;\n                                *(*0x20 + -0x1e8) = 0x48910f;\n                                iVar13 = fcn.00445200(uVar6);\n                                piVar24 = *(*0x20 + 8);\n                                uVar22 = *(*0x20 + -0xf0);\n                                uVar8 = *(*0x20 + -0xe8);\n                                uVar18 = uVar6;\n                            }\n                            *(iVar13 + uVar8) = 0x202c;\n                            piVar24[1] = uVar22;\n                            piVar24[2] = uVar18;\n                            if (*0x593680 == 0) {\n                                *piVar24 = iVar13;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x48915c;\n                                fcn.0045c720(uVar8, piVar24, uVar18, uVar9);\n                            }\n                        }\n                    }\n                    if ((*(piVar24 + 0x4f) != '\\0') || (*(piVar24 + 10) != '\\0')) {\n                        *(*0x20 + -0x1e8) = 0x4891f9;\n                        iVar13 = fcn.0047b8a0(*(*0x20 + -0xe0));\n                        pcVar26 = *(iVar13 + 0x50);\n                        *(*0x20 + -0x1e8) = 0x48920a;\n                        (*pcVar26)();\n                        *(*0x20 + -0x70) = *(*0x20 + -0x1e0);\n                        *(*0x20 + -0x1f0) = unaff_RBP;\n                        *(*0x20 + -0x1e8) = 0x489232;\n                        fcn.0045d08c();\n                        unaff_RBP = *(*0x20 + -0x1f0);\n                        iVar13 = *(*0x20 + -0x68);\n                        if (iVar13 != 0) {\n                            *(*0x20 + -0x140) = iVar13;\n                            puVar20 = *(*0x20 + 8);\n                            uVar22 = puVar20[1];\n                            *(*0x20 + -0xe8) = uVar22;\n                            *(*0x20 + -0xf0) = iVar13 + uVar22;\n                            uVar9 = *puVar20;\n                            uVar6 = puVar20[2];\n                            if (puVar20[2] < iVar13 + uVar22) {\n                                *(*0x20 + -0xa8) = *(*0x20 + -0x70);\n                                *(*0x20 + -0x1e8) = 0x48929f;\n                                uVar9 = fcn.00445200(uVar22);\n                                iVar13 = *(*0x20 + -0x140);\n                                uVar6 = uVar22;\n                            }\n                            *(*0x20 + -0x88) = uVar9;\n                            *(*0x20 + -0xf8) = uVar6;\n                            *(*0x20 + -0x1e8) = 0x4892d6;\n                            fcn.0045d3c0(iVar13);\n                            iVar11 = *(*0x20 + -0xf0);\n                            piVar24 = *(*0x20 + 8);\n                            piVar24[1] = iVar11;\n                            uVar22 = *(*0x20 + -0xf8);\n                            piVar24[2] = uVar22;\n                            iVar14 = *(*0x20 + -0x140);\n                            iVar13 = iVar14 + *(*0x20 + -0xe8);\n                            if (*0x593680 == 0) {\n                                iVar12 = *(*0x20 + -0x88);\n                                *piVar24 = iVar12;\n                            }\n                            else {\n                                iVar12 = *(*0x20 + -0x88);\n                                *(*0x20 + -0x1e8) = 0x489331;\n                                fcn.0045c720(iVar11, uVar22, iVar14, uVar9);\n                            }\n                            iVar10 = iVar12;\n                            if (uVar22 < iVar13 + 1U) {\n                                *(*0x20 + -0x1e8) = 0x489345;\n                                iVar10 = fcn.00445200(iVar11);\n                                piVar24 = *(*0x20 + 8);\n                                piVar24[2] = iVar11;\n                                if (*0x593680 == 0) {\n                                    *piVar24 = iVar10;\n                                    iVar11 = iVar12;\n                                }\n                                else {\n                                    *(*0x20 + -0x1e8) = 0x489365;\n                                    iVar10 = fcn.0045c5e0(iVar11, uVar22, iVar14, uVar9);\n                                    iVar11 = iVar12;\n                                }\n                            }\n                            piVar24[1] = iVar11 + 1;\n                            *(iVar10 + iVar11) = 0x3a;\n                        }\n                    }\n                    uVar4 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x1e8) = 0x489045;\n                    fcn.00484e00(*(*0x20 + -0xe0));\n                    arg3 = *(*0x20 + 0x30) + 1;\n                    *(*0x20 + -0x1e8) = 0x48906e;\n                    fcn.00487e20(uVar4, *(*0x20 + 0x30), arg3);\n                    iVar13 = *(*0x20 + -0x120) + 1;\n                    unaff_RDI = *(*0x20 + -0xe0);\n                }\n                piVar24 = *(*0x20 + 8);\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (piVar24[2] < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x4893b6;\n                    iVar14 = fcn.00445200(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x593680 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x4893d5;\n                        iVar14 = fcn.0045c5e0(iVar13, piVar24, arg3, uVar9);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x7d;\n                return;\n            }\n            if (uVar22 != 0x1a) {\n                *(*0x20 + -0x1e8) = 0x488d25;\n                fcn.00484ea0(arg1, unaff_RDI, arg3, in_R9);\n                return;\n            }\ncode_r0x00488d0f:\n            *(*0x20 + -0x1e8) = 0x488d17;\n            fcn.00486460(arg1);\n            return;\n        }\n        if (uVar22 == 0x16) {\n            if (arg3 == NULL) {\n                *(*0x20 + -0x1e8) = 0x4889d1;\n                iVar13 = fcn.0047b360(unaff_RDI);\n                bVar31 = iVar13 != 0;\n                arg1 = *(*0x20 + -0x78);\n                arg3 = *(*0x20 + 0x30);\n                unaff_RDI = *(*0x20 + -0xe0);\n            }\n            else {\n                bVar31 = false;\n            }\n            if (bVar31) {\n                *(*0x20 + -0x1e8) = 0x488a1f;\n                uVar4 = fcn.0047a560(unaff_RDI);\n                uVar17 = unaff_RDI & 0x1f;\n                if (uVar17 < 0x16) {\n                    if ((uVar17 == 0x11) || (uVar17 == 0x15)) {\ncode_r0x00488a51:\n                        piVar24 = *(*0x20 + 8);\n                        iVar13 = piVar24[1];\n                        iVar11 = *piVar24;\n                        piVar23 = piVar24;\n                        iVar14 = iVar11;\n                        if (piVar24[2] < iVar13 + 1U) {\n                            *(*0x20 + -0x78) = arg1;\n                            *(*0x20 + -0x80) = uVar4;\n                            *(*0x20 + -0xe0) = unaff_RDI;\n                            *(*0x20 + -0x1e8) = 0x488a97;\n                            iVar12 = iVar11;\n                            iVar14 = fcn.00445200(iVar13);\n                            piVar23 = *(*0x20 + 8);\n                            piVar23[2] = iVar13;\n                            if (*0x593680 == 0) {\n                                *piVar23 = iVar14;\n                            }\n                            else {\n                                *(*0x20 + -0x1e8) = 0x488ab6;\n                                iVar14 = fcn.0045c5e0(iVar13, piVar24, arg3, iVar12);\n                            }\n                            arg1 = *(*0x20 + -0x78);\n                            iVar13 = iVar11;\n                        }\n                        piVar23[1] = iVar13 + 1;\n                        *(iVar14 + iVar13) = 0x26;\n                        *(*0x20 + -0x1e8) = 0x488b05;\n                        fcn.00487e20(arg1, piVar23, *(*0x20 + 0x30) + 1);\n                        return;\n                    }\n                }\n                else if ((uVar17 == 0x17) || (uVar17 == 0x19)) goto code_r0x00488a51;\n                arg1 = *(*0x20 + -0x78);\n            }\n            goto code_r0x00488d0f;\n        }\n    }\n    *(*0x20 + -0x100) = uVar22;\n    if (uVar17 < 0x72) {\n        if ((uVar17 != 0x58) && (uVar17 != 0x71)) goto code_r0x00488703;\n    }\n    else if ((uVar17 != 0x73) && (uVar17 != 0x78)) goto code_r0x00488703;\n    *(*0x20 + -0x1e8) = 0x4885d7;\n    iVar13 = fcn.0047b8a0(unaff_RDI);\n    *(*0x20 + -0x168) = iVar13;\n    *(*0x20 + -0xd8) = arg1;\n    pcVar26 = *(iVar13 + 0x48);\n    *(*0x20 + -0x1e8) = 0x4885ed;\n    iVar13 = (*pcVar26)();\n    pcVar26 = *(iVar13 + 0x98);\n    *(*0x20 + -0x1e8) = 0x4885f9;\n    iVar13 = (*pcVar26)();\n    if (iVar13 == 8) {\n        if (*(*0x20 + -0x100) == 0x17) {\n            iVar11 = *(*0x20 + -0x78);\n            iVar13 = *(*0x20 + -0xe0);\n            *(*0x20 + -0x1e8) = 0x4886c7;\n            iVar14 = fcn.00479240(iVar13);\n        }\n        else {\n            uVar4 = *(*0x20 + -0xe0);\n            if ((uVar4 >> 8 & 1) == 0) {\n                *(*0x20 + -0x1e8) = 0x48863f;\n                uVar4 = fcn.0047abc0(uVar4);\n                *(*0x20 + -0x110) = uVar4;\n                *(*0x20 + -0x1e8) = 0x488659;\n                iVar14 = fcn.00445120(uVar4);\n                *(*0x20 + -0x90) = iVar14;\n                for (iVar12 = 0; iVar13 = *(*0x20 + -0x110),  iVar11 = iVar13,  iVar12 < iVar13; iVar12 = iVar12 + 1) {\n                    *(*0x20 + -0x128) = iVar12;\n                    puVar15 = *(*0x20 + -0x78);\n                    uVar4 = *(*0x20 + -0xe0);\n                    *(*0x20 + -0x1e8) = 0x4897b1;\n                    fcn.0047a880(uVar4);\n                    uVar22 = uVar4 & 0x1f;\n                    *(*0x20 + -0x100) = uVar22;\n                    if (uVar22 < 10) {\n                        if (uVar22 == 7) {\n                            uVar21 = *puVar15;\n                        }\n                        else if (uVar22 == 8) {\n                            uVar21 = *puVar15;\n                        }\n                        else {\n                            if (uVar22 != 9) {\ncode_r0x00489827:\n                                *(*0x20 + -0x1e8) = 0x489833;\n                                puVar15 = fcn.0040cd00();\n                                puVar15[1] = 0x12;\n                                *puVar15 = 0x4a93ad;\n                                puVar15[2] = *(*0x20 + -0x100);\n                                *(*0x20 + -0x1e8) = 0x489865;\n                                fcn.00432ec0();\n                                goto code_r0x00489865;\n                            }\n                            uVar21 = *puVar15;\n                        }\n                    }\n                    else if (uVar22 == 10) {\n                        uVar21 = *puVar15;\n                    }\n                    else if (uVar22 == 0xb) {\n                        uVar21 = *puVar15;\n                    }\n                    else {\n                        if (uVar22 != 0xc) goto code_r0x00489827;\n                        uVar21 = *puVar15;\n                    }\n                    iVar12 = *(*0x20 + -0x128);\n                    iVar14 = *(*0x20 + -0x90);\n                    *(iVar14 + iVar12) = uVar21;\n                }\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x48867d;\n                fcn.0047abc0(uVar4);\n                iVar11 = *(*0x20 + -0x78);\n                iVar13 = *(*0x20 + -0xe0);\n                *(*0x20 + -0x1e8) = 0x48869f;\n                fcn.0047b520(iVar13);\n                *(*0x20 + -0x1e8) = 0x4886a5;\n                iVar14 = fcn.00479240(iVar13);\n            }\n        }\n        *(*0x20 + -0x108) = iVar13;\n        *(*0x20 + -0x110) = iVar11;\n        *(*0x20 + -0xa0) = iVar14;\n        pcVar26 = *(*(*0x20 + -0x168) + 0xf8);\n        *(*0x20 + -0x1e8) = 0x48971a;\n        uVar4 = (*pcVar26)();\n        *(*0x20 + -0x1e8) = 0x48974c;\n        fcn.00485d60(*(*0x20 + -0x110), pcVar26, uVar4, iVar11);\n        return;\n    }\n    in_RAX = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x78);\n    unaff_RDI = *(*0x20 + -0xe0);\n    arg3 = *(*0x20 + 0x30);\ncode_r0x00488703:\n    if (*(in_RAX + 10) == '\\0') {\n        uVar22 = in_RAX[1];\n        uVar9 = *in_RAX;\n        uVar6 = uVar9;\n        if (in_RAX[2] < uVar22 + 1) {\n            *(*0x20 + -0x1e8) = 0x48873a;\n            uVar8 = uVar22;\n            uVar6 = fcn.00445200(uVar22);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar22;\n            if (*0x593680 == 0) {\n                *in_RAX = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x488759;\n                uVar6 = fcn.0045c5e0(uVar22, unaff_RDI, arg3, uVar8);\n            }\n            unaff_RDI = *(*0x20 + -0xe0);\n            arg3 = *(*0x20 + 0x30);\n            uVar22 = uVar9;\n        }\n        in_RAX[1] = uVar22 + 1;\n        *(uVar6 + uVar22) = 0x5b;\n        iVar13 = 0;\n        while( true ) {\n            *(*0x20 + -0x138) = iVar13;\n            *(*0x20 + -0x1e8) = 0x489608;\n            iVar13 = fcn.0047abc0(unaff_RDI);\n            if (iVar13 <= *(*0x20 + -0x138)) break;\n            if (0 < *(*0x20 + -0x138)) {\n                piVar24 = *(*0x20 + 8);\n                iVar13 = piVar24[1];\n                iVar11 = *piVar24;\n                uVar9 = piVar24[2];\n                piVar23 = piVar24;\n                iVar14 = iVar11;\n                if (uVar9 < iVar13 + 1U) {\n                    *(*0x20 + -0x1e8) = 0x489649;\n                    iVar14 = fcn.00445200(iVar13);\n                    piVar23 = *(*0x20 + 8);\n                    piVar23[2] = iVar13;\n                    if (*0x593680 == 0) {\n                        *piVar23 = iVar14;\n                        iVar13 = iVar11;\n                    }\n                    else {\n                        *(*0x20 + -0x1e8) = 0x489668;\n                        iVar14 = fcn.0045c5e0(iVar13, piVar24, uVar9, uVar22);\n                        iVar13 = iVar11;\n                    }\n                }\n                piVar23[1] = iVar13 + 1;\n                *(iVar14 + iVar13) = 0x20;\n            }\n            uVar4 = *(*0x20 + -0x78);\n            *(*0x20 + -0x1e8) = 0x4895a5;\n            fcn.0047a880(*(*0x20 + -0xe0));\n            arg3 = *(*0x20 + 0x30) + 1;\n            *(*0x20 + -0x1e8) = 0x4895ce;\n            fcn.00487e20(uVar4, *(*0x20 + 0x30), arg3);\n            iVar13 = *(*0x20 + -0x138) + 1;\n            unaff_RDI = *(*0x20 + -0xe0);\n        }\n        piVar24 = *(*0x20 + 8);\n        iVar13 = piVar24[1];\n        iVar11 = *piVar24;\n        piVar23 = piVar24;\n        iVar14 = iVar11;\n        if (piVar24[2] < iVar13 + 1U) {\n            *(*0x20 + -0x1e8) = 0x4896b3;\n            iVar14 = fcn.00445200(iVar13);\n            piVar23 = *(*0x20 + 8);\n            piVar23[2] = iVar13;\n            if (*0x593680 == 0) {\n                *piVar23 = iVar14;\n                iVar13 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x4896d2;\n                iVar14 = fcn.0045c5e0(iVar13, piVar24, arg3, uVar22);\n                iVar13 = iVar11;\n            }\n        }\n        piVar23[1] = iVar13 + 1;\n        *(iVar14 + iVar13) = 0x5d;\n        return;\n    }\n    *(*0x20 + -0x1e8) = 0x4887ab;\n    iVar13 = fcn.0047b8a0(unaff_RDI);\n    pcVar26 = *(iVar13 + 0xf8);\n    *(*0x20 + -0x1e8) = 0x4887b7;\n    uVar7 = (*pcVar26)();\n    *(*0x20 + -0x160) = arg1;\n    puVar15 = *(*0x20 + 8);\n    puVar19 = puVar15[1];\n    *(*0x20 + -0xe8) = puVar19;\n    *(*0x20 + -0xf0) = arg1 + puVar19;\n    uVar4 = *puVar15;\n    puVar29 = puVar15[2];\n    if (puVar15[2] < arg1 + puVar19) {\n        *(*0x20 + -200) = uVar7;\n        *(*0x20 + -0x1e8) = 0x488805;\n        uVar4 = fcn.00445200(puVar19);\n        arg1 = *(*0x20 + -0x160);\n        puVar29 = puVar19;\n    }\n    *(*0x20 + -0xf8) = puVar29;\n    *(*0x20 + -0x88) = uVar4;\n    *(*0x20 + -0x1e8) = 0x48884b;\n    fcn.0045d3c0(arg1);\n    uVar22 = *(*0x20 + -0xf0);\n    puVar20 = *(*0x20 + 8);\n    puVar20[1] = uVar22;\n    uVar9 = *(*0x20 + -0xf8);\n    puVar20[2] = uVar9;\n    if (*0x593680 == 0) {\n        uVar6 = *(*0x20 + -0x88);\n        *puVar20 = uVar6;\n    }\n    else {\n        uVar6 = *(*0x20 + -0x88);\n        *(*0x20 + -0x1e8) = 0x48888f;\n        fcn.0045c720(uVar22, uVar9, uVar4, arg1);\n    }\n    if (*(*0x20 + -0x100) == 0x17) {\n        piVar24 = *(*0x20 + -0x78);\n        if (*piVar24 == 0) {\n            iVar13 = *(*0x20 + -0xe8);\n            iVar11 = *(*0x20 + -0x160);\n            uVar8 = iVar11 + iVar13 + 5;\n            uVar18 = uVar22;\n            if (uVar9 < uVar8) {\n                *(*0x20 + -0xe8) = uVar8;\n                *(*0x20 + -0x1e8) = 0x4888f1;\n                uVar6 = fcn.00445200(uVar22);\n                uVar8 = *(*0x20 + -0xe8);\n                puVar20 = *(*0x20 + 8);\n                uVar18 = *(*0x20 + -0xf0);\n                uVar9 = uVar22;\n            }\n            *(uVar6 + uVar18) = 0x6c696e28;\n            *(uVar6 + 4 + uVar18) = 0x29;\n            puVar20[1] = uVar8;\n            puVar20[2] = uVar9;\n            if (*0x593680 == 0) {\n                *puVar20 = uVar6;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x488936;\n                fcn.0045c720(uVar18, uVar9, iVar13, iVar11);\n            }\n            return;\n        }\n    }\n    else {\n        piVar24 = *(*0x20 + -0x78);\n    }\n    iVar13 = *(*0x20 + -0xe8);\n    uVar8 = uVar6;\n    if (uVar9 < *(*0x20 + -0x160) + iVar13 + 1U) {\n        *(*0x20 + -0x1e8) = 0x48897a;\n        uVar8 = fcn.00445200(uVar22);\n        puVar20 = *(*0x20 + 8);\n        puVar20[2] = uVar22;\n        if (*0x593680 == 0) {\n            *puVar20 = uVar8;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x488999;\n            uVar8 = fcn.0045c5e0(uVar22, uVar9, piVar24, iVar13);\n        }\n        piVar24 = *(*0x20 + -0x78);\n        uVar22 = uVar6;\n    }\n    puVar20[1] = uVar22 + 1;\n    *(uVar8 + uVar22) = 0x7b;\n    iVar11 = 0;\n    while( true ) {\n        *(*0x20 + -0x130) = iVar11;\n        *(*0x20 + -0x1e8) = 0x489469;\n        iVar11 = fcn.0047abc0(*(*0x20 + -0xe0));\n        if (iVar11 <= *(*0x20 + -0x130)) break;\n        if (0 < *(*0x20 + -0x130)) {\n            piVar24 = *(*0x20 + 8);\n            uVar9 = piVar24[1];\n            uVar22 = uVar9 + 2;\n            iVar11 = *piVar24;\n            uVar6 = uVar9;\n            uVar8 = piVar24[2];\n            if (piVar24[2] < uVar22) {\n                *(*0x20 + -0xe8) = uVar9;\n                *(*0x20 + -0xf0) = uVar22;\n                *(*0x20 + -0x1e8) = 0x4894c5;\n                iVar11 = fcn.00445200(uVar9);\n                piVar24 = *(*0x20 + 8);\n                uVar22 = *(*0x20 + -0xf0);\n                uVar6 = *(*0x20 + -0xe8);\n                uVar8 = uVar9;\n            }\n            *(iVar11 + uVar6) = 0x202c;\n            piVar24[1] = uVar22;\n            piVar24[2] = uVar8;\n            if (*0x593680 == 0) {\n                *piVar24 = iVar11;\n            }\n            else {\n                *(*0x20 + -0x1e8) = 0x489515;\n                fcn.0045c720(uVar6, piVar24, uVar8, iVar13);\n            }\n        }\n        uVar4 = *(*0x20 + -0x78);\n        *(*0x20 + -0x1e8) = 0x48940c;\n        fcn.0047a880(*(*0x20 + -0xe0));\n        *(*0x20 + -0x1e8) = 0x489435;\n        fcn.00487e20(uVar4, *(*0x20 + 0x30), *(*0x20 + 0x30) + 1);\n        iVar11 = *(*0x20 + -0x130) + 1;\n        piVar24 = *(*0x20 + -0x78);\n    }\n    piVar23 = *(*0x20 + 8);\n    iVar11 = piVar23[1];\n    iVar14 = *piVar23;\n    piVar25 = piVar23;\n    iVar12 = iVar14;\n    if (piVar23[2] < iVar11 + 1U) {\n        *(*0x20 + -0x1e8) = 0x489546;\n        iVar12 = fcn.00445200(iVar11);\n        piVar25 = *(*0x20 + 8);\n        piVar25[2] = iVar11;\n        if (*0x593680 == 0) {\n            *piVar25 = iVar12;\n            iVar11 = iVar14;\n        }\n        else {\n            *(*0x20 + -0x1e8) = 0x489567;\n            iVar12 = fcn.0045c5e0(iVar11, piVar23, piVar24, iVar13);\n            iVar11 = iVar14;\n        }\n    }\n    piVar25[1] = iVar11 + 1;\n    *(iVar12 + iVar11) = 0x7d;\n    return;\n}\n",
        "token_count": 15855
    },
    "00489c60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00489c60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t *noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX <= unaff_RDI) {\n                return 0;\n            }\n            if (unaff_RDI < unaff_RBX) {\n                iVar1 = *(in_RAX + unaff_RDI * 0x10);\n                noname_2 = *(in_RAX + 8 + unaff_RDI * 0x10);\n                if (iVar1 == 0x495500) {\n                    uVar4 = *noname_2;\n                }\n                else {\n                    uVar4 = 0;\n                    if (iVar1 == 0) {\n                        noname_2 = NULL;\n                        uVar5 = 0;\n                    }\n                    else {\n                        puVar2 = *0x53f5f0;\n                        if ((*0x53f5e0 != '\\0') && (*0x53f5e8 = iVar1,  puVar2 = noname_2,  *0x593680 != 0)) {\n                            *(*0x20 + -0x30) = 0x489cfa;\n                            fcn.0045c760(arg1, unaff_RDI, noname_2, 0x495500);\n                            puVar2 = *0x53f5f0;\n                        }\n                        *0x53f5f0 = puVar2;\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x10) = noname_2;\n                        if (*(*0x20 + -0x18) == 0) {\n                            uVar5 = 0;\n                            noname_2 = NULL;\n                        }\n                        else {\n                            uVar5 = *(*(*0x20 + -0x18) + 0x17) & 0x1f;\n                        }\n                    }\n                    uVar6 = uVar5;\n                    if (uVar6 - 2 < 5) {\n                        if (uVar6 < 4) {\n                            if (uVar6 == 2) {\n                                uVar4 = *noname_2;\n                            }\n                            else {\n                                uVar4 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 4) {\n                            uVar4 = *noname_2;\n                        }\n                        else if (uVar6 == 5) {\n                            uVar4 = *noname_2;\n                        }\n                        else {\n                            uVar4 = *noname_2;\n                        }\n                    }\n                    else if (uVar6 - 7 < 6) {\n                        if (uVar6 < 10) {\n                            if (uVar6 == 7) {\n                                uVar6 = *noname_2;\n                            }\n                            else if (uVar6 == 8) {\n                                uVar6 = *noname_2;\n                            }\n                            else {\n                                uVar6 = *noname_2;\n                            }\n                        }\n                        else if (uVar6 == 10) {\n                            uVar6 = *noname_2;\n                        }\n                        else if (uVar6 == 0xb) {\n                            uVar6 = *noname_2;\n                        }\n                        else {\n                            uVar6 = *noname_2;\n                        }\n                        if (-1 < uVar6) {\n                            uVar4 = uVar6;\n                        }\n                    }\n                }\n                if (2000000 < uVar4 + 1000000) {\n                    uVar4 = 0;\n                }\n                return uVar4;\n            }\n            *(*0x20 + -0x30) = 0x489e34;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x489e4e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1193
    },
    "00489e80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00489e80(void)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 3) {\n        return 0;\n    }\n    iVar3 = 1;\n    while( true ) {\n        if (unaff_RBX <= iVar3) {\n            return 0;\n        }\n        if (*(in_RAX + iVar3) == ']') break;\n        iVar3 = iVar3 + 1;\n    }\n    if (iVar3 < 2) {\n        bVar2 = false;\n        iVar5 = 0;\n        iVar4 = iVar3;\n    }\n    else {\n        bVar2 = false;\n        iVar5 = 0;\n        for (iVar4 = 1; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            uVar1 = *(in_RAX + iVar4);\n            if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n            if (2000000 < iVar5 + 1000000U) {\n                bVar2 = false;\n                iVar5 = 0;\n                iVar4 = iVar3;\n                break;\n            }\n            iVar5 = (uVar1 - 0x30 & 0xff) + iVar5 * 10;\n            bVar2 = true;\n        }\n    }\n    if ((bVar2) && (iVar4 == iVar3)) {\n        return iVar5 + -1;\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "0048c9a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0048c9a0(uint64_t arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t in_R10;\n    uint64_t in_R11;\n    uint32_t unaff_R12D;\n    int64_t unaff_R14;\n    \ncode_r0x0048c9a0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x24) = 0;\n        uVar3 = 0;\n        do {\n            if (3 < uVar3) {\n                uVar3 = 4;\n                unaff_RSI = 0;\n                unaff_RDI = 0;\n                goto code_r0x0048cb05;\n            }\n            if (arg3 == in_R10) {\n                if (uVar3 == 0) {\n                    return in_R10;\n                }\n                if ((uVar3 != 1) && (*(in_RAX + 0x140) == -1)) {\n                    unaff_RSI = 0;\n                    unaff_RDI = 0;\n                    goto code_r0x0048cb05;\n                }\n                *(*0x20 + -0x10) = in_R10;\n                *(*0x20 + -0x40) = 0x48cac8;\n                fcn.0040a5e0();\n                return *(*0x20 + -0x10);\n            }\n            if (arg3 <= in_R10) goto code_r0x0048cd77;\n            uVar1 = *(in_R10 + unaff_RSI);\n            arg4 = uVar1;\n            in_R11 = in_R10 + 1;\n            uVar2 = *(in_RAX + 0x40 + arg4);\n            unaff_R12D = uVar2;\n            if (uVar2 == 0xff) {\n                if ((uVar1 != 10) && (uVar1 != 0xd)) {\n                    *(*0x20 + -0x10) = in_R11;\n                    unaff_R12D = *(in_RAX + 0x140);\n                    if (unaff_R12D != uVar1) {\n                        *(*0x20 + -0x40) = 0x48ca89;\n                        fcn.0040a5e0();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (uVar3 < 2) {\n                        *(*0x20 + -0x40) = 0x48ca65;\n                        fcn.0040a5e0();\n                        return *(*0x20 + -0x10);\n                    }\n                    arg1_00 = arg1;\n                    if (uVar3 == 2) goto code_r0x0048ccd3;\n                    goto code_r0x0048cc53;\n                }\n                uVar3 = uVar3 - 1;\n            }\n            else {\n                if (3 < uVar3) goto code_r0x0048cd6a;\n                *(*0x20 + (uVar3 - 0x24)) = uVar2;\n            }\n            uVar3 = uVar3 + 1;\n            in_R10 = in_R11;\n        } while( true );\n    }\n    goto code_r0x0048cd86;\ncode_r0x0048cc53:\n    arg1_00 = arg3;\n    if (arg1_00 <= in_R11) {\ncode_r0x0048ccb7:\n        unaff_RSI = 0;\n        unaff_RDI = 0;\n        in_R10 = in_R11;\ncode_r0x0048cb05:\n        *(*0x20 + -0x10) = in_R10;\n        uVar5 = *(*0x20 + -0x24) << 0x12 | *(*0x20 + -0x23) << 0xc;\n        uVar1 = *(*0x20 + -0x22);\n        arg1_00 = *(*0x20 + -0x21) | uVar1 << 6 | uVar5;\n        *(*0x20 + -0x22) = arg1_00;\n        *(*0x20 + -0x23) = (uVar1 << 6 | uVar5) >> 8;\n        arg4 = uVar5 >> 0x10;\n        *(*0x20 + -0x24) = uVar5 >> 0x10;\n        if (uVar3 == 2) {\ncode_r0x0048cbd2:\n            arg1_00 = *(*0x20 + -0x24);\n            if (arg1 != 0) {\n                *unaff_RBX = *(*0x20 + -0x24);\n                if ((*(in_RAX + 0x144) != '\\0') && ((*(*0x20 + -0x23) != '\\0' || (*(*0x20 + -0x22) != '\\0')))) {\n                    *(*0x20 + -0x40) = 0x48cc05;\n                    fcn.0040a5e0();\n                    return *(*0x20 + -0x10);\n                }\n                return in_R10;\n            }\n            *(*0x20 + -0x40) = 0x48cc3c;\n            fcn.0045ca80(0);\ncode_r0x0048cc3c:\n            *(*0x20 + -0x40) = 0x48cc46;\n            fcn.0045ca80(arg1);\n        }\n        else {\n            if (uVar3 == 3) {\ncode_r0x0048cb83:\n                arg1_00 = *(*0x20 + -0x23);\n                if (1 < arg1) {\n                    unaff_RBX[1] = *(*0x20 + -0x23);\n                    if ((*(in_RAX + 0x144) != '\\0') && (*(*0x20 + -0x22) != '\\0')) {\n                        *(*0x20 + -0x40) = 0x48cbb2;\n                        fcn.0040a5e0();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x23) = 0;\n                    goto code_r0x0048cbd2;\n                }\n                goto code_r0x0048cc3c;\n            }\n            if (uVar3 != 4) {\n                return in_R10;\n            }\n            if (2 < arg1) {\n                unaff_RBX[2] = arg1_00;\n                *(*0x20 + -0x22) = 0;\n                goto code_r0x0048cb83;\n            }\n        }\n        *(*0x20 + -0x40) = 0x48cc50;\n        in_RAX = fcn.0045ca80(arg1);\ncode_r0x0048cc50:\n        in_R11 = in_R11 + 1;\n        arg3 = arg1_00;\n        goto code_r0x0048cc53;\n    }\n    if (in_R11 < arg1_00) {\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n        if ((uVar1 != 10) && (uVar1 != 0xd)) {\n            if (arg1_00 <= in_R11) goto code_r0x0048ccb7;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = uVar3;\n            *(*0x20 + -0x18) = in_R11;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = 0x48cc92;\n            unaff_RDI = fcn.0040a5e0();\n            arg1 = *(*0x20 + 0x18);\n            uVar3 = *(*0x20 + -0x20);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_R11 = *(*0x20 + -0x18);\n            unaff_RSI = 0x4c9d58;\n            in_RAX = *(*0x20 + 8);\n            in_R10 = in_R11;\n            goto code_r0x0048cb05;\n        }\n        goto code_r0x0048cc50;\n    }\n    *(*0x20 + -0x40) = 0x48ccd0;\n    arg3 = arg1_00;\n    in_RAX = fcn.0045ca80(arg1_00);\n    do {\n        in_R11 = in_R11 + 1;\ncode_r0x0048ccd3:\n        if (arg3 <= in_R11) break;\n        if (arg3 <= in_R11) goto code_r0x0048cd5f;\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n    } while ((uVar1 == 10) || (uVar1 == 0xd));\n    *(*0x20 + -0x10) = in_R11;\n    if (arg3 == in_R11) {\n        *(*0x20 + -0x40) = 0x48cd39;\n        fcn.0040a5e0();\n        return *(*0x20 + -0x10);\n    }\n    if (arg3 <= in_R11) goto code_r0x0048cd54;\n    arg4 = *(unaff_RSI + in_R11);\n    if (unaff_R12D != *(unaff_RSI + in_R11)) {\n        *(*0x20 + -0x40) = 0x48cd16;\n        fcn.0040a5e0();\n        return *(*0x20 + -0x10);\n    }\n    in_R11 = in_R11 + 1;\n    arg1 = arg1_00;\n    goto code_r0x0048cc53;\ncode_r0x0048cd54:\n    *(*0x20 + -0x40) = 0x48cd5f;\n    fcn.0045ca80(arg3);\ncode_r0x0048cd5f:\n    *(*0x20 + -0x40) = 0x48cd6a;\n    fcn.0045ca80(arg3);\ncode_r0x0048cd6a:\n    *(*0x20 + -0x40) = 0x48cd77;\n    fcn.0045ca80(4);\ncode_r0x0048cd77:\n    arg1 = arg3;\n    *(*0x20 + -0x40) = 0x48cd85;\n    arg3 = arg1;\n    in_RAX = fcn.0045ca80(arg1);\ncode_r0x0048cd86:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + 0x30) = arg3;\n    *(puVar4 + 0x38) = arg4;\n    *(puVar4 + 0x40) = in_R10;\n    *(puVar4 + -8) = 0x48cdb3;\n    fcn.0045a3a0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    arg3 = *(puVar4 + 0x30);\n    arg4 = *(puVar4 + 0x38);\n    in_R10 = *(puVar4 + 0x40);\n    *0x20 = puVar4;\n    goto code_r0x0048c9a0;\n}\n",
        "token_count": 2897
    },
    "004017c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401b5b)\n\nvoid fcn.004017c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong arg2_00;\n    int64_t unaff_R14;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040cd00();\n    iVar1 = fcn.0045cf3c();\n    if (*0x593680 == 0) {\n        *(iVar1 + 0x10) = 0x593b61;\n        *(iVar1 + 0x30) = 0x593b60;\n        *(iVar1 + 0x50) = 0x593b62;\n        *(iVar1 + 0x70) = 0x593b63;\n        *(iVar1 + 0x90) = 0x593b64;\n        *(iVar1 + 0xb0) = 0x593b65;\n        *(iVar1 + 0xd0) = 0x593b66;\n        *(iVar1 + 0xf0) = 0x593b67;\n        *(iVar1 + 0x110) = 0x593b69;\n        *(iVar1 + 0x130) = 0x593b6a;\n        *(iVar1 + 0x150) = 0x593b6b;\n        *(iVar1 + 0x170) = 0x593b6c;\n        *(iVar1 + 400) = 0x593b6e;\n        *(iVar1 + 0x1b0) = 0x593b6f;\n        uVar2 = 0x593b6d;\n        *(iVar1 + 0x1d0) = 0x593b6d;\n    }\n    else {\n        fcn.0045c6e0(0x593b61);\n        fcn.0045c6e0(0x593b60);\n        fcn.0045c6e0(0x593b62);\n        fcn.0045c6e0(0x593b63);\n        fcn.0045c6e0(0x593b64);\n        fcn.0045c6e0(0x593b65);\n        fcn.0045c6e0(0x593b66);\n        fcn.0045c6e0(0x593b67);\n        fcn.0045c6e0(0x593b69);\n        fcn.0045c6e0(0x593b6a);\n        fcn.0045c6e0(0x593b6b);\n        fcn.0045c6e0(0x593b6c);\n        fcn.0045c6e0(0x593b6e);\n        fcn.0045c6e0(0x593b6f);\n        uVar2 = 0x593b6d;\n        iVar1 = fcn.0045c6e0();\n    }\n    *0x53f5a8 = 0xf;\n    *0x53f5b0 = 0xf;\n    if (*0x593680 != 0) {\n        fcn.0045c5e0(uVar2, param_2, param_3, param_4);\n        iVar1 = *0x53f5a0;\n    }\n    *0x53f5a0 = iVar1;\n    fcn.00401ca0(uVar2, param_2);\n    if (uStack40 != 0) {\n        fcn.00401ca0(uVar2, param_2);\n        *0x59341c = uStack40;\n        fcn.00401ca0(uVar2, param_2);\n        *0x593b6c = (uStack32 & 1) != 0;\n        *0x593b69 = (uStack32 >> 1 & 1) != 0;\n        *0x593b6d = (uStack32 >> 9 & 1) != 0;\n        *0x593b6e = (uStack32 >> 0x13 & 1) != 0;\n        *0x593b6f = (uStack32 >> 0x14 & 1) != 0;\n        *0x593b6a = (uStack32 >> 0x17 & 1) != 0;\n        *0x593b60 = (uStack32 >> 0x19 & 1) != 0;\n        *0x593b68 = (uStack32 >> 0x1b & 1) != 0;\n        uVar2 = uVar2 & 0xffffffffffffff00 | *0x593b68;\n        uVar3 = (param_2 & 0xffffff00 | (uStack32 >> 0xc & 1) != 0) & uVar2;\n        arg2 = uVar3;\n        *0x593b67 = uVar3;\n        if ((uStack32 >> 0x1b & 1) != 0) {\n            fcn.00401cc0(uVar2, arg2);\n        }\n        uVar2 = 0;\n        *0x593b62 = 0;\n        if (6 < uStack40) {\n            fcn.00401ca0(0, arg2);\n            *0x593b64 = (uStack36 >> 3 & 1) != 0;\n            uVar2 = uVar2 & 0xffffffffffffff00 | (uStack36 >> 5 & 1) != 0;\n            arg2_00 = 0;\n            *0x593b63 = 0;\n            *0x593b65 = (uStack36 >> 8 & 1) != 0;\n            *0x593b66 = (uStack36 >> 9 & 1) != 0;\n            *0x593b61 = (uStack36 >> 0x13 & 1) != 0;\n            fcn.00401ca0(uVar2, 0);\n            if (uStack40 < 0x80000001) {\n                return;\n            }\n            fcn.00401ca0(uVar2, arg2_00);\n            *0x593b6b = (uStack28 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x593b62 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 1547
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00402480(uchar (*arg1) [32])\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uchar (*in_RAX) [32];\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uchar auVar6 [16];\n    uint8_t uVar7;\n    uchar auVar8 [32];\n    uchar auVar9 [32];\n    uchar auVar10 [32];\n    uchar auVar11 [32];\n    \n    if (in_RAX != arg1) {\n        uVar5 = unaff_RDI;\n        if (unaff_RBX < unaff_RDI) {\n            uVar5 = unaff_RBX;\n        }\n        if (uVar5 < 8) {\n            if (uVar5 * -8 != 0) {\n                uVar7 = uVar5 * -8;\n                if (in_RAX < 0xf9) {\n                    uVar3 = **in_RAX;\n                }\n                else {\n                    uVar3 = *(in_RAX[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar3 = uVar3 << (uVar7 & 0x3f);\n                if (arg1 < 0xf9) {\n                    uVar5 = **arg1;\n                }\n                else {\n                    uVar5 = *(arg1[-1] + uVar5 + 0x18) >> (uVar7 & 0x3f);\n                }\n                uVar5 = uVar5 << (uVar7 & 0x3f);\n                uVar3 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                        (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                        (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n                uVar5 = (uVar5 >> 0x38 | (uVar5 & 0xff000000000000) >> 0x28 | (uVar5 & 0xff0000000000) >> 0x18 |\n                         (uVar5 & 0xff00000000) >> 8 | (uVar5 & 0xff000000) << 8 | (uVar5 & 0xff0000) << 0x18 |\n                         (uVar5 & 0xff00) << 0x28 | uVar5 << 0x38) ^ uVar3;\n                if (uVar5 != 0) {\n                    iVar1 = 0x3f;\n                    if (uVar5 != 0) {\n                        for (; uVar5 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                        }\n                    }\n                    return (uVar3 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n                }\n            }\n            goto code_r0x0040236b;\n        }\n        if (0x3f < uVar5) {\n            if (*0x593b63 == '\\x01') {\n                do {\n                    auVar8 = vmovdqu_avx(*in_RAX);\n                    auVar9 = vmovdqu_avx(*arg1);\n                    auVar10 = vmovdqu_avx(in_RAX[1]);\n                    auVar11 = vmovdqu_avx(arg1[1]);\n                    auVar8 = vpcmpeqb_avx2(auVar9, auVar8);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x004022bd;\n                    }\n                    auVar8 = vpcmpeqb_avx2(auVar11, auVar10);\n                    uVar2 = (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                             (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                             (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                             (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                             (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                             (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                             (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                             (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                             (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                             (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                             (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                             (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                             (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                             (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) ^ 0xffffffff;\n                    uVar3 = uVar2;\n                    if (uVar2 != 0) {\n                        vzeroupper_avx();\n                        goto code_r0x004022ab;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x3f < uVar5);\n                vzeroupper_avx();\n            }\n            else {\n                do {\n                    uVar7 = -((*arg1)[0xf] == (*in_RAX)[0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == (*in_RAX)[0xe]), \n                                                        CONCAT113(-((*arg1)[0xd] == (*in_RAX)[0xd]), \n                                                                  CONCAT112(-((*arg1)[0xc] == (*in_RAX)[0xc]), \n                                                                            CONCAT111(-((*arg1)[0xb] == (*in_RAX)[0xb])\n                                                                                      , CONCAT110(-((*arg1)[10] ==\n                                                                                                   (*in_RAX)[10]), \n                                                                                                  CONCAT19(-((*arg1)[9]\n                                                                                                            == (*in_RAX)\n                                                            [9]), CONCAT18(-((*arg1)[8] == (*in_RAX)[8]), \n                                                                           CONCAT17(-((*arg1)[7] == (*in_RAX)[7]), \n                                                                                    CONCAT16(-((*arg1)[6] ==\n                                                                                              (*in_RAX)[6]), \n                                                                                             CONCAT15(-((*arg1)[5] ==\n                                                                                                       (*in_RAX)[5]), \n                                                                                                      CONCAT14(-((*arg1)\n                                                            [4] == (*in_RAX)[4]), \n                                                            CONCAT13(-((*arg1)[3] == (*in_RAX)[3]), \n                                                                     CONCAT12(-((*arg1)[2] == (*in_RAX)[2]), \n                                                                              CONCAT11(-((*arg1)[1] == (*in_RAX)[1]), \n                                                                                       -((*arg1)[0] == (*in_RAX)[0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x004022bd;\n                    uVar7 = -((*arg1)[0x1f] == (*in_RAX)[0x1f]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0x1e] == (*in_RAX)[0x1e]), \n                                                        CONCAT113(-((*arg1)[0x1d] == (*in_RAX)[0x1d]), \n                                                                  CONCAT112(-((*arg1)[0x1c] == (*in_RAX)[0x1c]), \n                                                                            CONCAT111(-((*arg1)[0x1b] == (*in_RAX)[0x1b]\n                                                                                       ), CONCAT110(-((*arg1)[0x1a] ==\n                                                                                                     (*in_RAX)[0x1a]), \n                                                                                                    CONCAT19(-((*arg1)[\n                                                            0x19] == (*in_RAX)[0x19]), \n                                                            CONCAT18(-((*arg1)[0x18] == (*in_RAX)[0x18]), \n                                                                     CONCAT17(-((*arg1)[0x17] == (*in_RAX)[0x17]), \n                                                                              CONCAT16(-((*arg1)[0x16] ==\n                                                                                        (*in_RAX)[0x16]), \n                                                                                       CONCAT15(-((*arg1)[0x15] ==\n                                                                                                 (*in_RAX)[0x15]), \n                                                                                                CONCAT14(-((*arg1)[0x14]\n                                                                                                          == (*in_RAX)[\n                                                            0x14]), CONCAT13(-((*arg1)[0x13] == (*in_RAX)[0x13]), \n                                                                             CONCAT12(-((*arg1)[0x12] == (*in_RAX)[0x12]\n                                                                                       ), CONCAT11(-((*arg1)[0x11] ==\n                                                                                                    (*in_RAX)[0x11]), \n                                                                                                   -((*arg1)[0x10] ==\n                                                                                                    (*in_RAX)[0x10])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = *in_RAX + 0x10;\n                        arg1 = *arg1 + 0x10;\n                        goto code_r0x004022bd;\n                    }\n                    uVar7 = -(arg1[1][0xf] == in_RAX[1][0xf]);\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0xe] == in_RAX[1][0xe]), \n                                                        CONCAT113(-(arg1[1][0xd] == in_RAX[1][0xd]), \n                                                                  CONCAT112(-(arg1[1][0xc] == in_RAX[1][0xc]), \n                                                                            CONCAT111(-(arg1[1][0xb] == in_RAX[1][0xb])\n                                                                                      , CONCAT110(-(arg1[1][10] ==\n                                                                                                   in_RAX[1][10]), \n                                                                                                  CONCAT19(-(arg1[1][9]\n                                                                                                            == in_RAX[1]\n                                                            [9]), CONCAT18(-(arg1[1][8] == in_RAX[1][8]), \n                                                                           CONCAT17(-(arg1[1][7] == in_RAX[1][7]), \n                                                                                    CONCAT16(-(arg1[1][6] ==\n                                                                                              in_RAX[1][6]), \n                                                                                             CONCAT15(-(arg1[1][5] ==\n                                                                                                       in_RAX[1][5]), \n                                                                                                      CONCAT14(-(arg1[1]\n                                                            [4] == in_RAX[1][4]), \n                                                            CONCAT13(-(arg1[1][3] == in_RAX[1][3]), \n                                                                     CONCAT12(-(arg1[1][2] == in_RAX[1][2]), \n                                                                              CONCAT11(-(arg1[1][1] == in_RAX[1][1]), \n                                                                                       -(arg1[1][0] == in_RAX[1][0])))))\n                                                            )))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) goto code_r0x004022ab;\n                    auVar6 = *(in_RAX[1] + 0x10);\n                    uVar7 = -(arg1[1][0x1f] == SUB161(auVar6 >> 0x78, 0));\n                    auVar6 = CONCAT115(uVar7, CONCAT114(-(arg1[1][0x1e] == SUB161(auVar6 >> 0x70, 0)), \n                                                        CONCAT113(-(arg1[1][0x1d] == SUB161(auVar6 >> 0x68, 0)), \n                                                                  CONCAT112(-(arg1[1][0x1c] == SUB161(auVar6 >> 0x60, 0)\n                                                                             ), CONCAT111(-(arg1[1][0x1b] ==\n                                                                                           SUB161(auVar6 >> 0x58, 0)), \n                                                                                          CONCAT110(-(arg1[1][0x1a] ==\n                                                                                                     SUB161(auVar6 >> \n                                                            0x50, 0)), \n                                                            CONCAT19(-(arg1[1][0x19] == SUB161(auVar6 >> 0x48, 0)), \n                                                                     CONCAT18(-(arg1[1][0x18] ==\n                                                                               SUB161(auVar6 >> 0x40, 0)), \n                                                                              CONCAT17(-(arg1[1][0x17] ==\n                                                                                        SUB161(auVar6 >> 0x38, 0)), \n                                                                                       CONCAT16(-(arg1[1][0x16] ==\n                                                                                                 SUB161(auVar6 >> 0x30, \n                                                                                                        0)), \n                                                                                                CONCAT15(-(arg1[1][0x15]\n                                                                                                          == SUB161(\n                                                            auVar6 >> 0x28, 0)), \n                                                            CONCAT14(-(arg1[1][0x14] == SUB161(auVar6 >> 0x20, 0)), \n                                                                     CONCAT13(-(arg1[1][0x13] ==\n                                                                               SUB161(auVar6 >> 0x18, 0)), \n                                                                              CONCAT12(-(arg1[1][0x12] ==\n                                                                                        SUB161(auVar6 >> 0x10, 0)), \n                                                                                       CONCAT11(-(arg1[1][0x11] ==\n                                                                                                 SUB161(auVar6 >> 8, 0))\n                                                                                                , -(arg1[1][0x10] ==\n                                                                                                   SUB161(auVar6, 0)))))\n                                                                    ))))))))))));\n                    uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                             (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                             (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                             (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                             (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n                    if (uVar3 != 0) {\n                        in_RAX = in_RAX[1] + 0x10;\n                        arg1 = arg1[1] + 0x10;\n                        goto code_r0x004022bd;\n                    }\n                    in_RAX = in_RAX[2];\n                    arg1 = arg1[2];\n                    uVar5 = uVar5 - 0x40;\n                } while (0x40 < uVar5);\n            }\n        }\n        for (; 0x10 < uVar5; uVar5 = uVar5 - 0x10) {\n            auVar6 = **in_RAX;\n            uVar7 = -((*arg1)[0xf] == SUB161(auVar6 >> 0x78, 0));\n            auVar6 = CONCAT115(uVar7, CONCAT114(-((*arg1)[0xe] == SUB161(auVar6 >> 0x70, 0)), \n                                                CONCAT113(-((*arg1)[0xd] == SUB161(auVar6 >> 0x68, 0)), \n                                                          CONCAT112(-((*arg1)[0xc] == SUB161(auVar6 >> 0x60, 0)), \n                                                                    CONCAT111(-((*arg1)[0xb] ==\n                                                                               SUB161(auVar6 >> 0x58, 0)), \n                                                                              CONCAT110(-((*arg1)[10] ==\n                                                                                         SUB161(auVar6 >> 0x50, 0)), \n                                                                                        CONCAT19(-((*arg1)[9] ==\n                                                                                                  SUB161(auVar6 >> 0x48\n                                                                                                         , 0)), \n                                                                                                 CONCAT18(-((*arg1)[8]\n                                                                                                           == SUB161(\n                                                            auVar6 >> 0x40, 0)), \n                                                            CONCAT17(-((*arg1)[7] == SUB161(auVar6 >> 0x38, 0)), \n                                                                     CONCAT16(-((*arg1)[6] == SUB161(auVar6 >> 0x30, 0))\n                                                                              , CONCAT15(-((*arg1)[5] ==\n                                                                                          SUB161(auVar6 >> 0x28, 0)), \n                                                                                         CONCAT14(-((*arg1)[4] ==\n                                                                                                   SUB161(auVar6 >> 0x20\n                                                                                                          , 0)), \n                                                                                                  CONCAT13(-((*arg1)[3]\n                                                                                                            == SUB161(\n                                                            auVar6 >> 0x18, 0)), \n                                                            CONCAT12(-((*arg1)[2] == SUB161(auVar6 >> 0x10, 0)), \n                                                                     CONCAT11(-((*arg1)[1] == SUB161(auVar6 >> 8, 0)), \n                                                                              -((*arg1)[0] == SUB161(auVar6, 0))))))))))\n                                                            )))))));\n            uVar3 = (SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar6 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) ^ 0xffff;\n            if (uVar3 != 0) goto code_r0x004022bd;\n            in_RAX = *in_RAX + 0x10;\n            arg1 = *arg1 + 0x10;\n        }\n        if (8 < uVar5) {\n            uVar3 = **in_RAX;\n            uVar4 = **arg1;\n            if (uVar3 != uVar4) goto code_r0x004022f6;\n        }\n        uVar3 = *(in_RAX[-1] + uVar5 + 0x18);\n        uVar4 = *(arg1[-1] + uVar5 + 0x18);\n        if (uVar3 != uVar4) {\ncode_r0x004022f6:\n            uVar5 = uVar3 >> 0x38 | (uVar3 & 0xff000000000000) >> 0x28 | (uVar3 & 0xff0000000000) >> 0x18 |\n                    (uVar3 & 0xff00000000) >> 8 | (uVar3 & 0xff000000) << 8 | (uVar3 & 0xff0000) << 0x18 |\n                    (uVar3 & 0xff00) << 0x28 | uVar3 << 0x38;\n            uVar3 = (uVar4 >> 0x38 | (uVar4 & 0xff000000000000) >> 0x28 | (uVar4 & 0xff0000000000) >> 0x18 |\n                     (uVar4 & 0xff00000000) >> 8 | (uVar4 & 0xff000000) << 8 | (uVar4 & 0xff0000) << 0x18 |\n                     (uVar4 & 0xff00) << 0x28 | uVar4 << 0x38) ^ uVar5;\n            iVar1 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            return (uVar5 >> (iVar1 & 0x3f) & 1) * 2 + -1;\n        }\n    }\ncode_r0x0040236b:\n    return ((unaff_RBX == unaff_RDI) - 1) + (unaff_RBX != unaff_RDI && unaff_RDI <= unaff_RBX) * 2;\ncode_r0x004022ab:\n    in_RAX = in_RAX[1];\n    arg1 = arg1[1];\ncode_r0x004022bd:\n    iVar1 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return ((*arg1)[iVar1] <= (*in_RAX)[iVar1] && (*in_RAX)[iVar1] != (*arg1)[iVar1]) * 2 + -1;\n}\n",
        "token_count": 7667
    },
    "00402620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402620(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    uint64_t in_RAX;\n    uint8_t uVar3;\n    uchar auVar4 [16];\n    uint8_t uVar6;\n    uchar auVar5 [32];\n    uchar auVar7 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (*0x593b6a != '\\x01') {\n        fcn.004021c0(uStackX24);\n        return;\n    }\n    uVar3 = uStackX16;\n    if (uStackX16 < 0x10) {\n        if (uStackX16 == 0) {\n            return;\n        }\n        if ((*pauStackX8 + 0x10 & 0xff0) != 0) {\n            uVar6 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) & (1 << (uVar3 & 0x3f)) - 1U);\n            return;\n        }\n        puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n        auVar4 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                           CONCAT114(-(puVar2[0xe] == uStackX24), \n                                     CONCAT113(-(puVar2[0xd] == uStackX24), \n                                               CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                         CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                   CONCAT110(-(puVar2[10] == uStackX24), \n                                                                             CONCAT19(-(puVar2[9] == uStackX24), \n                                                                                      CONCAT18(-(puVar2[8] == uStackX24)\n                                                                                               , CONCAT17(-(puVar2[7] ==\n                                                                                                           uStackX24), \n                                                                                                          CONCAT16(-(\n                                                            puVar2[6] == uStackX24), \n                                                            CONCAT15(-(puVar2[5] == uStackX24), \n                                                                     CONCAT14(-(puVar2[4] == uStackX24), \n                                                                              CONCAT13(-(puVar2[3] == uStackX24), \n                                                                                       CONCAT12(-(puVar2[2] == uStackX24\n                                                                                                 ), CONCAT11(-(puVar2[1]\n                                                                                                              == \n                                                            uStackX24), -(*puVar2 == uStackX24))))))))))))))));\n        popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 | (SUB161(auVar4 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar4 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar4 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar4 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar4 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe |\n               (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) & (0xffff >> (0x10 - uVar3 & 0x3f)) << (0x10 - uVar3 & 0x3f));\n        return;\n    }\n    if ((uStackX16 < 0x21) || (*0x593b63 != '\\x01')) {\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 <= pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar3 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar3, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            popcnt(SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar3 >> 7) << 0xf);\n        }\n        if ((uStackX16 & 0xf) != 0) {\n            uVar3 = 0x10 - (uStackX16 & 0xf);\n            uVar6 = -((*pauVar1)[0xf] == uStackX24);\n            auVar4 = CONCAT115(uVar6, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                        CONCAT19(-((*pauVar1)[9] ==\n                                                                                                  uStackX24), \n                                                                                                 CONCAT18(-((*pauVar1)\n                                                                                                            [8] == \n                                                            uStackX24), \n                                                            CONCAT17(-((*pauVar1)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                                       CONCAT14(-((*pauVar1)[4] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT13(-((*pauVar1)[3]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT12(-((*\n                                                            pauVar1)[2] == uStackX24), \n                                                            CONCAT11(-((*pauVar1)[1] == uStackX24), \n                                                                     -((*pauVar1)[0] == uStackX24))))))))))))))));\n            popcnt((SUB161(auVar4 >> 7, 0) & 1 | (SUB161(auVar4 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar4 >> 0x17, 0) & 1) << 2 | (SUB161(auVar4 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar4 >> 0x27, 0) & 1) << 4 | (SUB161(auVar4 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar4 >> 0x37, 0) & 1) << 6 | (SUB161(auVar4 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar4 >> 0x47, 0) & 1) << 8 | (SUB161(auVar4 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar4 >> 0x57, 0) & 1) << 10 | (SUB161(auVar4 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar4 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar4 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar4 >> 0x77, 0) & 1) << 0xe | (uVar6 >> 7) << 0xf) &\n                   (0xffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        }\n        return;\n    }\n    pauVar1 = pauStackX8[-1] + uStackX16;\n    auVar5 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n    do {\n        auVar7 = vmovdqu_avx(*pauStackX8);\n        auVar7 = vpcmpeqb_avx2(auVar7, auVar5);\n        popcnt(SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 | (SUB321(auVar7 >> 0x17, 0) & 1) << 2 |\n               (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar7 >> 0x27, 0) & 1) << 4 |\n               (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar7 >> 0x37, 0) & 1) << 6 |\n               (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar7 >> 0x47, 0) & 1) << 8 |\n               (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar7 >> 0x57, 0) & 1) << 10 |\n               (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc |\n               (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe |\n               SUB321(auVar7 >> 0x7f, 0) << 0xf | (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 |\n               (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 |\n               (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 |\n               (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 |\n               SUB321(auVar7 >> 0xbf, 0) << 0x17 | (SUB321(auVar7 >> 199, 0) & 1) << 0x18 |\n               (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a |\n               (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c |\n               (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar7 >> 0xff, 0) << 0x1f);\n        pauStackX8 = pauStackX8[1];\n    } while (pauStackX8 <= pauVar1);\n    if (pauStackX8 != pauVar1) {\n        auVar7 = vmovdqu_avx(*pauVar1);\n        auVar5 = vpcmpeqb_avx2(auVar7, auVar5);\n        vzeroupper_avx();\n        uVar3 = 0x20 - (uVar3 & 0x1f);\n        popcnt((SUB321(auVar5 >> 7, 0) & 1 | (SUB321(auVar5 >> 0xf, 0) & 1) << 1 | (SUB321(auVar5 >> 0x17, 0) & 1) << 2\n                | (SUB321(auVar5 >> 0x1f, 0) & 1) << 3 | (SUB321(auVar5 >> 0x27, 0) & 1) << 4 |\n                (SUB321(auVar5 >> 0x2f, 0) & 1) << 5 | (SUB321(auVar5 >> 0x37, 0) & 1) << 6 |\n                (SUB321(auVar5 >> 0x3f, 0) & 1) << 7 | (SUB321(auVar5 >> 0x47, 0) & 1) << 8 |\n                (SUB321(auVar5 >> 0x4f, 0) & 1) << 9 | (SUB321(auVar5 >> 0x57, 0) & 1) << 10 |\n                (SUB321(auVar5 >> 0x5f, 0) & 1) << 0xb | (SUB321(auVar5 >> 0x67, 0) & 1) << 0xc |\n                (SUB321(auVar5 >> 0x6f, 0) & 1) << 0xd | (SUB321(auVar5 >> 0x77, 0) & 1) << 0xe |\n                SUB321(auVar5 >> 0x7f, 0) << 0xf | (SUB321(auVar5 >> 0x87, 0) & 1) << 0x10 |\n                (SUB321(auVar5 >> 0x8f, 0) & 1) << 0x11 | (SUB321(auVar5 >> 0x97, 0) & 1) << 0x12 |\n                (SUB321(auVar5 >> 0x9f, 0) & 1) << 0x13 | (SUB321(auVar5 >> 0xa7, 0) & 1) << 0x14 |\n                (SUB321(auVar5 >> 0xaf, 0) & 1) << 0x15 | (SUB321(auVar5 >> 0xb7, 0) & 1) << 0x16 |\n                SUB321(auVar5 >> 0xbf, 0) << 0x17 | (SUB321(auVar5 >> 199, 0) & 1) << 0x18 |\n                (SUB321(auVar5 >> 0xcf, 0) & 1) << 0x19 | (SUB321(auVar5 >> 0xd7, 0) & 1) << 0x1a |\n                (SUB321(auVar5 >> 0xdf, 0) & 1) << 0x1b | (SUB321(auVar5 >> 0xe7, 0) & 1) << 0x1c |\n                (SUB321(auVar5 >> 0xef, 0) & 1) << 0x1d | (SUB321(auVar5 >> 0xf7, 0) & 1) << 0x1e |\n               SUB321(auVar5 >> 0xff, 0) << 0x1f) & (0xffffffff >> (uVar3 & 0x3f)) << (uVar3 & 0x3f));\n        return;\n    }\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5195
    },
    "004027a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004027a0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x593b63 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4146
    },
    "00402c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402c40(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x593b63 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x00402c23;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x00402c23:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "00403040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00403040(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX == 0) {\n                return unaff_RBX;\n            }\n            iVar1 = *(*in_RAX + 8);\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x403096;\n                    iVar1 = fcn.00403280(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x4030ca;\n                iVar1 = fcn.00403280(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x4030f7;\n            fcn.00454ee0();\n            *(*0x20 + -0x38) = 0x403110;\n            fcn.00448bc0(0x18);\n            *(*0x20 + -0x38) = 0x403115;\n            unaff_RBX = fcn.0040a660();\n            *(*0x20 + -0x38) = 0x403125;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x403135;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 583
    },
    "00403160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00403160(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                return unaff_RBX;\n            }\n            if (*(iVar1 + 0x18) != 0) {\n                if ((*(iVar1 + 0x17) & 0x20) != 0) {\n                    *(*0x20 + -0x38) = 0x4031b2;\n                    iVar1 = fcn.00403280(unaff_RBX ^ 0x756ea16a56a621);\n                    return iVar1 * 0x52ef6bbb8f63bf;\n                }\n                *(*0x20 + -0x38) = 0x4031e6;\n                iVar1 = fcn.00403280(unaff_RBX ^ 0x756ea16a56a621);\n                return iVar1 * 0x52ef6bbb8f63bf;\n            }\n            *(*0x20 + -0x38) = 0x403213;\n            fcn.00454ee0();\n            *(*0x20 + -0x38) = 0x40322c;\n            fcn.00448bc0(0x18);\n            *(*0x20 + -0x38) = 0x403231;\n            unaff_RBX = fcn.0040a660();\n            *(*0x20 + -0x38) = 0x403245;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x403255;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "00403280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00403280(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    ulong *puVar7;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(in_RAX + 0x14) & 8) != 0) {\n        iVar1 = *in_RAX;\n        if (iVar1 == 4) {\n            uVar3 = fcn.0045c4e0();\n            return uVar3;\n        }\n        if (iVar1 == 8) {\n            uVar3 = fcn.0045c520();\n            return uVar3;\n        }\n        uVar3 = fcn.0045c4a0(iVar1);\n        return uVar3;\n    }\n    uVar5 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar5 < 0x11) {\n        if (0xe < uVar5) {\n            if (uVar5 == 0xf) {\n                uVar3 = fcn.00402f80();\n                return uVar3;\n            }\n            uVar3 = fcn.00402fe0();\n            return uVar3;\n        }\n        if (uVar5 == 0xd) {\n            uVar3 = fcn.00402d80();\n            return uVar3;\n        }\n        if (uVar5 == 0xe) {\n            uVar3 = fcn.00402e80();\n            return uVar3;\n        }\n    }\n    else if (uVar5 < 0x15) {\n        if (uVar5 == 0x11) {\n            for (uVar6 = 0; uVar6 <= in_RAX[8] && in_RAX[8] != uVar6; uVar6 = uVar6 + 1) {\n                arg1 = fcn.00403280(arg1);\n            }\n            return arg1;\n        }\n        if (uVar5 == 0x14) {\n            if (in_RAX[8] == 0) {\n                uVar3 = fcn.00403160();\n                return uVar3;\n            }\n            uVar3 = fcn.00403040();\n            return uVar3;\n        }\n    }\n    else {\n        if (uVar5 == 0x18) {\n            uVar3 = fcn.0045c4c0();\n            return uVar3;\n        }\n        if (uVar5 == 0x19) {\n            iVar1 = in_RAX[8];\n            puVar7 = in_RAX[7];\n            if (iVar1 == 0) {\n                return arg1;\n            }\n            iVar4 = 0;\n            while( true ) {\n                cVar2 = fcn.00455b40(arg1, *puVar7, in_R8);\n                if (cVar2 == '\\0') {\n                    arg1 = fcn.00403280(arg1);\n                }\n                iVar4 = iVar4 + 1;\n                if (iVar1 <= iVar4) break;\n                puVar7 = puVar7 + 3;\n            }\n            return arg1;\n        }\n    }\n    fcn.00454ee0();\n    uVar3 = 0x18;\n    fcn.00448bc0(0x18);\n    fcn.0040a660();\n    fcn.00432ec0();\n    return uVar3;\n}\n",
        "token_count": 842
    },
    "004039e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004039e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (((*0x593b60 != '\\0') && (*0x593b6d != '\\0')) && (*0x593b6e != '\\0')) {\n        *0x593410 = 1;\n        fcn.0042f160(0x80);\n        return;\n    }\n    fcn.0042f160(0x20);\n    *0x5936c0 = *0x5936c0 | 1;\n    *0x5936c8 = *0x5936c8 | 1;\n    *0x5936d0 = *0x5936d0 | 1;\n    *0x5936d8 = *0x5936d8 | 1;\n    return;\n}\n",
        "token_count": 234
    },
    "00403b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403b00(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x593680 != '\\0') {\n        fcn.00403aa0();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 65
    },
    "00404420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404420(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00404340();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00404340();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x593580;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.0045a260();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "004045e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004045e0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00404340();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404340();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00404740(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00404680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404680(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00404340();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00404340();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00404740(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00404e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404e00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t arg1;\n    ulong uVar5;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar4 = *puVar1;\n            if (uVar4 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar3 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n                    uVar4 = SUB168(auVar3, 0);\n                    if (((SUB168(auVar3 >> 0x40, 0) == 0) && (uVar4 < 0xffffffffffa1)) && (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 == 0) {\n                            *(*0x20 + -0x40) = 0x404f1d;\n                            arg1 = fcn.0040c300(1);\n                            if (*0x593680 == 0) {\n                                *(arg1 + 0x10) = arg1 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404f3a;\n                                arg1 = fcn.0045c6e0(arg1 + 0x10);\n                            }\n                        }\n                        else {\n                            arg2 = *(*0x20 + -0x18);\n                            if (*(arg2 + 8) == 0) {\n                                uVar5 = 1;\n                                *(*0x20 + -0x40) = 0x404e93;\n                                arg1 = fcn.0040c300();\n                                if (*0x593680 == 0) {\n                                    *(arg1 + 0x10) = arg1 + 0x60;\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = 0x404eb4;\n                                    arg1 = fcn.0045c700(uVar5, arg1 + 0x60, param_3, param_4);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x20) = uVar4;\n                                *(*0x20 + -0x40) = 0x404eca;\n                                uVar5 = fcn.0040cd00();\n                                *(*0x20 + -0x10) = uVar5;\n                                *(*0x20 + -0x40) = 0x404ee5;\n                                uVar5 = fcn.0040c300(1);\n                                if (*0x593680 == 0) {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(arg1 + 0x10) = uVar5;\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x10);\n                                    *(*0x20 + -0x40) = 0x404f07;\n                                    fcn.0045c5e0(arg1, arg2, param_3, param_4);\n                                }\n                            }\n                        }\n                        puVar2 = *(*0x20 + -0x18);\n                        *(arg1 + 0x18) = *puVar2;\n                        if (*0x593680 == 0) {\n                            *(arg1 + 0x20) = puVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x404f5e;\n                            arg1 = fcn.0045c6e0();\n                        }\n                        *(arg1 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x404f85;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x40) = 0x404f96;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x404fa7;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x404fb7;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1214
    },
    "00405020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00405020(uint64_t *param_1, uint64_t param_2, uint64_t param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    uint64_t arg4;\n    uint64_t arg4_00;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                puVar3 = 0x4;\n                *(*0x20 + -0x88) = 0x405125;\n                fcn.00435f80();\n                *(*0x20 + -0x88) = 0x405136;\n                fcn.00433640();\n                param_1 = puVar3;\ncode_r0x00405139:\n                do {\n                    piVar9 = puVar3[7];\n                    if (piVar9 == NULL) {\n                        piVar9 = NULL;\n                        break;\n                    }\n                    puVar6 = puVar3 + 7;\n                    uVar7 = piVar9[1];\n                    if (uVar7 == 0) {\n                        if (*0x593680 == 0) {\n                            *(puVar3 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar8 = 0;\n                            *(*0x20 + -0x88) = 0x4051b7;\n                            fcn.0045c760(param_1, piVar9, 0, param_4);\n                            *(*0x20 + -0x88) = 0x4051c5;\n                            puVar3 = fcn.0045c760(param_1, piVar9, uVar8, param_4);\n                        }\n                    }\n                    else if (*0x593680 == 0) {\n                        *(uVar7 + 0x10) = 0;\n                        puVar3[7] = uVar7;\n                        piVar9[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar7 + 0x10;\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x405189;\n                        fcn.0045c700(puVar6, 0, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x405191;\n                        fcn.0045c760(puVar6, uVar8, uVar7, iVar4);\n                        *(*0x20 + -0x88) = 0x40519a;\n                        puVar3 = fcn.0045c700(puVar6, uVar8, uVar7, iVar4);\n                    }\n                    if (*(piVar9 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar9;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar13 = *piVar1 == 0;\n                        if (bVar13) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar13) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = puVar3;\n                } while (param_3 != '\\0');\n                if (piVar9 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x405680;\n                    *(*0x20 + -0x10) = puVar3;\n                    *(*0x20 + -0x88) = 0x4055c5;\n                    fcn.004056c0(*(*0x20 + 0x10));\n                    return 1;\n                }\n                if (*puVar3 <= puVar3[1] && puVar3[1] != *puVar3) {\n                    *(*0x20 + -0x88) = 0x405549;\n                    fcn.004117c0(*(*0x20 + 0x10));\n                    piVar9 = *(*0x20 + 8);\n                    iVar4 = piVar9[5];\n                    piVar9[5] = iVar4 + 1;\n                    if (piVar9[1] == iVar4 + 1) {\n                        piVar9[5] = 0;\n                    }\n                    *piVar9 = *piVar9 + 1;\n                    *(*0x20 + -0x88) = 0x40557d;\n                    fcn.0040ae40();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == '\\0') {\n                    *(*0x20 + -0x88) = 0x405245;\n                    fcn.0040ae40();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x40525b;\n                puVar3 = fcn.004361a0();\n                puVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    puVar3[5] = 0xffffffffffffffff;\n                }\n                if (*0x593680 == 0) {\n                    uVar7 = *(*0x20 + 0x10);\n                    puVar3[3] = uVar7;\n                    puVar3[8] = 0;\n                    param_3 = *(*0x20 + -0x38);\n                    *puVar3 = param_3;\n                }\n                else {\n                    uVar7 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x4052ad;\n                    fcn.0045c700(iVar4, uVar7, param_3, param_4);\n                    uVar8 = 0;\n                    *(*0x20 + -0x88) = 0x4052b9;\n                    fcn.0045c760(iVar4, uVar7, 0, param_4);\n                    param_3 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x4052c6;\n                    puVar3 = fcn.0045c780(iVar4, uVar7, uVar8);\n                }\n                *(puVar3 + 0x34) = 0;\n                puVar6 = puVar3 + 10;\n                if (*0x593680 == 0) {\n                    arg4 = *(*0x20 + 8);\n                    puVar3[10] = arg4;\n                }\n                else {\n                    arg4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x4052f5;\n                    puVar3 = fcn.0045c780(iVar4, uVar7, param_3);\n                }\n                iVar11 = param_3 + 0x148;\n                iVar12 = param_3 + 0x88;\n                if (*0x593680 == 0) {\n                    *(param_3 + 0x148) = puVar3;\n                    *(param_3 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x40532e;\n                    fcn.0045c5e0(iVar4, uVar7, param_3, arg4);\n                    *(*0x20 + -0x88) = 0x40533b;\n                    puVar3 = fcn.0045c700(iVar4, 0, param_3, arg4);\n                }\n                if (*0x593680 == 0) {\n                    puVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x405369;\n                    puVar3 = fcn.0045c700(iVar4, 0, param_3, arg4);\n                }\n                *(*0x20 + -0x48) = puVar3;\n                *(*0x20 + -0x20) = puVar6;\n                *(*0x20 + -0x28) = iVar11;\n                *(*0x20 + -0x30) = iVar12;\n                arg4_00 = *(arg4 + 0x50);\n                if (arg4_00 == 0) {\n                    if (*0x593680 == 0) {\n                        puVar3[2] = 0;\n                        *(arg4 + 0x48) = puVar3;\n                        *(arg4 + 0x50) = puVar3;\n                    }\n                    else {\n                        uVar8 = 0;\n                        *(*0x20 + -0x88) = 0x405405;\n                        fcn.0045c700(iVar4, 0, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x40540e;\n                        fcn.0045c5e0(iVar4, uVar8, param_3, arg4);\n                        *(*0x20 + -0x88) = 0x405416;\n                        fcn.0045c5e0(iVar4, uVar8, param_3, arg4);\n                    }\n                }\n                else if (*0x593680 == 0) {\n                    puVar3[2] = arg4_00;\n                    *(arg4_00 + 8) = puVar3;\n                    *(arg4 + 0x50) = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4053bc;\n                    fcn.0045c780(iVar4, uVar7, param_3);\n                    *(*0x20 + -0x88) = 0x4053c5;\n                    fcn.0045c5e0(iVar4, uVar7, param_3, arg4_00);\n                    *(*0x20 + -0x88) = 0x4053cd;\n                    fcn.0045c5e0(iVar4, uVar7, param_3, arg4_00);\n                }\n                uVar2 = *(param_3 + 0xb9);\n                *(param_3 + 0xb9) = 1;\n                param_4 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x40544c;\n                fcn.00435f80();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x593680 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x40548f;\n                        iVar4 = fcn.0045c6e0();\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar7 = *(iVar4 + 0x35);\n                    if (*0x593680 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x4054bc;\n                        iVar4 = fcn.0045c700(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar7;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x4054de;\n                        fcn.0042ae40();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar7 = *(*0x20 + -0x51);\n                    }\n                    if (*0x593680 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x405507;\n                        fcn.0045c700(uVar7, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x40550c;\n                    fcn.004364a0();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x4055f3;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x88) = 0x405606;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x88) = 0x405617;\n                fcn.00433640();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar7 = in_RAX[1];\n                    if (uVar7 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar7 & 0xffffffffffffff00 | *in_RAX == uVar7;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5934c8 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4050a7;\n                    fcn.0045c460(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x4050e5;\n                fcn.0040ac20();\n                puVar3 = *(*0x20 + 8);\n                if (*(puVar3 + 0x1c) == 0) goto code_r0x00405139;\n            }\n            *(*0x20 + -0x88) = 0x405625;\n            fcn.0040ae40();\n            unaff_RBX = 0x4c9b30;\n            *(*0x20 + -0x88) = 0x405638;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x405651;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3992
    },
    "004056c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004056c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    code **unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack40;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00405800(arg1);\n        if (*0x593680 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            piVar2 = fcn.0045c6e0(0);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x593680 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045c6e0();\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.0045c460(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.004360c0(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 388
    },
    "00405900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405900(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    ulong arg3;\n    int64_t unaff_R14;\n    bool bVar5;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x405945;\n                fcn.0040ac20();\n                iVar1 = *(*0x20 + 8);\n                if (*(iVar1 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x405cc9;\n                fcn.0040ae40();\n                *(*0x20 + -0x40) = 0x405cdc;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x40) = 0x405cef;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x405cfa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n    *(iVar1 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x00405a4c:\n    piVar2 = *(iVar1 + 0x38);\n    if (piVar2 != NULL) goto code_r0x00405a59;\n    piVar2 = NULL;\n    goto code_r0x0040598d;\ncode_r0x00405a59:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x593680 == 0) {\n            *(iVar1 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405ac5;\n            fcn.0045c740(iVar1, piVar2, param_3, param_4);\n            *(*0x20 + -0x40) = 0x405ace;\n            fcn.0045c740(iVar1, piVar2, param_3, param_4);\n        }\n    }\n    else if (*0x593680 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x38) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        iVar4 = iVar4 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x405a97;\n        fcn.0045c780(iVar1, piVar2, iVar4);\n        *(*0x20 + -0x40) = 0x405a9f;\n        fcn.0045c740(iVar1, piVar2, iVar4, param_4);\n        *(*0x20 + -0x40) = 0x405aa8;\n        fcn.0045c780(iVar1, piVar2, iVar4);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = 1;\n        }\n        bVar5 = !bVar5;\n    }\n    param_3 = 1;\n    if (!bVar5) {\ncode_r0x0040598d:\n        arg3 = 1;\n        if (piVar2 != NULL) {\n            *(*0x20 + -0x18) = piVar2;\n            if (piVar2[3] != 0) {\n                *(*0x20 + -0x40) = 0x4059ae;\n                fcn.00411a60();\n                if (*0x593680 == 0) {\n                    *(*(*0x20 + -0x18) + 0x18) = 0;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x4059d6;\n                    fcn.0045c700(*(*0x20 + -0x18), 0, arg3, param_4);\n                }\n                iVar1 = *(*0x20 + 8);\n                piVar2 = *(*0x20 + -0x18);\n            }\n            if (piVar2[5] != 0) {\n                *(*0x20 + -0x40) = 0x4059f2;\n                fcn.0045c460(iVar1, piVar2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                piVar2 = *(*0x20 + -0x18);\n                piVar2[5] = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + 8);\n            }\n            param_3 = 1;\n            iVar4 = *piVar2;\n            if (*0x593680 == 0) {\n                *(iVar4 + 0x88) = piVar2;\n            }\n            else {\n                *(*0x20 + -0x40) = 0x405a47;\n                fcn.0045c700(iVar1, piVar2, 1, param_4);\n            }\n            *(piVar2 + 0x35) = 0;\n            *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = iVar4;\n            goto code_r0x00405a4c;\n        }\n        goto code_r0x00405bbf;\n    }\n    goto code_r0x00405a4c;\ncode_r0x00405bbf:\n    piVar2 = *(iVar1 + 0x48);\n    if (piVar2 != NULL) goto code_r0x00405bcc;\n    piVar2 = NULL;\n    goto code_r0x00405b2c;\ncode_r0x00405bcc:\n    iVar4 = piVar2[1];\n    if (iVar4 == 0) {\n        if (*0x593680 == 0) {\n            *(iVar1 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405c34;\n            fcn.0045c720(iVar1, piVar2, arg3, param_4);\n            *(*0x20 + -0x40) = 0x405c3d;\n            fcn.0045c720(iVar1, piVar2, arg3, param_4);\n        }\n    }\n    else if (*0x593680 == 0) {\n        *(iVar4 + 0x10) = 0;\n        *(iVar1 + 0x48) = iVar4;\n        piVar2[1] = 0;\n    }\n    else {\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x405c0a;\n        fcn.0045c780(iVar1, piVar2, arg3);\n        *(*0x20 + -0x40) = 0x405c12;\n        fcn.0045c720(iVar1, piVar2, arg3, param_4);\n        *(*0x20 + -0x40) = 0x405c1b;\n        fcn.0045c780(iVar1, piVar2, arg3);\n    }\n    if (*(piVar2 + 0x34) == '\\0') {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(*piVar2 + 0x178) == 0;\n        if (bVar5) {\n            *(*piVar2 + 0x178) = arg3;\n        }\n        bVar5 = !bVar5;\n    }\n    if (!bVar5) {\ncode_r0x00405b2c:\n        if (piVar2 == NULL) {\n            *(*0x20 + -0x40) = 0x405c79;\n            fcn.0040ae40();\n            while (iVar1 = *(*0x20 + -0x28),  iVar1 != 0) {\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x28) = *(iVar1 + 0xa0);\n                }\n                *(iVar1 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x405c90;\n                fcn.004360c0();\n            }\n            return;\n        }\n        if (*0x593680 == 0) {\n            piVar2[3] = 0;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405b53;\n            fcn.0045c720(iVar1, piVar2, arg3, param_4);\n        }\n        if (piVar2[5] != 0) {\n            *(*0x20 + -0x20) = piVar2;\n            *(*0x20 + -0x40) = 0x405b65;\n            fcn.0045c460(iVar1, piVar2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar2 = *(*0x20 + -0x20);\n            piVar2[5] = *(*0x20 + -0x38);\n            arg3 = 1;\n            iVar1 = *(*0x20 + 8);\n        }\n        iVar4 = *piVar2;\n        if (*0x593680 == 0) {\n            *(iVar4 + 0x88) = piVar2;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x405bba;\n            fcn.0045c700(iVar1, piVar2, arg3, param_4);\n        }\n        *(piVar2 + 0x35) = 0;\n        *(iVar4 + 0xa0) = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = iVar4;\n    }\n    goto code_r0x00405bbf;\n}\n",
        "token_count": 2646
    },
    "00405d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00405d60(uint64_t param_1, uint64_t param_2, uint8_t *param_3, uint64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int64_t *in_RAX;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t *arg2;\n    int64_t arg2_00;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                piVar3 = 0x3;\n                *(*0x20 + -0x90) = 0x405f06;\n                fcn.00435f80();\n                *(*0x20 + -0x90) = 0x405f17;\n                fcn.00433640();\n                piVar4 = piVar3;\n            }\n            else {\n                if (cVar5 == '\\0') {\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n                    }\n                }\n                else {\n                    uVar6 = 0;\n                }\n                if (uVar6 != '\\0') {\n                    if (*(in_RAX + 0x1c) == 0) {\n                        return 0;\n                    }\n                    if (in_RAX[1] == 0) {\n                        uVar6 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n                    }\n                    else {\n                        uVar6 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n                    }\n                    if (uVar6 != '\\0') {\n                        if (unaff_RBX != 0) {\n                            *(*0x20 + -0x90) = 0x405dee;\n                            fcn.00411a60();\n                        }\n                        return 1;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5934c8 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x405e45;\n                    fcn.0045c460(param_1, uVar6);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar7 = *(*0x20 + -0x88);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x58) = uVar7;\n                piVar4 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = piVar4;\n                *(*0x20 + -0x90) = 0x405e7f;\n                fcn.0040ac20();\n                piVar3 = *(*0x20 + 8);\n                if ((*(piVar3 + 0x1c) != 0) && (*piVar3 == 0)) {\n                    *(*0x20 + -0x90) = 0x405e9f;\n                    fcn.0040ae40();\n                    if (*(*0x20 + 0x10) != 0) {\n                        *(*0x20 + -0x90) = 0x405ebd;\n                        fcn.00411a60();\n                    }\n                    return 1;\n                }\n            }\n            do {\n                arg2 = piVar3[9];\n                if (arg2 == NULL) {\n                    arg2 = NULL;\n                    break;\n                }\n                arg1 = piVar3 + 9;\n                iVar8 = arg2[1];\n                if (iVar8 == 0) {\n                    if (*0x593680 == 0) {\n                        *(piVar3 + 9) =\n                             CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x90) = 0x405f97;\n                        fcn.0045c760(piVar4, arg2, 0, param_4);\n                        *(*0x20 + -0x90) = 0x405fa5;\n                        piVar3 = fcn.0045c760(piVar4, arg2, uVar7, param_4);\n                    }\n                }\n                else if (*0x593680 == 0) {\n                    *(iVar8 + 0x10) = 0;\n                    piVar3[9] = iVar8;\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar10 = iVar8 + 0x10;\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x405f69;\n                    fcn.0045c700(arg1, 0, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x405f71;\n                    fcn.0045c760(arg1, uVar7, iVar8, iVar10);\n                    *(*0x20 + -0x90) = 0x405f7a;\n                    piVar3 = fcn.0045c700(arg1, uVar7, iVar8, iVar10);\n                }\n                if (*(arg2 + 0x34) == '\\0') {\n                    param_3 = NULL;\n                }\n                else {\n                    iVar8 = *arg2;\n                    LOCK();\n                    piVar1 = iVar8 + 0x178;\n                    bVar11 = *piVar1 == 0;\n                    if (bVar11) {\n                        *piVar1 = 1;\n                    }\n                    param_3 = (iVar8 & 0xffffff00 | bVar11) ^ 1;\n                }\n                param_4 = 1;\n                piVar4 = piVar3;\n            } while (param_3 != '\\0');\n            if (arg2 != NULL) {\n                *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x18) = 0x406440;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x90) = 0x4063d3;\n                fcn.00406480(*(*0x20 + 0x10));\n                return 1;\n            }\n            if (*piVar3 != 0) {\n                iVar8 = piVar3[6] * *(piVar3 + 3) + piVar3[2];\n                if (*(*0x20 + 0x10) != 0) {\n                    *(*0x20 + -0x50) = iVar8;\n                    *(*0x20 + -0x90) = 0x40603c;\n                    fcn.004117c0(iVar8);\n                }\n                *(*0x20 + -0x90) = 0x406052;\n                fcn.00411a60();\n                piVar4 = *(*0x20 + 8);\n                iVar8 = piVar4[6];\n                piVar4[6] = iVar8 + 1;\n                if (piVar4[1] == iVar8 + 1) {\n                    piVar4[6] = 0;\n                }\n                *piVar4 = *piVar4 + -1;\n                *(*0x20 + -0x90) = 0x406085;\n                fcn.0040ae40();\n                return 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                *(*0x20 + -0x90) = 0x4060b4;\n                fcn.0040ae40();\n                return 0;\n            }\n            *(*0x20 + -0x38) = unaff_R14;\n            *(*0x20 + -0x90) = 0x4060d2;\n            piVar4 = fcn.004361a0();\n            piVar4[5] = 0;\n            iVar8 = *(*0x20 + -0x58);\n            if (iVar8 != 0) {\n                piVar4[5] = -1;\n            }\n            if (*0x593680 == 0) {\n                piVar4[3] = *(*0x20 + 0x10);\n                piVar4[8] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40611d;\n                fcn.0045c700(iVar8, *(*0x20 + 0x10), param_3, param_4);\n                *(*0x20 + -0x90) = 0x406128;\n                piVar4 = fcn.0045c700(iVar8, 0, param_3, param_4);\n            }\n            arg2_00 = *(*0x20 + -0x38);\n            iVar10 = arg2_00 + 0x148;\n            if (*0x593680 == 0) {\n                *(arg2_00 + 0x148) = piVar4;\n                *piVar4 = arg2_00;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x406150;\n                fcn.0045c5e0(iVar8, arg2_00, param_3, param_4);\n                *(*0x20 + -0x90) = 0x40615b;\n                piVar4 = fcn.0045c700(iVar8, arg2_00, param_3, param_4);\n            }\n            *(piVar4 + 0x34) = 0;\n            piVar3 = piVar4 + 10;\n            arg4 = arg2_00 + 0x88;\n            if (*0x593680 == 0) {\n                noname_1 = *(*0x20 + 8);\n                piVar4[10] = noname_1;\n                *(arg2_00 + 0x88) = 0;\n            }\n            else {\n                noname_1 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x4061a5;\n                fcn.0045c700(iVar8, noname_1, piVar3, arg4);\n                *(*0x20 + -0x90) = 0x4061b3;\n                piVar4 = fcn.0045c760(iVar8, noname_1, 0, arg4);\n            }\n            if (*0x593680 == 0) {\n                piVar4[1] = 0;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x4061e8;\n                piVar4 = fcn.0045c760(iVar8, arg2_00, 0, arg4);\n            }\n            *(*0x20 + -0x48) = piVar4;\n            *(*0x20 + -0x20) = iVar10;\n            *(*0x20 + -0x28) = piVar3;\n            *(*0x20 + -0x30) = arg4;\n            iVar10 = *(noname_1 + 0x40);\n            if (iVar10 == 0) {\n                if (*0x593680 == 0) {\n                    piVar4[2] = 0;\n                    *(noname_1 + 0x38) = piVar4;\n                    *(noname_1 + 0x40) = piVar4;\n                }\n                else {\n                    uVar7 = 0;\n                    *(*0x20 + -0x90) = 0x406285;\n                    fcn.0045c760(iVar8, arg2_00, 0, arg4);\n                    *(*0x20 + -0x90) = 0x40628e;\n                    fcn.0045c5e0(iVar8, arg2_00, uVar7, arg4);\n                    *(*0x20 + -0x90) = 0x406296;\n                    fcn.0045c5e0(iVar8, arg2_00, uVar7, arg4);\n                }\n            }\n            else if (*0x593680 == 0) {\n                piVar4[2] = iVar10;\n                *(iVar10 + 8) = piVar4;\n                *(noname_1 + 0x40) = piVar4;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x40623c;\n                fcn.0045c760(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x406245;\n                fcn.0045c5e0(iVar8, arg2_00, iVar10, arg4);\n                *(*0x20 + -0x90) = 0x40624d;\n                fcn.0045c5e0(iVar8, arg2_00, iVar10, arg4);\n            }\n            param_3 = arg2_00 + 0xb9;\n            uVar2 = *param_3;\n            *param_3 = 1;\n            param_4 = uVar2;\n            param_1 = 0xe;\n            *(*0x20 + -0x90) = 0x4062cc;\n            fcn.00435f80();\n            iVar8 = *(*0x20 + -0x48);\n            param_2 = *(*0x20 + -0x38);\n            if (*(param_2 + 0x148) == iVar8) {\n                if (*0x593680 == 0) {\n                    *(param_2 + 0x148) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x40630f;\n                    iVar8 = fcn.0045c6e0(0);\n                }\n                *(param_2 + 0xb8) = 0;\n                if (0 < *(iVar8 + 0x28)) {\n                    *(*0x20 + -0x90) = 0x406334;\n                    fcn.0042ae40();\n                    iVar8 = *(*0x20 + -0x48);\n                    param_2 = *(*0x20 + -0x38);\n                }\n                uVar6 = *(iVar8 + 0x35);\n                *(*0x20 + -0x59) = *(iVar8 + 0x35);\n                if (*0x593680 == 0) {\n                    *(param_2 + 0x88) = 0;\n                    *(iVar8 + 0x50) = 0;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x406370;\n                    fcn.0045c700(uVar6, 0, param_3, param_4);\n                    *(*0x20 + -0x90) = 0x40637c;\n                    fcn.0045c700(uVar6, 0, param_3, param_4);\n                }\n                *(*0x20 + -0x90) = 0x406385;\n                fcn.004364a0();\n                return 1;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x90) = 0x4063fb;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x40640f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3960
    },
    "00406480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406480(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    ulong unaff_RSI;\n    int64_t iVar2;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    int64_t iStack48;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00405880(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        if (arg1 != 0) {\n            fcn.004117c0(*(in_RAX + 0x30) * *(in_RAX + 0x18) + *(in_RAX + 0x10));\n        }\n        fcn.004117c0(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x593680 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        fcn.0045c760(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x593680 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.0045c6e0();\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.0045c460(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.004360c0(uStack0000000000000028);\n    return;\n}\n",
        "token_count": 597
    },
    "00409480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00409480(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    ulong uStack168;\n    uchar auStack136 [128];\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.00445120(1);\n    iVar2 = fcn.00453e40(1);\n    if (0 < iVar2) {\n        puVar3 = fcn.0040cd00();\n        puVar3[1] = 1;\n        puVar3[2] = 1;\n        if (*0x593680 == 0) {\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.0045c6e0(uVar1);\n        }\n        puVar3[4] = 0;\n        puVar3[5] = 2;\n        if (*0x593680 == 0) {\n            puVar3[3] = puVar3 + 6;\n        }\n        else {\n            fcn.0045c6e0();\n        }\n        fcn.0045cd30();\n        fcn.00449da0();\n        fcn.0045d09a();\n        fcn.0045d09a();\n        return uStack168;\n    }\n    return 0;\n}\n",
        "token_count": 341
    },
    "00409900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00409900(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x409b1c;\n                    fcn.004550c0();\n                    *(*0x20 + -0x48) = 0x409b25;\n                    uVar3 = fcn.00455820(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x409b3b;\n                    iVar4 = fcn.0040cd00();\n                    if (*0x593680 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x409ba5;\n                        fcn.0045c6e0(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x409bb3;\n                        iVar4 = fcn.0045c6e0(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x593680 != 0) goto code_r0x00409b85;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x409b85;\n                        fcn.00432ec0();\ncode_r0x00409b85:\n                        *(*0x20 + -0x48) = 0x409b93;\n                        fcn.0045c6e0(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x40996d;\n                iVar4 = fcn.00409c00(unaff_RBX);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x409985;\n                    fcn.0040ac20();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x40999b;\n                    iVar4 = fcn.00409c00(*(*0x20 + 0x10));\n                    if (iVar4 == 0) {\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x4099e7;\n                        puVar2 = fcn.0040d060(0x595120);\n                        if (*0x593680 == 0) {\n                            *puVar2 = *(*0x20 + 8);\n                            puVar2[1] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x409a12;\n                            iVar4 = fcn.0045c6e0();\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x409a25;\n                            puVar2 = fcn.0045c720(uVar3, iVar4 + 8, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar2;\n                        *(puVar2 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x409a36;\n                        fcn.00409e00();\n                        *(*0x20 + -0x48) = 0x409a45;\n                        fcn.00409c60();\n                        *(*0x20 + -0x48) = 0x409a53;\n                        fcn.0040ae40();\n                        iVar4 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0x48) = 0x4099b8;\n                        fcn.0040ae40();\n                        iVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar4 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x409a85;\n                    uVar3 = fcn.00409e00();\n                    *(*0x20 + -0x18) = uVar3;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x409a9b;\n                    iVar4 = fcn.0040cd00();\n                    if (*0x593680 == 0) {\n                        *(iVar4 + 8) = *(*0x20 + 0x10);\n                        *(iVar4 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x409b05;\n                        fcn.0045c6e0(*(*0x20 + 0x10));\n                        *(*0x20 + -0x48) = 0x409b13;\n                        iVar4 = fcn.0045c6e0(*(*0x20 + 8));\n                    }\n                    *(iVar4 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x593680 != 0) goto code_r0x00409ae5;\n                    *(iVar4 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x409ae5;\n                        fcn.00432ec0();\ncode_r0x00409ae5:\n                        *(*0x20 + -0x48) = 0x409af3;\n                        fcn.0045c6e0(*(*0x20 + -0x18));\n                    } while( true );\n                }\n                return iVar4;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x409bc6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x409bda;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1914
    },
    "00409c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409c60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x5379d8;\n                puVar2 = *0x5379d8;\n                if ((*0x5379d8)[1] < (uVar1 >> 2) * 3) goto code_r0x00409d4a;\n                *(*0x20 + -0x30) = *0x5379d8;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x409ccd;\n                piVar3 = fcn.0040c300(1, *0x5379d8, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45ed00;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x409d05;\n                fcn.0040a900();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x593680 != '\\0') {\n                        *(*0x20 + -0x50) = 0x409d2f;\n                        fcn.00403aa0();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x00409d4a:\n                    *0x5379d8 = puVar2;\n                    *(*0x20 + -0x50) = 0x409d55;\n                    fcn.00409da0();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x409d70;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x50) = 0x409d85;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x409d90;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 752
    },
    "00409e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409e00(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x409e47;\n            iVar3 = fcn.00454f80();\n            arg1_00 = *(*0x20 + -0x30);\n            uVar9 = *(arg1_00 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x50) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x00409ec0:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1_00 + 0x38);\n                    arg1_00 = *(arg1_00 + 0x40);\n                    if (uVar10 < arg1_00) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x409f05;\n                        uVar4 = fcn.00455360();\n                        *(*0x20 + -0x58) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x409f25;\n                        uVar4 = fcn.004550c0();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x409f32;\n                        uVar4 = fcn.00455820(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x409f4c;\n                        uVar5 = fcn.004559e0(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x409f5f;\n                            uVar5 = fcn.00455820(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        arg1 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (arg1 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (arg1 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x40a171;\n                                fcn.0045ca80(arg1);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            noname_2 = uVar10 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x40a054;\n                            uVar6 = fcn.004550c0();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x50);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x40a074;\n                            iVar7 = fcn.00455360();\n                            iVar8 = *(*0x20 + -0x58);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x40a08f;\n                                fcn.00455820(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x40a0ad;\n                                    cVar2 = fcn.004027a0(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x40a0cc;\n                                fcn.004559e0(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x40a0e5;\n                                    fcn.004550c0();\n                                    *(*0x20 + -0xb0) = 0x40a0ea;\n                                    fcn.00455820(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x40a125;\n                                        cVar2 = fcn.004027a0(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00409f85;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            arg1 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x40a17c;\n                    fcn.0045ca80(arg1_00);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x40a186;\n                fcn.0045cb80(arg1_00, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x40a193;\n            in_RAX = fcn.0045cb80(arg1_00, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x40a19e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00409f85:\n    *(*0x20 + -0xb0) = 0x409f9d;\n    arg4 = fcn.00455620();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x593680 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x409fd9;\n            fcn.0045c5e0(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1_00 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x00409ec0;\n}\n",
        "token_count": 2337
    },
    "0040a2a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a2a0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    puVar1 = fcn.0040cd00();\n    if (*0x593680 != 0) goto code_r0x0040a30a;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00432ec0();\ncode_r0x0040a30a:\n        iVar2 = fcn.0045c6e0(arg1);\n        fcn.0045c700(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.0045c6e0(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 299
    },
    "0040a380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a380(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    puVar1 = fcn.0040cd00();\n    if (*0x593680 != 0) goto code_r0x0040a3fc;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00432ec0();\ncode_r0x0040a3fc:\n        iVar2 = fcn.0045c6e0(arg1);\n        fcn.0045c700(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.0045c6e0(unaff_RBX);\n    } while( true );\n}\n",
        "token_count": 349
    },
    "0040a660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040a660(void)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x5944a0;\n    }\n    else {\n        puVar1 = fcn.0040c300(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x593680 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.0045c6e0(in_RAX);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 208
    },
    "0040a700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040a700(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x5944a0;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040c300();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x593680 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.0045c700(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 265
    },
    "0040a7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040a7c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX != 0) {\n        fcn.00409900(0);\n        return;\n    }\n    iVar1 = fcn.0040cd00();\n    if (*0x593680 != 0) goto code_r0x0040a82d;\n    *(iVar1 + 0x10) = in_RAX;\n    do {\n        *(iVar1 + 0x18) = in_XMM15;\n        fcn.00432ec0();\ncode_r0x0040a82d:\n        iVar1 = fcn.0045c6e0();\n    } while( true );\n}\n",
        "token_count": 239
    },
    "0040ac20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ac20(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x40ac7b;\n                fcn.0042ffe0();\n                iVar4 = 0;\n                if (1 < *0x593454) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x40ad36;\n                        fcn.0045c180();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x4b1128;\n                        *(*0x20 + -0x48) = 0x40ad0f;\n                        fcn.0045a260();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x40adb8;\n                                    fcn.0042fac0();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x40ade5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x40adf0;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1117
    },
    "0040ae40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ae40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x0040aeb6;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x40aeb6;\n            uVar5 = fcn.0042fe60();\ncode_r0x0040aeb6:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x40af05;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x40af10;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 649
    },
    "0040af20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040af20(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x40af6e;\n                uVar1 = fcn.0042fe60();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x40af89;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40af94;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 407
    },
    "0040afa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040afa0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x40afdb;\n                fcn.0042ffe0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x5379d0 == 0) {\n                        *(*0x20 + -0x30) = 0x40b025;\n                        fcn.0042fac0();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x40b06c;\n                            fcn.0042fac0(iVar1);\n                            *(*0x20 + -0x28) = **0x5379d0;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x40b088;\n                            fcn.0045c1c0();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x40b048;\n                    fcn.00433640();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x40b0c5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x40b0d0;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 737
    },
    "0040b0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040b0e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x5379d0 == 0) {\n                fcn.0042fac0();\n            }\n            else {\n                while (iVar4 = fcn.0042fac0(),  iVar4 < 0) {\n                    fcn.0045c1c0();\n                }\n            }\n            goto code_r0x0040b310;\n        }\n        fcn.0045e360();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00433640();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042fac0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x5379d0;\n        if (iVar2 != 0) {\n            fcn.0045c1c0();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045e360();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042fac0();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00433640();\n    }\n    fcn.00433640();\ncode_r0x0040b310:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 762
    },
    "0040b5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b5c0(void)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x52a484 == 0x10) {\n                for (iVar1 = 0; iVar1 < 0x44; iVar1 = iVar1 + 1) {\n                    *(iVar1 * 0x18 + 0x596150) = *(iVar1 * 2 + 0x52a480);\n                }\n                if (*0x593598 != 0) {\n                    if (*0x593598 < 0x80001) {\n                        if (0xfff < *0x593598) {\n                            if ((*0x593598 & *0x593598 - 1) == 0) {\n                                if ((*0x593590 & *0x593590 - 1) == 0) {\n                                    if (0x400000 < *0x593590) {\n                                        *0x593590 = 0;\n                                    }\n                                    if (*0x593590 != 0) {\n                                        while (*0x593590 != (1 << (*0x593588 & 0x3f) & -(*0x593588 < 0x40))) {\n                                            *0x593588 = *0x593588 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40b68a;\n                                    fcn.00423ee0();\n                                    *(*0x20 + -0x28) = 0x40b68f;\n                                    *0x593550 = fcn.00414660();\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40b6ae;\n                                        puVar2 = fcn.00417100();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x565a90;\n                                        *0x565a90 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40b72a;\n                                fcn.00434de0();\n                                *(*0x20 + -0x28) = 0x40b73b;\n                                fcn.004356e0();\n                                *(*0x20 + -0x28) = 0x40b747;\n                                fcn.004353e0();\n                                *(*0x20 + -0x28) = 0x40b758;\n                                fcn.004356e0();\n                                *(*0x20 + -0x28) = 0x40b75d;\n                                fcn.00434e60();\n                                *(*0x20 + -0x28) = 0x40b76e;\n                                fcn.00433640();\n                            }\n                            *(*0x20 + -0x28) = 0x40b773;\n                            fcn.00434de0();\n                            *(*0x20 + -0x28) = 0x40b785;\n                            fcn.004356e0();\n                            *(*0x20 + -0x28) = 0x40b791;\n                            fcn.004353e0();\n                            *(*0x20 + -0x28) = 0x40b7a5;\n                            fcn.004356e0();\n                            *(*0x20 + -0x28) = 0x40b7aa;\n                            fcn.00434e60();\n                            *(*0x20 + -0x28) = 0x40b7bb;\n                            fcn.00433640();\n                        }\n                        *(*0x20 + -0x28) = 0x40b7c5;\n                        fcn.00434de0();\n                        *(*0x20 + -0x28) = 0x40b7d6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x28) = 0x40b7e5;\n                        fcn.004353e0();\n                        *(*0x20 + -0x28) = 0x40b7f6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x28) = 0x40b805;\n                        fcn.004354e0();\n                        *(*0x20 + -0x28) = 0x40b816;\n                        fcn.004356e0();\n                        *(*0x20 + -0x28) = 0x40b81b;\n                        fcn.00434e60();\n                        *(*0x20 + -0x28) = 0x40b82c;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x28) = 0x40b831;\n                    fcn.00434de0();\n                    *(*0x20 + -0x28) = 0x40b845;\n                    fcn.004356e0();\n                    *(*0x20 + -0x28) = 0x40b851;\n                    fcn.004353e0();\n                    *(*0x20 + -0x28) = 0x40b865;\n                    fcn.004356e0();\n                    *(*0x20 + -0x28) = 0x40b86f;\n                    fcn.004354e0();\n                    *(*0x20 + -0x28) = 0x40b885;\n                    fcn.004356e0();\n                    *(*0x20 + -0x28) = 0x40b88a;\n                    fcn.00434e60();\n                    *(*0x20 + -0x28) = 0x40b89b;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x28) = 0x40b8ac;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x28) = 0x40b8bd;\n            fcn.00433640();\n        }\n        *(puVar3 + -8) = 0x40b8c5;\n        fcn.0045a3a0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "0040c300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040c300(uint64_t param_1)\n\n{\n    uint64_t uVar1;\n    int32_t *piVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    bool bVar10;\n    uint64_t in_RAX;\n    int64_t iVar11;\n    uchar (*pauVar12) [16];\n    uchar uVar13;\n    ulong uVar14;\n    int64_t unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint8_t uVar19;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint8_t uVar20;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59344c != 2) {\n                if (in_RAX == 0) {\n                    return 0x593618;\n                }\n                if (*0x5938e0 != '\\0') {\n                    if (*0x5938ec != 0) {\n                        *(*0x20 + -0x78) = 0x40c399;\n                        iVar11 = fcn.0040d060(0x595120);\n                        return iVar11;\n                    }\n                    if ((*0x5936e0 != '\\0') && (*(unaff_R14 + 0x98) == *0x5936e8)) {\n                        *0x5936f0 = *0x5936f0 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x593444 == 0) {\n                    uVar18 = 0;\n                }\n                else {\n                    uVar18 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (uVar18 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        uVar18 = *(*0x20 + -0x18);\n                    }\n                    iVar11 = *(uVar18 + 0x180) - in_RAX;\n                    *(uVar18 + 0x180) = iVar11;\n                    if (iVar11 < 0) {\n                        *(*0x20 + -0x10) = uVar18;\n                        *(*0x20 + -0x78) = 0x40c41f;\n                        fcn.0041b260();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        uVar18 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar2 = *piVar2 + 1;\n                iVar11 = *(unaff_R14 + 0x30);\n                if (*(iVar11 + 0xc0) == 0) {\n                    if (*(iVar11 + 0x50) != unaff_R14) {\n                        *(iVar11 + 0xc0) = 1;\n                        iVar16 = *0x593550;\n                        if (*(iVar11 + 0xa0) != 0) {\n                            iVar16 = *(*(iVar11 + 0xa0) + 0x40);\n                        }\n                        if (iVar16 != 0) {\n                            if (unaff_RBX == 0) {\n                                uVar20 = true;\n                            }\n                            else {\n                                uVar20 = *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar11;\n                            *(*0x20 + -0x38) = iVar16;\n                            *(*0x20 + -0x4a) = uVar20;\n                            *(*0x20 + -0x18) = uVar18;\n                            if (in_RAX < 0x8001) {\n                                if ((uVar20 != false) && (in_RAX < 0x10)) {\n                                    uVar17 = *(iVar16 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar17 = uVar17 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar17 = uVar17 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar17 = uVar17 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar17 < 0x11) && (iVar7 = *(iVar16 + 0x10),  iVar7 != 0)) {\n                                        *(iVar16 + 0x18) = in_RAX + uVar17;\n                                        *(iVar16 + 0x20) = *(iVar16 + 0x20) + 1;\n                                        *(iVar11 + 0xc0) = 0;\n                                        iVar6 = *(iVar11 + 0xd8);\n                                        *(iVar11 + 0xd8) = iVar6 + -1;\n                                        if ((iVar6 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar7 + uVar17;\n                                    }\n                                    uVar17 = *(iVar16 + 0x50);\n                                    uVar8 = *(uVar17 + 0x40);\n                                    iVar11 = 0;\n                                    if (uVar8 != 0) {\n                                        for (; (uVar8 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar8 == 0) {\n                                        iVar11 = 0x40;\n                                    }\n                                    if (iVar11 < 0x40) {\n                                        uVar4 = *(uVar17 + 0x30) + iVar11;\n                                        if (*(uVar17 + 0x38) <= uVar4) goto code_r0x0040c612;\n                                        uVar1 = *(uVar17 + 0x30) + iVar11 + 1;\n                                        if (((uVar1 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar1)) {\n                                            pauVar12 = NULL;\n                                        }\n                                        else {\n                                            uVar18 = iVar11 + 1;\n                                            *(uVar17 + 0x40) = uVar8 >> (uVar18 & 0x3f) & -(uVar18 < 0x40);\n                                            *(uVar17 + 0x30) = uVar1;\n                                            *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                            pauVar12 = *(uVar17 + 0x68) * uVar4 + *(uVar17 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040c612:\n                                        pauVar12 = NULL;\n                                    }\n                                    uVar13 = uVar18;\n                                    if (pauVar12 == NULL) {\n                                        *(*0x20 + -0x78) = 0x40c62f;\n                                        pauVar12 = fcn.0040c0e0();\n                                        iVar16 = *(*0x20 + -0x38);\n                                        uVar20 = *(*0x20 + -0x4a);\n                                        uVar17 = 5;\n                                        in_RAX = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                    *pauVar12 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(iVar16 + 0x18) && *(iVar16 + 0x18) != in_RAX) ||\n                                       (*(iVar16 + 0x10) == 0)) {\n                                        *(iVar16 + 0x10) = pauVar12;\n                                        *(iVar16 + 0x18) = in_RAX;\n                                    }\n                                    uVar14 = 0x10;\ncode_r0x0040c88b:\n                                    uVar19 = 0;\n                                    goto code_r0x0040c93e;\n                                }\n                                if (0x3f8 < in_RAX) {\n                                    uVar18 = in_RAX - 0x381 >> 7;\n                                    if (uVar18 < 0xf9) {\n                                        uVar19 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                 [uVar18];\n                                        goto code_r0x0040c6e0;\n                                    }\n                                    goto code_r0x0040cba7;\n                                }\n                                uVar18 = in_RAX + 7 >> 3;\n                                if (uVar18 < 0x81) {\n                                    uVar19 = *(uVar18 + 0x52a340);\ncode_r0x0040c6e0:\n                                    if (uVar19 < 0x44) {\n                                        uVar5 = *(uVar19 * 2 + 0x52a480);\n                                        uVar18 = uVar19 << 1 & 0xff | uVar20;\n                                        if (uVar18 < 0x88) {\n                                            uVar17 = *(iVar16 + 0x28 + uVar18 * 8);\n                                            uVar18 = *(uVar17 + 0x40);\n                                            iVar11 = 0;\n                                            if (uVar18 != 0) {\n                                                for (; (uVar18 >> iVar11 & 1) == 0; iVar11 = iVar11 + 1) {\n                                                }\n                                            }\n                                            if (uVar18 == 0) {\n                                                iVar11 = 0x40;\n                                            }\n                                            if (iVar11 < 0x40) {\n                                                uVar8 = *(uVar17 + 0x30) + iVar11;\n                                                if (*(uVar17 + 0x38) <= uVar8) {\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                    goto code_r0x0040c7c5;\n                                                }\n                                                uVar4 = *(uVar17 + 0x30) + iVar11 + 1;\n                                                if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                    pauVar12 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar17 + 0x40) =\n                                                         uVar18 >> (iVar11 + 1U & 0x3f) & -(iVar11 + 1U < 0x40);\n                                                    *(uVar17 + 0x30) = uVar4;\n                                                    *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                                    pauVar12 = *(uVar17 + 0x68) * uVar8 + *(uVar17 + 0x18);\n                                                    param_1 = *(*0x20 + 0x18);\n                                                    iVar16 = *(*0x20 + -0x38);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040c7c5:\n                                                pauVar12 = NULL;\n                                            }\n                                            *(*0x20 + -0x30) = uVar5;\n                                            if (pauVar12 == NULL) {\n                                                uVar17 = uVar19 << 1 | uVar20;\n                                                *(*0x20 + -0x78) = 0x40c7e5;\n                                                pauVar12 = fcn.0040c0e0(param_1, 0, iVar16);\n                                                iVar16 = *(*0x20 + -0x38);\n                                                uVar20 = *(*0x20 + -0x4a);\n                                                uVar13 = param_1;\n                                                in_RAX = *(*0x20 + 8);\n                                                param_1 = *(*0x20 + 0x18);\n                                            }\n                                            else {\n                                                uVar13 = 0;\n                                            }\n                                            if ((param_1 != '\\0') && (*(uVar17 + 100) != '\\0')) {\n                                                *(*0x20 + -0x20) = pauVar12;\n                                                *(*0x20 + -0x4b) = uVar13;\n                                                *(*0x20 + -0x48) = uVar17;\n                                                *(*0x20 + -0x78) = 0x40c846;\n                                                fcn.0045d100(param_1, pauVar12, iVar16);\n                                                in_RAX = *(*0x20 + 8);\n                                                pauVar12 = *(*0x20 + -0x20);\n                                                uVar20 = *(*0x20 + -0x4a);\n                                                uVar13 = *(*0x20 + -0x4b);\n                                                uVar17 = *(*0x20 + -0x48);\n                                            }\n                                            uVar14 = *(*0x20 + -0x30);\n                                            goto code_r0x0040c88b;\n                                        }\n                                        goto code_r0x0040cb8d;\n                                    }\n                                    goto code_r0x0040cb9a;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x40c8a5;\n                                uVar17 = fcn.00414b20();\n                                *(uVar17 + 0x30) = 1;\n                                *(uVar17 + 0x60) = 1;\n                                uVar14 = *(uVar17 + 0x68);\n                                pauVar12 = *(uVar17 + 0x18);\n                                if ((*(*0x20 + 0x18) == '\\0') || (*(uVar17 + 100) == '\\0')) {\n                                    uVar19 = 0;\n                                    uVar20 = *(*0x20 + -0x4a);\n                                }\n                                else {\n                                    uVar19 = *(*0x20 + -0x4a);\n                                    uVar20 = uVar19;\n                                    if (uVar19 == 0) {\n                                        *(*0x20 + -0x48) = uVar17;\n                                        *(*0x20 + -0x30) = uVar14;\n                                        *(*0x20 + -0x20) = pauVar12;\n                                        *(*0x20 + -0x78) = 0x40c8ef;\n                                        fcn.0045d100();\n                                        uVar17 = *(*0x20 + -0x48);\n                                        pauVar12 = *(*0x20 + -0x20);\n                                        uVar14 = *(*0x20 + -0x30);\n                                        uVar19 = *(*0x20 + -0x4a);\n                                        uVar20 = uVar19;\n                                    }\n                                }\n                                uVar13 = 1;\n                                in_RAX = *(*0x20 + 8);\ncode_r0x0040c93e:\n                                *(*0x20 + -0x20) = pauVar12;\n                                *(*0x20 + -0x30) = uVar14;\n                                *(*0x20 + -0x4b) = uVar13;\n                                *(*0x20 + -0x49) = uVar19;\n                                *(*0x20 + -0x48) = uVar17;\n                                if (uVar20 == 0) {\n                                    *(*0x20 + -0x78) = 0x40c973;\n                                    fcn.00412e00(in_RAX);\n                                    puVar9 = *(*0x20 + 0x10);\n                                    if (*puVar9 < *(*0x20 + 8)) {\n                                        uVar18 = 0;\n                                        if (puVar9[1] != 0) {\n                                            uVar18 = (*(*0x20 + 8) - *puVar9) + puVar9[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar18 = puVar9[1];\n                                    }\n                                    *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar18;\n                                }\n                                else {\n                                    uVar18 = 0;\n                                }\n                                *(*0x20 + -0x40) = uVar18;\n                                *(*0x20 + -0x78) = 0x40c9c5;\n                                fcn.0045c1a0();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                                if (*0x59344c != 0) {\n                                    *(*0x20 + -0x78) = 0x40c9fb;\n                                    fcn.0041db00(*(*0x20 + -0x30));\n                                }\n                                if (*0x593498 < 1) {\n                                    uVar18 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    if (*0x593498 == 1) {\n                                        uVar18 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        uVar17 = **(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x30);\n                                        if (uVar18 < uVar17) {\n                                            **(*0x20 + -0x38) = uVar17 - uVar18;\n                                            goto code_r0x0040ca47;\n                                        }\n                                    }\n                                    *(*0x20 + -0x78) = 0x40ca3b;\n                                    fcn.0040ce20(uVar18);\n                                    uVar18 = *(*0x20 + -0x30);\n                                }\ncode_r0x0040ca47:\n                                iVar11 = *(*0x20 + -0x28);\n                                *(iVar11 + 0xc0) = 0;\n                                iVar6 = *(iVar11 + 0xd8);\n                                *(iVar11 + 0xd8) = iVar6 + -1;\n                                if ((iVar6 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x49) == '\\0') {\ncode_r0x0040caaa:\n                                    if (*0x5938e0 != '\\0') {\n                                        if (*0x5938e4 != 0) {\n                                            *(*0x20 + -0x78) = 0x40cad1;\n                                            fcn.0042b120(*(*0x20 + 0x10));\n                                            uVar18 = *(*0x20 + -0x30);\n                                        }\n                                        if ((*0x5936e0 != '\\0') && (*(unaff_R14 + 0x98) == *0x5936e8)) {\n                                            *0x5936f8 = *0x5936f8 + uVar18;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x18) != 0) {\n                                        piVar3 = *(*0x20 + -0x18) + 0x180;\n                                        *piVar3 = *piVar3 - (uVar18 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x4b) != '\\0') {\n                                        if (((*0x596148 == '\\0') || (*0x593468 != 0)) || (*0x59344c != 0)) {\n                                            bVar10 = false;\n                                        }\n                                        else {\n                                            bVar10 = *0x593cf8 <= *0x593d58;\n                                        }\n                                        if (bVar10) {\n                                            *(*0x20 + -0x78) = 0x40cb5c;\n                                            fcn.004175c0(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x20);\n                                }\n                                if (*(*0x20 + -0x4a) != '\\0') {\n                                    *(*0x20 + -0x78) = 0x40caa5;\n                                    fcn.0040cc40();\n                                    uVar18 = *(*0x20 + -0x30);\n                                    goto code_r0x0040caaa;\n                                }\n                                *(*0x20 + -0x78) = 0x40cb8d;\n                                fcn.00433640();\ncode_r0x0040cb8d:\n                                *(*0x20 + -0x78) = 0x40cb9a;\n                                fcn.0045ca80(0x88);\ncode_r0x0040cb9a:\n                                *(*0x20 + -0x78) = 0x40cba7;\n                                fcn.0045ca80(0x44);\ncode_r0x0040cba7:\n                                *(*0x20 + -0x78) = 0x40cbb4;\n                                fcn.0045caa0(0xf9);\n                            }\n                            param_1 = 0x81;\n                            *(*0x20 + -0x78) = 0x40cbc5;\n                            fcn.0045caa0(0x81);\n                        }\n                        *(*0x20 + -0x78) = 0x40cbd6;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x78) = 0x40cbe7;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x78) = 0x40cbf8;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x78) = 0x40cc09;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        puVar15[0x18] = param_1;\n        *(puVar15 + -8) = 0x40cc1d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        param_1 = puVar15[0x18];\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 5234
    },
    "0040cc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040cc40(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.0045a1e0();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045d100(uVar2);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0040cd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cd60(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40cdcf;\n                fcn.0040c300(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40cdb2;\n                fcn.0040c300(1);\n                return;\n            }\n            unaff_RBX = 0x4c9b60;\n            *(*0x20 + -0x28) = 0x40cdec;\n            in_RAX = fcn.00432ec0(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40cdfc;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "0040ce20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ce20(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x593550;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x593498 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40ce7e;\n                    iVar1 = fcn.0040cf00();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40cea5;\n                fcn.0042ab80(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40cec5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40ceda;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 597
    },
    "0040d180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d180(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040d1d3:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40d2ad;\n                        iVar5 = fcn.004159c0();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40d22c;\n                        fcn.0040ac20();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x593698;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40d28a;\n                        puVar8 = fcn.004159c0();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x593698) goto code_r0x0040d3d1;\n                            do {\n                                *(*0x20 + -0x48) = 0x40d3cf;\n                                fcn.00433640();\ncode_r0x0040d3d1:\n                                *(*0x20 + -0x48) = 0x40d3dd;\n                                fcn.0040ae40();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x593580;\n                            **ppuVar7 = *0x593580;\n                            LOCK();\n                            bVar9 = uVar4 == *0x593580;\n                            *0x593580 = *0x593580 ^ bVar9 * (*0x593580 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x593698) {\n                        *(*0x20 + -0x48) = 0x40d317;\n                        fcn.0040ae40();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x595120) {\n                        *(*0x20 + -0x48) = 0x40d33d;\n                        fcn.0042c9a0();\n                        *(*0x20 + -0x48) = 0x40d351;\n                        fcn.0042c9a0();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040d1d3;\n                    *(*0x20 + -0x48) = 0x40d3f0;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x48) = 0x40d405;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40d416;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40d42b;\n        fcn.0045eaa0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1621
    },
    "0040d440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040d440(int64_t arg1)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar2 = uVar1 + unaff_RBX;\n    if (uVar2 <= in_RAX[2]) {\n        *in_RAX = uVar2;\n        uVar2 = -*0x593598 & (uVar2 + *0x593598) - 2;\n        if (in_RAX[1] < uVar2) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.004160c0(unaff_RDI);\n                fcn.00415c20();\n            }\n            in_RAX[1] = uVar2;\n        }\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "0040d540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040d540(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *arg3;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uint8_t uVar9;\n    int64_t *in_R8;\n    uint64_t in_R9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar6 = *(in_RAX + 0x28);\n    iVar4 = in_RAX;\n    uVar7 = arg1;\n    if ((iVar6 == 0) || (arg3 = *(iVar6 + 0x10),  in_R8 = arg3,  arg3 == NULL)) {\n        arg3 = fcn.0040c300(1);\n    }\n    else {\n        in_R9 = *(unaff_RBX + 0x52);\n        piVar8 = arg3 + (in_R9 - 8);\n        if (*piVar8 == 0) {\n            in_R8 = arg3 + in_R9;\n            if (*0x593680 == 0) {\n                *(iVar6 + 0x10) = in_R8;\n            }\n            else {\n                iVar4 = fcn.0045c760(arg1, iVar6, in_R8, in_R9);\n            }\n        }\n        else {\n            if (*0x593680 == 0) {\n                *piVar8 = 0;\n            }\n            else {\n                piVar8 = arg3;\n                iVar4 = fcn.0045c700(arg1, 0, arg3, in_R9);\n                in_R8 = arg3;\n                arg3 = piVar8;\n            }\n            if (*0x593680 == 0) {\n                *(*(iVar4 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar4 = fcn.0045c700(uVar7, 0, in_R8, in_R9);\n            }\n        }\n    }\n    uVar9 = *(iVar4 + 9);\n    if (uVar9 < 0x10) {\n        *(iVar4 + 10) = *(iVar4 + 10) + 1;\n        uVar10 = uVar7;\n    }\n    else {\n        uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n        uVar1 = uVar9 - 0xf;\n        uVar10 = uVar1;\n        uVar9 = uVar1;\n        uVar1 = -(uVar9 < 0x20);\n        in_R9 = uVar1;\n        uVar1 = (1 << (uVar9 & 0x1f) & uVar1) - 1;\n        in_R8 = uVar1;\n        if ((uVar1 & (SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0))) == 0) {\n            *(iVar4 + 10) = *(iVar4 + 10) + 1;\n        }\n    }\n    iVar6 = *(unaff_RBX + 0x40);\n    if (*(iVar6 + 8) == 0) {\n        if (*(iVar4 + 0x28) == 0) {\n            uVar5 = fcn.0040cd00();\n            if (*0x593680 == 0) {\n                *(in_RAX + 0x28) = uVar5;\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n            else {\n                iVar4 = in_RAX;\n                fcn.0045c5e0(uVar10, in_RAX, in_R8, in_R9);\n                uVar7 = arg1;\n            }\n        }\n        piVar8 = *(iVar4 + 0x28);\n        if (*piVar8 == 0) {\n            uVar5 = fcn.0040cd00();\n            if (*0x593680 == 0) {\n                **(in_RAX + 0x28) = uVar5;\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n            else {\n                fcn.0045c5e0(in_RAX, piVar8, in_R8, in_R9);\n                iVar4 = in_RAX;\n                uVar7 = arg1;\n            }\n        }\n        in_R8 = **(iVar4 + 0x28);\n        iVar4 = in_R8[1];\n        iVar2 = *in_R8;\n        in_R9 = in_R8[2];\n        iVar6 = iVar2;\n        if (in_R9 < iVar4 + 1U) {\n            arg2 = iVar2;\n            piVar8 = in_R8;\n            iVar6 = fcn.00445200(iVar4);\n            in_R8[2] = iVar4;\n            if (*0x593680 == 0) {\n                *in_R8 = iVar6;\n                iVar4 = iVar2;\n                uVar7 = arg1;\n            }\n            else {\n                iVar6 = fcn.0045c5e0(iVar4, arg2, piVar8, in_R9);\n                iVar4 = iVar2;\n                uVar7 = arg1;\n            }\n        }\n        in_R8[1] = iVar4 + 1;\n        if (*0x593680 == 0) {\n            *(iVar6 + iVar4 * 8) = arg3;\n        }\n        else {\n            uVar7 = fcn.0045c6e0();\n        }\n    }\n    if (*0x593680 == 0) {\n        *(uVar7 + *(unaff_RBX + 0x52) + -8) = arg3;\n    }\n    else {\n        fcn.0045c5e0(*(unaff_RBX + 0x52), iVar6, in_R8, in_R9);\n    }\n    return arg3;\n}\n",
        "token_count": 1492
    },
    "0040d8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040d8c0(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040cd00();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        arg2 = arg1;\n        uVar5 = fcn.0040da60(0);\n        if (*0x593680 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.0045c5e0(arg1, arg2, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040cd00();\n            if (*0x593680 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.0045c5e0(arg1, arg2, in_R8, in_R9);\n                fcn.0045c700(arg1, uVar4, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 780
    },
    "0040da60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040da60(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040db92;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x52a480);\n                            goto code_r0x0040db60;\n                        }\n                        goto code_r0x0040dc4c;\n                    }\n                    goto code_r0x0040dc59;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x52a340);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x52a480);\n                        goto code_r0x0040db60;\n                    }\n                    goto code_r0x0040dc66;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040db60:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040db92;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040db92:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x28) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40dbee;\n                        iVar3 = fcn.0040cd60(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40dbd5;\n                            fcn.0045d100();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40dbc8;\n                            fcn.00411ac0();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x20);\n                    if (*(*0x20 + -0x28) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x593680 == 0) {\n                            *((*(*0x20 + -0x28) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40dc36;\n                            fcn.0045c5e0(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40dc4c;\n                fcn.00431cc0();\ncode_r0x0040dc4c:\n                *(*0x20 + -0x40) = 0x40dc59;\n                fcn.0045ca80(0x44);\ncode_r0x0040dc59:\n                *(*0x20 + -0x40) = 0x40dc66;\n                fcn.0045caa0(0xf9);\ncode_r0x0040dc66:\n                *(*0x20 + -0x40) = 0x40dc73;\n                fcn.0045ca80(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40dc85;\n            in_RAX = fcn.0045caa0(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40dc99;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1581
    },
    "0040e100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040e100(int64_t **arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    int64_t *piVar9;\n    ulong uVar10;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t in_R8;\n    int64_t iVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040e100:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (unaff_RBX != 0) {\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x80) = 0x40e15e;\n                uVar4 = (*pcVar2)();\n                *(*0x20 + -0x50) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    uVar10 = *(*0x20 + 8);\n                    uVar8 = 1;\n                    *(*0x20 + -0x80) = 0x40e195;\n                    iVar5 = fcn.0040c300();\n                    if (*0x593680 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x80) = 0x40e1bd;\n                        fcn.0045c5e0(uVar8, uVar10, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x50);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x48) = arg1_00;\n                        *(*0x20 + -0x80) = 0x40e21b;\n                        fcn.0040efa0(arg1_00);\n                        uVar4 = *(*0x20 + -0x50);\n                        arg1_00 = *(*0x20 + -0x48);\n                        piVar9 = *(*0x20 + 0x10);\n                        iVar5 = *(*0x20 + 8);\n                    }\n                    uVar1 = *(iVar5 + 0x52);\n                    iVar12 = piVar9[2];\n                    uVar6 = uVar4 >> 0x38;\n                    if (uVar4 >> 0x38 < 5) {\n                        uVar6 = (uVar4 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x59) = uVar6;\n                    arg2 = 0;\n                    in_R8 = 0;\n                    in_R9 = 0;\n                    iVar12 = arg1_00 * uVar1 + iVar12;\n                    do {\n                        arg1_01 = iVar12;\n                        *(*0x20 + -0x20) = arg1_01;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            uVar7 = *(arg1_01 + uVar4);\n                            if (uVar6 == uVar7) {\n                                *(*0x20 + -0x58) = uVar4;\n                                *(*0x20 + -0x28) = in_R9;\n                                *(*0x20 + -0x38) = in_R8;\n                                *(*0x20 + -0x30) = arg2;\n                                piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                                if ((*(iVar5 + 0x54) & 1) != 0) {\n                                    piVar9 = *piVar9;\n                                }\n                                *(*0x20 + -0x40) = piVar9;\n                                pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                                *(*0x20 + -0x80) = 0x40e3c2;\n                                cVar3 = (*pcVar2)();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*0x20 + 8);\n                                    if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                                        *(*0x20 + -0x80) = 0x40e425;\n                                        fcn.004117c0(*(*0x20 + -0x10));\n                                        iVar5 = *(*0x20 + 8);\n                                    }\n                                    arg1 = *(*0x20 + -0x20) + *(iVar5 + 0x51) * *(*0x20 + -0x58) + *(iVar5 + 0x50) * 8 +\n                                           8;\n                                    goto code_r0x0040e581;\n                                }\n                                uVar6 = *(*0x20 + -0x59);\n                                arg1_01 = *(*0x20 + -0x20);\n                                piVar9 = *(*0x20 + 0x10);\n                                iVar5 = *(*0x20 + 8);\n                                uVar4 = *(*0x20 + -0x58);\n                                arg2 = *(*0x20 + -0x30);\n                                in_R8 = *(*0x20 + -0x38);\n                                in_R9 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                if ((uVar7 < 2) && (arg2 == 0)) {\n                                    in_R8 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                                    in_R9 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                                    arg2 = arg1_01 + uVar4;\n                                }\n                                if (uVar7 == 0) goto code_r0x0040e268;\n                            }\n                        }\n                        iVar12 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar12 != 0);\ncode_r0x0040e268:\n                    if (piVar9[3] != 0) goto code_r0x0040e457;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040e457;\n                    }\n                    *(*0x20 + -0x80) = 0x40e1d4;\n                    fcn.0040edc0();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x50);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040e5c5;\n        }\n        goto code_r0x0040e5d6;\n    }\n    goto code_r0x0040e5ea;\ncode_r0x0040e457:\n    iVar12 = in_R8;\n    if (arg2 == 0) {\n        *(*0x20 + -0x80) = 0x40e46a;\n        arg2 = fcn.0040d540(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        iVar12 = arg2 + 8;\n        in_R9 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n    }\n    *(*0x20 + -0x28) = in_R9;\n    *(*0x20 + -0x30) = arg2;\n    in_R8 = iVar12;\n    if ((*(iVar5 + 0x54) & 1) != 0) {\n        *(*0x20 + -0x18) = iVar12;\n        uVar10 = 1;\n        *(*0x20 + -0x80) = 0x40e4c5;\n        in_R8 = fcn.0040c300();\n        if (*0x593680 == 0) {\n            **(*0x20 + -0x18) = in_R8;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40e4df;\n            in_R8 = fcn.0045c5e0(uVar10, arg2, iVar12, in_R9);\n        }\n        arg2 = *(*0x20 + -0x30);\n        iVar5 = *(*0x20 + 8);\n        in_R9 = *(*0x20 + -0x28);\n    }\n    if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n        *(*0x20 + -0x38) = in_R8;\n        uVar8 = 1;\n        *(*0x20 + -0x80) = 0x40e525;\n        uVar10 = fcn.0040c300();\n        if (*0x593680 == 0) {\n            **(*0x20 + -0x28) = uVar10;\n        }\n        else {\n            *(*0x20 + -0x80) = 0x40e53f;\n            fcn.0045c5e0(uVar8, arg2, in_R8, in_R9);\n        }\n        in_R8 = *(*0x20 + -0x38);\n    }\n    *(*0x20 + -0x80) = 0x40e55d;\n    fcn.004117c0(*(*0x20 + -0x10));\n    **(*0x20 + -0x30) = *(*0x20 + -0x59);\n    **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n    iVar5 = *(*0x20 + 8);\n    arg1 = *(*0x20 + -0x28);\ncode_r0x0040e581:\n    uVar7 = *(*(*0x20 + 0x10) + 8);\n    if ((uVar7 & 4) != 0) {\n        *(*(*0x20 + 0x10) + 8) = uVar7 & 0xfb;\n        if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n            arg1 = *arg1;\n        }\n        return arg1;\n    }\n    *(*0x20 + -0x80) = 0x40e5c5;\n    fcn.00433640();\ncode_r0x0040e5c5:\n    *(*0x20 + -0x80) = 0x40e5d6;\n    fcn.00433640();\ncode_r0x0040e5d6:\n    unaff_RBX = 0x4c9b70;\n    *(*0x20 + -0x80) = 0x40e5e9;\n    in_RAX = fcn.00432ec0();\ncode_r0x0040e5ea:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + -8) = 0x40e5fe;\n    fcn.0045a3a0();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    *0x20 = puVar11;\n    goto code_r0x0040e100;\n}\n",
        "token_count": 3009
    },
    "0040edc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040edc0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t *arg1_00;\n    int64_t *arg2;\n    int64_t *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar5 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar5 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40ee39;\n            iVar1 = fcn.0040da60(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            arg3 = *(*0x20 + -0x19);\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x593680 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = iVar1;\n            }\n            else {\n                arg1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x40) = 0x40ee8a;\n                fcn.0045c6e0();\n                *(*0x20 + -0x40) = 0x40ee93;\n                fcn.0045c5e0(arg1, arg2, arg3, in_R9);\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1_00 = arg2[5];\n            if ((arg1_00 == NULL) || (*arg1_00 == 0)) goto code_r0x0040eef4;\n            if (arg1_00[1] == 0) {\n                if (*0x593680 == 0) {\n                    arg1_00[1] = *arg1_00;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40eed5;\n                    fcn.0045c740(arg1_00, arg2, arg3, in_R9);\n                }\n                if (*0x593680 == 0) {\n                    *arg2[5] = 0;\n                }\n                else {\n                    arg1_00 = NULL;\n                    *(*0x20 + -0x40) = 0x40eef4;\n                    fcn.0045c6e0();\n                }\ncode_r0x0040eef4:\n                if (uVar5 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar5;\n                        *(*0x20 + -0x40) = 0x40ef13;\n                        iVar1 = fcn.0040cd00();\n                        if (*0x593680 == 0) {\n                            arg1_00 = *(*0x20 + 0x10);\n                            arg1_00[5] = iVar1;\n                        }\n                        else {\n                            arg1_00 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40ef35;\n                            fcn.0045c5e0(arg1_00, arg2, arg3, in_R9);\n                        }\n                        uVar5 = *(*0x20 + -0x10);\n                        arg2 = arg1_00;\n                    }\n                    if (*0x593680 == 0) {\n                        *(arg2[5] + 0x10) = uVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40ef5b;\n                        fcn.0045c720(arg1_00, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40ef76;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x40ef86;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1366
    },
    "0040efa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040efa0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040f040((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040f040(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040fa20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040fa20(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x0040fa20:\n    puVar10 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar10 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1._0_4_ = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x40fa74;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar9 = *(*0x20 + 0x10);\n                *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n                if (piVar9[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x40faa5;\n                    iVar5 = fcn.0040c300();\n                    if (*0x593680 == 0) {\n                        piVar9 = *(*0x20 + 0x10);\n                        piVar9[2] = iVar5;\n                    }\n                    else {\n                        piVar9 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x40fac7;\n                        fcn.0045c5e0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    uVar8 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar9[3] != 0) {\n                        *(*0x20 + -0x10) = uVar8;\n                        *(*0x20 + -0x38) = 0x40fb19;\n                        fcn.0040fd20(uVar8);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar8 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar9 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = uVar8 * *(iVar5 + 0x52) + piVar9[2];\n                    do {\n                        arg1_01 = iVar2;\n                        for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                            if (*(arg1_01 + uVar4) < 2) {\n                                uVar8 = uVar4;\n                                iVar2 = arg1_01;\n                                if (iVar6 != 0) {\n                                    uVar8 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar8;\n                                if (*(arg1_01 + uVar4) == 0) goto code_r0x0040fb4b;\n                            }\n                            else {\n                                in_R9 = uVar4;\n                                if (*(*0x20 + 0x18) == *(arg1_01 + uVar4 * 4 + 8)) goto code_r0x0040fc9a;\n                            }\n                        }\n                        iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0040fb4b:\n                    if (piVar9[3] != 0) goto code_r0x0040fc42;\n                    uVar7 = *(piVar9 + 9);\n                    if ((*piVar9 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar9 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x0040fc42;\n                    }\n                    *(*0x20 + -0x38) = 0x40fadb;\n                    fcn.0040edc0();\n                    piVar9 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0040fcd4;\n        }\n        goto code_r0x0040fce5;\n    }\n    goto code_r0x0040fcf9;\ncode_r0x0040fc42:\n    uVar4 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x40fc55;\n        iVar6 = fcn.0040d540(arg1_01);\n        iVar5 = *(*0x20 + 8);\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_01 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = uVar4 & 7;\n    *(arg1_01 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    *(arg1_01 + uVar4 * 4 + 8) = *(*0x20 + 0x18);\n    *piVar9 = *piVar9 + 1;\ncode_r0x0040fc9a:\n    uVar3 = *(iVar5 + 0x51);\n    if ((*(piVar9 + 1) & 4) != 0) {\n        *(piVar9 + 1) = *(piVar9 + 1) & 0xfb;\n        return uVar4 * uVar3 + arg1_01 + 0x28;\n    }\n    *(*0x20 + -0x38) = 0x40fcd4;\n    fcn.00433640();\n    arg1._0_4_ = arg1_01;\ncode_r0x0040fcd4:\n    *(*0x20 + -0x38) = 0x40fce5;\n    fcn.00433640();\ncode_r0x0040fce5:\n    unaff_RBX = 0x4c9b70;\n    *(*0x20 + -0x38) = 0x40fcf8;\n    in_RAX = fcn.00432ec0();\ncode_r0x0040fcf9:\n    *(puVar10 + 8) = in_RAX;\n    *(puVar10 + 0x10) = unaff_RBX;\n    *(puVar10 + 0x18) = arg1;\n    *(puVar10 + -8) = 0x40fd0c;\n    fcn.0045a3a0();\n    in_RAX = *(puVar10 + 8);\n    unaff_RBX = *(puVar10 + 0x10);\n    arg1._0_4_ = *(puVar10 + 0x18);\n    *0x20 = puVar10;\n    goto code_r0x0040fa20;\n}\n",
        "token_count": 2022
    },
    "0040fd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fd20(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040fdc0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040fdc0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00410320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410320(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t arg1_02;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \ncode_r0x00410320:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x30;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar1 = **(in_RAX + 0x48);\n                *(*0x20 + -0x38) = 0x410374;\n                uVar4 = (*pcVar1)();\n                *(*0x20 + -0x18) = uVar4;\n                piVar8 = *(*0x20 + 0x10);\n                *(piVar8 + 1) = *(piVar8 + 1) ^ 4;\n                if (piVar8[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_00 = 1;\n                    *(*0x20 + -0x38) = 0x4103a5;\n                    iVar5 = fcn.0040c300();\n                    if (*0x593680 == 0) {\n                        piVar8 = *(*0x20 + 0x10);\n                        piVar8[2] = iVar5;\n                    }\n                    else {\n                        piVar8 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x38) = 0x4103c7;\n                        fcn.0045c5e0(arg1_00, arg2, in_R8, in_R9);\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                iVar5 = *(*0x20 + 8);\n                do {\n                    arg1_01 = (1 << (*(piVar8 + 9) & 0x3f)) - 1U & uVar4;\n                    if (piVar8[3] != 0) {\n                        *(*0x20 + -0x10) = arg1_01;\n                        *(*0x20 + -0x38) = 0x410419;\n                        fcn.00410640(arg1_01);\n                        uVar4 = *(*0x20 + -0x18);\n                        arg1_01 = *(*0x20 + -0x10);\n                        iVar5 = *(*0x20 + 8);\n                        piVar8 = *(*0x20 + 0x10);\n                    }\n                    uVar3 = uVar4 >> 0x38;\n                    iVar6 = 0;\n                    in_R8 = 0;\n                    iVar2 = arg1_01 * *(iVar5 + 0x52) + piVar8[2];\n                    do {\n                        arg1_02 = iVar2;\n                        for (arg1 = 0; arg1 < 8; arg1 = arg1 + 1) {\n                            if (*(arg1_02 + arg1) < 2) {\n                                uVar4 = arg1;\n                                iVar2 = arg1_02;\n                                if (iVar6 != 0) {\n                                    uVar4 = in_R8;\n                                    iVar2 = iVar6;\n                                }\n                                iVar6 = iVar2;\n                                in_R8 = uVar4;\n                                if (*(arg1_02 + arg1) == 0) goto code_r0x0041044b;\n                            }\n                            else {\n                                in_R9 = arg1;\n                                if (*(*0x20 + 0x18) == *(arg1_02 + arg1 * 8 + 8)) goto code_r0x004105b1;\n                            }\n                        }\n                        iVar2 = *(arg1_02 + *(iVar5 + 0x52) + -8);\n                    } while (iVar2 != 0);\ncode_r0x0041044b:\n                    if (piVar8[3] != 0) goto code_r0x00410548;\n                    uVar7 = *(piVar8 + 9);\n                    if ((*piVar8 + 1U < 9) ||\n                       (uVar4 = 1 << (uVar7 & 0x3f), \n                       *piVar8 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar7) {\n                            uVar7 = 0xf;\n                        }\n                        if (*(piVar8 + 10) < 1 << (uVar7 & 0xf)) goto code_r0x00410548;\n                    }\n                    *(*0x20 + -0x38) = 0x4103db;\n                    fcn.0040edc0();\n                    piVar8 = *(*0x20 + 0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x004105eb;\n        }\n        goto code_r0x004105fc;\n    }\n    goto code_r0x00410610;\ncode_r0x00410548:\n    arg1 = in_R8;\n    if (iVar6 == 0) {\n        *(*0x20 + -0x38) = 0x41055b;\n        iVar6 = fcn.0040d540(arg1_02);\n        iVar5 = *(*0x20 + 8);\n        piVar8 = *(*0x20 + 0x10);\n        arg1 = 0;\n        uVar3 = *(*0x20 + -0x18) >> 0x38;\n    }\n    arg1_02 = iVar6;\n    if (uVar3 < 5) {\n        uVar3 = uVar3 + 5;\n    }\n    in_R9 = arg1 & 7;\n    *(arg1_02 + in_R9) = uVar3;\n    in_R8 = *(*0x20 + 0x18);\n    if (*0x593680 == 0) {\n        *(arg1_02 + arg1 * 8 + 8) = in_R8;\n    }\n    else {\n        *(*0x20 + -0x38) = 0x4105ae;\n        fcn.0045c760(arg1, iVar5, in_R8, in_R9);\n    }\n    *piVar8 = *piVar8 + 1;\ncode_r0x004105b1:\n    arg1 = arg1 * *(iVar5 + 0x51);\n    if ((*(piVar8 + 1) & 4) != 0) {\n        *(piVar8 + 1) = *(piVar8 + 1) & 0xfb;\n        return arg1 + arg1_02 + 0x48;\n    }\n    *(*0x20 + -0x38) = 0x4105eb;\n    fcn.00433640();\ncode_r0x004105eb:\n    *(*0x20 + -0x38) = 0x4105fc;\n    fcn.00433640();\ncode_r0x004105fc:\n    unaff_RBX = 0x4c9b70;\n    *(*0x20 + -0x38) = 0x41060f;\n    in_RAX = fcn.00432ec0();\ncode_r0x00410610:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + -8) = 0x410625;\n    fcn.0045a3a0();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    *0x20 = puVar9;\n    goto code_r0x00410320;\n}\n",
        "token_count": 2017
    },
    "00410640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410640(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.004106e0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.004106e0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00410f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00410f00(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    ulong arg1_01;\n    uint64_t arg1_02;\n    int64_t **ppiVar9;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t **unaff_RDI;\n    int64_t **in_R8;\n    int64_t **in_R9;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t unaff_R14;\n    \ncode_r0x00410f00:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        if (unaff_RBX != 0) {\n            arg1 = *(unaff_RBX + 8);\n            if ((*(unaff_RBX + 8) & 4) == 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                pcVar2 = **(in_RAX + 0x48);\n                *(*0x20 + -0x68) = 0x410f59;\n                uVar5 = (*pcVar2)();\n                *(*0x20 + -0x38) = uVar5;\n                piVar10 = *(*0x20 + 0x10);\n                *(piVar10 + 1) = *(piVar10 + 1) ^ 4;\n                if (piVar10[2] == 0) {\n                    arg2 = *(*0x20 + 8);\n                    arg1_01 = 1;\n                    *(*0x20 + -0x68) = 0x410f8a;\n                    iVar6 = fcn.0040c300();\n                    if (*0x593680 == 0) {\n                        piVar10 = *(*0x20 + 0x10);\n                        piVar10[2] = iVar6;\n                    }\n                    else {\n                        piVar10 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x68) = 0x410fac;\n                        fcn.0045c5e0(arg1_01, arg2, in_R8, in_R9);\n                    }\n                    uVar5 = *(*0x20 + -0x38);\n                }\n                iVar6 = *(*0x20 + 8);\n                do {\n                    arg1_02 = (1 << (*(piVar10 + 9) & 0x3f)) - 1U & uVar5;\n                    if (piVar10[3] != 0) {\n                        *(*0x20 + -0x30) = arg1_02;\n                        *(*0x20 + -0x68) = 0x411005;\n                        fcn.00411300(arg1_02);\n                        uVar5 = *(*0x20 + -0x38);\n                        arg1_02 = *(*0x20 + -0x30);\n                        iVar6 = *(*0x20 + 8);\n                        piVar10 = *(*0x20 + 0x10);\n                    }\n                    uVar1 = *(iVar6 + 0x52);\n                    iVar3 = piVar10[2];\n                    uVar7 = uVar5 >> 0x38;\n                    if (uVar5 >> 0x38 < 5) {\n                        uVar7 = (uVar5 >> 0x38) + 5;\n                    }\n                    *(*0x20 + -0x41) = uVar7;\n                    unaff_RDI = NULL;\n                    in_R8 = NULL;\n                    ppiVar12 = arg1_02 * uVar1 + iVar3;\n                    do {\n                        ppiVar9 = ppiVar12;\n                        *(*0x20 + -0x10) = ppiVar9;\n                        for (ppiVar12 = NULL; uVar4 = uVar7,  ppiVar12 < 0x8; ppiVar12 = ppiVar12 + 1) {\n                            uVar8 = *(ppiVar9 + ppiVar12);\n                            if (uVar4 == uVar8) {\n                                ppiVar13 = ppiVar9 + ppiVar12 * 2 + 1;\n                                if (ppiVar9[ppiVar12 * 2 + 2] == *(*0x20 + 0x20)) {\n                                    if (*(*0x20 + 0x18) == *ppiVar13) {\n                                        uVar4 = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x28) = ppiVar12;\n                                        *(*0x20 + -0x20) = ppiVar13;\n                                        *(*0x20 + -0x40) = in_R8;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        *(*0x20 + -0x68) = 0x411173;\n                                        uVar4 = fcn.004027a0(*(*0x20 + 0x20), iVar6);\n                                        uVar4 = uVar4 ^ 1;\n                                        iVar6 = *(*0x20 + 8);\n                                        piVar10 = *(*0x20 + 0x10);\n                                        unaff_RDI = *(*0x20 + -0x18);\n                                        in_R8 = *(*0x20 + -0x40);\n                                        ppiVar13 = *(*0x20 + -0x20);\n                                        ppiVar12 = *(*0x20 + -0x28);\n                                        ppiVar9 = *(*0x20 + -0x10);\n                                        uVar7 = *(*0x20 + -0x41);\n                                    }\n                                    if (uVar4 == 0) {\n                                        in_R9 = ppiVar13;\n                                        if (*0x593680 == 0) {\n                                            *ppiVar13 = *(*0x20 + 0x18);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x68) = 0x4111d2;\n                                            fcn.0045c6e0();\n                                            unaff_RDI = ppiVar13;\n                                        }\n                                        goto code_r0x0041124e;\n                                    }\n                                }\n                            }\n                            else {\n                                if ((uVar8 < 2) && (unaff_RDI == NULL)) {\n                                    unaff_RDI = ppiVar9;\n                                    in_R8 = ppiVar12;\n                                }\n                                if (uVar8 == 0) goto code_r0x00411048;\n                            }\n                        }\n                        ppiVar12 = *(ppiVar9 + (*(iVar6 + 0x52) - 8));\n                    } while (ppiVar12 != NULL);\ncode_r0x00411048:\n                    if (piVar10[3] != 0) goto code_r0x004111d7;\n                    uVar8 = *(piVar10 + 9);\n                    if ((*piVar10 + 1U < 9) ||\n                       (uVar5 = 1 << (uVar8 & 0x3f), \n                       *piVar10 + 1U <= (uVar5 >> 1) * 5 + (uVar5 & 0xfffffffffffffffe) * 4)) {\n                        if (0xf < uVar8) {\n                            uVar8 = 0xf;\n                        }\n                        if (*(piVar10 + 10) < 1 << (uVar8 & 0xf)) goto code_r0x004111d7;\n                    }\n                    *(*0x20 + -0x68) = 0x410fc5;\n                    fcn.0040edc0();\n                    piVar10 = *(*0x20 + 0x10);\n                    uVar5 = *(*0x20 + -0x38);\n                    iVar6 = *(*0x20 + 8);\n                } while( true );\n            }\n            goto code_r0x0041128b;\n        }\n        goto code_r0x0041129c;\n    }\n    goto code_r0x004112b0;\ncode_r0x004111d7:\n    ppiVar12 = in_R8;\n    if (unaff_RDI == NULL) {\n        *(*0x20 + -0x68) = 0x4111ea;\n        unaff_RDI = fcn.0040d540(ppiVar9);\n        iVar6 = *(*0x20 + 8);\n        piVar10 = *(*0x20 + 0x10);\n        ppiVar12 = NULL;\n        uVar4 = *(*0x20 + -0x41);\n    }\n    *(unaff_RDI + (ppiVar12 & 7)) = uVar4;\n    ppiVar9 = unaff_RDI + ppiVar12 * 2 + 1;\n    arg1_00 = *(*0x20 + 0x20);\n    in_R9 = *(*0x20 + 0x18);\n    unaff_RDI[ppiVar12 * 2 + 2] = arg1_00;\n    if (*0x593680 == 0) {\n        *ppiVar9 = in_R9;\n        in_R8 = unaff_RDI;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x411245;\n        fcn.0045c780(arg1_00, iVar6, unaff_RDI);\n        in_R8 = unaff_RDI;\n    }\n    *piVar10 = *piVar10 + 1;\n    unaff_RDI = ppiVar9;\n    ppiVar9 = in_R8;\ncode_r0x0041124e:\n    uVar4 = *(iVar6 + 0x51);\n    uVar8 = *(piVar10 + 1);\n    arg1 = uVar8;\n    if ((uVar8 & 4) != 0) {\n        *(piVar10 + 1) = uVar8 & 0xfb;\n        return ppiVar9 + ppiVar12 * uVar4 + 0x88;\n    }\n    *(*0x20 + -0x68) = 0x41128b;\n    fcn.00433640();\ncode_r0x0041128b:\n    *(*0x20 + -0x68) = 0x41129c;\n    fcn.00433640();\ncode_r0x0041129c:\n    unaff_RBX = 0x4c9b70;\n    *(*0x20 + -0x68) = 0x4112af;\n    in_RAX = fcn.00432ec0();\ncode_r0x004112b0:\n    *(puVar11 + 8) = in_RAX;\n    *(puVar11 + 0x10) = unaff_RBX;\n    *(puVar11 + 0x18) = arg1;\n    *(puVar11 + 0x20) = unaff_RDI;\n    *(puVar11 + -8) = 0x4112c9;\n    fcn.0045a3a0();\n    in_RAX = *(puVar11 + 8);\n    unaff_RBX = *(puVar11 + 0x10);\n    arg1 = *(puVar11 + 0x18);\n    unaff_RDI = *(puVar11 + 0x20);\n    *0x20 = puVar11;\n    goto code_r0x00410f00;\n}\n",
        "token_count": 2679
    },
    "00411300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411300(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.004113a0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.004113a0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "004117c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004117c0(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x593684 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.00412240(in_RAX[1]);\n        }\n        fcn.0045d3c0(*in_RAX);\n        if (*0x593685 != '\\0') {\n            fcn.004045e0(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00411860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411860(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if ((((*0x593684 != '\\0') && (in_RAX != 0)) && (*(in_RAX + 8) != 0)) && (7 < unaff_RDI)) {\n        fcn.00412240(unaff_RDI);\n    }\n    fcn.0045d3c0(unaff_RDI);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        arg1_00 = iVar2 + uVar3 * -8;\n        if (arg1_00 < 0) {\n            fcn.00431c60();\n            break;\n        }\n        uVar4 = 1 << (arg1_00 & 0x1f) & -(arg1_00 < 0x20);\n        if ((uVar4 & *(unaff_RSI + 0x108 + uVar3)) != 0) {\n            if (*0x593680 == 0) {\n                *(unaff_RSI + 0xc0 + iVar2 * 8) = *(unaff_RSI + iVar2 * 8);\n            }\n            else {\n                fcn.0045c720(arg1_00, unaff_RSI, -(arg1_00 < 0x20), uVar4);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045ca80(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 431
    },
    "00411980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00411980(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x593685 != '\\0') {\n        fcn.00404680(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x593684 != '\\0') {\n            fcn.00412240((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045d3c0(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 224
    },
    "00411a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411a60(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x593684 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.00412240(in_RAX[1]);\n    }\n    fcn.0045d100(*in_RAX);\n    return;\n}\n",
        "token_count": 76
    },
    "00411c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411c80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00434e60();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n        else {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.00434e60();\n    }\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    if (arg1 != 0) goto code_r0x00411dd0;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00433640();\ncode_r0x00411dd0:\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00434e60();\n        fcn.0041d6c0(arg1);\n    } while( true );\n}\n",
        "token_count": 456
    },
    "00411ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00411ec0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x565870);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x5938c0 != 0) {\n                fcn.00411c80(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x5938c0 != 0)) {\n        fcn.00411c80(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 465
    },
    "004128c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004128c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x00412949;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x00412949:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cca0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042cca0();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 669
    },
    "00412a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412a60(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x593684 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1260);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1260) + 0x10;\n                            *(iVar1 + 0x1260) = iVar8;\n                            if (*(iVar1 + 0x1268) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042cca0();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00454ee0();\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            fcn.00433640();\n        }\n        fcn.00454ee0();\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004356e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.00435040();\n        fcn.00434e60();\n        fcn.00433640();\n    }\n    fcn.00433640();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 688
    },
    "00413aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413aa0(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x413b6c;\n                    arg3 = fcn.00413f40(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x413bc8;\n                        fcn.00434de0();\n                        *(*0x20 + -0x70) = 0x413bd9;\n                        fcn.004356e0();\n                        *(*0x20 + -0x70) = 0x413be5;\n                        fcn.004353e0();\n                        *(*0x20 + -0x70) = 0x413bf6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x70) = 0x413c05;\n                        fcn.004353e0();\n                        *(*0x20 + -0x70) = 0x413c0a;\n                        fcn.00435040();\n                        *(*0x20 + -0x70) = 0x413c0f;\n                        fcn.00434e60();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x413c25;\n                        uVar1 = fcn.00433640();\n                        goto code_r0x00413c25;\n                    }\ncode_r0x00413b85:\n                    *(*0x20 + -0x70) = 0x413bb4;\n                    fcn.0045d100(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = in_XMM15;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00413c25;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00413c25;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x00413d70:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x00413da5;\ncode_r0x00413d59:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x00413d70;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00413c25:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x00413d3f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00413d25;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x413ce7;\n                                        fcn.00413f40(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x00413b85;\n                                    }\n                                    *(*0x20 + -0x70) = 0x413d16;\n                                    fcn.0045ca80(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x413d25;\n                                fcn.0045ca80(0x28);\ncode_r0x00413d25:\n                                *(*0x20 + -0x70) = 0x413d32;\n                                fcn.0045ca80(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x413d3f;\n                            fcn.0045ca80(0x28);\ncode_r0x00413d3f:\n                            *(*0x20 + -0x70) = 0x413d4c;\n                            fcn.0045ca80(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x413d59;\n                        uVar1 = fcn.0045ca80(0x28);\n                        goto code_r0x00413d59;\n                    }\n                    *(*0x20 + -0x70) = 0x413da5;\n                    fcn.0045ca80(0x28);\ncode_r0x00413da5:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x413db2;\n                    fcn.0045ca80(0x28);\n                }\n                *(*0x20 + -0x70) = 0x413db7;\n                fcn.00431cc0();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x413dc8;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x413df9;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2451
    },
    "00413f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.00413f40(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    int64_t unaff_RDI;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    \n    puVar11 = NULL;\n    puVar7 = arg1;\n    puVar8 = arg1;\n    puVar6 = NULL;\ncode_r0x00414112:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar6; puVar6 = puVar6 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar7 = puVar11;\n                    puVar7 = puVar7 + 1;\n                }\n                else {\n                    *puVar7 = puVar11 & 0xf | 0xf0;\n                    puVar7[1] = puVar11 >> 4 & 0xf | 0xf0;\n                    puVar7 = puVar7 + 2;\n                }\n                puVar11 = puVar11 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar15 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar4 = puVar6;\n            if (uVar1 < '\\0') break;\n            if (puVar15 == NULL) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar14 = (puVar7 - puVar8) * 8;\n                        for (puVar8 = puVar6 + (-puVar6 & 7); puVar8 != NULL; puVar8 = puVar8 + -8) {\n                            *puVar7 = puVar11;\n                            puVar11 = puVar11 >> 8;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    else {\n                        iVar14 = (puVar7 - puVar8) * 4;\n                        for (puVar8 = puVar6 + (-puVar6 & 3); puVar8 != NULL; puVar8 = puVar8 + -4) {\n                            *puVar7 = puVar11 & 0xf | 0xf0;\n                            puVar11 = puVar11 >> 4;\n                            puVar7 = puVar7 + 1;\n                        }\n                    }\n                    return puVar6 + iVar14;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar3 = 0; uVar3 < (uVar1 & 0x7f) >> 3; uVar3 = uVar3 + 1) {\n                    uVar13 = puVar11 | *in_RAX << (uVar4 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar7 = uVar13;\n                        puVar7 = puVar7 + 1;\n                    }\n                    else {\n                        *puVar7 = uVar13 & 0xf | 0xf0;\n                        puVar7[1] = uVar13 >> 4 & 0xf | 0xf0;\n                        puVar7 = puVar7 + 2;\n                    }\n                    puVar11 = uVar13 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar1 & 7) != 0) {\n                    puVar11 = puVar11 | *in_RAX << (uVar4 & 0x3f);\n                    puVar6 = puVar6 + (uVar1 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if (puVar15 == NULL) {\n            uVar3 = 0;\n            while( true ) {\n                uVar1 = *in_RAX;\n                puVar15 = puVar15 | (uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar1) break;\n                uVar3 = uVar3 + 7;\n            }\n        }\n        uVar13 = 0;\n        uVar3 = 0;\n        while( true ) {\n            uVar1 = *in_RAX;\n            uVar13 = uVar13 | -(uVar3 < 0x40) & (uVar1 & 0x7f) << (uVar3 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar3 = uVar3 + 7;\n        }\n        puVar2 = uVar13 * puVar15;\n        if (puVar15 < 0x3a) break;\n        iVar14 = puVar15 - puVar6;\n        if (unaff_RDI == 1) {\n            uVar3 = iVar14 & 7;\n            puVar15 = puVar7 + -(iVar14 + 7U >> 3);\n            if (uVar3 != 0) {\n                puVar11 = puVar11 | (*puVar15 >> (-(uVar3 - 8) & 0x3f) & -(-(uVar3 - 8) < 0x40)) << (uVar4 & 0x3f);\n                puVar6 = puVar6 + uVar3;\n                puVar2 = puVar2 + -uVar3;\n                puVar15 = puVar15 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar3 = puVar2 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar13 = puVar11 | *puVar15 << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13;\n                puVar11 = uVar13 >> 8;\n                puVar15 = puVar15 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar5 = puVar2 & 7;\n            if (uVar5 != 0) {\n                puVar11 = puVar11 | ((1 << uVar5) - 1U & *puVar15) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar5;\n            }\n        }\n        else {\n            uVar3 = iVar14 & 3;\n            puVar15 = puVar7 + -(iVar14 + 3U >> 2);\n            if (uVar3 != 0) {\n                puVar11 = puVar11 | ((*puVar15 & 0xf) >> (-(uVar3 - 4) & 0x3f) & -(-(uVar3 - 4) < 0x40)) <<\n                                    (uVar4 & 0x3f);\n                puVar6 = puVar6 + uVar3;\n                puVar2 = puVar2 + -uVar3;\n                puVar15 = puVar15 + 1;\n                puVar8 = arg1;\n            }\n            for (uVar3 = puVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n                uVar13 = puVar11 | (*puVar15 & 0xf) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                *puVar7 = uVar13 & 0xf | 0xf0;\n                puVar11 = uVar13 >> 4;\n                puVar15 = puVar15 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uVar5 = puVar2 & 3;\n            if (uVar5 != 0) {\n                puVar11 = puVar11 | ((1 << uVar5) - 1U & *puVar15) << (puVar6 & 0x3f) & -(puVar6 < 0x40);\n                puVar6 = puVar6 + uVar5;\n            }\n        }\n    }\n    puVar10 = puVar6;\n    puVar12 = puVar11;\n    puVar16 = puVar7;\n    if (unaff_RDI != 1) {\n        do {\n            puVar16 = puVar16 + -1;\n            puVar9 = puVar6;\n            if (puVar15 <= puVar10) goto code_r0x004142c5;\n            puVar10 = puVar10 + 4;\n            puVar12 = puVar12 << 4 | *puVar16 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar16 = puVar16 + -1;\n        puVar9 = puVar6;\n        if (puVar15 <= puVar10) {\ncode_r0x004142c5:\n            puVar6 = puVar10;\n            if (puVar15 < puVar10) {\n                puVar16 = -(puVar10 - puVar15 < 0x40);\n                puVar12 = puVar12 >> (puVar10 - puVar15 & 0x3f) & puVar16;\n                puVar6 = puVar15;\n            }\n            if (puVar6 == 0x1) {\n                puVar6 = puVar2;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x0041432e;\n            }\n            puVar10 = puVar6 * 2;\n            puVar15 = puVar6;\n            if (0x39 < puVar10) goto code_r0x0041432e;\n            for (; puVar15 < 0x41; puVar15 = puVar15 * 2) {\n                puVar10 = puVar12;\n                puVar12 = puVar12 << (puVar15 & 0x3f) & -(puVar15 < 0x40) | puVar12;\n                puVar16 = puVar6;\n            }\n            if (puVar6 != NULL) break;\n            puVar2 = fcn.00431cc0();\n        }\n        puVar10 = puVar10 + 8;\n        puVar12 = puVar12 << 8 | *puVar16;\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar12 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\ncode_r0x0041432e:\n    while (puVar6 <= puVar2) {\n        puVar11 = puVar11 | puVar12 << (puVar9 & 0x3f) & -(puVar9 < 0x40);\n        puVar9 = puVar6 + puVar9;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar9; puVar9 = puVar9 + -8) {\n                *puVar7 = puVar11;\n                puVar11 = puVar11 >> 8;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar9; puVar9 = puVar9 + -4) {\n                *puVar7 = puVar11 & 0xf | 0xf0;\n                puVar11 = puVar11 >> 4;\n                puVar7 = puVar7 + 1;\n            }\n        }\n        puVar2 = puVar2 + -puVar6;\n    }\n    puVar6 = puVar9;\n    if (puVar2 != NULL) {\n        puVar11 = puVar11 | (puVar12 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar9 & 0x3f) &\n                            -(puVar9 < 0x40);\n        puVar6 = puVar9 + puVar2;\n    }\n    goto code_r0x00414112;\n}\n",
        "token_count": 2901
    },
    "00414660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00414660(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x414740);\n    fcn.0045a260();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x593a80;\n    }\n    if (*0x593498 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040cf00();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 246
    },
    "00415020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415146)\n\nint64_t fcn.00415020(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t *in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint64_t noname_1;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x415066;\n                fcn.00422bc0();\n                if (*0x545610 != '\\0') {\n                    *(*0x20 + -0x58) = 0x415074;\n                    fcn.004504c0();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar5 = *0x565810 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar5;\n                *(*0x20 + -0x10) = uVar5 * 5;\n                *(*0x20 + -0x58) = 0x4150ab;\n                iVar1 = fcn.0042c5a0();\n                if (iVar1 != 0) {\n                    cVar4 = '\\0';\n                    goto code_r0x004150b4;\n                }\ncode_r0x00415129:\n                uVar5 = *0x53f81c & 0x80000000;\n                if (uVar5 == 0) {\n                    *0x53f81c = *0x53f81c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x565810;\n                *(*0x20 + -0x2c) = uVar5 == 0;\n                if (uVar5 == 0) {\n                    uVar5 = *(*0x20 + -0x3c);\n                    iVar1 = 100;\n                    while (noname_1 = uVar5,  -1 < iVar1) {\n                        if (1 < -(uVar5 - 1)) goto code_r0x00415356;\n                        *(*0x20 + -0x38) = iVar1;\n                        *(*0x20 + -0x58) = 0x4151c5;\n                        iVar1 = fcn.0042c5a0();\n                        if (iVar1 == 0) {\n                            iVar1 = *(*0x20 + -0x38);\n                            noname_1 = *(*0x20 + -0x3c);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar1;\n                        *(*0x20 + -0x58) = 0x4151dc;\n                        uVar2 = fcn.00421840();\n                        *(*0x20 + -0x20) = uVar2;\n                        if (iVar1 != '\\0') {\n                            *(*0x20 + -0x58) = 0x4151f4;\n                            fcn.00421d00();\n                            *(*0x20 + -0x58) = 0x415209;\n                            fcn.00421400();\n                            cVar4 = '\\0';\n                            iVar1 = *(*0x20 + -0x18);\n                            goto code_r0x004150b4;\n                        }\n                        uVar5 = *(*0x20 + -0x3c);\n                        iVar1 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar1 < 0) goto code_r0x004152fb;\n                        uVar6 = -(noname_1 + -1);\n                        if (1 < uVar6) {\n                            *(*0x20 + -0x58) = 0x415356;\n                            fcn.0045ca80(2);\ncode_r0x00415356:\n                            *(*0x20 + -0x58) = 0x415365;\n                            fcn.0045ca80(2);\n                            goto code_r0x00415365;\n                        }\n                        *(*0x20 + -0x38) = iVar1;\n                        iVar1 = uVar6 * 5;\n                        *(*0x20 + -0x58) = 0x41526e;\n                        iVar3 = fcn.0042c5a0();\n                        if (iVar3 == 0) goto code_r0x004152fb;\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x58) = 0x415289;\n                        uVar2 = fcn.00421840();\n                        *(*0x20 + -0x28) = uVar2;\n                        if (iVar3 == '\\0') goto code_r0x00415225;\n                        *(*0x20 + -0x58) = 0x4152a5;\n                        fcn.00421d00();\n                        *(*0x20 + -0x58) = 0x4152af;\n                        iVar1 = fcn.00411b20(iVar1, noname_1, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar1) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar1;\n                            *(*0x20 + -0x58) = 0x4152ef;\n                            fcn.00421400();\n                            cVar4 = '\\0';\n                            iVar1 = *(*0x20 + -0x18);\n                            goto code_r0x004150b4;\n                        }\n                        *(*0x20 + -0x58) = 0x4152d1;\n                        fcn.0042c400();\ncode_r0x00415225:\n                        iVar1 = *(*0x20 + -0x38) + -1;\n                        noname_1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x00415310;\n            }\ncode_r0x00415365:\n            *(*0x20 + -0x58) = 0x415372;\n            in_RAX = fcn.0045ca80(0x44);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41537d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x004152fb:\n    *(*0x20 + -0x58) = 0x415310;\n    fcn.00421400();\ncode_r0x00415310:\n    *(*0x20 + -0x3d) = *0x545610;\n    if (*0x545610 != '\\0') {\n        *(*0x20 + -0x58) = 0x415325;\n        fcn.004505c0();\n    }\n    *(*0x20 + -0x58) = 0x41532f;\n    iVar1 = fcn.004154a0();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    cVar4 = *(*0x20 + -0x3d);\ncode_r0x004150b4:\n    *(*0x20 + -0x18) = iVar1;\n    if ((*0x545610 != '\\0') && (cVar4 == '\\0')) {\n        *(*0x20 + -0x58) = 0x4150cb;\n        fcn.004505c0();\n        iVar1 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar1 + 0x38) != *(iVar1 + 0x60)) && (*(iVar1 + 0x30) != *(iVar1 + 0x38))) {\n        *(*0x20 + -0x58) = 0x4150f3;\n        fcn.00411b00();\n        iVar1 = *(*0x20 + -0x18);\n        *(iVar1 + 0x40) = *(iVar1 + 0x40) >> (*(iVar1 + 0x30) & 0x3f);\n        return iVar1;\n    }\n    *(*0x20 + -0x58) = 0x415128;\n    fcn.00433640();\n    goto code_r0x00415129;\n}\n",
        "token_count": 2036
    },
    "004153a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004153a0(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x565810;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x565810 + 1) {\n                    *(unaff_RBX + 0x58) = *0x565810 - 1;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x415449;\n                    fcn.00421d00();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x565810;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x41542d;\n                        fcn.0042c400((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x415413;\n                        fcn.0042c400((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x415465;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x415475;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 585
    },
    "00415a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415a40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x415a85;\n            fcn.00430a80();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x415b30;\n                        fcn.00430a80();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x415b6e;\n            fcn.0045df00();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x415b8f;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x415ba5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x415baf;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x415bc5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x415bcf;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x415bd4;\n            fcn.00435040();\n            *(*0x20 + -0x58) = 0x415bd9;\n            fcn.00434e60();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x415bea;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x415bfa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1122
    },
    "00415c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00415c20(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x415c6e;\n            fcn.00430b00();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x415d25;\n                        fcn.00430b00();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x415d73;\n            fcn.0045df00();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00415de9;\n            do {\n                *(*0x20 + -0x60) = 0x415d98;\n                fcn.00434de0();\n                *(*0x20 + -0x60) = 0x415da9;\n                fcn.004356e0();\n                *(*0x20 + -0x60) = 0x415db3;\n                fcn.004353e0();\n                *(*0x20 + -0x60) = 0x415dc5;\n                fcn.004356e0();\n                *(*0x20 + -0x60) = 0x415dce;\n                fcn.004353e0();\n                *(*0x20 + -0x60) = 0x415dd3;\n                fcn.00435040();\n                *(*0x20 + -0x60) = 0x415dd8;\n                fcn.00434e60();\n                *(*0x20 + -0x60) = 0x415de9;\n                iVar1 = fcn.00433640();\ncode_r0x00415de9:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x415df5;\n            fcn.00434de0();\n            *(*0x20 + -0x60) = 0x415e06;\n            fcn.004356e0();\n            *(*0x20 + -0x60) = 0x415e10;\n            fcn.004353e0();\n            *(*0x20 + -0x60) = 0x415e25;\n            fcn.004356e0();\n            *(*0x20 + -0x60) = 0x415e2e;\n            fcn.004353e0();\n            *(*0x20 + -0x60) = 0x415e33;\n            fcn.00435040();\n            *(*0x20 + -0x60) = 0x415e38;\n            fcn.00434e60();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x415e49;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x415e59;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1484
    },
    "00415e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415e80(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iStack24;\n    \n    fcn.0042c9a0();\n    fcn.00430a80();\n    if (iStack24 != 0) {\n        return;\n    }\n    fcn.0045df00();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00433640();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 166
    },
    "00416120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416120(ulong arg1)\n\n{\n    ulong *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \ncode_r0x00416120:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x59344c == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x41616d;\n            fcn.0040ac20();\n            if ((*0x593520 != NULL) && (*(*0x593520 + 2) != 0x65)) goto code_r0x004161ef;\n            if (*0x593510 != NULL) goto code_r0x004161cb;\n            *(*0x20 + -0x28) = 0x41619c;\n            *0x593510 = fcn.0040d060(0x595118);\n            **0x593510 = *0x5934a0;\n            *0x5934a0 = *0x593510;\n            if (*0x593800 != '\\0') goto code_r0x004161cb;\n            iVar3 = 0;\n            do {\n                if (iVar3 < 0x40) {\n                    uVar2 = iVar3 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 2) * -5\n                    ;\n                    if (4 < uVar2) goto code_r0x00416326;\n                }\n                else {\ncode_r0x004161cb:\n                    puVar1 = *0x593510;\n                    puVar4 = *0x593510 + 1;\n                    *0x593510 = (*0x593510)[1];\n                    *puVar4 = *0x593520;\n                    *0x593520 = puVar1;\ncode_r0x004161ef:\n                    puVar4 = *0x593520;\n                    uVar2 = *(*0x593520 + 2);\n                    if (uVar2 < 0x65) {\n                        LOCK();\n                        *(*0x593520 + 2) = *(*0x593520 + 2) + 1;\n                        iVar3 = uVar2 * 5;\n                        if (*0x593680 == 0) {\n                            puVar4[uVar2 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x416258;\n                            fcn.0045c780(iVar3, puVar4, puVar4 + uVar2 * 5 + 4);\n                        }\n                        puVar4[iVar3 + 5] = *(*0x20 + 0x18);\n                        if (*0x593680 == 0) {\n                            puVar4[iVar3 + 6] = *(*0x20 + 0x20);\n                            puVar4[iVar3 + 7] = *(*0x20 + 0x28);\n                            puVar4[iVar3 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x416298;\n                            fcn.0045c6e0(*(*0x20 + 0x20));\n                            *(*0x20 + -0x28) = 0x4162a5;\n                            fcn.0045c6e0(*(*0x20 + 0x28));\n                            *(*0x20 + -0x28) = 0x4162b2;\n                            fcn.0045c6e0(*(*0x20 + 8));\n                        }\n                        *0x593407 = 1;\n                        *(*0x20 + -0x28) = 0x4162c7;\n                        fcn.0040ae40();\n                        return;\n                    }\n                    iVar3 = 0x65;\n                    *(*0x20 + -0x28) = 0x4162db;\n                    uVar2 = fcn.0045ca80(0x65);\n                }\n                unaff_RSI = 0x593800;\n                *(iVar3 + 0x593800) = *(uVar2 + 0x527290);\n                iVar3 = iVar3 + 1;\n            } while( true );\n        }\n        goto code_r0x00416330;\n    }\n    goto code_r0x00416346;\ncode_r0x00416326:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x416330;\n    fcn.0045ca80(5);\ncode_r0x00416330:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x416345;\n    in_RAX = fcn.00433640();\ncode_r0x00416346:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x416365;\n    fcn.0045a3a0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x00416120;\n}\n",
        "token_count": 1494
    },
    "004163a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004163a0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if ((*0x593406 == '\\0') || (*0x593407 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x593406 = '\\0';\n        *0x593407 = '\\0';\n        uVar1 = *0x53ecc8;\n    }\n    fcn.0040ae40();\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "00416420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041644c)\n\nvoid fcn.00416420(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593438 == 0) {\n        LOCK();\n        *0x593438 = 1;\n        fcn.0043e020();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "004168e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416d1c)\n\nvoid fcn.004168e0(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    uint64_t arg1_00;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t iVar11;\n    int64_t iVar12;\n    ulong unaff_RDI;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (*0x5938ec != 0) {\n                return;\n            }\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 != 0) {\n                uVar8 = *(iVar4 + 0x17) & 0x1f;\n                uVar3 = uVar8;\n                if (uVar8 == '\\x16') {\n                    if (*(iVar4 + 0x30) != 0) {\n                        *(*0x20 + -0x58) = iVar4;\n                        uVar5 = 0;\n                        *(*0x20 + -0xd8) = 0x416978;\n                        uVar3 = fcn.00411ec0(0);\n                        if (uVar3 != 0) {\n                            uVar7 = *(*0x20 + 0x10);\n                            if (uVar3 == uVar7) {\n                                iVar4 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                iVar4 = *(*0x20 + -0x58);\n                                puVar1 = *(iVar4 + 0x30);\n                                if (((puVar1 == NULL) || (puVar1[1] != 0)) || (0xf < *puVar1)) goto code_r0x00416e1d;\n                            }\n                            iVar11 = *(*0x20 + 0x18);\n                            if (iVar11 == 0) {\n                                *(*0x20 + -0x48) =\n                                     CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                *(*0x20 + -0x48) = 0x416fa0;\n                                *(*0x20 + -0x40) = *0x20 + 8;\n                                *(*0x20 + -0xd0) = *0x20 + -0x48;\n                                *(*0x20 + -0xd8) = 0x416ba5;\n                                fcn.0045a260();\n                                return;\n                            }\n                            if ((*(iVar11 + 0x17) & 0x1f) == 0x13) {\n                                *(*0x20 + -0x68) = iVar11;\n                                if ((*(iVar11 + 0x32) & 0x8000) == 0) {\n                                    if (*(iVar11 + 0x30) == 1) {\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            uVar3 = 0x38;\n                                        }\n                                        else {\n                                            uVar3 = 0x48;\n                                        }\n                                        iVar9 = *(iVar11 + uVar3);\n                                        *(*0x20 + -0x60) = iVar9;\n                                        if (iVar9 != iVar4) {\n                                            uVar13 = *(iVar9 + 0x17) & 0x1f;\n                                            if (uVar13 == 0x16) {\n                                                *(*0x20 + -0xd8) = 0x416aca;\n                                                iVar4 = fcn.00454f80();\n                                                if (iVar4 == 0) {\n                                                    bVar14 = true;\n                                                }\n                                                else {\n                                                    *(*0x20 + -0xd8) = 0x416ae5;\n                                                    iVar4 = fcn.00454f80();\n                                                    bVar14 = iVar4 == 0;\n                                                }\n                                                if (!bVar14) goto code_r0x00416cba;\n                                                uVar7 = *(*0x20 + -0x60);\n                                                uVar3 = *(uVar7 + 0x30);\n                                                if (*(*(*0x20 + -0x58) + 0x30) != uVar3) goto code_r0x00416cba;\n                                                iVar11 = *(*0x20 + -0x68);\n                                            }\n                                            else {\n                                                if (uVar13 != 0x14) goto code_r0x00416cba;\n                                                if (*(iVar9 + 0x40) != 0) {\n                                                    uVar3 = *(*0x20 + 8);\n                                                    *(*0x20 + -0xd8) = 0x416aa8;\n                                                    iVar4 = fcn.0040a860(uVar7);\n                                                    if (iVar4 == 0) goto code_r0x00416cba;\n                                                    iVar11 = *(*0x20 + -0x68);\n                                                }\n                                            }\n                                        }\n                                        if ((*(iVar11 + 0x14) & 1) == 0) {\n                                            iVar4 = 0x38;\n                                        }\n                                        else {\n                                            iVar4 = 0x48;\n                                        }\n                                        uVar3 = *(iVar11 + 0x30);\n                                        uVar7 = (*(iVar11 + 0x32) & 0x7fff) + *(iVar11 + 0x30);\n                                        arg1_00 = uVar7 & 0xffff;\n                                        if (uVar3 <= arg1_00) {\n                                            iVar12 = 0;\n                                            for (iVar9 = 0; iVar9 < arg1_00 - uVar3; iVar9 = iVar9 + 1) {\n                                                piVar2 = *(iVar11 + iVar4 + (uVar3 << 3 & uVar3 - 0x100000 >> 0x3f) +\n                                                          iVar9 * 8);\n                                                uVar7 = *(piVar2 + 0x15);\n                                                iVar12 = ((iVar12 + uVar7) - 1 & -uVar7) + *piVar2;\n                                            }\n                                            *(*0x20 + -0x78) = iVar12;\n                                            *(*0x20 + -0xd8) = 0x416c05;\n                                            fcn.00416420();\n                                            *(*0x20 + -0x38) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x28) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x18) =\n                                                 CONCAT412(in_XMM15_Dd, \n                                                           CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                            *(*0x20 + -0x38) = 0x416f40;\n                                            *(*0x20 + -0x30) = *0x20 + 8;\n                                            *(*0x20 + -0x28) = *0x20 + 0x18;\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                                            *(*0x20 + -0xd0) = *0x20 + -0x38;\n                                            *(*0x20 + -0xd8) = 0x416c8f;\n                                            fcn.0045a260();\n                                            return;\n                                        }\n                                        *(*0x20 + -0xd8) = 0x416cba;\n                                        fcn.0045cb40(arg1_00);\ncode_r0x00416cba:\n                                        do {\n                                            *(*0x20 + -0xd8) = 0x416cbf;\n                                            uVar5 = fcn.00454ee0();\n                                            *(*0x20 + -0x50) = uVar5;\n                                            *(*0x20 + -0x70) = uVar3;\n                                            *(*0x20 + -0xd8) = 0x416cd6;\n                                            fcn.00454ee0();\n                                            uVar3 = 0x4ad608;\n                                            *(*0x20 + -0xd8) = 0x416d09;\n                                            fcn.00448d40(0x22, uVar7, 0x4a8374, 0xe);\n                                            *(*0x20 + -0xd8) = 0x416d0e;\n                                            fcn.00433640();\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0xd8) = 0x416d2a;\n                                    uVar5 = fcn.00454ee0();\n                                    *(*0x20 + -0x50) = uVar5;\n                                    *(*0x20 + -0x70) = 0;\n                                    *(*0x20 + -0xd8) = 0x416d45;\n                                    fcn.00454ee0();\n                                    uVar5 = 0x4ad608;\n                                    *(*0x20 + -0xd8) = 0x416d78;\n                                    fcn.00448d40(0x22, uVar7, 0x4a8374, 0xe);\n                                    *(*0x20 + -0xd8) = 0x416d7d;\n                                    fcn.00433640();\n                                }\n                                *(*0x20 + -0xd8) = 0x416d85;\n                                uVar6 = fcn.00454ee0();\n                                *(*0x20 + -0x50) = uVar6;\n                                *(*0x20 + -0x70) = uVar5;\n                                *(*0x20 + -0xd8) = 0x416d9c;\n                                fcn.00454ee0();\n                                *(*0x20 + -0xd0) = 0x4a90dd;\n                                *(*0x20 + -200) = 0x12;\n                                *(*0x20 + -0xd8) = 0x416de5;\n                                fcn.00448e40(0x22, uVar7, 0x4a8374, 0xe);\n                                *(*0x20 + -0xd8) = 0x416dea;\n                                fcn.00433640();\n                            }\n                            *(*0x20 + -0xd8) = 0x416df2;\n                            fcn.00454ee0();\n                            *(*0x20 + -0xd8) = 0x416e18;\n                            fcn.00448c60(0x29, uVar7, 0x4a8994, 0x10);\n                            *(*0x20 + -0xd8) = 0x416e1d;\n                            fcn.00433640();\ncode_r0x00416e1d:\n                            *(*0x20 + -0xd8) = 0x416e2e;\n                            iVar4 = fcn.00433640();\n                            goto code_r0x00416e2e;\n                        }\n                        uVar7 = *(*0x20 + 0x10);\n                        if (uVar7 == 0x593618) {\n                            return;\n                        }\n                        uVar3 = 0x593618;\n                        for (iVar4 = 0x52cb00; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n                            if (((((*(iVar4 + 0xc0) < uVar7 || *(iVar4 + 0xc0) == uVar7) &&\n                                  (uVar7 <= *(iVar4 + 200) && *(iVar4 + 200) != uVar7)) ||\n                                 ((*(iVar4 + 0xd0) < uVar7 || *(iVar4 + 0xd0) == uVar7 &&\n                                  (uVar7 <= *(iVar4 + 0xd8) && *(iVar4 + 0xd8) != uVar7)))) ||\n                                ((*(iVar4 + 0xe0) < uVar7 || *(iVar4 + 0xe0) == uVar7 &&\n                                 (uVar7 <= *(iVar4 + 0xe8) && *(iVar4 + 0xe8) != uVar7)))) ||\n                               ((*(iVar4 + 0xf0) < uVar7 || *(iVar4 + 0xf0) == uVar7 &&\n                                (uVar7 <= *(iVar4 + 0xf8) && *(iVar4 + 0xf8) != uVar7)))) {\n                                return;\n                            }\ncode_r0x00416e2e:\n                            uVar3 = uVar7;\n                        }\n                        *(*0x20 + -0xd8) = 0x416eb3;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0xd8) = 0x416ec5;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0xd8) = 0x416eca;\n                unaff_RDI = fcn.00454ee0();\n                arg1 = 0x28;\n                *(*0x20 + -0xd8) = 0x416ef0;\n                fcn.00448c60(0x28, uVar3, 0x4a8126, 0xd);\n                *(*0x20 + -0xd8) = 0x416ef5;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0xd8) = 0x416f06;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x416f25;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3481
    },
    "00416fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416fe0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x593680 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x41703f;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.0045c6e0();\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x417048;\n                    in_RAX = fcn.0045c760(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x593680 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x41708d;\n                        fcn.0045c740(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4170a5;\n                fcn.00431cc0();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x4170b6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x4170d5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 918
    },
    "00417100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00417100(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x417156;\n                        fcn.0045d100();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x417186;\n                    uVar3 = fcn.0040d060(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x4171b6;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x4171e6;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x4171f7;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x4171fc;\n            fcn.00434e60();\n            *(*0x20 + -0x38) = 0x41720d;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x417218;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 833
    },
    "00417300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417300(void)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.00404e00();\n    puVar2 = fcn.0040cd00();\n    *puVar2 = 0x417460;\n    if (*0x593680 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045c6e0(uVar1);\n    }\n    fcn.0043e020();\n    puVar2 = fcn.0040cd00();\n    *puVar2 = 0x417400;\n    if (*0x593680 == 0) {\n        puVar2[1] = uVar1;\n    }\n    else {\n        fcn.0045c6e0(uVar1);\n    }\n    fcn.0043e020();\n    fcn.00405d20();\n    fcn.00405d20();\n    *0x596148 = 1;\n    return;\n}\n",
        "token_count": 286
    },
    "004175c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00417a9a)\n// WARNING: Removing unreachable block (ram,0x00417ab1)\n\nvoid fcn.004175c0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x38) = unaff_RBX;\n            *(*0x20 + -0x4c) = arg1;\n            while( true ) {\n                if (((*0x596148 == '\\0') || (*0x593468 != 0)) || (*0x59344c != 0)) {\n                    bVar7 = false;\n                }\n                else if (in_RAX == 0) {\n                    bVar7 = *0x593cf8 <= *0x593d58;\n                }\n                else if (in_RAX == 1) {\n                    if (*0x593ce0 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x5967b8 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x527378 < unaff_RBX - *0x5967b8;\n                    }\n                }\n                else if (in_RAX == 2) {\n                    bVar7 = 0 < arg1 - *0x53fb38;\n                }\n                else {\n                    bVar7 = true;\n                }\n                if (bVar7) {\n                    *(*0x20 + -0x80) = 0x41773a;\n                    iVar5 = fcn.00421940();\n                    bVar7 = iVar5 != -1;\n                    arg1._0_4_ = *(*0x20 + -0x4c);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    in_RAX = *(*0x20 + -0x30);\n                }\n                else {\n                    bVar7 = false;\n                }\n                if (!bVar7) break;\n                *0x53f814 = *0x53f814 + 1;\n            }\n            *(*0x20 + -0x80) = 0x41776c;\n            fcn.00443640(0);\n            if (((*0x596148 == '\\0') || (*0x593468 != 0)) || (*0x59344c != 0)) {\n                iVar5 = *(*0x20 + -0x30);\n                bVar7 = false;\n            }\n            else {\n                iVar5 = *(*0x20 + -0x30);\n                if (iVar5 == 0) {\n                    bVar7 = *0x593cf8 <= *0x593d58;\n                }\n                else if (iVar5 == 1) {\n                    if (*0x593ce0 < 0) {\n                        bVar7 = false;\n                    }\n                    else if (*0x5967b8 == 0) {\n                        bVar7 = false;\n                    }\n                    else {\n                        bVar7 = *0x527378 < *(*0x20 + -0x38) - *0x5967b8;\n                    }\n                }\n                else if (iVar5 == 2) {\n                    bVar7 = 0 < *(*0x20 + -0x4c) - *0x53fb38;\n                }\n                else {\n                    bVar7 = true;\n                }\n            }\n            if (!bVar7) {\n                *(*0x20 + -0x80) = 0x4178de;\n                fcn.00443980(0);\n                return;\n            }\n            *0x53faf8 = iVar5 == 2;\n            if (*0x5938b8 == 1) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n                if (*0x5938b8 == 2) {\n                    uVar4 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x80) = 0x417865;\n            fcn.00443640(0);\n            *(*0x20 + -0x80) = 0x417878;\n            fcn.00443640(0);\n            if (*0x545610 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x545640;\n                *(*0x20 + -0x80) = 0x4178b4;\n                fcn.0044f540(*0x20 + -0x28);\n                *0x545640 = *0x545640 + 1;\n            }\n            iVar5 = 0;\n            while( true ) {\n                if (*0x53f648 <= iVar5) {\n                    *(*0x20 + -0x80) = 0x417912;\n                    fcn.00419220();\n                    *(*0x20 + -0x78) = 0x4b0fa0;\n                    *(*0x20 + -0x80) = 0x417925;\n                    fcn.0045a260();\n                    *0x53fb3c = *0x593450;\n                    *0x53fb40 = *0x593450;\n                    if (*0x593454 < *0x593450) {\n                        *0x53fb3c = *0x593454;\n                    }\n                    *0x53fb78 = *0x593d58;\n                    *0x53fb68 = 0;\n                    *0x53faf0 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x80) = 0x417985;\n                    fcn.0045e360();\n                    *0x53fb48 = *(*0x20 + -0x78);\n                    *(*0x20 + -0x48) = *0x53fb48;\n                    *0x53fb70 = *0x53fb48;\n                    if (*0x545610 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x80) = 0x4179ea;\n                        fcn.0044f540(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x78) = 0x4b1108;\n                    *(*0x20 + -0x80) = 0x4179fa;\n                    fcn.0045a260();\n                    *(*0x20 + -0x78) = 0x4b0fa8;\n                    *(*0x20 + -0x80) = 0x417a1e;\n                    fcn.0045a260();\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417a37;\n                    fcn.0041a0a0();\n                    *0x53fb38 = *0x53fb38 + 1;\n                    *(*0x20 + -0x80) = 0x417a55;\n                    fcn.0041dd00(*0x593450);\n                    *0x53fb90 = *0x593d48;\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x80) = 0x417a74;\n                        fcn.004414a0();\n                    }\n                    *0x59344c = 1;\n                    *0x593684 = 1;\n                    *0x593680 = 1;\n                    *0x53fa70 = 0xffffffff;\n                    *0x53fa80 = 0xffffffff;\n                    *(*0x20 + -0x80) = 0x417ad8;\n                    fcn.0041a400();\n                    *(*0x20 + -0x80) = 0x417add;\n                    fcn.0041dc20();\n                    *0x593444 = 1;\n                    piVar1 = *(iVar5 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar5 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar11, CONCAT48(uVar10, CONCAT44(uVar9, uVar8)));\n                    *(*0x20 + -0x18) = 0x417c80;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x78) = *0x20 + -0x18;\n                    *(*0x20 + -0x80) = 0x417b29;\n                    fcn.0045a260();\n                    iVar5 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x80) = 0x417b4e;\n                    fcn.00443980(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar7 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar7 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar7) {\n                        *(*0x20 + -0x80) = 0x417ba5;\n                        fcn.0045a1e0();\n                    }\n                    *(*0x20 + -0x80) = 0x417bb6;\n                    fcn.00443980(0);\n                    return;\n                }\n                piVar1 = *(*0x53f640 + iVar5 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x565810) break;\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x565810;\n            *(*0x20 + -0x38) = *piVar1;\n            *(*0x20 + -0x80) = 0x417bd6;\n            iVar5 = *0x53f648;\n            fcn.00434de0();\n            arg1._0_4_ = iVar5;\n            *(*0x20 + -0x80) = 0x417be7;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x417bf1;\n            fcn.004354e0();\n            *(*0x20 + -0x80) = 0x417c05;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x417c10;\n            fcn.004353e0();\n            *(*0x20 + -0x80) = 0x417c25;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x417c2e;\n            fcn.004353e0();\n            *(*0x20 + -0x80) = 0x417c33;\n            fcn.00435040();\n            *(*0x20 + -0x80) = 0x417c38;\n            fcn.00434e60();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x80) = 0x417c49;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x417c5d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_4_ = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3305
    },
    "00417fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00417fe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    uchar *arg1;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443640(0);\n    while ((*0x59344c == 1 && (*0x53fa70 == *0x53fa80))) {\n        if (*0x53f9e0 == 0) {\n            if (*0x53fa68 < *0x53fa6c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        fcn.00443640(0);\n        *0x593448 = 0;\n        fcn.0045a260();\n        if (*0x593448 == 0) {\n            fcn.0045e360();\n            uVar3 = 0x4b0f68;\n            *0x53fb58 = 0x4b0f68;\n            *0x53fb70 = 0x4b0f68;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x593680 == 0) {\n                arg2 = 0x4a6d0b;\n                *(iVar1 + 200) = 0x4a6d0b;\n            }\n            else {\n                arg2 = 0x4a6d0b;\n                uVar3 = fcn.0045c700(iVar1, 0x4a6d0b, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x545610 != '\\0') {\n                uStack32 = 0;\n                fcn.0044f540(&uStack32);\n            }\n            fcn.0045a260();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x4182e0);\n            arg1 = auStack24;\n            fcn.0045a260();\n            if (cStack41 == '\\0') {\n                *0x593444 = 0;\n                fcn.0041b860();\n                fcn.00443980(0);\n                fcn.004414a0();\n                fcn.0041e140(*0x593450);\n                fcn.00418540();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x593680 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.0045c5e0(arg1, arg2, param_3, param_4);\n            }\n            fcn.0045a260();\n            fcn.00443980(0);\n        }\n        else {\n            fcn.00443980(0);\n        }\n    }\n    fcn.00443980(0);\n    return;\n}\n",
        "token_count": 820
    },
    "00419920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419920(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x5938e4) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x41994c;\n                fcn.0042b560();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x59344c == 2) {\n                *(*0x20 + -0x20) = *0x53f9e0;\n                *0x53fa78 = in_RAX;\n                if ((*0x53f9e0 == 0) && (*0x53fa6c <= *0x53fa68)) {\n                    if (0 < *0x5938ac) {\n                        *(*0x20 + -0x78) = 0x41999a;\n                        fcn.0041a600();\n                    }\n                    if (*0x53f9e0 == 0) {\n                        *0x53fac8 = in_XMM15;\n                        if (*0x593680 == 0) {\n                            *0x53fac0 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x4199d4;\n                            fcn.0045c6e0(0);\n                        }\n                        *(*0x20 + -0x10) = *0x53f640;\n                        *(*0x20 + -0x28) = *0x53f648;\n                        iVar3 = 0;\n                        iVar4 = *0x53f640;\n                        iVar5 = *0x53f648;\n                        while( true ) {\n                            iVar2 = *0x53f648;\n                            iVar1 = *0x53f640;\n                            if (iVar5 <= iVar3) {\n                                for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n                                    iVar4 = *(*(iVar1 + iVar3 * 8) + 0x40);\n                                    if (iVar4 != 0) {\n                                        *(iVar4 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x419ab5;\n                                fcn.0041e940();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x5938ac < 1) {\n                                *(*0x20 + -0x78) = 0x419a45;\n                                fcn.0042cbe0();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x419a33;\n                                fcn.0042cd60();\n                            }\n                            iVar3 = *(*(*0x20 + -0x18) + 0x1238);\n                            if ((iVar3 != 0) &&\n                               ((*(iVar3 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1240) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x4199fc;\n                            fcn.00423220();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x419ac5;\n                        fcn.00434de0();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x496);\n                        *(*0x20 + -0x78) = 0x419ae5;\n                        fcn.00434de0();\n                        *(*0x20 + -0x78) = 0x419af6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x78) = 0x419b05;\n                        fcn.004354e0();\n                        *(*0x20 + -0x78) = 0x419b16;\n                        fcn.004356e0();\n                        *(*0x20 + -0x78) = 0x419b25;\n                        fcn.00435080();\n                        *(*0x20 + -0x78) = 0x419b2a;\n                        fcn.00434e60();\n                        if (*(*(*0x20 + -0x18) + 0x1238) == 0) {\n                            *(*0x20 + -0x78) = 0x419bf1;\n                            fcn.00434de0();\n                            *(*0x20 + -0x78) = 0x419c05;\n                            fcn.004356e0();\n                            *(*0x20 + -0x78) = 0x419c0a;\n                            fcn.00434e60();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1238) + 0x10);\n                            *(*0x20 + -0x78) = 0x419b4d;\n                            fcn.00434de0();\n                            *(*0x20 + -0x78) = 0x419b5e;\n                            fcn.004356e0();\n                            *(*0x20 + -0x78) = 0x419b68;\n                            fcn.004354e0();\n                            *(*0x20 + -0x78) = 0x419b6d;\n                            fcn.00434e60();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) goto code_r0x00419bcc;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                        *(*0x20 + -0x78) = 0x419b8c;\n                        fcn.00434de0();\n                        *(*0x20 + -0x78) = 0x419b9d;\n                        fcn.004356e0();\n                        *(*0x20 + -0x78) = 0x419ba7;\n                        fcn.004354e0();\n                        *(*0x20 + -0x78) = 0x419bac;\n                        fcn.00434e60();\n                        do {\n                            *(*0x20 + -0x78) = 0x419bb1;\n                            fcn.00434de0();\n                            *(*0x20 + -0x78) = 0x419bb6;\n                            fcn.00435040();\n                            *(*0x20 + -0x78) = 0x419bbb;\n                            fcn.00434e60();\n                            *(*0x20 + -0x78) = 0x419bcc;\n                            fcn.00433640();\ncode_r0x00419bcc:\n                            *(*0x20 + -0x78) = 0x419bd1;\n                            fcn.00434de0();\n                            *(*0x20 + -0x78) = 0x419be5;\n                            fcn.004356e0();\n                            *(*0x20 + -0x78) = 0x419bea;\n                            fcn.00434e60();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x419c25;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x40) = *0x53fa68;\n                *(*0x20 + -0x48) = *0x53fa6c;\n                *(*0x20 + -0x28) = *0x53fa88;\n                *(*0x20 + -0x30) = *0x53fa90;\n                *(*0x20 + -0x50) = *0x53fa98;\n                *(*0x20 + -0x58) = *0x53faa0;\n                *(*0x20 + -0x78) = 0x419c70;\n                fcn.00434de0();\n                *(*0x20 + -0x78) = 0x419c85;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419c8f;\n                fcn.00435540();\n                *(*0x20 + -0x78) = 0x419ca5;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419caf;\n                fcn.004353e0();\n                *(*0x20 + -0x78) = 0x419cc5;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419ccf;\n                fcn.004353e0();\n                *(*0x20 + -0x78) = 0x419ce5;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419cef;\n                fcn.004354e0();\n                *(*0x20 + -0x78) = 0x419d05;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419d0f;\n                fcn.004354e0();\n                *(*0x20 + -0x78) = 0x419d25;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419d2f;\n                fcn.004354e0();\n                *(*0x20 + -0x78) = 0x419d45;\n                fcn.004356e0();\n                *(*0x20 + -0x78) = 0x419d4f;\n                fcn.004354e0();\n                *(*0x20 + -0x78) = 0x419d54;\n                fcn.00435040();\n                *(*0x20 + -0x78) = 0x419d59;\n                fcn.00434e60();\n                *(*0x20 + -0x78) = 0x419d6c;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x78) = 0x419d7d;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x419d88;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2610
    },
    "00419da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419da0(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59344c == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x419dd9;\n                fcn.0040ac20();\n                *0x565810 = *0x565810 + 2;\n                *0x53f81c = 0;\n                *0x565838 = 0;\n                *0x565ad8 = *0x565ac0;\n                *0x565ae0 = *0x565ac8;\n                if (*0x593680 == 0) {\n                    *0x565ad0 = *0x565ab8;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x419e3b;\n                    fcn.0045c6e0();\n                }\n                *0x565860 = 0;\n                *0x565868 = 0;\n                *(*0x20 + -0x28) = 0x419e65;\n                fcn.0040ae40();\n                *0x53f820 = 0;\n                if (*(*0x20 + 8) == 2) {\n                    *(*0x20 + -0x28) = 0x419e8a;\n                    fcn.0040ac20();\n                    *0x565850 = 0;\n                    *(*0x20 + -0x28) = 0x419ea5;\n                    fcn.0040ae40();\n                    while( true ) {\n                        *(*0x20 + -0x28) = 0x419efb;\n                        iVar2 = fcn.00421940();\n                        if (iVar2 == -1) break;\n                        *0x53f818 = *0x53f818 + 1;\n                    }\n                    *(*0x20 + -0x28) = 0x419f0b;\n                    fcn.00423940();\n                    do {\n                        *(*0x20 + -0x28) = 0x419f12;\n                        cVar1 = fcn.00423a40();\n                    } while (cVar1 != '\\0');\n                    *(*0x20 + -0x28) = 0x419f1b;\n                    fcn.0042a9c0();\n                    *(*0x20 + -0x28) = 0x419f25;\n                    fcn.0042aa40();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x419eb5;\n                fcn.0040ac20();\n                if (*0x53f810 != '\\0') {\n                    *0x53f810 = '\\0';\n                    *(*0x20 + -0x28) = 0x419ed8;\n                    fcn.00437240(1);\n                }\n                *(*0x20 + -0x28) = 0x419ee6;\n                fcn.0040ae40();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x419f45;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x419f50;\n        fcn.0045eaa0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 904
    },
    "0041a0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a0a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53ecf0 != NULL) {\n        (***0x53ecf0)();\n    }\n    fcn.0040ac20();\n    iVar2 = *0x540040;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 8);\n        if (*0x593680 == 0) {\n            *(iVar2 + 8) = 0;\n            iVar2 = iVar1;\n        }\n        else {\n            iVar2 = iVar1;\n            fcn.0045c6e0(0);\n        }\n    }\n    if (*0x593680 == 0) {\n        *0x540040 = 0;\n    }\n    else {\n        fcn.0045c6e0(0);\n    }\n    fcn.0040ae40();\n    fcn.0040ac20();\n    iVar2 = *0x540050;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 0x28);\n        if (*0x593680 == 0) {\n            *(iVar2 + 0x28) = 0;\n            iVar2 = iVar1;\n        }\n        else {\n            iVar2 = iVar1;\n            fcn.0045c6e0(0);\n        }\n    }\n    if (*0x593680 == 0) {\n        *0x540050 = 0;\n    }\n    else {\n        fcn.0045c6e0(0);\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 422
    },
    "0041a1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.0041a1e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uint64_t unaff_RDI;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [16];\n    \n    if (unaff_RDI < 10000000) {\n        uVar9 = (unaff_RDI >> 1) / 500;\n        if (uVar9 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                fcn.0045cb00(1, 0);\n                uVar9 = arg1;\n            }\n            arg1 = unaff_RBX;\n            iVar6 = fcn.0045ca80(unaff_RBX);\n            goto code_r0x0041a27c;\n        }\n        iVar6 = 3;\n        for (; 99 < uVar9; uVar9 = uVar9 / 10) {\ncode_r0x0041a27c:\n            iVar6 = iVar6 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar6;\n        uVar7 = arg1_00 - 1;\n        uVar10 = unaff_RBX - 1;\ncode_r0x0041a2ad:\n        uVar12 = uVar10;\n        if ((uVar9 < 10) && (uVar12 < uVar7)) {\n            if (uVar12 < unaff_RBX) {\n                in_RAX[uVar12] = uVar9 + '0';\n                return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n            }\n            fcn.0045ca80(unaff_RBX);\n            goto code_r0x0041a33e;\n        }\n        uVar10 = uVar9 / 10;\n        arg1_00 = uVar9 % 10;\n        uVar9 = uVar10;\n        if (uVar12 < unaff_RBX) goto code_r0x0041a2db;\n        goto code_r0x0041a346;\n    }\n    uVar9 = unaff_RDI / 1000000;\n    uVar7 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar10 = uVar7;\ncode_r0x0041a357:\n    uVar12 = uVar10;\n    cVar2 = uVar9;\n    if ((uVar9 < 10) && (uVar12 < uVar7)) {\n        if (uVar12 < arg1_00) {\n            in_RAX[uVar12] = cVar2 + '0';\n            return in_RAX + (-(arg1 - uVar12) >> 0x3f & uVar12);\n        }\n        fcn.0045ca80(arg1_00);\n        goto code_r0x0041a3ec;\n    }\n    uVar9 = uVar9 / 10;\n    if (uVar12 < arg1_00) goto code_r0x0041a38b;\n    goto code_r0x0041a3f4;\ncode_r0x0041a2db:\n    in_RAX[uVar12] = arg1_00 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 != uVar7) goto code_r0x0041a2ad;\n    if (uVar10 < unaff_RBX) {\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n        goto code_r0x0041a2ad;\n    }\ncode_r0x0041a33e:\n    fcn.0045ca80(unaff_RBX);\ncode_r0x0041a346:\n    arg1 = unaff_RBX;\n    uVar7 = arg1;\n    uVar10 = fcn.0045ca80(arg1);\n    goto code_r0x0041a357;\ncode_r0x0041a38b:\n    in_RAX[uVar12] = cVar2 + uVar9 * -10 + '0';\n    uVar10 = uVar12 - 1;\n    if (uVar10 == uVar7) {\n        if (arg1_00 <= uVar10) {\ncode_r0x0041a3ec:\n            fcn.0045ca80(arg1_00);\ncode_r0x0041a3f4:\n            fcn.0045ca80(arg1_00);\n            while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n                fcn.0045a3a0();\n            }\n            if (*0x53ecd8 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x53ecd8;\n                iVar8 = (*0x53ecd8)[1];\n            }\n            *0x53fa88 = in_XMM15;\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n                if (*0x53fa88 < uVar9) {\n                    *0x53fa88 = CONCAT88(*0x53fa90, uVar9);\n                }\n            }\n            if (*0x53ecd8 == NULL) {\n                iVar8 = 0;\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = **0x53ecd8;\n                iVar8 = (*0x53ecd8)[1];\n            }\n            for (iVar11 = 0; iVar11 < iVar8; iVar11 = iVar11 + 1) {\n                iVar1 = *(iVar6 + iVar11 * 8);\n                uVar9 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n                if (*0x53fa90 < uVar9) {\n                    *0x53fa88 = CONCAT88(uVar9, *0x53fa88);\n                }\n            }\n            *0x565af0 = *0x565ac0;\n            *0x565af8 = *0x565ac0;\n            if (*0x593680 == 0) {\n                *0x565ae8 = *0x565ab8;\n                *0x53fa98 = *0x565ac0;\n            }\n            else {\n                *0x53fa98 = fcn.0045c6e0();\n            }\n            *0x53fac8 = *0x53f628;\n            *0x53fad0 = *0x53f628;\n            if (*0x593680 == 0) {\n                *0x53fac0 = *0x53f620;\n                *0x53faa0 = *0x53f628;\n            }\n            else {\n                *0x53faa0 = fcn.0045c6e0();\n            }\n            iVar4 = SUB164(*0x53fa88, 0);\n            iVar5 = SUB164(*0x53fa88 >> 0x40, 0);\n            iVar3 = *0x53fa98;\n            *0x53fab8 = *0x53faa0 + iVar4 + iVar5 + iVar3 + 2;\n            *0x53fa68 = 0;\n            *0x53fa6c = iVar4 + iVar5 + iVar3 + *0x53faa0 + 2;\n            *0x53faa8 = 2;\n            *0x53faac = iVar4 + 2;\n            *0x53fab0 = iVar5 + iVar4 + 2;\n            *0x53fab4 = iVar3 + iVar4 + iVar5 + 2;\n            return *0x53fab8;\n        }\n        in_RAX[uVar12 - 1] = 0x2e;\n        uVar10 = uVar12 - 2;\n    }\n    goto code_r0x0041a357;\n}\n",
        "token_count": 1972
    },
    "0041a400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a400(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53ecd8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x53ecd8;\n        iVar5 = (*0x53ecd8)[1];\n    }\n    *0x53fa88 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x53fa88 < uVar8) {\n            *0x53fa88 = CONCAT88(*0x53fa90, uVar8);\n        }\n    }\n    if (*0x53ecd8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x53ecd8;\n        iVar5 = (*0x53ecd8)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x53fa90 < uVar8) {\n            *0x53fa88 = CONCAT88(uVar8, *0x53fa88);\n        }\n    }\n    *0x565af0 = *0x565ac0;\n    *0x565af8 = *0x565ac0;\n    if (*0x593680 == 0) {\n        *0x565ae8 = *0x565ab8;\n        *0x53fa98 = *0x565ac0;\n    }\n    else {\n        *0x53fa98 = fcn.0045c6e0();\n    }\n    *0x53fac8 = *0x53f628;\n    *0x53fad0 = *0x53f628;\n    if (*0x593680 == 0) {\n        *0x53fac0 = *0x53f620;\n        *0x53faa0 = *0x53f628;\n    }\n    else {\n        *0x53faa0 = fcn.0045c6e0();\n    }\n    iVar3 = SUB164(*0x53fa88, 0);\n    iVar4 = SUB164(*0x53fa88 >> 0x40, 0);\n    iVar2 = *0x53fa98;\n    *0x53fa68 = 0;\n    *0x53fa6c = iVar3 + iVar4 + iVar2 + *0x53faa0 + 2;\n    *0x53faa8 = 2;\n    *0x53faac = iVar3 + 2;\n    *0x53fab0 = iVar4 + iVar3 + 2;\n    *0x53fab4 = iVar2 + iVar3 + iVar4 + 2;\n    *0x53fab8 = *0x53faa0 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 873
    },
    "0041afa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041afa0(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x565af0;\n            if (unaff_RBX < *0x565af0) {\n                uVar5 = *(*0x565ae8 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x565810;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x565870) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x565810;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x593411 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x0041b177:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x41b185;\n                                                    fcn.00434de0();\n                                                    *(*0x20 + -0x80) = 0x41b196;\n                                                    fcn.004356e0();\n                                                    *(*0x20 + -0x80) = 0x41b19f;\n                                                    fcn.004353e0();\n                                                    *(*0x20 + -0x80) = 0x41b1a5;\n                                                    fcn.00435000();\n                                                    *(*0x20 + -0x80) = 0x41b1ae;\n                                                    fcn.004353e0();\n                                                    *(*0x20 + -0x80) = 0x41b1b3;\n                                                    fcn.00435040();\n                                                    *(*0x20 + -0x80) = 0x41b1b8;\n                                                    fcn.00434e60();\n                                                    *(*0x20 + -0x80) = 0x41b1c9;\n                                                    fcn.00433640();\n                                                    goto code_r0x0041b1c9;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x41b0c9;\n                                            fcn.0040ac20();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x41b177;\n                                                        fcn.00431cc0();\n                                                        goto code_r0x0041b177;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x41b145;\n                                                    fcn.0041cd60(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x41b166;\n                                                    fcn.0041cbc0(0x527280);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x41b0e5;\n                                            fcn.0040ae40();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x0041b049;\n                                        }\ncode_r0x0041b1c9:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x41b1d3;\n                                        fcn.00434de0();\n                                        *(*0x20 + -0x80) = 0x41b1e5;\n                                        fcn.004356e0();\n                                        *(*0x20 + -0x80) = 0x41b1f2;\n                                        fcn.004353e0();\n                                        *(*0x20 + -0x80) = 0x41b1f7;\n                                        fcn.00435040();\n                                        *(*0x20 + -0x80) = 0x41b1fc;\n                                        fcn.00434e60();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x41b20d;\n                                        fcn.00433640();\n                                    }\n                                    *(*0x20 + -0x80) = 0x41b21a;\n                                    fcn.0045caa0(0x200);\n                                    goto code_r0x0041b21a;\n                                }\ncode_r0x0041b049:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x0041b21a:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x41b227;\n                fcn.0045caa0(0x40);\n            }\n            *(*0x20 + -0x80) = 0x41b22f;\n            in_RAX = fcn.0045ca80(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41b23f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1911
    },
    "0041b260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b260(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar4 = *0x593da8;\n            iVar5 = -*(in_RAX + 0x180) * *0x593de0;\n            iVar3 = -*(in_RAX + 0x180);\n            if (iVar5 < 0x10000) {\n                iVar3 = *0x4c9780 * *0x593de8;\n            }\n            arg3 = 0x10000;\n            if (iVar5 < 0x10000) {\n                iVar5 = 0x10000;\n            }\n            if (0 < *0x593da8) {\n                if (*0x593da8 < iVar5) {\n                    *(in_RAX + 0x180) = *0x593da8 * *0x593de8 + *(in_RAX + 0x180) + 1;\n                    iVar3 = iVar4;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + iVar3;\n                    iVar3 = iVar5;\n                }\n                LOCK();\n                *0x593da8 = *0x593da8 - iVar3;\n                if (iVar5 == iVar3) {\n                    if (bVar1) {\n                        fcn.0044f540(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x545610 != '\\0') && (!bVar1)) {\n                fcn.0044f540(0);\n                bVar1 = true;\n            }\n            fcn.0045a260();\n            iVar4 = *(in_RAX + 0x88);\n            if (*0x593680 == 0) {\n                *(in_RAX + 0x88) = 0;\n                iVar3 = in_RAX;\n            }\n            else {\n                iVar3 = fcn.0045c700(iVar4, 0, arg3, iVar3);\n            }\n            if (iVar4 != 0) {\n                fcn.00417fe0();\n                iVar3 = in_RAX;\n            }\n            if (-1 < *(iVar3 + 0x180)) goto code_r0x0041b4b1;\n            if (*(iVar3 + 0xb1) == '\\0') break;\n            fcn.0045a1e0();\n        }\n        cVar2 = fcn.0041b8e0();\n    } while (cVar2 == '\\0');\ncode_r0x0041b4b1:\n    if (bVar1) {\n        fcn.0044f540(0);\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "0041b540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b540(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    double dVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar10;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = in_RAX + 0x88;\n            if (*0x593680 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x50) = 0x41b57e;\n                in_RAX = fcn.0045c6e0();\n            }\n            if (*0x593444 == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x50) = 0x41b5b2;\n            fcn.0045e360();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            LOCK();\n            iVar2 = *0x53fa80 + -1;\n            uVar6 = *0x53fa80 - 1;\n            uVar8 = *0x53fa70;\n            *0x53fa80 = iVar2;\n            if (*0x53fa70 != uVar6) {\n                *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                *(*0x20 + -0x50) = 0x41b605;\n                fcn.004379a0(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x50) = 0x41b62f;\n                uVar5 = fcn.0041c9a0();\n                *(*0x20 + -0x20) = uVar5;\n                uVar5 = 2;\n                *(*0x20 + -0x50) = 0x41b648;\n                fcn.004379a0(2);\n                dVar4 = *0x593de8;\n                dVar10 = *(*0x20 + -0x20) * *0x593de8;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x180) = dVar10 + *(iVar1 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x53fa80 + 1;\n                uVar8 = *0x53fa80 + 1;\n                *0x53fa80 = iVar2;\n                if (uVar8 <= *0x53fa70) {\n                    if (*0x53fa70 == uVar8) {\n                        if (*0x53f9e0 == 0) {\n                            if (*0x53fa68 < *0x53fa6c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x593680 == 0) {\n                                *(iVar1 + 0x88) = iVar1;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x41b6f8;\n                                fcn.0045c740(uVar5, uVar8, param_3, param_4);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x50) = 0x41b6fd;\n                    fcn.0045e360();\n                    iVar1 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    iVar7 = (*(*0x20 + -0x48) - *(*0x20 + -0x28)) + *(iVar1 + 0x1218);\n                    *(iVar1 + 0x1218) = iVar7;\n                    if (5000 < iVar7) {\n                        LOCK();\n                        *0x593db0 = *0x593db0 + iVar7;\n                        *(iVar1 + 0x1218) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x34) = uVar8;\n                *(*0x20 + -0x2c) = *0x53fa70;\n                *(*0x20 + -0x50) = 0x41b777;\n                fcn.00434de0(dVar10, dVar4);\n                uVar6 = uVar5;\n                *(*0x20 + -0x50) = 0x41b788;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41b791;\n                fcn.004353e0();\n                *(*0x20 + -0x50) = 0x41b7a5;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41b7ae;\n                fcn.004353e0();\n                *(*0x20 + -0x50) = 0x41b7b3;\n                fcn.00435040();\n                *(*0x20 + -0x50) = 0x41b7b8;\n                fcn.00434e60();\n                uVar8 = 0x17;\n                *(*0x20 + -0x50) = 0x41b7c9;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x30) = uVar6;\n            *(*0x20 + -0x2c) = uVar8;\n            *(*0x20 + -0x50) = 0x41b7d6;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x41b7e7;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x41b7f0;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x41b805;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x41b80e;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x41b813;\n            fcn.00435040();\n            *(*0x20 + -0x50) = 0x41b818;\n            fcn.00434e60();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x50) = 0x41b829;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x41b839;\n        fcn.0045eaa0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1815
    },
    "0041ba20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041ba20(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x593de8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53fb18 == 0) {\n        LOCK();\n        iVar2 = *0x593da8;\n        *0x593da8 = *0x593da8 + in_RAX;\n        return iVar2;\n    }\n    fcn.0040ac20();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x53fb18;\n        if ((*0x53fb18 == 0) || (iVar2 < 1)) goto code_r0x0041bb49;\n        if ((*0x53fb18 != 0) && (*0x53fb18 = *(*0x53fb18 + 0xa0),  *0x53fb18 == 0)) {\n            *0x53fb20 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.00437240(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x53fb20 != 0) {\n        *(*0x53fb20 + 0xa0) = iVar3;\n        iVar2 = *0x53fb18;\n    }\n    *0x53fb18 = iVar2;\n    *0x53fb20 = iVar3;\n    iVar2 = 0;\ncode_r0x0041bb49:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x593da8;\n        *0x593da8 = *0x593da8 + iVar2 * *0x593de0;\n    }\n    iVar2 = fcn.0040ae40(iVar3);\n    return iVar2;\n}\n",
        "token_count": 540
    },
    "0041bbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041bbc0(void)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int64_t *piVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (unaff_R14[3] <= *0x20 + -0x180 && *0x20 + -0x180 != unaff_R14[3]) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x12) >> 0xc & 1) != 0) {\n                uVar6 = *(in_RAX + 0x12) & 0xffffefff;\n                if (uVar6 < 3) {\n                    if (uVar6 == 1) goto code_r0x0041bc29;\n                }\n                else {\n                    if (4 < uVar6) {\n                        if (uVar6 == 6) {\n                            return 0;\n                        }\ncode_r0x0041bdaa:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x12);\n                        puVar7 = in_RAX[0x13];\n                        *(*0x20 + -0x188) = puVar7;\n                        *(*0x20 + -0x208) = 0x41bdc5;\n                        fcn.00434de0();\n                        *(*0x20 + -0x208) = 0x41bdd6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x208) = 0x41bde5;\n                        fcn.00435660();\n                        *(*0x20 + -0x208) = 0x41bdf6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x208) = 0x41be05;\n                        fcn.004354e0();\n                        *(*0x20 + -0x208) = 0x41be16;\n                        fcn.004356e0();\n                        *(*0x20 + -0x208) = 0x41be25;\n                        fcn.004353e0();\n                        *(*0x20 + -0x208) = 0x41be2a;\n                        fcn.00435040();\n                        *(*0x20 + -0x208) = 0x41be2f;\n                        fcn.00434e60();\n                        *(*0x20 + -0x208) = 0x41be45;\n                        fcn.00433640();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x0041be59:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x41be96;\n                                fcn.0041cbc0(0x527280);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x41bed2;\n                                fcn.0041cbc0(0x527280);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x41bf16;\n                                fcn.0041cbc0(0x527280);\n                                puVar7 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar7 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x41bf3d;\n                            fcn.00420d00(0);\n                        }\n                        iVar5 = 0;\n                        *(*0x20 + -0x208) = 0x41bf55;\n                        uVar3 = fcn.00421120(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar3;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x41bf6a;\n                                iVar4 = fcn.00420e40();\n                                if (iVar4 == 0) {\n                                    while (iVar5 = *(*0x20 + -0x50),  iVar5 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar5 + 0x18);\n                                        *(iVar5 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x41bfc8;\n                                        fcn.00423720();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar5 = 0x19;\n                                    *(*0x20 + -0x208) = 0x41c01e;\n                                    iVar4 = fcn.00433640();\n                                }\n                                else {\n                                    iVar4 = iVar4 - *(*0x20 + -0x80);\n                                    puVar7 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar5,  puVar7 != NULL) {\n                                    if (iVar4 < *puVar7) {\n                                        puVar7 = *(puVar7 + 4);\n                                    }\n                                    else {\n                                        if (iVar4 < *puVar7 + puVar7[1]) goto code_r0x0041bf89;\n                                        puVar7 = *(puVar7 + 6);\n                                    }\n                                }\n                                puVar7 = NULL;\ncode_r0x0041bf89:\n                            } while ((puVar7 == NULL) || (uVar1 = *(puVar7 + 2),  uVar1 == 0));\n                            *(puVar7 + 2) = 0;\n                            for (iVar5 = 0x52cb00; iVar5 != 0; iVar5 = *(iVar5 + 0x220)) {\n                                if ((*(iVar5 + 0x130) < uVar1 || *(iVar5 + 0x130) == uVar1) &&\n                                   (uVar1 <= *(iVar5 + 0x100) && *(iVar5 + 0x100) != uVar1)) goto code_r0x0041c076;\n                            }\n                            iVar5 = 0;\ncode_r0x0041c076:\n                            iVar5 = *(uVar1 + 0xc) + *(iVar5 + 0x128);\n                            if (*(uVar1 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar7;\n                                *(*0x20 + -0x28) = uVar1;\n                                *(*0x20 + -0x208) = 0x41c0ad;\n                                iVar4 = fcn.004145c0();\n                                iVar5 = *(iVar4 + 0x18);\n                                puVar7 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar4 = 0;\n                            }\n                            *(*0x20 + -400) = iVar4;\n                            puVar7 = *puVar7 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x41c13c;\n                                fcn.0041cbc0(iVar5);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x41c108;\n                                fcn.0041d0e0(iVar5);\n                            }\n                            iVar5 = *(*0x20 + -400);\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x208) = 0x41c15c;\n                                fcn.004255c0(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x0041bc29:\n                    if (unaff_R14 != in_RAX) {\n                        if (in_RAX[0xe] == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + -0x198) = in_RAX[1] - *in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x41bc87;\n                            fcn.00447e00();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x41bcb7;\n                        puVar2 = fcn.0045ccd4();\n                        uVar3 = puVar2[1];\n                        *(*0x20 + -0x80) = *puVar2;\n                        *(*0x20 + -0x78) = uVar3;\n                        if (puVar2[10] != 0) {\n                            *(*0x20 + -0x208) = 0x41bcfc;\n                            fcn.0041cbc0(0x527280);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x41c2e0;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x41bd7a;\n                        fcn.00450e00(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar7 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar7 + 10);\n                        goto code_r0x0041be59;\n                    }\n                    *(*0x20 + -0x208) = 0x41c176;\n                    piVar8 = unaff_R14;\n                    in_RAX = fcn.00433640();\n                    uVar6 = piVar8;\n                }\n                if (uVar6 != 2) goto code_r0x0041bdaa;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x12);\n                *(*0x20 + -0x188) = in_RAX[0x13];\n                *(*0x20 + -0x208) = 0x41c19a;\n                fcn.00434de0();\n                *(*0x20 + -0x208) = 0x41c1ab;\n                fcn.004356e0();\n                *(*0x20 + -0x208) = 0x41c1b8;\n                fcn.00435660();\n                *(*0x20 + -0x208) = 0x41c1c9;\n                fcn.004356e0();\n                *(*0x20 + -0x208) = 0x41c1d3;\n                fcn.004354e0();\n                *(*0x20 + -0x208) = 0x41c1e5;\n                fcn.004356e0();\n                *(*0x20 + -0x208) = 0x41c1f0;\n                fcn.004353e0();\n                *(*0x20 + -0x208) = 0x41c1f5;\n                fcn.00435040();\n                *(*0x20 + -0x208) = 0x41c1fa;\n                fcn.00434e60();\n                *(*0x20 + -0x208) = 0x41c20b;\n                in_RAX = fcn.00433640();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x12);\n            *(*0x20 + -0x188) = in_RAX[0x13];\n            *(*0x20 + -0x208) = 0x41c226;\n            fcn.00434de0();\n            *(*0x20 + -0x208) = 0x41c237;\n            fcn.004356e0();\n            *(*0x20 + -0x208) = 0x41c245;\n            fcn.00435660();\n            *(*0x20 + -0x208) = 0x41c256;\n            fcn.004356e0();\n            *(*0x20 + -0x208) = 0x41c265;\n            fcn.004354e0();\n            *(*0x20 + -0x208) = 0x41c276;\n            fcn.004356e0();\n            *(*0x20 + -0x208) = 0x41c285;\n            fcn.00435540();\n            *(*0x20 + -0x208) = 0x41c28a;\n            fcn.00435040();\n            *(*0x20 + -0x208) = 0x41c28f;\n            fcn.00434e60();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x41c2a5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x41c2b5;\n        fcn.0045eaa0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3454
    },
    "0041c580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c580(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x593684 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x41c965;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41c975;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x4b1078;\n            }\n        }\n        else {\n            uVar8 = 0x4b1080;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x53fa6c <= *0x53fa68) goto code_r0x0041c64f;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x0041c8c2:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x540060 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041c64f:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x540060 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041c84d;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x53f9e0 == 0) {\n                *(*0x20 + -0x60) = 0x41c6a5;\n                fcn.00423320();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                iVar1 = *(iVar4 + 0x10);\n                if (iVar1 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    *(iVar4 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041c88f;\n                    iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n                }\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x41c705;\n                iVar4 = fcn.00423140(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x41c713;\n                    fcn.0042cca0();\n                    *(*0x20 + -0x60) = 0x41c71d;\n                    iVar4 = fcn.00423140();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041c84d;\n            }\n            *(*0x20 + -0x60) = 0x41c754;\n            fcn.0041cd60(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x593d90 = *0x593d90 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x41c79d;\n                    fcn.0041ba20();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x41c7e2;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041c84d;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x53fa68 + 1;\n    bVar10 = *0x53fa6c <= *0x53fa68;\n    *0x53fa68 = uVar7;\n    if (bVar10) goto code_r0x0041c64f;\n    *(*0x20 + -0x60) = 0x41c91f;\n    fcn.0041a800();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x41c932;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041c84d:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x593d90 = *0x593d90 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x41c878;\n                fcn.0041ba20(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041c89c;\ncode_r0x0041c88f:\n    *(*0x20 + -0x60) = 0x41c89c;\n    fcn.0045ca80(0xfd);\ncode_r0x0041c89c:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041c8c2;\n}\n",
        "token_count": 2465
    },
    "0041c9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041c9a0(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x0041c9a0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x593684 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5)) goto code_r0x0041cb5a;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x53f9e0 == 0) {\n                    *(*0x20 + -0x30) = 0x41ca2a;\n                    fcn.00423320();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = *(iVar3 + 0x10);\n                    if (iVar1 == 0) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        *(iVar3 + 0x10) = iVar1 - 1U;\n                        if (0xfc < iVar1 - 1U) goto code_r0x0041cb6c;\n                        iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                    }\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41ca85;\n                    iVar3 = fcn.00423140();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41ca93;\n                        fcn.0042cca0();\n                        *(*0x20 + -0x30) = 0x41ca9d;\n                        iVar3 = fcn.00423140();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x53fa6c <= *0x53fa68) {\ncode_r0x0041cb5a:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x53fa68 + 1;\n                    bVar6 = *0x53fa6c <= *0x53fa68;\n                    *0x53fa68 = uVar2;\n                    if (bVar6) goto code_r0x0041cb5a;\n                    *(*0x20 + -0x30) = 0x41caf2;\n                    iVar5 = fcn.0041a800(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41cb12;\n                    fcn.0041cd60();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x593d90 = *0x593d90 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041cb79;\n    }\n    goto code_r0x0041cb8b;\ncode_r0x0041cb6c:\n    *(*0x20 + -0x30) = 0x41cb79;\n    fcn.0045ca80(0xfd);\ncode_r0x0041cb79:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41cb8a;\n    in_RAX = fcn.00433640();\ncode_r0x0041cb8b:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41cb9a;\n    fcn.0045eaa0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x0041c9a0;\n}\n",
        "token_count": 1299
    },
    "0041d3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d3a0(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar8 = arg3 >> 3;\n                if (*0x593411 == '\\0') {\n                    uVar6 = 1 << (arg3 & 7);\n                    if (((*0x5938ac < 1) || (arg3 <= *(unaff_RDI + 0x30) && *(unaff_RDI + 0x30) != arg3)) ||\n                       (arg3 = puVar8,  (puVar8[*(unaff_RDI + 0x48)] & uVar6) != 0)) {\n                        if ((uVar6 & puVar8[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar8[iVar1] = puVar8[iVar1] | uVar6;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x565870) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar5 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar5 + 0x21040;\n                            uVar6 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar6 & *(iVar1 + 0x21040 + uVar5)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar6;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041d516;\n                        }\n                        goto code_r0x0041d574;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41d505;\n                    cVar4 = fcn.004157c0(arg1, iVar1, arg3);\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041d516:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\n                        bVar3 = false;\ncode_r0x0041d544:\n                        if (!bVar3) {\n                            *(*0x20 + -0x50) = 0x41d553;\n                            fcn.00422e20();\n                        }\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) {\n                        bVar3 = false;\n                        goto code_r0x0041d544;\n                    }\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        bVar3 = true;\n                        goto code_r0x0041d544;\n                    }\n                    *(*0x20 + -0x50) = 0x41d574;\n                    fcn.0045ca80(0xfd);\ncode_r0x0041d574:\n                    *(*0x20 + -0x50) = 0x41d585;\n                    fcn.0045caa0(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41d594;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x41d5a5;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41d5af;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x41d5c5;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41d5cf;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x41d5e5;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41d5ef;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x41d605;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x41d60a;\n                fcn.00434e60();\n                *(*0x20 + -0x50) = 0x41d625;\n                fcn.0041d6c0(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41d645;\n                fcn.0041d6c0(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41d665;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41d676;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + 0x30) = arg3;\n        *(puVar7 + -8) = 0x41d69a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1823
    },
    "0041d6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041d6c0(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x565870);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00434e60();\n    if (iVar3 == 0) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n        return;\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.004356e0();\n    fcn.00434e60();\n    if (*(iVar3 + 99) < *0x5383b8) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435040();\n        fcn.00434e60();\n    }\n    else {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00434e60();\n            }\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.00435540();\n            fcn.00434e60();\n            if (unaff_RDI == uVar4) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00434e60();\n            }\n            fcn.00434de0();\n            fcn.00435040();\n            fcn.00434e60();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    return;\n}\n",
        "token_count": 960
    },
    "0041db00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041db00(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x593411 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x565870) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1248;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.0045caa0(0x40);\n    }\n    fcn.00433640();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 494
    },
    "0041dd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041dd00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(in_RAX + 0xb0) = 0;\n    *(in_RAX + 0xb8) = 0;\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = in_XMM15;\n    *(in_RAX + 0xd8) = in_XMM15;\n    *(in_RAX + 0xe8) = 0;\n    *(in_RAX + 0xf0) = unaff_RBX;\n    *(in_RAX + 0x90) = *(in_RAX + 0x98);\n    uVar2 = *(in_RAX + 0x78) + 0x10000;\n    if (*(in_RAX + 0x68) < uVar2) {\n        *(in_RAX + 0x68) = uVar2;\n    }\n    dVar5 = *0x4c9708 * arg1;\n    iVar3 = *0x4c9718 + dVar5;\n    *(in_RAX + 0xf8) = iVar3;\n    dVar6 = iVar3 / dVar5 - *0x4c9738;\n    if ((dVar6 < str.333333._0_8_) || (*0x4c9710 < dVar6)) {\n        if (dVar5 < iVar3) {\n            *(in_RAX + 0xf8) = iVar3 + -1;\n        }\n        *(in_RAX + 0x110) = (dVar5 - *(in_RAX + 0xf8)) / arg1;\n    }\n    else {\n        *(in_RAX + 0x110) = 0;\n    }\n    if (0 < *0x5938b8) {\n        *(in_RAX + 0xf8) = arg1;\n        *(in_RAX + 0x110) = 0;\n    }\n    iVar1 = *0x53f648;\n    iVar3 = *0x53f640;\n    for (iVar4 = 0; iVar4 < iVar1; iVar4 = iVar4 + 1) {\n        *(*(iVar3 + iVar4 * 8) + 0x1218) = in_XMM15;\n    }\n    fcn.0041dfe0();\n    if (0 < *0x5938b0) {\n        noname_0 = *(in_RAX + 0x100);\n        arg2 = *0x593d60;\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004350e0(noname_0, arg2);\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004350e0(noname_0, arg2);\n        fcn.00435040();\n        fcn.00434e60();\n    }\n    return;\n}\n",
        "token_count": 847
    },
    "0041e140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041e140(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong noname_0;\n    uint64_t uVar2;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    ulong extraout_XMM0_Qa;\n    double dVar4;\n    double dVar5;\n    double dVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *0x593d50 = *0x593d48;\n    iVar3 = unaff_RBX - *(in_RAX + 0xf0);\n    dVar5 = *0x4c9708;\n    if (0 < iVar3) {\n        dVar5 = *0x4c9708 + *(in_RAX + 0xd0) / (iVar3 * arg1);\n    }\n    if (*(in_RAX + 0x78) <= *(in_RAX + 0x18)) {\n        *0x593d50 = *0x593d48;\n        return 0;\n    }\n    if (iVar3 < 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        dVar4 = *(in_RAX + 0xe8) / (iVar3 * arg1);\n    }\n    uVar2 = *(in_RAX + 0x78) - *(in_RAX + 0x18);\n    if (uVar2 < 0) {\n        dVar6 = uVar2 >> 1 | uVar2 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar2;\n    }\n    cVar1 = fcn.0041eee0(*(in_RAX + 0x20), \n                         ((dVar4 + dVar5) * dVar6) /\n                         ((*0x4c9738 - dVar5) * (*(in_RAX + 0xb0) + *(in_RAX + 0xb8) + *(in_RAX + 0xc0))), *0x4c9738, \n                         in_RAX + 0x28);\n    *(in_RAX + 0x20) = extraout_XMM0_Qa;\n    if (cVar1 == '\\0') {\n        *(in_RAX + 0x20) = 0;\n    }\n    if (0 < *0x5938b0) {\n        fcn.00434de0();\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004354e0(dVar5 * *0x4c9770);\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.00434e60();\n        fcn.00434de0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.00434e60();\n        arg2 = *(in_RAX + 0x78);\n        noname_0 = *(in_RAX + 0x68);\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004350e0(noname_0, arg2);\n        fcn.004356e0();\n        fcn.00434e60();\n        if (cVar1 == '\\0') {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n        fcn.00434de0();\n        fcn.00435040();\n        fcn.00434e60();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.0040ae40();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1045
    },
    "0041e560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e560(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0xf8) < 1) {\n                return;\n            }\n            if (*0x593450 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x593450;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x53f648 <= iVar6) break;\n                if (*(*(*0x53f640 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41e670;\n                    cVar3 = fcn.00440a80();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41e6a9;\n            in_RAX = fcn.0045ca80(*0x53f648);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41e6b4;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 776
    },
    "0041e6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e752)\n\nulong fcn.0041e6c0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x593444 != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41e91c;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x41e92c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1238) == 0)) ||\n       ((*(*(unaff_RBX + 0x1238) + 0x10) == 0 && (*(*(unaff_RBX + 0x1240) + 0x10) == 0)))) {\n        if (*0x53f9e0 == 0) {\n            if (*0x53fa68 < *0x53fa6c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x593528 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = (*0x593528 >> 0x13) << 3;\n        *0x593528 = *piVar6;\n        LOCK();\n    }\n    if (piVar6 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0xf8);\n        if (uVar2 < 1) break;\n        LOCK();\n        puVar1 = in_RAX + 0xf8;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x110) == 0.0) {\n            *(*0x20 + -0x38) = 0x41e8b6;\n            fcn.0040a9c0(in_RAX, piVar6, 0x593528);\n            return 0;\n        }\n        *(*0x20 + -0x10) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = piVar6;\n        *(*0x20 + -0x38) = 0x41e81a;\n        fcn.0045e360();\n        iVar5 = *(*0x20 + -0x30) - *(*(*0x20 + -0x10) + 0xf0);\n        if (iVar5 < 1) {\n            iVar7 = *(*0x20 + 0x10);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x10);\n            if (*(*(*0x20 + -0x10) + 0x110) < *(iVar7 + 0x1220) / iVar5) {\n                *(*0x20 + -0x38) = 0x41e886;\n                fcn.0040a9c0();\n                return 0;\n            }\n        }\n        *(iVar7 + 0x1228) = 2;\n        piVar6 = *(*0x20 + -0x20);\n    }\n    else {\n        *(unaff_RBX + 0x1228) = 1;\n    }\n    *(*0x20 + -0x18) = piVar6[2];\n    *(*0x20 + -0x38) = 0x41e8e7;\n    fcn.004379a0(1);\n    if (*0x545610 != '\\0') {\n        *(*0x20 + -0x38) = 0x41e8fc;\n        fcn.004509a0();\n    }\n    return *(*0x20 + -0x18);\n}\n",
        "token_count": 1206
    },
    "0041e940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e940(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(in_RAX + 0xa8) = unaff_RBX;\n    *(in_RAX + 0x78) = unaff_RBX;\n    *(in_RAX + 0x80) = *(in_RAX + 0xb0);\n    *(in_RAX + 0x88) = *(in_RAX + 0xb0);\n    if (*0x545610 != '\\0') {\n        uStack16 = *0x593d58;\n        fcn.0044f540(&uStack16);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0041eaa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041eaa0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        *0x593d58 = *0x593d58 + unaff_RBX;\n        if (*0x545610 != '\\0') {\n            fcn.00450c40();\n        }\n    }\n    if ((*0x593444 == 0) && (arg1 != 0)) {\n        LOCK();\n        iVar1 = *0x593d60 + arg1;\n        arg1 = *0x593d60;\n        *0x593d60 = iVar1;\n    }\n    if (*0x593444 != 0) {\n        fcn.0041dfe0(arg1);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0041eb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041eb60(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    double dVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x24) + *(in_RAX + 0x2a) + *(in_RAX + 0x28)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x2a);\n    }\n    uVar4 = *(in_RAX + 2);\n    if ((*0x53f81c != -0x80000000) && (uVar4 < *(in_RAX + 0x1e) + 0x100000U)) {\n        uVar4 = *(in_RAX + 0x1e) + 0x100000U;\n    }\n    iVar1 = *(in_RAX + 0x2a);\n    uVar3 = uVar2 - iVar1;\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4c9720;\n    if (*0x4c9790 <= dVar7) {\n        uVar5 = dVar7 - *0x4c9790 | 0x8000000000000000;\n    }\n    else {\n        uVar5 = dVar7;\n    }\n    if (uVar4 < uVar5 + iVar1) {\n        uVar4 = uVar5 + iVar1;\n    }\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4c9730;\n    if (*0x4c9790 <= dVar7) {\n        uVar3 = dVar7 - *0x4c9790 | 0x8000000000000000;\n    }\n    else {\n        uVar3 = dVar7;\n    }\n    uVar5 = uVar2 - *(in_RAX + 2);\n    if ((*(in_RAX + 2) < uVar2) && (uVar3 < uVar5)) {\n        uVar3 = uVar5;\n    }\n    uVar5 = uVar3 + iVar1;\n    if (uVar3 + iVar1 < uVar4) {\n        uVar5 = uVar4;\n    }\n    uVar3 = *(in_RAX + 0x22) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    if (uVar3 < 0) {\n        dVar7 = uVar3 & 1 | uVar3 >> 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar3;\n    }\n    dVar7 = dVar7 * *0x4c9750 * *0x4c9728 * *(in_RAX + 8);\n    if (*0x4c9790 <= dVar7) {\n        uVar3 = dVar7 - *0x4c9790 | 0x8000000000000000;\n    }\n    else {\n        uVar3 = dVar7;\n    }\n    uVar6 = uVar2 - uVar3;\n    if (uVar2 < uVar3) {\n        uVar6 = uVar4;\n    }\n    if (uVar6 < uVar4) {\n        uVar6 = uVar4;\n    }\n    if (uVar5 < uVar6) {\n        uVar6 = uVar5;\n    }\n    *(in_RAX + 6) = uVar6;\n    if (uVar2 < uVar6) {\n        uVar2 = uVar6;\n    }\n    *(in_RAX + 0x1a) = uVar2;\n    if (*0x545610 != '\\0') {\n        fcn.00450ca0();\n    }\n    if (*0x59344c != 0) {\n        fcn.0041dfe0(in_RAX);\n    }\n    return;\n}\n",
        "token_count": 1103
    },
    "0041f140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f140(void)\n\n{\n    uint uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    uVar1 = *0x53f7e0;\n    if (*0x53f7d0 != '\\0') {\n        *0x53f7e0 = 0;\n        fcn.0044d340(uVar1);\n        *0x53f7d0 = '\\0';\n        *(*0x53f7c8 + 0xa0) = 0;\n        fcn.0043bb20();\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 196
    },
    "0041f320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f320(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double extraout_XMM0_Qa;\n    double dVar7;\n    double dVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar3 = unaff_R14;\n            iVar2 = unaff_R14;\n            if (*0x593680 != 0) {\n                *(*0x20 + -0xa8) = 0x41f372;\n                fcn.0045c6e0();\n                iVar2 = *0x53f7c8;\n            }\n            *0x53f7c8 = iVar2;\n            *(*0x20 + -0xa8) = 0x41f385;\n            fcn.0040ac20();\n            *0x53f7d0 = 1;\n            *(*0x20 + -0xa8) = 0x41f398;\n            iVar2 = fcn.0040cd00();\n            if (*0x593680 == 0) {\n                *0x53f7d8 = iVar2;\n                *(iVar2 + 0x18) = 0x4b0eb8;\n            }\n            else {\n                *(*0x20 + -0xa8) = 0x41f3c5;\n                fcn.0045c5e0(iVar3, param_2, param_3, param_4);\n                *(*0x20 + -0xa8) = 0x41f3d5;\n                fcn.0045c6e0(0x4b0eb8);\n            }\n            *(*0x20 + -0xa8) = 0x41f3e9;\n            fcn.00404fe0();\n            *(*0x20 + -0xa8) = 0x41f40c;\n            fcn.00435f80(0xd);\n            *(*0x20 + -0x48) = 0x3fd599999999999a;\n            *(*0x20 + -0x40) = 0x41486a0000000000;\n            *(*0x20 + -0x38) = 0x41cdcd6500000000;\n            *(*0x20 + -0x30) = 0x3f50624dd2f1a9fc;\n            *(*0x20 + -0x28) = 0x408f400000000000;\n            *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            iVar3 = 0;\n            dVar7 = *0x4c96f8;\ncode_r0x0041f46a:\n            *(*0x20 + -0x58) = iVar3;\n            *(*0x20 + -0x68) = dVar7;\n            dVar8 = 0.0;\n            uVar5 = 0;\n            while( true ) {\n                if ((*0x4c9788 <= dVar8) || (param_2 = *0x5950b0 - *0x5950c0,  param_2 <= *0x565858))\n                goto code_r0x0041f495;\n                *(*0x20 + -0x60) = dVar8;\n                *(*0x20 + -0x78) = uVar5;\n                *(*0x20 + -0xa8) = 0x41f627;\n                fcn.0045e360();\n                *(*0x20 + -0x80) = *(*0x20 + -0xa0);\n                *(*0x20 + -0xa8) = 0x41f655;\n                iVar3 = fcn.0041f760();\n                *(*0x20 + -0x70) = iVar3;\n                LOCK();\n                *0x5657e0 = *0x5657e0 + iVar3;\n                *(*0x20 + -0xa8) = 0x41f66c;\n                fcn.0045e360();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x80) < *(*0x20 + -0xa0)) {\n                    dVar8 = (*(*0x20 + -0xa0) - *(*0x20 + -0x80)) + *(*0x20 + -0x60);\n                    uVar5 = *(*0x20 + -0x70);\n                }\n                else {\n                    if (*0x593598 == 0) goto code_r0x0041f740;\n                    uVar5 = *(*0x20 + -0x70);\n                    uVar4 = SUB168(ZEXT816(uVar5) / ZEXT816(*0x593598), 0);\n                    param_2 = uVar5 % *0x593598;\n                    if (uVar4 < 0) {\n                        dVar7 = uVar4 >> 1 | SUB164(ZEXT816(uVar5) / ZEXT816(*0x593598), 0) & 1;\n                        dVar7 = dVar7 + dVar7;\n                    }\n                    else {\n                        dVar7 = uVar4;\n                    }\n                    dVar8 = *(*0x20 + -0x60) + dVar7 * *0x4c9778;\n                }\n                uVar5 = *(*0x20 + -0x78) + uVar5;\n                if (*0x593500 != 0) break;\n                dVar7 = *(*0x20 + -0x68);\n            }\n            dVar7 = *(*0x20 + -0x68);\ncode_r0x0041f495:\n            if (uVar5 == 0) {\n                *(*0x20 + -0xa8) = 0x41f596;\n                fcn.0040ac20();\n                *0x53f7d0 = 1;\n                *(*0x20 + -0xa8) = 0x41f5c5;\n                fcn.00435f80();\n                dVar7 = *(*0x20 + -0x68);\n                iVar3 = *(*0x20 + -0x58);\n                goto code_r0x0041f46a;\n            }\n            if (*0x593598 <= uVar5) {\n                if (dVar8 < *0x4c9788) {\n                    dVar8 = *0x4c9788;\n                }\n                *(*0x20 + -0x50) = dVar8;\n                *(*0x20 + -0xa8) = 0x41f4cf;\n                iVar3 = fcn.0041f1e0(dVar7, dVar8 / dVar7);\n                iVar2 = *(*0x20 + -0x58);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0xa8) = 0x41f53e;\n                    cVar1 = fcn.0041eee0(*(*0x20 + -0x50) / (*0x593450 * (iVar3 + *(*0x20 + -0x50))));\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0xa8) = 0x41f55c;\n                        fcn.0040ac20();\n                        *0x53f7e4 = 1;\n                        *(*0x20 + -0xa8) = 0x41f571;\n                        fcn.0040ae40();\n                        iVar3 = 5000000000;\n                        dVar7 = *0x4c96f8;\n                    }\n                    else {\n                        iVar3 = *(*0x20 + -0x58);\n                        dVar7 = extraout_XMM0_Qa;\n                    }\n                }\n                else {\n                    param_2 = *(*0x20 + -0x50) + iVar3;\n                    iVar3 = iVar2 - param_2;\n                    if (iVar2 < param_2) {\n                        iVar3 = 0;\n                    }\n                    dVar7 = *(*0x20 + -0x68);\n                }\n                goto code_r0x0041f46a;\n            }\n            *(*0x20 + -0xa8) = 0x41f73c;\n            fcn.00433640();\ncode_r0x0041f740:\n            *(*0x20 + -0xa8) = 0x41f745;\n            in_RAX = fcn.00431cc0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x41f750;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2223
    },
    "0041f960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f960(uchar param_1)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + -0x30) = 0x41f98a;\n            fcn.00434de0();\n            unaff_RBX = *0x5950c0;\n            if (*0x5950b0 - *0x5950c0 != 0) {\n                *(*0x20 + -0x10) = *0x5950c0;\n                *(*0x20 + -0x18) = (*0x5950b8 * 100) / (*0x5950b0 - *0x5950c0);\n                *(*0x20 + -0x30) = 0x41f9cd;\n                fcn.00434de0();\n                *(*0x20 + -0x30) = 0x41f9de;\n                fcn.004356e0();\n                *(*0x20 + -0x30) = 0x41f9e9;\n                fcn.004353e0();\n                *(*0x20 + -0x30) = 0x41f9ee;\n                fcn.00435000();\n                *(*0x20 + -0x30) = 0x41f9fc;\n                fcn.004353e0();\n                *(*0x20 + -0x30) = 0x41fa0d;\n                fcn.004356e0();\n                *(*0x20 + -0x30) = 0x41fa1b;\n                fcn.004353e0();\n                *(*0x20 + -0x30) = 0x41fa2c;\n                fcn.004356e0();\n                *(*0x20 + -0x30) = 0x41fa36;\n                fcn.004353e0();\n                *(*0x20 + -0x30) = 0x41fa47;\n                fcn.004356e0();\n                *(*0x20 + -0x30) = 0x41fa4c;\n                fcn.00434e60();\n                if (*(*0x20 + 0x18) == '\\0') {\n                    if (*0x53f7e4 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41fa65;\n                        fcn.00434de0();\n                        *(*0x20 + -0x30) = 0x41fa76;\n                        fcn.004356e0();\n                        *(*0x20 + -0x30) = 0x41fa7b;\n                        fcn.00434e60();\n                        *0x53f7e4 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41fa89;\n                    fcn.00434de0();\n                    *(*0x20 + -0x30) = 0x41fa9a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x30) = 0x41fa9f;\n                    fcn.00434e60();\n                }\n                *(*0x20 + -0x30) = 0x41faa5;\n                fcn.00434de0();\n                *(*0x20 + -0x30) = 0x41faaa;\n                fcn.00435040();\n                *(*0x20 + -0x30) = 0x41faaf;\n                fcn.00434e60();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41fad7;\n                    fcn.0040ae40();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41fae6;\n            iVar2 = *0x5950b8;\n            in_EAX = fcn.00431cc0();\n            param_1 = iVar2;\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41faf9;\n        fcn.0045a3a0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1245
    },
    "0041fb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041fb20(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045eaa0();\n    }\n    fcn.0040ac20();\n    if (0 < *0x5938c8) {\n        fcn.0041f960(0);\n    }\n    fcn.0042c320();\n    fcn.0042c0e0();\n    *(in_RAX + 0x100f0) = (*(in_RAX + 0x100a8) + 0x3fffffU & 0xffffffffffc00000) >> 6;\n    *(in_RAX + 0x100e8) = *(in_RAX + 0x100e8) + 1;\n    *(in_RAX + 0x100f8) = 0;\n    *(in_RAX + 0x10108) = *0x5273b8;\n    *(in_RAX + 0x10100) = *0x527398;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 281
    },
    "0041fea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ff9c)\n\nint64_t fcn.0041fea0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        iVar2 = arg1;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar2 = 0;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                uVar3 = *0x593598 >> 0xd;\n                if (uVar3 == 0) {\n                    uVar3 = 1;\n                }\n                *(*0x20 + -0x48) = uVar3;\n                uVar3 = unaff_RDI >> 0xd;\n                if ((unaff_RDI & 0x1fff) != 0) {\n                    uVar3 = (unaff_RDI >> 0xd) + 1;\n                }\n                *(*0x20 + -0x40) = uVar3;\n                *(*0x20 + -0x80) = 0x41ff45;\n                iVar2 = fcn.004202e0(arg1);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x20) = in_XMM15;\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x420160;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + -0x48);\n                *(*0x20 + -0x10) = unaff_RDI;\n                if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                    iVar2 = arg1 - unaff_RBX;\n                }\n                else {\n                    iVar2 = 0;\n                }\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x80) = 0x42001b;\n                uVar1 = (**(*0x20 + -0x20))(*(*0x20 + -0x20), *0x20 + -0x20);\n                if (arg1 == '\\0') {\n                    return 0;\n                }\n                *(*0x20 + -0x38) = uVar1;\n                *(*0x20 + -0x80) = 0x420045;\n                fcn.0040ac20();\n                if (*(*0x20 + -0x38) >> 0xd < 0x2000) {\n                    *(*0x20 + -0x80) = 0x42008f;\n                    uVar1 = fcn.004209c0(*(*0x20 + -0x48));\n                    *(*0x20 + -0x50) = 0x1ff;\n                    *(*0x20 + -0x80) = 0x4200b5;\n                    uVar1 = fcn.004204c0(uVar1);\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x80) = 0x4200d2;\n                    fcn.0040ae40();\n                    return *(*0x20 + -0x50) << 0xd;\n                }\n                iVar2 = 0x2000;\n                *(*0x20 + -0x80) = 0x420110;\n                fcn.0045caa0(0x2000);\n            }\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x80) = 0x420125;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = iVar2;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x42013f;\n        fcn.0045eaa0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1239
    },
    "004204c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004204c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX * 0x400000 + arg1 * 0x2000;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x28) = iVar3 + -0x800000000000;\n            *(*0x20 + -0x50) = 0x42051a;\n            arg1 = unaff_RDI;\n            iVar3 = fcn.00427420(unaff_RDI);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x50) = 0x42053b;\n                fcn.0040ae40();\n                *(*0x20 + -0x10) = *(*0x20 + 8) + 0x100b8;\n                *(*0x20 + -0x50) = 0x420552;\n                fcn.0040ac20();\n                if (*(*0x20 + -0x18) < *(*(*0x20 + 8) + 0x10100) + 0x800000000000U) {\n                    *(*(*0x20 + 8) + 0x10100) = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42058a;\n                fcn.0040ae40();\n                if (*(*(*0x20 + 8) + 0x10120) == '\\0') {\n                    *(*0x20 + -0x50) = 0x4205ab;\n                    fcn.00415a40();\n                    iVar3 = *0x5950c0;\n                    *(*0x20 + -0x20) = *(*0x20 + 0x20) * 0x2000;\n                    LOCK();\n                    *0x5950c0 = *0x5950c0 + *(*0x20 + 0x20) * 0x2000;\n                    *(*0x20 + -0x50) = 0x4205d1;\n                    piVar4 = fcn.0042ca60(iVar3);\n                    iVar3 = *(*0x20 + -0x20);\n                    LOCK();\n                    iVar1 = *piVar4;\n                    *piVar4 = *piVar4 - iVar3;\n                    LOCK();\n                    piVar4 = piVar4 + 1;\n                    iVar2 = *piVar4;\n                    *piVar4 = *piVar4 + iVar3;\n                    *(*0x20 + -0x50) = 0x4205f3;\n                    fcn.0042cb40(iVar1, iVar2);\n                }\n                *(*0x20 + -0x50) = 0x420605;\n                fcn.0040ac20();\n                unaff_RDI = 1;\n                *(*0x20 + -0x50) = 0x42061e;\n                fcn.004288e0(*(*0x20 + 0x20));\n                if (*(*0x20 + 0x10) >> 0xd < 0x2000) {\n                    *(*0x20 + -0x50) = 0x42065f;\n                    fcn.00429b80(*(*0x20 + 0x20));\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0x2000;\n                *(*0x20 + -0x50) = 0x420678;\n                fcn.0045caa0(0x2000);\n            }\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x50) = 0x420689;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4206a5;\n        fcn.0045eaa0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1233
    },
    "004206c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004206c0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x00420806;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x00420806:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x00420806;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x00420806;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x00420806;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x00420806;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x420845;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x420855;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 851
    },
    "00420e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00420e40(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00420e40:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x420f38;\n                    fcn.00423720(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x00420efb;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x420ecf;\n                    fcn.00423720(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x00420efb;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00420f66;\ncode_r0x00420efb:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x420f65;\n    in_RAX = fcn.0045ca80(0xfc);\ncode_r0x00420f66:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x420f70;\n    fcn.0045a3a0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x00420e40;\n}\n",
        "token_count": 911
    },
    "00421240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421376)\n// WARNING: Removing unreachable block (ram,0x00421343)\n\nint64_t fcn.00421240(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10130);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x53f820;\ncode_r0x00421281:\n            if (0x10f < uVar3) {\n                if (*0x53f820 != 0xffffffff) {\n                    LOCK();\n                    *0x53f820 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x004213c6;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x004213ba;\n                *(*0x20 + -0x28) = 0x4212ea;\n                iVar1 = fcn.0042c5a0();\ncode_r0x00421320:\n                if (iVar1 != 0) {\n                    if (*0x53f820 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x53f820 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x00421281;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x421317;\n                iVar1 = fcn.0042c5a0();\n                goto code_r0x00421320;\n            }\n            *(*0x20 + -0x28) = 0x4213ba;\n            fcn.0045ca80(2);\ncode_r0x004213ba:\n            *(*0x20 + -0x28) = 0x4213c6;\n            fcn.0045ca80(2);\ncode_r0x004213c6:\n            *(*0x20 + -0x28) = 0x4213d3;\n            in_RAX = fcn.0045ca80(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4213de;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 798
    },
    "00421400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00421400(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x565810 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x5938b0) {\n                                *(*0x20 + -0x28) = *0x565838;\n                                *(*0x20 + -0x10) = *0x593d58;\n                                *(*0x20 + -0x18) = *0x565848;\n                                *(*0x20 + -0x20) = *0x565850;\n                                *(*0x20 + -0x40) = 0x4214b0;\n                                arg2 = *0x565848;\n                                fcn.00434de0();\n                                *(*0x20 + -0x40) = 0x4214c5;\n                                fcn.004356e0();\n                                *(*0x20 + -0x40) = 0x4214d3;\n                                fcn.004353e0();\n                                *(*0x20 + -0x40) = 0x4214e5;\n                                fcn.004356e0();\n                                noname_0 = *(*0x20 + -0x18);\n                                *(*0x20 + -0x40) = 0x4214fb;\n                                fcn.004353e0();\n                                *(*0x20 + -0x40) = 0x42150c;\n                                fcn.004356e0();\n                                *(*0x20 + -0x40) = 0x421516;\n                                fcn.004353e0();\n                                *(*0x20 + -0x40) = 0x421527;\n                                fcn.004356e0();\n                                *(*0x20 + -0x40) = 0x421532;\n                                fcn.004350e0(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x421545;\n                                fcn.004356e0();\n                                *(*0x20 + -0x40) = 0x42154a;\n                                uVar2 = fcn.00434e60();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x42156f;\n                fcn.00433640();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x421585;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x421598;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 970
    },
    "004215c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004215c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x4215e5;\n                iVar2 = fcn.00421940();\n                if (iVar2 == -1) break;\n                *0x53f818 = *0x53f818 + 1;\n            }\n            if ((*0x53f81c & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x565810;\n                iVar2 = 0;\n                uVar1 = *0x565810;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x42168d;\n                        fcn.0041f140();\n                        *(*0x20 + -0x40) = 0x421692;\n                        fcn.004268e0();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x42163a;\n                    fcn.0042c6e0(0x565b18);\n                    *(*0x20 + -0x40) = 0x42165c;\n                    fcn.0042c6e0(*(*0x20 + -0x10) + 0x565b70);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x4216a8;\n                fcn.0045ca80(2);\n            }\n            *(*0x20 + -0x40) = 0x4216b9;\n            fcn.00433640();\n        }\n        *(puVar4 + -8) = 0x4216bf;\n        fcn.0045a3a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 668
    },
    "004216e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004216e0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = unaff_R14;\n    if (*0x593680 != 0) {\n        fcn.0045c6e0();\n        iVar2 = *0x53f808;\n    }\n    *0x53f808 = iVar2;\n    fcn.0040ac20();\n    *0x53f810 = 1;\n    fcn.00404fe0();\n    fcn.00435f80();\n    do {\n        while (iVar2 = fcn.00421940(),  iVar2 != -1) {\n            *0x53f814 = *0x53f814 + 1;\n            fcn.0045a1e0();\n        }\n        while (cVar1 = fcn.00423a40(),  cVar1 != '\\0') {\n            fcn.0045a1e0();\n        }\n        fcn.0040ac20();\n        if (*0x53f81c == -0x80000000) {\n            *0x53f810 = 1;\n            fcn.00435f80();\n        }\n        else {\n            fcn.0040ae40();\n        }\n    } while( true );\n}\n",
        "token_count": 340
    },
    "00421840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00421840(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x4218b4;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4218c5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 418
    },
    "00421940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421985)\n// WARNING: Removing unreachable block (ram,0x00421a76)\n\nulong fcn.00421940(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar7 = *0x53f81c & 0x80000000;\n            if (uVar7 == 0) {\n                *0x53f81c = *0x53f81c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x565810;\n            *(*0x20 + -0x24) = uVar7 == 0;\n            if (uVar7 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x004219d1:\n            do {\n                *(*0x20 + -0x50) = 0x4219dd;\n                iVar5 = fcn.00421240();\n                if (iVar5 == 0) {\n                    uVar7 = *0x53f81c & 0x80000000;\n                    if (uVar7 == 0) {\n                        *0x53f81c = *0x53f81c | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar7 == 0;\n                    iVar5 = -1;\ncode_r0x00421a91:\n                    *(*0x20 + -0x32) = bVar9;\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x50) = 0x421aaf;\n                    fcn.00421400(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x32) != '\\0') {\n                        *(*0x20 + -0x48) = 0x4b1120;\n                        *(*0x20 + -0x50) = 0x421ac8;\n                        fcn.0045a260();\n                        *0x53f7e0 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar5 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x421a12;\n                    iVar6 = fcn.00421840();\n                    *(*0x20 + -0x20) = iVar6;\n                    if (iVar5 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar6 + 0x20);\n                        *(*0x20 + -0x50) = 0x421a30;\n                        cVar4 = fcn.00421d00();\n                        if (cVar4 == '\\0') {\n                            iVar5 = 0;\n                        }\n                        else {\n                            iVar5 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x565868 = *0x565868 + iVar5;\n                        }\n                        bVar9 = false;\n                        goto code_r0x00421a91;\n                    }\n                    goto code_r0x004219d1;\n                }\n                iVar2 = *(iVar5 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x31) = *(iVar5 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x421b1a;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x421b2b;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x421b38;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x421b49;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x421b52;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x421b65;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x421b6e;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x421b73;\n            fcn.00435040();\n            *(*0x20 + -0x50) = 0x421b78;\n            fcn.00434e60();\n            *(*0x20 + -0x50) = 0x421b89;\n            fcn.00433640();\n        }\n        *(puVar8 + -8) = 0x421b8f;\n        fcn.0045a3a0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1435
    },
    "00421ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421bdc)\n\nvoid fcn.00421ba0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x53f81c & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x53f81c = *0x53f81c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x565810;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x421c3d;\n                    uVar2 = fcn.00421840();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x421c6e;\n                        fcn.00421d00();\n                        *(*0x20 + -0x38) = 0x421c85;\n                        fcn.00421400(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x421c5b;\n                    fcn.00421400();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x4b1128;\n                    *(*0x20 + -0x38) = 0x421c9f;\n                    fcn.0045a260();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x421ce8;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421cf3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 769
    },
    "00422bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422bc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x565850 == 0.0) {\n        return;\n    }\n    if (*0x545610 != '\\0') {\n        fcn.004504c0();\n    }\n    do {\n        iVar1 = *0x565840;\n        uVar3 = (*0x593d58 - *0x565848) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x565850 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x565838 - iVar1) {\ncode_r0x00422cd9:\n                if (*0x545610 != '\\0') {\n                    fcn.004505c0();\n                }\n                return;\n            }\n            iVar2 = fcn.00421940(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x565850 = 0.0;\n                goto code_r0x00422cd9;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x565840 == iVar1);\n    } while( true );\n}\n",
        "token_count": 438
    },
    "00422e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422e20(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x422eb5;\n                fcn.00422dc0();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x422e79;\n                    fcn.00423780();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x422e87;\n                    iVar2 = fcn.004234a0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x59344c == 1)) {\n                    *(*0x20 + -0x28) = 0x422ef3;\n                    fcn.0041e560();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x422f07;\n            in_RAX = fcn.0045ca80(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x422f17;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 790
    },
    "00422f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422f40(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x422f86;\n                fcn.00422dc0();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x59344c == 1)) {\n                        *(*0x20 + -0x58) = 0x423085;\n                        fcn.0041e560();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x423097;\n                    fcn.00423780();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x4230a5;\n                    iVar3 = fcn.004234a0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x004230e6;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x423038;\n                    fcn.0045d3c0(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x4230e6;\n            fcn.0045cb40(arg1);\ncode_r0x004230e6:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x4230f3;\n            in_RAX = fcn.0045cb40(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42310d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1375
    },
    "00423140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00423140(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x42316a;\n                fcn.00422dc0();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x42319b;\n                    iVar3 = fcn.004237e0();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x4231b4;\n                    fcn.00423720();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x423205;\n            in_RAX = fcn.0045ca80(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423210;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "00423220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00423220(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00423720();\n        }\n        else {\n            fcn.00423780();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00423720();\n        }\n        else {\n            fcn.00423780();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x53fa60 = *0x53fa60 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x593d90;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x593d90 = *0x593d90 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 367
    },
    "00423320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423320(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.00423880();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.00423780();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.004234a0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x59344c == 1) {\n            fcn.0041e560();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004233e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004233e0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x423416;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x423425;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 263
    },
    "00423440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423440(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x423476;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x423485;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 262
    },
    "004234a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004234a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53f9e8 == 0) {\n        piVar1 = NULL;\n        goto code_r0x004234c9;\n    }\n    while( true ) {\n        if (*0x53f9e8 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x53f9e8 >> 0x13) << 3;\n            *0x53f9e8 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00423440();\n            piVar1 = piStack32;\n        }\ncode_r0x004234c9:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x53fa38 != 0) {\n            fcn.0040ac20();\n            iStack72 = *0x53fa38;\n            if (*0x53fa38 != 0) {\n                fcn.004259e0();\n                fcn.00425b60();\n            }\n            fcn.0040ae40();\n        }\n        if (iStack72 != 0) goto code_r0x004235be;\n        auStack24 = CONCAT88(&iStack72, 0x4236c0);\n        fcn.0045a260();\n        if (iStack72 != 0) break;\n        fcn.00433640();\n    }\n    fcn.0040ac20();\n    fcn.00425b60();\n    fcn.0040ae40();\ncode_r0x004235be:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.0040ab20();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00423720();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 665
    },
    "00423940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423940(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x423965;\n            fcn.0040ac20();\n            if (*0x53f9e0 == 0) {\n                *0x53f9e8 = 0;\n                if (*0x53fa48 != NULL) {\n                    for (; *0x53fa48 != NULL; *0x53fa48 = **0x53fa48) {\n                        (*0x53fa48)[2] = 0x53fa38;\n                    }\n                    if (*0x53fa38 == 0) {\n                        *0x53fa38 = *0x53fa48;\n                        *0x53fa40 = *0x53fa50;\n                        *0x53fa48 = in_XMM15;\n                    }\n                    else {\n                        **0x53fa50 = *0x53fa38;\n                        *(*0x53fa38 + 8) = *0x53fa50;\n                        *0x53fa38 = *0x53fa48;\n                        *0x53fa48 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x423998;\n                fcn.0040ae40();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x423a2b;\n            fcn.00433640();\n        }\n        *(puVar1 + -8) = 0x423a31;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00423a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00423a40(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if ((*0x59344c == 0) && (*0x53fa38 != 0)) {\n        fcn.0045a260();\n        uVar1 = *0x53fa38;\n        fcn.0040ae40();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.0040ae40();\n    return 0;\n}\n",
        "token_count": 180
    },
    "00423da1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00423da1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x565870);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "00423e41": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00423e41(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x565870);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00424040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00424040(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10180)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x545610 != '\\0') {\n        fcn.004504c0();\n    }\n    arg1 = *(in_RAX + 0x103f8);\n    bVar6 = false;\ncode_r0x004240ed:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x004241f8:\n            if (bVar6) {\n                fcn.0040ae40();\n            }\n            if (*0x545610 != '\\0') {\n                fcn.004505c0();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10188);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10188;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x004240ed;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10180;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10180) = 0x8000000000000000;\n            goto code_r0x004241f8;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.0040ac20();\n        }\n        uVar7 = fcn.00424280(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10188) = *(in_RAX + 0x10188) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 850
    },
    "00424280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004242b2)\n\nulong fcn.00424280(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar8 = unaff_RSI;\n        uVar11 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x53f81c & 0x80000000;\n            if (uVar6 == 0) {\n                *0x53f81c = *0x53f81c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x565810;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x424430;\n                    fcn.00421400(*(*0x20 + -0x84));\n                    if (*0x545610 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x424445;\n                        fcn.0040ae40();\n                        *(*0x20 + -0xa8) = 0x42445e;\n                        fcn.00450520(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x42446a;\n                        fcn.0040ac20();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar8 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar11 = arg3;\n                if (arg1 <= uVar8) goto code_r0x0042463f;\n                uVar9 = *(unaff_RBX + uVar8 * 8);\n                uVar8 = uVar9 >> 0x14;\n                if (0x3f < uVar8) goto code_r0x00424632;\n                uVar8 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (uVar9 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar9 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar11 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar8 + uVar11 + 0x21000;\n                iVar12 = uVar8 + uVar11 + 0x21040;\n                uVar11 = arg3 >> 3;\n                if (-iVar1 < uVar11 || -uVar11 == iVar1) {\n                    uVar11 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar11;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x38) = uVar9;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar12;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar13 = 0; uVar13 < uVar11; uVar13 = uVar13 + 1) {\n                    *(*0x20 + -0x10) = unaff_RDI + uVar13;\n                    if (uVar11 <= uVar13) {\ncode_r0x0042461a:\n                        *(*0x20 + -0xa8) = 0x424625;\n                        fcn.0045ca80(uVar11);\n                        goto code_r0x00424625;\n                    }\n                    uVar10 = *(unaff_RDI + uVar13) & ~*(uVar13 + iVar12);\n                    if (uVar10 != 0) {\n                        *(*0x20 + -0x60) = uVar13;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar10) != 0) {\n                                uVar9 = uVar9 + uVar13 * 8 + uVar5;\n                                if (0x1ff < uVar9) {\n                                    *(*0x20 + -0xa8) = 0x42461a;\n                                    fcn.0045caa0(0x200);\n                                    goto code_r0x0042461a;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar10;\n                                uVar2 = *(uVar8 + 0x20000 + uVar9 * 8);\n                                *(*0x20 + -0xa8) = 0x42452e;\n                                iVar4 = fcn.00421840();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x42456e;\n                                    fcn.0040ae40();\n                                    *(*0x20 + -0xa8) = 0x42457a;\n                                    uVar3 = fcn.00421d00();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x42458a;\n                                    fcn.0040ac20();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    uVar10 = ~*(*(*0x20 + -0x60) + *(*0x20 + -0x20)) & **(*0x20 + -0x10);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar11 = *(*0x20 + -0x68);\n                                uVar9 = *(*0x20 + -0x38);\n                                iVar12 = *(*0x20 + -0x20);\n                                uVar13 = *(*0x20 + -0x60);\n                                uVar8 = *(*0x20 + -0x58);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar11 * 8;\n                arg3 = arg3 + uVar11 * -8;\n            }\ncode_r0x00424625:\n            *(*0x20 + -0xa8) = 0x424632;\n            fcn.0045cb60(0x40);\ncode_r0x00424632:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x42463f;\n            fcn.0045caa0(0x40);\ncode_r0x0042463f:\n            *(*0x20 + -0xa8) = 0x424647;\n            in_RAX = fcn.0045caa0(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = uVar8;\n        *(puVar7 + 0x30) = uVar11;\n        *(puVar7 + -8) = 0x42466b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2389
    },
    "00424aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00424aa0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045eaa0();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x00424af7;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00424af7:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.0045ca80(0x80);\n            }\n            uVar3 = fcn.00417100(iVar2 + 0x16a38);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00417100();\n    return uVar3;\n}\n",
        "token_count": 462
    },
    "00425b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00425b60(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x425bdd;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x425bee;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425bf8;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425bfd;\n            fcn.00435000();\n            *(*0x20 + -0x38) = 0x425c07;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425c0c;\n            fcn.00435000();\n            *(*0x20 + -0x38) = 0x425c16;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425c1b;\n            fcn.00435000();\n            *(*0x20 + -0x38) = 0x425c25;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425c2a;\n            fcn.00435040();\n            *(*0x20 + -0x38) = 0x425c2f;\n            fcn.00434e60();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425c45;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x425c55;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 813
    },
    "00425c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00425c80(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x425ca7;\n            iVar6 = fcn.00423e40();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x425cce;\n                fcn.00421ba0();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x425cfe;\n                fcn.0040ac20();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x425d53;\n                        fcn.0040ae40();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x565870) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x425e25;\n                        fcn.0040ae40();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x425e6b;\n                    fcn.0045caa0(0x40);\n                }\n                *(*0x20 + -0x48) = 0x425e78;\n                fcn.0045caa0(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x425e89;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x425e99;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1417
    },
    "00425ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00425ec0(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t *piVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x48) = 0x425ee6;\n            iVar4 = fcn.00423e40();\n            if (iVar4 != 0) {\n                *(*0x20 + -0x30) = iVar4;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x425f0d;\n                fcn.00421ba0();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x30) + 0x18);\n                *(*0x20 + -0x10) = *(*0x20 + -0x30) + 0x78;\n                *(*0x20 + -0x48) = 0x425f2f;\n                fcn.0040ac20();\n                iVar4 = *(*0x20 + -0x30);\n                piVar11 = iVar4 + 0x80;\n                do {\n                    piVar7 = piVar11;\n                    piVar11 = *piVar7;\n                    if (piVar11 == NULL) {\n                        piVar11 = NULL;\n                        goto code_r0x00425f70;\n                    }\n                } while ((*(piVar11 + 1) != *(*0x20 + -0x20)) || (*(piVar11 + 10) != *(*0x20 + 0x10)));\n                *piVar7 = *piVar11;\ncode_r0x00425f70:\n                *(*0x20 + -0x28) = piVar11;\n                if (*(iVar4 + 0x80) != 0) goto code_r0x00425ff9;\n                uVar8 = *(iVar4 + 0x18) + 0x800000000000;\n                uVar9 = uVar8 >> 0x2a;\n                if (uVar9 < 0x40) {\n                    uVar5 = *(iVar4 + 0x18) >> 0xd;\n                    uVar6 = (uVar5 & 0x1ff) >> 3;\n                    if (uVar6 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x565870) + (uVar8 >> 0x16 & 0xfffff) * 8) + uVar6 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar5 & 7));\ncode_r0x00425ff9:\n                        *(*0x20 + -0x48) = 0x426005;\n                        fcn.0040ae40();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x48) = 0x42604b;\n                    fcn.0045caa0(0x40);\n                }\n                *(*0x20 + -0x48) = 0x426058;\n                fcn.0045caa0(0x40);\n            }\n            unaff_BL = 0x20;\n            *(*0x20 + -0x48) = 0x426069;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + -8) = 0x426078;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1205
    },
    "004260a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004260a0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong *puVar5;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    puVar5 = fcn.00417100();\n    fcn.0040ae40();\n    *(puVar5 + 10) = 1;\n    if (*0x593680 == 0) {\n        puVar5[2] = unaff_RBX;\n    }\n    else {\n        fcn.0045c6e0(unaff_RBX);\n    }\n    puVar5[3] = arg1;\n    if (*0x593680 == 0) {\n        puVar5[4] = unaff_RDI;\n        puVar5[5] = uStack0000000000000028;\n    }\n    else {\n        fcn.0045c700(puVar5 + 4, unaff_RDI, in_R8, in_R9);\n        fcn.0045c6e0(uStack0000000000000028);\n    }\n    cVar4 = fcn.00425c80();\n    if (cVar4 != '\\0') {\n        if (*0x59344c != 0) {\n            fcn.00411ec0(0);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            fcn.0041cd60();\n            fcn.0041cbc0(0x527280);\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        return 1;\n    }\n    fcn.0040ac20();\n    *0x56c1d8 = *0x56c1d8 - *0x56c1a8;\n    *puVar5 = *0x56c1c0;\n    *0x56c1c0 = puVar5;\n    fcn.0040ae40();\n    return 0;\n}\n",
        "token_count": 656
    },
    "00426a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426a60(ulong arg1)\n\n{\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x528860 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x593680 == 0) {\n                    *(in_RAX + 0x10118) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x426aaf;\n                    in_RAX = fcn.0045c6e0();\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x426ac6;\n                fcn.0042b820();\n                *(*0x20 + -0x28) = 0x426ad0;\n                fcn.00428d60();\n                arg1_00 = *0x5273a0;\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x10078) = *0x5273a0;\n                if (*0x593680 == 0) {\n                    *(arg2 + 0x10110) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x426b0b;\n                    fcn.0045c5e0(arg1_00, arg2, in_R8, in_R9);\n                }\n                *(arg2 + 0x10100) = *0x5273a0;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x528860;\n            *(*0x20 + -0x28) = 0x426b2d;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x426b3e;\n            fcn.004356e0();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x426b5a;\n            fcn.004354e0(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x426b5f;\n            fcn.00435040();\n            *(*0x20 + -0x28) = 0x426b65;\n            fcn.00434e60();\n            *(*0x20 + -0x28) = 0x426b6a;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x426b7b;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x426b85;\n            fcn.004354e0();\n            *(*0x20 + -0x28) = 0x426b8a;\n            fcn.00435040();\n            *(*0x20 + -0x28) = 0x426b8f;\n            fcn.00434e60();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x426ba5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x426bba;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1014
    },
    "004277e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004277e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10120) != '\\0') goto code_r0x00427852;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x565870);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00427852:\n                *(*0x20 + -0x20) = 0x42785d;\n                iVar1 = fcn.0042b9e0();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x527398;\n            }\n            *(*0x20 + -0x20) = 0x42788c;\n            in_RAX = fcn.0045caa0(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42789c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 516
    },
    "00428620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00428620(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x00428739;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x00428739:\n                    *(*0x20 + -0x40) = 0x42873e;\n                    iVar2 = fcn.004278c0();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x5273a0;\n                        }\n                        return 0;\n                    }\ncode_r0x00428778:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x428794;\n                    fcn.00427420(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x428705;\n                    iVar2 = fcn.0042a1c0(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00428778;\n                    }\n                    *(*0x20 + -0x40) = 0x4287e7;\n                    fcn.00434de0();\n                    *(*0x20 + -0x40) = 0x4287f8;\n                    fcn.004356e0();\n                    *(*0x20 + -0x40) = 0x428805;\n                    fcn.004353e0();\n                    *(*0x20 + -0x40) = 0x428816;\n                    fcn.004356e0();\n                    *(*0x20 + -0x40) = 0x428825;\n                    fcn.004353e0();\n                    *(*0x20 + -0x40) = 0x42882a;\n                    fcn.00435040();\n                    *(*0x20 + -0x40) = 0x42882f;\n                    fcn.00434e60();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x428845;\n                    fcn.00434de0();\n                    *(*0x20 + -0x40) = 0x428856;\n                    fcn.004356e0();\n                    *(*0x20 + -0x40) = 0x428869;\n                    fcn.004353e0();\n                    *(*0x20 + -0x40) = 0x42887a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x40) = 0x428885;\n                    fcn.00435540();\n                    *(*0x20 + -0x40) = 0x42888a;\n                    fcn.00435040();\n                    *(*0x20 + -0x40) = 0x42888f;\n                    fcn.00434e60();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x4288a5;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x40) = 0x4288b2;\n                fcn.0045caa0(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x4288bd;\n            in_RAX = fcn.0045caa0(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4288cd;\n        fcn.0045eaa0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1554
    },
    "004288e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004288e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    char unaff_DIL;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = unaff_RBX + 0x800000000000;\n            if (uVar7 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            iVar1 = unaff_RBX + arg1 * 0x2000;\n            iVar3 = arg1 * 0x2000 + unaff_RBX + -1;\n            if ((unaff_DIL == '\\0') && (*(in_RAX + 0x10108) + 0x800000000000U < iVar1 + 0x7fffffffffffU)) {\n                *(in_RAX + 0x10108) = iVar3;\n            }\n            if (arg1 == 1) break;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = uVar7 >> 0x16;\n            uVar5 = iVar1 + 0x7fffffffffff;\n            uVar8 = uVar5 >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar10 = (iVar3 & 0x3fffff) >> 0xd;\n            if (uVar8 == uVar9) {\n                uVar7 = uVar7 >> 0x23;\n                if (uVar7 < 0x2000) {\n                    *(*0x20 + -0x58) = 0x428a54;\n                    fcn.00429c80((uVar10 - unaff_RBX) + 1);\n                    goto code_r0x00428ae9;\n                }\n                *(*0x20 + -0x58) = 0x428b07;\n                fcn.0045caa0(0x2000);\n                uVar5 = uVar9;\ncode_r0x00428b0b:\n                while( true ) {\n                    uVar10 = uVar5 + 1;\n                    if (uVar8 <= uVar10) {\n                        if (0x1fff < *(*0x20 + -0x18) >> 0x23) {\n                            *(*0x20 + -0x58) = 0x428b85;\n                            iVar3 = fcn.0045caa0(0x2000);\n                            goto code_r0x00428b85;\n                        }\n                        *(*0x20 + -0x58) = 0x428b71;\n                        fcn.00429c80(*(*0x20 + -0x28) + 1);\n                        goto code_r0x00428ae9;\n                    }\n                    if (0x1fff < uVar10 >> 0xd) break;\n                    uVar5 = (uVar10 & 0x1fff) * 0x80 + *(uVar7 + 0x78 + (uVar10 >> 0xd) * 8);\n                    uVar9 = uVar10;\n                    for (iVar3 = 0; uVar10 = uVar5,  uVar5 = uVar9,  iVar3 < 8; iVar3 = iVar3 + 1) {\ncode_r0x00428b85:\n                        *(uVar10 + iVar3 * 8) = 0;\n                        uVar5 = uVar10;\n                    }\n                }\n                *(*0x20 + -0x58) = 0x428ba5;\n                fcn.0045caa0(0x2000);\n            }\n            else if (uVar7 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x18) = uVar5;\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x28) = uVar10;\n                *(*0x20 + -0x30) = uVar9;\n                uVar9 = (uVar9 & 0x1fff) << 7;\n                *(*0x20 + -0x58) = 0x428a08;\n                fcn.00429c80(-(unaff_RBX - 0x200));\n                uVar7 = *(*0x20 + 8);\n                uVar8 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x30);\n                goto code_r0x00428b0b;\n            }\n            unaff_DIL = uVar8;\n            arg1 = 0x2000;\n            *(*0x20 + -0x58) = 0x428bb2;\n            in_RAX = fcn.0045caa0(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        puVar6[0x20] = unaff_DIL;\n        *(puVar6 + -8) = 0x428bcc;\n        fcn.0045eaa0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_DIL = puVar6[0x20];\n        *0x20 = puVar6;\n    } while( true );\n    if (uVar7 >> 0x23 < 0x2000) {\n        uVar4 = unaff_RBX & 0x3fffff;\n        uVar5 = uVar4 >> 0x13;\n        if (uVar5 < 8) {\n            puVar2 = (uVar7 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar7 >> 0x23) * 8) + uVar5 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar4 >> 0xd & 0x3f));\n            goto code_r0x00428ab5;\n        }\n        *(*0x20 + -0x58) = 0x428adc;\n        fcn.0045caa0(8);\n    }\n    *(*0x20 + -0x58) = 0x428ae9;\n    fcn.0045caa0(0x2000);\ncode_r0x00428ae9:\n    arg1 = *(*0x20 + -0x10);\ncode_r0x00428ab5:\n    *(*0x20 + -0x58) = 0x428ac5;\n    fcn.00426e40(arg1);\n    return;\n}\n",
        "token_count": 1746
    },
    "00428d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00428d60(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong noname_1;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x5288a0;\n            *(*0x20 + -0x28) = *0x5288a8;\n            *(*0x20 + -0x24) = *0x5288ac;\n            *(*0x20 + -0x20) = *0x5288b0;\n            *(*0x20 + -0x1c) = *0x5288b4;\n            *(*0x20 + -0x18) = *0x5288b8;\n            *(*0x20 + -0x14) = *0x5288bc;\n            *(*0x20 + -0x10) = *0x5288c0;\n            *(*0x20 + -0xc) = *0x5288c4;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    return;\n                }\n                *(*0x20 + -0x58) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar5 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x50) = uVar5;\n                *(*0x20 + -0x70) = 0x428dfd;\n                iVar3 = fcn.00415fc0(arg1, *0x593598 + uVar5 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = 0;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar1 = *(*0x20 + -0x50);\n                *(*0x20 + -0x38) = uVar1;\n                iVar2 = *(*0x20 + 8);\n                iVar3 = *(*0x20 + -0x58);\n                noname_1 = *(*0x20 + -0x48);\n                *(iVar2 + 8 + iVar3 * 0x18) = 0;\n                *(iVar2 + 0x10 + iVar3 * 0x18) = uVar1;\n                if (*0x593680 == 0) {\n                    *(iVar2 + iVar3 * 0x18) = noname_1;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x428e6d;\n                    fcn.0045c700(arg1, noname_1, iVar3, iVar3 * 3);\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x70) = 0x428e8d;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x428e98;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 931
    },
    "00429480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00429480(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.00429540();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "00429680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429680(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uchar (*pauVar3) [16];\n    int64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00429680:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar2 = *in_RAX;\n        uVar8 = iVar2 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar8;\n        uVar7 = uVar8 >> 0x16;\n        *(*0x20 + -0x18) = uVar7;\n        uVar5 = (iVar2 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar5;\n        uVar4 = 0;\n        do {\n            if (0x3f < uVar4) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42982c;\n                fcn.00426e40(0x40);\n                pauVar3 = *(*0x20 + 8);\n                *pauVar3 = in_XMM15;\n                *pauVar3[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar4 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar8 >> 0x23) goto code_r0x00429865;\n                uVar9 = uVar5 + uVar4 >> 6;\n                if (7 < uVar9) goto code_r0x00429854;\n                puVar1 = (uVar7 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar8 >> 0x23) * 8) + uVar9 * 8;\n                *puVar1 = *puVar1 & ~(1 << (uVar5 + uVar4 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar4 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar8 >> 0x23) goto code_r0x00429847;\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x50) = 0x4297cb;\n                fcn.00429b80(1);\n                in_RAX = *(*0x20 + 8);\n                uVar5 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar4 = *(*0x20 + -0x28);\n                uVar8 = *(*0x20 + -0x10);\n                uVar7 = *(*0x20 + -0x18);\n            }\n            uVar4 = uVar4 + 1;\n        } while( true );\n    }\n    goto code_r0x00429873;\ncode_r0x00429847:\n    *(*0x20 + -0x50) = 0x429854;\n    fcn.0045caa0(0x2000);\ncode_r0x00429854:\n    *(*0x20 + -0x50) = 0x429865;\n    fcn.0045caa0(8);\ncode_r0x00429865:\n    *(*0x20 + -0x50) = 0x429872;\n    in_RAX = fcn.0045caa0(0x2000);\ncode_r0x00429873:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x429885;\n    fcn.0045eaa0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x00429680;\n}\n",
        "token_count": 1180
    },
    "00429b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429b80(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = unaff_RBX >> 6;\n    if (uVar6 < 8) {\n        uVar5 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | 1 << (uVar5 & 0x3f);\n            return;\n        }\n        uVar7 = (arg1 + unaff_RBX) - 1;\n        uVar8 = uVar7 >> 6;\n        if (uVar8 == uVar6) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar5 & 0x3f);\n            return;\n        }\n        if (uVar8 < 8) {\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | -1 << (uVar5 & 0x3f);\n            while (uVar6 = uVar6 + 1,  uVar6 < uVar8) {\n                *(in_RAX + uVar6 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar7 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar8 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.0045caa0(8);\n    }\n    uVar8 = 8;\n    iVar4 = fcn.0045caa0(8);\n    uVar7 = unaff_RBX >> 0xc;\n    if (uVar7 < 8) {\n        uVar5 = uVar6;\n        if (uVar8 == 1) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~(1 << (uVar5 & 0x3f));\n            return;\n        }\n        uVar6 = (uVar8 + uVar6) - 1;\n        uVar9 = uVar6 >> 6;\n        if (uVar9 == uVar7) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~((1 << (uVar8 & 0x3f) & -(uVar8 < 0x40)) - 1 << (uVar5 & 0x3f));\n            return;\n        }\n        if (uVar9 < 8) {\n            puVar2 = iVar4 + uVar7 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (uVar5 & 0x3f));\n            while (uVar7 = uVar7 + 1,  uVar7 < uVar9) {\n                *(iVar4 + uVar7 * 8) = 0;\n            }\n            uVar1 = (uVar6 & 0x3f) + 1;\n            puVar2 = iVar4 + uVar9 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045caa0(8);\n    }\n    fcn.0045caa0(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 938
    },
    "00429c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429c80(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint8_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar6 = unaff_RBX >> 6;\n    if (uVar6 < 8) {\n        uVar5 = unaff_RBX;\n        if (arg1 == 1) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~(1 << (uVar5 & 0x3f));\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar7 = uVar2 >> 6;\n        if (uVar7 == uVar6) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (uVar5 & 0x3f));\n            return;\n        }\n        if (uVar7 < 8) {\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & ~(-1 << (uVar5 & 0x3f));\n            while (uVar6 = uVar6 + 1,  uVar6 < uVar7) {\n                *(in_RAX + uVar6 * 8) = 0;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar7 * 8;\n            *puVar3 = *puVar3 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.0045caa0(8);\n    }\n    fcn.0045caa0(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 510
    },
    "00429da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00429da0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x429ee7;\n                in_RAX = fcn.0045caa0(8);\n                goto code_r0x00429ee7;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x593415 == 0) {\n                        *(*0x20 + -0x40) = 0x429ea5;\n                        uVar4 = fcn.00401e80();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x593415 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x429e38;\n                        in_R8 = fcn.00401e80();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x593415;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x429f13;\n                            in_R9 = fcn.00401e80();\n                            in_RDX = *0x593415;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x00429ee7:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x429f6e;\n                        iVar3 = fcn.00401e80();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((-(uVar1 < 0x40) & 1 << (uVar1 & 0x3f)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x429f91;\n                fcn.0045caa0(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x429f9e;\n            in_RAX = fcn.0045caa0(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x429fb3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1385
    },
    "0042a1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a1c0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.0042a380(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.0042a280(arg1);\n    return iVar1;\n}\n",
        "token_count": 315
    },
    "0042a540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a540(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (in_RAX == 1) {\n                iVar1 = unaff_RBX * 8 + 0xb0;\n                goto code_r0x0042a583;\n            }\n            if (in_RAX - 2U < 2) {\n                iVar1 = unaff_RBX * 8 + 0x40;\ncode_r0x0042a583:\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42a599;\n                iVar1 = fcn.0040d060(0x595100);\n                *0x5934d0 = *0x5934d0 + *(*0x20 + -0x10);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x30) = 0x42a5d2;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42a5e5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 544
    },
    "0042a600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042a600(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42a645;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42a650;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 289
    },
    "0042aa40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042aa40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if (*0x593544 == '\\0') {\n        fcn.0042aaa0();\n        *0x593544 = '\\x01';\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 127
    },
    "0042af20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042af20(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    double *pdVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x42af75;\n            fcn.0045ccf4();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x108;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x170) = 0x42afd7;\n                uVar1 = fcn.00453e40(0x20);\n            }\n            else {\n                *(*0x20 + -0x168) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x170) = 0x42afbf;\n                uVar1 = fcn.00450e00(0, in_RDX, *0x20 + -0x108, 0x20);\n            }\n            *(*0x20 + -0x118) = uVar1;\n            *(*0x20 + -0x170) = 0x42afea;\n            fcn.0040ac20();\n            arg1 = *(*0x20 + -0x118);\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x170) = 0x42b0e6;\n            in_RAX = fcn.0045cac0(arg1, 0x20);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x42b105;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n    *(*0x20 + -0x170) = 0x42b01b;\n    uVar1 = fcn.0042a6c0(*0x20 + -0x108);\n    *(*0x20 + -0x110) = uVar1;\n    if (*(*0x20 + 0x20) == 2) {\n        if (*(*0x20 + 8) < *(*0x20 + 0x10)) {\n            *(*0x20 + -0x170) = 0x42b04a;\n            pdVar2 = fcn.0042a660();\n            *pdVar2 = *(*0x20 + 0x10) / *(*0x20 + 8) + *pdVar2;\n            *(*0x20 + -0x170) = 0x42b085;\n            iVar3 = fcn.0042a660();\n            *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 0x10);\n            goto code_r0x0042b0c0;\n        }\n    }\n    *(*0x20 + -0x170) = 0x42b098;\n    pdVar2 = fcn.0042a660();\n    *pdVar2 = *0x4c9738 + *pdVar2;\n    *(*0x20 + -0x170) = 0x42b0b2;\n    iVar3 = fcn.0042a660();\n    *(iVar3 + 8) = *(iVar3 + 8) + *(*0x20 + 8);\ncode_r0x0042b0c0:\n    *(*0x20 + -0x170) = 0x42b0cc;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 1171
    },
    "0042b820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042b820(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    arg1 = unaff_RBX;\n    uVar1 = fcn.0040d060(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x593680 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.0045c5e0(arg1, in_RAX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 247
    },
    "0042cbe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cbe0(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x593685 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42cc45;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42cc50;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 339
    },
    "0042cca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cca0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1260) = iVar1 + 0x1270;\n        return;\n    }\n    if ((*0x593685 != '\\0') && (in_RAX != 0)) {\n        fcn.00404420();\n        if (*0x593684 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1260) = iVar1 + 0x1270;\n            return;\n        }\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 212
    },
    "0042cd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042cd60(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1260) - (in_RAX + 0x1270) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1260) = 0;\n                if (*0x593411 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1270 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42cddb;\n                        fcn.0041d320(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42cdfe;\n                    fcn.0042cbe0();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar6 = arg1;\n                    if (0xfff < *(in_RAX + 0x1270 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42ce45;\n                        iVar3 = fcn.00411ec0(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar8 = 1 << (uVar4 & 7);\n                            if ((uVar8 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar8;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042cfed;\n                                iVar2 = *(*(uVar4 * 8 + 0x565870) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar8 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar8 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar8;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar6 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar6) goto code_r0x0042cfe5;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1270 + uVar6 * 8) = iVar3;\n                                    uVar6 = uVar6 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1248) = *(in_RAX + 0x1248) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar6;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42cfbc;\n                    fcn.00422f40(arg1);\n                    *(*0x20 + -0x48) = 0x42cfcd;\n                    fcn.0042cbe0();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42cfe5;\n                fcn.0045cb00(arg1, 0x200);\ncode_r0x0042cfe5:\n                *(*0x20 + -0x48) = 0x42cfed;\n                fcn.0045ca80(arg1);\ncode_r0x0042cfed:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42cffa;\n                fcn.0045caa0(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42d005;\n            in_RAX = fcn.0045cae0(uVar4, 0x200);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42d010;\n        fcn.0045eaa0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1570
    },
    "0042d020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d020(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593458 == 0) {\n        fcn.0040ac20();\n        if (*0x593458 == 0) {\n            fcn.0042d2e0();\n            *0x593458 = 1;\n        }\n        fcn.0040ae40();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0042d120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d120(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042d136;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042d136:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042d14e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042d14e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042d220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0042d220(void)\n\n{\n    ulong *puVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if (*(in_RAX + 8) == 0) {\n        iVar2 = fcn.0040d060(0x595120);\n        for (uVar3 = 0; uVar3 < 0x11; uVar3 = uVar3 + 1) {\n            *(iVar2 + uVar3 * 0xf0) = *(in_RAX + 8);\n            *(in_RAX + 8) = uVar3 * 0xf0 + iVar2;\n        }\n    }\n    puVar1 = *(in_RAX + 8);\n    *(in_RAX + 8) = *puVar1;\n    fcn.0040ae40();\n    return puVar1;\n}\n",
        "token_count": 267
    },
    "0042d3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d3e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (uVar1 = _sym.imp.kernel32.dll_CreateIoCompletionPort, \n          *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430b00();\n    if (iStack16 == 0) {\n        fcn.0045df00();\n        return uVar1 & 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0042d4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042d4a0(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x593460 != 0) {\n                return *0x593460;\n            }\n            *0x593460 = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x527388;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42d4fc;\n            uVar1 = fcn.00430b00();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42d527;\n            fcn.0045df00();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d548;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x42d559;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x42d565;\n            fcn.004353e0();\n            *(*0x20 + -0x48) = 0x42d576;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x42d57b;\n            fcn.00434e60();\n            *(*0x20 + -0x48) = 0x42d58c;\n            fcn.00433640();\n        }\n        *(puVar2 + -8) = 0x42d592;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 709
    },
    "0042d5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042d5a0(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x527388 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x593450;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x527388;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42d707;\n                fcn.00430c00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42d74c;\n                    fcn.0045df00();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42d797;\n                        fcn.00434de0();\n                        *(*0x20 + -0x888) = 0x42d7a8;\n                        fcn.004356e0();\n                        *(*0x20 + -0x888) = 0x42d7b4;\n                        fcn.004354e0();\n                        *(*0x20 + -0x888) = 0x42d7c5;\n                        fcn.004356e0();\n                        *(*0x20 + -0x888) = 0x42d7ca;\n                        fcn.00434e60();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42d7db;\n                        fcn.00433640();\n                        goto code_r0x0042d7db;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x593460 = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42d825;\n                            fcn.0042d4a0();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x53ec78;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42d885;\n                        fcn.00430b80();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42d8ab;\n                            fcn.0045df00();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42d8d7;\n                        fcn.0042d940(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042d7db:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42d90b;\n                fcn.0045ca80(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42d910;\n            in_RAX = fcn.00431cc0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42d91b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2017
    },
    "0042dac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042dac0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = unaff_RBX;\n            if (*0x5935e8 == 0) {\n                arg1 = 0x593bc0;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x593bc0;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42db11;\n                fcn.00430a00();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x593bc0) = 0x5c;\n                    *0x5935e8 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x10);\n                    goto code_r0x0042db5f;\n                }\n            }\n            else {\ncode_r0x0042db5f:\n                if (*0x593412 == '\\0') {\n                    uVar1 = *0x5935e8;\n                    if (*0x5935e8 < 0x106) {\n                        *(*0x20 + -0x20) = *0x5935e8 + arg1;\n                        if (*0x5935e8 + arg1 < 0x106) {\n                            uVar2 = 0x593bc0;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x5935e8;\n                            *(*0x20 + -0x50) = 0x42dc0f;\n                            uVar2 = fcn.00445200(*0x5935e8);\n                            arg1 = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42dc38;\n                        fcn.0045d3c0(arg1);\n                        uVar1 = *(*0x20 + -0x20);\n                        if (uVar1 != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42dc5f;\n                            fcn.00430980();\n                            return *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x50) = 0x42dc89;\n                        fcn.0045ca80(0);\n                        arg1 = in_RAX;\n                    }\n                    *(*0x20 + -0x50) = 0x42dc93;\n                    fcn.0045cae0(uVar1, 0x105);\n                }\n                else if (arg1 != 0) {\n                    *(*0x20 + -0x48) = *0x53ec38;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42db98;\n                    fcn.00430a80();\n                    return *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x50) = 0x42dc9d;\n                fcn.0045ca80(arg1);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42dcae;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42dcc5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1230
    },
    "0042dce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042dce0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42dd45;\n            fcn.00430980();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42dda7;\n                iVar1 = fcn.0042da00(0x10);\n                if (*0x593680 != 0) {\n                    *(*0x20 + -0x160) = 0x42ddc5;\n                    fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x53ec20;\n                }\n                *0x53ec20 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42de27;\n                uVar3 = fcn.0042da00(0x1b);\n                if (*0x593680 != 0) {\n                    *(*0x20 + -0x160) = 0x42de45;\n                    fcn.0045c5e0(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x53ec28;\n                }\n                *0x53ec28 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42de85;\n                iVar1 = fcn.0042da00(0xf);\n                if (*0x593680 != 0) {\n                    *(*0x20 + -0x160) = 0x42dea5;\n                    fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x53ec38;\n                }\n                *0x53ec38 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42dedd;\n                iVar2 = fcn.0042da00(0xf);\n                iVar1 = iVar2;\n                if (*0x593680 != 0) {\n                    *(*0x20 + -0x160) = 0x42defb;\n                    iVar2 = fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x53ec40;\n                }\n                *0x53ec40 = iVar1;\n                if ((iVar2 == 0) || (*0x53ec38 == 0)) {\n                    *0x593412 = false;\n                }\n                else {\n                    *0x593412 = *0x53ec20 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42df54;\n                iVar1 = fcn.0042dac0(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42dfa8;\n                    uVar3 = fcn.0042da00(0x12);\n                    if (*0x593680 != 0) {\n                        *(*0x20 + -0x160) = 0x42dfc6;\n                        fcn.0045c5e0(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x53ec60;\n                    }\n                    *0x53ec60 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42dfee;\n                    iVar1 = fcn.0042dac0(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42e047;\n                        uVar3 = fcn.0042da00(0x16);\n                        if (*0x593680 != 0) {\n                            *(*0x20 + -0x160) = 0x42e065;\n                            fcn.0045c5e0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x53ec48;\n                        }\n                        *0x53ec48 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42e0b5;\n                        uVar3 = fcn.0042da00(0x11);\n                        if (*0x593680 != 0) {\n                            *(*0x20 + -0x160) = 0x42e0d3;\n                            fcn.0045c5e0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x53ec68;\n                        }\n                        *0x53ec68 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42e125;\n                        uVar3 = fcn.0042da00(0x17);\n                        if (*0x593680 != 0) {\n                            *(*0x20 + -0x160) = 0x42e145;\n                            fcn.0045c5e0(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x53ec70;\n                        }\n                        *0x53ec70 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42e16d;\n                        iVar1 = fcn.0042dac0(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42e1b4;\n                            iVar1 = fcn.0042da00(0x10);\n                            if (*0x593680 != 0) {\n                                *(*0x20 + -0x160) = 0x42e1d2;\n                                fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x53ec80;\n                            }\n                            *0x53ec80 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42e207;\n                            iVar2 = fcn.0042da00(0xe);\n                            iVar1 = iVar2;\n                            if (*0x593680 != 0) {\n                                *(*0x20 + -0x160) = 0x42e225;\n                                iVar2 = fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x53ec88;\n                            }\n                            *0x53ec88 = iVar1;\n                            if ((*0x53ec80 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42e26c;\n                                iVar1 = fcn.0042dac0(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42e2c5;\n                                    iVar2 = fcn.0042da00(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x593680 != 0) {\n                                        *(*0x20 + -0x160) = 0x42e2e5;\n                                        iVar2 = fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x53ec78;\n                                    }\n                                    *0x53ec78 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42e33a;\n                                        iVar1 = fcn.0042da00(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42e349;\n                                            fcn.0042ee80();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42e36a;\n                                    fcn.00433640();\n                                }\n                                *(*0x20 + -0x160) = 0x42e37b;\n                                fcn.00433640();\n                            }\n                            *(*0x20 + -0x160) = 0x42e38c;\n                            fcn.00433640();\n                        }\n                        *(*0x20 + -0x160) = 0x42e39d;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x160) = 0x42e3ae;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x160) = 0x42e3bf;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x160) = 0x42e3d0;\n            fcn.00433640();\n        }\n        *(puVar6 + -8) = 0x42e3d6;\n        fcn.0045a3a0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3554
    },
    "0042e600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042e6e1)\n// WARNING: Removing unreachable block (ram,0x0042e6f6)\n\nulong fcn.0042e600(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430a80();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.00430980();\n    return 0;\n}\n",
        "token_count": 187
    },
    "0042e720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042e720(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593408 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.00430980();\n            return uStack16;\n        }\n        fcn.00430980();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 142
    },
    "0042ee80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ee80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42eeea;\n            iVar1 = fcn.0042da00(0x18);\n            iVar2 = iVar1;\n            if (*0x593680 != 0) {\n                *(*0x20 + -0x98) = 0x42ef08;\n                iVar1 = fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x53ec30;\n            }\n            *0x53ec30 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42ef55;\n                iVar2 = fcn.0042da00(0x18);\n                if (*0x593680 != 0) {\n                    *(*0x20 + -0x98) = 0x42ef73;\n                    fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x53ec50;\n                }\n                *0x53ec50 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42efc9;\n                iVar1 = fcn.0042da00(0x1a);\n                iVar2 = iVar1;\n                if (*0x593680 != 0) {\n                    *(*0x20 + -0x98) = 0x42efe7;\n                    iVar1 = fcn.0045c5e0(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x53ec58;\n                }\n                *0x53ec58 = iVar2;\n                if ((*0x53ec50 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x53ec58;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42f025;\n                    fcn.00430980();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x53ec50;\n                            *(*0x20 + -0x88) = 0x5935c0;\n                            *(*0x20 + -0x98) = 0x42f076;\n                            fcn.00430980();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x593413 = 1;\n                            *0x5935b8 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42f105;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x98) = 0x42f116;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x98) = 0x42f127;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x98) = 0x42f138;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42f145;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1545
    },
    "0042f200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f200(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0042f200:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42f225;\n        iVar1 = fcn.00430920();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42f26f;\n                    iVar1 = fcn.00445120(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x53f668 = uVar6;\n                    *0x53f670 = uVar6;\n                    if (*0x593680 != 0) {\n                        *(*0x20 + -0x68) = 0x42f2a5;\n                        fcn.0045c5e0(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x53f660;\n                    }\n                    *0x53f660 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    uVar4 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042f2da;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042f42f;\n    }\n    goto code_r0x0042f440;\ncode_r0x0042f2da:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42f365;\n        fcn.00430980();\n        *(*0x20 + -0x18) = 0x496f40;\n        *(*0x20 + -0x10) = 0x4b0ee8;\n        *(*0x20 + -0x68) = 0x42f3a5;\n        uVar2 = fcn.00458800(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42f3c5;\n        fcn.00430a00();\n        *(*0x20 + -0x68) = 0x42f3de;\n        fcn.0042e460();\n        return;\n    }\n    if (uVar4 == 0) goto code_r0x0042f425;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = uVar4;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42f2fd;\n    uVar2 = fcn.00449b40();\n    iVar7 = *0x53f660;\n    uVar4 = *(*0x20 + -0x30);\n    uVar6 = *0x53f668;\n    if (*0x53f668 <= uVar4) goto code_r0x0042f41a;\n    *(*0x53f660 + 8 + uVar4 * 0x10) = iVar1;\n    if (*0x593680 == 0) {\n        *(iVar7 + uVar4 * 0x10) = uVar2;\n        uVar6 = uVar4;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42f33d;\n        fcn.0045c5e0(iVar7, uVar4, param_3, param_4);\n        uVar6 = uVar4;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    uVar4 = *(*0x20 + -0x40);\n    while( true ) {\n        if (uVar4 == 0) {\n            *(*0x20 + -0x68) = 0x42f41a;\n            fcn.0045ca80(0);\n            goto code_r0x0042f41a;\n        }\n        if (*piVar3 == 0) break;\n        uVar4 = uVar4 - 1;\n        piVar3 = piVar3 + (-uVar4 >> 0x3f & 2);\n    }\n    iVar1 = uVar6 + 1;\n    uVar4 = uVar4 - 1;\n    iVar7 = piVar3 + (-uVar4 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042f2da;\ncode_r0x0042f41a:\n    *(*0x20 + -0x68) = 0x42f425;\n    fcn.0045ca80(uVar6);\ncode_r0x0042f425:\n    *(*0x20 + -0x68) = 0x42f42f;\n    fcn.0045ca80(uVar4);\ncode_r0x0042f42f:\n    *(*0x20 + -0x68) = 0x42f43c;\n    fcn.0045ca80(0x1000000);\ncode_r0x0042f440:\n    *(puVar8 + -8) = 0x42f445;\n    fcn.0045a3a0();\n    *0x20 = puVar8;\n    goto code_r0x0042f200;\n}\n",
        "token_count": 1585
    },
    "0042f4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042f4e0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.00430980();\n    }\n    else if (in_RAX == 2) {\n        fcn.00430980();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.0045cac0(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042f61b:\n            fcn.00430b80();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.00430a00();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042f6a0(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042f61b;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 329
    },
    "0042fac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042fac0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.00430a00();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045e360();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.00430b00();\n            if (uStack56 != 1) break;\n            fcn.0045e360();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.0045a260();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.0045a260();\n            return 0xffffffff;\n        }\n    }\n    fcn.0045a260();\n    return 0xffffffff;\n}\n",
        "token_count": 425
    },
    "0042fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042fe60(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.00430980();\n    if (iStack16 == 0) {\n        fcn.0045a260();\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "0042ffe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042ffe0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.00430b00();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045a260();\n        }\n        fcn.00430b00();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.0045a260();\n            fcn.00430980();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004302e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004302e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x430353;\n            fcn.00430c80();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x430396;\n                fcn.0040ac20();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x593408 != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x4303e5;\n                    fcn.00430b00();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x00430418;\n                }\n                else {\ncode_r0x00430418:\n                    *(*0x20 + -0xb8) = 0x430425;\n                    fcn.0040ae40();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x430465;\n                    fcn.00430a80();\n                    puVar3 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x4304ce;\n                            fcn.0045c420();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x4304f7;\n                        fcn.00434de0();\n                        *(*0x20 + -0xb8) = 0x430508;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x430512;\n                        fcn.00435540();\n                        *(*0x20 + -0xb8) = 0x430525;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x43052f;\n                        fcn.00435540();\n                        *(*0x20 + -0xb8) = 0x430545;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x43054a;\n                        fcn.00434e60();\n                        *(*0x20 + -0xb8) = 0x43055b;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0xb8) = 0x430565;\n                    fcn.0045df00();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x430586;\n                    fcn.00434de0();\n                    *(*0x20 + -0xb8) = 0x430597;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x4305a5;\n                    fcn.004353e0();\n                    *(*0x20 + -0xb8) = 0x4305aa;\n                    fcn.00435040();\n                    *(*0x20 + -0xb8) = 0x4305af;\n                    fcn.00434e60();\n                    *(*0x20 + -0xb8) = 0x4305c5;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0xb8) = 0x4305ca;\n                fcn.0045df00();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x4305eb;\n                fcn.00434de0();\n                *(*0x20 + -0xb8) = 0x4305fc;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x430606;\n                fcn.004353e0();\n                *(*0x20 + -0xb8) = 0x43060b;\n                fcn.00435040();\n                *(*0x20 + -0xb8) = 0x430610;\n                fcn.00434e60();\n                *(*0x20 + -0xb8) = 0x430625;\n                fcn.00433640();\n            }\n            *(*0x20 + -0xb8) = 0x43062a;\n            fcn.0045df00();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x43064b;\n            fcn.00434de0();\n            *(*0x20 + -0xb8) = 0x43065c;\n            fcn.004356e0();\n            *(*0x20 + -0xb8) = 0x430666;\n            fcn.004353e0();\n            *(*0x20 + -0xb8) = 0x43066b;\n            fcn.00435040();\n            *(*0x20 + -0xb8) = 0x430670;\n            fcn.00434e60();\n            *(*0x20 + -0xb8) = 0x430685;\n            fcn.00433640();\n        }\n        *(puVar5 + -8) = 0x43068b;\n        fcn.0045a3a0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2288
    },
    "00430840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00430840(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2b0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.0045c1c0();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 247
    },
    "00430f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00430f60(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x430fcd;\n                fcn.0040ac20();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x430fee;\n                    uVar6 = fcn.0040ae40();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x43106b;\n                fcn.00430c80();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x4313ad;\n                fcn.0045df00();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x4313ce;\n                fcn.00434de0();\n                *(*0x20 + -0x560) = 0x4313df;\n                fcn.004356e0();\n                *(*0x20 + -0x560) = 0x4313e9;\n                fcn.004353e0();\n                *(*0x20 + -0x560) = 0x4313ee;\n                fcn.00435040();\n                *(*0x20 + -0x560) = 0x4313f3;\n                fcn.00434e60();\n                *(*0x20 + -0x560) = 0x431405;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x560) = 0x431416;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x431425;\n        fcn.0045a3a0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x43109a;\n    fcn.0040ae40();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x4310d5;\n    fcn.0040ac20();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x4310ef;\n    fcn.00430980();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x431330;\n        fcn.0040ae40();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x43134a;\n        uVar6 = fcn.00430980();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x431138;\n    fcn.00430a00();\n    *(*0x20 + -0x560) = 0x43115a;\n    fcn.0040ae40();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x00431208;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x00431208;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22b0) == '\\0') {\n            bVar12 = false;\n            goto code_r0x00431208;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x00431208:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x43122c;\n        cVar5 = fcn.004348a0(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.0045da80;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x431285;\n            fcn.00430a00();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x4312d0;\n    fcn.00430980();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x4312fe;\n    uVar6 = fcn.00430980();\n    return uVar6;\n}\n",
        "token_count": 2709
    },
    "00431440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431440(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x431467;\n            fcn.0044b660();\n            *(*0x20 + -0x20) = 0x43146c;\n            piVar1 = fcn.0044bde0();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4314b8;\n                fcn.00433640();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x4314c7;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4314dc;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 565
    },
    "00431500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431500(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x431546;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x431556;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 348
    },
    "00431dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00431dc0(uint64_t arg1, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar8 + 0xa0);\n    uVar9 = uVar7;\n    if (*(uVar7 + 0x70) != 0) goto code_r0x00431e2f;\n    if (*0x540050 == 0) goto code_r0x00431e2f;\n    fcn.0040ac20();\n    arg2 = uVar7 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar7;\n    while( true ) {\n        while ((iVar8 = *0x540050,  *(uVar7 + 0x70) < *(uVar7 + 0x78) >> 1 && (*0x540050 != 0))) {\n            if (*0x593680 == 0) {\n                puVar1 = *0x540050 + 0x28;\n                *0x540050 = *(*0x540050 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045c780(uVar7, arg2, *0x540050);\n                arg2 = fcn.0045c700(uVar7, 0, iVar8, iVar8 + 0x28);\n            }\n            iVar6 = *(uVar7 + 0x70);\n            iVar4 = *(uVar7 + 0x68);\n            iVar5 = iVar4;\n            if (*(uVar7 + 0x78) < iVar6 + 1U) {\n                arg3 = iVar8;\n                arg4 = iVar6;\n                iVar5 = fcn.00445200(iVar6);\n                *(uStack16 + 0x78) = iVar6;\n                uVar7 = uStack16;\n                arg2 = uStack24;\n                if (*0x593680 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar5 = fcn.0045c5e0(iVar6, uStack16, arg3, arg4);\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar7 + 0x70) = iVar6 + 1;\n            if (*0x593680 == 0) {\n                *(iVar5 + iVar6 * 8) = iVar8;\n            }\n            else {\n                fcn.0045c760(uVar7, arg2, iVar8, iVar6);\n            }\n        }\n        fcn.0040ae40();\n        arg1 = uVar7;\n        iVar8 = iStack40;\n        uVar9 = uStack16;\ncode_r0x00431e2f:\n        iVar6 = *(uVar9 + 0x70);\n        if (iVar6 == 0) {\n            iVar4 = 0;\n            goto code_r0x00431e7c;\n        }\n        iVar4 = *(*(uVar9 + 0x68) + -8 + iVar6 * 8);\n        if (*0x593680 == 0) {\n            *(*(uVar9 + 0x68) + -8 + iVar6 * 8) = 0;\n        }\n        else {\n            fcn.0045c780(arg1, arg2, iVar6);\n        }\n        uVar7 = iVar6 - 1;\n        arg2 = *(uVar9 + 0x78);\n        if (uVar7 <= arg2) break;\n        fcn.0045cb00(uVar7, arg2);\n    }\n    *(uVar9 + 0x70) = uVar7;\ncode_r0x00431e7c:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040cd00();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1167
    },
    "00432000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432000(ulong arg1, ulong arg2)\n\n{\n    uint64_t arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t arg2_00;\n    int64_t arg2_01;\n    int64_t arg3;\n    int64_t iVar7;\n    ulong in_R9;\n    int64_t iVar8;\n    uint64_t arg1_02;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x593680 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.0045c760(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.004322c0();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.00432300();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        iVar5 = 0;\n        iVar6 = 0;\n        iVar7 = arg3;\n        iVar4 = arg2_00;\n        while( true ) {\n            arg1_02 = *(iVar4 + 0x70);\n            if (arg1_02 <= *(iVar4 + 0x78) >> 1) break;\n            arg1_00 = arg1_02 - 1;\n            if (arg1_02 <= arg1_00) {\ncode_r0x004322a5:\n                fcn.0045ca80(arg1_02);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar8 = *(*(iVar4 + 0x68) + -8 + arg1_02 * 8);\n            if (*0x593680 == 0) {\n                *(*(iVar4 + 0x68) + -8 + arg1_02 * 8) = 0;\n                arg1_01 = iVar5;\n                arg2_01 = iVar6;\n                iVar5 = iVar8;\n            }\n            else {\n                fcn.0045c720(iVar5, iVar6, iVar7, iVar4);\n                arg1_01 = iVar5;\n                arg2_01 = iVar6;\n                iVar5 = iVar8;\n            }\n            if (*(iVar4 + 0x78) < arg1_00) {\n                fcn.0045cb00(arg1_00, *(iVar4 + 0x78));\n                goto code_r0x004322a5;\n            }\n            *(iVar4 + 0x70) = arg1_00;\n            iVar6 = iVar5;\n            if (arg2_01 != 0) {\n                if (*0x593680 == 0) {\n                    *(arg1_01 + 0x28) = iVar5;\n                    iVar6 = arg2_01;\n                }\n                else {\n                    fcn.0045c720(arg1_01, arg2_01, iVar7, iVar4);\n                    iVar6 = arg2_01;\n                }\n            }\n        }\n        fcn.0040ac20();\n        if (*0x593680 == 0) {\n            *(iVar5 + 0x28) = *0x540050;\n            *0x540050 = iVar6;\n        }\n        else {\n            fcn.0045c700(iVar5, *0x540050, iVar7, iVar4);\n            fcn.0045c6e0(iVar6);\n        }\n        fcn.0040ae40();\n    }\n    if (*0x593680 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.00411a60();\n    }\n    iVar6 = *(arg2_00 + 0x70);\n    iVar7 = *(arg2_00 + 0x68);\n    iVar4 = iVar7;\n    if (*(arg2_00 + 0x78) < iVar6 + 1U) {\n        iVar5 = arg3;\n        iVar8 = arg2_00;\n        iVar4 = fcn.00445200(iVar6);\n        *(arg2_00 + 0x78) = iVar6;\n        if (*0x593680 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n            iVar6 = iVar7;\n        }\n        else {\n            iVar4 = fcn.0045c5e0(iVar6, arg2_00, iVar5, iVar8);\n            iVar6 = iVar7;\n        }\n    }\n    *(arg2_00 + 0x70) = iVar6 + 1;\n    if (*0x593680 == 0) {\n        *(iVar4 + iVar6 * 8) = in_RAX;\n    }\n    else {\n        fcn.0045c5e0(iVar6, iVar6 + 1, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1403
    },
    "00432340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432340(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x593680 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x4323cb;\n                    iVar3 = fcn.0045c780(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x593680 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x4323f0;\n                    fcn.0045c740(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x432369;\n                fcn.00432000(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x432373;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x43240a;\n            cVar2 = fcn.00432ae0(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x593680 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x432437;\n                    fcn.0045c6e0();\n                }\n                *(*0x20 + -0x40) = 0x43243c;\n                fcn.00432000(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x43246b;\n            fcn.00433640();\n        }\n        *(puVar5 + -8) = 0x432471;\n        fcn.0045a3a0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 941
    },
    "004324e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004324e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.0040a860(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.0040a860(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.0040a660();\n                    *(in_RAX + 8) = 0x495bc0;\n                    if (*0x593680 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.0045c5e0(0x495bc0, in_RAX, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.0040a660();\n                *(in_RAX + 8) = 0x495bc0;\n                if (*0x593680 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.0045c5e0(0x495bc0, in_RAX, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00432480();\n    return;\n}\n",
        "token_count": 453
    },
    "00432640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432640(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.00432640(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00434e60();\n    fcn.004083e0(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 296
    },
    "00432ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00432ae0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *noname_1_00;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    \ncode_r0x00432ae0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        noname_1_00 = *(unaff_RBX + 0x30);\n        iVar7 = 0;\n        uVar9 = 0;\n        do {\n            uVar1 = *noname_1_00;\n            noname_1_00 = noname_1_00 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar9 < 0) goto code_r0x00432d8a;\n                uVar8 = (uVar1 << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n                uVar3 = uVar8;\n                iVar7 = 0;\n                uVar9 = 0;\n                goto code_r0x00432b64;\n            }\n            if (uVar9 < 0) goto code_r0x00432da5;\n            iVar7 = ((uVar1 & 0xffffff7f) << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n            uVar9 = uVar9 + 7;\n        } while (uVar9 < 0x1d);\n        goto code_r0x00432d8f;\n    }\n    goto code_r0x00432dab;\n    while( true ) {\n        if (uVar9 < 0) goto code_r0x00432d85;\n        iVar7 = ((uVar1 & 0xffffff7f) << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n        uVar9 = uVar9 + 7;\n        if (0x1c < uVar9) break;\ncode_r0x00432b64:\n        uVar1 = *noname_1_00;\n        noname_1_00 = noname_1_00 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar9 < 0) goto code_r0x00432d6c;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x2c) = uVar8;\n            uVar8 = *(*(unaff_RBX + 0x38) - uVar3);\n            uVar9 = (uVar1 << (uVar9 & 0x1f) & -(uVar9 < 0x20)) + iVar7;\n            goto code_r0x00432bd5;\n        }\n    }\ncode_r0x00432d71:\n    *(*0x20 + -0x48) = 0x432d85;\n    fcn.00432ec0();\ncode_r0x00432d85:\n    *(*0x20 + -0x48) = 0x432d8a;\n    fcn.00431c60();\ncode_r0x00432d8a:\n    *(*0x20 + -0x48) = 0x432d8f;\n    fcn.00431c60();\ncode_r0x00432d8f:\n    unaff_RBX = 0x4c9b90;\n    *(*0x20 + -0x48) = 0x432da5;\n    fcn.00432ec0();\ncode_r0x00432da5:\n    *(*0x20 + -0x48) = 0x432daa;\n    in_RAX = fcn.00431c60();\ncode_r0x00432dab:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x432dba;\n    fcn.0045a3a0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x00432ae0;\ncode_r0x00432d4f:\n    *(*0x20 + -0x48) = 0x432d54;\n    fcn.00431c60();\ncode_r0x00432d54:\n    *(*0x20 + -0x48) = 0x432d67;\n    fcn.00432ec0();\ncode_r0x00432d67:\n    *(*0x20 + -0x48) = 0x432d6c;\n    fcn.00431c60();\ncode_r0x00432d6c:\n    *(*0x20 + -0x48) = 0x432d71;\n    fcn.00431c60();\n    goto code_r0x00432d71;\ncode_r0x00432bd5:\n    do {\n        uVar9 = uVar9 - 1;\n        if (uVar9 < 0) {\n            return 1;\n        }\n        iVar7 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *noname_1_00;\n            noname_1_00 = noname_1_00 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x00432d67;\n            iVar7 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar7;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x00432d54;\n        }\n        if (uVar4 < 0) goto code_r0x00432d4f;\n        uVar10 = 1 << (uVar9 & 0x1f) & -(uVar9 < 0x20);\n    } while ((uVar10 & uVar8) == 0);\n    *(*0x20 + -0x28) = uVar9;\n    *(*0x20 + -0x18) = noname_1_00;\n    uVar2 = *(*(unaff_RBX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar7));\n    *(*0x20 + -0x10) = unaff_RBX + 0x18;\n    uVar4 = uVar8 & ~uVar10;\n    if (*0x593680 == 0) {\n        *(unaff_RBX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x432c5c;\n        fcn.0045c6e0();\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(unaff_RBX + 0x38) - uVar3) = uVar4;\n    *(*0x20 + -0x20) = *(unaff_RBX + 0x20);\n    uVar2 = *(unaff_RBX + 0x18);\n    *(*0x20 + -0x48) = 0x432c85;\n    uVar3 = fcn.00432de0(uVar2, noname_1_00, uVar9, uVar4);\n    iVar5 = *(*0x20 + -0x20);\n    if ((iVar5 == 0) || (*(iVar5 + 0x31) == '\\0')) {\n        if (*0x593680 == 0) {\n            iVar5 = *(*0x20 + 0x10);\n            *(iVar5 + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x432cbd;\n            uVar3 = fcn.0045c700(iVar5, 0, uVar9, uVar4);\n            iVar5 = *(*0x20 + 0x10);\n        }\n        if ((*(iVar5 + 0x20) == 0) || (*(*(iVar5 + 0x20) + 0x30) == '\\0')) {\n            noname_1_00 = *(*0x20 + -0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar9 = *(*0x20 + -0x28);\n            uVar8 = *(*0x20 + -0x2d);\n            goto code_r0x00432bd5;\n        }\n        uVar9 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar9 = 1;\n    }\n    return uVar9;\n}\n",
        "token_count": 2219
    },
    "00432de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432de0(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong *arg1_00;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1_00 = arg1;\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.004335e0();\n        arg1_00 = puStackX8;\n        if (*0x593680 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.0045c5e0(arg1, noname_1, arg3, arg4);\n        }\n        arg1_00[4] = in_stack_00000000;\n        if (*0x593680 == 0) {\n            arg1_00[5] = &puStackX8;\n        }\n        else {\n            fcn.0045c5e0(arg1_00, noname_1, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x593680 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.0045c5e0(arg1_00, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "00432ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00432ec0(ulong param_1, ulong param_2, ulong param_3, char *param_4)\n\n{\n    code *pcVar1;\n    ulong noname_1;\n    char cVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t arg2;\n    uint64_t arg2_00;\n    uint64_t uVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    char *pcVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0x90) == unaff_R14) {\n                if (*(iVar3 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar3 + 0xd0) == 0) {\n                        if (*(iVar3 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x593680 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x432f9e;\n                                fcn.0045c700(param_1, *0x20 + -0x40, param_3, param_4);\n                            }\n                            LOCK();\n                            arg2 = *0x593470;\n                            *(*0x20 + -0xc0) = 0x432fc6;\n                            *0x593470 = *0x593470 + 1;\n                            fcn.00432740(*0x20 + 8);\ncode_r0x00432fc6:\n                            do {\n                                iVar3 = *(*0x20 + -0x48);\n                                pcVar10 = *(iVar3 + 0x28);\n                                if (pcVar10 == NULL) {\n                                    uVar4 = *(iVar3 + 0x20);\n                                    *(*0x20 + -0xc0) = 0x433249;\n                                    fcn.004324e0(uVar4);\n                                    *(*0x20 + -0xc0) = 0x433257;\n                                    fcn.004339e0();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                arg2_00 = iVar3 + 0x28;\n                                if (*pcVar10 != '\\0') {\n                                    if (*(pcVar10 + 0x20) != 0) {\n                                        *(*(pcVar10 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x593680 == 0) {\n                                        *(pcVar10 + 0x20) = 0;\n                                        uVar7 = arg2;\n                                        arg2 = arg2_00;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x433017;\n                                        iVar3 = fcn.0045c740(pcVar10 + 0x20, arg2_00, param_3, param_4);\n                                        uVar7 = arg2_00;\n                                        arg2 = arg2_00;\n                                    }\n                                    arg2_00 = arg2;\n                                    if (pcVar10[2] == '\\0') {\n                                        if (*0x593680 == 0) {\n                                            *(pcVar10 + 0x18) = 0;\n                                            arg2 = uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x433046;\n                                            iVar3 = fcn.0045c740(pcVar10 + 0x18, arg2, param_3, param_4);\n                                        }\n                                        uVar4 = *(pcVar10 + 0x28);\n                                        if (*0x593680 == 0) {\n                                            *(iVar3 + 0x28) = uVar4;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x433065;\n                                            fcn.0045c6e0();\n                                        }\n                                        *(*0x20 + -0xc0) = 0x43306d;\n                                        fcn.00432000(uVar4, arg2);\n                                        goto code_r0x00432fc6;\n                                    }\n                                }\n                                *pcVar10 = '\\x01';\n                                pcVar6 = pcVar10 + 0x20;\n                                if (*0x593680 == 0) {\n                                    *(pcVar10 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4330a5;\n                                    fcn.0045c740(pcVar6, arg2_00, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = arg2_00;\n                                *(*0x20 + -0x70) = pcVar10;\n                                *(*0x20 + -0x60) = pcVar6;\n                                if (pcVar10[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x433105;\n                                    uVar4 = fcn.004335e0();\n                                    *(*0x20 + -0x40) = uVar4;\n                                    pcVar1 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x433118;\n                                    (*pcVar1)();\n                                    arg2 = *(*0x20 + -0x70);\n                                    cVar2 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4330c7;\n                                    cVar2 = fcn.00432ae0(pcVar6, *0x20 + -0x40, param_3, param_4);\n                                    if (cVar2 == '\\0') {\n                                        arg2 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        arg2 = *(*0x20 + -0x70);\n                                        if (*(*(arg2 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar2;\n                                            *(*0x20 + -0xc0) = 0x4330ec;\n                                            fcn.00432740(0);\n                                            cVar2 = *(*0x20 + -0x9a);\n                                            arg2 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar3 = *(*0x20 + -0x48);\n                                if (*(iVar3 + 0x28) != arg2) goto code_r0x004333de;\n                                if (*0x593680 == 0) {\n                                    *(arg2 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x433159;\n                                    cVar2 = fcn.0045c740(iVar3, arg2, param_3, param_4);\n                                }\n                                uVar4 = *(arg2 + 0x10);\n                                *(*0x20 + -0x98) = uVar4;\n                                param_3 = *(arg2 + 8);\n                                *(*0x20 + -0x88) = param_3;\n                                if (cVar2 != '\\0') {\n                                    if (*0x593680 == 0) {\n                                        *(arg2 + 0x18) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43318d;\n                                        cVar2 = fcn.0045c720(iVar3, arg2, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar2;\n                                    if (*0x593680 == 0) {\n                                        *(iVar3 + 0x28) = *(arg2 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4331ae;\n                                        fcn.0045c720(iVar3, arg2, param_3, param_4);\n                                    }\n                                    *(*0x20 + -0xc0) = 0x4331b6;\n                                    fcn.00432000(iVar3, arg2);\n                                    cVar2 = *(*0x20 + -0x99);\n                                    iVar3 = *(*0x20 + -0x48);\n                                    uVar4 = *(*0x20 + -0x98);\n                                    param_3 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar8 = *(*0x20 + -0x28);\n                            if (*0x593680 == 0) {\n                                *(iVar3 + 0x20) = iVar8;\n                                pcVar10 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar10 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x4331fe;\n                                cVar2 = fcn.0045c700(iVar3, iVar8, param_3, param_4);\n                            }\n                            if (((iVar8 == 0) || (*(iVar8 + 0x32) == '\\0')) || (*(iVar8 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x593470 = *0x593470 - 1;\n                                pcVar6 = *(iVar3 + 0x28);\n                                if (cVar2 == '\\0') {\n                                    pcVar5 = pcVar6;\n                                    pcVar6 = *(pcVar6 + 0x28);\n                                }\n                                else {\n                                    pcVar5 = NULL;\n                                }\n                                while ((pcVar6 != NULL && (*pcVar6 == '\\0'))) {\n                                    if (pcVar6[2] == '\\0') {\n                                        pcVar5 = pcVar6;\n                                        pcVar6 = *(pcVar6 + 0x28);\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar5;\n                                        if (pcVar5 == NULL) {\n                                            if (*0x593680 == 0) {\n                                                *(iVar3 + 0x28) = *(pcVar6 + 0x28);\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x4332f4;\n                                                fcn.0045c720(iVar3, pcVar6, param_3, pcVar10);\n                                                param_4 = pcVar10;\n                                            }\n                                        }\n                                        else if (*0x593680 == 0) {\n                                            *(pcVar5 + 0x28) = *(pcVar6 + 0x28);\n                                        }\n                                        else {\n                                            param_4 = pcVar5 + 0x28;\n                                            *(*0x20 + -0xc0) = 0x4332c5;\n                                            fcn.0045c720(iVar3, pcVar6, param_3, param_4);\n                                        }\n                                        uVar4 = *(pcVar6 + 0x28);\n                                        *(*0x20 + -0x78) = uVar4;\n                                        *(*0x20 + -0xc0) = 0x433305;\n                                        fcn.00432000(uVar4, pcVar6);\n                                        iVar3 = *(*0x20 + -0x48);\n                                        uVar4 = *(*0x20 + -0x98);\n                                        pcVar10 = *(*0x20 + -0x50);\n                                        param_3 = *(*0x20 + -0x88);\n                                        pcVar6 = *(*0x20 + -0x78);\n                                        pcVar5 = *(*0x20 + -0x80);\n                                    }\n                                }\n                                if (*0x593680 == 0) {\n                                    *(iVar3 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x433345;\n                                    fcn.0045c700(iVar3, *(*0x20 + -0x28), param_3, param_4);\n                                }\n                                while( true ) {\n                                    iVar8 = *(iVar3 + 0x20);\n                                    if (iVar8 == 0) goto code_r0x0043339f;\n                                    if (*(iVar8 + 0x31) == '\\0') break;\n                                    noname_1 = *(iVar8 + 0x18);\n                                    if (*0x593680 == 0) {\n                                        *(iVar3 + 0x20) = noname_1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x43336d;\n                                        fcn.0045c700(iVar3, noname_1, param_3, param_4);\n                                    }\n                                }\n                                if (iVar8 == 0) goto code_r0x0043339f;\n                                do {\n                                    *(iVar3 + 0x110) = param_3;\n                                    *(iVar3 + 0x118) = uVar4;\n                                    *(*0x20 + -0xc0) = 0x43338e;\n                                    fcn.0045a1e0();\n                                    *(*0x20 + -0xc0) = 0x43339f;\n                                    fcn.00433640();\ncode_r0x0043339f:\n                                    *(iVar3 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar3 + 0x110) = *(iVar8 + 0x28);\n                            *(iVar3 + 0x118) = *(iVar8 + 0x20);\n                            *(*0x20 + -0xc0) = 0x4333cd;\n                            fcn.0045a1e0();\n                            *(*0x20 + -0xc0) = 0x4333de;\n                            fcn.00433640();\ncode_r0x004333de:\n                            *(*0x20 + -0xc0) = 0x4333ef;\n                            fcn.00433640();\n                        }\n                        *(*0x20 + -0xc0) = 0x4333f4;\n                        fcn.00434de0();\n                        *(*0x20 + -0xc0) = 0x433405;\n                        fcn.004356e0();\n                        *(*0x20 + -0xc0) = 0x43340a;\n                        fcn.00434e60();\n                        *(*0x20 + -0xc0) = 0x43341f;\n                        fcn.004083e0();\n                        *(*0x20 + -0xc0) = 0x433425;\n                        fcn.00434de0();\n                        *(*0x20 + -0xc0) = 0x43342a;\n                        fcn.00435040();\n                        *(*0x20 + -0xc0) = 0x43342f;\n                        fcn.00434e60();\n                        *(*0x20 + -0xc0) = 0x433445;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0xc0) = 0x43344a;\n                    fcn.00434de0();\n                    *(*0x20 + -0xc0) = 0x43345b;\n                    fcn.004356e0();\n                    *(*0x20 + -0xc0) = 0x433465;\n                    fcn.00434e60();\n                    *(*0x20 + -0xc0) = 0x43347a;\n                    fcn.004083e0();\n                    *(*0x20 + -0xc0) = 0x43347f;\n                    fcn.00434de0();\n                    *(*0x20 + -0xc0) = 0x433485;\n                    fcn.00435040();\n                    *(*0x20 + -0xc0) = 0x43348a;\n                    fcn.00434e60();\n                    *(*0x20 + -0xc0) = 0x43348f;\n                    fcn.00434de0();\n                    *(*0x20 + -0xc0) = 0x4334a5;\n                    fcn.004356e0();\n                    *(*0x20 + -0xc0) = 0x4334aa;\n                    fcn.00434e60();\n                    iVar3 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar3 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar3 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x4334d0;\n                    fcn.00434de0();\n                    *(*0x20 + -0xc0) = 0x4334df;\n                    fcn.004356e0();\n                    *(*0x20 + -0xc0) = 0x4334e5;\n                    fcn.00434e60();\n                    *(*0x20 + -0xc0) = 0x4334ea;\n                    fcn.00434de0();\n                    *(*0x20 + -0xc0) = 0x4334ef;\n                    fcn.00435040();\n                    *(*0x20 + -0xc0) = 0x4334f4;\n                    fcn.00434e60();\n                    *(*0x20 + -0xc0) = 0x433505;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0xc0) = 0x43350a;\n                fcn.00434de0();\n                *(*0x20 + -0xc0) = 0x43351b;\n                fcn.004356e0();\n                *(*0x20 + -0xc0) = 0x433525;\n                fcn.00434e60();\n                *(*0x20 + -0xc0) = 0x43353a;\n                fcn.004083e0();\n                *(*0x20 + -0xc0) = 0x43353f;\n                fcn.00434de0();\n                *(*0x20 + -0xc0) = 0x433545;\n                fcn.00435040();\n                *(*0x20 + -0xc0) = 0x43354a;\n                fcn.00434e60();\n                *(*0x20 + -0xc0) = 0x43355b;\n                fcn.00433640();\n            }\n            *(*0x20 + -0xc0) = 0x433565;\n            fcn.00434de0();\n            *(*0x20 + -0xc0) = 0x433576;\n            fcn.004356e0();\n            *(*0x20 + -0xc0) = 0x43357b;\n            fcn.00434e60();\n            *(*0x20 + -0xc0) = 0x433590;\n            fcn.004083e0();\n            *(*0x20 + -0xc0) = 0x433595;\n            fcn.00434de0();\n            *(*0x20 + -0xc0) = 0x43359a;\n            fcn.00435040();\n            *(*0x20 + -0xc0) = 0x43359f;\n            fcn.00434e60();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x4335b0;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x4335c5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4789
    },
    "00433600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00433600(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "00433640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433640(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    fcn.0045a260();\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*(iVar1 + 0xc4) == 0) {\n        *(iVar1 + 0xc4) = 1;\n    }\n    fcn.004338a0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "00433b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00433b60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x56c160 == 0) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00434e60();\n                fcn.0042f460();\n            }\n            fcn.0042f460();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x593468;\n    LOCK();\n    *0x593468 = *0x593468 + 1;\n    fcn.0040abe0(iVar2);\n    if ((0 < *0x5938d0) || (0 < *0x5938cc)) {\n        fcn.00440ca0();\n    }\n    fcn.00437460();\n    return 1;\n}\n",
        "token_count": 497
    },
    "00433ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00433ce0(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.00434e60();\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    uVar4 = *0x527288;\n    if (*(*(unaff_R14 + 0x30) + 0xc4) < 1) {\n        bVar6 = (*0x527288 >> 1 & 1) != 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar5 = *0x527288 >> 2;\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n    }\n    if (uVar5 != 0) {\n        iVar2 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar5) || (uVar5 = *(unaff_R14 + 0x30),  0 < *(uVar5 + 0xc4))) {\n                fcn.00434de0(arg1, uVar5, *0x527288);\n                fcn.004356e0();\n                fcn.00434e60();\n                fcn.00453560(0);\n            }\n        }\n        else {\n            fcn.00434de0(arg1, uVar5, *0x527288);\n            fcn.00435040();\n            fcn.00434e60();\n            fcn.00454300();\n            fcn.00453560(0);\n        }\n        if ((*0x593404 == '\\0') && (iVar2 != in_RAX | bVar6)) {\n            *0x593404 = '\\x01';\n            fcn.00454540();\n        }\n    }\n    fcn.0040ae40();\n    LOCK();\n    iVar3 = *0x593468 + -1;\n    bVar6 = *0x593468 != 1;\n    *0x593468 = iVar3;\n    if (bVar6) {\n        fcn.0040ac20();\n        fcn.0040ac20();\n    }\n    return uVar4 & 1;\n}\n",
        "token_count": 744
    },
    "00433f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00433f80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2b0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 243
    },
    "00434000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00434000(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.0044b660();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x24) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 81
    },
    "004345a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004345a0(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x4345f4;\n                fcn.00437500(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x43460e;\n                    fcn.00437240(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x434645;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x434656;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x434665;\n            fcn.00435660();\n            *(*0x20 + -0x50) = 0x434676;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x434685;\n            fcn.004354e0();\n            *(*0x20 + -0x50) = 0x434696;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x4346a5;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x4346aa;\n            fcn.00435040();\n            *(*0x20 + -0x50) = 0x4346af;\n            fcn.00434e60();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x4346cf;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x4346e5;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x4346ef;\n            fcn.00435660();\n            *(*0x20 + -0x50) = 0x434705;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x43470f;\n            fcn.004354e0();\n            *(*0x20 + -0x50) = 0x434725;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x434730;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x434735;\n            fcn.00435040();\n            *(*0x20 + -0x50) = 0x43473a;\n            fcn.00434e60();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x43474b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x43475e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1156
    },
    "0045e740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e740(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.0045a1e0();\n    }\n    else {\n        fcn.0045a1e0();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "00434e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00434e60(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.0040ae40();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00434ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434ec0(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x434efd;\n            fcn.00434c60(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x00434f9d:\n                *(*0x20 + -0x38) = 0x434fb1;\n                fcn.004571c0(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x00434f9d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x434f6c;\n                fcn.0045d3c0(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x434fcd;\n            in_RAX = fcn.0045cb00(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x434fe5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 873
    },
    "00435f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00435f80(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x593680 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x435ffe;\n                    fcn.0045c720(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x43600a;\n                    fcn.0045c5e0(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x436056;\n                fcn.0045a1e0();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x436072;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x436090;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 832
    },
    "004361a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004361a0(ulong param_1, uint64_t param_2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg4;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar9 + 0xa0);\n    uVar8 = uVar7;\n    if (*(uVar7 + 0x9b8) != 0) goto code_r0x00436205;\n    arg4 = unaff_R14;\n    fcn.0040ac20();\n    param_2 = uVar7 + 0x9b0;\n    iStack40 = iVar9;\n    uStack24 = param_2;\n    uStack16 = uVar7;\n    do {\n        while ((uVar8 = *0x540040,  uVar10 = *(uVar7 + 0x9c0) >> 1,  *(uVar7 + 0x9b8) < uVar10 &&\n               (uVar10 = *0x540040,  *0x540040 != 0))) {\n            if (*0x593680 == 0) {\n                puVar1 = *0x540040 + 8;\n                *0x540040 = *(*0x540040 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.0045c780(uVar7, param_2, *0x540040);\n                fcn.0045c780(uVar7, param_2, uVar8);\n            }\n            arg4 = *(uVar7 + 0x9b8);\n            iVar9 = *(uVar7 + 0x9b0);\n            iVar4 = iVar9;\n            if (*(uVar7 + 0x9c0) < arg4 + 1U) {\n                uVar10 = uVar8;\n                arg4_00 = arg4;\n                iVar4 = fcn.00445200(arg4);\n                *(uStack16 + 0x9c0) = arg4;\n                uVar7 = uStack16;\n                param_2 = uStack24;\n                if (*0x593680 == 0) {\n                    *(uStack16 + 0x9b0) = iVar4;\n                    arg4 = iVar9;\n                }\n                else {\n                    iVar4 = fcn.0045c5e0(arg4, uStack16, uVar10, arg4_00);\n                    arg4 = iVar9;\n                }\n            }\n            *(uVar7 + 0x9b8) = arg4 + 1;\n            if (*0x593680 == 0) {\n                *(iVar4 + arg4 * 8) = uVar8;\n            }\n            else {\n                fcn.0045c760(uVar7, param_2, uVar8, arg4);\n            }\n        }\n        fcn.0040ae40();\n        iVar9 = iStack40;\n        uVar8 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar5 = fcn.0040cd00();\n            param_2 = *(uStack16 + 0x9b8);\n            uVar7 = *(uStack16 + 0x9b0);\n            uVar6 = uVar7;\n            if (*(uStack16 + 0x9c0) < param_2 + 1) {\n                uVar6 = fcn.00445200(param_2);\n                *(uStack16 + 0x9c0) = param_2;\n                if (*0x593680 == 0) {\n                    *(uStack16 + 0x9b0) = uVar6;\n                    param_2 = uVar7;\n                }\n                else {\n                    uVar6 = fcn.0045c5e0(param_2, uStack16, uVar10, arg4);\n                    param_2 = uVar7;\n                }\n            }\n            *(uVar8 + 0x9b8) = param_2 + 1;\n            if (*0x593680 == 0) {\n                *(uVar6 + param_2 * 8) = uVar5;\n            }\n            else {\n                fcn.0045c5e0(uVar8, param_2, uVar10, arg4);\n            }\n        }\ncode_r0x00436205:\n        uVar7 = *(uVar8 + 0x9b8);\n        arg4 = *(uVar8 + 0x9b0);\n        uVar10 = uVar7 - 1;\n        if (uVar10 < uVar7) {\n            iVar4 = *(arg4 + -8 + uVar7 * 8);\n            if (*0x593680 == 0) {\n                *(arg4 + -8 + uVar7 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                uVar10 = fcn.0045c780(uVar7, param_2, uVar8);\n            }\n            param_2 = *(uVar8 + 0x9c0);\n            if (uVar10 <= param_2) {\n                *(uVar8 + 0x9b8) = uVar10;\n                if (*(iVar4 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar4;\n                }\n                uVar10 = fcn.00433640();\n            }\n            fcn.0045cb00(uVar10, param_2);\n            uVar7 = uVar10;\n        }\n        fcn.0045ca80(uVar7);\n    } while( true );\n}\n",
        "token_count": 1465
    },
    "004364a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004364a0(void)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t arg3;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    iVar5 = 0;\n                                    iVar6 = 0;\n                                    iVar7 = arg3;\n                                    iVar4 = arg2;\n                                    while( true ) {\n                                        arg1_01 = *(iVar4 + 0x9b8);\n                                        if (arg1_01 <= *(iVar4 + 0x9c0) >> 1) break;\n                                        arg1 = arg1_01 - 1;\n                                        if (arg1_01 <= arg1) {\ncode_r0x00436751:\n                                            fcn.0045ca80(arg1_01);\n                                            goto code_r0x0043675c;\n                                        }\n                                        iVar8 = *(*(iVar4 + 0x9b0) + -8 + arg1_01 * 8);\n                                        if (*0x593680 == 0) {\n                                            *(*(iVar4 + 0x9b0) + -8 + arg1_01 * 8) = 0;\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        else {\n                                            fcn.0045c720(iVar5, iVar6, iVar7, iVar4);\n                                            arg1_00 = iVar5;\n                                            arg2_00 = iVar6;\n                                            iVar5 = iVar8;\n                                        }\n                                        if (*(iVar4 + 0x9c0) < arg1) {\n                                            fcn.0045cb00(arg1, *(iVar4 + 0x9c0));\n                                            goto code_r0x00436751;\n                                        }\n                                        *(iVar4 + 0x9b8) = arg1;\n                                        iVar6 = iVar5;\n                                        if (arg2_00 != 0) {\n                                            if (*0x593680 == 0) {\n                                                *(arg1_00 + 8) = iVar5;\n                                                iVar6 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.0045c720(arg1_00, arg2_00, iVar7, iVar4);\n                                                iVar6 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    fcn.0040ac20();\n                                    if (*0x593680 == 0) {\n                                        *(iVar5 + 8) = *0x540040;\n                                        *0x540040 = iVar6;\n                                    }\n                                    else {\n                                        fcn.0045c700(iVar5, *0x540040, iVar7, iVar4);\n                                        fcn.0045c6e0(iVar6);\n                                    }\n                                    fcn.0040ae40();\n                                }\n                                iVar6 = *(arg2 + 0x9b8);\n                                iVar7 = *(arg2 + 0x9b0);\n                                iVar4 = iVar7;\n                                if (*(arg2 + 0x9c0) < iVar6 + 1U) {\n                                    iVar5 = arg3;\n                                    iVar8 = arg2;\n                                    iVar4 = fcn.00445200(iVar6);\n                                    *(arg2 + 0x9c0) = iVar6;\n                                    if (*0x593680 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                        iVar6 = iVar7;\n                                    }\n                                    else {\n                                        iVar4 = fcn.0045c5e0(iVar6, arg2, iVar5, iVar8);\n                                        iVar6 = iVar7;\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = iVar6 + 1;\n                                if (*0x593680 == 0) {\n                                    *(iVar4 + iVar6 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.0045c5e0(iVar6, iVar6 + 1, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x0043675c:\n                            fcn.00433640();\n                        }\n                        fcn.00433640();\n                    }\n                    fcn.00433640();\n                }\n                fcn.00433640();\n            }\n            fcn.00433640();\n        }\n        fcn.00433640();\n    }\n    fcn.00433640();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1332
    },
    "00436940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436940(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x43697b;\n                fcn.0040ac20();\n                uVar2 = *0x53f620;\n                arg1_00 = *0x53f628;\n                uVar3 = *0x53f620;\n                if (*0x53f630 < *0x53f628 + 1) {\n                    *(*0x20 + -0x58) = 0x4369a5;\n                    arg1 = *0x53f628;\n                    uVar3 = fcn.00445200(*0x53f628);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar3;\n                    *0x53f630 = arg1;\n                    if (*0x593680 != 0) {\n                        *(*0x20 + -0x58) = 0x4369ca;\n                        uVar3 = fcn.0045c5e0(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x53f620;\n                    }\n                }\n                *0x53f620 = uVar2;\n                *0x53f628 = arg1_00 + 1;\n                if (*0x593680 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(uVar3 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x4369fd;\n                    fcn.0045c700(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x53f628 != 0) {\n                    uVar2 = *0x53ec90;\n                    if ((*0x53ec90 != *0x53f620) && (uVar2 = *0x53f620,  *0x593680 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x53f620;\n                        *(*0x20 + -0x58) = 0x436a34;\n                        fcn.00403aa0();\n                        uVar2 = *(*0x20 + -0x10);\n                    }\n                    *0x53ec90 = uVar2;\n                    uVar1 = *0x5934a8;\n                    *0x5934a8 = *0x53f628;\n                    *(*0x20 + -0x58) = 0x436a65;\n                    fcn.0040ae40(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x436a76;\n                fcn.0045ca80(0);\n            }\n            *(*0x20 + -0x58) = 0x436a87;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x436a92;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 944
    },
    "00437040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437040(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00453e40(0x20);\n    }\n    fcn.0040ac20();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00436fe0();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.0045c520();\n    fcn.0045c460(uVar4, arg2);\n    uVar3 = fcn.0045c520();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x120) = *0x53ec98;\n    }\n    else {\n        fcn.0045c6e0();\n    }\n    if (*0x593680 != '\\0') {\n        fcn.00403aa0();\n    }\n    *0x53ec98 = in_RAX;\n    fcn.0040ae40();\n    uVar4 = fcn.0040cd00();\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.0045c5e0(in_RAX, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 615
    },
    "00437240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437240(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x545610 != '\\0') {\n                *(*0x20 + -0x58) = 0x43726f;\n                fcn.004509a0();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x4372b1;\n                fcn.004379a0(1);\n                *(*0x20 + -0x58) = 0x4372d0;\n                fcn.00441ac0(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x4372d5;\n                fcn.0043a2a0();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x43732c;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x43733d;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x437347;\n            fcn.00435660();\n            *(*0x20 + -0x58) = 0x437358;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x437365;\n            fcn.004354e0();\n            *(*0x20 + -0x58) = 0x437376;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x437385;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x43738a;\n            fcn.00435040();\n            *(*0x20 + -0x58) = 0x43738f;\n            fcn.00434e60();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x4373af;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x4373c5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4373cf;\n            fcn.00435660();\n            *(*0x20 + -0x58) = 0x4373e5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4373ef;\n            fcn.004354e0();\n            *(*0x20 + -0x58) = 0x437405;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x437410;\n            fcn.004353e0();\n            *(*0x20 + -0x58) = 0x437415;\n            fcn.00435040();\n            *(*0x20 + -0x58) = 0x43741a;\n            fcn.00434e60();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x43742b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x43743f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1394
    },
    "004379a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.004379a0(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uint32_t unaff_EBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x437d40));\n        uStack64 = auStack24;\n        fcn.0045a260();\n    }\n    iVar9 = 0;\n    piVar6 = NULL;\n    while( true ) {\n        LOCK();\n        puVar1 = in_RAX + 0x90;\n        uVar2 = *puVar1;\n        if (unaff_EBX == uVar2) {\n            *puVar1 = arg1;\n            uVar4 = unaff_EBX;\n        }\n        else {\n            uVar4 = *puVar1;\n        }\n        piVar5 = uVar4;\n        if (unaff_EBX == uVar2) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00433640();\n            pcVar3 = swi(3);\n            piVar6 = (*pcVar3)();\n            return piVar6;\n        }\n        if (iVar9 == 0) {\n            fcn.0045e360();\n            piVar6 = uStack64 + 0x271;\n        }\n        fcn.0045e360();\n        piStack40 = piVar6;\n        iStack32 = iVar9;\n        if (uStack64 < piVar6) {\n            iVar9 = 0;\n            while ((piVar6 = piStack40,  iVar9 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x00437cad:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.0045c180();\n                iVar9 = iVar9 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x4b1128;\n            fcn.0045a260();\n            fcn.0045e360();\n            piVar6 = 0x4b1aec;\n        }\n        iVar9 = iStack32 + 1;\n    }\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.0045e360();\n            piVar5 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar5;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.0045e360();\n            *(in_RAX + 0xc0) = uStack64;\n            piVar5 = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar8 = *(in_RAX + 200);\n            if (uVar8 < 0) {\n                LOCK();\n                piVar5 = *0x541738;\n                *0x541738 = *0x541738 + 1;\n            }\n            else {\n                if (uVar8 < 0x10) {\n                    iVar9 = 0;\n                }\n                else {\n                    iVar7 = 0x3f;\n                    if (uVar8 != 0) {\n                        for (; uVar8 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                        }\n                    }\n                    if (uVar8 == 0) {\n                        iVar7 = -1;\n                    }\n                    iVar9 = iVar7 + -3;\n                    if (iVar9 * 0x10 < 0x2d0) {\n                        iVar7 = uVar8 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                        uVar8 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                    }\n                    else {\n                        iVar9 = 0x2c;\n                        uVar8 = 0xf;\n                    }\n                }\n                uVar8 = iVar9 * 0x10 + uVar8;\n                if (0x2cf < uVar8) {\n                    iVar9 = 0x2d0;\n                    fcn.0045caa0(0x2d0);\n                    goto code_r0x00437cad;\n                }\n                piVar5 = uVar8 * 8 + 0x5400b8;\n                LOCK();\n                *piVar5 = *piVar5 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1305
    },
    "00437de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00437de0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437e45;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x437e58;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "00437f00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437f00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t arg2;\n    ulong in_RAX;\n    ulong arg1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1 = 0;\n    fcn.00443640(0);\n    arg2 = *(unaff_R14 + 0x30);\n    *(arg2 + 0xd0) = unaff_RBX;\n    if (*0x593680 == 0) {\n        *(arg2 + 200) = in_RAX;\n    }\n    else {\n        fcn.0045c5e0(arg1, arg2, param_3, param_4);\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 232
    },
    "00438080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438080(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    arg1 = **(in_GS_OFFSET + 0x28);\n    piVar1 = *(arg1 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(arg1 + 0x30);\n    *(iVar3 + 0xd0) = 0;\n    if (*0x593680 == 0) {\n        *(iVar3 + 200) = 0;\n    }\n    else {\n        fcn.0045c700(arg1, 0, param_3, param_4);\n    }\n    fcn.00443980(0);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(arg1 + 0xb1) != '\\0')) {\n        *(arg1 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "004384a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004384a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x004384a0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x593458 != 0) {\n            *(*0x20 + -0x60) = 0x4384e5;\n            uVar4 = fcn.0042d5a0();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x4384f4;\n            fcn.0043bb20();\n        }\n        *(*0x20 + -0x60) = 0x438505;\n        fcn.0040ac20();\n        if (*0x593464 != 0) {\n            *0x593464 = 0;\n        }\n        *(*0x20 + -0x60) = 0x43852b;\n        uVar4 = fcn.0043f380();\n        *(*0x20 + -0x18) = uVar4;\n        *0x540060 = 0;\n        if (*0x540070 != 0) {\n            *0x540070 = 0;\n            *(*0x20 + -0x60) = 0x438559;\n            fcn.0040af20();\n        }\n        *(*0x20 + -0x60) = 0x438567;\n        fcn.0040ae40();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x4385d5;\n                fcn.0045e360();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x438614;\n                    fcn.0044f540(0);\n                }\n                *(*0x20 + -0x60) = 0x438619;\n                fcn.0043a2a0();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x4385cd;\n                fcn.00439720(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00438654;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x4385ba;\n                fcn.0040af20();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00438666;\ncode_r0x00438654:\n    *(*0x20 + -0x60) = 0x438665;\n    in_AL = fcn.00433640();\ncode_r0x00438666:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x43866f;\n    fcn.0045a3a0();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x004384a0;\n}\n",
        "token_count": 1120
    },
    "00438820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438820(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593403 == '\\0') {\n        *0x593403 = '\\x01';\n        fcn.00439360();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004388c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004388c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar in_AL;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (iVar4 != 0x53fba0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x30) = 0x4388fa;\n                fcn.004306a0();\n                if (*(*(*0x20 + -0x18) + 0x50) != 0) {\n                    *(*0x20 + -0x30) = 0x438914;\n                    fcn.00446260();\n                    if (*0x593680 == 0) {\n                        *(*(*0x20 + -0x18) + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x43893c;\n                        fcn.0045c700(*(*0x20 + -0x18), 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x438949;\n                fcn.0040ac20();\n                iVar4 = *(*0x20 + -0x18);\n                piVar3 = 0x53ec98;\n                while (iVar2 = *piVar3,  iVar2 != 0) {\n                    if (iVar2 == iVar4) {\n                        iVar2 = *(iVar4 + 0x120);\n                        if (*0x593680 == 0) {\n                            *piVar3 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x43898c;\n                            fcn.0045c700(iVar4, iVar2, param_3, param_4);\n                        }\n                        uVar1 = *(*0x20 + 8);\n                        if (uVar1 == 0) {\n                            *(iVar4 + 0xec) = 1;\n                            if (*0x593680 == 0) {\n                                *(iVar4 + 0x270) = *0x540058;\n                                *0x540058 = iVar4;\n                            }\n                            else {\n                                *(*0x20 + -0x30) = 0x4389ce;\n                                fcn.0045c720(iVar4, uVar1, param_3, param_4);\n                                *(*0x20 + -0x30) = 0x4389da;\n                                fcn.0045c6e0();\n                            }\n                        }\n                        *(*0x20 + -0x30) = 0x4389e8;\n                        fcn.0040ae40();\n                        iVar4 = *0x593568;\n                        LOCK();\n                        *0x593568 = *0x593568 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x438a05;\n                        fcn.0043fd40(*(*0x20 + -0x18), iVar4);\n                        *(*0x20 + -0x30) = 0x438a0a;\n                        fcn.00439fc0();\n                        *(*0x20 + -0x30) = 0x438a18;\n                        fcn.0040ac20();\n                        *0x53ffc0 = *0x53ffc0 + 1;\n                        *(*0x20 + -0x30) = 0x438a25;\n                        fcn.0043ff00();\n                        *(*0x20 + -0x30) = 0x438a33;\n                        fcn.0040ae40();\n                        *(*0x20 + -0x30) = 0x438a3d;\n                        fcn.00430740();\n                        if (*(*0x20 + 8) != '\\0') {\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x438a65;\n                        fcn.004302a0(*(*0x20 + -0x18));\n                        return;\n                    }\n                    piVar3 = iVar2 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x438a85;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x30) = 0x438a8a;\n            fcn.0043fd40();\n            *(*0x20 + -0x30) = 0x438a8f;\n            fcn.00439fc0();\n            *(*0x20 + -0x30) = 0x438a9d;\n            fcn.0040ac20();\n            *0x53ffc0 = *0x53ffc0 + 1;\n            *(*0x20 + -0x30) = 0x438aa9;\n            fcn.0043ff00();\n            *(*0x20 + -0x30) = 0x438ab7;\n            fcn.0040ae40();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x438ace;\n            fcn.0040afa0();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x438af3;\n            in_AL = fcn.00433640();\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x438afd;\n        fcn.0045a3a0();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1448
    },
    "00438b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438b20(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x438b79;\n            fcn.0040ac20();\n            if (*0x540088 == 0) {\n                *0x540088 = *0x593450 + -1;\n                if (*0x593680 == 0) {\n                    *0x540080 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x438bbc;\n                    fcn.0045c5e0(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x53f648;\n                iVar9 = *0x53f640;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2270;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x438bfb;\n                fcn.004409e0();\n                for (iVar8 = *0x53ffd0; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2270) == 1) {\n                        *(iVar8 + 0x2270) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x438c3a;\n                        (*pcVar6)();\n                        *0x540088 = *0x540088 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x540088;\n                *(*0x20 + -0x68) = 0x438c65;\n                fcn.0040ae40();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x438c74;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x53f640;\n                *(*0x20 + -0x40) = *0x53f648;\n                iVar9 = *0x53f640;\n                iVar10 = *0x53f648;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2270) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                        }\n                        else {\n                            bVar13 = false;\n                        }\n                    }\n                    else {\n                        bVar13 = false;\n                    }\n                    if (bVar13) {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x545610 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x438cf8;\n                            fcn.00450b80();\n                            *(*0x20 + -0x68) = 0x438d05;\n                            fcn.00450400();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x438d15;\n                        fcn.00439fc0();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                    param_3 = 0;\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x438d4c;\n                        cVar7 = fcn.0040b380();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x438d3b;\n                        fcn.004409e0();\n                    }\n                    *0x540090 = 0;\n                }\n                if (*0x540088 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x53f648 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x438da5;\n                            fcn.0040ac20();\n                            if (*0x593680 == 0) {\n                                *0x540080 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x438dc9;\n                                fcn.0045c6e0(0);\n                            }\n                            *(*0x20 + -0x68) = 0x438dd7;\n                            fcn.0040ae40();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x53f640 + iVar8 * 8) + 0x2270) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x438e1e;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x68) = 0x438e2f;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x68) = 0x438e45;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x438e50;\n        fcn.0045eaa0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1921
    },
    "00438e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00438e60(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2270;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x540080)();\n    fcn.0040ac20();\n    iVar3 = *0x540088 + -1;\n    bVar4 = *0x540088 == 1;\n    *0x540088 = iVar3;\n    if (bVar4) {\n        fcn.0040af20();\n    }\n    uVar2 = fcn.0040ae40();\n    return uVar2;\n}\n",
        "token_count": 258
    },
    "00438f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00438f20(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t arg2;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443380();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar5 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.0043fbc0();\n    }\n    if (*0x540058 != 0) {\n        fcn.0040ac20();\n        iStack48 = *0x540058;\n        iVar4 = 0;\n        while (iStack48 != 0) {\n            if (*(iStack48 + 0xec) == 0) {\n                fcn.0045a260();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iStack48 = *(iStack48 + 0x270);\n            }\n            else {\n                arg2 = *(iStack48 + 0x270);\n                if (*0x593680 == 0) {\n                    *(iStack48 + 0x270) = iVar4;\n                    iVar4 = iStack48;\n                    iStack48 = arg2;\n                }\n                else {\n                    fcn.0045c5e0(iStack48, arg2, in_R8, in_R9);\n                    iVar4 = iStack48;\n                    iStack48 = arg2;\n                }\n            }\n        }\n        if (*0x593680 != 0) {\n            fcn.0045c5e0(0, arg2, in_R8, in_R9);\n            iVar4 = *0x540058;\n        }\n        *0x540058 = iVar4;\n        fcn.0040ae40();\n    }\n    piVar3 = fcn.0040cd00();\n    if (*0x593680 == 0) {\n        piVar3[0x11] = unaff_RBX;\n    }\n    else {\n        piVar3 = fcn.0045c6e0();\n    }\n    fcn.00437040();\n    iVar4 = fcn.0043dec0();\n    if (*0x593680 == 0) {\n        *piVar3 = iVar4;\n    }\n    else {\n        iVar4 = fcn.0045c5e0(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x593680 == 0) {\n        *(iVar4 + 0x30) = piVar3;\n    }\n    else {\n        fcn.0045c6e0();\n    }\n    if (in_RAX == *(*(iVar5 + 0x30) + 0xa0)) {\n        fcn.0043fd40();\n    }\n    iVar2 = *(*(iVar5 + 0x30) + 0xd8);\n    *(*(iVar5 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.004434c0();\n    return piVar3;\n}\n",
        "token_count": 885
    },
    "004393e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004393e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = fcn.00438f20(0xffffffffffffffff);\n    iVar3 = fcn.0043dec0();\n    *(iVar3 + 0x40) = 0x45c5a1;\n    iVar5 = *(iVar3 + 8) + -0x20;\n    *(iVar3 + 0x38) = iVar5;\n    *(iVar3 + 0x60) = 0;\n    *(iVar3 + 0x48) = iVar3;\n    *(iVar3 + 0x78) = *(iVar3 + 0x40);\n    *(iVar3 + 0x70) = iVar5;\n    uVar4 = *(iVar3 + 0x38);\n    *(iVar3 + 0x80) = uVar4;\n    fcn.004379a0(6);\n    iVar5 = iVar2;\n    if (*0x593680 == 0) {\n        *(iVar3 + 0x30) = iVar2;\n    }\n    else {\n        iVar3 = fcn.0045c6e0();\n    }\n    if (*0x593680 == 0) {\n        *(iVar5 + 0x90) = iVar3;\n    }\n    else {\n        iVar3 = fcn.0045c5e0(iVar5, uVar4, param_3, param_4);\n    }\n    *(iVar5 + 0x23c) = *(iVar5 + 0x23c) + 1;\n    *(iVar5 + 0x130) = iVar3;\n    *(iVar3 + 0xe8) = iVar5;\n    LOCK();\n    iVar5 = *0x53ff80 + 1;\n    *0x53ff80 = *0x53ff80 + 1;\n    *(iVar3 + 0x98) = iVar5;\n    fcn.00436940();\n    iVar1 = *0x53ffc8;\n    LOCK();\n    *0x53ffc8 = *0x53ffc8 + 1;\n    uVar4 = fcn.00439620(iVar1);\n    *(iVar2 + 0x128) = uVar4;\n    *0x593430 = *0x593430 + 1;\n    *0x5934f8 = iVar2;\n    return;\n}\n",
        "token_count": 626
    },
    "00439620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004396c0)\n\nuint64_t fcn.00439620(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x5934f8 == 1) {\n            fcn.0045e340();\n        }\n        if ((*0x5934f8 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x593434 = *0x593434 + 1;\n        }\n        fcn.0045e260();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x5934f8;\n    *0x5934f8 = *0x5934f8 ^ *0x5934f8 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 208
    },
    "00439720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439720(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x43975b;\n            iVar3 = fcn.00438f20(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x439846;\n                fcn.004398c0();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x4397b4;\n            fcn.0040ac20();\n            if (*0x593760 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x593748;\n                *0x593748 = iVar3;\n                if (*0x593750 != '\\0') {\n                    *0x593750 = '\\0';\n                    *(*0x20 + -0x30) = 0x4397fd;\n                    fcn.0040af20();\n                }\n                *(*0x20 + -0x30) = 0x43980b;\n                fcn.0040ae40();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x43988b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4398a5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 925
    },
    "004398c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004398c0(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x59340b == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x439985;\n                fcn.00443380();\n                *(*0x20 + -0x40) = 0x43998f;\n                fcn.00430140();\n                *(*0x20 + -0x40) = 0x43999b;\n                fcn.004434c0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x53ea30 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.0045a1a0;\n                *(*0x20 + -0x40) = 0x43992f;\n                fcn.00443380();\n                *(*0x20 + -0x38) = *0x53ea30;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x439949;\n                fcn.0045c1c0();\n                *(*0x20 + -0x40) = 0x439969;\n                fcn.004434c0();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x4399b6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4399c5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 653
    },
    "004399e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004399e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x593760 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x593760 = 1;\n    fcn.00439720(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "00439bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439bc0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x439c19;\n                        fcn.0040ac20();\n                        *(*0x20 + -0x30) = 0x439c27;\n                        fcn.004415e0();\n                        *(*0x20 + -0x30) = 0x439c35;\n                        fcn.0040ae40();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x439c4d;\n                        fcn.0040afa0();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x439c76;\n                        fcn.0043fbc0();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x439ca5;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x30) = 0x439cb6;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x30) = 0x439cc7;\n            fcn.00433640();\n        }\n        *(puVar2 + -8) = 0x439ccd;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "00439d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439d00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    uchar unaff_BL;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint64_t uVar8;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x439d45;\n            fcn.0040ac20();\n            iVar5 = *(*0x20 + 8);\n            if (iVar5 == 0) {\n                *(*0x20 + -0x48) = 0x439d54;\n                iVar5 = fcn.004419a0();\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x48) = 0x439e65;\n                    fcn.0040ae40();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x00439e85:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x53ffdc + -1;\n                    uVar7 = *0x53ffdc - 1;\n                    uVar8 = uVar7;\n                    *0x53ffdc = iVar2;\n                    if (-1 < uVar7) goto code_r0x00439e85;\n                    *(*0x20 + -0x48) = 0x439ecb;\n                    cVar4 = fcn.00433640();\n                    goto code_r0x00439ecb;\n                }\n            }\n            iVar3 = *0x53ffa0;\n            if (*0x53ffa0 != 0) {\n                *0x53ffa0 = *(*0x53ffa0 + 0x128);\n                *0x53ffa8 = *0x53ffa8 + -1;\n            }\n            *(*0x20 + -0x18) = iVar5;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x439d90;\n                uVar6 = fcn.00436fe0();\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x48) = 0x439da5;\n                fcn.0040ae40();\n                *(*0x20 + -0x48) = 0x439dcf;\n                fcn.00439720(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x439e18;\n            fcn.0040ae40();\n            uVar8 = *(*0x20 + -0x10);\n            if (*(uVar8 + 0xe4) == '\\0') {\n                if (*(uVar8 + 0xa8) == 0) {\n                    cVar4 = *(*0x20 + 0x10);\n                    if (cVar4 == '\\0') {\n                        cVar4 = '\\0';\ncode_r0x00439ecb:\n                        *(uVar8 + 0xe4) = cVar4;\n                        *(uVar8 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x439ee9;\n                        fcn.0040af20();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar5 + 0x194) != *(iVar5 + 0x194));\n                    if ((*(iVar5 + 0x194) == *(iVar5 + 400)) && (*(iVar5 + 0x998) == 0)) goto code_r0x00439ecb;\n                    *(*0x20 + -0x48) = 0x439f67;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x48) = 0x439f78;\n                fcn.00433640();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x439f89;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar9 + 8) = in_RAX;\n        puVar9[0x10] = unaff_BL;\n        *(puVar9 + -8) = 0x439f98;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_BL = puVar9[0x10];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1532
    },
    "00439fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439fc0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x53fff0 != 0)) {\n        fcn.00439d00();\n        return;\n    }\n    if (*0x593444 != 0) {\n        if ((*(in_RAX + 0x1238) == 0) || ((*(*(in_RAX + 0x1238) + 0x10) == 0 && (*(*(in_RAX + 0x1240) + 0x10) == 0)))) {\n            if (*0x53f9e0 == 0) {\n                if (*0x53fa68 < *0x53fa6c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00439d00();\n            return;\n        }\n    }\n    uVar2 = *0x53ffdc + *0x53ffd8;\n    if ((*0x53ffdc + *0x53ffd8 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x53ffdc == 0)) {\n        *0x53ffdc = 1;\n        fcn.00439d00();\n        return;\n    }\n    fcn.0040ac20(uVar2);\n    if (*0x540060 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x540064 + -1;\n        bVar5 = *0x540064 == 1;\n        *0x540064 = iVar3;\n        if (bVar5) {\n            fcn.0040af20();\n        }\n        fcn.0040ae40();\n        return;\n    }\n    if (*(in_RAX + 0x2270) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2270) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2270) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x540080)();\n        iVar3 = *0x540088 + -1;\n        bVar5 = *0x540088 == 1;\n        *0x540088 = iVar3;\n        if (bVar5) {\n            fcn.0040af20();\n        }\n    }\n    if (*0x53fff0 == 0) {\n        if ((*0x53ffd8 == *0x593450 + -1) && (*0x53ff88 != 0)) {\n            fcn.0040ae40();\n            fcn.00439d00();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1208);\n        iVar4 = *(in_RAX + 0x1210);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.00441880();\n        fcn.0040ae40();\n        if (iVar4 != 0) {\n            fcn.0043ba40();\n        }\n        return;\n    }\n    fcn.0040ae40();\n    fcn.00439d00();\n    return;\n}\n",
        "token_count": 931
    },
    "0043a320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a320(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x43a370;\n                    fcn.0043fd40();\n                    *(*0x20 + -0x50) = 0x43a375;\n                    fcn.00439fc0();\n                }\n                *(*0x20 + -0x50) = 0x43a37f;\n                fcn.0043fea0();\n                *(*0x20 + -0x50) = 0x43a385;\n                fcn.00438860();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x43a3b6;\n                    fcn.0043fbc0();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x43a3dd;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x43a3ee;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a3f9;\n                fcn.004353e0();\n                *(*0x20 + -0x50) = 0x43a40a;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a40f;\n                fcn.00434e60();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x43a445;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x43a456;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a465;\n                fcn.00435660();\n                *(*0x20 + -0x50) = 0x43a476;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a485;\n                fcn.004354e0();\n                *(*0x20 + -0x50) = 0x43a496;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a4a5;\n                fcn.004353e0();\n                *(*0x20 + -0x50) = 0x43a4aa;\n                fcn.00435040();\n                *(*0x20 + -0x50) = 0x43a4af;\n                fcn.00434e60();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x43a4cf;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x43a4e5;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a4ef;\n                fcn.00435660();\n                *(*0x20 + -0x50) = 0x43a505;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a50f;\n                fcn.004354e0();\n                *(*0x20 + -0x50) = 0x43a525;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x43a530;\n                fcn.004353e0();\n                *(*0x20 + -0x50) = 0x43a535;\n                fcn.00435040();\n                *(*0x20 + -0x50) = 0x43a53a;\n                fcn.00434e60();\n                *(*0x20 + -0x50) = 0x43a54b;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x50) = 0x43a55c;\n            fcn.00433640();\n        }\n        *(puVar3 + -8) = 0x43a565;\n        fcn.0045a3a0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1402
    },
    "0043a580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a580(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x43a5bf;\n                    fcn.0043fea0();\n                    *(*0x20 + -0x28) = 0x43a5c5;\n                    uVar2 = fcn.0043fd40();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x43a5de;\n                    fcn.0040af20();\n                    *(*0x20 + -0x28) = 0x43a5e5;\n                    fcn.00439bc0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43a605;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x28) = 0x43a616;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43a625;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 498
    },
    "0043a640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a640(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x540060 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x0043a690:\n                    *(*0x20 + -0x28) = 0x43a695;\n                    uVar2 = fcn.0043fd40();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43a6a8;\n                    fcn.0040ac20();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x540064 + -1;\n                    bVar5 = *0x540064 == 1;\n                    *0x540064 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x43a6d4;\n                        fcn.0040af20();\n                    }\n                    *(*0x20 + -0x28) = 0x43a6e5;\n                    fcn.0040ae40();\n                    *(*0x20 + -0x28) = 0x43a6ea;\n                    fcn.00439bc0();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x53ffdc + -1;\n                iVar3 = *0x53ffdc + -1;\n                *0x53ffdc = iVar1;\n                if (-1 < iVar3) goto code_r0x0043a690;\n                *(*0x20 + -0x28) = 0x43a705;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x28) = 0x43a716;\n            fcn.00433640();\n        }\n        *(puVar4 + -8) = 0x43a71c;\n        fcn.0045a3a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 628
    },
    "0043a740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a740(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593680 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n    }\n    else {\n        in_RAX = fcn.0045c5e0(arg1, *(unaff_R14 + 0x30), arg3, arg4);\n    }\n    if (*0x593680 == 0) {\n        in_RAX[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        in_RAX = fcn.0045c740(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.004379a0(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe0) != *0x540098) {\n        fcn.00430e80();\n    }\n    if (*0x545610 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.00450ac0();\n        }\n        fcn.00450760();\n    }\n    fcn.0045a1c0();\n    return;\n}\n",
        "token_count": 484
    },
    "0043a8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043aaf8)\n// WARNING: Removing unreachable block (ram,0x0043aafd)\n\nuint64_t fcn.0043a8c0(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    ulong arg3;\n    ulong noname_2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint32_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\ncode_r0x0043a8ee:\n    while (uVar2 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x540060 != 0) {\n        fcn.0043a640();\n    }\n    if (*(uVar2 + 0x2270) != 0) {\n        fcn.00438e60();\n    }\n    uVar3 = fcn.0043c240();\n    if (((*0x593406 != '\\0') && (*0x593407 != '\\0')) && (iVar4 = fcn.004163a0(),  iVar4 != 0)) {\n        fcn.00437240(1);\n    }\n    iVar4 = **0x5379d0;\n    if (iVar4 != 0) {\n        fcn.0045c1c0();\n        iStack232 = iVar4;\n    }\n    uVar5 = fcn.00441f00();\n    if (uVar5 != 0) {\n        return uVar5;\n    }\n    if (*0x53fff0 != 0) {\n        fcn.0040ac20();\n        uStack56 = fcn.00441640();\n        fcn.0040ae40();\n        if (uStack56 != 0) {\n            return uStack56;\n        }\n    }\n    if (*0x593458 == 0) {\n        bVar12 = false;\n    }\n    else if (*0x59345c == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x53ff88 != 0;\n    }\n    if ((bVar12) && (uVar5 = fcn.0042d5a0(),  uVar5 != 0)) {\n        fcn.0043bb20();\n        fcn.004379a0(1);\n        if (*0x545610 != '\\0') {\n            fcn.004509a0();\n        }\n        return uVar5;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar11 = *0x593450 - *0x53ffd8;\n        bVar12 = *0x53ffdc << 1 < uVar11;\n    }\n    else {\n        bVar12 = true;\n        uVar11 = *0x593450;\n    }\n    uVar5 = uVar11;\n    if (bVar12) goto code_r0x0043aaa8;\n    uVar5 = 0;\n    goto code_r0x0043ab07;\ncode_r0x0043aaa8:\n    uVar3 = *(unaff_R14 + 0x30);\n    if (*(uVar3 + 0xe4) == '\\0') {\n        *(uVar3 + 0xe4) = 1;\n        LOCK();\n        uVar3 = *0x53ffdc;\n        *0x53ffdc = *0x53ffdc + 1;\n    }\n    uVar9 = fcn.0043b360();\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (!bVar12) {\n        if (uVar5 == 0) {\n            uVar5 = 0;\n        }\ncode_r0x0043ab07:\n        if (*0x593444 == 0) {\n            bVar12 = false;\n        }\n        else if ((*(uVar2 + 0x1238) == 0) || ((*(*(uVar2 + 0x1238) + 0x10) == 0 && (*(*(uVar2 + 0x1240) + 0x10) == 0))))\n        {\n            if (*0x53f9e0 == 0) {\n                if (*0x53fa68 < *0x53fa6c) {\n                    bVar12 = true;\n                }\n                else {\n                    bVar12 = false;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n        }\n        else {\n            bVar12 = true;\n        }\n        uVar9 = uVar2;\n        if (!bVar12) goto code_r0x0043ab8c;\n        while( true ) {\n            if (*0x593528 == 0) {\n                piVar10 = NULL;\n            }\n            else {\n                piVar10 = (*0x593528 >> 0x13) << 3;\n                *0x593528 = *piVar10;\n                LOCK();\n            }\n            if (piVar10 != NULL) {\n                *(uVar9 + 0x1228) = 3;\n                uVar2 = piVar10[2];\n                fcn.004379a0(1);\n                if (*0x545610 != '\\0') {\n                    fcn.004509a0();\n                }\n                return uVar2;\n            }\ncode_r0x0043ab8c:\n            noname_2 = *0x53f6f0;\n            arg3 = *0x53f6b0;\n            uStack48 = *0x53f640;\n            uStack104 = *0x53f648;\n            uStack96 = *0x53f650;\n            uStack72 = *0x53f6a0;\n            uStack80 = *0x53f6e0;\n            uVar9 = *0x53f648;\n            fcn.0040ac20();\n            if ((*0x540060 != 0) || (*(uVar2 + 0x2270) != 0)) break;\n            if (*0x53fff0 != 0) {\n                uStack64 = fcn.00441640();\n                fcn.0040ae40();\n                return uStack64;\n            }\n            uVar6 = fcn.0043fd40();\n            if (uVar6 == uVar2) {\n                fcn.00441880();\n                fcn.0040ae40();\n                uVar6 = uStack104;\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar5;\n                if (cVar1 == '\\0') {\ncode_r0x0043ad83:\n                    iVar4 = *0x53ff88;\n                    if (*0x593458 == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x59345c == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x53ff88 = 0;\n                        bVar12 = iVar4 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x593458 != 0) && ((*0x53ff90 == 0 || (uVar7 < *0x53ff90)))) {\n                            fcn.0042d4a0();\n                        }\ncode_r0x0043b140:\n                        fcn.00439bc0();\n                        goto code_r0x0043a8ee;\n                    }\n                    uVar9 = 0x53ff90;\n                    *0x53ff90 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            if ((uVar7 != 0) && (uVar3 == 0)) {\n                                uStack88 = uVar7;\n                                fcn.0045e360();\n                            }\n                            uVar3 = fcn.0042d5a0(unaff_R14, 0x53ff90);\n                            uVar2 = *0x53ff90;\n                            *0x53ff90 = 0;\n                            fcn.0045e360(uVar2);\n                            iVar4 = *0x53ff88;\n                            *0x53ff88 = iStack232;\n                            if ((*0x593500 == 0) || (uVar3 != 0)) {\n                                fcn.0040ac20(iVar4);\n                                iStack40 = fcn.004419a0();\n                                fcn.0040ae40();\n                                if (iStack40 == 0) {\n                                    fcn.0043bb20();\n                                    goto code_r0x0043b140;\n                                }\n                                fcn.0043fbc0();\n                                if (uVar3 != 0) {\n                                    fcn.0043bb20();\n                                    fcn.004379a0(1);\n                                    if (*0x545610 != '\\0') {\n                                        fcn.004509a0();\n                                    }\n                                    return uVar3;\n                                }\n                                if (cVar1 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x53ffdc = *0x53ffdc + 1;\n                                }\n                            }\n                            else {\n                                fcn.00439bc0();\n                            }\n                            goto code_r0x0043a8ee;\n                        }\n                        fcn.00433640();\n                    }\n                    fcn.00433640();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    uVar11 = *0x53ffdc - 1;\n                    uVar8 = *0x53ffdc - 1;\n                    uVar9 = uVar8;\n                    *0x53ffdc = uVar11;\n                    if (-1 < uVar8) {\n                        iVar4 = fcn.0043b6e0(uStack96, uVar9, arg3);\n                        if (iVar4 == 0) {\n                            iVar4 = fcn.0043b8c0();\n                            if (iVar4 != 0) {\n                                iStack40 = iVar4;\n                                fcn.0043fbc0();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x53ffdc = *0x53ffdc + 1;\n                                *(iStack40 + 0x1228) = 3;\n                                fcn.004379a0(1);\n                                if (*0x545610 != '\\0') {\n                                    fcn.004509a0();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.0043b820(uStack96, uVar9, noname_2, uVar5);\n                            goto code_r0x0043ad83;\n                        }\n                        fcn.0043fbc0();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x53ffdc = *0x53ffdc + 1;\n                        goto code_r0x0043a8ee;\n                    }\n                }\n                fcn.00433640();\n            }\n            fcn.00433640();\n        }\n        fcn.0040ae40();\n    }\n    goto code_r0x0043a8ee;\n}\n",
        "token_count": 2733
    },
    "0043b8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043b999)\n\nint64_t fcn.0043b8c0(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593444 == 0) {\n        return 0;\n    }\n    if (*0x53f9e0 == 0) {\n        if (*0x53fa68 < *0x53fa6c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0040ac20();\n        iVar2 = fcn.004419a0();\n        if (iVar2 == 0) {\n            fcn.0040ae40();\n            return 0;\n        }\n        if (*0x593444 != 0) {\n            if (*0x593528 == 0) {\n                piVar3 = NULL;\n            }\n            else {\n                piVar3 = (*0x593528 >> 0x13) << 3;\n                *0x593528 = *piVar3;\n                LOCK();\n            }\n            if (piVar3 == NULL) {\n                fcn.00441880();\n                fcn.0040ae40();\n                return 0;\n            }\n            fcn.0040ae40();\n            return iVar2;\n        }\n        fcn.00441880();\n        fcn.0040ae40();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 408
    },
    "0043baa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043baa0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x53ffdc + -1) {\n                    *(*0x20 + -0x20) = 0x43bae5;\n                    *0x53ffdc = *0x53ffdc + -1;\n                    fcn.0043a2a0();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x43bb05;\n                *0x53ffdc = *0x53ffdc + -1;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x20) = 0x43bb16;\n            fcn.00433640();\n        }\n        *(puVar1 + -8) = 0x43bb1c;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 374
    },
    "0043bb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.0043bb20(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x545610 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.004509a0();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.004379a0(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.0040ac20();\n        iVar2 = *0x53ffe0;\n        iVar4 = *0x53ffe8;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x53ffe8 != 0)) {\n            *(*0x53ffe8 + 0xa0) = iStack64;\n            iVar2 = *0x53ffe0;\n        }\n        *0x53ffe8 = iVar4;\n        *0x53ffe0 = iVar2;\n        *0x53fff0 = *0x53fff0 + arg1;\n        piVar1 = fcn.0040ae40();\n        while ((arg1 != 0 && (*0x53ffd8 != 0))) {\n            piVar1 = fcn.00439d00();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x53ffd8;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.0040ac20();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x53ffe8 == 0) {\n                *0x53ffe0 = auStack48._0_8_;\n            }\n            else {\n                *(*0x53ffe8 + 0xa0) = auStack48._0_8_;\n            }\n            *0x53ffe8 = auStack48._8_8_;\n        }\n        *0x53fff0 = *0x53fff0 + iVar2;\n        fcn.0040ae40();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x53ffd8 != 0))) {\n            fcn.00439d00();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.00441dc0(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1044
    },
    "0043be40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043be40(ulong param_1, uint64_t param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x20) = unaff_R14;\n                if (*(iVar3 + 0x130) != 0) {\n                    *(*0x20 + -0x48) = 0x43be7d;\n                    fcn.0043a320();\n                    uVar4 = *(*(*(*0x20 + -0x20) + 0x30) + 0x130);\n                    *(*0x20 + -0x48) = 0x43be97;\n                    fcn.0043a740(uVar4, param_2, param_3, param_4);\n                }\n                uVar5 = *(*0x20 + -0x20);\n                param_2 = *(uVar5 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        while( true ) {\n                            iVar3 = *(*(uVar5 + 0x30) + 0xa0);\n                            *(iVar3 + 0x22b0) = 0;\n                            if (*0x540060 == 0) break;\n                            *(*0x20 + -0x48) = 0x43c1da;\n                            fcn.0043a640();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        if (*(iVar3 + 0x2270) != 0) {\n                            *(*0x20 + -0x10) = iVar3;\n                            *(*0x20 + -0x48) = 0x43beec;\n                            fcn.00438e60();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        param_2 = *(uVar5 + 0x30);\n                        if ((*(param_2 + 0xe4) != '\\0') &&\n                           ((*(iVar3 + 0x998) != 0 || (param_2 = *(iVar3 + 400),  *(iVar3 + 0x194) != *(iVar3 + 400)))))\n                        break;\n                        *(*0x20 + -0x48) = 0x43bf33;\n                        fcn.0043c240();\n                        if ((*0x545610 == '\\0') && (*0x545611 == '\\0')) {\n                            iVar3 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43bf4a;\n                            iVar3 = fcn.0044f3c0();\n                            bVar9 = iVar3 == 0;\n                            if (!bVar9) {\n                                *(*0x20 + -0x28) = iVar3;\n                                uVar5 = 0;\n                                *(*0x20 + -0x48) = 0x43bf65;\n                                fcn.004379a0(1);\n                                *(*0x20 + -0x48) = 0x43bf71;\n                                fcn.004509a0();\n                                iVar3 = *(*0x20 + -0x28);\n                                bVar9 = iVar3 == 0;\n                            }\n                            uVar5 = uVar5 & 0xffffffffffffff00 | !bVar9;\n                        }\n                        uVar7 = 0;\n                        if ((iVar3 == 0) && (*0x593444 != 0)) {\n                            *(*0x20 + -0x2b) = uVar5;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = *(*(iVar6 + 0x30) + 0xa0);\n                            *(*0x20 + -0x48) = 0x43bfb4;\n                            iVar3 = fcn.0041e6c0();\n                            uVar5 = iVar6 & 0xffffff00 | iVar3 != 0 | *(*0x20 + -0x2b);\n                        }\n                        *(*0x20 + -0x29) = uVar5;\n                        if (iVar3 == 0) {\n                            iVar6 = *(*0x20 + -0x20);\n                            if ((*(*(*(iVar6 + 0x30) + 0xa0) + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x53fff0)) {\n                                *(*0x20 + -0x48) = 0x43c009;\n                                fcn.0040ac20();\n                                uVar7 = 1;\n                                *(*0x20 + -0x48) = 0x43c025;\n                                uVar4 = fcn.00441640();\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x48) = 0x43c038;\n                                fcn.0040ae40();\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                iVar3 = *(*0x20 + -0x18);\n                            }\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43c065;\n                            iVar3 = fcn.00441f00();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            uVar7 = 0;\n                        }\n                        if (iVar3 == 0) {\n                            *(*0x20 + -0x48) = 0x43c079;\n                            iVar3 = fcn.0043a8c0();\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x2a) = uVar7;\n                        *(*0x20 + -0x18) = iVar3;\n                        if (*(*(iVar6 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x48) = 0x43c09e;\n                            fcn.0043baa0();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                        }\n                        if (*0x53fff8 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43c0c9;\n                            uVar1 = fcn.00454980();\n                            uVar1 = uVar1 ^ 1;\n                            uVar5 = *(*0x20 + -0x29);\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043c19b:\n                            if (uVar5 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43c1a5;\n                                fcn.0043a2a0();\n                                iVar3 = *(*0x20 + -0x18);\n                                iVar6 = *(*0x20 + -0x20);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x48) = 0x43c1cb;\n                                fcn.0043a740(uVar5, iVar6, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x48) = 0x43beb3;\n                            fcn.0043a580();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = 0x43c0f9;\n                            fcn.0040ac20();\n                            if (*0x53fff8 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x48) = 0x43c118;\n                                cVar2 = fcn.00454980();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x48) = 0x43c187;\n                                fcn.0040ae40();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar5 = *(*0x20 + -0x29);\n                                iVar6 = *(*0x20 + -0x20);\n                                goto code_r0x0043c19b;\n                            }\n                            iVar3 = *(*0x20 + -0x18);\n                            *(iVar3 + 0xa0) = 0;\n                            iVar6 = iVar3;\n                            if (*0x540008 != 0) {\n                                *(*0x540008 + 0xa0) = iVar3;\n                                iVar6 = *0x540000;\n                            }\n                            *0x540000 = iVar6;\n                            *0x540010 = *0x540010 + 1;\n                            *(*0x20 + -0x48) = 0x43c16f;\n                            *0x540008 = iVar3;\n                            fcn.0040ae40();\n                            uVar5 = *(*0x20 + -0x20);\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x43c1f8;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x48) = 0x43c209;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x48) = 0x43c21a;\n            fcn.00433640();\n        }\n        *(puVar8 + -8) = 0x43c225;\n        fcn.0045a3a0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2460
    },
    "0043c240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043c240(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(in_RAX + 0x1208);\n    iVar2 = *(in_RAX + 0x1210);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045e360();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x229c) <= *(in_RAX + 0x2298) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.0040ac20();\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0044e140();\n        do {\n            if (*(in_RAX + 0x2288) == 0) break;\n            iVar1 = fcn.0044e580();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2288) >> 2 < *(in_RAX + 0x229c))) {\n        fcn.0044e9e0();\n    }\n    fcn.0040ae40();\n    return unaff_RBX;\n}\n",
        "token_count": 494
    },
    "0043c600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043c600(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43c63f;\n                fcn.004379a0(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43c66e;\n                fcn.0040ac20();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x53ffe8 != 0) {\n                    *(*0x53ffe8 + 0xa0) = iVar1;\n                    iVar2 = *0x53ffe0;\n                }\n                *0x53ffe0 = iVar2;\n                *0x53fff0 = *0x53fff0 + 1;\n                *(*0x20 + -0x38) = 0x43c6bf;\n                *0x53ffe8 = iVar1;\n                fcn.0040ae40();\n                *(*0x20 + -0x38) = 0x43c6c5;\n                fcn.0043be40();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43c6f0;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x43c705;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43c70f;\n            fcn.00435660();\n            *(*0x20 + -0x38) = 0x43c725;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43c72f;\n            fcn.004354e0();\n            *(*0x20 + -0x38) = 0x43c745;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43c750;\n            fcn.004353e0();\n            *(*0x20 + -0x38) = 0x43c755;\n            fcn.00435040();\n            *(*0x20 + -0x38) = 0x43c75a;\n            fcn.00434e60();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43c77a;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x43c78b;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43c795;\n            fcn.00435660();\n            *(*0x20 + -0x38) = 0x43c7a6;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43c7b0;\n            fcn.004354e0();\n            *(*0x20 + -0x38) = 0x43c7c5;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x43c7d0;\n            fcn.004353e0();\n            *(*0x20 + -0x38) = 0x43c7d5;\n            fcn.00435040();\n            *(*0x20 + -0x38) = 0x43c7da;\n            fcn.00434e60();\n            *(*0x20 + -0x38) = 0x43c7eb;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43c7f6;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1229
    },
    "0043c960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c960(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x545610 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044f540(0);\n    }\n    fcn.0043c600();\n    return;\n}\n",
        "token_count": 140
    },
    "0043c9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c9e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x545610 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43ca12;\n                fcn.00450920();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043ca5e;\n                *(*0x20 + -0x48) = 0x43ca47;\n                iVar1 = fcn.0044b660();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x25) & 2) == 0) {\ncode_r0x0043ca5e:\n                        *(*0x20 + -0x48) = 0x43ca6d;\n                        fcn.00437de0(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43caa5;\n                        fcn.00437500(9);\n                        *(*0x20 + -0x48) = 0x43caaa;\n                        fcn.0043be40();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43cab9;\n                    uVar2 = fcn.0044bde0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43cac8;\n                    fcn.00434de0();\n                    *(*0x20 + -0x48) = 0x43cad9;\n                    fcn.004356e0();\n                    *(*0x20 + -0x48) = 0x43cae8;\n                    fcn.004356e0();\n                    *(*0x20 + -0x48) = 0x43caf9;\n                    fcn.004356e0();\n                    *(*0x20 + -0x48) = 0x43cafe;\n                    fcn.00434e60();\n                    *(*0x20 + -0x48) = 0x43cb0f;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x48) = 0x43cb25;\n                in_RAX = fcn.00433640();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43cb46;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x43cb57;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43cb65;\n            fcn.00435660();\n            *(*0x20 + -0x48) = 0x43cb76;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43cb85;\n            fcn.004354e0();\n            *(*0x20 + -0x48) = 0x43cb96;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43cba5;\n            fcn.004353e0();\n            *(*0x20 + -0x48) = 0x43cbaa;\n            fcn.00435040();\n            *(*0x20 + -0x48) = 0x43cbaf;\n            fcn.00434e60();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43cbcf;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x43cbe5;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43cbef;\n            fcn.00435660();\n            *(*0x20 + -0x48) = 0x43cc05;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43cc0f;\n            fcn.004354e0();\n            *(*0x20 + -0x48) = 0x43cc25;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x43cc30;\n            fcn.004353e0();\n            *(*0x20 + -0x48) = 0x43cc35;\n            fcn.00435040();\n            *(*0x20 + -0x48) = 0x43cc3a;\n            fcn.00434e60();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43cc4b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43cc56;\n        fcn.0045eaa0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1533
    },
    "0043d0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d0c0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00436920();\n        }\n        return;\n    }\n    fcn.00433640();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 295
    },
    "0043d120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d120(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043d0c0();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.004379a0(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.0045a260();\n    }\n    if (*0x545610 != '\\0') {\n        fcn.0045a260();\n        fcn.0043d0c0();\n    }\n    if (*0x540070 != 0) {\n        fcn.0045a260();\n        fcn.0043d0c0();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2270) != 0) {\n        fcn.0045a260();\n        fcn.0043d0c0();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x540060 != 0) {\n        fcn.0045a260();\n        fcn.0043d0c0();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 559
    },
    "0043d9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043dab9)\n\nulong fcn.0043d9e0(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x540064 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043fc20();\n            fcn.0043dba0();\n            return 1;\n        }\n    }\n    if (*0x53ffd0 != 0) {\n        fcn.0045a260();\n    }\n    return 0;\n}\n",
        "token_count": 174
    },
    "0043dba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043dba0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x545610 != '\\0') {\n            fcn.0045a260();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0043e140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e140(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar auVar4 [16];\n    char cVar5;\n    uint8_t uVar6;\n    int64_t in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t iVar13;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + -0x28) = unaff_R14;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x18) = arg1;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(*(unaff_R14 + 0x30) + 0xa0);\n                *(*0x20 + -0x50) = 0x43e19d;\n                iVar7 = fcn.0043e9c0();\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x50) = 0x43e1af;\n                    uVar8 = fcn.0043dec0();\n                    *(*0x20 + -0x30) = uVar8;\n                    *(*0x20 + -0x50) = 0x43e1c5;\n                    fcn.004379a0(6);\n                    *(*0x20 + -0x50) = 0x43e1cf;\n                    fcn.00436940();\n                    iVar7 = *(*0x20 + -0x30);\n                }\n                if (*(iVar7 + 8) != 0) {\n                    if (*(iVar7 + 0x90) == 6) {\n                        *(*0x20 + -0x30) = iVar7;\n                        *(*0x20 + -0x38) = *(iVar7 + 8);\n                        *(*0x20 + -0x20) = iVar7 + 0x38;\n                        *(*0x20 + -0x50) = 0x43e212;\n                        fcn.0045d100();\n                        iVar7 = *(*0x20 + -0x38);\n                        iVar11 = *(*0x20 + -0x30);\n                        *(iVar11 + 0x38) = iVar7 + -0x20;\n                        *(iVar11 + 0x80) = iVar7 + -0x20;\n                        *(iVar11 + 0x40) = 0x45c5a1;\n                        *(iVar11 + 0x48) = iVar11;\n                        *(*0x20 + -0x50) = 0x43e24f;\n                        fcn.00447d80(iVar11, iVar11, in_R8, in_R9);\n                        iVar7 = *(*0x20 + -0x30);\n                        *(iVar7 + 0x128) = *(*0x20 + 0x18);\n                        *(*0x20 + -0x50) = 0x43e26a;\n                        uVar8 = fcn.0043e500();\n                        if (*0x593680 == 0) {\n                            iVar11 = *(*0x20 + -0x30);\n                            *(iVar11 + 0x130) = uVar8;\n                        }\n                        else {\n                            iVar11 = *(*0x20 + -0x30);\n                            *(*0x20 + -0x50) = 0x43e293;\n                            fcn.0045c5e0(iVar11, iVar7, in_R8, in_R9);\n                        }\n                        *(iVar11 + 0x138) = **(*0x20 + 8);\n                        *(*0x20 + -0x50) = 0x43e2ac;\n                        cVar5 = fcn.00454980();\n                        if (cVar5 == '\\0') {\n                            iVar7 = *(*(*(*0x20 + -0x28) + 0x30) + 0x90);\n                            if (iVar7 == 0) {\n                                iVar13 = *(*0x20 + -0x30);\n                            }\n                            else if (*0x593680 == 0) {\n                                iVar13 = *(*0x20 + -0x30);\n                                *(iVar13 + 0x168) = *(iVar7 + 0x168);\n                            }\n                            else {\n                                iVar13 = *(*0x20 + -0x30);\n                                *(*0x20 + -0x50) = 0x43e314;\n                                fcn.0045c740(iVar11, *(*0x20 + -0x28), iVar13, in_R9);\n                            }\n                        }\n                        else {\n                            LOCK();\n                            *0x53ffc8 = *0x53ffc8 + 1;\n                            iVar13 = *(*0x20 + -0x30);\n                        }\n                        uVar9 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                        auVar4 = ZEXT816(uVar9) * ZEXT816(uVar9 ^ 0xe7037ed1a0b428db);\n                        *(*(unaff_R14 + 0x30) + 0xf0) = uVar9;\n                        uVar6 = SUB161(auVar4, 0) ^ SUB161(auVar4 >> 0x40, 0);\n                        *(iVar13 + 0xbd) = uVar6;\n                        if ((uVar6 & 7) == 0) {\n                            *(iVar13 + 0xbc) = 1;\n                        }\n                        *(*0x20 + -0x50) = 0x43e373;\n                        fcn.004379a0(1);\n                        piVar10 = *(*0x20 + -0x30);\n                        iVar11 = piVar10[1] - *piVar10;\n                        iVar7 = *(*0x20 + -0x18);\n                        if (iVar7 == 0) {\n                            LOCK();\n                            *0x593d78 = *0x593d78 + iVar11;\n                        }\n                        else {\n                            iVar3 = *(iVar7 + 0x22a8);\n                            iVar13 = iVar3 + iVar11;\n                            *(iVar7 + 0x22a8) = iVar13;\n                            if (0x3ffe < iVar3 + iVar11 + 0x1fffU) {\n                                LOCK();\n                                *0x593d78 = *0x593d78 + iVar13;\n                                *(iVar7 + 0x22a8) = 0;\n                            }\n                        }\n                        iVar11 = *0x53ff80;\n                        if (*(iVar7 + 0x188) == *(iVar7 + 0x180)) {\n                            LOCK();\n                            iVar13 = *0x53ff80 + 1;\n                            *0x53ff80 = *0x53ff80 + 0x10;\n                            *(iVar7 + 0x180) = iVar13;\n                            *(iVar7 + 0x188) = iVar11 + 0x11;\n                        }\n                        piVar10[0x13] = *(iVar7 + 0x180);\n                        *(iVar7 + 0x180) = *(iVar7 + 0x180) + 1;\n                        if (*0x545610 != '\\0') {\n                            *(*0x20 + -0x50) = 0x43e43a;\n                            fcn.00450680();\n                            piVar10 = *(*0x20 + -0x30);\n                        }\n                        iVar2 = *(*(*(*0x20 + -0x28) + 0x30) + 0xd8);\n                        *(*(*(*0x20 + -0x28) + 0x30) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return piVar10;\n                    }\n                    *(*0x20 + -0x50) = 0x43e489;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x50) = 0x43e49a;\n                fcn.00433640();\n            }\n            arg1 = *(unaff_R14 + 0x30);\n            *(arg1 + 0xc4) = 0xffffffff;\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x50) = 0x43e4b9;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + -8) = 0x43e4ce;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 2239
    },
    "0043e500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043e500(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5938d4 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar6 = *(in_RAX + 0x130);\n            if (puVar6 == NULL) {\n                uVar8 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar6;\n                uVar8 = puVar6[1];\n            }\n            *(*0x20 + -0x378) = uVar8;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar8 + 1;\n            if (*0x5938d4 < iVar9) {\n                iVar9 = *0x5938d4;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43e5a5;\n            uVar4 = fcn.00445120(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43e5ed;\n                fcn.00411980(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43e60f;\n                fcn.0045cc2e();\n                *(*0x20 + -0x3d0) = 0;\n                *(*0x20 + -0x3d8) = 0x43e647;\n                uVar4 = fcn.00450e00(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43e65e;\n                puVar5 = fcn.00445120(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43e68e;\n                    fcn.0045d3c0(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x128);\n                if (*0x593680 == 0) {\n                    puVar6 = *(*0x20 + -0x38);\n                    *puVar6 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar6 + 1) = *(*0x20 + -0x28);\n                    *(puVar6 + 0xc) = uVar1;\n                    *(puVar6 + 2) = uVar2;\n                    *(puVar6 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar6 + 3) = *(*0x20 + -0x18);\n                    *(puVar6 + 0x1c) = uVar1;\n                    *(puVar6 + 4) = uVar2;\n                    *(puVar6 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43e746;\n                    fcn.004117c0(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43e752;\n                puVar6 = fcn.0040cd00();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x593680 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43e785;\n                    puVar6 = fcn.0045c6e0(*(*0x20 + -0x38));\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43e79f;\n            in_RAX = fcn.0045cb40(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43e7aa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1629
    },
    "0043e7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e7c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*(*unaff_RBX + 8) - **unaff_RBX != 0x2000) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43e814;\n                    fcn.00446260();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43e905;\n                    fcn.0040ac20();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x540028;\n                        *0x540028 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x540020;\n                        *0x540020 = *(*0x20 + -0x38);\n                    }\n                    *0x540030 = *0x540030 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43e985;\n                    fcn.0040ae40();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43e99b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43e9ab;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1205
    },
    "0043e9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043e9c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x540020 == 0 && (*0x540028 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if (*piVar1 == 0) {\n                    fcn.0045a260();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.0040ac20();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x540020 == 0) {\n                if (*0x540028 == 0) break;\n                iVar2 = *0x540028;\n                *0x540028 = *(*0x540028 + 0xa0);\n            }\n            else {\n                iVar2 = *0x540020;\n                *0x540020 = *(*0x540020 + 0xa0);\n            }\n            *0x540030 = *0x540030 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.0040ae40();\n    } while( true );\n}\n",
        "token_count": 489
    },
    "0043ebc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043ebc0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0040ac20();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x540028;\n        *0x540028 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x540020;\n        *0x540020 = auStack72._0_8_;\n    }\n    *0x540030 = *0x540030 + iVar2;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 593
    },
    "0043ed20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ed20(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.0045a260();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0043ee00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ee00(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint unaff_EBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x593680 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43ee5c;\n                in_RAX = fcn.0045c6e0();\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x593680 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43ee91;\n                in_RAX = fcn.0045c6e0();\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43eea5;\n            fcn.0042cbe0(in_RAX + 0x498);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                iVar5 = *(*0x20 + 0x10);\n                if (iVar5 != 0) {\n                    *(*0x20 + -0x20) = 0x43eeda;\n                    uVar2 = fcn.00414660();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    iVar5 = *(*0x20 + 0x10);\n                    goto code_r0x0043eee7;\n                }\n                if (*0x593550 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x593550;\n                    goto code_r0x0043eee7;\n                }\n            }\n            else {\n                iVar5 = *(*0x20 + 0x10);\ncode_r0x0043eee7:\n                arg1 = *0x53f6e8;\n                iVar6 = ((iVar5 >> 0x1f) >> 0x1b) + iVar5 >> 5;\n                uVar4 = iVar5 + iVar6 * -0x20;\n                if (-1 < uVar4) {\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    uVar3 = iVar6;\n                    if (uVar3 < *0x53f6e8) {\n                        puVar1 = *0x53f6e0 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x53f6a8) {\n                            puVar1 = *0x53f6a0 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43ef5f;\n                        fcn.0045ca80(*0x53f6a8);\n                    }\n                    *(*0x20 + -0x20) = 0x43ef67;\n                    fcn.0045ca80(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43ef6c;\n                fcn.00431c60();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43ef7d;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x43ef8c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1181
    },
    "0043efa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043efa0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar1 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar1;\n        iVar2 = *(in_RAX + 0x198 + (uVar1 & 0xff) * 8);\n        *(iVar2 + 0xa0) = *0x53ffe0;\n        if (*0x53ffe8 == 0) {\n            *0x53ffe8 = iVar2;\n        }\n        *0x53fff0 = *0x53fff0 + 1;\n        *0x53ffe0 = iVar2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x53ffe0;\n        if (*0x53ffe8 == 0) {\n            *0x53ffe8 = iVar2;\n        }\n        *0x53fff0 = *0x53fff0 + 1;\n        *0x53ffe0 = iVar2;\n        *(in_RAX + 0x998) = 0;\n    }\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.0040ac20();\n        fcn.0040ac20();\n        fcn.0044dee0(*(in_RAX + 0x2288));\n        *(in_RAX + 0x2288) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        iVar2 = in_RAX;\n        if (*0x593680 == 0) {\n            *(in_RAX + 0x2280) = 0;\n        }\n        else {\n            fcn.0045c700(in_RAX, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x2298) = 0;\n        *(iVar2 + 0x1208) = 0;\n        fcn.0040ae40();\n        fcn.0040ae40();\n    }\n    if (*0x59344c != 0) {\n        fcn.0042cd60();\n        fcn.00423220(in_RAX);\n    }\n    fcn.00411ac0(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n    }\n    else {\n        fcn.0045c700(in_RAX, in_RAX + 0x9c8, param_3, param_4);\n    }\n    fcn.00411ac0();\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.0045c700(in_RAX, in_RAX + 0x80, param_3, param_4);\n    }\n    fcn.0045a260();\n    fcn.004147c0(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043ebc0();\n    fcn.0044f480();\n    *(in_RAX + 0x1218) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1007
    },
    "0043f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f380(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t in_EAX;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    int64_t *unaff_RBX;\n    int64_t *piVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint64_t arg4;\n    \n    do {\n        puVar17 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar17 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x593450) && (0 < in_EAX)) {\n                *(*0x20 + -0x68) = *0x593450;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x545610 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb0) = 0x43f3fc;\n                    fcn.0044f540(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x43f405;\n                fcn.0045e360();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar6 = *(*0x20 + -0xa8);\n                if (*0x5400a0 == 0) {\n                    uVar13 = *(*0x20 + -0x68);\n                }\n                else {\n                    uVar13 = *(*0x20 + -0x68);\n                    *0x5400a8 = *0x5400a8 + uVar13 * (iVar6 - *0x5400a0);\n                }\n                uVar14 = *(*0x20 + 8);\n                uVar7 = uVar14;\n                uVar18 = ((uVar14 + 0x1f >> 0x1f) >> 0x1b) + uVar14 + 0x1f >> 5;\n                arg4 = uVar18;\n                *(*0x20 + -100) = uVar18;\n                *0x5400a0 = iVar6;\n                if (*0x53f648 < uVar14) {\n                    *(*0x20 + -0xb0) = 0x43f497;\n                    fcn.0040ac20();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x53f650 < iVar1) {\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0xb0) = 0x43f4dc;\n                        uVar5 = fcn.00445120(iVar1);\n                        *(*0x20 + -0x10) = uVar5;\n                        uVar5 = *(*0x20 + -0x48);\n                        *(*0x20 + -0xb0) = 0x43f506;\n                        fcn.00411980(uVar5);\n                        *0x53f648 = *(*0x20 + -0x48);\n                        *0x53f650 = *0x53f648;\n                        if (*0x593680 == 0) {\n                            *0x53f640 = *(*0x20 + -0x10);\n                            piVar16 = *0x53f648;\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43f547;\n                            fcn.0045c740(uVar5, *0x53f648, uVar7, arg4);\n                            piVar16 = *0x53f648;\n                        }\ncode_r0x0043f54e:\n                        *0x53f648 = piVar16;\n                        unaff_RSI = *0x53f6a8;\n                        uVar13 = *(*0x20 + -100);\n                        uVar7 = uVar13;\n                        if (*0x53f6b0 < uVar13) {\n                            *(*0x20 + -0x50) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43f5b3;\n                            uVar5 = fcn.00444fc0(*0x53f6a8);\n                            unaff_RBX = *(*0x20 + -0x50);\n                            piVar16 = unaff_RBX;\n                            piVar15 = unaff_RBX;\n                            if (*0x593680 != 0) {\n                                *(*0x20 + -0xb0) = 0x43f5e5;\n                                piVar16 = *0x53f6a8;\n                                *0x53f6a8 = unaff_RBX;\n                                piVar15 = *0x53f6b0;\n                                *0x53f6b0 = unaff_RBX;\n                                fcn.0045c5e0(piVar16, piVar15, uVar7, arg4);\n                                uVar5 = *0x53f6a0;\n                                piVar16 = *0x53f6a8;\n                                piVar15 = *0x53f6b0;\n                            }\n                            *0x53f6b0 = piVar15;\n                            *0x53f6a8 = piVar16;\n                            *0x53f6a0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43f5ff;\n                            uVar5 = fcn.00444fc0(*0x53f6e8);\n                            *0x53f6f0 = *(*0x20 + -0x50);\n                            piVar16 = *0x53f6f0;\n                            if (*0x593680 != 0) {\n                                *(*0x20 + -0xb0) = 0x43f630;\n                                piVar16 = *0x53f6e8;\n                                *0x53f6e8 = *0x53f6f0;\n                                fcn.0045c5e0(piVar16, *0x53f6f0, uVar7, arg4);\n                                uVar5 = *0x53f6e0;\n                                piVar16 = *0x53f6e8;\n                            }\ncode_r0x0043f632:\n                            *0x53f6e8 = piVar16;\n                            *0x53f6e0 = uVar5;\n                            *(*0x20 + -0xb0) = 0x43f63e;\n                            fcn.0040ae40();\n                            uVar13 = *(*0x20 + -0x68);\n                            uVar7 = *(*0x20 + 8);\n                            arg4 = *(*0x20 + -100);\n                            goto code_r0x0043f680;\n                        }\n                        unaff_RBX = uVar13;\n                        piVar15 = *0x53f6b0;\n                        if (unaff_RBX <= *0x53f6b0) {\n                            piVar15 = *0x53f6f0;\n                            *0x53f6a8 = unaff_RBX;\n                            uVar5 = *0x53f6e0;\n                            piVar16 = unaff_RBX;\n                            if (unaff_RBX <= *0x53f6f0) goto code_r0x0043f632;\n                            goto code_r0x0043fb79;\n                        }\n                        goto code_r0x0043fb85;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar15 = *0x53f650;\n                    piVar16 = unaff_RSI;\n                    if (unaff_RSI <= *0x53f650) goto code_r0x0043f54e;\n                }\n                else {\ncode_r0x0043f680:\n                    while( true ) {\n                        piVar16 = uVar13;\n                        if (uVar7 <= uVar13) break;\n                        unaff_RSI = uVar13;\n                        piVar12 = *0x53f648;\n                        piVar15 = piVar16;\n                        if (*0x53f648 <= unaff_RSI) goto code_r0x0043fb71;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x40) = unaff_RSI;\n                        iVar6 = (*0x53f640)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb0) = 0x43f6c7;\n                            iVar6 = fcn.0040cd00();\n                            piVar16 = *(*0x20 + -0x58);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb0) = 0x43f6e5;\n                        fcn.0043ee00();\n                        piVar12 = *0x53f648;\n                        piVar15 = *0x53f640;\n                        if (*0x53f648 <= *(*0x20 + -0x40)) goto code_r0x0043fb6c;\n                        piVar15 = *0x53f640 + *(*0x20 + -0x40);\n                        if (*0x593680 != '\\0') {\n                            *(*0x20 + -0x18) = piVar15;\n                            piVar16 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb0) = 0x43f72f;\n                            fcn.00403aa0();\n                            piVar15 = *(*0x20 + -0x18);\n                        }\n                        *piVar15 = *(*0x20 + -0x28);\n                        uVar13 = *(*0x20 + -0x58) + 1;\n                        uVar7 = *(*0x20 + 8);\n                        arg4 = *(*0x20 + -100);\n                        unaff_RBX = piVar16;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043f7f8:\n                        piVar15 = *(*0x20 + -0x20);\ncode_r0x0043f800:\n                        *(piVar15[6] + 0xa0) = 0;\n                        piVar16 = *0x53f640;\n                        piVar12 = *0x53f648;\n                        if (*0x53f648 != NULL) {\n                            iVar6 = **0x53f640;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb0) = 0x43f845;\n                            fcn.0043fbc0();\n                            if (*0x545610 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x43f853;\n                                fcn.00450760();\n                            }\n                            goto code_r0x0043f853;\n                        }\n                    }\n                    else {\n                        if (uVar7 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043f7f8;\n                            if (*0x545610 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb0) = 0x43f795;\n                                fcn.0044f540(0);\n                                *(*0x20 + -0xb0) = 0x43f7ad;\n                                fcn.00450400();\n                                arg4 = *(*0x20 + -100);\n                            }\n                            piVar15 = *(*0x20 + -0x20);\n                            *(*(piVar15[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043f800;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb0) = 0x43f7f6;\n                        fcn.00414f40();\n                        piVar16 = unaff_RBX;\ncode_r0x0043f853:\n                        *0x593550 = 0;\n                        uVar14 = *(*0x20 + -0x68);\n                        uVar13 = *(*0x20 + 8);\n                        uVar18 = uVar13;\n                        while (piVar12 = *0x53f648,  piVar15 = uVar14,  uVar13 < uVar14) {\n                            piVar16 = uVar13;\n                            unaff_RSI = *0x53f648;\n                            if (*0x53f648 <= piVar16) goto code_r0x0043fb58;\n                            *(*0x20 + -0x5c) = uVar13;\n                            *(*0x20 + -0xb0) = 0x43f87a;\n                            fcn.0043efa0();\n                            uVar18 = *(*0x20 + 8);\n                            uVar14 = *(*0x20 + -0x68);\n                            unaff_RSI = piVar12;\n                            uVar13 = *(*0x20 + -0x5c) + 1;\n                        }\n                        if (uVar18 == *0x53f648) {\ncode_r0x0043f945:\n                            uVar9 = uVar18;\n                            iVar6 = *(*0x20 + -0x20);\n                            uVar7 = 0;\n                            while( true ) {\n                                uVar18 = uVar18 - 1;\n                                piVar12 = uVar18;\n                                *(*0x20 + -0x30) = uVar7;\n                                if (uVar18 < 0) {\n                                    *0x53f760 = uVar9;\n                                    *0x53f770 = 0;\n                                    for (uVar13 = 1; uVar7 = *0x53f768,  uVar11 = uVar9,  uVar14 = uVar13, \n                                        uVar13 <= uVar9; uVar13 = uVar13 + 1) {\n                                        while (uVar18 = uVar11,  uVar18 != 0) {\n                                            uVar11 = uVar14 % uVar11;\n                                            uVar14 = uVar18;\n                                        }\n                                        if (uVar14 == 1) {\n                                            uVar11 = *0x53f770 + 1;\n                                            uVar10 = *0x53f770;\n                                            uVar8 = *0x53f768;\n                                            if (*0x53f778 < uVar11) {\n                                                *(*0x20 + -0x54) = uVar13;\n                                                *(*0x20 + -0xb0) = 0x43fa7e;\n                                                uVar9 = *0x53f770;\n                                                uVar10 = *0x53f768;\n                                                uVar8 = fcn.00445200(*0x53f770);\n                                                uVar4 = uVar8;\n                                                *0x53f778 = uVar9;\n                                                if (*0x593680 != 0) {\n                                                    *(*0x20 + -0xb0) = 0x43faa5;\n                                                    uVar8 = fcn.0045c5e0(uVar9, uVar11, uVar10, arg4);\n                                                    uVar4 = *0x53f768;\n                                                }\n                                                *0x53f768 = uVar4;\n                                                uVar9 = *(*0x20 + 8);\n                                                uVar13 = *(*0x20 + -0x54);\n                                                uVar10 = uVar7;\n                                            }\n                                            *0x53f770 = uVar10 + 1;\n                                            *(uVar8 + uVar10 * 4) = uVar13;\n                                        }\n                                    }\n                                    *0x593450 = uVar9;\n                                    return;\n                                }\n                                if (*0x53f648 <= uVar18) break;\n                                uVar11 = (*0x53f640)[uVar18];\n                                arg4 = uVar7;\n                                if (*(*(iVar6 + 0x30) + 0xa0) != uVar11) {\n                                    *(uVar11 + 4) = 0;\n                                    iVar3 = *0x53ffa0;\n                                    do {\n                                    } while (*(uVar11 + 0x194) != *(uVar11 + 0x194));\n                                    if ((*(uVar11 + 0x194) == *(uVar11 + 400)) && (*(uVar11 + 0x998) == 0)) {\n                                        *(*0x20 + -0x60) = uVar18;\n                                        *(*0x20 + -0xb0) = 0x43f9c5;\n                                        fcn.00441880();\n                                        uVar9 = *(*0x20 + 8);\n                                        uVar18 = *(*0x20 + -0x60);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        uVar7 = *(*0x20 + -0x30);\n                                        arg4 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x53ffa0 != 0) {\n                                            *0x53ffa0 = *(*0x53ffa0 + 0x128);\n                                            *0x53ffa8 = *0x53ffa8 + -1;\n                                        }\n                                        *(uVar11 + 0x38) = iVar3;\n                                        *(uVar11 + 8) = uVar7;\n                                        uVar7 = uVar11;\n                                        arg4 = uVar11;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb0) = 0x43fb3a;\n                            fcn.0045ca80(*0x53f648);\ncode_r0x0043fb3a:\n                            *(*0x20 + -0xb0) = 0x43fb45;\n                            fcn.0045cb00(piVar16, piVar12);\ncode_r0x0043fb45:\n                            *(*0x20 + -0xb0) = 0x43fb4d;\n                            fcn.0045cb00(piVar16, piVar12);\n                        }\n                        else {\n                            *(*0x20 + -0xb0) = 0x43f8cc;\n                            fcn.0040ac20();\n                            piVar15 = *(*0x20 + 8);\n                            piVar12 = piVar15;\n                            piVar16 = *0x53f650;\n                            if (piVar15 <= *0x53f650) {\n                                piVar16 = *(*0x20 + -100);\n                                piVar12 = *0x53f6b0;\n                                *0x53f648 = piVar15;\n                                if (piVar16 <= *0x53f6b0) {\n                                    piVar12 = *0x53f6f0;\n                                    *0x53f6a8 = piVar16;\n                                    if (piVar16 <= *0x53f6f0) {\n                                        *(*0x20 + -0xb0) = 0x43f93e;\n                                        *0x53f6e8 = piVar16;\n                                        fcn.0040ae40();\n                                        uVar18 = *(*0x20 + 8);\n                                        goto code_r0x0043f945;\n                                    }\n                                    goto code_r0x0043fb3a;\n                                }\n                                goto code_r0x0043fb45;\n                            }\n                        }\n                        *(*0x20 + -0xb0) = 0x43fb58;\n                        piVar15 = piVar16;\n                        fcn.0045cb00(piVar12, piVar16);\ncode_r0x0043fb58:\n                        *(*0x20 + -0xb0) = 0x43fb65;\n                        piVar12 = unaff_RSI;\n                        fcn.0045ca80(unaff_RSI);\n                    }\n                    *(*0x20 + -0xb0) = 0x43fb6c;\n                    fcn.0045ca80(piVar12);\ncode_r0x0043fb6c:\n                    *(*0x20 + -0xb0) = 0x43fb71;\n                    fcn.0045ca80(piVar12);\n                    unaff_RBX = piVar16;\ncode_r0x0043fb71:\n                    *(*0x20 + -0xb0) = 0x43fb79;\n                    fcn.0045ca80(piVar12);\ncode_r0x0043fb79:\n                    *(*0x20 + -0xb0) = 0x43fb85;\n                    fcn.0045cb00(unaff_RBX, piVar15);\ncode_r0x0043fb85:\n                    *(*0x20 + -0xb0) = 0x43fb8d;\n                    fcn.0045cb00(unaff_RBX, piVar15);\n                }\n                *(*0x20 + -0xb0) = 0x43fb95;\n                fcn.0045cb00(unaff_RSI, piVar15);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb0) = 0x43fba6;\n            in_EAX = fcn.00433640();\n        }\n        *(puVar17 + 8) = in_EAX;\n        *(puVar17 + -8) = 0x43fbb0;\n        fcn.0045a3a0();\n        in_EAX = *(puVar17 + 8);\n        *0x20 = puVar17;\n    } while( true );\n}\n",
        "token_count": 5003
    },
    "0043fbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043fbc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0043fc20();\n    fcn.00414f40();\n    if (*0x545610 != '\\0') {\n        fcn.004503a0();\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0043fc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043fc20(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00433640();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.00435040();\n        fcn.00434e60();\n        fcn.00433640();\n    } while( true );\n}\n",
        "token_count": 285
    },
    "0043fd40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043fd40(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x545610 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43fd9e;\n                        fcn.00450400();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43fddd;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x43fdee;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x43fdf8;\n                fcn.00435660();\n                *(*0x20 + -0x48) = 0x43fe09;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x43fe13;\n                fcn.00435660();\n                *(*0x20 + -0x48) = 0x43fe25;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x43fe2f;\n                fcn.00435540();\n                *(*0x20 + -0x48) = 0x43fe45;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x43fe4f;\n                fcn.004353e0();\n                *(*0x20 + -0x48) = 0x43fe54;\n                fcn.00435040();\n                *(*0x20 + -0x48) = 0x43fe59;\n                fcn.00434e60();\n                *(*0x20 + -0x48) = 0x43fe6a;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x48) = 0x43fe7b;\n            fcn.00433640();\n        }\n        *(puVar4 + -8) = 0x43fe85;\n        fcn.0045a3a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 832
    },
    "0043ff00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ff00(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x59340c != '\\0') || (*0x59340a != '\\0')) {\n                return;\n            }\n            if (*0x593468 != 0) {\n                return;\n            }\n            if ((*0x59340b == '\\0') && (*0x593403 != '\\0')) {\n                *(*0x20 + -0x50) = 0x43ff66;\n                *0x5934f8 = fcn.00439620();\n                uVar5 = *0x593430 != 0;\n            }\n            else {\n                uVar5 = 0;\n            }\n            iVar1 = *0x53ffac;\n            uVar6 = *0x53ffa8;\n            iVar8 = *0x53ffb0 - *0x53ffc0;\n            uVar12 = *0x53ffbc;\n            uVar7 = ((iVar8 - *0x53ffa8) - *0x53ffac) - *0x53ffbc;\n            uVar9 = uVar7;\n            if (uVar5 < uVar7) {\n                return;\n            }\n            uVar5 = *0x53ffa8;\n            uVar11 = *0x53ffbc;\n            if (-1 < uVar7) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x4401e0;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43ffee;\n                fcn.00436aa0();\n                uVar11 = uVar12;\n                uVar5 = uVar6;\n                if (*(*0x20 + -0x28) != 0) {\n                    if (*0x593500 == 0) {\ncode_r0x0044001e:\n                        uVar6 = *0x53f648;\n                        iVar2 = 0;\n                        while( true ) {\n                            if (*0x53f648 <= iVar2) {\n                                uVar4 = *(unaff_R14 + 0x30);\n                                *(uVar4 + 0xc4) = 0xffffffff;\n                                *(*0x20 + -0x50) = 0x44007b;\n                                fcn.0040ae40();\n                                uVar9 = 0x25;\n                                *(*0x20 + -0x50) = 0x44008c;\n                                fcn.00433640();\n                                goto code_r0x0044008c;\n                            }\n                            if (*(*(*0x53f640 + iVar2 * 8) + 0x2288) != 0) break;\n                            iVar2 = iVar2 + 1;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x440009;\n                    iVar2 = fcn.0044ee80();\n                    if (uVar9 == 0) goto code_r0x0044001e;\n                    puVar3 = 0x53ffd0;\n                    *0x593500 = iVar2;\n                    while( true ) {\n                        uVar11 = uVar12;\n                        uVar4 = *puVar3;\n                        if (uVar4 == 0) break;\n                        if (uVar9 == uVar4) {\n                            *puVar3 = *(uVar9 + 8);\n                            break;\n                        }\ncode_r0x0044008c:\n                        puVar3 = uVar4 + 8;\n                    }\n                    uVar12 = *0x53ffa0;\n                    if (*0x53ffa0 != 0) {\n                        uVar6 = *(*0x53ffa0 + 0x128);\n                        *0x53ffa8 = *0x53ffa8 - 1;\n                        *0x53ffa0 = uVar6;\n                    }\n                    uVar5 = uVar6;\n                    if (uVar12 != 0) {\n                        *(uVar12 + 0xa8) = uVar9;\n                        *(*0x20 + -0x50) = 0x4400e5;\n                        fcn.0040af20();\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x440105;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x50) = 0x440113;\n                fcn.0040ae40();\n                *(*0x20 + -0x50) = 0x440125;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*0x20 + -0x2c) = uVar5;\n            *(*0x20 + -0x30) = iVar1;\n            *(*0x20 + -0x34) = uVar11;\n            *(*0x20 + -0x50) = 0x44013c;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x44014d;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x440159;\n            fcn.004354e0();\n            *(*0x20 + -0x50) = 0x44016a;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x440176;\n            fcn.004354e0();\n            *(*0x20 + -0x50) = 0x440187;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x440194;\n            fcn.004354e0();\n            *(*0x20 + -0x50) = 0x4401a5;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x4401b1;\n            fcn.004354e0();\n            *(*0x20 + -0x50) = 0x4401b6;\n            fcn.00435040();\n            *(*0x20 + -0x50) = 0x4401bb;\n            fcn.00434e60();\n            *(*0x20 + -0x50) = 0x4401cc;\n            fcn.00433640();\n        }\n        *(puVar10 + -8) = 0x4401d2;\n        fcn.0045a3a0();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1690
    },
    "004407a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004407a0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x53f648; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x53f640 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.00440a80();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar6 = *0x53ffdc + *0x53ffd8 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.0040ae40();\n                        fcn.0043fea0();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x545610 != '\\0') {\n                                fcn.00450b80();\n                                fcn.00450400();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.00439fc0();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.0043fea0();\n                        fcn.0040ac20();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.0040ae40();\n    return iVar4;\n}\n",
        "token_count": 744
    },
    "004409e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004409e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x53f648,  iVar1 = *0x53f640,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.00440a80();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 229
    },
    "00440a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00440a80(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x5938d8 == 0) {\n                *(in_RAX + 0x22b0) = 1;\n                fcn.00430f60();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 261
    },
    "00440ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440ca0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack56 < *(unaff_R14 + 0x10) || &uStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045e360();\n    if (*0x5935d8 == 0) {\n        *0x5935d8 = iStack184;\n    }\n    fcn.0040ac20();\n    iStack40 = *0x5935d8;\n    uStack48 = *0x53ffd8;\n    uStack56 = *0x53ffdc;\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004354e0(iStack184 - iStack40 >> 0x3f, (iStack184 - iStack40) / 1000000);\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.00434e60();\n    if (in_AL != '\\0') {\n        uStack48 = *0x540060;\n        iStack40 = *0x53ffac;\n        uStack56 = *0x540070;\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.00435040();\n        fcn.00434e60();\n    }\n    iVar3 = *0x53f648;\n    iStack16 = *0x53f640;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.00434de0();\n            fcn.00435000();\n            fcn.00434e60();\n            if (iVar4 == 0) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00434e60();\n            }\n            fcn.00434de0();\n            fcn.004353e0(uVar1);\n            fcn.00434e60();\n            if (iVar4 == *0x53f648 + -1) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00434e60();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            uStack56 = *(iVar2 + 0x10);\n            iStack40 = *(iVar2 + 0x9a8);\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004353e0(uVar1);\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.00435040();\n            fcn.00434e60();\n        }\n    }\n    iVar4 = *0x53ec98;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.004356e0();\n            fcn.00435080();\n            fcn.004356e0();\n            fcn.00435080();\n            fcn.004356e0();\n            fcn.004354e0();\n            fcn.00435040();\n            fcn.00434e60();\n            iVar4 = *(iStack32 + 0x120);\n        }\n        fcn.00436aa0();\n        fcn.0040ae00();\n        return;\n    }\n    fcn.0040ae00();\n    return;\n}\n",
        "token_count": 1346
    },
    "004414a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004414a0(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar2 = *0x540010;\n    uVar1 = in_AL ^ 1;\n    if (*0x53fff8 != uVar1) {\n        *0x53fff8 = uVar1;\n        if (in_AL == 0) {\n            fcn.0040ae40();\n        }\n        else {\n            *0x540010 = 0;\n            if (*0x540008 != 0) {\n                *(*0x540008 + 0xa0) = 0;\n                if (*0x53ffe8 == 0) {\n                    *0x53ffe0 = *0x540000;\n                }\n                else {\n                    *(*0x53ffe8 + 0xa0) = *0x540000;\n                }\n                *0x53ffe8 = *0x540008;\n            }\n            *0x53fff0 = *0x53fff0 + iVar2;\n            *0x540000 = in_XMM15;\n            fcn.0040ae40();\n            while ((iVar2 != 0 && (*0x53ffd8 != 0))) {\n                fcn.00439d00();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 390
    },
    "00441dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441dc0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.0040ac20();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x53ffe0;\n        iVar3 = *0x53ffe8;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x53ffe8 != 0)) {\n            *(*0x53ffe8 + 0xa0) = uVar4;\n            uVar5 = *0x53ffe0;\n        }\n        *0x53ffe8 = iVar3;\n        *0x53ffe0 = uVar5;\n        *0x53fff0 = *0x53fff0 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.0040ae40();\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "004420c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004420c0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.0045a260();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 566
    },
    "00442260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00442260(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x44229d;\n            iVar5 = fcn.004420c0(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x198 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 400)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x194) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x44231a;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x44232e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 605
    },
    "00442360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00442360(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x4423d1;\n                    fcn.00442360();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x5936e0 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x442405;\n                    fcn.0045e360();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x5936f8;\n                    uVar7 = *0x5936f0;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x44248d;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x5936e0 == '\\0') goto code_r0x00442662;\n                *(*0x20 + -0x130) = 0x4424cc;\n                fcn.0045e360(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0xc0) = *0x5936f0;\n                *(*0x20 + -200) = *0x5936f8;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x442511;\n                fcn.0044b660();\n                *(*0x20 + -0x130) = 0x442516;\n                uVar3 = fcn.0044bea0();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x442534;\n                fcn.00434de0();\n                *(*0x20 + -0x130) = 0x442545;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x442557;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x442568;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x44256d;\n                fcn.00434e60();\n                *(*0x20 + -0x130) = 0x44258e;\n                uVar4 = fcn.0041a1e0(0x18);\n                *(*0x20 + -0x130) = 0x4425a5;\n                uVar3 = fcn.00448f60(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x4425b7;\n                fcn.00434de0();\n                *(*0x20 + -0x130) = 0x4425c9;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x4425da;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x4425df;\n                fcn.00434e60();\n                *(*0x20 + -0x130) = 0x4425fe;\n                uVar4 = fcn.0041a1e0(0x18);\n                *(*0x20 + -0x130) = 0x442611;\n                uVar3 = fcn.00448f60(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x442625;\n                fcn.00434de0();\n                *(*0x20 + -0x130) = 0x442637;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x442648;\n                fcn.004356e0();\n                *(*0x20 + -0x130) = 0x44264d;\n                fcn.00434e60();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x00442845;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x4426f8;\n                    uVar4 = fcn.00448f60(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x44270a;\n                    fcn.00434de0();\n                    *(*0x20 + -0x130) = 0x44271c;\n                    fcn.004356e0();\n                    *(*0x20 + -0x130) = 0x44272d;\n                    fcn.004356e0();\n                    *(*0x20 + -0x130) = 0x442732;\n                    fcn.00434e60();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x00442826;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x4427c5;\n                        uVar4 = fcn.00448f60(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x4427d7;\n                        fcn.00434de0();\n                        *(*0x20 + -0x130) = 0x4427e9;\n                        fcn.004356e0();\n                        *(*0x20 + -0x130) = 0x4427fa;\n                        fcn.004356e0();\n                        *(*0x20 + -0x130) = 0x4427ff;\n                        fcn.00434e60();\n                        *(*0x20 + -0x130) = 0x442805;\n                        fcn.00434de0();\n                        *(*0x20 + -0x130) = 0x44280a;\n                        fcn.00435040();\n                        *(*0x20 + -0x130) = 0x44280f;\n                        fcn.00434e60();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x00442662:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x442826;\n                    fcn.0045ca80(0x18);\ncode_r0x00442826:\n                    *(*0x20 + -0x130) = 0x442833;\n                    fcn.0045ca80(0x18);\n                }\n                *(*0x20 + -0x130) = 0x442845;\n                fcn.0045ca80(0x18);\ncode_r0x00442845:\n                *(*0x20 + -0x130) = 0x442852;\n                fcn.0045ca80(0x18);\n            }\n            *(*0x20 + -0x130) = 0x442865;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x442870;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2819
    },
    "00442880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442880(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = unaff_RBX;\n    *0x593424 = in_EAX;\n    if (*0x593680 != 0) {\n        fcn.0045c720(arg1, arg2, arg3, arg4);\n        uVar1 = *0x53eca0;\n    }\n    *0x53eca0 = uVar1;\n    return;\n}\n",
        "token_count": 187
    },
    "004428e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442a1a)\n// WARNING: Removing unreachable block (ram,0x00442a2b)\n// WARNING: Removing unreachable block (ram,0x00442a3c)\n// WARNING: Removing unreachable block (ram,0x00442a4d)\n// WARNING: Removing unreachable block (ram,0x00442a5e)\n// WARNING: Removing unreachable block (ram,0x00442a6f)\n// WARNING: Removing unreachable block (ram,0x00442a85)\n// WARNING: Removing unreachable block (ram,0x00442a96)\n// WARNING: Removing unreachable block (ram,0x00442aa7)\n// WARNING: Removing unreachable block (ram,0x00442ab8)\n\nulong fcn.004428e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x5935f0 = 0x2a;\n    *0x5935f8 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 287
    },
    "004434c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004434c0(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00443536;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x443510;\n                    fcn.0040ac20();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x44352a;\n                        fcn.0040af20();\n                    }\n                    *(*0x20 + -0x20) = 0x443536;\n                    fcn.0040ae40();\n                }\ncode_r0x00443536:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44357b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x443586;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "004435a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004435a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.0045c460(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.004360c0();\n    return;\n}\n",
        "token_count": 157
    },
    "00443640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00443640(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x44393b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x443954;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x39) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x4436b2;\n    iVar5 = fcn.004361a0();\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x5934c8 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x443716;\n        fcn.0045c460(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x593560 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x443770;\n            fcn.0045c460(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x541740;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x541740;\n        *(*0x20 + -0x68) = 0x4437d5;\n        fcn.0040ac20();\n        piVar1 = *(*0x20 + -0x30) + 0x541750;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            if (iVar2 == 0) goto code_r0x00443803;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\ncode_r0x00443803:\n        if (iVar2 != 0) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x4438c5;\n            fcn.0040ae40(iVar2);\ncode_r0x004438c5:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x4438ef;\n                fcn.0042ae40(iVar5 - *(*0x20 + -0x38), *(*0x20 + 0x20));\n            }\n            *(*0x20 + -0x68) = 0x4438f9;\n            uVar6 = fcn.004364a0();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x443825;\n        fcn.00443ba0(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x44384c;\n        fcn.00435f80(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x00443877;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x00443877:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x004438c5;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1845
    },
    "00443980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00443980(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uchar unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar3 = in_RAX >> 3;\n            uVar5 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3) >> 0x40, 0);\n            iVar7 = (uVar3 + ((uVar5 + uVar3 >> 1 | CARRY8(uVar5, uVar3) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar7 + 0x541750) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar3), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar7 + 0x541750;\n            *(*0x20 + -0x30) = iVar7;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar7 + 0x541740;\n            *(*0x20 + -0x50) = 0x443a14;\n            fcn.0040ac20();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x443ac6;\n                uVar4 = fcn.0040ae40();\n                return uVar4;\n            }\n            uVar4 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x443a45;\n            iVar7 = fcn.00443f40(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x38) = uVar4;\n            if (iVar7 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x443a6e;\n            fcn.0040ae40();\n            iVar7 = *(*0x20 + -0x28);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar7 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x50) = 0x443a9b;\n                fcn.00457780();\n                iVar7 = *(*0x20 + -0x28);\n            }\n            if (*(iVar7 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x443b65;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x443b79;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    if (*(*0x20 + 0x10) != '\\0') {\n        piVar2 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *piVar2;\n            if (iVar1 == 0) goto code_r0x00443b40;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\ncode_r0x00443b40:\n        if (iVar1 != 0) {\n            *(iVar7 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x443af2;\n    uVar4 = fcn.004435a0(*(*0x20 + 0x18));\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x443b17;\n        uVar4 = fcn.0045a1e0();\n    }\n    return uVar4;\n}\n",
        "token_count": 1274
    },
    "00443ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00443ba0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t *noname_1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00443ba0:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x593680 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x443bea;\n            fcn.0045c780(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x443bf6;\n            fcn.0045c720(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x443c05;\n            fcn.0045c780(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x443c0d;\n            in_RAX = fcn.0045c780(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x593680 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x443deb;\n                            fcn.0045c6e0();\n                        }\n                    }\n                    else if (*0x593680 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443dd1;\n                        fcn.0045c6e0();\n                    }\n                    if (*0x593680 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443e0b;\n                        fcn.0045c6e0();\n                        *(*0x20 + -0x28) = 0x443e16;\n                        fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x593680 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443c71;\n                        fcn.0045c6e0();\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x593680 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443c9c;\n                        fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x593680 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443cb7;\n                        iVar2 = fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x593680 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443cd2;\n                        iVar2 = fcn.0045c720(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x593680 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x443cf1;\n                            fcn.0045c6e0();\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x593680 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x443d12;\n                            fcn.0045c6e0();\n                        }\n                    }\n                    if (*0x593680 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443d2b;\n                        fcn.0045c780(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x593680 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443d47;\n                        iVar2 = fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x593680 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x443d65;\n                            fcn.0045c780(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x593680 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x443d93;\n                        fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x443d9c;\n                        fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x443da5;\n                        fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x443dae;\n                        fcn.0045c5e0(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x593680 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x443e7d;\n            unaff_RDI = arg3;\n            fcn.0045c700(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x443e85;\n            arg3 = unaff_RDI;\n            fcn.0045c6e0();\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x443ed2;\n                fcn.004443c0(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x00443ede;\n                *(*0x20 + -0x28) = 0x443ec5;\n                fcn.00444280(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00443ef2;\ncode_r0x00443ede:\n    unaff_RBX = 0x4c9bb0;\n    *(*0x20 + -0x28) = 0x443ef1;\n    in_RAX = fcn.00432ec0();\ncode_r0x00443ef2:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x443f0b;\n    fcn.0045a3a0();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x00443ba0;\n}\n",
        "token_count": 2554
    },
    "00443f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00443f40(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    int64_t noname_0;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar4 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar4 = noname_0 + 0x10;\n        }\n        else {\n            piVar4 = noname_0 + 8;\n        }\n        noname_0 = *piVar4;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.0045c460(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x004441c7;\n                fcn.00444280(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x004441c7:\n            fcn.004443c0(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x593680 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.0045c700(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x593680 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.0045c700(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x593680 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.0045c700(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x593680 == 0) {\n            *piVar4 = iVar3;\n        }\n        else {\n            fcn.0045c740(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        if (*0x593680 == 0) {\n            *(iVar3 + 0x38) = *(noname_0 + 0x38);\n        }\n        else {\n            fcn.0045c700(noname_0, *(noname_0 + 0x38), param_3, param_4);\n        }\n        iVar5 = *(noname_0 + 0x10);\n        if (*0x593680 == 0) {\n            *(iVar3 + 0x10) = iVar5;\n        }\n        else {\n            fcn.0045c700(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x593680 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045c740(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        iVar5 = *(noname_0 + 8);\n        if (*0x593680 == 0) {\n            *(iVar3 + 8) = iVar5;\n        }\n        else {\n            fcn.0045c700(noname_0, iVar5, param_3, param_4);\n        }\n        if (iVar5 != 0) {\n            if (*0x593680 == 0) {\n                *(iVar5 + 0x38) = iVar3;\n            }\n            else {\n                fcn.0045c740(noname_0, iVar5, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x593680 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.0045c700(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x593680 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.0045c700(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x593680 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.0045c700(noname_0, 0, param_3, param_4);\n            fcn.0045c700(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x593680 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.0045c700(noname_0, 0, param_3, param_4);\n        fcn.0045c740(noname_0, uVar6, param_3, param_4);\n        fcn.0045c700(noname_0, uVar6, param_3, param_4);\n        fcn.0045c700(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1844
    },
    "00444280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444280(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 8);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 0x10);\n            if (*0x593680 == 0) {\n                *(arg1 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 8) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x4442c5;\n                fcn.0045c720(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4442ce;\n                fcn.0045c6e0();\n                *(*0x20 + -0x20) = 0x4442d7;\n                in_RAX = fcn.0045c740(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x593680 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4442f4;\n                    in_RAX = fcn.0045c720(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x593680 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44430c;\n                in_RAX = fcn.0045c700(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x593680 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44436d;\n                fcn.0045c6e0();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x593680 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x444331;\n                fcn.0045c6e0();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x593680 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x444351;\n                    fcn.0045c6e0();\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x444388;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x444398;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 959
    },
    "004443c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004443c0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg1 = *(unaff_RBX + 0x10);\n            arg2 = *(unaff_RBX + 0x38);\n            iVar1 = *(arg1 + 8);\n            if (*0x593680 == 0) {\n                *(arg1 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg1;\n                *(unaff_RBX + 0x10) = iVar1;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x444405;\n                fcn.0045c720(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44440e;\n                fcn.0045c6e0();\n                *(*0x20 + -0x20) = 0x444417;\n                in_RAX = fcn.0045c740(arg1, arg2, arg3, arg4);\n            }\n            if (iVar1 != 0) {\n                if (*0x593680 == 0) {\n                    *(iVar1 + 0x38) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x444434;\n                    in_RAX = fcn.0045c720(arg1, arg2, arg3, arg4);\n                }\n            }\n            if (*0x593680 == 0) {\n                *(arg1 + 0x38) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44444c;\n                in_RAX = fcn.0045c700(arg1, arg2, arg3, arg4);\n            }\n            if (arg2 == 0) {\n                if (*0x593680 == 0) {\n                    *(in_RAX + 8) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4444ad;\n                fcn.0045c6e0();\n                return;\n            }\n            if (*(arg2 + 0x10) == unaff_RBX) {\n                if (*0x593680 == 0) {\n                    *(arg2 + 0x10) = arg1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x444471;\n                fcn.0045c6e0();\n                return;\n            }\n            if (*(arg2 + 8) == unaff_RBX) {\n                if (*0x593680 == 0) {\n                    *(arg2 + 8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x444491;\n                    fcn.0045c6e0();\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x4444c8;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4444d8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 958
    },
    "004446c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004446c0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x52cbb0) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x52cbb8) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.00434000(),  cVar2 != '\\0')) {\n            fcn.004449a0(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.0045da80)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x45c5c0;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 597
    },
    "00444940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444940(ulong arg1)\n\n{\n    if ((*0x59340c == '\\0') && (*0x59340a == '\\0')) {\n        if (*0x59340e != '\\0') {\n            return 0;\n        }\n        fcn.004449a0(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "004449a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004449a0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    ulong *unaff_R14;\n    ulong *puVar3;\n    \n    puVar3 = unaff_R14;\n    if (*0x593468 != 0) {\n        fcn.0042f460();\n    }\n    *0x593468 = 1;\n    *puVar3 = 0;\n    puVar3[2] = 0x13a0;\n    puVar3[3] = 0x13a0;\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435000();\n    fcn.00435540();\n    fcn.00435000();\n    fcn.00435540();\n    fcn.00435000();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    piVar1 = puVar3[6];\n    if (((*(piVar1 + 0x1d) != '\\0') && (*piVar1 == arg1)) && (piVar1[0x12] != 0)) {\n        if (*0x59340b != '\\0') {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n        arg1 = *(puVar3[6] + 0x90);\n    }\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    *(puVar3[6] + 0xc4) = 1;\n    *(puVar3[6] + 0x98) = arg1;\n    uVar2 = *0x527288 >> 2;\n    if (*(unaff_R14[6] + 0xf9) != 0) {\n        uVar2 = *(unaff_R14[6] + 0xf9);\n    }\n    if (uVar2 != 0) {\n        fcn.004535c0(0);\n        fcn.00454540();\n        fcn.00407280();\n    }\n    fcn.0042f460();\n    return;\n}\n",
        "token_count": 550
    },
    "00444fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00444fc0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x0044502a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x0044502a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x445049;\n                    iVar3 = fcn.0040c300(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44506c;\n                        fcn.0045d100(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x445085;\n                    iVar3 = fcn.0040c300(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x593680 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x4450a7;\n                        fcn.004126c0(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x4450c5;\n                fcn.0045d3c0(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x4c9bc0;\n            *(*0x20 + -0x48) = 0x4450e8;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x445105;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "00445200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00445200(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x4c9aa0;\n            *(*0x20 + -0x68) = 0x445898;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x4458b7;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x593618;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0xff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = unaff_RDI + (unaff_RDI + ((unaff_RDI + 0x60 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x0044526e;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x0044526e:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00445339:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x00445669;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xa5630);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x52a480);\n                        goto code_r0x00445339;\n                    }\n                    goto code_r0x004457f9;\n                }\n                goto code_r0x00445806;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x52a340;\n                piVar6 = *(piVar6 + 0xa5468);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x52a480);\n                    goto code_r0x00445339;\n                }\n                goto code_r0x00445813;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00445414:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x00445669;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xa5630);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x52a480);\n                            goto code_r0x00445414;\n                        }\n                        goto code_r0x004457c5;\n                    }\n                    goto code_r0x004457d2;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x52a340;\n                    piVar10 = *(piVar10 + 0xa5468);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x52a480);\n                        goto code_r0x00445414;\n                    }\n                    goto code_r0x004457df;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00445534:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x00445669:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x4456ac;\n                                uVar4 = fcn.0040c300(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x4456c9;\n                                fcn.0045d100();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x4456ea;\n                                uVar4 = fcn.0040c300(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x593680 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x44571b;\n                                    fcn.004126c0((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x445734;\n                            fcn.0045d3c0(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x4c9aa0;\n                        *(*0x20 + -0x68) = 0x445765;\n                        fcn.00432ec0();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x00445765:\n                        *(*0x20 + -0x68) = 0x44576f;\n                        fcn.0045ca80(0x44);\ncode_r0x0044576f:\n                        *(*0x20 + -0x68) = 0x445779;\n                        fcn.0045caa0(0xf9);\ncode_r0x00445779:\n                        *(*0x20 + -0x68) = 0x445785;\n                        fcn.0045ca80(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x00445785;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xa5630);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x52a480);\n                                goto code_r0x00445534;\n                            }\n                            goto code_r0x0044578f;\n                        }\n                        goto code_r0x0044579c;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xa5468);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x52a480);\n                            goto code_r0x00445534;\n                        }\n                        goto code_r0x004457a9;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00445635:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x00445669;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x52a480);\n                                goto code_r0x00445635;\n                            }\n                            goto code_r0x00445765;\n                        }\n                        goto code_r0x0044576f;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x52a340);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x52a480);\n                            goto code_r0x00445635;\n                        }\n                        goto code_r0x00445779;\n                    }\ncode_r0x00445785:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x44578f;\n                    fcn.0045caa0(0x81);\ncode_r0x0044578f:\n                    *(*0x20 + -0x68) = 0x44579c;\n                    fcn.0045ca80(0x44);\ncode_r0x0044579c:\n                    *(*0x20 + -0x68) = 0x4457a9;\n                    fcn.0045caa0(0xf9);\ncode_r0x004457a9:\n                    *(*0x20 + -0x68) = 0x4457b6;\n                    fcn.0045ca80(0x44);\n                }\n                *(*0x20 + -0x68) = 0x4457c5;\n                fcn.0045caa0(0x81);\n                piVar8 = piVar7;\ncode_r0x004457c5:\n                *(*0x20 + -0x68) = 0x4457d2;\n                fcn.0045ca80(0x44);\ncode_r0x004457d2:\n                *(*0x20 + -0x68) = 0x4457df;\n                fcn.0045caa0(0xf9);\ncode_r0x004457df:\n                *(*0x20 + -0x68) = 0x4457ec;\n                fcn.0045ca80(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x4457f9;\n            fcn.0045caa0(0x81);\n            piVar8 = piVar10;\ncode_r0x004457f9:\n            *(*0x20 + -0x68) = 0x445806;\n            fcn.0045ca80(0x44);\ncode_r0x00445806:\n            *(*0x20 + -0x68) = 0x445813;\n            fcn.0045caa0(0xf9);\ncode_r0x00445813:\n            *(*0x20 + -0x68) = 0x445825;\n            fcn.0045ca80(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x445832;\n        in_RAX = fcn.0045caa0(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4186
    },
    "004458e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.004458e0(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x593a08);\n                if (iVar1 != 0) goto code_r0x0044597e;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x593a08;\n                *(*0x20 + -0x40) = 0x445946;\n                iVar1 = fcn.004247e0();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x445a0f;\n                                    fcn.00425b60();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x0044597e:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x4459b5;\n                                            fcn.004259e0();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x4459d8;\n                                    iVar1 = fcn.00433640();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x445a2f;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x40) = 0x445a45;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x40) = 0x445a56;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x40) = 0x445a65;\n            in_AL = fcn.0045ca80(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x445a6f;\n        fcn.0045a3a0();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 900
    },
    "00445a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445a80(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x565870) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x445b36;\n                            fcn.00425b60(0x593a00);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00445b45;\n                        }\n                    }\n                    else {\ncode_r0x00445b45:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x59344c != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x445b93;\n                            fcn.004259e0(0x593a00);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x445bb1;\n                            fcn.004255c0(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x445bc5;\n                        fcn.0045ca80(2);\n                    }\n                    *(*0x20 + -0x38) = 0x445bcf;\n                    fcn.0045ca80(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x445be5;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x38) = 0x445bf2;\n            in_RAX = fcn.0045caa0(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x445c05;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00445c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445c20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x593a00;\n                *(*0x20 + -0x40) = 0x445c71;\n                fcn.0040ac20();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x445c85;\n                    puVar3 = fcn.004458e0();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x445cd4;\n                fcn.0040ae40();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x445d15;\n            in_RAX = fcn.0045ca80(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445d25;\n        fcn.0045eaa0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 703
    },
    "00445d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445d40(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x593a00;\n                *(*0x20 + -0x40) = 0x445db4;\n                fcn.0040ac20();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x445dd7;\n                    fcn.00445a80();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x445e0f;\n                fcn.0040ae40();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x445e4a;\n            in_RAX = fcn.0045ca80(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x445e59;\n        fcn.0045eaa0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 780
    },
    "00445e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00445e80(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045eaa0();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.0040ac20();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.00445a80();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.0040ae40();\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00445f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00445f80(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x5938a8 != 0) {\n                        uVar6 = -*0x593598;\n                        piVar8 = (*0x593598 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44600c;\n                        puVar2 = fcn.004159c0();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x446035;\n                        fcn.00433640();\n                        goto code_r0x00446035;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00446035:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x446065;\n                        fcn.0040ac20();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x594268);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x446099;\n                                fcn.004259e0();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x4460b1;\n                            fcn.0040ae40();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x4460d1;\n                                iVar3 = fcn.004247e0(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44610e;\n                                    fcn.00433640();\n                                    goto code_r0x0044610e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044610e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x446118;\n                        uVar1 = fcn.0045ca80(0x23);\n                        goto code_r0x00446118;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00446118:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x593a00;\n                            *(*0x20 + -0x78) = 0x446167;\n                            fcn.0040ac20();\n                            *(*0x20 + -0x78) = 0x446171;\n                            uVar4 = fcn.004458e0();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x446185;\n                            fcn.0040ae40();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x4461c5;\n                                fcn.00445c20();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x446212;\n                        fcn.0045ca80(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44621c;\n                    fcn.0045ca80(2);\n                }\n                *(*0x20 + -0x78) = 0x44622d;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x78) = 0x44623e;\n            uVar1 = fcn.00433640();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x446248;\n        fcn.0045eaa0();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1819
    },
    "00446260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446260(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x5938a8 != 0) {\n                    *(*0x20 + -0x80) = 0x44633d;\n                    fcn.00415a40();\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x565870) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x59344c == 0) {\n                                *(*0x20 + -0x80) = 0x446335;\n                                fcn.004255c0(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x446375;\n                            fcn.0040ac20();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x44639e;\n                                fcn.00425b60(0x594268);\n                                *(*0x20 + -0x80) = 0x4463ac;\n                                fcn.0040ae40();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x4463b8;\n                            in_RAX = fcn.0045ca80(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x4463cb;\n                        fcn.00434de0();\n                        *(*0x20 + -0x80) = 0x4463d5;\n                        fcn.00435540();\n                        *(*0x20 + -0x80) = 0x4463da;\n                        fcn.00435000();\n                        *(*0x20 + -0x80) = 0x4463e5;\n                        fcn.00435660();\n                        *(*0x20 + -0x80) = 0x4463ea;\n                        fcn.00435040();\n                        *(*0x20 + -0x80) = 0x4463ef;\n                        fcn.00434e60();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x446405;\n                        fcn.00433640();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x446412;\n                    uVar6 = fcn.0045caa0(0x40);\n                    goto code_r0x00446412;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x00446412:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x593a00;\n                        *(*0x20 + -0x80) = 0x446479;\n                        fcn.0040ac20();\n                        *(*0x20 + -0x80) = 0x446488;\n                        fcn.00445a80();\n                        *(*0x20 + -0x80) = 0x446494;\n                        fcn.0040ae40();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x80) = 0x4464d6;\n                            fcn.00445d40();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x44651a;\n                    fcn.0045ca80(2);\n                }\n                *(*0x20 + -0x80) = 0x446525;\n                fcn.0045ca80(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x446536;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x446546;\n        fcn.0045eaa0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1864
    },
    "00446560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446560(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00446731:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x44674f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x5938c0 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x4466b0;\n                            uVar9 = fcn.0044bde0();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x4466bf;\n                            fcn.00434de0();\n                            *(*0x20 + -0x68) = 0x4466d0;\n                            fcn.004356e0();\n                            *(*0x20 + -0x68) = 0x4466df;\n                            fcn.004356e0();\n                            *(*0x20 + -0x68) = 0x4466f0;\n                            fcn.004356e0();\n                            *(*0x20 + -0x68) = 0x4466fa;\n                            fcn.00435660();\n                            *(*0x20 + -0x68) = 0x44670b;\n                            fcn.004356e0();\n                            *(*0x20 + -0x68) = 0x446715;\n                            fcn.00435540();\n                            *(*0x20 + -0x68) = 0x44671a;\n                            fcn.00435040();\n                            *(*0x20 + -0x68) = 0x44671f;\n                            fcn.00434e60();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x446730;\n                            in_RAX = fcn.00433640();\n                            goto code_r0x00446731;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x004465de;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x004465de;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x004465de:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1597
    },
    "00446d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446d60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x593d78;\n                        *0x593d78 = *0x593d78 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22a8);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22a8) = iVar1;\n                        uVar9 = iVar3 + iVar8 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x593d78 = *0x593d78 + iVar1;\n                            *(iVar2 + 0x22a8) = 0;\n                            uVar9 = 0x593d78;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x446e46;\n                    uVar5 = fcn.00445f80();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x446e6f;\n                    fcn.0045cce6();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + -0x140);\n                        if ((*(*0x20 + -0x148) < uVar9) &&\n                           (uVar11 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x447088;\n                            fcn.00433640();\n                            goto code_r0x00447088;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar9 = 0;\n                        for (uVar11 = *(iVar8 + 0x148); uVar11 != 0; uVar11 = *(uVar11 + 0x40)) {\n                            uVar12 = *(*(uVar11 + 0x50) + 0x18) + *(uVar11 + 0x18);\n                            if (((uVar6 <= uVar12) && (uVar12 < uVar7)) && (uVar9 < uVar12)) {\n                                uVar9 = uVar12;\n                            }\ncode_r0x00447088:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b8) = 0x4470d2;\n                        iVar8 = fcn.00446be0(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x446f34;\n                    fcn.0045d3c0(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x446f9a;\n                    fcn.00446ae0();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x447055;\n                    fcn.00450e00(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x447067;\n                    fcn.00446260();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x4470fd;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x44710e;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x44711e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2186
    },
    "00447d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00447d80(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x447d60;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x593680 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.0045c720(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00447e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00447e00(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x5938b4) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x447ec9;\n                            iVar2 = fcn.0044b660(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x24) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x447f26;\n                            fcn.00446d60();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x447f55;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0x20) = 0x447f66;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x20) = 0x447f77;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x20) = 0x447f88;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x447f93;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 809
    },
    "00448140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00448140(uchar param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            iVar6 = in_RAX[3];\n            if (iVar6 == 0) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = iVar6;\n            *(*0x20 + -0x28) = unaff_RBX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x38) = in_RAX[1];\n            *(*0x20 + -0xb8) = 0x4481bc;\n            iVar4 = fcn.0044b180();\n            iVar6 = *(*0x20 + -0x80);\n            if (iVar4 == iVar6) {\n                iVar3 = -1;\n            }\n            else {\n                *(*0x20 + -0x80) = iVar6 + -1;\n                *(*0x20 + -0xb8) = 0x4481f5;\n                iVar3 = fcn.0044c480(1);\n                iVar6 = *(*0x20 + -0x80);\n            }\n            *(*0x20 + -0x80) = iVar6;\n            if (iVar3 == -1) {\n                iVar3 = 0;\n            }\n            *(*0x20 + -0x84) = iVar3;\n            iVar6 = *(*0x20 + 8);\n            iVar4 = *(iVar6 + 0x38) - *(iVar6 + 0x28);\n            if (iVar4 == 0) {\n                iVar8 = *(*0x20 + -0x38);\n                iVar12 = *(*0x20 + -0x30);\n                iVar10 = 0;\n                goto code_r0x004482f1;\n            }\n            iVar12 = *(*0x20 + -0x30);\n            if (*(iVar12 + 0x27) < 2) {\n                iVar8 = *(*0x20 + -0x38);\n                piVar11 = NULL;\n            }\n            else {\n                uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x2c);\n                iVar8 = *(*0x20 + -0x38);\n                piVar11 = uVar2 + *(iVar8 + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x78) = iVar4;\n            if ((piVar11 != NULL) && (iVar1 = *piVar11,  0 < iVar1)) {\n                iVar10 = piVar11[1];\n                if (iVar10 < 1) {\n                    iVar10 = 0;\ncode_r0x004482f1:\n                    if ((*(iVar6 + 0x48) == 0) || (*(iVar6 + 0x50) != 0)) {\ncode_r0x004483d0:\n                        if (*(iVar6 + 0x50) == 0) {\n                            if (*(iVar12 + 0x27) < 3) {\n                                puVar7 = NULL;\n                            }\n                            else {\n                                uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x30);\n                                puVar7 = uVar2 + *(iVar8 + 0x130) & (uVar2 == 0xffffffff) - 1;\n                            }\n                            if (puVar7 != NULL) {\n                                uVar5 = *puVar7;\n                                *(*0x20 + -0x20) = puVar7 + 1;\n                                *(*0x20 + -0x18) = uVar5;\n                                *(*0x20 + -0x10) = uVar5;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = 0x593660;\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 1;\n                        }\n                        return iVar10;\n                    }\n                    if (*(iVar12 + 0x27) == '\\0') {\n                        piVar11 = NULL;\n                    }\n                    else {\n                        uVar2 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x28);\n                        piVar11 = *(iVar8 + 0x130) + uVar2 & (uVar2 == 0xffffffff) - 1;\n                    }\n                    if ((piVar11 != NULL) && (iVar1 = *piVar11,  0 < iVar1)) {\n                        *(*0x20 + -0x50) = piVar11;\n                        if ((-1 < iVar3) && (iVar3 < iVar1)) goto code_r0x004483d0;\n                        *(*0x20 + -0xb8) = 0x4484c9;\n                        uVar5 = fcn.0044bde0();\n                        *(*0x20 + -0x40) = uVar5;\n                        *(*0x20 + -0x58) = iVar8;\n                        *(*0x20 + -0x60) = **(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x4484e5;\n                        fcn.00434de0();\n                        *(*0x20 + -0xb8) = 0x4484f6;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x448505;\n                        fcn.004354e0(*(*0x20 + -0x84));\n                        *(*0x20 + -0xb8) = 0x448516;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x448525;\n                        fcn.004354e0();\n                        *(*0x20 + -0xb8) = 0x448536;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x448545;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x448556;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x448565;\n                        fcn.00435540();\n                        *(*0x20 + -0xb8) = 0x448576;\n                        fcn.004356e0();\n                        *(*0x20 + -0xb8) = 0x44857b;\n                        fcn.00434e60();\n                        iVar8 = 0x10;\n                        *(*0x20 + -0xb8) = 0x44858c;\n                        fcn.00433640();\n                    }\n                    *(*0x20 + -0xb8) = 0x448594;\n                    uVar5 = fcn.0044bde0();\n                    *(*0x20 + -0x40) = uVar5;\n                    *(*0x20 + -0x58) = iVar8;\n                    *(*0x20 + -0x68) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x70) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -0xb8) = 0x4485bd;\n                    fcn.00434de0();\n                    *(*0x20 + -0xb8) = 0x4485ce;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x4485dd;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x4485ee;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x4485f8;\n                    fcn.00435540();\n                    *(*0x20 + -0xb8) = 0x448609;\n                    fcn.004356e0();\n                    *(*0x20 + -0xb8) = 0x448613;\n                    fcn.00435540();\n                    *(*0x20 + -0xb8) = 0x448618;\n                    fcn.00435040();\n                    *(*0x20 + -0xb8) = 0x44861d;\n                    fcn.00434e60();\n                    iVar8 = 0x10;\n                    *(*0x20 + -0xb8) = 0x44862e;\n                    fcn.00433640();\n                }\n                else {\n                    *(*0x20 + -0x48) = piVar11;\n                    if ((-1 < iVar3) && (iVar3 < iVar1)) goto code_r0x004482f1;\n                }\n                *(*0x20 + -0xb8) = 0x448636;\n                uVar5 = fcn.0044bde0();\n                *(*0x20 + -0x40) = uVar5;\n                *(*0x20 + -0x58) = iVar8;\n                *(*0x20 + -0x60) = **(*0x20 + -0x48);\n                *(*0x20 + -0xb8) = 0x448652;\n                fcn.00434de0();\n                *(*0x20 + -0xb8) = 0x448665;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x448671;\n                fcn.004354e0(*(*0x20 + -0x84));\n                *(*0x20 + -0xb8) = 0x448685;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x44868f;\n                fcn.004354e0();\n                *(*0x20 + -0xb8) = 0x4486a5;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x4486b4;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x4486c5;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x4486cf;\n                fcn.00435540();\n                *(*0x20 + -0xb8) = 0x4486e5;\n                fcn.004356e0();\n                *(*0x20 + -0xb8) = 0x4486ea;\n                fcn.00434e60();\n                iVar8 = 0x10;\n                *(*0x20 + -0xb8) = 0x4486fb;\n                fcn.00433640();\n            }\n            *(*0x20 + -0xb8) = 0x448705;\n            uVar5 = fcn.0044bde0();\n            *(*0x20 + -0x40) = uVar5;\n            *(*0x20 + -0x58) = iVar8;\n            *(*0x20 + -0x68) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xb8) = 0x448725;\n            fcn.00434de0();\n            *(*0x20 + -0xb8) = 0x448736;\n            fcn.004356e0();\n            *(*0x20 + -0xb8) = 0x448745;\n            fcn.004356e0();\n            *(*0x20 + -0xb8) = 0x448756;\n            fcn.004356e0();\n            param_1 = *(*0x20 + -0x78);\n            *(*0x20 + -0xb8) = 0x448768;\n            fcn.00435540();\n            *(*0x20 + -0xb8) = 0x448779;\n            fcn.004356e0();\n            *(*0x20 + -0xb8) = 0x448785;\n            fcn.00435540();\n            *(*0x20 + -0xb8) = 0x44878a;\n            fcn.00435040();\n            *(*0x20 + -0xb8) = 0x44878f;\n            fcn.00434e60();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xb8) = 0x4487a5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x4487b9;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 3169
    },
    "00448920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00448920(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x00448920:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == NULL) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x00448960;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x00448b65;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x00448960:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x004489c7;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x004489c7;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x004489c7:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x448a3b;\n                            iVar2 = fcn.0045ca80(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x4489e5;\n                    iVar2 = fcn.00449060();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX == NULL) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x448a9c;\n                            fcn.0045d3c0(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x448b10;\n                    fcn.0045cb40(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x448b18;\n                in_RAX = fcn.0045ca80(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x00448b77;\ncode_r0x00448b65:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x448b76;\n    in_RAX = fcn.00433640();\ncode_r0x00448b77:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x448b90;\n    fcn.0045a3a0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x00448920;\n}\n",
        "token_count": 1883
    },
    "00448f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00448f60(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040c300(0);\n            }\n            fcn.0045d3c0(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x532a60;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0044a480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.0044a480(void)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack136;\n    ulong uStack128;\n    uchar auStack120 [16];\n    uchar auStack104 [16];\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    \n    while (auStack120 < *(unaff_R14 + 0x10) || auStack120 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iStack136 = SUB168(in_XMM15, 0);\n    uStack128 = SUB168(in_XMM15 >> 0x40, 0);\n    auStack120 = in_XMM15;\n    auStack104 = in_XMM15;\n    fcn.00454d80();\n    if ((iStack136 == 0) && (auStack120._0_8_ == 0)) {\n        return 0;\n    }\n    arg1 = 0;\n    uVar5 = 0;\n    iVar4 = 0;\n    while( true ) {\n        uVar2 = fcn.00458700();\n        fcn.00458700(iStack136);\n        uStack56 = fcn.0045cd30();\n        uStack64 = auStack120._0_8_;\n        uStack48 = auStack120._0_8_;\n        uStack40 = uStack128;\n        uStack32 = auStack120._8_8_;\n        uVar1 = arg1 + 1;\n        uStack72 = uVar2;\n        if (uVar5 < arg1 + 1) {\n            iVar3 = fcn.00445200(arg1);\n            uVar1 = iVar4 + 1;\n            iVar4 = iVar3;\n            uVar5 = arg1;\n        }\n        arg1 = uVar1;\n        if (*0x593680 == 0) {\n            fcn.0045d09a(in_RAX, uVar5, arg1);\n        }\n        else {\n            fcn.004117c0(auStack88);\n        }\n        if (auStack104._0_8_ == 0) break;\n        fcn.00454d80();\n    }\n    fcn.00454d80();\n    return iVar4;\n}\n",
        "token_count": 600
    },
    "0044a700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044a700(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    uint uVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *arg2;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x44a725;\n            ppiVar2 = fcn.0040cd00();\n            *(*0x20 + -0x18) = ppiVar2;\n            for (iVar5 = 0x52cb00; iVar5 != 0; iVar5 = *(iVar5 + 0x220)) {\n                if (*(iVar5 + 0x218) == '\\0') {\n                    *(*0x20 + -0x10) = iVar5;\n                    piVar6 = ppiVar2[1];\n                    piVar7 = *ppiVar2;\n                    piVar3 = piVar7;\n                    if (ppiVar2[2] < piVar6 + 1U) {\n                        *(*0x20 + -0x70) = 0x44a77a;\n                        arg2 = piVar6;\n                        piVar3 = fcn.00445200(piVar6);\n                        ppiVar2 = *(*0x20 + -0x18);\n                        ppiVar2[2] = piVar6;\n                        if (*0x593680 == 0) {\n                            *ppiVar2 = piVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44a796;\n                            piVar3 = fcn.0045c5e0(piVar6, arg2, param_3, param_4);\n                        }\n                        iVar5 = *(*0x20 + -0x10);\n                        piVar6 = piVar7;\n                    }\n                    param_3 = piVar6 + 1;\n                    ppiVar2[1] = param_3;\n                    if (*0x593680 == 0) {\n                        piVar3[piVar6] = iVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x44a7c5;\n                        ppiVar2 = fcn.0045c6e0();\n                    }\n                    if ((*(iVar5 + 0x1f0) == 0) && (*(iVar5 + 0x1f8) == 0)) {\n                        iVar8 = *(iVar5 + 0xd8) - *(iVar5 + 0xd0);\n                        *(*0x20 + -0x28) = iVar8;\n                        *(*0x20 + -0x70) = 0x44a805;\n                        uVar1 = fcn.00413e40();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x1f0) = uVar1;\n                        if (*0x593680 == 0) {\n                            *(iVar5 + 0x1f8) = iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44a82e;\n                            fcn.0045c720(iVar5, piVar6, param_3, param_4);\n                        }\n                        iVar9 = *(iVar5 + 0xe8) - *(iVar5 + 0xe0);\n                        *(*0x20 + -0x20) = iVar9;\n                        *(*0x20 + -0x70) = 0x44a84d;\n                        uVar1 = fcn.00413e40();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x200) = uVar1;\n                        iVar8 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x593680 == 0) {\n                            *(iVar5 + 0x208) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x44a885;\n                            fcn.0045c720(iVar5, iVar8, param_3, param_4);\n                        }\n                        param_3 = 0x593d80;\n                        LOCK();\n                        *0x593d80 = *0x593d80 + iVar8;\n                        ppiVar2 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar6 = ppiVar2[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar6 <= piVar7) goto code_r0x0044a906;\n                iVar5 = (*ppiVar2)[piVar7];\n                if (*(iVar5 + 0x1e8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x593680 == 0) {\n                **ppiVar2 = iVar5;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x44a8ce;\n                ppiVar2 = fcn.0045c740(piVar7, piVar6, param_3, param_4);\n            }\n            piVar6 = ppiVar2[1];\n            if (piVar7 < piVar6) {\n                if (*0x593680 == 0) {\n                    (*ppiVar2)[piVar7] = 0x52cb00;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x44a905;\n                    ppiVar2 = fcn.0045c6e0(0x52cb00);\n                }\ncode_r0x0044a906:\n                if (*0x593680 != '\\0') {\n                    *(*0x20 + -0x70) = 0x44a91e;\n                    fcn.00403aa0();\n                    ppiVar2 = *(*0x20 + -0x18);\n                }\n                uVar4 = *0x53ecd8;\n                *0x53ecd8 = ppiVar2;\n                return uVar4;\n            }\n            *(*0x20 + -0x70) = 0x44a945;\n            fcn.0045ca80(piVar6);\n        }\n        *(puVar10 + -8) = 0x44a94b;\n        fcn.0045a3a0();\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1581
    },
    "0044a960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044a960(void)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    ulong *arg1;\n    ulong *puVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    ulong *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong *puVar14;\n    ulong *arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *in_RAX;\n            uVar2 = *puVar9;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff0) && (*(puVar9 + 4) == '\\0')) && (*(puVar9 + 5) == '\\0')) &&\n                ((*(puVar9 + 6) == '\\x01' && (*(puVar9 + 7) == '\\b')))) &&\n               (puVar14 = puVar9[3],  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar9 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x0044aeb5;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar9;\n                        *(*0x20 + -0x100) = 0x44ac06;\n                        uVar10 = fcn.0044b180();\n                        arg1 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (arg1 <= puVar14) goto code_r0x0044aeaa;\n                        *(*0x20 + -0xd0) = uVar10;\n                        *(*0x20 + -0x100) = 0x44ac45;\n                        iVar8 = fcn.0044b180();\n                        *(*0x20 + -200) = iVar8;\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0xa0);\n                        *(*0x20 + -0x80) = arg1;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != arg1) || (*(iVar11 + 0xa8) != iVar8)) goto code_r0x0044ae05;\n                        iVar8 = *(iVar11 + 0x1d8);\n                        arg1_00 = *(iVar11 + 0x1d0);\n                        if (iVar8 == 0) {\n                            return;\n                        }\n                        *(*0x20 + -0x60) = iVar8;\n                        iVar11 = 0;\n                        goto code_r0x0044acca;\n                    }\n                    puVar14 = *(puVar9 + puVar12);\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x0044afed;\n                } while (*(puVar9 + puVar12) <= *(puVar9 + puVar12 + 1));\n                arg1 = in_RAX[0xe];\n                puVar3 = in_RAX[0xd];\n                puVar14 = *(puVar9 + puVar12 * 8 + 4);\n                if (puVar14 < arg1) {\n                    puVar9 = *(puVar9 + puVar12 * 8 + 0xc);\n                    if (puVar9 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = puVar14 + puVar3;\n                            *(*0x20 + -0x100) = 0x44aa86;\n                            uVar10 = fcn.0044bde0(puVar9 + puVar3);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar10 = 0x4a6ac6;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar10;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x44aab4;\n                        uVar10 = fcn.0044bde0();\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0x88);\n                        iVar8 = *(iVar11 + 0x80);\n                        puVar9 = *(*0x20 + -0xb8);\n                        if (puVar9 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar9 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar10;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar9 * 8);\n                                *(*0x20 + -0x48) = *(iVar11 + 0x198);\n                                *(*0x20 + -0x78) = *(iVar11 + 0x1a0);\n                                *(*0x20 + -0x100) = 0x44ab34;\n                                fcn.00434de0();\n                                *(*0x20 + -0x100) = 0x44ab45;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44ab52;\n                                fcn.00435540();\n                                *(*0x20 + -0x100) = 0x44ab57;\n                                fcn.00435000();\n                                *(*0x20 + -0x100) = 0x44ab6c;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44ab7d;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44ab8a;\n                                fcn.00435540();\n                                *(*0x20 + -0x100) = 0x44ab8f;\n                                fcn.00435000();\n                                *(*0x20 + -0x100) = 0x44aba5;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44abb6;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44abcb;\n                                fcn.004356e0();\n                                *(*0x20 + -0x100) = 0x44abd0;\n                                fcn.00435040();\n                                *(*0x20 + -0x100) = 0x44abd5;\n                                fcn.00434e60();\n                                iVar11 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar11) {\n                                    arg1_00 = puVar12[0xe];\n                                    puVar9 = puVar12[0x11];\n                                    if (puVar9 <= arg1) {\ncode_r0x0044afa9:\n                                        *(*0x20 + -0x100) = 0x44afb4;\n                                        fcn.0045ca80(puVar9);\n                                        break;\n                                    }\n                                    puVar9 = *(puVar12[0x10] + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar9) {\ncode_r0x0044af9e:\n                                        *(*0x20 + -0x100) = 0x44afa9;\n                                        fcn.0045ca80(arg1_00);\n                                        goto code_r0x0044afa9;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x44af6f;\n                                    uVar10 = fcn.0044bde0();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x44af9e;\n                                        fcn.0045ca80(arg1);\n                                        goto code_r0x0044af9e;\n                                    }\ncode_r0x0044aebc:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar10;\n                                    *(*0x20 + -0x68) = *(arg1_00 + puVar14);\n                                    *(*0x20 + -0x100) = 0x44aedc;\n                                    fcn.00434de0();\n                                    *(*0x20 + -0x100) = 0x44aeed;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x100) = 0x44aefa;\n                                    fcn.00435540();\n                                    *(*0x20 + -0x100) = 0x44aeff;\n                                    fcn.00435000();\n                                    *(*0x20 + -0x100) = 0x44af14;\n                                    fcn.004356e0();\n                                    *(*0x20 + -0x100) = 0x44af19;\n                                    fcn.00435040();\n                                    *(*0x20 + -0x100) = 0x44af1e;\n                                    fcn.00434e60();\n                                    iVar11 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x44afc5;\n                                fcn.00433640();\n                            }\n                            *(*0x20 + -0x100) = 0x44afd0;\n                            fcn.0045ca80(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x44afdb;\n                        puVar9 = arg1;\n                        fcn.0045ca80(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x44afe5;\n                    fcn.0045ca80(arg1);\n                }\n                *(*0x20 + -0x100) = 0x44afed;\n                fcn.0045ca80(arg1);\ncode_r0x0044afed:\n                *(*0x20 + -0x100) = 0x44aff5;\n                in_RAX = fcn.0045ca80(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar9 + 4);\n            *(*0x20 + -0x98) = *(puVar9 + 5);\n            *(*0x20 + -0xa0) = *(puVar9 + 6);\n            *(*0x20 + -0xa8) = *(puVar9 + 7);\n            *(*0x20 + -0x80) = puVar9[3];\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x33];\n            *(*0x20 + -0x60) = in_RAX[0x34];\n            *(*0x20 + -0x100) = 0x44b051;\n            fcn.00434de0();\n            *(*0x20 + -0x100) = 0x44b065;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b06e;\n            fcn.00435540();\n            *(*0x20 + -0x100) = 0x44b07f;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b089;\n            fcn.004353e0();\n            *(*0x20 + -0x100) = 0x44b09a;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b0a5;\n            fcn.004353e0();\n            *(*0x20 + -0x100) = 0x44b0b6;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b0c5;\n            fcn.004353e0();\n            *(*0x20 + -0x100) = 0x44b0d6;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b0e5;\n            fcn.004353e0();\n            *(*0x20 + -0x100) = 0x44b0f6;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b105;\n            fcn.00435540();\n            *(*0x20 + -0x100) = 0x44b116;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b125;\n            fcn.00435540();\n            *(*0x20 + -0x100) = 0x44b136;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b14b;\n            fcn.004356e0();\n            *(*0x20 + -0x100) = 0x44b150;\n            fcn.00435040();\n            *(*0x20 + -0x100) = 0x44b155;\n            fcn.00434e60();\n            *(*0x20 + -0x100) = 0x44b166;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x44b171;\n        fcn.0045a3a0();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x0044acca:\n    *(*0x20 + -0x30) = *arg1_00;\n    uVar2 = *(arg1_00 + 0xc);\n    uVar4 = *(arg1_00 + 2);\n    uVar5 = *(arg1_00 + 0x14);\n    *(*0x20 + -0x28) = *(arg1_00 + 1);\n    *(*0x20 + -0x24) = uVar2;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar2 = *(arg1_00 + 0x1c);\n    uVar4 = *(arg1_00 + 4);\n    uVar5 = *(arg1_00 + 0x24);\n    *(*0x20 + -0x18) = *(arg1_00 + 3);\n    *(*0x20 + -0x14) = uVar2;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (puVar14[1] != *(*0x20 + -0x18)) {\ncode_r0x0044ad4e:\n        iVar11 = *(*(*0x20 + 8) + 0x1c0);\n        *(*0x20 + -0x40) = iVar11;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1c8);\n        arg1 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = arg1;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x44ad99;\n        fcn.00434de0();\n        *(*0x20 + -0x100) = 0x44adaa;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44adbf;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44add0;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44ade5;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44adea;\n        fcn.00435040();\n        *(*0x20 + -0x100) = 0x44adef;\n        fcn.00434e60();\n        *(*0x20 + -0x100) = 0x44ae05;\n        fcn.00433640();\ncode_r0x0044ae05:\n        *(*0x20 + -0x88) = *(iVar11 + 0xa8);\n        *(*0x20 + -0x100) = 0x44ae16;\n        fcn.00434de0();\n        *(*0x20 + -0x100) = 0x44ae27;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44ae31;\n        fcn.00435540();\n        *(*0x20 + -0x100) = 0x44ae45;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44ae4f;\n        fcn.00435540();\n        *(*0x20 + -0x100) = 0x44ae65;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44ae6f;\n        fcn.00435540();\n        *(*0x20 + -0x100) = 0x44ae85;\n        fcn.004356e0();\n        *(*0x20 + -0x100) = 0x44ae8f;\n        fcn.00435540();\n        *(*0x20 + -0x100) = 0x44ae94;\n        fcn.00435040();\n        *(*0x20 + -0x100) = 0x44ae99;\n        fcn.00434e60();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x44aeaa;\n        fcn.00433640();\ncode_r0x0044aeaa:\n        *(*0x20 + -0x100) = 0x44aeb5;\n        fcn.0045ca80(arg1);\ncode_r0x0044aeb5:\n        *(*0x20 + -0x100) = 0x44aebc;\n        uVar10 = fcn.0045ca80(arg1);\n        goto code_r0x0044aebc;\n    }\n    *(*0x20 + -0x78) = iVar11;\n    *(*0x20 + -0x50) = arg1_00;\n    *(*0x20 + -0x100) = 0x44ad29;\n    cVar6 = fcn.004027a0(*(*0x20 + -0x18), iVar8);\n    if (cVar6 == '\\0') goto code_r0x0044ad4e;\n    iVar11 = *(*0x20 + -0x78) + 1;\n    if (*(*0x20 + -0x60) <= iVar11) {\n        return;\n    }\n    arg1_00 = *(*0x20 + -0x50) + 0x28;\n    iVar8 = *(*0x20 + -0x60);\n    goto code_r0x0044acca;\n}\n",
        "token_count": 4828
    },
    "0044b180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044b180(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar4 = unaff_RBX & 0xffffffff;\n    uVar3 = *(in_RAX + 0xb0) + uVar4;\n    iVar1 = *(in_RAX + 0x140);\n    puVar5 = *(in_RAX + 0x138);\n    if (1 < iVar1) {\n        iVar6 = 0;\n        while( true ) {\n            if (((*puVar5 <= uVar4) && (uVar4 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar4)))) break;\n            iVar6 = iVar6 + 1;\n            if (iVar1 <= iVar6) goto code_r0x0044b1fb;\n            puVar5 = puVar5 + 3;\n        }\n        uVar3 = (puVar5[2] + uVar4) - *puVar5;\ncode_r0x0044b1fb:\n        if (*(in_RAX + 0xb8) < uVar3) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00435540();\n            fcn.004356e0();\n            fcn.00435540();\n            fcn.004356e0();\n            fcn.00435540();\n            fcn.00435040();\n            fcn.00434e60();\n            fcn.00433640();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 429
    },
    "0044b660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044b660(void)\n\n{\n    uint32_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x52cb00; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x0044b6a0;\n    }\n    iVar4 = 0;\ncode_r0x0044b6a0:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x140);\n    piVar6 = *(iVar4 + 0x138);\n    if (uVar5 < 2) goto code_r0x0044b6dc;\n    in_R9 = NULL;\n    do {\n        uVar1 = iVar2;\n        piVar3 = piVar6[2];\n        if (in_RAX < piVar3) {\n            return 0;\n        }\n        if (in_RAX < (piVar6[1] - *piVar6) + piVar3) {\n            uVar1 = *piVar6 + (in_RAX - piVar3);\n            in_R9 = piVar3;\ncode_r0x0044b6dc:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                piVar6 = *(arg1 + 4 + in_RAX) + *arg1;\n                do {\n                    arg1 = piVar6;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    piVar6 = arg1 + 1;\n                    if (in_RAX <= piVar6) goto code_r0x0044b778;\n                    in_R9 = uVar5 + piVar6 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    piVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (piVar3 < arg1) {\n                        return piVar3 + in_RAX;\n                    }\n                    fcn.0045ca80(arg1);\n                }\n                fcn.0045ca80(in_RAX);\ncode_r0x0044b778:\n                fcn.0045ca80(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.0045caa0(0x10);\n        }\n        else {\n            in_R9 = in_R9 + 1;\n            if (uVar5 <= in_R9) goto code_r0x0044b6dc;\n        }\n        piVar6 = piVar6 + 3;\n    } while( true );\n}\n",
        "token_count": 857
    },
    "0044b7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044baac)\n// WARNING: Removing unreachable block (ram,0x0044bab9)\n// WARNING: Removing unreachable block (ram,0x0044bc30)\n// WARNING: Removing unreachable block (ram,0x0044bac9)\n// WARNING: Removing unreachable block (ram,0x0044bbcf)\n// WARNING: Removing unreachable block (ram,0x0044bcc1)\n// WARNING: Removing unreachable block (ram,0x0044bd1b)\n// WARNING: Removing unreachable block (ram,0x0044bc47)\n// WARNING: Removing unreachable block (ram,0x0044bd2c)\n\nuint fcn.0044b7e0(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x0044b849;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x0044b849:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (*0x593468 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.0044b600();\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00435540();\n                fcn.00435040();\n                fcn.00434e60();\n                iVar7 = fcn.00433640();\ncode_r0x0044b976:\n                do {\n                    iStack56 = iVar7;\n                    fcn.0044b600();\n                    iVar7 = fcn.0044c660(arg1);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.0045ca80(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    uStack32 = unaff_RBX;\n                    iStack24 = in_RAX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.0044b600();\n                    uStack140 = 0xffffffff;\n                    arg1 = uVar6 - uStack64;\n                    iVar7 = (-arg1 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x0044b976;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.0045cb40(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "0044c800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c800(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    int64_t iVar10;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44c88e;\n                        cVar8 = fcn.0044cae0(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x593680 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44c905;\n                                fcn.0045c700(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & (*(piVar15 + 0x15) + piVar14[4]) - 1;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar9 = piVar14[3];\n                            *(*0x20 + -0x30) = iVar9;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar10 = *piVar15;\n                            *(*0x20 + -0x18) = iVar10;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((iVar9 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg4 == *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3)) {\n                                        *(iVar1 + -8 + iVar2 * 0x28) = iVar3 + iVar10;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                iVar10 = piVar14[1];\n                                iVar1 = *piVar14;\n                                uVar11 = piVar14[2];\n                                iVar9 = iVar1;\n                                if (uVar11 < iVar10 + 1U) {\n                                    *(*0x20 + -0x90) = 0x44c9eb;\n                                    iVar9 = fcn.00445200(iVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = iVar10;\n                                    if (*0x593680 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44ca0c;\n                                        iVar9 = fcn.0045c5e0(iVar10, uVar11, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                    iVar10 = iVar1;\n                                }\n                                piVar14[1] = iVar10 + 1;\n                                *(iVar9 + iVar10 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + iVar10 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + 8) = *(*0x20 + -0x30);\n                                *(iVar9 + 0xc) = uVar4;\n                                *(iVar9 + 0x10) = uVar5;\n                                *(iVar9 + 0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar9 + 0x1c) = uVar4;\n                                *(iVar9 + 0x20) = uVar5;\n                                *(iVar9 + 0x24) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar11 = *(piVar15 + 0x15);\n                            uVar11 = -uVar11 & (piVar14[5] + uVar11) - 1;\n                            piVar14[5] = uVar11;\n                            piVar14[5] = *piVar15 + uVar11;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44caa5;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9ab0;\n            *(*0x20 + -0x90) = 0x44cab8;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x44cac8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1916
    },
    "0044cae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044cae0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint8_t uVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    int64_t iVar13;\n    ulong *unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    bool bVar16;\n    bool bVar17;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar11 = *(unaff_RBX + 0x17) & 0x1f;\n            uVar6 = uVar11;\n            uVar10 = uVar11;\n            if (uVar10 < 0xc) {\n                if (uVar10 < 7) {\n                    if (4 < uVar10 - 1) {\n                        if (uVar10 == 6) {\ncode_r0x0044ccd2:\n                            uVar12 = *unaff_RBX;\n                            iVar13 = in_RAX[6];\n                            bVar17 = SBORROW8(*0x527380, iVar13);\n                            iVar7 = *0x527380 - iVar13;\n                            bVar16 = *0x527380 == iVar13;\n                            if (iVar13 < *0x527380) {\n                                *(*0x20 + -0x58) = in_XMM15;\n                                *(*0x20 + -0x50) = in_XMM15;\n                                *(*0x20 + -0x40) = in_XMM15;\n                                *(*0x20 + -0x58) = 2;\n                                *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                                *(*0x20 + -0x40) = in_RAX[6];\n                                *(*0x20 + -0x38) = uVar12;\n                                iVar8 = in_RAX[1];\n                                iVar1 = *in_RAX;\n                                iVar7 = iVar1;\n                                iVar15 = *0x527380;\n                                if (in_RAX[2] < iVar8 + 1U) {\n                                    *(*0x20 + -0x60) = iVar13;\n                                    *(*0x20 + -0x68) = *0x527380;\n                                    *(*0x20 + -0xb8) = 0x44cd48;\n                                    iVar7 = fcn.00445200(iVar8);\n                                    in_RAX = *(*0x20 + 8);\n                                    in_RAX[2] = iVar8;\n                                    if (*0x593680 == 0) {\n                                        *in_RAX = iVar7;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x44cd67;\n                                        iVar7 = fcn.0045c5e0(iVar8, uVar12, iVar13, iVar15);\n                                    }\n                                    iVar13 = *(*0x20 + -0x60);\n                                    iVar15 = *(*0x20 + -0x68);\n                                    iVar8 = iVar1;\n                                }\n                                in_RAX[1] = iVar8 + 1;\n                                *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                                iVar7 = iVar7 + iVar8 * 0x28;\n                                uVar2 = *(*0x20 + -0x4c);\n                                uVar3 = *(*0x20 + -0x48);\n                                uVar4 = *(*0x20 + -0x44);\n                                *(iVar7 + 8) = *(*0x20 + -0x50);\n                                *(iVar7 + 0xc) = uVar2;\n                                *(iVar7 + 0x10) = uVar3;\n                                *(iVar7 + 0x14) = uVar4;\n                                uVar2 = *(*0x20 + -0x3c);\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x34);\n                                *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                                *(iVar7 + 0x1c) = uVar2;\n                                *(iVar7 + 0x20) = uVar3;\n                                *(iVar7 + 0x24) = uVar4;\n                                in_RAX[6] = in_RAX[6] + 1;\n                                bVar17 = SBORROW8(iVar15, iVar13);\n                                iVar7 = iVar15 - iVar13;\n                                bVar16 = iVar15 == iVar13;\n                            }\n                            return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n                        }\ncode_r0x0044cdc2:\n                        *(*0x20 + -0xb8) = 0x44cdca;\n                        fcn.00454ee0();\n                        *(*0x20 + -0xb8) = 0x44cdf0;\n                        fcn.00448c60(0x16, uVar6, 0x4af9cf, 0x37);\n                        *(*0x20 + -0xb8) = 0x44cdf5;\n                        fcn.0040a660();\n                        *(*0x20 + -0xb8) = 0x44ce05;\n                        fcn.00432ec0();\n                        goto code_r0x0044ce05;\n                    }\n                }\n                else if (10 < uVar10) {\n                    if (uVar10 == 0xb) goto code_r0x0044ccd2;\n                    goto code_r0x0044cdc2;\n                }\ncode_r0x0044cbb7:\n                uVar12 = *unaff_RBX;\n                iVar13 = in_RAX[6];\n                bVar17 = SBORROW8(*0x527380, iVar13);\n                iVar7 = *0x527380 - iVar13;\n                bVar16 = *0x527380 == iVar13;\n                if (iVar13 < *0x527380) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar12;\n                    iVar8 = in_RAX[1];\n                    iVar1 = *in_RAX;\n                    iVar7 = iVar1;\n                    iVar15 = *0x527380;\n                    if (in_RAX[2] < iVar8 + 1U) {\n                        *(*0x20 + -0x60) = iVar13;\n                        *(*0x20 + -0x68) = *0x527380;\n                        *(*0x20 + -0xb8) = 0x44cc45;\n                        iVar7 = fcn.00445200(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x593680 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44cc65;\n                            iVar7 = fcn.0045c5e0(iVar8, uVar12, iVar13, iVar15);\n                        }\n                        iVar13 = *(*0x20 + -0x60);\n                        iVar15 = *(*0x20 + -0x68);\n                        iVar8 = iVar1;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar2;\n                    *(iVar7 + 0x10) = uVar3;\n                    *(iVar7 + 0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar2;\n                    *(iVar7 + 0x20) = uVar3;\n                    *(iVar7 + 0x24) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar17 = SBORROW8(iVar15, iVar13);\n                    iVar7 = iVar15 - iVar13;\n                    bVar16 = iVar15 == iVar13;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar16 && bVar17 == iVar7 < 0);\n            }\n            if (uVar10 < 0x12) {\n                if (uVar10 != 0xc) {\n                    if ((uVar10 == 0x11) && (unaff_RBX[8] == 1)) {\n                        *(*0x20 + -0xb8) = 0x44cb7d;\n                        uVar6 = fcn.0044cae0(arg1);\n                        return uVar6;\n                    }\n                    goto code_r0x0044cdc2;\n                }\n                goto code_r0x0044cbb7;\n            }\n            if (uVar10 == 0x16) goto code_r0x0044cbb7;\n            if (uVar10 != 0x19) {\n                if (uVar10 != 0x1a) goto code_r0x0044cdc2;\n                goto code_r0x0044cbb7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar13 = unaff_RBX[8];\n            *(*0x20 + -0x60) = iVar13;\n            uVar6 = 0;\n            uVar9 = arg1;\n            while( true ) {\n                if (iVar13 <= uVar6) {\n                    return 1;\n                }\n                iVar13 = unaff_RBX[7];\n                arg1 = unaff_RBX[8];\n                if (arg1 <= uVar6) break;\n                *(*0x20 + -0x70) = uVar6;\n                uVar6 = *(iVar13 + 0x10 + uVar6 * 0x18);\n                *(*0x20 + -0xb8) = 0x44ce5e;\n                cVar5 = fcn.0044cae0((uVar6 >> 1) + uVar9);\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\ncode_r0x0044ce05:\n                uVar6 = *(*0x20 + -0x70) + 1;\n                iVar13 = *(*0x20 + -0x60);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar9 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0xb8) = 0x44ce96;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x44ceab;\n        fcn.0045a3a0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2909
    },
    "0044d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044d1a0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg3_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x593458 == 0) {\n                *(*0x20 + -0x58) = 0x44d1d0;\n                fcn.0042d020();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x2288);\n                arg3_00 = *(in_RAX + 0x2280);\n                arg4 = *(in_RAX + 0x2290);\n                if (arg4 < iVar4 + 1U) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44d22c;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00445200(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2290) = iVar4;\n                    if (*0x593680 == 0) {\n                        *(in_RAX + 0x2280) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44d257;\n                        iVar3 = fcn.0045c5e0(iVar4, in_RAX, arg3, arg4);\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    param_1 = iVar4;\n                    iVar4 = arg3_00;\n                    arg3_00 = iVar3;\n                }\n                *(in_RAX + 0x2288) = iVar4 + 1;\n                if (*0x593680 == 0) {\n                    *(arg3_00 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44d28d;\n                    fcn.0045c720(param_1, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x2290);\n                *(*0x20 + -0x58) = 0x44d2ad;\n                fcn.0044ef60(arg1, in_RAX, arg3_00, arg4);\n                iVar4 = *(*0x20 + 8);\n                param_1 = *(iVar4 + 0x2288);\n                if (param_1 != 0) {\n                    if (**(iVar4 + 0x2280) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1208) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x2298;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44d2f8;\n                fcn.0045ca80(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44d309;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44d319;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1096
    },
    "0044d340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044d340(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    do {\n        while( true ) {\n            while (uVar2 = *(in_RAX + 8),  5 < uVar2) {\n                if (uVar2 < 8) {\n                    if (uVar2 == 6) {\n                        fcn.0045a260();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    }\n                    else {\n                        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                        *piVar1 = *piVar1 + 1;\n                        iVar4 = *(unaff_R14 + 0x30);\n                        LOCK();\n                        if (uVar2 == *(in_RAX + 8)) {\n                            *(in_RAX + 8) = 6;\n                            iVar5 = *in_RAX;\n                            LOCK();\n                            if (*(in_RAX + 8) == 6) {\n                                *(in_RAX + 8) = 3;\n                            }\n                            else {\n                                fcn.0044f300();\n                            }\n                            iVar3 = *(iVar4 + 0xd8);\n                            *(iVar4 + 0xd8) = iVar3 + -1;\n                            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            LOCK();\n                            *(iVar5 + 0x229c) = *(iVar5 + 0x229c) + 1;\n                            return 1;\n                        }\n                        iVar3 = *(iVar4 + 0xd8);\n                        *(iVar4 + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                    }\n                }\n                else {\n                    if (uVar2 == 8) goto code_r0x0044d430;\n                    if (uVar2 == 9) goto code_r0x0044d498;\n                    fcn.0044f300();\n                }\n            }\n            if (1 < uVar2) break;\n            if (uVar2 == 0) {\n                return 0;\n            }\ncode_r0x0044d430:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar4 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (uVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar5 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044f300();\n                }\n                iVar3 = *(iVar4 + 0xd8);\n                *(iVar4 + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar5 + 0x229c) = *(iVar5 + 0x229c) + 1;\n                return 1;\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n        }\n        if (uVar2 != 2) {\n            return 0;\n        }\ncode_r0x0044d498:\n        fcn.0045a260();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    } while( true );\n}\n",
        "token_count": 1033
    },
    "0044d600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044d600(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *(in_RAX + 0x2288);\n            if (unaff_RBX < uVar3) {\n                piVar1 = *(*(in_RAX + 0x2280) + unaff_RBX * 8);\n                if (in_RAX == *piVar1) {\n                    *piVar1 = 0;\n                    uVar3 = *(in_RAX + 0x2288);\n                    arg3 = uVar3 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044d696:\n                        arg4 = *(in_RAX + 0x2288);\n                        if (arg3 < arg4) {\n                            if (*0x593680 == 0) {\n                                *(*(in_RAX + 0x2280) + -8 + uVar3 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44d6d0;\n                                in_RAX = fcn.0045c740(uVar3, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2290);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2288) = arg3;\n                                uVar3 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar2 = *(in_RAX + 0x2280);\n                                    arg1 = *(in_RAX + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44d725;\n                                    uVar2 = fcn.0044ef60(arg1, uVar2, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar2;\n                                    uVar2 = *(*(*0x20 + 8) + 0x2290);\n                                    *(*0x20 + -0x38) = 0x44d751;\n                                    fcn.0044f0e0(uVar2);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar3 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2288) == 0) {\n                                        *(in_RAX + 0x1208) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n                                    }\n                                }\n                                LOCK();\n                                *(in_RAX + 0x2298) = *(in_RAX + 0x2298) + -1;\n                                return uVar3;\n                            }\n                            *(*0x20 + -0x38) = 0x44d7b2;\n                            fcn.0045cb00(arg3, arg2);\n                        }\n                        uVar3 = arg4;\n                        *(*0x20 + -0x38) = 0x44d7bd;\n                        fcn.0045ca80(uVar3);\ncode_r0x0044d7bd:\n                        *(*0x20 + -0x38) = 0x44d7c5;\n                        fcn.0045ca80(uVar3);\n                    }\n                    else if (arg3 < uVar3) {\n                        if (unaff_RBX < uVar3) {\n                            if (*0x593680 == 0) {\n                                *(*(in_RAX + 0x2280) + unaff_RBX * 8) = *(*(in_RAX + 0x2280) + -8 + uVar3 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44d696;\n                                in_RAX = fcn.0045c780(uVar3, arg2, arg3);\n                            }\n                            goto code_r0x0044d696;\n                        }\n                        goto code_r0x0044d7bd;\n                    }\n                    *(*0x20 + -0x38) = 0x44d7cd;\n                    fcn.0045ca80(uVar3);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44d7de;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x38) = 0x44d7e6;\n            in_RAX = fcn.0045ca80(uVar3);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44d7f6;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1354
    },
    "0044d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044d820(ulong noname_0, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    uint64_t arg4;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg4 = *(in_RAX + 0x2288);\n            if (arg4 != 0) {\n                if (in_RAX == ***(in_RAX + 0x2280)) {\n                    ***(in_RAX + 0x2280) = 0;\n                    iVar1 = *(in_RAX + 0x2288);\n                    arg1 = iVar1 - 1;\n                    if (0 < arg1) {\n                        uVar2 = (*(in_RAX + 0x2280))[iVar1 + -1];\n                        if (*0x593680 == 0) {\n                            **(in_RAX + 0x2280) = uVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44d89f;\n                            in_RAX = fcn.0045c760(arg1, arg2, uVar2, in_R9);\n                        }\n                    }\n                    arg3 = *(in_RAX + 0x2280);\n                    arg4 = *(in_RAX + 0x2288);\n                    if (arg1 < arg4) {\n                        if (*0x593680 == 0) {\n                            *(arg3 + -8 + iVar1 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44d8d9;\n                            in_RAX = fcn.0045c740(arg1, arg2, arg3, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2290);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2288) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                uVar2 = *(in_RAX + 0x2290);\n                                *(*0x20 + -0x30) = 0x44d914;\n                                fcn.0044f0e0(uVar2);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2288) == 0) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n                            }\n                            LOCK();\n                            *(in_RAX + 0x2298) = *(in_RAX + 0x2298) + -1;\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44d965;\n                        fcn.0045cb00(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44d970;\n                    in_R9 = arg4;\n                    fcn.0045ca80(arg4);\n                }\n                *(*0x20 + -0x30) = 0x44d985;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x30) = 0x44d98c;\n            in_RAX = fcn.0045ca80(arg4);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44d997;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 963
    },
    "0044e840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044e840(int64_t arg1)\n\n{\n    code **arg2;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045eaa0();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    uVar1 = *(unaff_RBX + 0x30);\n    iVar2 = *(unaff_RBX + 0x10);\n    if (iVar2 < 1) {\n        fcn.0044d820(arg1, arg2);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044f300();\n        }\n    }\n    else {\n        iVar2 = iVar2 * ((arg1 - *(unaff_RBX + 8)) / iVar2 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar2;\n        if (iVar2 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044f0e0(*(in_RAX + 0x2290));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044f300();\n        }\n        if (*(in_RAX + 0x2288) == 0) {\n            *(in_RAX + 0x1208) = 0;\n        }\n        else {\n            *(in_RAX + 0x1208) = *(**(in_RAX + 0x2280) + 8);\n        }\n    }\n    fcn.0040ae40();\n    (**arg2)(uVar1);\n    fcn.0040ac20();\n    return;\n}\n",
        "token_count": 496
    },
    "0044ef60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ef60(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44ef91;\n                fcn.0044f300();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44efc8;\n                    fcn.0044f300();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044f07a;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044f06f;\n                    if (*0x593680 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44f026;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.0045c780(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x593680 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44f054;\n                            unaff_RDI = fcn.0045c740(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44f06f;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f06f:\n                *(*0x20 + -0x28) = 0x44f07a;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f07a:\n                *(*0x20 + -0x28) = 0x44f085;\n                fcn.0045ca80(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44f090;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44f0aa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1280
    },
    "0044f0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f0e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44f111;\n                fcn.0044f300();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44f148;\n                    fcn.0044f300();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044f2a7;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044f29c;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044f291;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x0044f286;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0044f27b;\n                    if (unaff_RBX <= arg3) goto code_r0x0044f270;\n                    if (*0x593680 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44f230;\n                        in_RAX = fcn.0045c780(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x593680 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44f25b;\n                            fcn.0045c740(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44f270;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f270:\n                *(*0x20 + -0x28) = 0x44f27b;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f27b:\n                *(*0x20 + -0x28) = 0x44f286;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f286:\n                *(*0x20 + -0x28) = 0x44f291;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f291:\n                *(*0x20 + -0x28) = 0x44f29c;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f29c:\n                *(*0x20 + -0x28) = 0x44f2a7;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0044f2a7:\n                *(*0x20 + -0x28) = 0x44f2b2;\n                fcn.0045ca80(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44f2bd;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44f2d7;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1837
    },
    "0044f3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044f3c0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*0x545668 != 0) && ((*0x545658 != 0 || (*0x545611 != '\\0')))) {\n        fcn.0040ac20();\n        iVar1 = *0x545668;\n        if ((*0x545668 != 0) && ((*0x545658 != 0 || (*0x545611 != '\\0')))) {\n            *0x545668 = 0;\n            fcn.0040ae40();\n            return iVar1;\n        }\n        fcn.0040ae40();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "0044f480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f480(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.0040ac20();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x545658 != NULL) {\n        **0x545660 = puVar1;\n        puVar2 = *0x545658;\n    }\n    *0x545658 = puVar2;\n    *0x545660 = puVar1;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 239
    },
    "0044f540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044f540(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = fcn.0044fc00();\n    if ((*0x545610 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.0044fc80();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044f640(unaff_RBX & 0xffffffff, noname_1, noname_1, arg1);\n    fcn.0044fc80();\n    return;\n}\n",
        "token_count": 248
    },
    "0044fae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044fae0(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x44fb65;\n                arg1 = fcn.00453e40(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x44fb45;\n                arg1 = fcn.00453fc0(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x44fba5;\n                uVar1 = fcn.0044ff80(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x44fbb9;\n            in_RAX = fcn.0045cb00(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44fbd8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 830
    },
    "0044fc80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044fc80(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_EAX == -1) {\n        fcn.0040ae40();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "0044fd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044fd00(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x545608 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x545608 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x545608;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44fd59;\n                fcn.0040ac20();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x545658;\n            puVar2 = *0x545660;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x545658 != NULL)) {\n                **0x545660 = in_RAX;\n                puVar3 = *0x545658;\n                puVar2 = in_RAX;\n            }\n            *0x545660 = puVar2;\n            *0x545658 = puVar3;\n            if (*0x545650 == NULL) {\n                *(*0x20 + -0x38) = 0x44fdc8;\n                puVar3 = fcn.004159c0();\n                if (puVar3 != NULL) goto code_r0x0044fdd1;\n            }\n            else {\n                puVar3 = *0x545650;\n                *0x545650 = **0x545650;\ncode_r0x0044fdd1:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44fded;\n                fcn.0045c460(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x0044ff32;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x0044ff15;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44fef9;\n                                fcn.0040ae40();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44ff15;\n                        fcn.0045ca80(0xfbe8);\ncode_r0x0044ff15:\n                        *(*0x20 + -0x38) = 0x44ff25;\n                        fcn.0045ca80(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44ff32;\n                    fcn.0045ca80(0xfbe8);\ncode_r0x0044ff32:\n                    *(*0x20 + -0x38) = 0x44ff3f;\n                    fcn.0045ca80(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44ff4c;\n                fcn.0045ca80(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44ff5d;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44ff6c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1577
    },
    "00450280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00450280(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x4502e8;\n                    piVar1 = fcn.004159c0();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0045030c;\n                    }\n                    goto code_r0x00450345;\n                }\n            }\n            else {\ncode_r0x0045030c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x450345;\n                fcn.0045caa0(0xfff8);\ncode_r0x00450345:\n                *(*0x20 + -0x28) = 0x450356;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x450367;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x450377;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 667
    },
    "00450400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450400(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044f540(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "004504c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004504c0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x450514;\n            fcn.00433640();\n        }\n        *(puVar2 + -8) = 0x45051a;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "00450520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450520(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.0044f540(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "004505c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004505c0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x450639;\n                    fcn.0044f540(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x450665;\n            fcn.00433640();\n        }\n        *(puVar2 + -8) = 0x45066b;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 428
    },
    "00450760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450760(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1228) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x450849;\n                    fcn.0044f540(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x45088e;\n                fcn.0044f540(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1228) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1228) * 8 + 0x5556a8);\n                *(*0x20 + -0x68) = 0x450808;\n                fcn.0044f540(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x4508a5;\n            fcn.0045ca80(4);\n        }\n        *(puVar3 + -8) = 0x4508ab;\n        fcn.0045a3a0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 690
    },
    "00450b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450b80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044f540(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00452940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00452940(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar uVar8;\n    int64_t unaff_RDI;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x27);\n            if (uVar1 < 6) {\n                uVar6 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar6 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar6;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar6 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar6 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar6;\n            *(*0x20 + -0x90) = 0x452a18;\n            uVar4 = fcn.0044c480(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar8 = 0xff;\n            }\n            else {\n                uVar8 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar8;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x452e40;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x452d60;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar6 = 0;\n            cVar5 = '\\0';\n            while (uVar6 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar6);\n                uVar9 = uVar6 + 1;\n                *(*0x20 + -0x58) = uVar9;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x452afd;\n                            fcn.00434de0();\n                            *(*0x20 + -0x90) = 0x452b0e;\n                            fcn.004356e0();\n                            *(*0x20 + -0x90) = 0x452b13;\n                            fcn.00434e60();\n                        }\n                        *(*0x20 + -0x90) = 0x452b18;\n                        fcn.00434de0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x452b29;\n                        fcn.004356e0();\n                        *(*0x20 + -0x90) = 0x452b2e;\n                        fcn.00434e60();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x452b5c;\n                            fcn.00434de0();\n                            *(*0x20 + -0x90) = 0x452b6d;\n                            fcn.004356e0();\n                            *(*0x20 + -0x90) = 0x452b72;\n                            fcn.00434e60();\n                        }\n                        *(*0x20 + -0x90) = 0x452b77;\n                        fcn.00434de0();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x452b88;\n                        fcn.004356e0();\n                        *(*0x20 + -0x90) = 0x452b8d;\n                        fcn.00434e60();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x00452c1e:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar6;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x452c35;\n                            fcn.00434de0();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x452c46;\n                            fcn.004356e0();\n                            *(*0x20 + -0x90) = 0x452c4b;\n                            fcn.00434e60();\n                            uVar6 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar9 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar9) {\n                            *(*0x20 + -0x90) = 0x452d05;\n                            fcn.0045ca80(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar6 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x452c8b;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar6 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x00452cde:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x452cb9;\n                        fcn.00434de0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x452cca;\n                        fcn.004356e0();\n                        *(*0x20 + -0x90) = 0x452ccf;\n                        fcn.00434e60();\n                        uVar6 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x00452cde;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x00452c1e;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x452bc5;\n                        fcn.00434de0();\n                        *(*0x20 + -0x90) = 0x452bd6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x90) = 0x452bdb;\n                        fcn.00434e60();\n                    }\n                    *(*0x20 + -0x90) = 0x452be5;\n                    fcn.00434de0();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x452bf6;\n                    fcn.004356e0();\n                    *(*0x20 + -0x90) = 0x452bfb;\n                    fcn.00434e60();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar6 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x452d0f;\n            in_RAX = fcn.0045ca80(0xab);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x452d29;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2555
    },
    "00453300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00453300(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.0044b660();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00454060(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.004533a0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 228
    },
    "004539c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004539c0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.00434e60();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.0044b660();\n        cVar1 = fcn.00454120(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.00453b80(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    iVar2 = fcn.0044b660();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00454120();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.004533a0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 477
    },
    "00454060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00454060(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((0 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00454120(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 218
    },
    "00454120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00454120(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t noname_0;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar3;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        param_1 = param_1 & 0xff;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    arg2 = *0x527288 >> 2;\n    if (uVar1 != 0) {\n        arg2 = uVar1;\n    }\n    if (1 < arg2) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    noname_0 = param_1;\n    piVar2 = fcn.0044bde0();\n    if ((((unaff_RBX == 0xf) && (noname_0 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402c40(noname_0, arg2);\n    if (iStack32 < 0) {\n        bVar3 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar3) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar3 = true;\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 661
    },
    "00454a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454a60(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53ecb8 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00454b80(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.00454d80();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.00435040();\n        fcn.00434e60();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00454b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00454b80(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.00454d80();\n        if (arg1[3] == 0) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n        else {\n            fcn.00449a80();\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.00435040();\n            fcn.00434e60();\n        }\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00434e60();\n        if (arg1[1] != 0) {\n            fcn.00449a80();\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.00435000();\n            fcn.00434e60();\n        }\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.00435040();\n        fcn.00434e60();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 413
    },
    "00454d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454d80(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*0x593468 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable.Ld_M_fL.0;\n    }\n    else {\n        pcVar1 = 0x4b0ea0;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 169
    },
    "00454e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454e00(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x53ecc0 == 0) {\n                return;\n            }\n            if ((*0x593468 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable.Ld_M_fL.0;\n            }\n            else {\n                pcVar1 = 0x4b0ea0;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x454e8a;\n                (*pcVar1)();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x454ea5;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x454ebf;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 628
    },
    "00454ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00454ee0(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x454f05;\n            fcn.004550c0();\n            *(*0x20 + -0x20) = 0x454f0a;\n            iVar1 = fcn.00455820(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x454f55;\n            in_RAX = fcn.0045cb40(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x454f65;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 475
    },
    "00455b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00455b40(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(in_RAX + iVar4 + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00431c60();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 1) {\n        uVar3 = uVar3 & 0xffffffffffffff00 | *(in_RAX + 2) == '_';\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3 & 0xffffffff;\n}\n",
        "token_count": 321
    },
    "00455be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00455be0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t arg4;\n    int64_t iVar20;\n    int64_t iVar21;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x52cd20 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x52cc58 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x455c5a;\n                fcn.0045ccf8();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x455c85;\n            uVar5 = fcn.0040d8c0(*0x20 + -0x1b8);\n            if (*0x53ecd8 == NULL) {\n                piVar16 = NULL;\n                piVar7 = NULL;\n                piVar12 = NULL;\n            }\n            else {\n                piVar7 = **0x53ecd8;\n                piVar16 = (*0x53ecd8)[1];\n                piVar12 = (*0x53ecd8)[2];\n            }\n            if (piVar16 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar19 = *piVar7;\n                iVar13 = (-(piVar12 + -1) >> 0x3f & 8) + piVar7;\n                *(*0x20 + -0x1f0) = iVar13;\n                iVar21 = piVar16 + -1;\n                *(*0x20 + -0x240) = iVar21;\n                iVar9 = 0;\n                do {\n                    if (iVar21 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar19;\n                    iVar17 = *(iVar13 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar17;\n                    arg4 = *(iVar19 + 0x150);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar20 = *(iVar19 + 0x158);\n                    *(*0x20 + -0x250) = iVar20;\n                    iVar14 = 0;\n                    while (iVar14 < iVar20) {\n                        *(*0x20 + -600) = iVar14;\n                        uVar1 = *(arg4 + iVar14 * 4);\n                        if (*(iVar19 + 0x210) == 0) {\n                            iVar21 = uVar1 + *(iVar19 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455edc;\n                            piVar7 = fcn.0040f6e0(uVar1);\n                            iVar21 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar21;\n                        uVar1 = *(iVar21 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x455f05;\n                        piVar7 = fcn.0040f6e0(uVar1);\n                        uVar11 = piVar7[1];\n                        iVar21 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar13 = 0; iVar13 < uVar11; iVar13 = iVar13 + 1) {\n                            if (*(iVar21 + iVar13 * 8) == iVar9) goto code_r0x00455e5e;\n                        }\n                        uVar10 = uVar11 + 1;\n                        uVar6 = uVar11;\n                        iVar13 = iVar21;\n                        uVar18 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar11;\n                            *(*0x20 + -0x2c0) = 0x455f39;\n                            iVar13 = fcn.00445200(uVar11);\n                            uVar10 = iVar21 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar18 = uVar11;\n                        }\n                        *(*0x20 + -0x210) = iVar13;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar18;\n                        iVar21 = iVar13 + uVar6 * 8;\n                        if (*0x593680 == 0) {\n                            *(iVar13 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455f7d;\n                            fcn.0045c700(uVar6, iVar9, iVar21, arg4);\n                        }\n                        uVar11 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x455f94;\n                        puVar8 = fcn.0040fa20(uVar11);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x593680 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455fcf;\n                            fcn.0045c700(uVar11, *(*0x20 + -0x210), iVar21, arg4);\n                        }\ncode_r0x00455e5e:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                        iVar19 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar20 = *(*0x20 + -0x250);\n                        iVar14 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar17 + 0x210) == 0) {\n                        *(*0x20 + -0x2c0) = 0x455d57;\n                        uVar5 = fcn.0040d8c0(0);\n                        uVar11 = *0x53f6c0;\n                        uVar10 = *0x53f6c8;\n                        uVar6 = *0x53f6c0;\n                        if (*0x53f6d0 < *0x53f6c8 + 1) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x455d89;\n                            uVar6 = fcn.00445200(*0x53f6c8);\n                            uVar18 = uVar6;\n                            *0x53f6d0 = uVar10;\n                            if (*0x593680 != 0) {\n                                *(*0x20 + -0x2c0) = 0x455dae;\n                                uVar6 = fcn.0045c5e0(uVar10, iVar13, iVar19, arg4);\n                                uVar18 = *0x53f6c0;\n                            }\n                            *0x53f6c0 = uVar18;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar10 = uVar11;\n                        }\n                        *0x53f6c8 = uVar10 + 1;\n                        if (*0x593680 == 0) {\n                            *(uVar6 + uVar10 * 8) = uVar5;\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(iVar21 + 0x210) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x455dee;\n                            fcn.0045c5e0(uVar10, *0x53f6c8, iVar19, arg4);\n                            iVar21 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x455e05;\n                            fcn.0045c5e0(uVar10, iVar21, iVar19, arg4);\n                        }\n                        iVar13 = *(iVar21 + 0x150);\n                        *(*0x20 + -0x200) = iVar13;\n                        iVar19 = *(iVar21 + 0x158);\n                        *(*0x20 + -0x250) = iVar19;\n                        iVar9 = 0;\n                        while (iVar9 < iVar19) {\n                            *(*0x20 + -600) = iVar9;\n                            iVar2 = *(iVar13 + iVar9 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar19 = iVar2 + *(iVar21 + 0x118);\n                            *(*0x20 + -0x208) = iVar19;\n                            uVar1 = *(iVar19 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x456031;\n                            piVar7 = fcn.0040f6e0(uVar1);\n                            iVar9 = *piVar7;\n                            *(*0x20 + -0x210) = iVar9;\n                            iVar13 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar13;\n                            iVar21 = 0;\n                            while (iVar21 < iVar13) {\n                                *(*0x20 + -0x268) = iVar21;\n                                *(*0x20 + -0x228) = *(iVar9 + iVar21 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x45612f;\n                                fcn.0045cd19();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x456148;\n                                uVar4 = fcn.00449d60();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x45616c;\n                                cVar3 = fcn.004561c0(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x0045605e;\n                                }\n                                iVar19 = *(*0x20 + -0x268);\n                                iVar9 = *(*0x20 + -0x210);\n                                iVar13 = *(*0x20 + -0x260);\n                                iVar21 = iVar19 + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x0045605e:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar11 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x456085;\n                            puVar8 = fcn.0040fa20(uVar11);\n                            if (*0x593680 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x4560b5;\n                                fcn.0045c700(uVar11, *(*0x20 + -0x228), iVar19, arg4);\n                            }\n                            iVar21 = *(*0x20 + -0x1f8);\n                            iVar13 = *(*0x20 + -0x200);\n                            iVar19 = *(*0x20 + -0x250);\n                            iVar9 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar13 = *(*0x20 + -0x1f0);\n                        iVar21 = *(*0x20 + -0x240);\n                        iVar17 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar19 = iVar17;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x4561a5;\n            fcn.0045ca80(0);\n        }\n        *(puVar15 + -8) = 0x4561ab;\n        in_RAX = fcn.0045a3a0();\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 3345
    },
    "004573a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004573a0(void)\n\n{\n    if (*0x593680 != '\\0') {\n        fcn.00403aa0();\n    }\n    fcn.004011e0();\n    return;\n}\n",
        "token_count": 48
    },
    "00457400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457400(ulong arg1)\n\n{\n    if (*0x593680 != '\\0') {\n        fcn.00403aa0();\n    }\n    fcn.004011a0(arg1);\n    return;\n}\n",
        "token_count": 52
    },
    "00457720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457720(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = in_RAX;\n    if (*0x593680 != 0) {\n        fcn.0045c5e0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x53ecf0;\n    }\n    *0x53ecf0 = uVar1;\n    return;\n}\n",
        "token_count": 172
    },
    "00457880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00457880(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4578a9;\n            iVar3 = fcn.0042d220();\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x10) = iVar3 + 0x28;\n            *(*0x20 + -0x38) = 0x4578c5;\n            fcn.0040ac20();\n            iVar3 = *(*0x20 + -0x18);\n            if ((*(iVar3 + 0x20) == 0) || (*(iVar3 + 0x20) == 1)) {\n                if ((*(iVar3 + 0x18) == 0) || (*(iVar3 + 0x18) == 1)) {\n                    *(iVar3 + 8) = *(*0x20 + 8);\n                    *(iVar3 + 0x30) = 0;\n                    uVar4 = *(iVar3 + 0x10);\n                    while( true ) {\n                        if ((uVar4 >> 1 & 1) == 0) {\n                            bVar6 = false;\n                        }\n                        else {\n                            LOCK();\n                            bVar6 = uVar4 == *(iVar3 + 0x10);\n                            if (bVar6) {\n                                *(iVar3 + 0x10) = uVar4 ^ 2;\n                            }\n                            bVar6 = !bVar6;\n                        }\n                        if (!bVar6) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + 1;\n                    *(iVar3 + 0x18) = 0;\n                    *(iVar3 + 0x88) = 0;\n                    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n                    *(iVar3 + 0x20) = 0;\n                    *(iVar3 + 0xe0) = 0;\n                    *(iVar3 + 0xe8) = iVar3;\n                    uVar4 = *(iVar3 + 0x10);\n                    uVar1 = *(iVar3 + 0x30);\n                    if (*(iVar3 + 0x88) < 0) {\n                        uVar1 = *(iVar3 + 0x30) | 4;\n                    }\n                    while( true ) {\n                        LOCK();\n                        if (uVar4 == *(iVar3 + 0x10)) break;\n                        uVar4 = *(iVar3 + 0x10);\n                    }\n                    *(iVar3 + 0x10) = uVar4 & 2 | uVar1;\n                    *(*0x20 + -0x38) = 0x4579a5;\n                    fcn.0040ae40();\n                    *(*0x20 + -0x38) = 0x4579b4;\n                    iVar2 = fcn.0042d3e0();\n                    if (iVar2 != 0) {\n                        *(*0x20 + -0x1c) = iVar2;\n                        *(*0x20 + -0x38) = 0x4579cd;\n                        fcn.0042d0a0();\n                        return 0;\n                    }\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x457a05;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x38) = 0x457a16;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x457a25;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1045
    },
    "00457a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457a40(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x30) != '\\0') {\n                if ((*(in_RAX + 0x20) == 0) || (*(in_RAX + 0x20) == 1)) {\n                    if ((*(in_RAX + 0x18) == 0) || (*(in_RAX + 0x18) == 1)) {\n                        *(*0x20 + -0x20) = 0x457a8d;\n                        fcn.0042d0a0();\n                        return;\n                    }\n                    *(*0x20 + -0x20) = 0x457aa8;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x20) = 0x457ab9;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x20) = 0x457aca;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x457ad5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 419
    },
    "00457ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00457ae0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    int64_t arg1;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint64_t arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            *(*0x20 + -0x38) = 0x457b11;\n            fcn.0040ac20();\n            arg1 = *(*0x20 + 8);\n            if (*(arg1 + 0x30) == '\\0') break;\n            *(*0x20 + -0x38) = 0x457d05;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x457d10;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n    *(arg1 + 0x30) = 1;\n    *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    *(arg1 + 0x90) = *(arg1 + 0x90) + 1;\n    uVar8 = *(arg1 + 0x10);\n    uVar4 = *(arg1 + 0x30);\n    if (*(arg1 + 0x88) < 0) {\n        uVar4 = *(arg1 + 0x30) | 4;\n    }\n    arg3 = uVar4 | 8;\n    if (*(arg1 + 0xe0) < 0) {\n        uVar4 = uVar4 | 8;\n    }\n    while( true ) {\n        LOCK();\n        if (uVar8 == *(arg1 + 0x10)) break;\n        uVar8 = *(arg1 + 0x10);\n    }\n    *(arg1 + 0x10) = uVar8 & 2 | uVar4;\n    do {\n        uVar5 = *(arg1 + 0x18);\n        if (uVar5 == 1) {\n            uVar5 = 0;\n            goto code_r0x00457bbd;\n        }\n        if (uVar5 == 0) {\n            uVar5 = 0;\n            goto code_r0x00457bbd;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x18;\n        uVar7 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar5 == uVar7) * *puVar1;\n    } while (uVar5 != uVar7);\n    if (uVar5 == 2) {\n        uVar5 = 0;\n    }\ncode_r0x00457bbd:\n    do {\n        uVar7 = *(arg1 + 0x20);\n        if (uVar7 == 1) {\n            uVar7 = 0;\n            goto code_r0x00457bee;\n        }\n        if (uVar7 == 0) {\n            uVar7 = 0;\n            goto code_r0x00457bee;\n        }\n        LOCK();\n        puVar1 = arg1 + 0x20;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar7 == uVar2) * *puVar1;\n        if (uVar7 == uVar2) {\n            if (uVar7 == 2) {\n                uVar7 = 0;\n            }\ncode_r0x00457bee:\n            *(*0x20 + -0x18) = uVar5;\n            *(*0x20 + -0x20) = uVar7;\n            if (*(arg1 + 0x58) != 0) {\n                *(*0x20 + -0x38) = 0x457c08;\n                fcn.0044d340();\n                if (*0x593680 == 0) {\n                    arg1 = *(*0x20 + 8);\n                    *(arg1 + 0x58) = 0;\n                }\n                else {\n                    arg1 = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = 0x457c32;\n                    fcn.0045c700(arg1, 0, arg3, in_R9);\n                }\n            }\n            if (*(arg1 + 0xb0) != 0) {\n                *(*0x20 + -0x38) = 0x457c52;\n                fcn.0044d340();\n                if (*0x593680 == 0) {\n                    *(*(*0x20 + 8) + 0xb0) = 0;\n                }\n                else {\n                    *(*0x20 + -0x38) = 0x457c85;\n                    fcn.0045c6e0(0);\n                }\n            }\n            *(*0x20 + -0x38) = 0x457c91;\n            fcn.0040ae40();\n            iVar3 = *0x59345c;\n            if (*(*0x20 + -0x18) != 0) {\n                LOCK();\n                *0x59345c = *0x59345c + -1;\n                *(*0x20 + -0x38) = 0x457cb6;\n                fcn.004360c0(iVar3);\n            }\n            iVar3 = *0x59345c;\n            if (*(*0x20 + -0x20) != 0) {\n                LOCK();\n                *0x59345c = *0x59345c + -1;\n                *(*0x20 + -0x38) = 0x457ce5;\n                fcn.004360c0(iVar3);\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1487
    },
    "00457da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00457da0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t *piVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack40;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.00433640();\n        iVar2 = unaff_R14[6];\n        piVar1 = iVar2 + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        return **(iVar2 + 0xa0);\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar4 = fcn.0043d9e0();\n    if (cVar4 != '\\0') {\n        if (*0x545610 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                fcn.0045a260();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.004379a0(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x53fff8 != '\\0') && (unaff_R14 = fcn.00454980(),  unaff_R14 == '\\0')) {\n            unaff_R14 = fcn.00435f40();\n        }\n        return unaff_R14;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x545610 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar2 + 0x14)))) {\n            iStack40 = 0x4b1128;\n            fcn.0045a260();\n        }\n        fcn.0045c460(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack40;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    piVar5 = fcn.0045a1e0();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return piVar5;\n}\n",
        "token_count": 849
    },
    "00458060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00458060(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x593454 < 2)) || (*0x593450 <= *0x53ffd8 + *0x53ffdc + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00458340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00458340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t *puVar5;\n    ulong *puVar6;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if (*0x53f750 == 0) {\n        iVar3 = fcn.0040d840();\n        if (*0x593680 != 0) {\n            fcn.0045c5e0(param_1, param_2, param_3, param_4);\n            iVar3 = *0x53f750;\n        }\n        *0x53f750 = iVar3;\n        uVar4 = fcn.0040d840();\n        if (*0x593680 != 0) {\n            fcn.0045c5e0(param_1, param_2, param_3, param_4);\n            uVar4 = *0x53f758;\n        }\n        *0x53f758 = uVar4;\n        *0x53f748 = 0xffffffff;\n    }\n    uVar4 = *0x53f758;\n    puVar5 = fcn.00410180(in_RAX);\n    uVar2 = *0x53f748;\n    uVar1 = *puVar5;\n    if (uVar4 == '\\0') {\n        arg1 = *0x53f748;\n        *0x53f748 = *0x53f748 - 1;\n        puVar6 = fcn.0040fa20(arg1);\n        if (*0x593680 == 0) {\n            *puVar6 = in_RAX;\n        }\n        else {\n            fcn.0045c6e0();\n        }\n        puVar5 = fcn.00410320(in_RAX);\n        *puVar5 = uVar2;\n        uVar1 = uVar2;\n    }\n    fcn.0040ae40();\n    return uVar1;\n}\n",
        "token_count": 532
    },
    "00458800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458800(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar8 = 0x38;\n                }\n                else {\n                    iVar8 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar8 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar8 = 0;\n                    while (iVar8 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar8;\n                        *(*0x20 + -0x100) = 0x4588c5;\n                        fcn.0044c800();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar8 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar12 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar12 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar12 << 3;\n                        uVar11 = piVar12 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar8 = 0x38;\n                            }\n                            else {\n                                iVar8 = 0x48;\n                            }\n                            arg1 = *(iVar8 + in_RAX + uVar11);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar8 = 0x38;\n                                }\n                                else {\n                                    iVar8 = 0x48;\n                                }\n                                uVar7 = *(*(iVar8 + in_RAX + uVar11) + 0x17) & 0x1f;\n                                arg1 = uVar7;\n                                cVar6 = uVar7;\n                                if ((cVar6 != '\\r') && (cVar6 != '\\x0e')) {\n                                    if (*0x527380 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x4589fb;\n                                        fcn.0040ac20();\n                                        iVar8 = *0x5933e8;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x458a25;\n                                        ppiVar3 = fcn.0040dcc0(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar8 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x458bbd;\n                                            fcn.0040ae40();\n                                            *(*0x20 + -0x100) = 0x458bc7;\n                                            fcn.0044cec0();\n                                            return;\n                                        }\n                                        iVar8 = *0x5933e8;\n                                        if (*0x5933e8 == 0) {\n                                            *(*0x20 + -0x100) = 0x458a3f;\n                                            iVar8 = fcn.0040d840();\n                                            if (*0x593680 != 0) {\n                                                *(*0x20 + -0x100) = 0x458a5d;\n                                                fcn.0045c5e0(arg1, arg2, arg3, arg4);\n                                                iVar8 = *0x5933e8;\n                                            }\n                                        }\n                                        *0x5933e8 = iVar8;\n                                        bVar13 = *0x5933f0 < 2000;\n                                        if (*0x5933f0 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x458a8f;\n                                            uVar4 = fcn.0045cd30();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar9 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar9;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar13) {\n                                                *(*0x20 + -0xe0) = uVar4;\n                                                if (*0x593680 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x458b2f;\n                                                    fcn.0045d09a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x458b4c;\n                                                    fcn.004117c0(*0x20 + -0x58);\n                                                    uVar9 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar9;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x458b73;\n                                                puVar5 = fcn.0040e100(*0x20 + -0xa8);\n                                                *puVar5 = *(*0x20 + -0xe0);\n                                                *0x5933f0 = *0x5933f0 + 1;\n                                                *(*0x20 + -0x100) = 0x458b90;\n                                                fcn.0040ae40();\n                                                *(*0x20 + -0x100) = 0x458b9a;\n                                                fcn.0044cec0();\n                                                return;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x458be5;\n                                            fcn.0045ca80(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x458bf3;\n                                        fcn.0040ae40();\n                                        *(*0x20 + -0x100) = 0x458c05;\n                                        fcn.00433640();\n                                    }\n                                    *(*0x20 + -0x100) = 0x458c18;\n                                    fcn.00432ec0();\n                                }\n                                *(*0x20 + -0x100) = 0x458c2b;\n                                fcn.00432ec0();\n                            }\n                            *(*0x20 + -0x100) = 0x458c3e;\n                            fcn.00432ec0();\n                        }\n                        *(*0x20 + -0x100) = 0x458c51;\n                        fcn.00432ec0();\n                    }\n                    *(*0x20 + -0x100) = 0x458c59;\n                    fcn.0045cb40(arg1);\n                }\n                *(*0x20 + -0x100) = 0x458c66;\n                fcn.0045cac0(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x4c9ad0;\n            *(*0x20 + -0x100) = 0x458c79;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        puVar10[0x18] = param_1;\n        *(puVar10 + -8) = 0x458c8d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        param_1 = puVar10[0x18];\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2791
    },
    "00458cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00458cc0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uint64_t uStackX8;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [16];\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x593412 == '\\0') {\n        *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x53ec40;\n        *(iVar2 + 0x2c8) = 3;\n        auStack32 = ZEXT816(uStackX8);\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.00403b40();\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043ed20();\n    return;\n}\n",
        "token_count": 449
    },
    "0045c1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045c1c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + 0x28);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.00459440();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x45c229;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + 0x28) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 393
    },
    "0045c460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045c460(ulong noname_0, ulong arg2)\n\n{\n    if (*0x593b6b == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "0045c4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c4a0(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x593410 == '\\0') {\n        uVar1 = unaff_RBX ^ *0x5936c0 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x593980, auVar5 ^ *0x593980);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4ca0a0));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4c9fa0);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x593990, auVar5 ^ *0x593990);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x593990, auVar5 ^ *0x593990);\n                auVar8 = aesenc(auVar5 ^ *0x5939a0, auVar5 ^ *0x5939a0);\n                auVar5 = aesenc(auVar5 ^ *0x5939b0, auVar5 ^ *0x5939b0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x593990, auVar5 ^ *0x593990);\n                auVar8 = aesenc(auVar5 ^ *0x5939a0, auVar5 ^ *0x5939a0);\n                auVar9 = aesenc(auVar5 ^ *0x5939b0, auVar5 ^ *0x5939b0);\n                auVar10 = aesenc(auVar5 ^ *0x5939c0, auVar5 ^ *0x5939c0);\n                auVar11 = aesenc(auVar5 ^ *0x5939d0, auVar5 ^ *0x5939d0);\n                auVar12 = aesenc(auVar5 ^ *0x5939e0, auVar5 ^ *0x5939e0);\n                auVar5 = aesenc(auVar5 ^ *0x5939f0, auVar5 ^ *0x5939f0);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x593990, auVar5 ^ *0x593990);\n            auVar8 = aesenc(auVar5 ^ *0x5939a0, auVar5 ^ *0x5939a0);\n            auVar9 = aesenc(auVar5 ^ *0x5939b0, auVar5 ^ *0x5939b0);\n            auVar10 = aesenc(auVar5 ^ *0x5939c0, auVar5 ^ *0x5939c0);\n            auVar11 = aesenc(auVar5 ^ *0x5939d0, auVar5 ^ *0x5939d0);\n            auVar12 = aesenc(auVar5 ^ *0x5939e0, auVar5 ^ *0x5939e0);\n            auVar5 = aesenc(auVar5 ^ *0x5939f0, auVar5 ^ *0x5939f0);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3965
    },
    "0045c4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c4c0(void)\n\n{\n    uchar (*pauVar1) [16];\n    uchar (*pauVar2) [16];\n    uchar (**in_RAX) [16];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auVar4 [16];\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    \n    if (*0x593410 == '\\0') {\n        while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n            fcn.0045a3a0();\n        }\n        uVar3 = fcn.00409640(in_RAX[1]);\n        return uVar3;\n    }\n    pauVar1 = in_RAX[1];\n    pauVar2 = *in_RAX;\n    auVar4 = pinsrw(ZEXT816(unaff_RBX), pauVar1, 4);\n    auVar4 = pshufhw(auVar4, auVar4, 0);\n    auVar5 = aesenc(auVar4 ^ *0x593980, auVar4 ^ *0x593980);\n    if (pauVar1 < 0x10) {\n        if (pauVar1 == NULL) {\n            auVar4 = aesenc(auVar5, auVar5);\n            return SUB168(auVar4, 0);\n        }\n        if ((pauVar2[1] & 0xff0) == 0) {\n            auVar4 = pshufb(*(*pauVar1 + pauVar2[-1]), *(pauVar1 * 0x10 + 0x4ca0a0));\n        }\n        else {\n            auVar4 = *pauVar2 & *(pauVar1 * 0x10 + 0x4c9fa0);\n        }\n    }\n    else {\n        if (pauVar1 != 0x10) {\n            if (pauVar1 < 0x21) {\n                auVar4 = aesenc(auVar4 ^ *0x593990, auVar4 ^ *0x593990);\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                return SUB168(auVar4, 0) ^ SUB168(auVar5, 0);\n            }\n            if (pauVar1 < 0x41) {\n                auVar6 = aesenc(auVar4 ^ *0x593990, auVar4 ^ *0x593990);\n                auVar7 = aesenc(auVar4 ^ *0x5939a0, auVar4 ^ *0x5939a0);\n                auVar4 = aesenc(auVar4 ^ *0x5939b0, auVar4 ^ *0x5939b0);\n                auVar7 = *(*pauVar1 + pauVar2[-2]) ^ auVar7;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                return SUB168(auVar4, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar5, 0) ^ SUB168(auVar7, 0);\n            }\n            if (pauVar1 <= pe_nt_image_headers64) {\n                auVar6 = aesenc(auVar4 ^ *0x593990, auVar4 ^ *0x593990);\n                auVar7 = aesenc(auVar4 ^ *0x5939a0, auVar4 ^ *0x5939a0);\n                auVar8 = aesenc(auVar4 ^ *0x5939b0, auVar4 ^ *0x5939b0);\n                auVar9 = aesenc(auVar4 ^ *0x5939c0, auVar4 ^ *0x5939c0);\n                auVar10 = aesenc(auVar4 ^ *0x5939d0, auVar4 ^ *0x5939d0);\n                auVar11 = aesenc(auVar4 ^ *0x5939e0, auVar4 ^ *0x5939e0);\n                auVar4 = aesenc(auVar4 ^ *0x5939f0, auVar4 ^ *0x5939f0);\n                auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n                auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n                auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n                auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n                auVar5 = aesenc(*pauVar2 ^ auVar5, *pauVar2 ^ auVar5);\n                auVar6 = aesenc(pauVar2[1] ^ auVar6, pauVar2[1] ^ auVar6);\n                auVar7 = aesenc(pauVar2[2] ^ auVar7, pauVar2[2] ^ auVar7);\n                auVar8 = aesenc(pauVar2[3] ^ auVar8, pauVar2[3] ^ auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar4, auVar4);\n                auVar4 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                       SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n            }\n            auVar6 = aesenc(auVar4 ^ *0x593990, auVar4 ^ *0x593990);\n            auVar7 = aesenc(auVar4 ^ *0x5939a0, auVar4 ^ *0x5939a0);\n            auVar8 = aesenc(auVar4 ^ *0x5939b0, auVar4 ^ *0x5939b0);\n            auVar9 = aesenc(auVar4 ^ *0x5939c0, auVar4 ^ *0x5939c0);\n            auVar10 = aesenc(auVar4 ^ *0x5939d0, auVar4 ^ *0x5939d0);\n            auVar11 = aesenc(auVar4 ^ *0x5939e0, auVar4 ^ *0x5939e0);\n            auVar4 = aesenc(auVar4 ^ *0x5939f0, auVar4 ^ *0x5939f0);\n            auVar5 = *(*pauVar1 + pauVar2[-8]) ^ auVar5;\n            auVar6 = *(*pauVar1 + pauVar2[-7]) ^ auVar6;\n            auVar7 = *(*pauVar1 + pauVar2[-6]) ^ auVar7;\n            auVar8 = *(*pauVar1 + pauVar2[-5]) ^ auVar8;\n            auVar9 = *(*pauVar1 + pauVar2[-4]) ^ auVar9;\n            auVar10 = *(*pauVar1 + pauVar2[-3]) ^ auVar10;\n            auVar11 = *(*pauVar1 + pauVar2[-2]) ^ auVar11;\n            auVar4 = *(*pauVar1 + pauVar2[-1]) ^ auVar4;\n            uVar3 = pauVar1[-1] + 0xf >> 7;\n            do {\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar4 = aesenc(auVar4, auVar4);\n                auVar5 = aesenc(auVar5, *pauVar2);\n                auVar6 = aesenc(auVar6, pauVar2[1]);\n                auVar7 = aesenc(auVar7, pauVar2[2]);\n                auVar8 = aesenc(auVar8, pauVar2[3]);\n                auVar9 = aesenc(auVar9, pauVar2[4]);\n                auVar10 = aesenc(auVar10, pauVar2[5]);\n                auVar11 = aesenc(auVar11, pauVar2[6]);\n                auVar4 = aesenc(auVar4, pauVar2[7]);\n                pauVar2 = pauVar2[8];\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar4, auVar4);\n            auVar4 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar4 = aesenc(auVar4, auVar4);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            return SUB168(auVar4, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^\n                   SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0);\n        }\n        auVar4 = *pauVar2;\n    }\n    auVar4 = aesenc(auVar4 ^ auVar5, auVar4 ^ auVar5);\n    auVar4 = aesenc(auVar4, auVar4);\n    auVar4 = aesenc(auVar4, auVar4);\n    return SUB168(auVar4, 0);\n}\n",
        "token_count": 3244
    },
    "0045c4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c4e0(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x593410 != '\\0') {\n        auVar1 = pinsrd(ZEXT816(unaff_RBX), *in_RAX, 2);\n        auVar1 = aesenc(auVar1, *0x593980);\n        auVar1 = aesenc(auVar1, *0x593990);\n        auVar1 = aesenc(auVar1, *0x5939a0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x5936c0 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d124b) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 292
    },
    "0045c520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.0045c520(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x593410 != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x593980);\n        auVar1 = aesenc(auVar1, *0x593990);\n        auVar1 = aesenc(auVar1, *0x5939a0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x5936c0 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 290
    },
    "0045d100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045d100(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar in_YMM0 [32];\n    uchar auVar7 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        if (unaff_RBX == 0) {\n            return;\n        }\n        if (unaff_RBX < 3) {\n            (*in_RAX)[0] = 0;\n            in_RAX[-1][unaff_RBX + 0x1f] = 0;\n            return;\n        }\n        if (unaff_RBX < 5) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n            return;\n        }\n        if (unaff_RBX < 8) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n            return;\n        }\n        if (unaff_RBX == 8) {\n            **in_RAX = 0;\n            return;\n        }\n        if (unaff_RBX < 0x11) {\n            **in_RAX = 0;\n            *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n            return;\n        }\n        if (unaff_RBX < 0x21) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x41) break;\n        if (unaff_RBX < 0x81) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (unaff_RBX < 0x101) {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n            *puVar1 = in_XMM15_Da;\n            puVar1[1] = in_XMM15_Db;\n            puVar1[2] = in_XMM15_Dc;\n            puVar1[3] = in_XMM15_Dd;\n            return;\n        }\n        if (*0x593b63 == '\\x01') {\n            auVar7 = vpxor_avx2(in_YMM0, in_YMM0);\n            if (0x1ffffff < unaff_RBX) {\n                auVar2 = vmovdqu_avx(auVar7);\n                *in_RAX = auVar2;\n                uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n                pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n                do {\n                    pauVar6 = pauVar5;\n                    uVar4 = uVar3;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    *pauVar6 = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[1] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[2] = auVar2;\n                    auVar2 = vmovntdq_avx(auVar7);\n                    pauVar6[3] = auVar2;\n                    uVar3 = uVar4 - 0x80;\n                    pauVar5 = pauVar6[4];\n                } while (0x7f < uVar4 - 0x80);\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-1] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-2] + uVar4) = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                *(pauVar6[-3] + uVar4) = auVar2;\n                auVar7 = vmovdqu_avx(auVar7);\n                *(pauVar6[-4] + uVar4) = auVar7;\n                vzeroupper_avx();\n                return;\n            }\n            do {\n                pauVar5 = in_RAX;\n                uVar3 = unaff_RBX;\n                auVar2 = vmovdqu_avx(auVar7);\n                *pauVar5 = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[1] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[2] = auVar2;\n                auVar2 = vmovdqu_avx(auVar7);\n                pauVar5[3] = auVar2;\n                unaff_RBX = uVar3 - 0x80;\n                in_RAX = pauVar5[4];\n            } while (0x7f < uVar3 - 0x80);\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-1] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-2] + uVar3) = auVar2;\n            auVar2 = vmovdqu_avx(auVar7);\n            *(pauVar5[-3] + uVar3) = auVar2;\n            auVar7 = vmovdqu_avx(auVar7);\n            *(pauVar5[-4] + uVar3) = auVar7;\n            vzeroupper_avx();\n            return;\n        }\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    **in_RAX = in_XMM15_Da;\n    *(*in_RAX + 4) = in_XMM15_Db;\n    *(*in_RAX + 8) = in_XMM15_Dc;\n    *(*in_RAX + 0xc) = in_XMM15_Dd;\n    *(*in_RAX + 0x10) = in_XMM15_Da;\n    *(*in_RAX + 0x14) = in_XMM15_Db;\n    *(*in_RAX + 0x18) = in_XMM15_Dc;\n    *(*in_RAX + 0x1c) = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n    *puVar1 = in_XMM15_Da;\n    puVar1[1] = in_XMM15_Db;\n    puVar1[2] = in_XMM15_Dc;\n    puVar1[3] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4866
    },
    "0045d3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045d3c0(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x59340f & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x593b66 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13219
    },
    "0045e360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e360(void)\n\n{\n    if (*0x593413 == '\\0') {\n        return;\n    }\n    fcn.0042ed00();\n    return;\n}\n",
        "token_count": 42
    },
    "0045e3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045e3c0(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x593413 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042ed80();\n    return iVar1;\n}\n",
        "token_count": 103
    },
    "0045e660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e660(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x593680 == 0) {\n                *0x53eca8 = 0x45de00;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42eba5;\n                fcn.0045c700(arg1, 0x45de00, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42ec15;\n                    fcn.0042dce0();\n                    *(puVar5 + -0x68) = 0x42ec1a;\n                    fcn.00444500();\n                    *(puVar5 + -0x68) = 0x42ec1f;\n                    fcn.004445a0();\n                    *(puVar5 + -0x68) = 0x42ec25;\n                    fcn.0042e7e0();\n                    *(puVar5 + -0x68) = 0x42ec2c;\n                    *0x593474 = fcn.0042e720();\n                    *(puVar5 + -0x68) = 0x42ec37;\n                    fcn.0042e8a0();\n                    *(puVar5 + -0x68) = 0x42ec3c;\n                    *0x593454 = fcn.0042e600();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_GetSystemInfo;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42ec6e;\n                    fcn.00430980();\n                    *0x593598 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_SetProcessPriorityBoost;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42ecaf;\n                    fcn.00430a00();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x4af999);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42ebf4;\n                    uVar3 = fcn.00456e80(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x593900;\n                *(uVar4 + 0x593900) = uVar3;\n                *0x593428 = *0x593428 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42ecd7;\n            fcn.0045ca80(100);\n        }\n        *(puVar6 + -8) = 0x42ecdd;\n        fcn.0045a3a0();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1155
    },
    "0045e840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436de4)\n\nvoid fcn.0045e840(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x53ffb8 = 10000;\n            iVar2 = 0x52cb00;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x436c9a;\n                fcn.0044a960();\n                iVar2 = *(*(puVar4 + -0x20) + 0x220);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                param_2 = 0x593a00;\n                *(iVar2 * 0x40 + 0x593a08) = 0;\n                *(iVar2 * 0x40 + 0x593a10) = 0;\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                param_2 = 0x594268;\n                *(iVar2 * 0x10 + 0x594268) = 0;\n                *(iVar2 * 0x10 + 0x594270) = 0;\n            }\n            *(puVar4 + -0x58) = 0x436d0b;\n            fcn.0040b5c0();\n            *(puVar4 + -0x58) = 0x436d10;\n            fcn.00436c00();\n            *(puVar4 + -0x58) = 0x436d15;\n            fcn.004039e0();\n            *(puVar4 + -0x58) = 0x436d2a;\n            fcn.0042f160(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x436d45;\n            fcn.00437040(uVar1);\n            *(puVar4 + -0x58) = 0x436d4a;\n            fcn.0044a700();\n            *(puVar4 + -0x58) = 0x436d4f;\n            fcn.00455be0();\n            *(puVar4 + -0x58) = 0x436d54;\n            fcn.0040a1c0();\n            *(puVar4 + -0x58) = 0x436d59;\n            fcn.004487e0();\n            *(puVar4 + -0x58) = 0x436d69;\n            fcn.0042f200();\n            *(puVar4 + -0x58) = 0x436d6e;\n            fcn.00442ee0();\n            *(puVar4 + -0x58) = 0x436d73;\n            fcn.00417240();\n            *(puVar4 + -0x58) = 0x436d85;\n            fcn.0040ac20();\n            *(puVar4 + -0x58) = 0x436d8a;\n            fcn.0045e360();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x53ff88 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x593454;\n            *(puVar4 + -0x58) = 0x436dc5;\n            fcn.004077c0();\n            *(puVar4 + -0x58) = 0x436dca;\n            fcn.004499a0();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x436df3;\n            iVar3 = fcn.0043f380();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x436e0a;\n                fcn.0040ae40();\n                if (1 < *0x5938a0) {\n                    *0x593685 = 1;\n                    *0x593680 = CONCAT31(*0x593681, 1);\n                    *(puVar4 + -0x10) = *0x53f640;\n                    *(puVar4 + -0x28) = *0x53f648;\n                    iVar2 = 0;\n                    arg1 = *0x53f640;\n                    param_2 = *0x53f648;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x436ee5;\n                        fcn.0042cbe0(arg1, iVar2 + 0x1260);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x538218 == 0) {\n                    *0x538218 = 7;\n                    if (*0x593680 == 0) {\n                        *0x538210 = 0x4a712a;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x436e86;\n                        fcn.0045c5e0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x538268 == 1) {\n                    *0x538268 = 0;\n                    if (*0x593680 == 0) {\n                        *0x538260 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x436ebf;\n                        fcn.0045c5e0(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x436f16;\n            fcn.00433640();\n        }\n        *(puVar5 + -8) = 0x436f1c;\n        fcn.0045a3a0();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1632
    },
    "0045e860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045e860(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00438720();\n    fcn.004388c0();\n    return;\n}\n",
        "token_count": 198
    },
    "0045e940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442ce6)\n// WARNING: Removing unreachable block (ram,0x00442ce8)\n// WARNING: Removing unreachable block (ram,0x00442cee)\n// WARNING: Removing unreachable block (ram,0x00442d09)\n// WARNING: Removing unreachable block (ram,0x00442d0f)\n// WARNING: Removing unreachable block (ram,0x00442d11)\n// WARNING: Removing unreachable block (ram,0x00442d17)\n// WARNING: Removing unreachable block (ram,0x00442d2a)\n// WARNING: Removing unreachable block (ram,0x00442d30)\n// WARNING: Removing unreachable block (ram,0x00442d49)\n// WARNING: Removing unreachable block (ram,0x00442d4b)\n// WARNING: Removing unreachable block (ram,0x00442d57)\n// WARNING: Removing unreachable block (ram,0x00442d71)\n// WARNING: Removing unreachable block (ram,0x00442d73)\n// WARNING: Removing unreachable block (ram,0x00442d92)\n// WARNING: Removing unreachable block (ram,0x00442d9c)\n// WARNING: Removing unreachable block (ram,0x00442dad)\n// WARNING: Removing unreachable block (ram,0x00442d54)\n// WARNING: Removing unreachable block (ram,0x00442dbe)\n// WARNING: Removing unreachable block (ram,0x00442dcf)\n// WARNING: Removing unreachable block (ram,0x00442de5)\n// WARNING: Removing unreachable block (ram,0x00442df6)\n// WARNING: Removing unreachable block (ram,0x00442e07)\n\nvoid fcn.0045e940(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0;\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0;\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x442e29;\n                                                fcn.00433640();\n                                            }\n                                            *(puVar8 + -0x48) = 0x442e3a;\n                                            fcn.00433640();\n                                        }\n                                        *(puVar8 + -0x48) = 0x442e4b;\n                                        fcn.00433640();\n                                    }\n                                    *(puVar8 + -0x48) = 0x442e5c;\n                                    fcn.00433640();\n                                }\n                                *(puVar8 + -0x48) = 0x442e6d;\n                                fcn.00433640();\n                            }\n                            *(puVar8 + -0x48) = 0x442e7e;\n                            fcn.00433640();\n                        }\n                        *(puVar8 + -0x48) = 0x442e8f;\n                        fcn.00433640();\n                    }\n                    *(puVar8 + -0x48) = 0x442ea5;\n                    fcn.00433640();\n                }\n                *(puVar8 + -0x48) = 0x442eb6;\n                fcn.00433640();\n            }\n            *(puVar8 + -0x48) = 0x442ec7;\n            fcn.00433640();\n        }\n        *(puVar9 + -8) = 0x442ecd;\n        fcn.0045a3a0();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1694
    },
    "0045ea80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ea80(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x130 && puVar16 + -0x130 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1b0;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x158) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b8) = 0x447c1b;\n                fcn.00434de0();\n                *(puVar16 + -0x1b8) = 0x447c2c;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447c36;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x447c47;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447c54;\n                fcn.00435660();\n                *(puVar16 + -0x1b8) = 0x447c65;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447c72;\n                fcn.00435660();\n                *(puVar16 + -0x1b8) = 0x447c85;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447c92;\n                fcn.00435660();\n                *(puVar16 + -0x1b8) = 0x447ca5;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447cb2;\n                fcn.00435660();\n                *(puVar16 + -0x1b8) = 0x447cb7;\n                fcn.00435040();\n                *(puVar16 + -0x1b8) = 0x447cbc;\n                fcn.00434e60();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b8) = 0x447d25;\n                fcn.00453660(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b8) = 0x447d36;\n                fcn.00433640();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b8) = 0x447d47;\n            fcn.00433640();\n        }\n        *(puVar17 + -8) = 0x447d4d;\n        fcn.0045a3a0();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1b0) = puVar10 + 7;\n            *(puVar16 + -0x1b8) = 0x447274;\n            fcn.0045a1c0();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x180) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b8) = 0x44732e;\n                fcn.00434de0();\n                *(puVar16 + -0x1b8) = 0x44733f;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447349;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x44735a;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447367;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x447378;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447385;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x447396;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x4473a5;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x4473b6;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x4473c5;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x4473d6;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x4473e5;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x4473f6;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447405;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x447416;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447425;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x447436;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447445;\n                fcn.00435540();\n                *(puVar16 + -0x1b8) = 0x447456;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x447465;\n                fcn.00435660();\n                *(puVar16 + -0x1b8) = 0x447476;\n                fcn.004356e0();\n                *(puVar16 + -0x1b8) = 0x44747b;\n                fcn.00434e60();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x180);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00447522:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x168) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b8) = 0x44753a;\n                    iVar9 = fcn.0044b660(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x168);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x447554;\n                        iVar8 = fcn.0044c300();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x168);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x5273b0) && (uVar12 <= *0x5273a8)) {\n                        *(puVar16 + -0x160) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x4475c9;\n                        fcn.004379a0(8);\n                        *(puVar16 + -0x1b8) = 0x4475db;\n                        fcn.00446d60();\n                        *(puVar16 + -0x1b8) = 0x4475f2;\n                        fcn.004379a0(2);\n                        *(puVar16 + -0x1b0) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b8) = 0x447607;\n                        fcn.0045a1c0();\n                        return;\n                    }\n                    if (*0x5273a8 <= *0x5273b0) goto code_r0x0044771b;\n                    *(puVar16 + -0x1b8) = 0x44763d;\n                    fcn.00434de0();\n                    *(puVar16 + -0x1b8) = 0x44764e;\n                    fcn.004356e0();\n                    *(puVar16 + -0x1b8) = 0x44765a;\n                    fcn.004353e0();\n                    *(puVar16 + -0x1b8) = 0x44766b;\n                    fcn.004356e0();\n                    *(puVar16 + -0x1b8) = 0x447670;\n                    fcn.00434e60();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b8) = 0x447694;\n                        fcn.00434de0();\n                        *(puVar16 + -0x1b8) = 0x4476a5;\n                        fcn.004356e0();\n                        *(puVar16 + -0x1b8) = 0x4476af;\n                        fcn.00435540();\n                        *(puVar16 + -0x1b8) = 0x4476c5;\n                        fcn.004356e0();\n                        *(puVar16 + -0x1b8) = 0x4476d2;\n                        fcn.00435540();\n                        *(puVar16 + -0x1b8) = 0x4476e5;\n                        fcn.004356e0();\n                        *(puVar16 + -0x1b8) = 0x4476f2;\n                        fcn.00435540();\n                        *(puVar16 + -0x1b8) = 0x447705;\n                        fcn.004356e0();\n                        *(puVar16 + -0x1b8) = 0x44770a;\n                        fcn.00434e60();\n                        *(puVar16 + -0x1b8) = 0x44771b;\n                        fcn.00433640();\ncode_r0x0044771b:\n                        *(puVar16 + -0x1b8) = 0x447725;\n                        fcn.00434de0();\n                        *(puVar16 + -0x1b8) = 0x447736;\n                        fcn.004356e0();\n                        *(puVar16 + -0x1b8) = 0x447745;\n                        fcn.004353e0();\n                        *(puVar16 + -0x1b8) = 0x447756;\n                        fcn.004356e0();\n                        *(puVar16 + -0x1b8) = 0x44775b;\n                        fcn.00434e60();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b8) = 0x4474ea;\n                            fcn.00447e00();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b8) = 0x44750d;\n                            fcn.0043c9e0(puVar13);\n                        }\n                        *(puVar16 + -0x1b8) = 0x44751a;\n                        fcn.0043c960();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00447522;\n                    }\n                    *(puVar16 + -0x1b8) = 0x447796;\n                    fcn.00433640();\n                }\n                *(puVar16 + -0x1b8) = 0x4477a7;\n                puVar10 = fcn.00433640();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x184) = *(puVar10 + 0x12);\n            *(puVar16 + -0x150) = puVar10[0x13];\n            *(puVar16 + -0x1b8) = 0x4477c5;\n            fcn.00434de0();\n            *(puVar16 + -0x1b8) = 0x4477d6;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x4477e5;\n            fcn.00435660();\n            *(puVar16 + -0x1b8) = 0x4477f6;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x447805;\n            fcn.004354e0();\n            *(puVar16 + -0x1b8) = 0x447816;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x447825;\n            fcn.00435540();\n            *(puVar16 + -0x1b8) = 0x447836;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x44783b;\n            fcn.00434e60();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b8) = 0x447853;\n            fcn.00434de0();\n            *(puVar16 + -0x1b8) = 0x447865;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x44786f;\n            fcn.00435540();\n            *(puVar16 + -0x1b8) = 0x447885;\n            fcn.004356e0();\n            *(puVar16 + -0x1b8) = 0x447892;\n            fcn.00435540();\n            *(puVar16 + -0x1b8) = 0x447897;\n            fcn.00435040();\n            *(puVar16 + -0x1b8) = 0x44789c;\n            fcn.00434e60();\n            *(puVar16 + -0x1b8) = 0x4478ad;\n            fcn.00433640();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b8) = 0x4478be;\n        puVar10 = fcn.00433640();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b8) = 0x447912;\n    iVar9 = fcn.0044b660(uVar15);\n    if (iVar9 != 0) goto code_r0x00447b96;\n    uVar11 = 9;\n    uVar14 = 0x4a7463;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x170) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x178) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = *puVar13;\n        *(puVar16 + -0x110) = puVar13[1];\n        *(puVar16 + -0x118) = *(puVar16 + -0x70);\n        *(puVar16 + -0x120) = *(puVar16 + -0x78);\n        *(puVar16 + -0x128) = *(puVar16 + -0x50);\n        *(puVar16 + -0x130) = puVar13[8];\n        *(puVar16 + -0x138) = puVar13[7];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b8) = 0x4479b9;\n        fcn.00434de0();\n        *(puVar16 + -0x1b8) = 0x4479ca;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x4479dc;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x4479ed;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x4479f7;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447a08;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447a12;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447a25;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447a32;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447a45;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447a52;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447a65;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447a72;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447a85;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447a92;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447aa5;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447ab2;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447ac5;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447ad2;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447ae5;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447aef;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447b05;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447b0f;\n        fcn.00435540();\n        *(puVar16 + -0x1b8) = 0x447b25;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447b32;\n        fcn.00435660();\n        *(puVar16 + -0x1b8) = 0x447b45;\n        fcn.004356e0();\n        *(puVar16 + -0x1b8) = 0x447b4a;\n        fcn.00434e60();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b8) = 0x447b85;\n        fcn.00453660(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b8) = 0x447b96;\n        iVar9 = fcn.00433640();\ncode_r0x00447b96:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b8) = 0x447bab;\n        uVar11 = fcn.0044bde0();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x170) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b8) = 0x447bd1;\n        iVar9 = fcn.0044b180(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x170);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7083
    },
    "004623a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004623a0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    char cVar4;\n    int32_t *in_RAX;\n    ulong *puVar5;\n    ulong uVar6;\n    int64_t *noname_1;\n    int64_t **ppiVar7;\n    uchar *puVar8;\n    int32_t *arg2;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong arg3;\n    ulong uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack0000000000000028;\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    ulong uStack24;\n    char cStack16;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack56 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x593417)) {\n        auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    uVar9 = 0x49c9c0;\n    if (auStack56._0_8_ == 0x49c9c0) {\n        uVar6 = *auStack56._8_8_;\n        cStack16 = *(auStack56._8_8_ + 1);\n    }\n    else {\n        cStack16 = 0;\n        uVar6 = 0;\n    }\n    uStack24 = uVar6;\n    auStack40._0_8_ = unaff_RBX;\n    auStack40._8_8_ = arg1;\n    fcn.0040dcc0(auStack40);\n    if ((uVar6 != '\\0') &&\n       (auStack40._0_8_ = fcn.00462920(uStack0000000000000028),  auStack40._8_8_ = unaff_RDI,  unaff_RDI != '\\0')) {\n        return auStack40._0_8_;\n    }\n    LOCK();\n    if (*in_RAX == 0) {\n        *in_RAX = 1;\n    }\n    else {\n        fcn.00462dc0();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack72 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x593417)) {\n        auStack72 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack72._0_8_ == 0x49c9c0) {\n        uVar6 = *auStack72._8_8_;\n        cVar4 = *(auStack72._8_8_ + 1);\n    }\n    else {\n        cVar4 = '\\0';\n        uVar6 = 0;\n    }\n    arg3 = uVar6;\n    uStack24 = uVar6;\n    cStack16 = cVar4;\n    auStack40._8_8_ = arg1;\n    puVar5 = fcn.0040dcc0(auStack40);\n    uVar3 = *puVar5;\n    if (uVar6 == '\\0') {\n        uVar3 = *(in_RAX + 6);\n        auStack40._8_8_ = arg1;\n        fcn.0040dcc0(auStack40);\n        if (uVar3 == '\\0') {\n            if (cVar4 == '\\0') {\n                fcn.00462b60();\n                cStack16 = '\\x01';\n                uStack24 = uVar6;\n                uVar6 = fcn.0040a460();\n                fcn.00401080(uVar6);\n            }\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar5 = fcn.0040cd00();\n            *puVar5 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (*0x593680 == 0) {\n                puVar5[1] = uStack0000000000000028;\n            }\n            else {\n                fcn.0045c700(unaff_RDI, uStack0000000000000028, arg3, uVar9);\n            }\n            noname_1 = fcn.0040cd00();\n            if (*0x593680 == 0) {\n                *noname_1 = puVar5;\n            }\n            else {\n                fcn.0045c700(uVar6, puVar5, arg3, uVar9);\n            }\n            puVar8 = auStack40;\n            ppiVar7 = fcn.0040e100(puVar8);\n            if (*0x593680 == 0) {\n                *ppiVar7 = noname_1;\n            }\n            else {\n                fcn.0045c700(puVar8, noname_1, arg3, uVar9);\n            }\n        }\n        else {\n            uVar9 = fcn.00462920(uStack0000000000000028);\n            auStack40 = CONCAT88(unaff_RDI, uVar9);\n            fcn.00462a80();\n            unaff_RDI = uVar9;\n        }\n    }\n    else {\n        cVar4 = fcn.00457400(0);\n        if (cVar4 != '\\0') {\n            auStack40 = CONCAT88(arg1, unaff_RBX);\n            puVar8 = auStack40;\n            arg2 = in_RAX;\n            puVar5 = fcn.0040e100(puVar8);\n            if (*0x593680 == 0) {\n                *puVar5 = uVar3;\n            }\n            else {\n                fcn.0045c5e0(puVar8, arg2, arg3, uVar9);\n            }\n        }\n        uVar9 = fcn.00462920(uStack0000000000000028);\n        auStack40 = CONCAT88(unaff_RDI, uVar9);\n        unaff_RDI = uVar9;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.004630c0();\n    }\n    return unaff_RDI;\n}\n",
        "token_count": 1480
    },
    "00462920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00462920(ulong arg1)\n\n{\n    ulong *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    puVar3 = *in_RAX;\n    if (puVar3 == *0x53ed20) {\n        return 0;\n    }\n    if (puVar3 != NULL) {\n        return *puVar3;\n    }\n    puVar3 = fcn.0040cd00();\n    *puVar3 = unaff_RBX;\n    if (*0x593680 == 0) {\n        puVar3[1] = arg1;\n    }\n    else {\n        puVar3 = fcn.0045c700(unaff_RBX, arg1, in_R8, in_R9);\n    }\n    while( true ) {\n        cVar2 = fcn.00457400(puVar3);\n        if (cVar2 != '\\0') {\n            return unaff_RBX;\n        }\n        puVar1 = *in_RAX;\n        if (puVar1 == *0x53ed20) break;\n        if (puVar1 != NULL) {\n            return *puVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "00462a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00462a80(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(in_RAX + 0x20) + 1;\n    *(in_RAX + 0x20) = iVar1;\n    if (*(in_RAX + 0x18) == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = **(in_RAX + 0x18);\n    }\n    if (iVar2 <= iVar1) {\n        arg1 = fcn.0040a460();\n        fcn.00401080(arg1);\n        if (*0x593680 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c6e0(0);\n        }\n        *(in_RAX + 0x20) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00462b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00462b60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_R14;\n    ulong uStack120;\n    ulong uStack112;\n    ulong *puStack104;\n    ulong *puStack96;\n    uchar auStack64 [56];\n    \n    while (auStack64 < *(unaff_R14 + 0x10) || auStack64 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x18) != 0) {\n        return;\n    }\n    uVar5 = 0;\n    uVar3 = fcn.0040d8c0(0);\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x18) = uVar3;\n    }\n    else {\n        fcn.0045c5e0(uVar5, in_RAX, param_3, param_4);\n    }\n    fcn.0045cd2b();\n    fcn.0040e620(&puStack104, in_RAX, param_3, param_4);\n    while (puStack104 != NULL) {\n        uVar3 = *puStack96;\n        uVar5 = *puStack104;\n        uVar1 = puStack104[1];\n        cVar2 = fcn.00462d40();\n        if (cVar2 == '\\0') {\n            uStack120 = uVar5;\n            uStack112 = uVar1;\n            puVar4 = fcn.0040e100(&uStack120);\n            if (*0x593680 == 0) {\n                *puVar4 = uVar3;\n            }\n            else {\n                fcn.0045c6e0(uVar3);\n            }\n        }\n        fcn.0040e8a0();\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00462dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00462dc0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00458060();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.004580e0();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00457d20();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.00458680();\n        }\n        fcn.00458540(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.00458680();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00457d20();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 797
    },
    "004631a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004631a0(void)\n\n{\n    int32_t *in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    bool bVar1;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    code **ppcStack24;\n    code **ppcStack16;\n    \n    while (ppcStack24 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    LOCK();\n    bVar1 = in_RAX[1] == 0;\n    if (bVar1) {\n        in_RAX[1] = 1;\n    }\n    if (!bVar1) {\n        fcn.00462dc0();\n    }\n    auStack56 = CONCAT88(in_RAX + 1, 0x463320);\n    ppcStack16 = auStack56;\n    if (*in_RAX == 0) {\n        auStack40 = CONCAT88(in_RAX, 0x4632e0);\n        ppcStack24 = auStack40;\n        (**unaff_RBX)(in_RAX, unaff_RBX);\n        (**ppcStack24)();\n    }\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 316
    },
    "00463380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463380(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX == 0) {\n        return;\n    }\n    arg1_00 = arg1;\n    piVar1 = fcn.00463700();\n    if (*piVar1 == 0) {\n        *piVar1 = unaff_RBX;\n        if (*0x593680 == 0) {\n            piVar1[1] = arg1;\n        }\n        else {\n            fcn.0045c700(arg1_00, arg1, in_R8, in_R9);\n        }\n        unaff_RBX = 0;\n        arg1 = 0;\n    }\n    if (unaff_RBX != 0) {\n        fcn.00463f60(arg1);\n    }\n    fcn.00458000();\n    return;\n}\n",
        "token_count": 282
    },
    "00463460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463460(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = fcn.00463700();\n    arg1 = *piVar1;\n    *piVar1 = 0;\n    if (*0x593680 == 0) {\n        piVar1[1] = 0;\n    }\n    else {\n        fcn.0045c740(arg1, piVar1[1], param_3, param_4);\n    }\n    if ((arg1 == 0) && (arg1 = fcn.00464140(),  arg1 == 0)) {\n        arg1 = fcn.00463540();\n    }\n    fcn.00458000();\n    if ((arg1 == 0) && (*(in_RAX + 0x20) != NULL)) {\n        (***(in_RAX + 0x20))();\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00463540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463540(void)\n\n{\n    uint64_t uVar1;\n    ulong *in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    ulong uVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar3 = in_RAX[1];\n    uVar5 = *in_RAX;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        if (iVar3 == -1) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (iVar4 + unaff_RBX + 1) % iVar3;\n        }\n        iVar2 = fcn.004641c0(iVar3, iVar2 << 7);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    uVar1 = in_RAX[3];\n    if (uVar1 <= unaff_RBX) {\n        return 0;\n    }\n    iVar4 = in_RAX[2];\n    iVar2 = unaff_RBX * 0x80;\n    iVar3 = *(iVar4 + iVar2);\n    if (iVar3 != 0) {\n        *(iVar4 + iVar2) = 0;\n        if (*0x593680 == 0) {\n            *(iVar4 + 8 + iVar2) = 0;\n        }\n        else {\n            fcn.0045c6e0(0, iVar4, iVar3, *(iVar4 + 8 + iVar2), uVar5);\n        }\n        return iVar3;\n    }\n    iVar4 = 0;\n    while( true ) {\n        if (uVar1 <= iVar4) {\n            in_RAX[3] = 0;\n            return 0;\n        }\n        if (uVar1 == 0xffffffffffffffff) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (iVar4 + unaff_RBX) % uVar1;\n        }\n        iVar3 = fcn.004641c0(uVar1, iVar3 << 7);\n        if (iVar3 != 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 551
    },
    "00463780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463780(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t arg2;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (&ppcStack16 < *(unaff_R14 + 0x10) || &ppcStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    ppcStack16 = NULL;\n    fcn.00458000();\n    LOCK();\n    if (*0x593620 == 0) {\n        *0x593620 = 1;\n    }\n    else {\n        fcn.00462dc0();\n    }\n    auStack32 = CONCAT88(0x593620, 0x463a20);\n    ppcStack16 = auStack32;\n    uVar1 = fcn.00457fe0();\n    uVar3 = *0x53f700;\n    iVar4 = *in_RAX;\n    if (in_RAX[1] < uVar1 || in_RAX[1] == uVar1) {\n        if (iVar4 == 0) {\n            uVar5 = *0x53f708;\n            uVar2 = *0x53f700;\n            if ((*0x53f710 < *0x53f708 + 1) &&\n               (arg1 = *0x53f708,  arg2 = *0x53f708,  uVar2 = fcn.00445200(*0x53f708),  uVar5 = uVar3,  uVar3 = uVar2, \n               *0x53f710 = arg1,  *0x593680 != 0)) {\n                uVar2 = fcn.0045c5e0(arg1, arg2, param_3, param_4);\n                uVar3 = *0x53f700;\n            }\n            *0x53f700 = uVar3;\n            *0x53f708 = uVar5 + 1;\n            if (*0x593680 == 0) {\n                *(uVar2 + uVar5 * 8) = in_RAX;\n            }\n            else {\n                fcn.0045c6e0();\n            }\n        }\n        uVar3 = fcn.00406720();\n        iVar4 = fcn.00445120(uVar3);\n        if (uVar3 != 0) {\n            fcn.004573a0();\n            in_RAX[1] = uVar3;\n            if (uVar1 < uVar3) {\n                (**ppcStack16)();\n                return uVar1 * 0x80 + iVar4;\n            }\n            fcn.0045ca80(uVar3);\n        }\n        fcn.0045ca80(uVar3);\n        fcn.00432340();\n        return 0;\n    }\n    (**ppcStack16)();\n    return uVar1 * 0x80 + iVar4;\n}\n",
        "token_count": 729
    },
    "00463c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00463c20(uint64_t arg1)\n\n{\n    int64_t arg4;\n    int64_t *in_RAX;\n    uint64_t arg1_00;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        arg1_00 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = in_RAX[2];\n            arg4 = in_RAX[1];\n            uVar1 = *in_RAX >> 0x20;\n            if (uVar1 == *in_RAX + arg1_00) {\n                return 0;\n            }\n            uVar2 = uVar1 & arg1_00 - 1;\n            if (uVar2 < arg1_00) {\n                arg2 = uVar2 * 0x10;\n                if (*(arg4 + arg2) == 0) {\n                    iVar4 = 0x497660;\n                    if (unaff_RBX != 0) {\n                        iVar4 = unaff_RBX;\n                    }\n                    *(arg4 + arg2) = iVar4;\n                    uVar2 = 0;\n                    if (unaff_RBX != 0) {\n                        uVar2 = arg1;\n                    }\n                    if (*0x593680 == 0) {\n                        *(arg4 + 8 + arg2) = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x463caf;\n                        in_RAX = fcn.0045c720(arg1, arg2, arg1_00 - 1, arg4);\n                    }\n                    LOCK();\n                    *in_RAX = *in_RAX + 0x100000000;\n                    return 1;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x20) = 0x463cef;\n            in_RAX = fcn.0045ca80(arg1_00);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1_00;\n        *(puVar3 + -8) = 0x463d05;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 723
    },
    "00463d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00463d20(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t arg2;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                iVar5 = uVar1 >> 0x20;\n                if (uVar1 == iVar5) {\n                    return 0;\n                }\n                uVar6 = iVar5 - 1;\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar6 << 0x20 | uVar1 & 0xffffffff));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg2 = *(uVar2 + 8 + iVar4);\n                arg3 = *(uVar2 + iVar4);\n                if ((arg3 == 0x497660) && (arg2 == 0)) {\n                    arg3 = 0;\n                    arg2 = 0;\n                }\n                arg4 = uVar2 + iVar4 + 8;\n                if (*0x593680 == 0) {\n                    *(uVar2 + iVar4) = 0;\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x463dde;\n                    fcn.0045c740(in_RAX, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x463de6;\n                    fcn.0045c740(in_RAX, arg2, arg3, arg4);\n                }\n                return arg3;\n            }\n            *(*0x20 + -0x20) = 0x463e13;\n            in_RAX = fcn.0045ca80(uVar1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x463e1e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 718
    },
    "00463e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00463e40(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t arg2;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar6 = uVar1;\n                if (uVar6 == uVar1 >> 0x20) {\n                    return 0;\n                }\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ (uVar1 & 0xffffffff00000000 | uVar6 + 1));\n            } while (uVar1 != uVar2);\n            uVar1 = in_RAX[2];\n            uVar3 = uVar1 - 1U & uVar6;\n            uVar2 = in_RAX[1];\n            if (uVar3 < uVar1) {\n                iVar4 = uVar3 * 0x10;\n                arg1 = *(uVar2 + 8 + iVar4);\n                arg2 = *(uVar2 + iVar4);\n                if ((arg2 == 0x497660) && (arg1 == 0)) {\n                    arg2 = 0;\n                    arg1 = 0;\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = arg2;\n                if (*0x593680 == 0) {\n                    *(uVar2 + 8 + iVar4) = 0;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x463eff;\n                    fcn.0045c720(arg1, arg2, uVar2 + iVar4, arg4);\n                }\n                *(*0x20 + -0x30) = 0x463f09;\n                fcn.004573a0();\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x30) = 0x463f3a;\n            in_RAX = fcn.0045ca80(uVar1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x463f45;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 716
    },
    "00463f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00463f60(ulong arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t noname_1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t arg1_01;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar4 = *in_RAX;\n    noname_1 = iVar4;\n    if (iVar4 == 0) {\n        noname_1 = fcn.0040cd00();\n        arg1_00 = 8;\n        uVar2 = fcn.00445120(8);\n        *(noname_1 + 0x10) = 8;\n        *(noname_1 + 0x18) = 8;\n        if (*0x593680 == 0) {\n            *(noname_1 + 8) = uVar2;\n            *in_RAX = noname_1;\n        }\n        else {\n            fcn.0045c5e0(arg1_00, iVar4, in_R8, in_R9);\n            fcn.0045c720(arg1_00, iVar4, in_R8, in_R9);\n        }\n        fcn.004573a0(in_RAX);\n    }\n    cVar1 = fcn.00463c20(arg1);\n    if (cVar1 == '\\0') {\n        iVar4 = *(noname_1 + 0x10);\n        iVar3 = fcn.0040cd00();\n        iVar4 = iVar4 * 2;\n        if (0x3fffffff < iVar4) {\n            iVar4 = 0x40000000;\n        }\n        if (*0x593680 == 0) {\n            *(iVar3 + 0x28) = noname_1;\n        }\n        else {\n            fcn.0045c700(iVar4, noname_1, in_R8, in_R9);\n        }\n        arg1_01 = iVar4;\n        uVar2 = fcn.00445120(iVar4);\n        *(iVar3 + 0x10) = iVar4;\n        *(iVar3 + 0x18) = iVar4;\n        if (*0x593680 == 0) {\n            *(iVar3 + 8) = uVar2;\n            *in_RAX = iVar3;\n        }\n        else {\n            fcn.0045c5e0(arg1_01, iVar4, in_R8, in_R9);\n            fcn.0045c720(arg1_01, iVar4, in_R8, in_R9);\n        }\n        fcn.004573a0(noname_1);\n        fcn.00463c20(arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 676
    },
    "00465180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00465180(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong uVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x4651bb;\n            uVar1 = fcn.00465c40();\n            iVar3 = *0x53ebd0;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x004651d6;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x004651d6:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x46520a;\n                pcVar2 = fcn.00410b20(*(*0x20 + 8));\n                unaff_RBX = *0x53f530;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x465292;\n                    uVar1 = fcn.0045ec00();\n                    goto code_r0x00465292;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x465237;\n                fcn.00448bc0(*0x53f538);\n                *(*0x20 + -0xa8) = 0x46523c;\n                iVar3 = fcn.00465c40();\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x00465256;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x00465256:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x46526b;\n                    uVar1 = fcn.0045eba0();\ncode_r0x00465292:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x4652a8;\n                        uVar1 = fcn.00465da0();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x4652c5;\n                        uVar1 = fcn.0040cd00();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x4652d7;\n                        uVar1 = fcn.0040a5e0();\n                        uVar5 = 0x4c9dd8;\n                        puVar4 = *(*0x20 + -0x18);\n                        *puVar4 = 0x4c9dd8;\n                        if (*0x593680 == 0) {\n                            puVar4[1] = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x465305;\n                            fcn.0045c5e0(0x4c9dd8, puVar4, param_3, param_4);\n                        }\n                        puVar4[3] = *(*0x20 + 0x10);\n                        if (*0x593680 == 0) {\n                            puVar4[2] = *(*0x20 + 8);\n                        }\n                        else {\n                            puVar4 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x465339;\n                            fcn.0045c700(uVar5, puVar4, param_3, param_4);\n                        }\n                        uVar5 = 0x4a697f;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x465369;\n                        uVar1 = fcn.00448d40(0xf, puVar4, 0x4a697f, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x4a86fc;\n                        if (*0x593680 == 0) {\n                            *(iVar3 + 0x20) = uVar1;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x46538d;\n                            fcn.0045c5e0(iVar3, puVar4, uVar5, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x4653b7;\n                    puVar4 = fcn.0040cd00();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar4[1] = uVar1;\n                    if (*0x593680 == 0) {\n                        *puVar4 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x4653e9;\n                        puVar4 = fcn.0045c700(uVar1, *(*0x20 + 8), param_3, param_4);\n                    }\n                    puVar4[2] = *(*0x20 + -0x58);\n                    return puVar4;\n                }\n                *(*0x20 + -0xa8) = 0x465428;\n                fcn.0045ca80(0);\n            }\n            *(*0x20 + -0xa8) = 0x465432;\n            in_RAX = fcn.0045ca80(unaff_RBX);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x465445;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1651
    },
    "00465460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00465460(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    ulong noname_2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            for (iVar4 = 0; iVar4 < arg1; iVar4 = iVar4 + 1) {\n                if (*(unaff_RBX + iVar4) == '\\0') {\n                    arg1 = 0;\n                    iVar6 = 0x4c9dd8;\n                    iVar4 = 0;\n                    goto code_r0x00465509;\n                }\n            }\n            *(*0x20 + -0x98) = arg1 + 1;\n            *(*0x20 + -0xc0) = 0x4654e5;\n            iVar4 = fcn.00444fc0(arg1);\n            unaff_RBX = *(*0x20 + 0x10);\n            arg1 = *(*0x20 + -0x98);\n            iVar6 = 0;\n            in_RAX = *(*0x20 + 8);\ncode_r0x00465509:\n            if (iVar6 != 0) {\n                iVar4 = 0;\n                goto code_r0x00465520;\n            }\n            if (arg1 != 0) {\n                iVar6 = 0;\ncode_r0x00465520:\n                if (iVar6 != 0) {\n                    return NULL;\n                }\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0xc0) = 0x465538;\n                iVar6 = iVar4;\n                uVar1 = fcn.0045ec40();\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x90) = iVar4;\n                    *(*0x20 + -0xc0) = 0x465556;\n                    uVar2 = fcn.00465da0();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar4;\n                    *(*0x20 + -0xc0) = 0x46556c;\n                    uVar2 = fcn.0040cd00();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xc0) = 0x46557b;\n                    uVar2 = fcn.0040a5e0();\n                    uVar1 = 0x4c9dd8;\n                    puVar3 = *(*0x20 + -0x78);\n                    *puVar3 = 0x4c9dd8;\n                    if (*0x593680 == 0) {\n                        puVar3[1] = uVar2;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = 0x4655a5;\n                        fcn.0045c5e0(0x4c9dd8, puVar3, iVar6, in_R9);\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar3[3] = uVar2;\n                    if (*0x593680 == 0) {\n                        noname_2 = *(*0x20 + 0x10);\n                        puVar3[2] = noname_2;\n                    }\n                    else {\n                        noname_2 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xc0) = 0x4655d9;\n                        fcn.0045c760(uVar1, puVar3, noname_2, in_R9);\n                    }\n                    *(*0x20 + -200) = unaff_RBP;\n                    *(*0x20 + -0xc0) = 0x4655f1;\n                    fcn.0045cd2b();\n                    *(*0x20 + -0x68) = 0x4a86ed;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = noname_2;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x4a8366;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x4a697f;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xc0) = 0x465691;\n                    uVar1 = fcn.00448920(6);\n                    iVar4 = *(*0x20 + -0x78);\n                    *(iVar4 + 0x28) = *0x20 + -0x68;\n                    if (*0x593680 == 0) {\n                        *(iVar4 + 0x20) = uVar1;\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = 0x4656b2;\n                        fcn.0045c5e0(iVar4, uVar2, noname_2, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar1;\n                *(*0x20 + -0xc0) = 0x4656dc;\n                puVar3 = fcn.0040cd00();\n                if (*0x593680 == 0) {\n                    *puVar3 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xc0) = 0x465705;\n                    puVar3 = fcn.0045c700(uVar2, *(*0x20 + 8), iVar6, in_R9);\n                }\n                puVar3[2] = *(*0x20 + 0x18);\n                if (*0x593680 == 0) {\n                    puVar3[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xc0) = 0x465739;\n                    puVar3 = fcn.0045c700(uVar2, *(*0x20 + 0x10), iVar6, in_R9);\n                }\n                puVar3[3] = *(*0x20 + -0x88);\n                return puVar3;\n            }\n            *(*0x20 + -0xc0) = 0x465778;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x46578d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1874
    },
    "00465860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00465860(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00462dc0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x4659c0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.00465180();\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.004573a0(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 352
    },
    "00465a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00465a20(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00462dc0();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x465be0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.00465860();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.00465460(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.004573a0(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 394
    },
    "0046c840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046c840(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 800) != 0) {\n        if (unaff_RBX < 1) {\n            if (unaff_RBX < 0) {\n                for (; unaff_RBX < -0x3c; unaff_RBX = unaff_RBX + 0x3c) {\n                    fcn.0046c420();\n                }\n                fcn.0046c420();\n            }\n        }\n        else {\n            for (; 0x3c < unaff_RBX; unaff_RBX = unaff_RBX + -0x3c) {\n                fcn.0046c620();\n            }\n            fcn.0046c620();\n        }\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0046c900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046c900(void)\n\n{\n    code *pcVar1;\n    uchar *in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    bool bVar3;\n    \n    if ((unaff_RBX < 0) || (*(in_RAX + 800) <= unaff_RBX)) {\n        return;\n    }\n    if (799 < unaff_RBX) {\n        fcn.0045ca80(800);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((in_RAX[unaff_RBX] == 0x35) && (*(in_RAX + 800) == unaff_RBX + 1)) {\n        if (in_RAX[0x331] != '\\0') goto code_r0x0046c971;\n        if (unaff_RBX < 1) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = in_RAX[unaff_RBX - 1] - 0x30 & 1;\n        }\n    }\n    else {\n        bVar3 = 0x34 < in_RAX[unaff_RBX];\n    }\n    if (bVar3 == false) {\n        *(in_RAX + 800) = unaff_RBX;\n        while (iVar2 = *(in_RAX + 800),  0 < iVar2) {\n            if (799 < iVar2 - 1U) {\n                iVar2 = 800;\n                in_RAX = fcn.0045ca80(800);\n                goto code_r0x0046c9de;\n            }\n            if (in_RAX[iVar2 + -1] != '0') break;\n            *(in_RAX + 800) = iVar2 - 1U;\n        }\n        if (iVar2 != 0) {\n            return;\n        }\n        *(in_RAX + 0x328) = 0;\n        return;\n    }\ncode_r0x0046c971:\n    iVar2 = unaff_RBX - 1;\n    while( true ) {\n        if (iVar2 < 0) {\n            *in_RAX = 0x31;\n            *(in_RAX + 800) = 1;\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + 1;\n            return;\n        }\n        if (in_RAX[iVar2] < 0x39) break;\ncode_r0x0046c9de:\n        iVar2 = iVar2 + -1;\n    }\n    in_RAX[iVar2] = in_RAX[iVar2] + 1;\n    *(in_RAX + 800) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 601
    },
    "0046ca40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0046ca40(ulong arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint64_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint8_t uVar6;\n    uint32_t unaff_EDI;\n    uint64_t *arg4;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    uint64_t uVar11;\n    bool bVar12;\n    uint in_XMM0_Da;\n    uint extraout_XMM0_Da;\n    uint in_XMM0_Db;\n    uint extraout_XMM0_Db;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar6 = unaff_EDI;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb0 && *0x20 + -0xb0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x130;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == 0x20) {\n                uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n                arg4 = 0x527980;\n                goto code_r0x0046ca9f;\n            }\n            if (arg3 == 0x40) break;\n            unaff_RBX = 0x4c9bd0;\n            *(*0x20 + -0x138) = 0x46d0dd;\n            in_RAX = fcn.00432ec0();\n            in_XMM0_Da = extraout_XMM0_Da;\n            in_XMM0_Db = extraout_XMM0_Db;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        puVar5[0x28] = uVar6;\n        *(puVar5 + 0x30) = unaff_RSI;\n        *(puVar5 + 0x38) = arg3;\n        *(puVar5 + -8) = 0x46d107;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        in_XMM0_Da = *(puVar5 + 0x20);\n        in_XMM0_Db = *(puVar5 + 0x20) >> 0x20;\n        unaff_EDI = puVar5[0x28];\n        unaff_RSI = *(puVar5 + 0x30);\n        arg3 = *(puVar5 + 0x38);\n        *0x20 = puVar5;\n    } while( true );\n    uVar10 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    arg4 = 0x5279a0;\ncode_r0x0046ca9f:\n    *(*0x20 + -0xa8) = uVar10;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    uVar8 = *arg4;\n    uVar1 = arg4[1];\n    uVar4 = -(uVar1 + uVar8 < 0x40);\n    *(*0x20 + -0x90) = -(uVar1 < 0x40);\n    *(*0x20 + -0x98) = -(uVar8 < 0x40);\n    uVar7 = uVar10 >> (uVar1 + uVar8 & 0x3f);\n    uVar1 = (*(*0x20 + -0x90) & 1 << (uVar1 & 0x3f)) - 1;\n    uVar11 = uVar10 >> (uVar8 & 0x3f) & -(uVar8 < 0x40) & uVar1;\n    uVar8 = 1 << (uVar8 & 0x3f) & *(*0x20 + -0x98);\n    uVar10 = uVar8 - 1 & *(*0x20 + -0xa8);\n    if (uVar11 == uVar1) {\n        if (uVar10 == 0) {\n            if ((uVar4 & uVar7) == 0) {\n                iVar2 = 4;\n                uVar3 = 0x4a6b23;\n            }\n            else {\n                iVar2 = 4;\n                uVar3 = 0x4a6b27;\n            }\n        }\n        else {\n            iVar2 = 3;\n            uVar3 = 0x4a6a9f;\n        }\n        *(*0x20 + -0x90) = unaff_RBX + iVar2;\n        uVar10 = *(*0x20 + 0x18);\n        if (*(*0x20 + 0x18) < unaff_RBX + iVar2) {\n            *(*0x20 + -200) = iVar2;\n            *(*0x20 + -0x50) = uVar3;\n            *(*0x20 + -0x138) = 0x46cbbd;\n            in_RAX = fcn.00445200(unaff_RBX);\n            iVar2 = *(*0x20 + -200);\n            uVar10 = unaff_RBX;\n        }\n        *(*0x20 + -0xa0) = uVar10;\n        *(*0x20 + -0x40) = in_RAX;\n        *(*0x20 + -0x138) = 0x46cbf4;\n        fcn.0045d3c0(iVar2);\n        return *(*0x20 + -0x40);\n    }\n    if (uVar11 == 0) {\n        uVar11 = 1;\n    }\n    else {\n        uVar10 = uVar10 | uVar8;\n    }\n    bVar12 = (uVar4 & uVar7) != 0;\n    uVar8 = bVar12;\n    uVar4 = uVar1 & 0xffffffffffffff00 | uVar8;\n    iVar2 = uVar11 + arg4[2];\n    if (uVar6 == 0x62) {\n        *(*0x20 + -0x138) = 0x46d0ba;\n        uVar3 = fcn.0046e5a0(*(*0x20 + 0x18), uVar4, iVar2, arg4);\n        return uVar3;\n    }\n    if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n        *(*0x20 + -0x138) = 0x46cc76;\n        uVar3 = fcn.0046e760(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    if (*0x527281 == '\\0') {\n        *(*0x20 + -0x138) = 0x46d095;\n        uVar3 = fcn.0046d140(*(*0x20 + 0x18), unaff_EDI, uVar1 & 0xffffff00 | uVar8, uVar10);\n        return uVar3;\n    }\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0xc9) = bVar12;\n    *(*0x20 + 0x30) = unaff_RSI;\n    *(*0x20 + 0x28) = uVar6;\n    *(*0x20 + -0x38) = in_XMM15;\n    *(*0x20 + -0x28) = in_XMM15;\n    *(*0x20 + -0x18) = in_XMM15;\n    if (-1 < unaff_RSI) {\n        if (uVar6 == 0x66) {\n            bVar12 = false;\n        }\n        else {\n            iVar9 = unaff_RSI;\n            if (uVar6 < 0x48) {\n                if (uVar6 == 0x45) {\ncode_r0x0046cd06:\n                    iVar9 = unaff_RSI + 1;\n                }\n                else if (uVar6 == 0x47) {\ncode_r0x0046cd1c:\n                    if (unaff_RSI == 0) {\n                        unaff_RSI = 1;\n                        iVar9 = unaff_RSI;\n                    }\n                }\n            }\n            else {\n                if (uVar6 == 0x65) goto code_r0x0046cd06;\n                if (uVar6 == 0x67) goto code_r0x0046cd1c;\n            }\n            *(*0x20 + -0x48) = arg4;\n            *(*0x20 + -0xb8) = iVar2;\n            *(*0x20 + -0xc0) = uVar10;\n            *(*0x20 + -0x90) = unaff_RSI;\n            *(*0x20 + -0x88) = in_XMM15;\n            *(*0x20 + -0x80) = in_XMM15;\n            if ((arg3 == 0x20) && (iVar9 < 10)) {\n                *(*0x20 + -0x38) = *0x20 + -0x88;\n                *(*0x20 + -0x30) = 0x18;\n                *(*0x20 + -0x28) = 0x18;\n                uVar10 = *arg4;\n                *(*0x20 + -0x138) = 0x46cdbc;\n                fcn.0046ef20(iVar2 - uVar10, uVar10, 0x20);\n                uVar4 = *(*0x20 + -0xc9);\n                unaff_RSI = *(*0x20 + -0x90);\n                unaff_EDI = *(*0x20 + 0x28);\n                uVar10 = *(*0x20 + -0xc0);\n                bVar12 = true;\n            }\n            else {\n                if (iVar9 < 0x13) {\n                    *(*0x20 + -0xb0) = iVar9;\n                    *(*0x20 + -0x38) = *0x20 + -0x88;\n                    *(*0x20 + -0x30) = 0x18;\n                    *(*0x20 + -0x28) = 0x18;\n                    uVar10 = *arg4;\n                    *(*0x20 + -0x138) = 0x46ce5c;\n                    fcn.0046f1c0(iVar2 - uVar10, uVar10, arg3);\n                    iVar9 = *(*0x20 + -0xb0);\n                    uVar4 = *(*0x20 + -0xc9);\n                    unaff_RSI = *(*0x20 + -0x90);\n                    unaff_EDI = *(*0x20 + 0x28);\n                    uVar10 = *(*0x20 + -0xc0);\n                }\n                bVar12 = iVar9 < 0x13;\n            }\n        }\n        if (!bVar12) {\n            *(*0x20 + -0x138) = 0x46cee5;\n            uVar3 = fcn.0046d140(*(*0x20 + 0x18), unaff_EDI, uVar4 & 0xffffffff, uVar10);\n            return uVar3;\n        }\n        goto code_r0x0046d023;\n    }\n    *(*0x20 + -0x70) = in_XMM15;\n    *(*0x20 + -0x60) = in_XMM15;\n    *(*0x20 + -0x38) = *0x20 + -0x70;\n    *(*0x20 + -0x30) = 0x20;\n    *(*0x20 + -0x28) = 0x20;\n    uVar10 = *arg4;\n    *(*0x20 + -0x138) = 0x46cf4b;\n    fcn.0046f740(iVar2 - uVar10, uVar10);\n    uVar6 = *(*0x20 + 0x28);\n    if (uVar6 < 0x48) {\n        if (uVar6 == 0x45) {\ncode_r0x0046cf8f:\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) + -1) {\n                unaff_RSI = *(*0x20 + -0x20) + -1;\n            }\n        }\n        else if (uVar6 == 0x47) {\ncode_r0x0046cff3:\n            unaff_RSI = *(*0x20 + -0x20);\n        }\n        else {\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    else {\n        if (uVar6 == 0x65) goto code_r0x0046cf8f;\n        if (uVar6 == 0x66) {\n            unaff_RSI = 0;\n            if (0 < *(*0x20 + -0x20) - *(*0x20 + -0x18)) {\n                unaff_RSI = *(*0x20 + -0x20) - *(*0x20 + -0x18);\n            }\n        }\n        else {\n            if (uVar6 == 0x67) goto code_r0x0046cff3;\n            unaff_RSI = *(*0x20 + 0x30);\n        }\n    }\n    uVar4 = *(*0x20 + -0xc9);\ncode_r0x0046d023:\n    *(*0x20 + -0x130) = *(*0x20 + -0x38);\n    *(*0x20 + -300) = *(*0x20 + -0x34);\n    *(*0x20 + -0x128) = *(*0x20 + -0x30);\n    *(*0x20 + -0x124) = *(*0x20 + -0x2c);\n    *(*0x20 + -0x120) = *(*0x20 + -0x28);\n    *(*0x20 + -0x11c) = *(*0x20 + -0x24);\n    *(*0x20 + -0x118) = *(*0x20 + -0x20);\n    *(*0x20 + -0x114) = *(*0x20 + -0x1c);\n    *(*0x20 + -0x110) = *(*0x20 + -0x18);\n    *(*0x20 + -0x10c) = *(*0x20 + -0x14);\n    *(*0x20 + -0x108) = *(*0x20 + -0x10);\n    *(*0x20 + -0x104) = *(*0x20 + -0xc);\n    *(*0x20 + -0x138) = 0x46d065;\n    uVar3 = fcn.0046d560(*(*0x20 + 0x18), uVar4, unaff_RSI);\n    return uVar3;\n}\n",
        "token_count": 3547
    },
    "0046d7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046d7e0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    ulong unaff_RBP;\n    int64_t iVar10;\n    int64_t *unaff_RDI;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    int64_t unaff_R14;\n    uint8_t uVar14;\n    bool bVar15;\n    uchar in_XMM15 [16];\n    \ncode_r0x0046d7e0:\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x618 && *0x20 + -0x618 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x698;\n        *(*0x20 + -8) = unaff_RBP;\n        if (unaff_RBX == 0) {\n            *(in_RAX + 800) = 0;\n            return;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        iVar7 = unaff_RDI[2];\n        *(*0x20 + -0x688) = iVar7 + 1;\n        if ((iVar7 + 1 < arg1) &&\n           (iVar10 = *(in_RAX + 0x328) - *(in_RAX + 800),  iVar5 = (arg1 - *unaff_RDI) * 100, \n           iVar7 = iVar5 + iVar10 * -0x14c,  iVar7 == 0 || SBORROW8(iVar5, iVar10 * 0x14c) != iVar7 < 0)) {\n            return;\n        }\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x340) = in_XMM15;\n        *(*0x20 + -0x6a8) = *0x20 + -8;\n        *(*0x20 + -0x6a0) = 0x46d89b;\n        fcn.0045cc29();\n        uVar2 = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x46d8b7;\n        fcn.0046c2e0(unaff_RBX * 2 + 1);\n        *(*0x20 + -0x6a0) = 0x46d8de;\n        fcn.0046c840();\n        if ((1 << (**(*0x20 + 0x20) & 0x3f) & -(**(*0x20 + 0x20) < 0x40)) < *(*0x20 + 0x10)) {\n            iVar7 = *(*0x20 + 0x18);\n        }\n        else {\n            iVar7 = *(*0x20 + 0x18);\n            if (iVar7 != *(*0x20 + -0x688)) {\n                iVar7 = iVar7 + -1;\n            }\n        }\n        *(*0x20 + -0x680) = iVar7;\n        *(*0x20 + -0x678) = in_XMM15;\n        *(*0x20 + -0x6a8) = uVar2;\n        *(*0x20 + -0x6a0) = 0x46d96f;\n        fcn.0045cc29();\n        unaff_RBP = *(*0x20 + -0x6a8);\n        *(*0x20 + -0x6a0) = 0x46d985;\n        fcn.0046c2e0();\n        iVar7 = *(*0x20 + -0x680);\n        iVar5 = **(*0x20 + 0x20);\n        *(*0x20 + -0x6a0) = 0x46d9a5;\n        fcn.0046c840();\n        puVar3 = *(*0x20 + 8);\n        unaff_RDI = NULL;\n        uVar6 = 0;\n        unaff_RBX = (iVar7 - iVar5) - 1;\n        do {\n            iVar7 = *(*0x20 + -0x18);\n            iVar5 = *(puVar3 + 0x328);\n            uVar8 = unaff_RDI + (iVar5 - iVar7);\n            iVar10 = *(puVar3 + 800);\n            if (iVar10 <= uVar8) {\n                return;\n            }\n            uVar1 = unaff_RDI + (*(*0x20 + -0x350) - iVar7);\n            if ((uVar1 < 0) || (*(*0x20 + -0x358) == uVar1 || *(*0x20 + -0x358) < uVar1)) {\n                uVar11 = 0x30;\n            }\n            else {\n                if (799 < uVar1) goto code_r0x0046dc9f;\n                uVar11 = *(*0x20 + (uVar1 - 0x678));\n            }\n            if (uVar8 < 0) {\n                uVar13 = 0x30;\n            }\n            else {\n                if (799 < uVar8) goto code_r0x0046dc92;\n                uVar13 = puVar3[uVar8];\n            }\n            if (unaff_RDI < *(*0x20 + -0x20)) {\n                if (0x31f < unaff_RDI) goto code_r0x0046dc85;\n                uVar14 = (*0x20 + -0x340)[unaff_RDI];\n            }\n            else {\n                uVar14 = 0x30;\n            }\n            if (uVar11 == uVar13) {\n                uVar12 = *(*0x20 + 0x10);\n                if ((*(*0x20 + 0x10) & 1) == 0) {\n                    bVar15 = *(*0x20 + -0x358) == unaff_RDI + (*(*0x20 + -0x350) - iVar7) + 1;\n                }\n                else {\n                    bVar15 = false;\n                }\n            }\n            else {\n                uVar12 = *(*0x20 + 0x10);\n                bVar15 = true;\n            }\n            if (uVar6 == 0) {\n                if (uVar13 + 1 < uVar14) {\n                    uVar6 = 2;\n                }\n                else {\n                    if (uVar14 == uVar13) goto code_r0x0046daf3;\n                    uVar6 = 1;\n                }\n            }\n            else {\ncode_r0x0046daf3:\n                if ((uVar6 == 1) && ((uVar13 != 0x39 || (uVar14 != 0x30)))) {\n                    uVar6 = 2;\n                }\n            }\n            if (uVar6 == 0) {\n                bVar4 = false;\n            }\n            else if (((uVar12 & 1) == 0) || (1 < uVar6)) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = unaff_RDI + 1 < *(*0x20 + -0x20);\n            }\n            if (bVar15) {\n                if (bVar4) {\n                    *(*0x20 + -0x6a0) = 0x46db8f;\n                    fcn.0046c900();\n                    return;\n                }\n                if (bVar15) goto code_r0x0046db50;\n            }\n            if (bVar4) {\n                iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n                if (iVar7 < 0) {\n                    return;\n                }\n                if (iVar7 < iVar10) {\n                    while( true ) {\n                        if (uVar8 < 0) {\n                            *puVar3 = 0x31;\n                            *(puVar3 + 800) = 1;\n                            *(puVar3 + 0x328) = *(puVar3 + 0x328) + 1;\n                            return;\n                        }\n                        if (799 < uVar8) break;\n                        if (puVar3[uVar8] < 0x39) {\n                            puVar3[uVar8] = puVar3[uVar8] + 1;\n                            *(puVar3 + 800) = uVar8 + 1;\n                            return;\n                        }\n                        uVar8 = uVar8 - 1;\n                    }\n                    *(*0x20 + -0x6a0) = 0x46dc29;\n                    fcn.0045ca80(800);\n                    return;\n                }\n                return;\n            }\n            unaff_RDI = unaff_RDI + 1;\n            unaff_RBX = uVar8;\n        } while( true );\n    }\n    goto code_r0x0046dcad;\ncode_r0x0046db50:\n    iVar7 = unaff_RDI + (iVar5 - iVar7) + 1;\n    if (iVar7 < 0) {\n        return;\n    }\n    if (iVar10 <= iVar7) {\n        return;\n    }\n    *(puVar3 + 800) = iVar7;\n    do {\n        iVar7 = *(puVar3 + 800);\n        if (iVar7 < 1) {\ncode_r0x0046dc68:\n            if (iVar7 != 0) {\n                return;\n            }\n            *(puVar3 + 0x328) = 0;\n            return;\n        }\n        if (799 < iVar7 - 1U) break;\n        uVar8 = puVar3[iVar7 + -1];\n        if (puVar3[iVar7 + -1] != 0x30) goto code_r0x0046dc68;\n        *(puVar3 + 800) = iVar7 - 1U;\n    } while( true );\n    *(*0x20 + -0x6a0) = 0x46dc85;\n    fcn.0045ca80(800);\n    unaff_RBX = uVar8;\ncode_r0x0046dc85:\n    *(*0x20 + -0x6a0) = 0x46dc92;\n    fcn.0045ca80(800);\ncode_r0x0046dc92:\n    *(*0x20 + -0x6a0) = 0x46dc9f;\n    fcn.0045ca80(800);\ncode_r0x0046dc9f:\n    arg1 = 800;\n    *(*0x20 + -0x6a0) = 0x46dcac;\n    in_RAX = fcn.0045ca80(800);\ncode_r0x0046dcad:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + 0x18) = arg1;\n    *(puVar9 + 0x20) = unaff_RDI;\n    *(puVar9 + -8) = 0x46dcc6;\n    fcn.0045a3a0();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    arg1 = *(puVar9 + 0x18);\n    unaff_RDI = *(puVar9 + 0x20);\n    *0x20 = puVar9;\n    goto code_r0x0046d7e0;\n}\n",
        "token_count": 2652
    },
    "0046dce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0046dce0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uchar in_R8B;\n    uchar uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        cVar8 = unaff_RDI;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = in_RAX;\n            *(*0x20 + 0x58) = unaff_RSI;\n            *(*0x20 + 0x60) = in_R8B;\n            uVar5 = unaff_RBX;\n            if (cVar8 != '\\0') {\n                uVar5 = unaff_RBX + 1;\n                uVar2 = in_RAX;\n                uVar7 = arg1;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar5) {\n                    *(*0x20 + 0x40) = unaff_RBX;\n                    *(*0x20 + -0x90) = 0x46dd4e;\n                    uVar2 = fcn.00445200(unaff_RBX);\n                    uVar5 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar7 = unaff_RBX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar2 + uVar6) = 0x2d;\n                in_RAX = uVar2;\n                arg1 = uVar7;\n                unaff_RBX = uVar6;\n            }\n            cVar8 = unaff_RDI;\n            if (*(*0x20 + 0x20) == 0) {\n                uVar13 = 0x30;\ncode_r0x0046dda4:\n                uVar6 = uVar5 + 1;\n                uVar3 = in_RAX;\n                uVar7 = arg1;\n                uVar2 = uVar5;\n                if (arg1 < uVar6) {\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x42) = uVar13;\n                    *(*0x20 + -0x90) = 0x46ddcf;\n                    uVar3 = fcn.00445200(uVar5);\n                    uVar6 = in_RAX + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar13 = *(*0x20 + -0x42);\n                    uVar7 = uVar5;\n                    unaff_RBX = in_RAX;\n                    unaff_RDI = arg1;\n                }\n                *(uVar3 + uVar2) = uVar13;\n                uVar5 = uVar6;\n                if (unaff_RSI < 1) goto code_r0x0046df2f;\n                uVar5 = uVar6 + 1;\n                uVar4 = uVar3;\n                uVar1 = uVar7;\n                uVar2 = uVar6;\n                if (uVar7 < uVar5) {\n                    *(*0x20 + -0x20) = uVar6;\n                    *(*0x20 + -0x90) = 0x46de25;\n                    uVar4 = fcn.00445200(uVar6);\n                    uVar5 = uVar3 + 1;\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar1 = uVar6;\n                    unaff_RBX = uVar3;\n                    unaff_RDI = uVar7;\n                }\n                uVar7 = uVar1;\n                cVar8 = unaff_RDI;\n                *(uVar4 + uVar2) = 0x2e;\n                uVar2 = unaff_RSI + 1U;\n                if (*(*0x20 + 0x20) < unaff_RSI + 1U) {\n                    uVar2 = *(*0x20 + 0x20);\n                }\n                if (uVar2 < 2) {\n                    iVar9 = 1;\n                    uVar3 = uVar4;\n                    goto code_r0x0046e180;\n                }\n                uVar3 = *(*0x20 + 0x18);\n                uVar6 = *(*0x20 + 8);\n                if (uVar2 <= uVar3) {\n                    *(*0x20 + -0x40) = uVar2;\n                    uVar1 = (uVar2 + uVar5) - 1;\n                    *(*0x20 + -0x18) = uVar1;\n                    if (uVar7 < uVar1) {\n                        *(*0x20 + -0x28) = uVar5;\n                        *(*0x20 + -0x10) = (-(uVar3 - 1) >> 0x3f & 1) + uVar6;\n                        *(*0x20 + -0x90) = 0x46ded4;\n                        uVar4 = fcn.00445200(uVar5);\n                        uVar2 = *(*0x20 + -0x40);\n                        uVar7 = uVar5;\n                    }\n                    *(*0x20 + -0x20) = uVar7;\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x90) = 0x46df05;\n                    fcn.0045d3c0(uVar2 - 1);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    in_R8B = *(*0x20 + 0x60);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar7 = *(*0x20 + -0x20);\n                    uVar5 = *(*0x20 + -0x18);\n                    uVar3 = *(*0x20 + -0x10);\ncode_r0x0046e180:\n                    for (; iVar9 <= unaff_RSI; iVar9 = iVar9 + 1) {\n                        uVar2 = uVar3;\n                        uVar6 = uVar5;\n                        uVar4 = uVar5 + 1;\n                        if (uVar7 < uVar5 + 1) {\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x30) = uVar5;\n                            *(*0x20 + -0x90) = 0x46e1b0;\n                            uVar2 = fcn.00445200(uVar5);\n                            iVar9 = *(*0x20 + -0x40);\n                            unaff_RSI = *(*0x20 + 0x58);\n                            in_R8B = *(*0x20 + 0x60);\n                            uVar6 = *(*0x20 + -0x30);\n                            uVar7 = uVar5;\n                            uVar4 = uVar3 + 1;\n                        }\n                        uVar5 = uVar4;\n                        *(uVar2 + uVar6) = 0x30;\n                        uVar3 = uVar2;\n                    }\ncode_r0x0046df2f:\n                    uVar6 = uVar5 + 1;\n                    uVar4 = uVar3;\n                    uVar2 = uVar5;\n                    if (uVar7 < uVar6) {\n                        *(*0x20 + -0x18) = uVar5;\n                        *(*0x20 + -0x90) = 0x46df52;\n                        uVar4 = fcn.00445200(uVar5);\n                        uVar6 = uVar3 + 1;\n                        in_R8B = *(*0x20 + 0x60);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar5;\n                    }\n                    *(uVar4 + uVar2) = in_R8B;\n                    iVar9 = *(*0x20 + 0x28) + -1;\n                    if (*(*0x20 + 0x20) == 0) {\n                        iVar9 = 0;\n                    }\n                    if (iVar9 < 0) {\n                        iVar9 = -iVar9;\n                        uVar13 = 0x2d;\n                    }\n                    else {\n                        uVar13 = 0x2b;\n                    }\n                    *(*0x20 + -0x38) = iVar9;\n                    uVar5 = uVar6 + 1;\n                    uVar3 = uVar4;\n                    uVar2 = uVar6;\n                    if (uVar7 < uVar5) {\n                        *(*0x20 + -0x18) = uVar6;\n                        *(*0x20 + -0x42) = uVar13;\n                        *(*0x20 + -0x90) = 0x46dfc9;\n                        uVar3 = fcn.00445200(uVar6);\n                        uVar5 = uVar4 + 1;\n                        iVar9 = *(*0x20 + -0x38);\n                        uVar13 = *(*0x20 + -0x42);\n                        uVar2 = *(*0x20 + -0x18);\n                        uVar7 = uVar6;\n                    }\n                    *(*0x20 + -0x18) = uVar5;\n                    *(uVar3 + uVar2) = uVar13;\n                    if (iVar9 < 10) {\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x90) = 0x46e008;\n                            uVar3 = fcn.00445200(uVar5);\n                            iVar9 = *(*0x20 + -0x38);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = 0x30;\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else if (iVar9 < 100) {\n                        iVar10 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        iVar9 = iVar9 + iVar10 * -10;\n                        if (uVar7 < uVar5 + 2) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x90) = 0x46e077;\n                            uVar3 = fcn.00445200(uVar5);\n                            iVar10 = *(*0x20 + -0x20);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                        }\n                        *(uVar3 + uVar5) = iVar10 + '0';\n                        *(uVar3 + 1 + uVar5) = iVar9 + '0';\n                    }\n                    else {\n                        iVar10 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar9) >> 0x40, 0) + iVar9;\n                        iVar11 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar9) >> 0x40, 0) + iVar9 >> 3;\n                        cVar8 = iVar11 + ((iVar11 & 0xff) / 10) * -10;\n                        iVar9 = iVar9 + iVar11 * -10;\n                        if (uVar7 < uVar5 + 3) {\n                            *(*0x20 + -0x20) = iVar10;\n                            *(*0x20 + -0x28) = iVar9;\n                            *(*0x20 + -0x41) = cVar8;\n                            *(*0x20 + -0x90) = 0x46e125;\n                            uVar3 = fcn.00445200(uVar5);\n                            cVar8 = *(*0x20 + -0x41);\n                            iVar9 = *(*0x20 + -0x28);\n                            uVar5 = *(*0x20 + -0x18);\n                            iVar10 = *(*0x20 + -0x20);\n                        }\n                        *(uVar3 + uVar5) = (iVar10 >> 6) + '0';\n                        *(uVar3 + 1 + uVar5) = cVar8 + '0';\n                        *(uVar3 + 2 + uVar5) = iVar9 + '0';\n                    }\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x46e1e5;\n                fcn.0045cb00(uVar2, uVar3);\n            }\n            else {\n                uVar6 = *(*0x20 + 0x10);\n                if (*(*0x20 + 0x10) != 0) {\n                    uVar13 = **(*0x20 + 8);\n                    goto code_r0x0046dda4;\n                }\n            }\n            arg1 = uVar6;\n            *(*0x20 + -0x90) = 0x46e1ef;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar12 + 0x38) = in_RAX;\n        *(puVar12 + 0x40) = unaff_RBX;\n        *(puVar12 + 0x48) = arg1;\n        puVar12[0x50] = cVar8;\n        *(puVar12 + 0x58) = unaff_RSI;\n        puVar12[0x60] = in_R8B;\n        *(puVar12 + -8) = 0x46e213;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 0x38);\n        unaff_RBX = *(puVar12 + 0x40);\n        arg1 = *(puVar12 + 0x48);\n        unaff_RDI = puVar12[0x50];\n        unaff_RSI = *(puVar12 + 0x58);\n        in_R8B = puVar12[0x60];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3428
    },
    "0046ef20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046ef20(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < unaff_RDI) {\n                if (unaff_RDI < 10) {\n                    if (unaff_EBX == 0) {\n                        *(in_RAX + 0x18) = in_XMM15;\n                        return;\n                    }\n                    uVar2 = unaff_EBX * 2 + 1;\n                    iVar4 = 0x3f;\n                    if (uVar2 != 0) {\n                        for (; uVar2 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n                        }\n                    }\n                    uVar2 = arg1;\n                    if (iVar4 < 0x19) {\n                        uVar1 = -(-(iVar4 + -0x19) < 0x20);\n                        arg3 = uVar1;\n                        unaff_EBX = unaff_EBX << (-(iVar4 + -0x19) & 0x1f) & uVar1;\n                        uVar2 = (iVar4 + arg1) - 0x19;\n                    }\n                    *(*0x20 + 0x20) = unaff_RDI;\n                    *(*0x20 + 8) = in_RAX;\n                    unaff_RDI = unaff_RDI - (uVar2 * 0x13441 + 0x1ce618 >> 0x12);\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    arg1 = unaff_RDI - 1;\n                    if (arg1 < 0x1c) {\n                        arg3 = arg3 & 0xffffffffffffff00 | -1 < arg1;\n                    }\n                    else {\n                        arg3 = 0;\n                    }\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x1d) = arg3;\n                    *(*0x20 + -0x1c) = unaff_EBX;\n                    *(*0x20 + -0x48) = 0x46eff0;\n                    uVar1 = fcn.00470160(arg1, arg1, arg3);\n                    if (uVar2 < 0) break;\n                    *(*0x20 + -0x48) = 0x46f165;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x48) = 0x46f178;\n                fcn.00432ec0();\n            }\n            unaff_EBX = 0x4c9be0;\n            *(*0x20 + -0x48) = 0x46f18b;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x46f1a5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n    if (*(*0x20 + -0x10) + 9U < 10) {\n        if (*(*0x20 + -0x1c) != 0) {\n            uVar7 = *(*0x20 + -0x1c);\n            for (iVar4 = 0; SBORROW8(iVar4, -*(*0x20 + -0x18)) != iVar4 + *(*0x20 + -0x18) < 0; iVar4 = iVar4 + 1) {\n                if (uVar7 != (uVar7 / 5) * 5) goto code_r0x0046f028;\n                uVar7 = uVar7 / 5;\n            }\n        }\n        cVar5 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x0046f028:\n        cVar5 = *(*0x20 + -0x1d);\n    }\n    uVar2 = -uVar2;\n    uVar6 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) - 1 & uVar1;\n    if (cVar5 == '\\0') {\n        uVar2 = uVar2 - 1;\n        uVar7 = -(uVar2 < 0x20);\n        uVar1 = uVar2 & 0xffffff00 | (uVar8 >> (uVar2 & 0x1f) & -(uVar2 < 0x20)) == 1;\n        goto code_r0x0046f0c0;\n    }\n    uVar9 = -(uVar2 - 1 < 0x20);\n    uVar7 = uVar9;\n    uVar9 = 1 << (uVar2 - 1 & 0x1f) & uVar9;\n    if (uVar9 < uVar8) {\ncode_r0x0046f091:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar5 = arg1 & 0xffffffff;\n            if (cVar5 == '\\0') goto code_r0x0046f091;\n            if ((uVar9 == uVar8) && (cVar5 != '\\0')) {\n                uVar1 = uVar1 >> (uVar2 & 0x1f) & -(uVar2 < 0x20) & 1;\n                goto code_r0x0046f0c0;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x0046f0c0:\n    if (uVar8 != 0) {\n        uVar6 = 0;\n    }\n    *(*0x20 + -0x48) = 0x46f0e5;\n    fcn.0046f460(uVar6 ^ 1, uVar1, uVar7, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1694
    },
    "0046f1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046f1c0(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t noname_2;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 0x13) {\n                if (unaff_RBX == 0) {\n                    *(in_RAX + 0x18) = in_XMM15;\n                    return;\n                }\n                iVar3 = 0x3f;\n                if (unaff_RBX != 0) {\n                    for (; unaff_RBX >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                    }\n                }\n                if (unaff_RBX == 0) {\n                    iVar3 = -1;\n                }\n                uVar4 = arg1;\n                if (iVar3 + 1 < 0x37) {\n                    unaff_RBX = unaff_RBX << (-(iVar3 + -0x36) & 0x3f) & -(-(iVar3 + -0x36) < 0x40);\n                    uVar4 = (iVar3 + arg1) - 0x36;\n                }\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 8) = in_RAX;\n                unaff_RDI = unaff_RDI - (uVar4 * 0x13441 + 0x4105b6 >> 0x12);\n                *(*0x20 + -0x10) = unaff_RDI;\n                arg1 = unaff_RDI - 1;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x21) = arg1 < 0x38;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x46f290;\n                uVar2 = fcn.00470240(arg1);\n                if (uVar4 < 0) break;\n                *(*0x20 + -0x50) = 0x46f405;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9c10;\n            *(*0x20 + -0x50) = 0x46f418;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x46f432;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    if (*(*0x20 + -0x10) + 0x15U < 0x16) {\n        if (*(*0x20 + -0x18) != 0) {\n            uVar8 = *(*0x20 + -0x18);\n            for (iVar3 = 0; SBORROW8(iVar3, -*(*0x20 + -0x20)) != iVar3 + *(*0x20 + -0x20) < 0; iVar3 = iVar3 + 1) {\n                if (uVar8 != (uVar8 / 5) * 5) goto code_r0x0046f2c5;\n                uVar8 = uVar8 / 5;\n            }\n        }\n        cVar6 = '\\x01';\n        arg1 = 1;\n    }\n    else {\ncode_r0x0046f2c5:\n        cVar6 = *(*0x20 + -0x21);\n    }\n    uVar4 = -uVar4;\n    uVar7 = arg1 & 0xffffffff;\n    uVar8 = (1 << (uVar4 & 0x3f) & -(uVar4 < 0x40)) - 1 & uVar2;\n    if (cVar6 == '\\0') {\n        uVar4 = uVar4 - 1;\n        noname_2 = -(uVar4 < 0x40);\n        uVar1 = uVar4 & 0xffffff00 | (uVar8 >> (uVar4 & 0x3f) & noname_2) == 1;\n        goto code_r0x0046f362;\n    }\n    noname_2 = -(uVar4 - 1 < 0x40);\n    uVar9 = 1 << (uVar4 - 1 & 0x3f) & noname_2;\n    if (uVar9 < uVar8) {\ncode_r0x0046f332:\n        uVar1 = 1;\n    }\n    else {\n        if (uVar9 == uVar8) {\n            cVar6 = arg1 & 0xffffffff;\n            if (cVar6 == '\\0') goto code_r0x0046f332;\n            if ((uVar9 == uVar8) && (cVar6 != '\\0')) {\n                uVar1 = uVar2 >> (uVar4 & 0x3f) & -(uVar4 < 0x40) & 1;\n                goto code_r0x0046f362;\n            }\n        }\n        uVar1 = 0;\n    }\ncode_r0x0046f362:\n    if (uVar8 != 0) {\n        uVar7 = 0;\n    }\n    *(*0x20 + -0x50) = 0x46f385;\n    fcn.0046f460(uVar7 ^ 1, uVar1, noname_2, uVar8);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x10)) + 1;\n    return;\n}\n",
        "token_count": 1593
    },
    "0046f740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046f740(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    char cVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint32_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t *unaff_RDI;\n    char cVar16;\n    ulong uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    int64_t unaff_R14;\n    uint64_t uVar20;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 0) {\n                *(in_RAX + 0x18) = in_XMM15;\n                return;\n            }\n            if (arg1 < 1) {\n                iVar14 = 0;\n                if (unaff_RBX != 0) {\n                    for (; (unaff_RBX >> iVar14 & 1) == 0; iVar14 = iVar14 + 1) {\n                    }\n                }\n                uVar9 = -arg1;\n                if (SBORROW8(iVar14, uVar9) == iVar14 + arg1 < 0) {\n                    *(*0x20 + -0x98) = 0x46f7a5;\n                    fcn.0046fc60(-(uVar9 < 0x40) & unaff_RBX >> (uVar9 & 0x3f), iVar14, 0);\n                    return;\n                }\n            }\n            uVar9 = *unaff_RDI;\n            if ((unaff_RBX == (1 << (uVar9 & 0x3f) & -(uVar9 < 0x40))) && (arg1 != (unaff_RDI[2] - uVar9) + 1)) {\n                iVar10 = unaff_RBX * 4;\n                iVar14 = iVar10 + 2;\n                arg1 = arg1 + -2;\n                iVar1 = iVar10;\n            }\n            else {\n                iVar10 = unaff_RBX << 1;\n                iVar14 = unaff_RBX * 2 + 1;\n                arg1 = arg1 + -1;\n                iVar1 = unaff_RBX * 2;\n            }\n            if (arg1 == 0) {\n                *(*0x20 + -0x98) = 0x46f97b;\n                fcn.0046fc60(iVar10, unaff_RBX, 0);\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = iVar1 + -1;\n            *(*0x20 + -0x18) = iVar10;\n            *(*0x20 + -0x50) = iVar14;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            iVar14 = arg1 * -0x13441 >> 0x12;\n            *(*0x20 + -0x58) = iVar14;\n            iVar14 = iVar14 + 1;\n            *(*0x20 + -0x48) = iVar14;\n            uVar17 = 0x527980;\n            if (unaff_RDI == 0x527980) {\n                *(*0x20 + -0x98) = 0x46f872;\n                uVar4 = fcn.00470160(iVar14, unaff_RBX, 0x527980);\n                *(*0x20 + -0x60) = uVar4;\n                *(*0x20 + -0x62) = iVar14;\n                uVar6 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46f88e;\n                uVar4 = fcn.00470160(uVar6, unaff_RBX, uVar17);\n                *(*0x20 + -0x5c) = uVar4;\n                *(*0x20 + -0x61) = uVar6;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46f8aa;\n                uVar5 = fcn.00470160(arg1, unaff_RBX, uVar17);\n                uVar9 = *(*0x20 + -0x60);\n                uVar20 = *(*0x20 + -0x5c);\n                unaff_RDI = uVar5;\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            else {\n                *(*0x20 + -0x98) = 0x46f8d0;\n                uVar17 = fcn.00470240(iVar14);\n                *(*0x20 + -0x28) = uVar17;\n                *(*0x20 + -0x62) = iVar14;\n                uVar17 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46f8ed;\n                uVar6 = fcn.00470240(uVar17);\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x61) = uVar17;\n                iVar14 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + -0x48);\n                *(*0x20 + -0x98) = 0x46f90a;\n                unaff_RDI = fcn.00470240(arg1);\n                uVar9 = *(*0x20 + -0x28);\n                uVar20 = *(*0x20 + -0x20);\n                cVar3 = *(*0x20 + -0x61);\n                cVar16 = *(*0x20 + -0x62);\n            }\n            if (iVar14 < 0) break;\n            unaff_RBX = 0x4c9c20;\n            *(*0x20 + -0x98) = 0x46fc2c;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + 0x20) = unaff_RDI;\n        *(puVar12 + -8) = 0x46fc46;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        unaff_RDI = *(puVar12 + 0x20);\n        *0x20 = puVar12;\n    } while( true );\n    iVar1 = *(*0x20 + -0x48);\n    if (0x37 < iVar1) {\n        arg1 = 0;\n        cVar3 = '\\0';\n        cVar16 = '\\0';\n    }\n    cVar7 = arg1;\n    if (*(*0x20 + -0x58) + 0x19U < 0x18) {\n        iVar10 = -iVar1;\n        if (*(*0x20 + -0x40) != 0) {\n            uVar15 = *(*0x20 + -0x40);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x0046fb59;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar16 = '\\x01';\ncode_r0x0046fb59:\n        if (*(*0x20 + -0x18) != 0) {\n            uVar15 = *(*0x20 + -0x18);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x0046fbb6;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar3 = '\\x01';\ncode_r0x0046fbb6:\n        if (*(*0x20 + -0x50) != 0) {\n            uVar15 = *(*0x20 + -0x50);\n            for (iVar19 = 0; SBORROW8(iVar19, iVar10) != iVar19 + iVar1 < 0; iVar19 = iVar19 + 1) {\n                if (uVar15 != (uVar15 / 5) * 5) goto code_r0x0046f9a1;\n                uVar15 = uVar15 / 5;\n            }\n        }\n        cVar7 = '\\x01';\n    }\ncode_r0x0046f9a1:\n    *(*0x20 + -0x30) = unaff_RDI;\n    uVar11 = -iVar14;\n    uVar15 = -(uVar11 < 0x40);\n    uVar8 = uVar11;\n    uVar18 = (1 << (uVar8 & 0x3f) & uVar15) - 1;\n    noname_1 = uVar9 >> (uVar8 & 0x3f) & uVar15;\n    uVar15 = uVar20 >> (uVar8 & 0x3f) & uVar15;\n    uVar20 = uVar20 & uVar18;\n    if ((cVar7 == '\\0') || ((*(*0x20 + -0x30) & uVar18) != 0)) {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    else {\n        uVar5 = *(*0x20 + -0x10);\n    }\n    if (cVar3 == '\\0') {\n        uVar2 = -(uVar11 - 1 < 0x40);\n        uVar13 = uVar2 & 0xffffff00 | (uVar20 >> (uVar11 - 1 & 0x3f) & uVar2) == 1;\n    }\n    else {\n        uVar11 = 1 << (uVar11 - 1 & 0x3f) & -(uVar11 - 1 < 0x40);\n        if (uVar11 < uVar20) {\n            uVar13 = 1;\n        }\n        else if (uVar11 == uVar20) {\n            uVar13 = uVar15 & 1;\n        }\n        else {\n            uVar13 = 0;\n        }\n    }\n    if (((cVar16 == '\\0') || ((uVar18 & uVar9) != 0)) || ((uVar5 & 1) != 0)) {\n        noname_1 = noname_1 + 1;\n    }\n    *(*0x20 + -0x98) = 0x46fae5;\n    fcn.0046fc60(uVar15, noname_1, uVar13);\n    *(*(*0x20 + 8) + 0x20) = (*(*(*0x20 + 8) + 0x20) - *(*0x20 + -0x58)) + -1;\n    return;\n}\n",
        "token_count": 2782
    },
    "0046fc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0046fc60(char *arg1, ulong noname_1, char **arg3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char **in_RAX;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t noname_1_00;\n    char *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    char cVar8;\n    char *unaff_RSI;\n    char **unaff_RDI;\n    char **ppcVar9;\n    uint32_t uVar10;\n    char **arg1_00;\n    int64_t unaff_R14;\n    char *unaff_R15;\n    \n    do {\n        cVar8 = unaff_RSI;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            pcVar5 = (unaff_RBX >> 1) / 500000000;\n            unaff_RBX = unaff_RBX + pcVar5 * -1000000000;\n            pcVar6 = (arg1 >> 1) / 500000000;\n            arg1_00 = arg1 + pcVar6 * -1000000000;\n            noname_1_00 = (unaff_RDI >> 1) / 500000000;\n            if (noname_1_00 == 0) {\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x46fd79;\n                fcn.0046ff60(arg1_00, noname_1_00, arg3, 8);\n                goto code_r0x0046fd79;\n            }\n            if (pcVar5 < noname_1_00) {\n                uVar10 = arg1_00;\n                if (cVar8 == '\\0') {\n                    unaff_RSI = NULL;\n                }\n                else {\n                    unaff_RSI = uVar10 == 0;\n                }\n                if (uVar10 < 0x1dcd6501) {\n                    arg3 = (uVar10 & 0xffffff00 | uVar10 == 500000000) & arg3;\n                }\n                else {\n                    arg3 = 0x1;\n                }\n                in_RAX = 0x8;\n                *(*0x20 + -0x30) = 0x46fd54;\n                arg1_00 = arg3;\n                fcn.0046ff60(pcVar6, noname_1_00, arg3, 8);\n                *(*(*0x20 + 8) + 0x20) = *(*(*0x20 + 8) + 0x20) + 9;\n                goto code_r0x0046fd79;\n            }\n            in_RAX[3] = NULL;\n            pcVar3 = 0x9;\n            ppcVar9 = unaff_RDI >> 1;\n            unaff_RDI = arg1_00;\ncode_r0x0046fe4f:\n            cVar8 = unaff_RSI;\n            if (pcVar6 != 0) {\n                cVar4 = pcVar6 + ((pcVar6 & 0xffffffff) / 10) * -10;\n                unaff_R15 = pcVar3 + -1;\n                arg1 = in_RAX[1];\n                arg1_00 = *in_RAX;\n                pcVar6 = (pcVar6 & 0xffffffff) / 10;\n                if (arg1 <= unaff_R15) goto code_r0x0046fefc;\ncode_r0x0046fe3a:\n                (pcVar3 + -1)[arg1_00] = cVar4 + '0';\n                pcVar3 = unaff_R15;\n                pcVar5 = unaff_RBX;\n                ppcVar9 = unaff_RDI;\n                goto code_r0x0046fe4f;\n            }\n            pcVar6 = in_RAX[1];\n            pcVar1 = *in_RAX;\n            pcVar2 = in_RAX[2];\n            if (pcVar3 <= pcVar6) {\n                in_RAX[1] = pcVar6 + -pcVar3;\n                in_RAX[2] = pcVar2 + -pcVar3;\n                if (*0x593680 == 0) {\n                    *in_RAX = pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3);\n                    arg1_00 = unaff_RDI;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x46feca;\n                    pcVar3 = fcn.0045c700(pcVar6 + -pcVar3, pcVar1 + (-(pcVar2 + -pcVar3) >> 0x3f & pcVar3), arg3, \n                                          in_RAX);\n                    arg1_00 = unaff_RDI;\n                }\n                in_RAX[3] = -(pcVar3 + -9);\n                in_RAX = -(pcVar3 + -9) + 8;\n                *(*0x20 + -0x30) = 0x46feed;\n                fcn.0046ff60(arg1_00, in_RAX, arg3, in_RAX);\ncode_r0x0046fd79:\n                unaff_RDI = *(*0x20 + 8);\n                while (pcVar6 = unaff_RDI[3],  0 < pcVar6) {\n                    pcVar5 = unaff_RDI[1];\n                    unaff_RBX = *unaff_RDI;\n                    if (pcVar5 <= pcVar6 + -1) goto code_r0x0046fe35;\n                    if ((pcVar6 + -1)[unaff_RBX] != '0') break;\n                    unaff_RDI[3] = pcVar6 + -1;\n                }\ncode_r0x0046fdb3:\n                pcVar6 = unaff_RDI[3];\n                if (pcVar6 < 1) {\n                    return;\n                }\n                pcVar5 = unaff_RDI[1];\n                unaff_RBX = *unaff_RDI;\n                if (pcVar5 == NULL) goto code_r0x0046fe2e;\n                if (*unaff_RBX != '0') {\n                    return;\n                }\n                unaff_RDI[3] = pcVar6 + -1;\n                unaff_RDI[4] = unaff_RDI[4] + -1;\n                pcVar5 = unaff_RDI[1];\n                pcVar6 = *unaff_RDI;\n                unaff_RBX = unaff_RDI[2];\n                if (pcVar5 != NULL) {\n                    unaff_RSI = pcVar5 + -1;\n                    unaff_RDI[1] = unaff_RSI;\n                    unaff_RDI[2] = unaff_RBX + -1;\n                    if (*0x593680 == 0) {\n                        *unaff_RDI = pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1);\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x46fe18;\n                        fcn.0045c700(pcVar5, pcVar6 + (-(unaff_RBX + -1) >> 0x3f & 1), arg3, in_RAX);\n                    }\n                    goto code_r0x0046fdb3;\n                }\n                *(*0x20 + -0x30) = 0x46fe2e;\n                fcn.0045cb40(0);\ncode_r0x0046fe2e:\n                *(*0x20 + -0x30) = 0x46fe35;\n                fcn.0045ca80(pcVar5);\ncode_r0x0046fe35:\n                *(*0x20 + -0x30) = 0x46fe3a;\n                pcVar3 = fcn.0045ca80(pcVar5);\n                cVar4 = pcVar5;\n                goto code_r0x0046fe3a;\n            }\n            *(*0x20 + -0x30) = 0x46fefc;\n            arg1 = unaff_RBX;\n            fcn.0045cb60(pcVar6);\n            unaff_RBX = pcVar5;\n            unaff_RDI = ppcVar9;\ncode_r0x0046fefc:\n            *(*0x20 + -0x30) = 0x46ff07;\n            in_RAX = fcn.0045caa0(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        puVar7[0x28] = cVar8;\n        puVar7[0x29] = arg3;\n        *(puVar7 + -8) = 0x46ff2b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = puVar7[0x28];\n        arg3 = puVar7[0x29];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2210
    },
    "00470980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00470980(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar6;\n    uint8_t *unaff_RDI;\n    uchar in_R8B;\n    uchar in_R9B;\n    uchar in_R10B;\n    uchar uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x30) = in_R8B;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x51) = in_R9B;\n            *(*0x20 + -0x52) = in_R10B;\n            *(*0x20 + 0x20) = unaff_RDI;\n            uVar6 = unaff_RSI;\n            if (arg1 - unaff_RBX < unaff_RSI) {\n                *(*0x20 + 8) = in_RAX;\n                iVar2 = unaff_RSI + unaff_RBX + 2;\n                *(*0x20 + -0x48) = iVar2;\n                *(*0x20 + -0xa0) = 0x470a06;\n                in_RAX = fcn.00445120(iVar2);\n                if (in_RAX != *(*0x20 + 8)) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0xa0) = 0x470a28;\n                    fcn.0045d3c0(*(*0x20 + 0x10));\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = *(*0x20 + -0x48);\n            }\n            arg1_00 = unaff_RBX + 1;\n            iVar2 = in_RAX;\n            uVar4 = unaff_RBX;\n            if (arg1 < arg1_00) {\n                *(*0x20 + -0xa0) = 0x470a85;\n                iVar2 = fcn.00445200(unaff_RBX);\n                arg1_00 = in_RAX + 1;\n                uVar4 = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                in_R8B = *(*0x20 + 0x30);\n                in_R9B = *(*0x20 + -0x51);\n                in_R10B = *(*0x20 + -0x52);\n                arg1 = unaff_RBX;\n            }\n            *(iVar2 + uVar4) = in_R8B;\n            while( true ) {\n                *(*0x20 + -0x28) = arg1_00;\n                if (uVar6 == 0) {\n                    if (arg1 < arg1_00 + 1) {\n                        *(*0x20 + -0xa0) = 0x470d4a;\n                        iVar2 = fcn.00445200(arg1_00);\n                        in_R8B = *(*0x20 + 0x30);\n                        arg1_00 = *(*0x20 + -0x28);\n                    }\n                    *(iVar2 + arg1_00) = in_R8B;\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x30) = uVar6;\n                uVar1 = *unaff_RDI;\n                if (*unaff_RDI < 0x80) {\n                    unaff_RBX = 1;\n                    unaff_RSI = uVar6;\n                }\n                else {\n                    *(*0x20 + -0x38) = arg1;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0xa0) = 0x470b25;\n                    uVar1 = fcn.0046bd00();\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    arg1_00 = *(*0x20 + -0x28);\n                    iVar2 = *(*0x20 + -0x20);\n                    unaff_RBX = uVar6;\n                }\n                *(*0x20 + -0x50) = unaff_RBX;\n                if ((unaff_RBX == 1) && (uVar1 == 0xfffd)) {\n                    uVar6 = arg1_00 + 2;\n                    uVar4 = arg1_00;\n                    if (arg1 < uVar6) {\n                        *(*0x20 + -0x40) = uVar6;\n                        *(*0x20 + -0xa0) = 0x470ba5;\n                        iVar2 = fcn.00445200(arg1_00);\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar6 = *(*0x20 + -0x40);\n                        arg1 = arg1_00;\n                    }\n                    *(iVar2 + uVar4) = 0x785c;\n                    arg1_01 = uVar4 + 3;\n                    uVar7 = *((*unaff_RDI >> 4) + 0x4a89b4);\n                    iVar3 = iVar2;\n                    if (arg1 < arg1_01) {\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x470c1f;\n                        iVar3 = fcn.00445200(uVar6);\n                        arg1_01 = iVar2 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar4 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = uVar6;\n                    }\n                    *(uVar4 + 2 + iVar3) = uVar7;\n                    arg1_00 = arg1_01 + 1;\n                    uVar7 = *((*unaff_RDI & 0xf) + 0x4a89b4);\n                    iVar2 = iVar3;\n                    uVar6 = arg1_01;\n                    if (arg1 < arg1_00) {\n                        *(*0x20 + -0x28) = arg1_01;\n                        *(*0x20 + -0x53) = uVar7;\n                        *(*0x20 + -0xa0) = 0x470c9e;\n                        iVar2 = fcn.00445200(arg1_01);\n                        arg1_00 = iVar3 + 1;\n                        unaff_RBX = *(*0x20 + -0x50);\n                        unaff_RSI = *(*0x20 + -0x30);\n                        unaff_RDI = *(*0x20 + -0x18);\n                        in_R8B = *(*0x20 + 0x30);\n                        in_R9B = *(*0x20 + -0x51);\n                        in_R10B = *(*0x20 + -0x52);\n                        uVar6 = *(*0x20 + -0x28);\n                        uVar7 = *(*0x20 + -0x53);\n                        arg1 = arg1_01;\n                    }\n                    *(iVar2 + uVar6) = uVar7;\n                }\n                else {\n                    *(*0x20 + -0xa0) = 0x470cf4;\n                    iVar2 = fcn.00470f40(arg1);\n                    unaff_RSI = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    in_R8B = *(*0x20 + 0x30);\n                    in_R9B = *(*0x20 + -0x51);\n                    in_R10B = *(*0x20 + -0x52);\n                    unaff_RBX = *(*0x20 + -0x50);\n                }\n                if (unaff_RSI < unaff_RBX) break;\n                uVar6 = unaff_RSI - unaff_RBX;\n                unaff_RDI = unaff_RDI + (unaff_RBX & -uVar6 >> 0x3f);\n            }\n            *(*0x20 + -0xa0) = 0x470d85;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045cb40(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        puVar5[0x30] = in_R8B;\n        puVar5[0x31] = in_R9B;\n        puVar5[0x32] = in_R10B;\n        *(puVar5 + -8) = 0x470db3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        in_R8B = puVar5[0x30];\n        in_R9B = puVar5[0x31];\n        in_R10B = puVar5[0x32];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2694
    },
    "00471760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00471760(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            while( true ) {\n                if (unaff_RBX == 0) {\n                    return 1;\n                }\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x30) = 0x47179d;\n                iVar1 = fcn.0046bd00();\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < unaff_RBX) break;\n                uVar2 = uVar2 - unaff_RBX;\n                in_RAX = (-uVar2 >> 0x3f & unaff_RBX) + *(*0x20 + -0x10);\n                if (unaff_RBX < 2) {\n                    if (iVar1 == 0xfffd) {\n                        return 0;\n                    }\n                    if (iVar1 < 0x20) {\n                        unaff_RBX = uVar2;\n                        if (iVar1 != 9) {\n                            return 0;\n                        }\n                    }\n                    else if ((iVar1 == 0x60) || (unaff_RBX = uVar2,  iVar1 == 0x7f)) {\n                        return 0;\n                    }\n                }\n                else {\n                    unaff_RBX = uVar2;\n                    if (iVar1 == 0xfeff) {\n                        return 0;\n                    }\n                }\n            }\n            *(*0x20 + -0x30) = 0x47182e;\n            in_RAX = fcn.0045cb40(uVar2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x47183e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 632
    },
    "00475800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00475800(void)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    ulong *in_RAX;\n    int64_t iVar7;\n    int64_t arg1;\n    int64_t *arg1_00;\n    ulong uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t *unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t **arg3_00;\n    int64_t **ppiVar12;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xd0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = in_RAX[1];\n            arg1 = in_RAX[4];\n            iVar1 = in_RAX[3];\n            iVar7 = iVar1;\n            if (in_RAX[5] < arg1 + 1U) {\n                *(*0x20 + -0x88) = uVar8;\n                *(*0x20 + -0xd8) = 0x475865;\n                arg3 = iVar1;\n                iVar7 = fcn.00445200(arg1);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = arg1;\n                if (*0x593680 == 0) {\n                    *(arg2 + 0x18) = iVar7;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x47588b;\n                    iVar7 = fcn.0045c5e0(arg1, arg2, arg3, in_R9);\n                }\n                uVar8 = *(*0x20 + -0x88);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = iVar1;\n            }\n            in_RAX[4] = arg1 + 1;\n            *(iVar7 + arg1 * 8) = uVar8;\n            if (*unaff_RBX == 0) {\n                in_RAX[6] = -*(unaff_RBX + 0x15) & (*(unaff_RBX + 0x15) + in_RAX[6]) - 1;\n                return NULL;\n            }\n            *(*0x20 + -0x50) = *in_RAX;\n            uVar3 = *(in_RAX + 0xc);\n            uVar4 = *(in_RAX + 2);\n            uVar5 = *(in_RAX + 0x14);\n            *(*0x20 + -0x48) = *(in_RAX + 1);\n            *(*0x20 + -0x44) = uVar3;\n            *(*0x20 + -0x40) = uVar4;\n            *(*0x20 + -0x3c) = uVar5;\n            uVar3 = *(in_RAX + 0x1c);\n            uVar4 = *(in_RAX + 4);\n            uVar5 = *(in_RAX + 0x24);\n            *(*0x20 + -0x38) = *(in_RAX + 3);\n            *(*0x20 + -0x34) = uVar3;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x2c) = uVar5;\n            uVar3 = *(in_RAX + 0x2c);\n            uVar4 = *(in_RAX + 6);\n            uVar5 = *(in_RAX + 0x34);\n            *(*0x20 + -0x28) = *(in_RAX + 5);\n            *(*0x20 + -0x24) = uVar3;\n            *(*0x20 + -0x20) = uVar4;\n            *(*0x20 + -0x1c) = uVar5;\n            uVar3 = *(in_RAX + 0x3c);\n            uVar4 = *(in_RAX + 8);\n            uVar5 = *(in_RAX + 0x44);\n            *(*0x20 + -0x18) = *(in_RAX + 7);\n            *(*0x20 + -0x14) = uVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar5;\n            *(*0x20 + -0xd8) = 0x4758fe;\n            cVar6 = fcn.00475d60(0);\n            if (cVar6 != '\\0') {\n                return NULL;\n            }\n            if (*0x593680 == 0) {\n                arg3_00 = *(*0x20 + 8);\n                *arg3_00 = *(*0x20 + -0x50);\n                uVar3 = *(*0x20 + -0x44);\n                uVar4 = *(*0x20 + -0x40);\n                uVar5 = *(*0x20 + -0x3c);\n                *(arg3_00 + 1) = *(*0x20 + -0x48);\n                *(arg3_00 + 0xc) = uVar3;\n                *(arg3_00 + 2) = uVar4;\n                *(arg3_00 + 0x14) = uVar5;\n                uVar3 = *(*0x20 + -0x34);\n                uVar4 = *(*0x20 + -0x30);\n                uVar5 = *(*0x20 + -0x2c);\n                *(arg3_00 + 3) = *(*0x20 + -0x38);\n                *(arg3_00 + 0x1c) = uVar3;\n                *(arg3_00 + 4) = uVar4;\n                *(arg3_00 + 0x24) = uVar5;\n                uVar3 = *(*0x20 + -0x24);\n                uVar4 = *(*0x20 + -0x20);\n                uVar5 = *(*0x20 + -0x1c);\n                *(arg3_00 + 5) = *(*0x20 + -0x28);\n                *(arg3_00 + 0x2c) = uVar3;\n                *(arg3_00 + 6) = uVar4;\n                *(arg3_00 + 0x34) = uVar5;\n                uVar3 = *(*0x20 + -0x14);\n                uVar4 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0xc);\n                *(arg3_00 + 7) = *(*0x20 + -0x18);\n                *(arg3_00 + 0x3c) = uVar3;\n                *(arg3_00 + 8) = uVar4;\n                *(arg3_00 + 0x44) = uVar5;\n            }\n            else {\n                *(*0x20 + -0xd8) = 0x475976;\n                fcn.004117c0(*0x20 + -0x50);\n                arg3_00 = *(*0x20 + 8);\n            }\n            in_R9 = **(*0x20 + 0x10);\n            uVar9 = *(*(*0x20 + 0x10) + 0x15);\n            arg3_00[6] = -uVar9 & arg3_00[6] + (uVar9 - 1);\n            *(*0x20 + -0x80) = in_XMM15;\n            *(*0x20 + -0x70) = in_XMM15;\n            *(*0x20 + -0x60) = in_XMM15;\n            *(*0x20 + -0x80) = 1;\n            *(*0x20 + -0x70) = in_R9;\n            piVar10 = arg3_00[6];\n            *(*0x20 + -0x68) = piVar10;\n            arg1_00 = arg3_00[1];\n            piVar2 = *arg3_00;\n            unaff_RBX = piVar2;\n            ppiVar12 = arg3_00;\n            if (arg3_00[2] < arg1_00 + 1U) {\n                *(*0x20 + -0x90) = in_R9;\n                *(*0x20 + -0xd8) = 0x4759f6;\n                unaff_RBX = fcn.00445200(arg1_00);\n                ppiVar12 = *(*0x20 + 8);\n                ppiVar12[2] = arg1_00;\n                if (*0x593680 == 0) {\n                    *ppiVar12 = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0xd8) = 0x475a15;\n                    unaff_RBX = fcn.0045c5e0(arg1_00, piVar10, arg3_00, in_R9);\n                }\n                in_R9 = *(*0x20 + -0x90);\n                arg1_00 = piVar2;\n            }\n            ppiVar12[1] = arg1_00 + 1;\n            piVar10 = unaff_RBX + arg1_00 * 6;\n            uVar3 = *(*0x20 + -0x7c);\n            uVar4 = *(*0x20 + -0x78);\n            uVar5 = *(*0x20 + -0x74);\n            *piVar10 = *(*0x20 + -0x80);\n            *(piVar10 + 4) = uVar3;\n            *(piVar10 + 1) = uVar4;\n            *(piVar10 + 0xc) = uVar5;\n            uVar3 = *(*0x20 + -0x6c);\n            uVar4 = *(*0x20 + -0x68);\n            uVar5 = *(*0x20 + -100);\n            *(unaff_RBX + arg1_00 * 6 + 2) = *(*0x20 + -0x70);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x14) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 3) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x1c) = uVar5;\n            uVar3 = *(*0x20 + -0x5c);\n            uVar4 = *(*0x20 + -0x58);\n            uVar5 = *(*0x20 + -0x54);\n            *(unaff_RBX + arg1_00 * 6 + 4) = *(*0x20 + -0x60);\n            *(unaff_RBX + arg1_00 * 0x30 + 0x24) = uVar3;\n            *(unaff_RBX + arg1_00 * 6 + 5) = uVar4;\n            *(unaff_RBX + arg1_00 * 0x30 + 0x2c) = uVar5;\n            ppiVar12[6] = ppiVar12[6] + in_R9;\n            piVar10 = ppiVar12[1];\n            if (piVar10 - 1U < piVar10) {\n                return *ppiVar12 + piVar10 * 6 + -6;\n            }\n            *(*0x20 + -0xd8) = 0x475acf;\n            in_RAX = fcn.0045ca80(piVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x475adf;\n        fcn.0045a3a0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2851
    },
    "00475b00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00475b00(void)\n\n{\n    uint *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    uint64_t arg1;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char cVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    uchar uVar9;\n    int64_t iVar10;\n    int64_t *arg2_00;\n    int64_t *piVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong arg3;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar10 = *(in_RAX + 0x20);\n            iVar3 = *(in_RAX + 0x18);\n            arg3 = *(in_RAX + 8);\n            iVar8 = iVar3;\n            if (*(in_RAX + 0x28) < iVar10 + 1U) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x40) = arg3;\n                *(*0x20 + -0x90) = 0x475b65;\n                iVar8 = fcn.00445200(iVar10);\n                arg2 = *(*0x20 + 8);\n                *(arg2 + 0x28) = iVar10;\n                if (*0x593680 == 0) {\n                    *(arg2 + 0x18) = iVar8;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x475b8b;\n                    iVar8 = fcn.0045c5e0(iVar10, arg2, arg3, in_R9);\n                }\n                arg3 = *(*0x20 + -0x40);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar10 = iVar3;\n            }\n            in_R9 = iVar10 + 1;\n            *(in_RAX + 0x20) = in_R9;\n            *(iVar8 + iVar10 * 8) = arg3;\n            uVar2 = *(unaff_RBX + 0x17);\n            if (((uVar2 & 0x20) == 0) || (*(unaff_RBX + 8) != 0)) {\n                *(*0x20 + -0x90) = 0x475bd8;\n                cVar7 = fcn.004764a0(8, uVar2, arg3);\n                uVar9 = 1;\n            }\n            else {\n                *(*0x20 + -0x90) = 0x475bf2;\n                cVar7 = fcn.004764a0(8, uVar2, arg3);\n                uVar9 = 0;\n            }\n            if (cVar7 != '\\0') {\n                return 0;\n            }\n            arg2_00 = *(*0x20 + 8);\n            arg2_00[6] = arg2_00[6] + 7U & 0xfffffffffffffff8;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x38) = 1;\n            *(*0x20 + -0x28) = 8;\n            *(*0x20 + -0x20) = arg2_00[6];\n            iVar10 = arg2_00[1];\n            iVar3 = *arg2_00;\n            piVar11 = arg2_00;\n            unaff_RBX = iVar3;\n            if (arg2_00[2] < iVar10 + 1U) {\n                *(*0x20 + -0x41) = uVar9;\n                *(*0x20 + -0x90) = 0x475c69;\n                iVar8 = iVar10;\n                unaff_RBX = fcn.00445200(iVar10);\n                piVar11 = *(*0x20 + 8);\n                piVar11[2] = iVar10;\n                if (*0x593680 == 0) {\n                    *piVar11 = unaff_RBX;\n                    iVar10 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0x90) = 0x475c88;\n                    unaff_RBX = fcn.0045c5e0(iVar10, arg2_00, iVar8, in_R9);\n                    iVar10 = iVar3;\n                }\n            }\n            piVar11[1] = iVar10 + 1;\n            puVar1 = unaff_RBX + iVar10 * 0x30;\n            uVar4 = *(*0x20 + -0x34);\n            uVar5 = *(*0x20 + -0x30);\n            uVar6 = *(*0x20 + -0x2c);\n            *puVar1 = *(*0x20 + -0x38);\n            puVar1[1] = uVar4;\n            puVar1[2] = uVar5;\n            puVar1[3] = uVar6;\n            iVar10 = unaff_RBX + iVar10 * 0x30;\n            uVar4 = *(*0x20 + -0x24);\n            uVar5 = *(*0x20 + -0x20);\n            uVar6 = *(*0x20 + -0x1c);\n            *(iVar10 + 0x10) = *(*0x20 + -0x28);\n            *(iVar10 + 0x14) = uVar4;\n            *(iVar10 + 0x18) = uVar5;\n            *(iVar10 + 0x1c) = uVar6;\n            uVar4 = *(*0x20 + -0x14);\n            uVar5 = *(*0x20 + -0x10);\n            uVar6 = *(*0x20 + -0xc);\n            *(iVar10 + 0x20) = *(*0x20 + -0x18);\n            *(iVar10 + 0x24) = uVar4;\n            *(iVar10 + 0x28) = uVar5;\n            *(iVar10 + 0x2c) = uVar6;\n            piVar11[6] = piVar11[6] + 8;\n            arg1 = piVar11[1];\n            if (arg1 - 1 < arg1) {\n                return arg1 * 0x30 + *piVar11 + -0x30;\n            }\n            *(*0x20 + -0x90) = 0x475d25;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x475d35;\n        fcn.0045a3a0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1746
    },
    "00475d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00475d60(int64_t arg1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg2;\n    uint64_t *unaff_RBX;\n    uint64_t in_R8;\n    int64_t arg3;\n    uint *in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uint64_t *puStackX16;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    ulong uStack144;\n    uchar auStack136 [8];\n    uint uStack128;\n    uint uStack124;\n    uchar auStack120 [8];\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [8];\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint uStack80;\n    uint uStack76;\n    uchar auStack72 [8];\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [8];\n    ulong uStack48;\n    uchar auStack40 [8];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [8];\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack136 < *(unaff_R14 + 0x10) || auStack136 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        puStackX16 = unaff_RBX;\n    }\n    uVar7 = *(unaff_RBX + 0x17) & 0x1f;\n    if (0x10 < uVar7) {\n        if (uVar7 < 0x17) {\n            if (uVar7 < 0x14) {\n                if (uVar7 == 0x11) {\n                    if (unaff_RBX[8] == 0) {\n                        return 1;\n                    }\n                    if (unaff_RBX[8] == 1) {\n                        uVar4 = fcn.00475d60(arg1);\n                        return uVar4;\n                    }\n                    return 0;\n                }\n            }\n            else if (uVar7 == 0x14) {\n                uVar4 = fcn.004764a0(8, 0x14, in_R8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0x19) {\n                if (uVar7 == 0x17) {\n                    uVar4 = fcn.004764a0(8, 0x17, in_R8);\n                    return uVar4;\n                }\n                uVar4 = fcn.004764a0(8, uVar7, in_R8);\n                return uVar4;\n            }\n            if (uVar7 == 0x19) {\n                uStack160 = unaff_RBX[8];\n                uStack168 = 0;\n                puStackX16 = unaff_RBX;\n                goto code_r0x00476098;\n            }\n            if (uVar7 != 0x1a) goto code_r0x00476035;\n        }\n        uVar4 = fcn.004764a0(*unaff_RBX, *unaff_RBX, in_R8);\n        return uVar4;\n    }\n    if (uVar7 < 0xc) {\n        if (uVar7 < 7) {\n            in_R8 = uVar7 - 1;\n            if (in_R8 < 5) goto code_r0x00475e8b;\n            if (uVar7 == 6) {\ncode_r0x00475ebf:\n                uVar4 = fcn.004764a0(8, uVar7, in_R8);\n                return uVar4;\n            }\n        }\n        else {\n            if (uVar7 < 0xb) goto code_r0x00475e8b;\n            if (uVar7 == 0xb) goto code_r0x00475ebf;\n        }\ncode_r0x00476035:\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.00435040();\n        fcn.00434e60();\n        fcn.00432ec0();\n        do {\n            uStack168 = uStack168 + 1;\ncode_r0x00476098:\n            if (uStack160 <= uStack168) {\n                return 1;\n            }\n            if (puStackX16[8] <= uStack168) {\n                uVar4 = fcn.0045ca80(puStackX16[8]);\n                return uVar4;\n            }\n            cVar2 = fcn.00475d60((*(puStackX16[7] + 0x10 + uStack168 * 0x18) >> 1) + arg1);\n        } while (cVar2 != '\\0');\n        return 0;\n    }\n    if (0xe < uVar7) {\n        if (uVar7 == 0xf) {\n            if ((*0x527358 < in_RAX[8] + 2) || (*0x527360 < 4)) {\n                uVar4 = 0;\n            }\n            else {\n                for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                    uStack96 = SUB168(in_XMM15 >> 0x40, 0);\n                    _auStack104 = CONCAT88(arg1 + iVar9 * 4, 4);\n                    _auStack88 = CONCAT88(uStack96, 4);\n                    _auStack72 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                    iVar6 = in_RAX[1];\n                    iVar5 = *in_RAX;\n                    iVar3 = iVar5;\n                    if (in_RAX[2] < iVar6 + 1U) {\n                        iVar10 = iVar9;\n                        iVar8 = iVar6;\n                        iVar3 = fcn.00445200(iVar6);\n                        in_RAX[2] = iVar6;\n                        if (*0x593680 == 0) {\n                            *in_RAX = iVar3;\n                            iVar6 = iVar5;\n                        }\n                        else {\n                            iVar3 = fcn.0045c5e0(iVar6, iVar10, iVar8, in_R9);\n                            iVar6 = iVar5;\n                        }\n                    }\n                    in_RAX[1] = iVar6 + 1;\n                    in_R9 = iVar3 + iVar6 * 0x30;\n                    *in_R9 = auStack104._0_4_;\n                    in_R9[1] = auStack104._4_4_;\n                    in_R9[2] = uStack96;\n                    in_R9[3] = uStack96._4_4_;\n                    iVar3 = iVar3 + iVar6 * 0x30;\n                    *(iVar3 + 0x10) = auStack88._0_4_;\n                    *(iVar3 + 0x14) = auStack88._4_4_;\n                    *(iVar3 + 0x18) = uStack80;\n                    *(iVar3 + 0x1c) = uStack76;\n                    *(iVar3 + 0x20) = auStack72._0_4_;\n                    *(iVar3 + 0x24) = auStack72._4_4_;\n                    *(iVar3 + 0x28) = uStack64;\n                    *(iVar3 + 0x2c) = uStack60;\n                    in_RAX[8] = in_RAX[8] + 1;\n                }\n                uVar4 = 1;\n            }\n            return uVar4;\n        }\n        if ((in_RAX[8] + 2 <= *0x527358) && (7 < *0x527360)) {\n            for (iVar9 = 0; iVar9 < 2; iVar9 = iVar9 + 1) {\n                uStack144 = SUB168(in_XMM15 >> 0x40, 0);\n                iVar6 = arg1 + iVar9 * 8;\n                _auStack136 = CONCAT88(uStack144, 8);\n                _auStack120 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar5 = in_RAX[1];\n                iVar10 = *in_RAX;\n                iVar3 = iVar10;\n                if (in_RAX[2] < iVar5 + 1U) {\n                    iVar8 = iVar9;\n                    arg3 = iVar5;\n                    iVar3 = fcn.00445200(iVar5);\n                    in_RAX[2] = iVar5;\n                    if (*0x593680 == 0) {\n                        *in_RAX = iVar3;\n                        iVar5 = iVar10;\n                    }\n                    else {\n                        iVar3 = fcn.0045c5e0(iVar5, iVar8, arg3, in_R9);\n                        iVar5 = iVar10;\n                    }\n                }\n                in_RAX[1] = iVar5 + 1;\n                in_R9 = iVar3 + iVar5 * 0x30;\n                uStack144._0_4_ = iVar6;\n                uStack144._4_4_ = iVar6 >> 0x20;\n                *in_R9 = 4;\n                in_R9[1] = 0;\n                in_R9[2] = uStack144;\n                in_R9[3] = uStack144._4_4_;\n                iVar3 = iVar3 + iVar5 * 0x30;\n                *(iVar3 + 0x10) = auStack136._0_4_;\n                *(iVar3 + 0x14) = auStack136._4_4_;\n                *(iVar3 + 0x18) = uStack128;\n                *(iVar3 + 0x1c) = uStack124;\n                *(iVar3 + 0x20) = auStack120._0_4_;\n                *(iVar3 + 0x24) = auStack120._4_4_;\n                *(iVar3 + 0x28) = uStack112;\n                *(iVar3 + 0x2c) = uStack108;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    if (uVar7 != 0xc) {\n        uVar7 = *unaff_RBX;\n        if ((*0x527358 < in_RAX[8] + 1) || (*0x527360 < uVar7)) {\n            uVar4 = 0;\n        }\n        else {\n            for (iVar9 = 0; iVar9 < 1; iVar9 = iVar9 + 1) {\n                uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n                _auStack56 = CONCAT88(arg1 + iVar9 * uVar7, 4);\n                _auStack40 = CONCAT88(uStack48, uVar7);\n                _auStack24 = CONCAT88(in_RAX[8], SUB168(in_XMM15, 0));\n                iVar6 = in_RAX[1];\n                iVar5 = *in_RAX;\n                iVar3 = iVar5;\n                if (in_RAX[2] < iVar6 + 1U) {\n                    arg2 = uVar7;\n                    iVar10 = iVar9;\n                    iVar8 = iVar6;\n                    iVar3 = fcn.00445200(iVar6);\n                    in_RAX[2] = iVar6;\n                    if (*0x593680 == 0) {\n                        *in_RAX = iVar3;\n                        iVar6 = iVar5;\n                    }\n                    else {\n                        iVar3 = fcn.0045c5e0(iVar6, arg2, iVar10, iVar8);\n                        iVar6 = iVar5;\n                    }\n                }\n                in_RAX[1] = iVar6 + 1;\n                puVar1 = iVar3 + iVar6 * 0x30;\n                *puVar1 = auStack56._0_4_;\n                puVar1[1] = auStack56._4_4_;\n                puVar1[2] = uStack48;\n                puVar1[3] = uStack48._4_4_;\n                iVar3 = iVar3 + iVar6 * 0x30;\n                *(iVar3 + 0x10) = auStack40._0_4_;\n                *(iVar3 + 0x14) = auStack40._4_4_;\n                *(iVar3 + 0x18) = uStack32;\n                *(iVar3 + 0x1c) = uStack28;\n                *(iVar3 + 0x20) = auStack24._0_4_;\n                *(iVar3 + 0x24) = auStack24._4_4_;\n                *(iVar3 + 0x28) = uStack16;\n                *(iVar3 + 0x2c) = uStack12;\n                in_RAX[8] = in_RAX[8] + 1;\n            }\n            uVar4 = 1;\n        }\n        return uVar4;\n    }\ncode_r0x00475e8b:\n    uVar4 = fcn.004764a0(*unaff_RBX, *unaff_RBX, in_R8);\n    return uVar4;\n}\n",
        "token_count": 3002
    },
    "004764a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004764a0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    int64_t arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    ulong uVar9;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RDI < 9) {\n                if ((unaff_SIL == 0) || (arg1 == 8)) {\n                    if (in_RAX[7] + unaff_RDI <= *0x527368) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 0x20) = unaff_RDI;\n                        *(*0x20 + 0x28) = unaff_SIL;\n                        *(*0x20 + 0x18) = arg1;\n                        for (arg2 = 0; arg2 < unaff_RDI; arg2 = arg2 + 1) {\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            uVar9 = 2;\n                            if ((unaff_SIL & 1 << (arg2 & 0x1f) & -(arg2 < 0x20)) != 0) {\n                                uVar9 = 3;\n                            }\n                            *(*0x20 + -0x38) = uVar9;\n                            *(*0x20 + -0x30) = unaff_RBX + arg2 * arg1;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x18) = in_RAX[7];\n                            arg1_00 = in_RAX[1];\n                            arg3_00 = arg1_00 + 1;\n                            iVar2 = *in_RAX;\n                            iVar7 = iVar2;\n                            if (in_RAX[2] < arg3_00) {\n                                *(*0x20 + -0x40) = arg2;\n                                *(*0x20 + -0x88) = 0x476605;\n                                iVar7 = fcn.00445200(arg1_00);\n                                piVar3 = *(*0x20 + 8);\n                                piVar3[2] = arg1_00;\n                                if (*0x593680 == 0) {\n                                    *piVar3 = iVar7;\n                                }\n                                else {\n                                    *(*0x20 + -0x88) = 0x476625;\n                                    iVar7 = fcn.0045c5e0(arg1_00, arg2, arg3_00, arg1);\n                                }\n                                arg2 = *(*0x20 + -0x40);\n                                unaff_SIL = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                arg1 = *(*0x20 + 0x18);\n                                in_RAX = *(*0x20 + 8);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                arg1_00 = iVar2;\n                            }\n                            in_RAX[1] = arg1_00 + 1;\n                            puVar1 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x34);\n                            uVar5 = *(*0x20 + -0x30);\n                            uVar6 = *(*0x20 + -0x2c);\n                            *puVar1 = *(*0x20 + -0x38);\n                            puVar1[1] = uVar4;\n                            puVar1[2] = uVar5;\n                            puVar1[3] = uVar6;\n                            iVar7 = iVar7 + arg1_00 * 0x30;\n                            uVar4 = *(*0x20 + -0x24);\n                            uVar5 = *(*0x20 + -0x20);\n                            uVar6 = *(*0x20 + -0x1c);\n                            *(iVar7 + 0x10) = *(*0x20 + -0x28);\n                            *(iVar7 + 0x14) = uVar4;\n                            *(iVar7 + 0x18) = uVar5;\n                            *(iVar7 + 0x1c) = uVar6;\n                            uVar4 = *(*0x20 + -0x14);\n                            uVar5 = *(*0x20 + -0x10);\n                            uVar6 = *(*0x20 + -0xc);\n                            *(iVar7 + 0x20) = *(*0x20 + -0x18);\n                            *(iVar7 + 0x24) = uVar4;\n                            *(iVar7 + 0x28) = uVar5;\n                            *(iVar7 + 0x2c) = uVar6;\n                            in_RAX[7] = in_RAX[7] + 1;\n                        }\n                        return 1;\n                    }\n                    return 0;\n                }\n                *(*0x20 + -0x88) = 0x476687;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c98d0;\n            *(*0x20 + -0x88) = 0x47669a;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        puVar8[0x28] = unaff_SIL;\n        *(puVar8 + -8) = 0x4766b9;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_SIL = puVar8[0x28];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1595
    },
    "00477120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00477120(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x200 && *0x20 + -0x200 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x280;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((unaff_RSI >> 9 & 1) != 0) {\n                *(*0x20 + -0x1a0) = unaff_RSI;\n                *(*0x20 + -0x180) = unaff_RDI;\n                *(*0x20 + -0x188) = arg1;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x1b1) = *(arg1 + 0x17);\n                *(*0x20 + -0x288) = 0x4771ac;\n                iVar1 = fcn.0047b8a0(unaff_RSI);\n                uVar5 = *(*0x20 + -0x1b1) & 0x1f | *(*0x20 + -0x1a0) & 0x1e0;\n                if (iVar1 == 0x4ca2b0) {\n                    *(*0x20 + -0x1a8) = uVar5;\n                    *(*0x20 + -400) = unaff_RDI;\n                    *(*0x20 + -0x1b0) = 0x47bb20;\n                    *(*0x20 + -0xc0) = in_XMM15;\n                    *(*0x20 + -0x290) = unaff_RBP;\n                    *(*0x20 + -0x288) = 0x47722f;\n                    fcn.0045cd0f();\n                    uVar3 = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x47723d;\n                    fcn.00478340();\n                    *(*0x20 + -0xc0) = *(*0x20 + -0x280);\n                    *(*0x20 + -0x290) = uVar3;\n                    *(*0x20 + -0x288) = 0x47726f;\n                    fcn.0045d046();\n                    *(*0x20 + -0x178) = *(*0x20 + -0xc0);\n                    *(*0x20 + -0x290) = *(*0x20 + -0x290);\n                    *(*0x20 + -0x288) = 0x4772af;\n                    fcn.0045d046();\n                    *(*0x20 + -0x288) = 0x4772bf;\n                    puVar2 = fcn.0040cd00();\n                    *puVar2 = *(*0x20 + -0x1b0);\n                    if (*0x593680 == 0) {\n                        puVar2[1] = *(*0x20 + -0xd0);\n                    }\n                    else {\n                        *(*0x20 + -0x288) = 0x4772eb;\n                        puVar2 = fcn.0045c6e0();\n                    }\n                    *(*0x20 + -0x198) = puVar2;\n                    puVar2[2] = *(*0x20 + -0xe8);\n                    uVar5 = *(*0x20 + -200);\n                    *(puVar2 + 3) = *(*0x20 + -200);\n                    iVar1 = *(*0x20 + -0x1a0) >> 10;\n                    puVar2[4] = iVar1;\n                    puVar2[7] = *(*0x20 + -0x1a8);\n                    if (*0x593680 == 0) {\n                        uVar3 = *(*0x20 + -0x188);\n                        puVar2[5] = uVar3;\n                        puVar2[6] = *(*0x20 + -0x180);\n                    }\n                    else {\n                        uVar3 = *(*0x20 + -0x188);\n                        *(*0x20 + -0x288) = 0x47735b;\n                        fcn.0045c6e0();\n                        *(*0x20 + -0x288) = 0x47736c;\n                        fcn.0045c780(uVar3, uVar5, iVar1);\n                    }\n                    *(*0x20 + -0x288) = 0x477385;\n                    fcn.00479340(uVar3, uVar5, iVar1);\n                    return;\n                }\n                arg1 = 0x4a2040;\n                *(*0x20 + -0x288) = 0x4773c9;\n                fcn.0040a380(0x4a2040);\n            }\n            unaff_RBX = 0x4c99a0;\n            *(*0x20 + -0x288) = 0x4773dc;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = uVar5;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x4773fb;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1506
    },
    "00477420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00477420(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *unaff_RBX;\n    uint64_t uVar4;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack80 = *unaff_RBX;\n    uStack72 = *(unaff_RBX + 1);\n    uStack68 = *(unaff_RBX + 0xc);\n    uStack64 = *(unaff_RBX + 2);\n    uStack60 = *(unaff_RBX + 0x14);\n    uStack56 = *(unaff_RBX + 3);\n    uStack52 = *(unaff_RBX + 0x1c);\n    uStack48 = *(unaff_RBX + 4);\n    uStack44 = *(unaff_RBX + 0x24);\n    uStack40 = *(unaff_RBX + 5);\n    uStack36 = *(unaff_RBX + 0x2c);\n    uStack32 = *(unaff_RBX + 6);\n    uStack28 = *(unaff_RBX + 0x34);\n    uStack24 = *(unaff_RBX + 7);\n    uStack20 = *(unaff_RBX + 0x3c);\n    uStack16 = *(unaff_RBX + 8);\n    uStack12 = *(unaff_RBX + 0x44);\n    iVar2 = 0;\n    while( true ) {\n        if (8 < iVar2) {\n            return;\n        }\n        uVar3 = iVar2 >> 3;\n        if (1 < uVar3) break;\n        uVar4 = iVar2 + uVar3 * -8;\n        if (uVar4 < 0) {\n            fcn.00431c60();\n            break;\n        }\n        if ((1 << (uVar4 & 0x1f) & -(uVar4 < 0x20) & *(in_RAX + 0x18 + uVar3)) == 0) {\n            unaff_RBX[iVar2 + 0x18] = 0;\n        }\n        else {\n            unaff_RBX[iVar2 + 0x18] = (&uStack80)[iVar2];\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.0045ca80(2);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 659
    },
    "00477c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00477c20(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = param_1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x477c45;\n            fcn.00458240();\n            *(*0x20 + -0x20) = 0x477c4a;\n            iVar1 = fcn.004774e0(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar1;\n            }\n            if (uVar2 != 0) {\n                return iVar1 + (-(uVar2 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x477c95;\n            in_RAX = fcn.0045cb40(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x477ca5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        param_1 = uVar2;\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 475
    },
    "00478340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00478340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t *arg1;\n    uint uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong *puVar6;\n    uchar *arg1_00;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x338 && *0x20 + -0x338 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x3b8;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x3c8) = *0x20 + -8;\n            *(*0x20 + -0x3c0) = 0x47838f;\n            iVar2 = fcn.0045cd0f();\n            unaff_RBP = *(*0x20 + -0x3c8);\n            arg2 = *(iVar2 + 0x17) & 0x1f;\n            if (arg2 == 0x13) {\n                if ((unaff_RBX == 0) || (arg2 = *(unaff_RBX + 0x17) & 0x1f,  arg2 != 0x14)) {\n                    *(*0x20 + 200) = unaff_RBX;\n                    *(*0x20 + 0xc0) = iVar2;\n                    *(*0x20 + -0x270) = iVar2;\n                    *(*0x20 + -0x268) = unaff_RBX;\n                    *(*0x20 + -0x280) = iVar2;\n                    *(*0x20 + -0x278) = unaff_RBX;\n                    arg1_00 = *0x20 + -0x280;\n                    *(*0x20 + -0x3c0) = 0x478415;\n                    fcn.00462100(arg1_00);\n                    if (arg1_00 == '\\0') {\n                        uVar7 = *(*0x20 + 200);\n                        *(*0x20 + -0x3c0) = 0x47853b;\n                        fcn.004766e0();\n                        *(*0x20 + 8) = *(*0x20 + -0x3b8);\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47856f;\n                        fcn.0045d046();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        *(*0x20 + -0x2f0) = *(*0x20 + 0xa0) + *(*0x20 + 0x80);\n                        *(*0x20 + -0x3c0) = 0x478597;\n                        puVar3 = fcn.0040cd00();\n                        *(puVar3 + 0x15) = 8;\n                        *puVar3 = *(*0x20 + -0x2f0) + 7U & 0xfffffffffffffff8;\n                        puVar3[1] = **(*0x20 + 0xb0) << 3;\n                        arg1 = *(*0x20 + 0xb0);\n                        if (*arg1 == 0) {\n                            bVar9 = *(*0x20 + 200) == 0;\ncode_r0x0047861d:\n                            *(*0x20 + -0x2a0) = puVar3;\n                            if (bVar9) {\n                                *(*0x20 + -0x3c0) = 0x4786ab;\n                                fcn.00477c20();\n                                uVar4 = 0x4a694b;\n                                param_4 = 1;\n                                *(*0x20 + -0x3c0) = 0x4786d7;\n                                fcn.00448c60(9, arg2, 0x4a694b, 1);\n                            }\n                            else {\n                                *(*0x20 + -0x3c0) = 0x47862f;\n                                uVar4 = fcn.00477c20();\n                                *(*0x20 + -0x288) = uVar4;\n                                *(*0x20 + -0x2e8) = uVar7;\n                                *(*0x20 + -0x3c0) = 0x47864c;\n                                fcn.00477c20();\n                                *(*0x20 + -0x3b8) = 0x4a694b;\n                                *(*0x20 + -0x3b0) = 1;\n                                uVar4 = 0x4a6975;\n                                param_4 = 2;\n                                *(*0x20 + -0x3c0) = 0x47869c;\n                                fcn.00448e40(0xb, arg2, 0x4a6975, 2);\n                            }\n                            *(*0x20 + -0x3c0) = 0x4786e5;\n                            fcn.00477680(0, arg2);\n                            *(*0x20 + -0x3c0) = 0x4786ea;\n                            uVar1 = fcn.00458340();\n                            *(*(*0x20 + -0x2a0) + 0x28) = uVar1;\n                            *(*0x20 + -0x3c0) = 0x478705;\n                            uVar5 = fcn.0040cd00();\n                            *(*0x20 + -0x290) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x478719;\n                            puVar6 = fcn.0040cd00();\n                            *puVar6 = 0x478a20;\n                            if (*0x593680 == 0) {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                puVar6[1] = uVar5;\n                                arg2 = *(*0x20 + -0x290);\n                                *(arg2 + 0x20) = puVar6;\n                            }\n                            else {\n                                uVar5 = *(*0x20 + -0x2a0);\n                                *(*0x20 + -0x3c0) = 0x478757;\n                                fcn.0045c6e0();\n                                arg2 = *(*0x20 + -0x290);\n                                *(*0x20 + -0x3c0) = 0x478768;\n                                fcn.0045c5e0(uVar5, arg2, uVar4, param_4);\n                            }\n                            *(*0x20 + -0x270) = *(*0x20 + 0xc0);\n                            param_3 = *(*0x20 + 200);\n                            *(*0x20 + -0x268) = param_3;\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x4787af;\n                            fcn.0045cd0b();\n                            *(*0x20 + -0xd0) = uVar5;\n                            *(*0x20 + -200) = arg2;\n                            *(*0x20 + -0xc0) = *(*0x20 + 8);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x4787f2;\n                            fcn.0045d046();\n                            uVar4 = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x47880a;\n                            uVar5 = fcn.0040a460();\n                            *(*0x20 + -0x298) = uVar5;\n                            *(*0x20 + -0x3c0) = 0x478826;\n                            fcn.0040a460();\n                            *(*0x20 + -0x3c0) = 0x47884b;\n                            fcn.004623a0(*(*0x20 + -0x298));\n                            *(*0x20 + -0xd0) = in_XMM15;\n                            *(*0x20 + -0x3c8) = uVar4;\n                            *(*0x20 + -0x3c0) = 0x47886f;\n                            iVar2 = fcn.0045cd0b();\n                            unaff_RBP = *(*0x20 + -0x3c8);\n                            if (iVar2 == 0x49d6c0) {\n                                *(*0x20 + -0xd0) = *0x49b980;\n                                *(*0x20 + -0x3c8) = unaff_RBP;\n                                *(*0x20 + -0x3c0) = 0x4788af;\n                                fcn.0045d038();\n                                *(*0x20 + -0x260) = *(*0x20 + -0xd0);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x4788ef;\n                                fcn.0045d038();\n                                *(*0x20 + 8) = *(*0x20 + -0x250);\n                                *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                                *(*0x20 + -0x3c0) = 0x478932;\n                                fcn.0045d046();\n                                return;\n                            }\n                            *(*0x20 + -0x3c0) = 0x478955;\n                            fcn.0040a2a0(0x497ae0);\n                        }\n                        else {\n                            arg2 = *(arg1 + 4);\n                            uVar7 = *(arg1 + 2);\n                            if (arg2 != 0) {\n                                if (*0x593680 == 0) {\n                                    puVar3[4] = uVar7;\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                else {\n                                    *(*0x20 + -0x3c0) = 0x478605;\n                                    puVar3 = fcn.0045c720(arg1, arg2, param_3, param_4);\n                                    bVar9 = *(*0x20 + 200) == 0;\n                                }\n                                goto code_r0x0047861d;\n                            }\n                        }\n                        *(*0x20 + -0x3c0) = 0x47895f;\n                        fcn.0045ca80(arg2);\n                    }\n                    else {\n                        *(*0x20 + -0xd0) = in_XMM15;\n                        *(*0x20 + -0x3c8) = unaff_RBP;\n                        *(*0x20 + -0x3c0) = 0x47844f;\n                        iVar2 = fcn.0045cd0b();\n                        unaff_RBP = *(*0x20 + -0x3c8);\n                        if (iVar2 == 0x49d6c0) {\n                            *(*0x20 + -0xd0) = *0x49b980;\n                            *(*0x20 + -0x3c8) = unaff_RBP;\n                            *(*0x20 + -0x3c0) = 0x47848f;\n                            fcn.0045d038();\n                            *(*0x20 + -0x198) = *(*0x20 + -0xd0);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x4784cf;\n                            fcn.0045d038();\n                            *(*0x20 + 8) = *(*0x20 + -0x188);\n                            *(*0x20 + -0x3c8) = *(*0x20 + -0x3c8);\n                            *(*0x20 + -0x3c0) = 0x478512;\n                            fcn.0045d046();\n                            return;\n                        }\n                    }\n                    *(*0x20 + -0x3c0) = 0x47896e;\n                    fcn.0040a2a0(0x497ae0);\n                }\n                *(*0x20 + -0x3c0) = 0x478976;\n                fcn.00477c20();\n                *(*0x20 + -0x3c0) = 0x47898f;\n                fcn.00448bc0(0x2c);\n                *(*0x20 + -0x3c0) = 0x478994;\n                fcn.0040a660();\n                *(*0x20 + -0x3c0) = 0x4789a5;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x3c0) = 0x4789aa;\n            fcn.00477c20();\n            *(*0x20 + -0x3c0) = 0x4789c5;\n            fcn.00448bc0(0x25);\n            *(*0x20 + -0x3c0) = 0x4789ca;\n            unaff_RBX = fcn.0040a660();\n            *(*0x20 + -0x3c0) = 0x4789d9;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar8 + 0xc0) = in_RAX;\n        *(puVar8 + 200) = unaff_RBX;\n        *(puVar8 + -8) = 0x4789ef;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 0xc0);\n        unaff_RBX = *(puVar8 + 200);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3258
    },
    "00478a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00478a60(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar8 = unaff_RBX;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(arg1 + 8) == 0) {\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar8 = *(arg1 + 0x17) & 0x1f;\n            if (0x14 < uVar8) {\n                if (0x18 < uVar8) {\n                    if (uVar8 == 0x19) {\n                        iVar6 = *(arg1 + 0x40);\n                        *(*0x20 + -0x10) = iVar6;\n                        uVar8 = 0;\n                        while( true ) {\n                            if (iVar6 <= uVar8) {\n                                return;\n                            }\n                            iVar6 = *(arg1 + 0x38);\n                            unaff_RBX = *(arg1 + 0x40);\n                            if (unaff_RBX <= uVar8) break;\n                            *(*0x20 + -0x20) = uVar8;\n                            uVar2 = *(iVar6 + 8 + uVar8 * 0x18);\n                            *(*0x20 + -0x68) = 0x478b25;\n                            fcn.00478a60(uVar2);\n                            uVar8 = *(*0x20 + -0x20) + 1;\n                            iVar6 = *(*0x20 + -0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x68) = 0x478b71;\n                        in_RAX = fcn.0045ca80(unaff_RBX);\n                        goto code_r0x00478b71;\n                    }\n                    if (uVar8 != 0x1a) {\n                        return;\n                    }\n                }\n                break;\n            }\n            if (uVar8 == 0x11) {\n                uVar8 = 0;\n                goto code_r0x00478cd2;\n            }\n            if (uVar8 - 0x12 < 2) break;\n            if (uVar8 != 0x14) {\n                return;\n            }\n            while( true ) {\n                uVar1 = *in_RAX;\n                uVar8 = unaff_RBX >> 3;\n                if (uVar8 <= uVar1) break;\n                if ((uVar1 & 7) == 0) {\n                    uVar7 = *(in_RAX + 4);\n                    uVar3 = *(in_RAX + 2);\n                    uVar8 = uVar3;\n                    if (*(in_RAX + 6) < uVar7 + 1) {\n                        *(*0x20 + -0x68) = 0x478d19;\n                        uVar8 = fcn.00445200(uVar7);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = uVar7;\n                        if (*0x593680 == 0) {\n                            *(in_RAX + 2) = uVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x478d3a;\n                            uVar8 = fcn.0045c5e0(uVar7, in_RAX, unaff_RBX, in_R9);\n                        }\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar7 = uVar3;\n                    }\n                    *(in_RAX + 4) = uVar7 + 1;\n                    *(uVar8 + uVar7) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                if (arg1 <= *in_RAX >> 3) goto code_r0x00478e97;\n                *in_RAX = *in_RAX + 1;\n            }\n            if ((uVar1 & 7) == 0) {\n                uVar7 = *(in_RAX + 4);\n                uVar3 = *(in_RAX + 2);\n                uVar8 = uVar3;\n                if (*(in_RAX + 6) < uVar7 + 1) {\n                    *(*0x20 + -0x68) = 0x478d98;\n                    uVar8 = fcn.00445200(uVar7);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 6) = uVar7;\n                    if (*0x593680 == 0) {\n                        *(in_RAX + 2) = uVar8;\n                        uVar7 = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x478db9;\n                        uVar8 = fcn.0045c5e0(uVar7, in_RAX, unaff_RBX, in_R9);\n                        uVar7 = uVar3;\n                    }\n                }\n                *(in_RAX + 4) = uVar7 + 1;\n                *(uVar8 + uVar7) = 0;\n            }\n            arg1 = *(in_RAX + 4);\n            uVar1 = *in_RAX;\n            in_R9 = uVar1;\n            uVar7 = uVar1 >> 3;\n            if (uVar7 < arg1) {\n                in_R9 = uVar1 & 7;\n                *(*(in_RAX + 2) + uVar7) = *(uVar7 + *(in_RAX + 2)) | 1 << (uVar1 & 7);\n                uVar1 = *in_RAX;\n                *in_RAX = uVar1 + 1;\n                if ((uVar1 + 1 & 7) == 0) {\n                    iVar6 = *(in_RAX + 4);\n                    iVar4 = *(in_RAX + 2);\n                    iVar5 = iVar4;\n                    if (*(in_RAX + 6) < iVar6 + 1U) {\n                        *(*0x20 + -0x68) = 0x478e29;\n                        iVar5 = fcn.00445200(iVar6);\n                        in_RAX = *(*0x20 + 8);\n                        *(in_RAX + 6) = iVar6;\n                        if (*0x593680 == 0) {\n                            *(in_RAX + 2) = iVar5;\n                            iVar6 = iVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x68) = 0x478e4b;\n                            iVar5 = fcn.0045c5e0(iVar6, in_RAX, uVar7, in_R9);\n                            iVar6 = iVar4;\n                        }\n                    }\n                    *(in_RAX + 4) = iVar6 + 1;\n                    *(iVar5 + iVar6) = 0;\n                }\n                arg1 = *(in_RAX + 4);\n                uVar8 = *in_RAX >> 3;\n                if (uVar8 < arg1) {\n                    *(*(in_RAX + 2) + uVar8) = *(uVar8 + *(in_RAX + 2)) | 1 << (*in_RAX & 7);\n                    *in_RAX = *in_RAX + 1;\n                    return;\n                }\n                *(*0x20 + -0x68) = 0x478e8f;\n                fcn.0045ca80(arg1);\n            }\n            *(*0x20 + -0x68) = 0x478e97;\n            fcn.0045ca80(arg1);\ncode_r0x00478e97:\n            *(*0x20 + -0x68) = 0x478e9e;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = uVar8;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x478eb3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00478b76:\n    uVar1 = *in_RAX;\n    if (unaff_RBX >> 3 <= uVar1) {\n        if ((uVar1 & 7) == 0) {\n            iVar6 = *(in_RAX + 4);\n            iVar4 = *(in_RAX + 2);\n            iVar5 = iVar4;\n            if (*(in_RAX + 6) < iVar6 + 1U) {\n                *(*0x20 + -0x68) = 0x478c31;\n                iVar5 = fcn.00445200(iVar6);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 6) = iVar6;\n                if (*0x593680 == 0) {\n                    *(in_RAX + 2) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x478c52;\n                    iVar5 = fcn.0045c5e0(iVar6, in_RAX, unaff_RBX, in_R9);\n                    iVar6 = iVar4;\n                }\n            }\n            *(in_RAX + 4) = iVar6 + 1;\n            *(iVar5 + iVar6) = 0;\n        }\n        uVar8 = *(in_RAX + 2);\n        arg1 = *(in_RAX + 4);\n        uVar7 = *in_RAX >> 3;\n        if (uVar7 < arg1) {\n            *(uVar8 + uVar7) = *(uVar7 + uVar8) | 1 << (*in_RAX & 7);\n            *in_RAX = *in_RAX + 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x478c96;\n            fcn.0045ca80(arg1);\ncode_r0x00478c96:\n            *(*0x20 + -0x68) = 0x478c9d;\n            fcn.0045ca80(arg1);\n            do {\n                *(*0x20 + -0x18) = uVar8;\n                uVar2 = *(arg1 + 0x30);\n                *(*0x20 + -0x68) = 0x478cbb;\n                fcn.00478a60(uVar2);\n                uVar8 = *(*0x20 + -0x18) + 1;\n                arg1 = *(*0x20 + 0x18);\ncode_r0x00478cd2:\n            } while (*(arg1 + 0x40) != uVar8 && uVar8 <= *(arg1 + 0x40));\n        }\n        return;\n    }\n    if ((uVar1 & 7) == 0) {\n        iVar6 = *(in_RAX + 4);\n        iVar4 = *(in_RAX + 2);\n        iVar5 = iVar4;\n        if (*(in_RAX + 6) < iVar6 + 1U) {\n            *(*0x20 + -0x68) = 0x478bb2;\n            iVar5 = fcn.00445200(iVar6);\n            in_RAX = *(*0x20 + 8);\n            *(in_RAX + 6) = iVar6;\n            if (*0x593680 == 0) {\n                *(in_RAX + 2) = iVar5;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x478bd3;\n                iVar5 = fcn.0045c5e0(iVar6, in_RAX, unaff_RBX, in_R9);\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar6 = iVar4;\n        }\n        *(in_RAX + 4) = iVar6 + 1;\n        *(iVar5 + iVar6) = 0;\n    }\n    arg1 = *(in_RAX + 4);\n    uVar8 = *in_RAX >> 3;\n    if (arg1 <= uVar8) goto code_r0x00478c96;\ncode_r0x00478b71:\n    *in_RAX = *in_RAX + 1;\n    goto code_r0x00478b76;\n}\n",
        "token_count": 3007
    },
    "00479160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar fcn.00479160(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((arg1 & 0x1f) == 1) {\n        return *unaff_RBX;\n    }\n    uVar1 = fcn.00479100();\n    puVar2 = fcn.0040cd00();\n    puVar2[1] = unaff_RBX;\n    if (*0x593680 != 0) goto code_r0x004791ed;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.00432ec0();\ncode_r0x004791ed:\n        puVar2 = fcn.0045c6e0(uVar1);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "00479240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00479240(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    code *pcVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    pcVar4 = arg1 & 0x1f;\n    if (pcVar4 == 0x17) {\n        iVar1 = fcn.00477dc0();\n        pcVar4 = *(iVar1 + 0x98);\n        iVar1 = (*pcVar4)();\n        if (iVar1 == 8) {\n            return *unaff_RBX;\n        }\n        unaff_RBX = 0x4c99d0;\n        fcn.00432ec0();\n    }\n    uVar2 = fcn.00479100();\n    puVar3 = fcn.0040cd00();\n    puVar3[1] = unaff_RBX;\n    if (*0x593680 != 0) goto code_r0x00479307;\n    *puVar3 = uVar2;\n    do {\n        puVar3[2] = pcVar4;\n        fcn.00432ec0();\ncode_r0x00479307:\n        puVar3 = fcn.0045c6e0(uVar2);\n    } while( true );\n}\n",
        "token_count": 341
    },
    "00479340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00479340(int64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t arg1_00;\n    uint64_t noname_1_00;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            noname_1_00 = *(arg1 + 0x17) & 0x1f;\n            if (noname_1_00 == 0x14) {\n                noname_1_00 = *(arg1 + 0x38);\n                if (arg3 <= *(arg1 + 0x40) && *(arg1 + 0x40) != arg3) {\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x28) = noname_1_00;\n                    *(*0x20 + -0x80) = 0x4793c5;\n                    puVar2 = fcn.00458240();\n                    if ((*puVar2 & 1) != 0) {\n                        noname_1_00 = **(*0x20 + -0x20);\n                        if (noname_1_00 != 0) {\n                            uVar4 = *(noname_1_00 + 8);\n                            if (*(*0x20 + 0x30) < 100000) {\n                                *(*0x20 + -0x30) = noname_1_00;\n                                *(*0x20 + -0x38) = uVar4;\n                                *(*0x20 + -0x80) = 0x479429;\n                                fcn.00458280();\n                                return *(*0x20 + -0x38);\n                            }\n                            goto code_r0x0047954e;\n                        }\n                        goto code_r0x00479558;\n                    }\n                    goto code_r0x0047959c;\n                }\n            }\n            else {\n                *(*0x20 + -0x80) = 0x479450;\n                iVar3 = fcn.00477ce0();\n                if (*(*0x20 + 0x30) < unaff_RBX) {\n                    iVar5 = *(*0x20 + 0x30) * 0x10;\n                    uVar1 = *(iVar3 + 4 + iVar5);\n                    noname_1_00 = uVar1;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = *(iVar3 + 8 + iVar5);\n                    *(*0x20 + -0x80) = 0x47948a;\n                    puVar2 = fcn.00458240();\n                    arg1_00 = *puVar2;\n                    if ((*puVar2 & 1) != 0) {\n                        *(*0x20 + -0x80) = 0x47949e;\n                        uVar4 = fcn.0040cd00();\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = 0x4794b1;\n                        uVar4 = fcn.004582c0();\n                        if (*0x593680 == 0) {\n                            **(*0x20 + -0x10) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x80) = 0x4794ce;\n                            fcn.0045c5e0(arg1_00, noname_1_00, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x80) = 0x4794dd;\n                        fcn.00458280();\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x80) = 0x479527;\n                    fcn.00448c60(9, noname_1_00, 0x4a9ed6, 0x15);\n                    *(*0x20 + -0x80) = 0x47952c;\n                    fcn.0040a660();\n                    *(*0x20 + -0x80) = 0x47953b;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x80) = 0x47954e;\n                fcn.00432ec0();\ncode_r0x0047954e:\n                *(*0x20 + -0x80) = 0x479558;\n                fcn.0045ca80(100000);\ncode_r0x00479558:\n                *(*0x20 + -0x80) = 0x479588;\n                fcn.00448c60(9, noname_1_00, 0x4ad0b3, 0x21);\n                *(*0x20 + -0x80) = 0x47958d;\n                fcn.0040a660();\n                *(*0x20 + -0x80) = 0x47959c;\n                fcn.00432ec0();\ncode_r0x0047959c:\n                arg1 = 9;\n                unaff_RDI = *(*0x20 + 8);\n                unaff_RSI = *(*0x20 + 0x10);\n                arg3 = 0x4a9ed6;\n                in_R9 = 0x15;\n                *(*0x20 + -0x80) = 0x4795cc;\n                fcn.00448c60(9, noname_1_00, 0x4a9ed6, 0x15);\n                *(*0x20 + -0x80) = 0x4795d1;\n                fcn.0040a660();\n                *(*0x20 + -0x80) = 0x4795e5;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c99f0;\n            *(*0x20 + -0x80) = 0x4795f8;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x47961c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1833
    },
    "0047abc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047abc0(uint64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x13) {\n                if (arg1 == 0x11) {\n                    return in_RAX[8];\n                }\n                if (arg1 != 0x12) {\ncode_r0x0047aca8:\n                    *(*0x20 + -0x28) = 0x47acb4;\n                    puVar2 = fcn.0040cd00();\n                    puVar2[1] = 0x11;\n                    *puVar2 = 0x4a8f88;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x28) = 0x47acde;\n                    fcn.00432ec0();\n                    goto code_r0x0047acde;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x47ac30;\n                    iVar1 = fcn.00457460();\n                    return iVar1;\n                }\n            }\n            else {\n                if (arg1 != 0x15) {\n                    if (arg1 == 0x17) {\n                        return *(unaff_RBX + 8);\n                    }\n                    if (arg1 == 0x18) {\n                        return *(unaff_RBX + 8);\n                    }\n                    goto code_r0x0047aca8;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    *(*0x20 + -0x28) = 0x47ac70;\n                    iVar1 = fcn.004575c0();\n                    return iVar1;\n                }\ncode_r0x0047acde:\n                *(*0x20 + -0x28) = 0x47acf1;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9890;\n            *(*0x20 + -0x28) = 0x47ad05;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47ad1a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 831
    },
    "0047ad40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047ad40(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x47ad70;\n                arg1 = fcn.00457580(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x47adaf;\n                    fcn.0047b100(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x47adcc;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x28) = 0x47addf;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x47adea;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 395
    },
    "0047ae00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047ae00(void)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x28) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x47ae30;\n                arg1 = fcn.004575a0(in_RAX + 0x18);\n                if (arg1 != 0) {\n                    *(*0x20 + -0x28) = 0x47ae6f;\n                    fcn.0047b100(arg1);\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x47ae8c;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x28) = 0x47ae9f;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x47aeaa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "0047aec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0047aec0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *arg2;\n    int64_t **in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg2 = in_RAX[2];\n            if (arg2 != NULL) {\n                *(*0x20 + -0x10) = in_RAX + 3;\n                if (in_RAX[5] == NULL) {\n                    if ((**in_RAX == 8) && ((*in_RAX)[1] != 0)) {\n                        *(*0x20 + -0x30) = 0x47af25;\n                        fcn.004574e0(in_RAX + 3, arg2, arg3, arg4);\ncode_r0x0047af3e:\n                        *(*0x20 + -0x30) = 0x47af48;\n                        uVar2 = fcn.00457580();\n                        return uVar2 & 0xffffffffffffff00 | uVar2 != 0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x47af2f;\n                    iVar1 = fcn.00457580();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x30) = 0x47af3e;\n                        fcn.00457540();\n                        goto code_r0x0047af3e;\n                    }\n                    *(*0x20 + -0x30) = 0x47af6b;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x30) = 0x47af7e;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x30) = 0x47af91;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x47af9c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 620
    },
    "0047afc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0047afc0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar4 = arg1 & 0x1f;\n    if (uVar4 == 0x15) {\n        puVar1 = fcn.0040cd00();\n        puVar1[2] = arg1;\n        if (*0x593680 == 0) {\n            *puVar1 = in_RAX;\n            puVar1[1] = unaff_RBX;\n        }\n        else {\n            iVar2 = fcn.0045c6e0(in_RAX);\n            fcn.0045c700(iVar2 + 8, unaff_RBX, in_R8, in_R9);\n        }\n        return;\n    }\n    uVar3 = fcn.00479100();\n    puVar1 = fcn.0040cd00();\n    puVar1[1] = unaff_RBX;\n    if (*0x593680 != 0) goto code_r0x0047b0ad;\n    *puVar1 = uVar3;\n    do {\n        puVar1[2] = uVar4;\n        fcn.00432ec0();\ncode_r0x0047b0ad:\n        puVar1 = fcn.0045c6e0(uVar3);\n    } while( true );\n}\n",
        "token_count": 399
    },
    "0047b280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047b280(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *puVar2;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((arg1 & 0x1f) == 0x19) {\n        return *(in_RAX + 0x40);\n    }\n    uVar1 = fcn.00479100();\n    puVar2 = fcn.0040cd00();\n    puVar2[1] = unaff_RBX;\n    if (*0x593680 != 0) goto code_r0x0047b30d;\n    *puVar2 = uVar1;\n    do {\n        puVar2[2] = arg1 & 0x1f;\n        fcn.00432ec0();\ncode_r0x0047b30d:\n        puVar2 = fcn.0045c6e0(uVar1);\n    } while( true );\n}\n",
        "token_count": 269
    },
    "0047b360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0047b360(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong *puVar2;\n    uint32_t uVar3;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = arg1;\n            arg1 = uVar3 & 0x1f;\n            *(*0x20 + -0x10) = arg1;\n            if (arg1 < 0x16) {\n                if (arg1 == 0x12) {\ncode_r0x0047b446:\n                    if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                        if ((uVar3 >> 7 & 1) != 0) {\n                            unaff_RBX = *unaff_RBX;\n                        }\n                        return unaff_RBX;\n                    }\n                    *(*0x20 + -0x30) = 0x47b489;\n                    fcn.00432ec0();\ncode_r0x0047b489:\n                    *(*0x20 + -0x30) = 0x47b495;\n                    puVar2 = fcn.0040cd00();\n                    puVar2[1] = 0x15;\n                    *puVar2 = 0x4aa287;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar2[2] = arg1;\n                    *(*0x20 + -0x30) = 0x47b4bf;\n                    fcn.00432ec0();\n                    goto code_r0x0047b4bf;\n                }\n                if (arg1 != 0x13) {\n                    if (arg1 != 0x15) goto code_r0x0047b489;\n                    goto code_r0x0047b446;\n                }\n                if ((uVar3 >> 9 & 1) != 0) {\n                    return 0x47bb20;\n                }\n                if ((*in_RAX == 8) && (in_RAX[1] != 0)) {\n                    if ((uVar3 >> 7 & 1) != 0) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    if (unaff_RBX != NULL) {\n                        unaff_RBX = *unaff_RBX;\n                    }\n                    return unaff_RBX;\n                }\n            }\n            else {\n                if (arg1 != 0x16) {\n                    if (arg1 == 0x17) {\n                        return *unaff_RBX;\n                    }\n                    if (arg1 == 0x1a) goto code_r0x0047b446;\n                    goto code_r0x0047b489;\n                }\n                if (in_RAX[1] != 0) goto code_r0x0047b446;\n                *(*0x20 + -0x18) = *unaff_RBX;\n                *(*0x20 + -0x30) = 0x47b41f;\n                cVar1 = fcn.00457680();\n                if (cVar1 != '\\0') {\n                    return *(*0x20 + -0x18);\n                }\ncode_r0x0047b4bf:\n                *(*0x20 + -0x30) = 0x47b4d2;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9890;\n            *(*0x20 + -0x30) = 0x47b4e5;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x47b4fa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1064
    },
    "0047b520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0047b520(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t iVar8;\n    int64_t unaff_RDI;\n    ulong *in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = arg1;\n            uVar4 = arg1;\n            arg1 = uVar4 & 0x1f;\n            if (arg1 == 0x11) {\n                if ((uVar4 >> 8 & 1) != 0) {\n                    arg1 = *(in_RAX + 0x40);\n                    in_RAX = *(in_RAX + 0x38);\n                    puVar3 = unaff_RBX;\ncode_r0x0047b585:\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= arg1)) {\n                        *(*0x20 + -0x28) = in_RAX;\n                        *(*0x20 + -0x20) = puVar3;\n                        *(*0x20 + -0x38) = arg1;\n                        *(*0x20 + -0x50) = 0x47b5c5;\n                        piVar1 = fcn.0040cd00();\n                        *piVar1 = 0;\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1[1] = *(*0x20 + 0x28) - iVar6;\n                        iVar5 = *(*0x20 + -0x38) - iVar6;\n                        piVar1[2] = iVar5;\n                        if (iVar5 < 1) {\n                            if (*0x593680 == 0) {\n                                *piVar1 = *(*0x20 + -0x20);\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x47b63e;\n                                fcn.0045c700(iVar5, *(*0x20 + -0x20), in_R8, in_R9);\n                            }\n                            iVar8 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            iVar8 = *(*0x20 + -0x28);\n                            iVar6 = iVar6 * **(iVar8 + 0x30) + *(*0x20 + -0x20);\n                            if (*0x593680 == 0) {\n                                *piVar1 = iVar6;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x47b61c;\n                                fcn.0045c700(iVar5, iVar6, *(*0x20 + -0x20), in_R9);\n                            }\n                        }\n                        return iVar8;\n                    }\n                    goto code_r0x0047b754;\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    puVar3 = *unaff_RBX;\n                    arg1 = unaff_RBX[2];\n                    in_R8 = puVar3;\n                    goto code_r0x0047b585;\n                }\n                if (arg1 == 0x18) {\n                    if (((-1 < unaff_RDI) && (unaff_RDI <= unaff_RSI)) && (unaff_RSI <= unaff_RBX[1])) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x18) = in_RAX;\n                        *(*0x20 + -0x50) = 0x47b6b0;\n                        piVar2 = fcn.0040cd00();\n                        iVar6 = *(*0x20 + 0x20);\n                        piVar1 = *(*0x20 + -0x10) + 1;\n                        if (*piVar1 != iVar6 && iVar6 <= *piVar1) {\n                            iVar5 = **(*0x20 + -0x10);\n                            piVar2[1] = *(*0x20 + 0x28) - iVar6;\n                            iVar5 = iVar5 + iVar6;\n                            if (*0x593680 == 0) {\n                                *piVar2 = iVar5;\n                            }\n                            else {\n                                *(*0x20 + -0x50) = 0x47b6ef;\n                                fcn.0045c700(iVar6, iVar5, in_R8, in_R9);\n                            }\n                        }\n                        return *(*0x20 + -0x18);\n                    }\n                    *(*0x20 + -0x50) = 0x47b719;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x30) = arg1;\n                *(*0x20 + -0x50) = 0x47b72a;\n                puVar3 = fcn.0040cd00();\n                puVar3[1] = 0x13;\n                *puVar3 = 0x4a9992;\n                arg1 = *(*0x20 + -0x30);\n                puVar3[2] = arg1;\n                *(*0x20 + -0x50) = 0x47b754;\n                fcn.00432ec0();\ncode_r0x0047b754:\n                *(*0x20 + -0x50) = 0x47b767;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9960;\n            *(*0x20 + -0x50) = 0x47b77a;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x47b799;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1671
    },
    "0047c6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0047c6c0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RSI;\n    uint64_t uVar3;\n    uint64_t unaff_RDI;\n    int64_t arg1_00;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RDI - arg1 == 1) {\n        while (uVar2 = unaff_RSI,  unaff_RDI < uVar2) {\n            uStack24 = unaff_RDI + uVar2 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            unaff_RSI = uStack24;\n            if (cVar1 != '\\0') {\n                unaff_RDI = uStack24 + 1;\n                unaff_RSI = uVar2;\n            }\n        }\n        while (arg1 < unaff_RDI - 1) {\n            uStack16 = arg1 + 1;\n            (**(in_RAX + 0x28))(uStack16);\n            arg1 = uStack16;\n        }\n        return;\n    }\n    uStack16 = unaff_RDI;\n    if (unaff_RSI - unaff_RDI != 1) {\n        uStack24 = unaff_RSI + arg1 >> 1;\n        iVar4 = unaff_RDI + uStack24;\n        uVar2 = unaff_RDI;\n        arg1_00 = arg1;\n        if (uStack24 < unaff_RDI) {\n            uVar2 = uStack24;\n            arg1_00 = iVar4 - unaff_RSI;\n        }\n        while (uVar3 = uVar2,  arg1_00 < uVar3) {\n            uVar2 = arg1_00 + uVar3 >> 1;\n            cVar1 = (**(in_RAX + 0x20))();\n            if (cVar1 == '\\0') {\n                arg1_00 = uVar2 + 1;\n                uVar2 = uVar3;\n            }\n        }\n        iVar4 = iVar4 - arg1_00;\n        if ((arg1_00 < uStack16) && (uStack16 < iVar4)) {\n            fcn.0047ca60(arg1_00);\n        }\n        if ((arg1 < arg1_00) && (arg1_00 < uStack24)) {\n            fcn.0047c6c0(arg1);\n        }\n        if ((uStack24 < iVar4) && (iVar4 < unaff_RSI)) {\n            fcn.0047c6c0(uStack24);\n        }\n        return;\n    }\n    while (uVar2 = unaff_RDI,  arg1 < uVar2) {\n        uStack24 = arg1 + uVar2 >> 1;\n        cVar1 = (**(in_RAX + 0x20))(uStack24);\n        unaff_RDI = uStack24;\n        if (cVar1 == '\\0') {\n            arg1 = uStack24 + 1;\n            unaff_RDI = uVar2;\n        }\n    }\n    for (; arg1 < uStack16; uStack16 = uStack16 - 1) {\n        (**(in_RAX + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 812
    },
    "0047cf20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0047cf20(ulong arg1)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    ulong uVar3;\n    int64_t arg3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t noname_0;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t arg1_01;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    while (&iStack56 < *(unaff_R14 + 0x10) || &iStack56 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iStack24 = unaff_RBX;\n    uStack16 = in_RAX;\n    iVar2 = fcn.0047b8a0(arg1);\n    iVar2 = (**(iVar2 + 0x98))();\n    if (iVar2 != 0x15) {\n        return NULL;\n    }\n    arg1_00 = fcn.0047abc0(arg1);\n    iStack32 = fcn.00445120(arg1_00);\n    iStack40 = fcn.00445120(arg1_00);\n    uStack48 = fcn.0047afc0(arg1);\n    noname_0 = 0;\n    iVar2 = iStack40;\n    uVar9 = 0;\n    uVar7 = arg1_00;\n    iStack56 = iStack32;\n    while (uVar6 = noname_0,  cVar1 = fcn.0047aec0(noname_0, arg1_00, iStack56, in_R9),  cVar1 != '\\0') {\n        uVar3 = fcn.0047ad40();\n        iVar4 = iStack56;\n        uVar10 = uVar9 + 1;\n        iVar8 = iVar2;\n        arg3 = iStack56;\n        if (uVar7 < uVar10) {\n            uVar7 = uVar9;\n            iStack24 = iVar2;\n            uStack16 = uVar3;\n            arg3 = fcn.00445200(uVar9);\n            uVar10 = iVar4 + 1;\n            uVar3 = uStack16;\n            iVar8 = iStack24;\n        }\n        arg2 = uVar9 * 3;\n        *(arg3 + 0x10 + uVar9 * 0x18) = uVar6;\n        arg1_01 = arg3 + uVar9 * 0x18;\n        iVar4 = arg3 + uVar9 * 0x18 + 8;\n        iStack56 = arg3;\n        if (*0x593680 == 0) {\n            *(arg3 + uVar9 * 0x18) = uVar3;\n            *(arg3 + 8 + uVar9 * 0x18) = iVar8;\n        }\n        else {\n            fcn.0045c5e0(arg1_01, arg2, arg3, iVar4);\n            fcn.0045c720(arg1_01, arg2, arg3, iVar4);\n        }\n        uVar3 = fcn.0047ae00();\n        uVar6 = noname_0 + 1;\n        if (arg1_00 < uVar6) {\n            arg1_00 = noname_0;\n            iStack24 = iVar8;\n            uStack16 = uVar3;\n            iVar4 = fcn.00445200(noname_0);\n            uVar6 = iVar2 + 1;\n            uVar3 = uStack16;\n            iVar8 = iStack24;\n            iVar2 = iVar4;\n        }\n        *(iVar2 + 0x10 + noname_0 * 0x18) = arg1_01;\n        iVar4 = iVar2 + noname_0 * 0x18;\n        in_R9 = iVar2 + noname_0 * 0x18 + 8;\n        uVar9 = uVar10;\n        if (*0x593680 == 0) {\n            *(iVar2 + noname_0 * 0x18) = uVar3;\n            *(iVar2 + 8 + noname_0 * 0x18) = iVar8;\n            noname_0 = uVar6;\n        }\n        else {\n            fcn.0045c5e0(iVar4, arg1_00, iVar2, in_R9);\n            fcn.0045c720(iVar4, arg1_00, iVar2, in_R9);\n            noname_0 = uVar6;\n        }\n    }\n    piVar5 = fcn.0040cd00();\n    piVar5[1] = uVar9;\n    piVar5[2] = uVar7;\n    if (*0x593680 == 0) {\n        *piVar5 = iStack56;\n    }\n    else {\n        piVar5 = fcn.0045c6e0(iStack56);\n    }\n    piVar5[4] = noname_0;\n    piVar5[5] = arg1_00;\n    if (*0x593680 == 0) {\n        piVar5[3] = iVar2;\n    }\n    else {\n        piVar5 = fcn.0045c6e0(iVar2);\n    }\n    fcn.0047c500();\n    return piVar5;\n}\n",
        "token_count": 1299
    },
    "0047e120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0047e120(ulong arg1, ulong noname_1, uint64_t arg3)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    uint64_t unaff_RDI;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    uint64_t uVar3;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar2 = arg1;\n            uVar3 = uVar2 & 0x1f;\n            *(*0x20 + -0x10) = uVar3;\n            uVar5 = arg3;\n            if (uVar3 < 0x15) {\n                unaff_RDI = uVar3 - 0x12;\n                if (unaff_RDI < 2) goto code_r0x0047e192;\n                if (uVar3 == 0x14) {\ncode_r0x0047e17f:\n                    unaff_RBX = *unaff_RBX;\n                    goto code_r0x0047e1ab;\n                }\n            }\n            else {\n                if (0x16 < uVar3) {\n                    if (uVar3 == 0x17) goto code_r0x0047e17f;\n                    if (uVar3 != 0x1a) goto code_r0x0047e32f;\n                }\ncode_r0x0047e192:\n                if ((uVar2 >> 9 & 1) != 0) {\ncode_r0x0047e240:\n                    arg3 = uVar5 & 0x1f;\n                    *(*0x20 + -0x10) = arg3;\n                    if (arg3 < 0x15) {\n                        if (1 < arg3 - 0x12) {\n                            if (arg3 == 0x14) {\ncode_r0x0047e274:\n                                unaff_RSI = *unaff_RSI;\n                                goto code_r0x0047e29b;\n                            }\ncode_r0x0047e2c1:\n                            *(*0x20 + -0x28) = 0x47e2cd;\n                            puVar1 = fcn.0040cd00();\n                            puVar1[1] = 0x13;\n                            *puVar1 = 0x4a997f;\n                            puVar1[2] = *(*0x20 + -0x10);\n                            *(*0x20 + -0x28) = 0x47e2f7;\n                            fcn.00432ec0();\n                            goto code_r0x0047e2f7;\n                        }\n                    }\n                    else if (0x16 < arg3) {\n                        if (arg3 == 0x17) goto code_r0x0047e274;\n                        if (arg3 != 0x1a) goto code_r0x0047e2c1;\n                    }\n                    if ((uVar5 >> 9 & 1) != 0) {\n                        return 0;\n                    }\n                    if ((uVar5 >> 7 & 1) != 0) {\n                        unaff_RSI = *unaff_RSI;\n                    }\ncode_r0x0047e29b:\n                    if (unaff_RSI != NULL) {\n                        return 0;\n                    }\n                    return 1;\n                }\n                if ((uVar2 >> 7 & 1) != 0) {\n                    unaff_RBX = *unaff_RBX;\n                }\ncode_r0x0047e1ab:\n                if (unaff_RBX != NULL) goto code_r0x0047e240;\n                arg3 = uVar5 & 0x1f;\n                *(*0x20 + -0x10) = arg3;\n                if (arg3 < 0x15) {\n                    if (arg3 - 0x12 < 2) goto code_r0x0047e1ff;\n                    if (arg3 == 0x14) {\ncode_r0x0047e1ec:\n                        unaff_RSI = *unaff_RSI;\n                        goto code_r0x0047e214;\n                    }\n                }\n                else {\n                    if (arg3 < 0x17) {\ncode_r0x0047e1ff:\n                        if ((uVar5 >> 9 & 1) == 0) {\n                            if ((uVar5 >> 7 & 1) != 0) {\n                                unaff_RSI = *unaff_RSI;\n                            }\ncode_r0x0047e214:\n                            if (unaff_RSI == NULL) {\n                                return 0;\n                            }\n                        }\n                        return 0xffffffffffffffff;\n                    }\n                    if (arg3 == 0x17) goto code_r0x0047e1ec;\n                    if (arg3 == 0x1a) goto code_r0x0047e1ff;\n                }\ncode_r0x0047e2f7:\n                *(*0x20 + -0x28) = 0x47e305;\n                puVar1 = fcn.0040cd00();\n                puVar1[1] = 0x13;\n                *puVar1 = 0x4a997f;\n                puVar1[2] = *(*0x20 + -0x10);\n                *(*0x20 + -0x28) = 0x47e32f;\n                fcn.00432ec0();\n            }\ncode_r0x0047e32f:\n            *(*0x20 + -0x28) = 0x47e33b;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4a997f;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x47e365;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x47e389;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1726
    },
    "0047f380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0047f380(void)\n\n{\n    int16_t *in_RAX;\n    ulong uVar1;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX != NULL) {\n        arg1 = 0;\n        for (; *in_RAX != 0; in_RAX = in_RAX + 1) {\n            arg1 = arg1 + 1;\n        }\n        fcn.00464620(arg1);\n        uVar1 = fcn.004493a0(arg1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00480740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00480740(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar1 = *in_RAX,  (uVar1 & 0x7ffff8) != 0) {\n                LOCK();\n                uVar2 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ uVar1 - 8);\n                if (uVar1 == uVar2) {\n                    if ((uVar1 - 8 & 0x7ffff9) != 1) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x20) = 0x480793;\n                    uVar3 = fcn.004811a0();\n                    return uVar3;\n                }\n            }\n            *(*0x20 + -0x20) = 0x4807be;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4807c9;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 425
    },
    "004812c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004812c0(void)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    cVar1 = fcn.00480620();\n    if (cVar1 == '\\0') {\n        uVar2 = *0x53f310;\n        if (*(in_RAX + 0x21f) == '\\0') {\n            uVar2 = 0x4c9d98;\n        }\n        return uVar2;\n    }\n    if (*(in_RAX + 0x220) == '\\x04') {\n        fcn.00465f80(*(in_RAX + 0x10));\n    }\n    if (*(in_RAX + 0x1b8) != 0) {\n        fcn.00457ae0();\n    }\n    uVar2 = fcn.00480740();\n    fcn.00458480(in_RAX + 0x218);\n    return uVar2;\n}\n",
        "token_count": 271
    },
    "00481640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00481640(void)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint8_t *in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    int64_t *arg1;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint8_t uVar11;\n    int64_t *piVar12;\n    int64_t in_R11;\n    int64_t unaff_R14;\n    int64_t *piStack80;\n    int64_t iStack24;\n    uint8_t *puStack16;\n    \n    while (piVar10 = &iStack24,  piVar10 < *(unaff_R14 + 0x10) || piVar10 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar5 = NULL;\n    piVar4 = NULL;\n    iVar6 = 0;\n    arg1 = NULL;\n    uVar8 = 0;\n    do {\n        if (unaff_RBX == 0) {\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445200(arg1);\n                    piVar10 = iVar6 + 1;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n            }\n            return iVar6;\n        }\n        uVar1 = *in_RAX;\n        uVar9 = uVar8;\n        iStack24 = unaff_RBX;\n        puStack16 = in_RAX;\n        if (uVar1 < 0x21) {\n            if (((uVar1 == 9) || (uVar1 == 0x20)) && (uVar8 == 0)) {\n                for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                    piVar10 = arg1 + 1;\n                    iVar3 = iVar6;\n                    if (piVar4 < piVar10) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00445200(arg1);\n                        piVar10 = iVar6 + 1;\n                    }\n                    *(iVar3 + arg1) = 0x5c;\n                    arg1 = piVar10;\n                    iVar6 = iVar3;\n                }\n                return iVar6;\n            }\ncode_r0x00481802:\n            for (; 0 < piVar5; piVar5 = piVar5 - 1) {\n                piVar12 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445200(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                }\n                *(iVar3 + arg1) = 0x5c;\n                arg1 = piVar12;\n                iVar6 = iVar3;\n            }\n            piVar12 = arg1 + 1;\n            iVar3 = iVar6;\n            if (piVar4 < piVar12) {\n                piVar4 = arg1;\n                iVar3 = fcn.00445200(arg1);\n                piVar12 = iVar6 + 1;\n                uVar9 = uVar8 & 0xff;\n                in_RAX = puStack16;\n                unaff_RBX = iStack24;\n            }\n            *(iVar3 + arg1) = uVar1;\n            piVar5 = NULL;\n            iVar6 = iVar3;\n        }\n        else {\n            if (uVar1 == 0x22) {\n                in_R11 = piVar5 / 2;\n                piVar2 = uVar1;\n                piVar12 = piVar5;\n                piStack80 = piVar5;\n                goto code_r0x0048187f;\n            }\n            if (uVar1 != 0x5c) goto code_r0x00481802;\n            piVar5 = piVar5 + 1;\n            piVar12 = arg1;\n        }\n        while (unaff_RBX == 0) {\n            in_RAX = fcn.0045cb40(0);\n            iVar3 = iVar6;\n            while( true ) {\n                *(iVar3 + arg1) = 0x5c;\n                in_R11 = in_R11 + -1;\n                arg1 = piVar10;\n                iVar6 = iVar3;\n                piVar2 = piVar5;\ncode_r0x0048187f:\n                piVar5 = piVar2;\n                uVar7 = uVar9;\n                if (in_R11 < 1) break;\n                piVar10 = arg1 + 1;\n                iVar3 = iVar6;\n                if (piVar4 < piVar10) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445200(arg1);\n                    piVar10 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    piVar5 = uVar1;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    piVar12 = piStack80;\n                }\n            }\n            if ((piVar12 & 1) == 0) {\n                piVar12 = arg1;\n                if (((uVar9 != '\\0') && (1 < unaff_RBX)) && (in_RAX[1] == 0x22)) {\n                    piVar12 = arg1 + 1;\n                    iVar3 = iVar6;\n                    uVar11 = piVar5;\n                    if (piVar4 < piVar12) {\n                        piVar4 = arg1;\n                        iVar3 = fcn.00445200(arg1);\n                        piVar12 = iVar6 + 1;\n                        uVar7 = uVar8;\n                        in_RAX = puStack16;\n                        unaff_RBX = iStack24;\n                        uVar11 = uVar1;\n                    }\n                    *(iVar3 + arg1) = uVar11;\n                    in_RAX = in_RAX + 1;\n                    unaff_RBX = unaff_RBX + -1;\n                    iVar6 = iVar3;\n                }\n                uVar9 = uVar7 ^ 1;\n            }\n            else {\n                piVar12 = arg1 + 1;\n                uVar11 = piVar5;\n                if (piVar4 < piVar12) {\n                    piVar4 = arg1;\n                    iVar3 = fcn.00445200(arg1);\n                    piVar12 = iVar6 + 1;\n                    uVar9 = uVar8 & 0xff;\n                    in_RAX = puStack16;\n                    unaff_RBX = iStack24;\n                    iVar6 = iVar3;\n                    uVar11 = uVar1;\n                }\n                *(iVar6 + arg1) = uVar11;\n            }\n            piVar5 = NULL;\n        }\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n        arg1 = piVar12;\n        uVar8 = uVar9;\n        in_R11 = unaff_RBX;\n    } while( true );\n}\n",
        "token_count": 1705
    },
    "00481a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00481a80(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t arg2;\n    uint64_t uVar4;\n    uint64_t arg1;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1 = 0;\n    uVar4 = 0;\n    iVar6 = 0;\n    while (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        if ((uVar1 == 0x20) || (uVar1 == 9)) {\n            in_RAX = in_RAX + (-(unaff_RBX + -1) >> 0x3f & 1);\n            unaff_RBX = unaff_RBX + -1;\n        }\n        else {\n            uVar2 = fcn.00481640();\n            uVar3 = fcn.00448f60(unaff_RBX);\n            uVar7 = uVar4 + 1;\n            arg2 = iVar6;\n            if (arg1 < uVar7) {\n                arg1 = uVar4;\n                arg2 = fcn.00445200(uVar4);\n                uVar7 = iVar6 + 1;\n            }\n            iVar5 = uVar4 * 0x10;\n            *(arg2 + 8 + iVar5) = uVar2;\n            in_RAX = uVar1;\n            uVar4 = uVar7;\n            unaff_RBX = iVar6;\n            if (*0x593680 == 0) {\n                *(arg2 + iVar5) = uVar3;\n                iVar6 = arg2;\n            }\n            else {\n                fcn.0045c5e0(arg1, arg2, arg2 + iVar5, in_R9);\n                iVar6 = arg2;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 507
    },
    "004824a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004824a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t **in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    ulong arg2;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 1) {\n                return;\n            }\n            piVar1 = *in_RAX;\n            uVar6 = piVar1[1];\n            arg2_00 = piVar1[2];\n            iVar3 = *piVar1;\n            arg1 = unaff_RBX + uVar6;\n            if (arg2_00 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = arg1;\n                *(*0x20 + -0x20) = uVar6;\n                iVar3 = unaff_RBX + arg2_00 * 2;\n                *(*0x20 + -0x18) = iVar3;\n                *(*0x20 + -0x48) = 0x482515;\n                iVar3 = fcn.00445120(iVar3);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = (*in_RAX)[1];\n                iVar5 = *(*0x20 + -0x18);\n                if (iVar2 < *(*0x20 + -0x18)) {\n                    iVar5 = iVar2;\n                }\n                if (iVar3 != **in_RAX) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x48) = 0x482545;\n                    fcn.0045d3c0(iVar5);\n                    iVar3 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg1 = *(*0x20 + -0x28);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar6 = *(*0x20 + -0x20);\n                arg2_00 = *(*0x20 + -0x18);\n            }\n            if (*(in_RAX + 0xe) == '\\0') {\n                arg2 = 0x20;\n            }\n            else {\n                arg2 = 0x30;\n            }\n            if (arg1 <= arg2_00) {\n                if (uVar6 <= arg1) {\n                    iVar2 = iVar3 + (uVar6 & uVar6 - arg2_00 >> 0x3f);\n                    for (iVar5 = 0; iVar5 < unaff_RBX; iVar5 = iVar5 + 1) {\n                        *(iVar2 + iVar5) = arg2;\n                    }\n                    piVar1 = *in_RAX;\n                    piVar1[1] = arg1;\n                    piVar1[2] = arg2_00;\n                    if (*0x593680 == 0) {\n                        *piVar1 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x4825d3;\n                        fcn.0045c740(arg1, arg2, iVar2, arg2_00);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x4825e5;\n                fcn.0045cb40(arg1);\n            }\n            *(*0x20 + -0x48) = 0x4825ed;\n            in_RAX = fcn.0045cb00(arg1, arg2_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4825fd;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1052
    },
    "00482620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00482620(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.0046c020(unaff_RDI);\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.004824a0();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00445200(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045d3c0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x593680 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c5e0(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00445200(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045d3c0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x593680 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c6e0(uVar3);\n            }\n            fcn.004824a0();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00445200(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045d3c0(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x593680 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045c5e0(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 788
    },
    "004828e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004828e0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(in_RAX + 1) != '\\0') && (in_RAX[3] != 0)) {\n        fcn.0046c180();\n        if (*(in_RAX + 10) == '\\0') {\n            fcn.004824a0();\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00445200(uVar4);\n                uVar5 = uVar4;\n            }\n            uVar4 = uVar5;\n            fcn.0045d3c0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x593680 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c5e0(arg1, uVar5, uVar4, in_R9);\n            }\n        }\n        else {\n            puVar2 = *in_RAX;\n            uVar4 = puVar2[1];\n            uVar1 = arg1 + uVar4;\n            uVar3 = *puVar2;\n            uVar5 = puVar2[2];\n            if (puVar2[2] < uVar1) {\n                uVar3 = fcn.00445200(uVar4);\n                uVar5 = uVar4;\n            }\n            fcn.0045d3c0(arg1);\n            puVar2[1] = uVar1;\n            puVar2[2] = uVar5;\n            if (*0x593680 == 0) {\n                *puVar2 = uVar3;\n            }\n            else {\n                fcn.0045c6e0(uVar3);\n            }\n            fcn.004824a0();\n        }\n        return;\n    }\n    puVar2 = *in_RAX;\n    uVar4 = puVar2[1];\n    uVar1 = uVar4 + arg1;\n    uVar5 = puVar2[2];\n    uVar3 = *puVar2;\n    if (uVar5 < uVar1) {\n        uVar5 = uVar4;\n        uVar3 = fcn.00445200(uVar4);\n    }\n    arg4 = uVar3;\n    fcn.0045d3c0(arg1);\n    puVar2[1] = uVar1;\n    puVar2[2] = uVar5;\n    if (*0x593680 == 0) {\n        *puVar2 = uVar3;\n    }\n    else {\n        fcn.0045c5e0(arg1, uVar5, uVar4, arg4);\n    }\n    return;\n}\n",
        "token_count": 778
    },
    "00482c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00482c20(void)\n\n{\n    int64_t arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int32_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar2 = in_RAX + 0x28;\n            if ((*(in_RAX + 9) == '\\0') || (iVar5 = *(in_RAX + 0x20),  iVar5 < 5)) {\n                arg1_00 = 0x44;\n                iVar5 = 4;\n            }\n            else {\n                arg1 = iVar5 + 9;\n                if (arg1 < 0x45) {\n                    arg1_00 = 0x44;\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar5;\n                    *(*0x20 + -0x30) = arg1;\n                    *(*0x20 + -0x60) = 0x482c86;\n                    iVar2 = fcn.00445120(arg1);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x30);\n                    in_RAX = *(*0x20 + 8);\n                }\n            }\n            *(*0x20 + -0x20) = arg1_00;\n            *(*0x20 + -0x10) = iVar2;\n            *(*0x20 + -0x28) = iVar5;\n            if (*(in_RAX + 0xc) == '\\0') {\n                cVar1 = '\\0';\n            }\n            else if (unaff_RBX < 0x110000) {\n                *(*0x20 + -0x60) = 0x482cd5;\n                cVar1 = fcn.00471860();\n                arg1_00 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar5 = *(*0x20 + -0x28);\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            arg1_01 = arg1_00;\n            if (cVar1 == '\\0') {\ncode_r0x00482e24:\n                for (; 0xf < unaff_RBX; unaff_RBX = unaff_RBX >> 4) {\n                    uVar7 = arg1_00 - 1;\n                    uVar6 = unaff_RBX & 0xf;\n                    if (arg1_01 <= uVar7) goto code_r0x00482f1f;\n                    *((arg1_00 - 1) + iVar2) = *(uVar6 + 0x4a8d46);\n                    iVar5 = iVar5 + -1;\n                    arg1_00 = uVar7;\n                }\n                uVar7 = arg1_00 - 1;\n                if (uVar7 < arg1_01) {\n                    *((arg1_00 - 1) + iVar2) = *(unaff_RBX + 0x4a8d46);\n                    while (iVar5 = iVar5 + -1,  0 < iVar5) {\n                        if (arg1_01 <= uVar7 - 1) goto code_r0x00482f09;\n                        *((uVar7 - 1) + iVar2) = 0x30;\n                        uVar7 = uVar7 - 1;\n                    }\n                    if (uVar7 - 1 < arg1_01) {\n                        *((uVar7 - 1) + iVar2) = 0x2b;\n                        if (uVar7 - 2 < arg1_01) {\n                            *((uVar7 - 2) + iVar2) = 0x55;\n                            *(*0x20 + -0x31) = *(in_RAX + 0xe);\n                            *(in_RAX + 0xe) = 0;\n                            *(*0x20 + -0x60) = 0x482edc;\n                            fcn.00482620((arg1_01 - uVar7) + 2);\n                            *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x31);\n                            return;\n                        }\n                        *(*0x20 + -0x60) = 0x482efe;\n                        fcn.0045ca80(arg1_01);\n                    }\n                    *(*0x20 + -0x60) = 0x482f09;\n                    fcn.0045ca80(arg1_01);\ncode_r0x00482f09:\n                    *(*0x20 + -0x60) = 0x482f14;\n                    fcn.0045ca80(arg1_01);\n                }\n                *(*0x20 + -0x60) = 0x482f1f;\n                fcn.0045ca80(arg1_01);\n                uVar6 = unaff_RBX;\ncode_r0x00482f1f:\n                *(*0x20 + -0x60) = 0x482f2a;\n                fcn.0045ca80(arg1_01);\ncode_r0x00482f2a:\n                *(*0x20 + -0x60) = 0x482f2f;\n                fcn.0045ca80(arg1_01);\ncode_r0x00482f2f:\n                *(*0x20 + -0x60) = 0x482f34;\n                fcn.0045ca80(arg1_01);\n                unaff_RBX = uVar6;\n                arg1_00 = uVar7;\ncode_r0x00482f34:\n                *(*0x20 + -0x60) = 0x482f3f;\n                fcn.0045cb40(arg1_00);\n            }\n            else if (arg1_00 - 1 < arg1_00) {\n                *((arg1_00 - 1) + iVar2) = 0x27;\n                iVar3 = unaff_RBX;\n                if (iVar3 < 0) {\n                    iVar5 = -1;\n                }\n                else if (iVar3 < 0x80) {\n                    iVar5 = 1;\n                }\n                else if (iVar3 < 0x800) {\n                    iVar5 = 2;\n                }\n                else if (iVar3 - 0xd800U < 0x800) {\n                    iVar5 = -1;\n                }\n                else if (iVar3 < 0x10000) {\n                    iVar5 = 3;\n                }\n                else if (iVar3 < 0x110000) {\n                    iVar5 = 4;\n                }\n                else {\n                    iVar5 = -1;\n                }\n                iVar5 = arg1_00 - iVar5;\n                if (iVar5 - 1U <= arg1_00) {\n                    *(*0x20 + -0x18) = iVar5;\n                    uVar6 = (arg1_00 - iVar5) + 1;\n                    uVar7 = -uVar6 >> 0x3f;\n                    *(*0x20 + -0x60) = 0x482dc5;\n                    fcn.0046bec0(uVar6, iVar2, uVar7, iVar5 - 1U & uVar7);\n                    iVar5 = *(*0x20 + -0x18);\n                    arg1_01 = *(*0x20 + -0x20);\n                    if (iVar5 - 2U < arg1_01) {\n                        iVar2 = *(*0x20 + -0x10);\n                        *(iVar5 + -2 + iVar2) = 0x27;\n                        arg1_00 = iVar5 - 3;\n                        if (arg1_00 < arg1_01) {\n                            *(iVar5 + -3 + iVar2) = 0x20;\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x00482e24;\n                        }\n                        goto code_r0x00482f2a;\n                    }\n                    goto code_r0x00482f2f;\n                }\n                goto code_r0x00482f34;\n            }\n            *(*0x20 + -0x60) = 0x482f47;\n            in_RAX = fcn.0045ca80(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x482f57;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2185
    },
    "00482f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00482f80(uint64_t arg1, uint64_t noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint uVar7;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t arg1_00;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t unaff_R12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    \ncode_r0x00482f80:\n    uVar7 = unaff_RSI;\n    puVar6 = *0x20;\n    arg1_00 = unaff_R12;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x28) = arg3;\n        if (unaff_RDI == '\\0') {\n            noname_1 = 0;\n        }\n        else {\n            noname_1 = noname_1 & 0xffffffffffffff00 | unaff_RBX < 0;\n        }\n        if (noname_1 != '\\0') {\n            unaff_RBX = -unaff_RBX;\n        }\n        *(*0x20 + -0x21) = noname_1;\n        *(*0x20 + 8) = in_RAX;\n        iVar3 = in_RAX + 0x28;\n        if ((*(in_RAX + 8) == '\\0') && (*(in_RAX + 9) == '\\0')) {\n            arg1_00 = 0x44;\n        }\n        else {\n            iVar9 = *(in_RAX + 0x18) + *(in_RAX + 0x20) + 3;\n            if (iVar9 < 0x45) {\n                arg1_00 = 0x44;\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x24) = uVar7;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + 0x30) = arg4;\n                *(*0x20 + 0x28) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x48301c;\n                iVar3 = fcn.00445120(iVar9);\n                arg1 = *(*0x20 + 0x18);\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RSI = *(*0x20 + 0x24);\n                arg3 = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x30);\n                arg1_00 = *(*0x20 + -0x20);\n                in_RAX = *(*0x20 + 8);\n            }\n        }\n        if (*(in_RAX + 9) == '\\0') {\n            if ((*(in_RAX + 0xe) == '\\0') || (*(in_RAX + 8) == '\\0')) {\n                iVar9 = 0;\n            }\n            else {\n                iVar9 = *(in_RAX + 0x18);\n                if (((noname_1 != '\\0') || (*(in_RAX + 0xb) != '\\0')) || (*(in_RAX + 0xd) != '\\0')) {\n                    iVar9 = iVar9 + -1;\n                }\n            }\n        }\n        else {\n            iVar9 = *(in_RAX + 0x20);\n            if ((iVar9 == 0) && (unaff_RBX == 0)) {\n                *(*0x20 + -0x22) = *(in_RAX + 0xe);\n                *(in_RAX + 0xe) = 0;\n                *(*0x20 + -0x50) = 0x48307a;\n                fcn.004824a0();\n                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x22);\n                return;\n            }\n        }\n        unaff_RDI = arg1_00;\n        if (8 < arg1) {\n            uVar4 = noname_1;\n            if (arg1 == 10) goto code_r0x0048340a;\n            if (arg1 != 0x10) goto code_r0x004833dc;\n            do {\n                if (unaff_RBX < 0x10) goto code_r0x00483140;\n                uVar4 = unaff_RBX & 0xf;\n                unaff_R12 = arg1_00;\n                if (arg4 <= uVar4) goto code_r0x004833d1;\n                uVar1 = *(arg3 + uVar4);\n                noname_1 = uVar1;\n                if (arg1_00 <= unaff_RDI - 1) goto code_r0x004833c6;\n                *((unaff_RDI - 1) + iVar3) = uVar1;\n                unaff_RBX = unaff_RBX >> 4;\n                noname_1 = *(*0x20 + -0x21);\n                unaff_RDI = unaff_RDI - 1;\n                unaff_R13 = unaff_RBX;\n            } while( true );\n        }\n        if (arg1 != 2) {\n            if (arg1 != 8) goto code_r0x004833dc;\n            goto code_r0x00483465;\n        }\n        do {\n            uVar7 = unaff_RSI;\n            if (unaff_RBX < 2) {\ncode_r0x00483140:\n                do {\n                    uVar4 = arg1_00;\n                    if (unaff_RBX < arg4) {\n                        unaff_R13 = unaff_RDI - 1;\n                        if (unaff_R13 < arg1_00) {\n                            *((unaff_RDI - 1) + iVar3) = *(unaff_RBX + arg3);\n                            for (; (uVar4 = arg1_00,  0 < unaff_R13 &&\n                                   (uVar4 = arg1_00 - unaff_R13,  arg1_00 - unaff_R13 < iVar9));\n                                unaff_R13 = unaff_R13 - 1) {\n                                *((unaff_R13 - 1) + iVar3) = 0x30;\n                            }\n                            uVar8 = unaff_R13;\n                            if (*(in_RAX + 0xc) == '\\0') goto code_r0x0048324b;\n                            if (arg1 == 2) {\n                                arg3 = unaff_R13 - 1;\n                                if (arg3 < arg1_00) {\n                                    *((unaff_R13 - 1) + iVar3) = 0x62;\n                                    arg3 = unaff_R13 - 2;\n                                    if (arg3 < arg1_00) {\n                                        *((unaff_R13 - 2) + iVar3) = 0x30;\n                                        uVar8 = arg3;\n                                        goto code_r0x0048324b;\n                                    }\n                                    goto code_r0x00483395;\n                                }\n                            }\n                            else {\n                                if (arg1 == 8) {\n                                    if (unaff_R13 < arg1_00) {\n                                        if (*(iVar3 + unaff_R13) == '0') {\ncode_r0x0048324b:\n                                            uVar5 = uVar8;\n                                            if (unaff_RSI == 0x4f) {\n                                                if (uVar8 - 1 < arg1_00) {\n                                                    *((uVar8 - 1) + iVar3) = 0x6f;\n                                                    if (uVar8 - 2 < arg1_00) {\n                                                        *((uVar8 - 2) + iVar3) = 0x30;\n                                                        uVar5 = uVar8 - 2;\n                                                        goto code_r0x00483280;\n                                                    }\n                                                    goto code_r0x00483346;\n                                                }\n                                            }\n                                            else {\ncode_r0x00483280:\n                                                if (noname_1 == '\\0') {\n                                                    if (*(in_RAX + 0xb) == '\\0') {\n                                                        if (*(in_RAX + 0xd) == '\\0') {\ncode_r0x004832d0:\n                                                            uVar2 = *(in_RAX + 0xe);\n                                                            *(in_RAX + 0xe) = 0;\n                                                            if (uVar5 <= arg1_00) {\n                                                                *(*0x20 + -0x23) = uVar2;\n                                                                *(*0x20 + -0x50) = 0x4832fe;\n                                                                fcn.00482620(arg1_00 - uVar5);\n                                                                *(*(*0x20 + 8) + 0xe) = *(*0x20 + -0x23);\n                                                                return;\n                                                            }\n                                                            *(*0x20 + -0x50) = 0x483325;\n                                                            fcn.0045cb40(arg1_00);\n                                                            noname_1 = uVar5;\n                                                        }\n                                                        else {\n                                                            noname_1 = uVar5 - 1;\n                                                            if (noname_1 < arg1_00) {\n                                                                *((uVar5 - 1) + iVar3) = 0x20;\n                                                                uVar5 = noname_1;\n                                                                goto code_r0x004832d0;\n                                                            }\n                                                        }\n                                                        *(*0x20 + -0x50) = 0x483330;\n                                                        fcn.0045ca80(arg1_00);\n                                                    }\n                                                    else {\n                                                        noname_1 = uVar5 - 1;\n                                                        if (noname_1 < arg1_00) {\n                                                            *((uVar5 - 1) + iVar3) = 0x2b;\n                                                            uVar5 = noname_1;\n                                                            goto code_r0x004832d0;\n                                                        }\n                                                    }\n                                                    *(*0x20 + -0x50) = 0x48333b;\n                                                    fcn.0045ca80(arg1_00);\n                                                }\n                                                else {\n                                                    noname_1 = uVar5 - 1;\n                                                    if (noname_1 < arg1_00) {\n                                                        *((uVar5 - 1) + iVar3) = 0x2d;\n                                                        uVar5 = noname_1;\n                                                        goto code_r0x004832d0;\n                                                    }\n                                                }\n                                                *(*0x20 + -0x50) = 0x483346;\n                                                fcn.0045ca80(arg1_00);\ncode_r0x00483346:\n                                                *(*0x20 + -0x50) = 0x483351;\n                                                fcn.0045ca80(arg1_00);\n                                            }\n                                            *(*0x20 + -0x50) = 0x48335c;\n                                            fcn.0045ca80(arg1_00);\ncode_r0x0048335c:\n                                            *(*0x20 + -0x50) = 0x483367;\n                                            fcn.0045ca80(arg1_00);\ncode_r0x00483367:\n                                            *(*0x20 + -0x50) = 0x483372;\n                                            fcn.0045ca80(arg1_00);\n                                            arg3 = uVar8;\n                                            goto code_r0x00483372;\n                                        }\n                                        arg3 = unaff_R13 - 1;\n                                        if (arg3 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = 0x30;\n                                            uVar8 = arg3;\n                                            goto code_r0x0048324b;\n                                        }\n                                        goto code_r0x0048337f;\n                                    }\n                                }\n                                else {\n                                    if (arg1 != 0x10) goto code_r0x0048324b;\n                                    if (0x10 < arg4) {\n                                        arg4 = unaff_R13 - 1;\n                                        uVar8 = *(arg3 + 0x10);\n                                        if (arg4 < arg1_00) {\n                                            *((unaff_R13 - 1) + iVar3) = *(arg3 + 0x10);\n                                            uVar8 = unaff_R13 - 2;\n                                            if (uVar8 < arg1_00) {\n                                                *((unaff_R13 - 2) + iVar3) = 0x30;\n                                                goto code_r0x0048324b;\n                                            }\n                                            goto code_r0x0048335c;\n                                        }\n                                        goto code_r0x00483367;\n                                    }\ncode_r0x00483372:\n                                    *(*0x20 + -0x50) = 0x48337f;\n                                    fcn.0045ca80(arg4);\ncode_r0x0048337f:\n                                    *(*0x20 + -0x50) = 0x48338a;\n                                    fcn.0045ca80(arg1_00);\n                                }\n                                *(*0x20 + -0x50) = 0x483395;\n                                fcn.0045ca80(arg1_00);\ncode_r0x00483395:\n                                *(*0x20 + -0x50) = 0x4833a5;\n                                fcn.0045ca80(arg1_00);\n                            }\n                            *(*0x20 + -0x50) = 0x4833b0;\n                            fcn.0045ca80(arg1_00);\n                            unaff_RDI = arg1_00;\n                        }\n                        *(*0x20 + -0x50) = 0x4833bb;\n                        fcn.0045ca80(uVar4);\n                    }\n                    unaff_RBX = unaff_R13;\n                    *(*0x20 + -0x50) = 0x4833c6;\n                    fcn.0045caa0(arg4);\n                    arg1_00 = uVar4;\ncode_r0x004833c6:\n                    *(*0x20 + -0x50) = 0x4833d1;\n                    fcn.0045ca80(arg1_00);\n                    unaff_R12 = arg1_00;\ncode_r0x004833d1:\n                    arg1 = arg4;\n                    *(*0x20 + -0x50) = 0x4833dc;\n                    arg4 = arg1;\n                    fcn.0045caa0(arg1);\n                    arg1_00 = unaff_RDI;\n                    unaff_R13 = unaff_RBX;\ncode_r0x004833dc:\n                    unaff_RBX = 0x4c9840;\n                    *(*0x20 + -0x50) = 0x4833ef;\n                    uVar4 = fcn.00432ec0();\n                    unaff_RDI = arg1_00;\n                    arg1_00 = unaff_R12;\n                    do {\n                        *((unaff_RDI - 1) + iVar3) = unaff_RBX + '0';\n                        unaff_RSI = uVar4 & 0xffffffff;\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x21);\n                        unaff_RBX = noname_1;\n                        unaff_RDI = unaff_R13;\ncode_r0x0048340a:\n                        noname_1 = uVar4;\n                        if (unaff_RBX < 10) goto code_r0x00483140;\n                        unaff_R13 = unaff_RDI - 1;\n                        noname_1 = unaff_RBX / 10;\n                        uVar4 = unaff_RSI & 0xffffffff;\n                        unaff_RSI = noname_1 * 10;\n                        unaff_RBX = unaff_RBX % 10;\n                    } while (unaff_R13 < arg1_00);\n                    *(*0x20 + -0x50) = 0x483445;\n                    arg1 = arg1_00;\n                    in_RAX = fcn.0045ca80(arg1_00);\n                    while( true ) {\n                        *(*0x20 + -0x18) = unaff_R13;\n                        unaff_R13 = (unaff_RBX & 7) + 0x30;\n                        *((unaff_RDI - 1) + iVar3) = unaff_R13;\n                        unaff_RBX = unaff_RBX >> 3;\n                        unaff_RDI = *(*0x20 + -0x18);\ncode_r0x00483465:\n                        if (unaff_RBX < 8) break;\n                        unaff_R13 = unaff_RDI - 1;\n                        if (arg1_00 <= unaff_R13) {\n                            *(*0x20 + -0x50) = 0x483485;\n                            arg1 = arg1_00;\n                            in_RAX = fcn.0045ca80(arg1_00);\n                            goto code_r0x00483485;\n                        }\n                    }\n                } while( true );\n            }\n            unaff_R13 = unaff_RDI - 1;\n            if (arg1_00 <= unaff_R13) goto code_r0x004834b7;\ncode_r0x00483485:\n            *(*0x20 + -0x18) = unaff_R13;\n            unaff_R13 = (unaff_RBX & 1) + 0x30;\n            *((unaff_RDI - 1) + iVar3) = unaff_R13;\n            unaff_RBX = unaff_RBX >> 1;\n            unaff_RDI = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x004834c6;\ncode_r0x004834b7:\n    *(*0x20 + -0x50) = 0x4834c5;\n    arg1 = arg1_00;\n    in_RAX = fcn.0045ca80(arg1_00);\ncode_r0x004834c6:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    puVar6[0x20] = unaff_RDI;\n    *(puVar6 + 0x24) = uVar7;\n    *(puVar6 + 0x28) = arg3;\n    *(puVar6 + 0x30) = arg4;\n    *(puVar6 + -8) = 0x4834ed;\n    fcn.0045a3a0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = puVar6[0x20];\n    unaff_RSI = *(puVar6 + 0x24);\n    arg3 = *(puVar6 + 0x28);\n    arg4 = *(puVar6 + 0x30);\n    *0x20 = puVar6;\n    unaff_R12 = arg1_00;\n    goto code_r0x00482f80;\n}\n",
        "token_count": 4338
    },
    "00483520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00483520(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1_00;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\n                return unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            while( true ) {\n                if (arg1 <= arg1_00) {\n                    return unaff_RBX;\n                }\n                iVar3 = iVar3 + -1;\n                if (iVar3 < 0) break;\n                if (arg1 <= arg1_00) goto code_r0x0048360d;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    iVar1 = 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    iVar1 = arg1 - arg1_00;\n                    *(*0x20 + -0x38) = 0x4835c9;\n                    fcn.0046bb40(unaff_RDI - arg1_00);\n                    arg1_00 = *(*0x20 + -0x10);\n                    arg1 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                arg1_00 = arg1_00 + iVar1;\n            }\n            if (arg1_00 <= unaff_RDI) {\n                return unaff_RBX;\n            }\n            *(*0x20 + -0x38) = 0x48360d;\n            fcn.0045cb00(arg1_00, unaff_RDI);\n            arg1 = arg1_00;\ncode_r0x0048360d:\n            *(*0x20 + -0x38) = 0x483612;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x48362c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 854
    },
    "00483660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00483660(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t arg2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x0048369a:\n                *(*0x20 + -0x38) = 0x48369f;\n                fcn.004828e0(arg1);\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar3 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            arg2 = arg1;\n            do {\n                arg1 = arg2;\n                if (arg1 <= arg1_00) goto code_r0x0048369a;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    arg2 = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x10) = arg1_00;\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x38) = 0x4836db;\n                    fcn.00456e80(arg1_00);\n                    arg2 = *(*0x20 + 0x18);\n                    iVar3 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x10);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (-1 < iVar3);\n            if (arg1 <= arg2) goto code_r0x0048369a;\n            *(*0x20 + -0x38) = 0x483718;\n            in_RAX = fcn.0045cac0(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x48372d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 772
    },
    "004837e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004837e0(int64_t *arg1, ulong noname_1, int64_t *arg3, int64_t arg4)\n\n{\n    int64_t **in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *arg1_00;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uchar uVar6;\n    uint8_t uVar7;\n    int64_t *piVar8;\n    int64_t *in_R10;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    int64_t *piVar10;\n    bool bVar11;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x38) = arg4;\n            piVar4 = arg1;\n            if (unaff_RDI != 0) {\n                piVar4 = unaff_RSI;\n            }\n            if ((*(in_RAX + 9) != '\\0') && (in_RAX[4] < piVar4)) {\n                piVar4 = in_RAX[4];\n            }\n            arg3 = piVar4 << 1;\n            if (arg3 < 1) {\n                if (*(in_RAX + 1) != '\\0') {\n                    *(*0x20 + -0x90) = 0x4839ec;\n                    fcn.004824a0();\n                }\n                return;\n            }\n            if (*(in_RAX + 0xd) == '\\0') {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 * 2 + 2;\n                }\n            }\n            else {\n                if (*(in_RAX + 0xc) != '\\0') {\n                    arg3 = piVar4 << 2;\n                }\n                arg3 = (arg3 + piVar4) - 1;\n            }\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x10) = piVar4;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x40) = in_R10;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = arg3;\n            if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) == '\\0')) {\n                *(*0x20 + -0x90) = 0x4838e6;\n                fcn.004824a0();\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 0x28);\n                unaff_RDI = *(*0x20 + 0x20);\n                arg3 = *(*0x20 + -0x40);\n                arg4 = *(*0x20 + 0x38);\n                in_R10 = *(*0x20 + 0x40);\n                piVar4 = *(*0x20 + -0x10);\n            }\n            piVar10 = *in_RAX;\n            arg1_00 = piVar10[1];\n            piVar9 = piVar10[2];\n            iVar2 = *piVar10;\n            iVar1 = iVar2;\n            if (*(in_RAX + 0xc) == '\\0') {\ncode_r0x004839d8:\n                piVar10 = NULL;\n                while( true ) {\n                    if (piVar4 <= piVar10) {\n                        piVar4 = *in_RAX;\n                        piVar4[1] = arg1_00;\n                        piVar4[2] = piVar9;\n                        if (*0x593680 == 0) {\n                            *piVar4 = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x90) = 0x483c90;\n                            in_RAX = fcn.0045c6e0(iVar1);\n                        }\n                        if (((*(in_RAX + 1) != '\\0') && (arg3 < in_RAX[3])) && (*(in_RAX + 10) != '\\0')) {\n                            *(*0x20 + -0x90) = 0x483cad;\n                            fcn.004824a0();\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x38) = piVar10;\n                    iVar2 = iVar1;\n                    if (*(in_RAX + 0xd) == '\\0') {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else if (piVar10 < 1) {\n                        bVar11 = unaff_RDI == 0;\n                    }\n                    else {\n                        piVar3 = arg1_00;\n                        piVar8 = arg1_00 + 1U;\n                        if (piVar9 < arg1_00 + 1U) {\n                            *(*0x20 + -0x20) = arg1_00;\n                            *(*0x20 + -0x90) = 0x483a6c;\n                            iVar2 = fcn.00445200(arg1_00);\n                            arg1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x38);\n                            in_R10 = *(*0x20 + 0x40);\n                            piVar4 = *(*0x20 + -0x10);\n                            piVar10 = *(*0x20 + -0x38);\n                            in_RAX = *(*0x20 + 8);\n                            piVar3 = *(*0x20 + -0x20);\n                            piVar8 = iVar1 + 1;\n                            piVar9 = arg1_00;\n                        }\n                        arg1_00 = piVar8;\n                        *(iVar2 + piVar3) = 0x20;\n                        iVar1 = unaff_RDI;\n                        if (*(in_RAX + 0xc) != '\\0') {\n                            if (in_R10 < 0x11) goto code_r0x00483ce9;\n                            uVar6 = *(arg4 + 0x10);\n                            piVar8 = arg1_00;\n                            piVar3 = arg1_00 + 2U;\n                            if (piVar9 < arg1_00 + 2U) {\n                                *(*0x20 + -0x28) = arg1_00;\n                                *(*0x20 + -0x41) = uVar6;\n                                *(*0x20 + -0x90) = 0x483b0c;\n                                iVar1 = fcn.00445200(arg1_00);\n                                piVar3 = iVar2 + 2;\n                                arg1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                unaff_RSI = *(*0x20 + 0x28);\n                                unaff_RDI = *(*0x20 + 0x20);\n                                uVar6 = *(*0x20 + -0x41);\n                                in_R10 = *(*0x20 + 0x40);\n                                piVar10 = *(*0x20 + -0x38);\n                                in_RAX = *(*0x20 + 8);\n                                piVar4 = *(*0x20 + -0x10);\n                                piVar8 = *(*0x20 + -0x28);\n                                iVar2 = iVar1;\n                                piVar9 = arg1_00;\n                                iVar1 = *(*0x20 + 0x20);\n                            }\n                            arg1_00 = piVar3;\n                            *(iVar2 + piVar8) = 0x30;\n                            *(iVar2 + 1 + piVar8) = uVar6;\n                            arg4 = *(*0x20 + 0x38);\n                        }\n                        bVar11 = iVar1 == 0;\n                        arg3 = *(*0x20 + -0x40);\n                    }\n                    if (bVar11) {\n                        if (arg1 <= piVar10) goto code_r0x00483cd3;\n                        uVar7 = *(unaff_RBX + piVar10);\n                        arg1 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        if (unaff_RSI <= piVar10) goto code_r0x00483cde;\n                        uVar7 = *(unaff_RDI + piVar10);\n                    }\n                    *(*0x20 + -0x43) = uVar7;\n                    arg3 = uVar7 >> 4;\n                    if (in_R10 <= arg3) goto code_r0x00483cc8;\n                    uVar7 = *(arg3 + arg4);\n                    arg3 = uVar7;\n                    arg1 = *(*0x20 + -0x43) & 0xf;\n                    if (in_R10 <= arg1) break;\n                    uVar6 = *(arg1 + arg4);\n                    piVar3 = arg1_00;\n                    piVar8 = arg1_00 + 2U;\n                    iVar1 = iVar2;\n                    if (piVar9 < arg1_00 + 2U) {\n                        *(*0x20 + -0x41) = uVar7;\n                        *(*0x20 + -0x42) = uVar6;\n                        *(*0x20 + -0x30) = arg1_00;\n                        *(*0x20 + -0x90) = 0x483c1e;\n                        iVar1 = fcn.00445200(arg1_00);\n                        uVar6 = *(*0x20 + -0x42);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        uVar7 = *(*0x20 + -0x41);\n                        arg4 = *(*0x20 + 0x38);\n                        piVar4 = *(*0x20 + -0x10);\n                        piVar10 = *(*0x20 + -0x38);\n                        in_RAX = *(*0x20 + 8);\n                        piVar3 = *(*0x20 + -0x30);\n                        piVar8 = iVar2 + 2;\n                        piVar9 = arg1_00;\n                    }\n                    arg1_00 = piVar8;\n                    *(iVar1 + piVar3) = uVar7;\n                    *(iVar1 + 1 + piVar3) = uVar6;\n                    piVar10 = piVar10 + 1;\n                    arg1 = *(*0x20 + -0x18);\n                    arg3 = *(*0x20 + -0x40);\n                    in_R10 = *(*0x20 + 0x40);\n                }\n                *(*0x20 + -0x90) = 0x483cc8;\n                fcn.0045ca80(in_R10);\ncode_r0x00483cc8:\n                *(*0x20 + -0x90) = 0x483cd3;\n                fcn.0045ca80(in_R10);\ncode_r0x00483cd3:\n                *(*0x20 + -0x90) = 0x483cde;\n                fcn.0045ca80(arg1);\ncode_r0x00483cde:\n                arg1_00 = arg3;\n                *(*0x20 + -0x90) = 0x483ce9;\n                fcn.0045ca80(unaff_RSI);\ncode_r0x00483ce9:\n                *(*0x20 + -0x90) = 0x483cf6;\n                fcn.0045ca80(in_R10);\n                arg3 = arg1_00;\n            }\n            else if (0x10 < in_R10) {\n                uVar6 = *(arg4 + 0x10);\n                piVar10 = arg1_00;\n                piVar3 = arg1_00 + 2U;\n                if (piVar9 < arg1_00 + 2U) {\n                    *(*0x20 + -0x41) = uVar6;\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x90) = 0x483977;\n                    iVar1 = fcn.00445200(arg1_00);\n                    arg1 = *(*0x20 + -0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    uVar6 = *(*0x20 + -0x41);\n                    arg4 = *(*0x20 + 0x38);\n                    in_R10 = *(*0x20 + 0x40);\n                    piVar4 = *(*0x20 + -0x10);\n                    in_RAX = *(*0x20 + 8);\n                    piVar10 = *(*0x20 + -0x30);\n                    piVar9 = arg1_00;\n                    piVar3 = iVar2 + 2;\n                }\n                arg1_00 = piVar3;\n                *(iVar1 + piVar10) = 0x30;\n                *(iVar1 + 1 + piVar10) = uVar6;\n                arg3 = *(*0x20 + -0x40);\n                goto code_r0x004839d8;\n            }\n            arg1 = in_R10;\n            *(*0x20 + -0x90) = 0x483d05;\n            in_R10 = arg1;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + 0x38) = arg4;\n        *(puVar5 + 0x40) = in_R10;\n        *(puVar5 + -8) = 0x483d33;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        arg4 = *(puVar5 + 0x38);\n        in_R10 = *(puVar5 + 0x40);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 3572
    },
    "00483d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00483d80(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t in_RDX;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = in_RDX;\n            if (*(in_RAX + 9) == '\\0') {\ncode_r0x00483dc5:\n                if (*(in_RAX + 0xc) != '\\0') {\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x80) = 0x483ddb;\n                    cVar2 = fcn.00471760();\n                    if (cVar2 != '\\0') {\n                        *(*0x20 + -0x80) = 0x483eb1;\n                        fcn.00448c60(1, arg1_00, 0x4a6963, 1);\n                        *(*0x20 + -0x80) = 0x483ec5;\n                        fcn.004828e0(0x4a6963);\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (*(in_RAX + 0xb) == '\\0') {\n                    *(*0x20 + -0x80) = 0x483e68;\n                    fcn.00470980(0x44);\n                    *(*0x20 + -0x80) = 0x483e7e;\n                    fcn.00482620(0);\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x483e2b;\n                    fcn.00470980(0x44);\n                    *(*0x20 + -0x80) = 0x483e45;\n                    fcn.00482620(0);\n                }\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = *(in_RAX + 0x20);\n            arg1_00 = 0;\n            in_RDX = arg1;\n            do {\n                arg1 = in_RDX;\n                if (arg1 <= arg1_00) goto code_r0x00483dc5;\n                if (*(unaff_RBX + arg1_00) < 0x80) {\n                    in_RDX = arg1;\n                    uVar1 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = arg1_00;\n                    *(*0x20 + -0x38) = iVar4;\n                    *(*0x20 + -0x80) = 0x483f07;\n                    fcn.00456e80(arg1_00);\n                    in_RAX = *(*0x20 + 8);\n                    in_RDX = *(*0x20 + 0x18);\n                    iVar4 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar1 = *(*0x20 + -0x30);\n                    arg1_00 = arg1;\n                }\n                arg1 = uVar1;\n                iVar4 = iVar4 + -1;\n            } while (-1 < iVar4);\n            arg1_00 = arg1;\n            if (arg1 <= in_RDX) goto code_r0x00483dc5;\n            *(*0x20 + -0x80) = 0x483f53;\n            in_RAX = fcn.0045cac0(arg1, in_RDX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x483f68;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1090
    },
    "00484020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484020(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0xb) == '\\0') {\n        fcn.00470e00(0x44);\n        fcn.00482620(0);\n    }\n    else {\n        fcn.00470e00(0x44);\n        fcn.00482620(0);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00484100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048416f)\n// WARNING: Removing unreachable block (ram,0x00484178)\n// WARNING: Removing unreachable block (ram,0x0048417d)\n// WARNING: Removing unreachable block (ram,0x00484188)\n// WARNING: Removing unreachable block (ram,0x0048418b)\n// WARNING: Removing unreachable block (ram,0x004841a0)\n// WARNING: Removing unreachable block (ram,0x004841a9)\n// WARNING: Removing unreachable block (ram,0x004841ae)\n// WARNING: Removing unreachable block (ram,0x004841b4)\n// WARNING: Removing unreachable block (ram,0x004841c0)\n// WARNING: Removing unreachable block (ram,0x004841ca)\n// WARNING: Removing unreachable block (ram,0x004841e0)\n// WARNING: Removing unreachable block (ram,0x0048427e)\n// WARNING: Removing unreachable block (ram,0x00484291)\n// WARNING: Removing unreachable block (ram,0x00484297)\n// WARNING: Removing unreachable block (ram,0x0048429d)\n// WARNING: Removing unreachable block (ram,0x004842a6)\n// WARNING: Removing unreachable block (ram,0x004841ea)\n// WARNING: Removing unreachable block (ram,0x004841f4)\n// WARNING: Removing unreachable block (ram,0x0048420a)\n// WARNING: Removing unreachable block (ram,0x00484220)\n// WARNING: Removing unreachable block (ram,0x00484226)\n// WARNING: Removing unreachable block (ram,0x00484210)\n// WARNING: Removing unreachable block (ram,0x00484216)\n// WARNING: Removing unreachable block (ram,0x0048422c)\n// WARNING: Removing unreachable block (ram,0x0048423b)\n// WARNING: Removing unreachable block (ram,0x00484240)\n// WARNING: Removing unreachable block (ram,0x0048421c)\n// WARNING: Removing unreachable block (ram,0x00484242)\n// WARNING: Removing unreachable block (ram,0x00484245)\n// WARNING: Removing unreachable block (ram,0x00484538)\n// WARNING: Removing unreachable block (ram,0x00484797)\n// WARNING: Removing unreachable block (ram,0x004847aa)\n// WARNING: Removing unreachable block (ram,0x004847b0)\n// WARNING: Removing unreachable block (ram,0x004847b6)\n// WARNING: Removing unreachable block (ram,0x004847b9)\n// WARNING: Removing unreachable block (ram,0x004847c5)\n// WARNING: Removing unreachable block (ram,0x0048480d)\n// WARNING: Removing unreachable block (ram,0x004847a5)\n// WARNING: Removing unreachable block (ram,0x0048481d)\n// WARNING: Removing unreachable block (ram,0x00484827)\n// WARNING: Removing unreachable block (ram,0x00484830)\n// WARNING: Removing unreachable block (ram,0x00484813)\n// WARNING: Removing unreachable block (ram,0x00484878)\n// WARNING: Removing unreachable block (ram,0x00484889)\n// WARNING: Removing unreachable block (ram,0x004848b7)\n// WARNING: Removing unreachable block (ram,0x004842d7)\n// WARNING: Removing unreachable block (ram,0x004842e0)\n// WARNING: Removing unreachable block (ram,0x004842e9)\n// WARNING: Removing unreachable block (ram,0x004844e9)\n// WARNING: Removing unreachable block (ram,0x004842f2)\n// WARNING: Removing unreachable block (ram,0x004842fc)\n// WARNING: Removing unreachable block (ram,0x00484306)\n// WARNING: Removing unreachable block (ram,0x004844c8)\n// WARNING: Removing unreachable block (ram,0x00484310)\n// WARNING: Removing unreachable block (ram,0x0048431c)\n// WARNING: Removing unreachable block (ram,0x00484346)\n// WARNING: Removing unreachable block (ram,0x00484380)\n// WARNING: Removing unreachable block (ram,0x0048437a)\n// WARNING: Removing unreachable block (ram,0x00484385)\n// WARNING: Removing unreachable block (ram,0x004843a1)\n// WARNING: Removing unreachable block (ram,0x00484415)\n// WARNING: Removing unreachable block (ram,0x00484458)\n// WARNING: Removing unreachable block (ram,0x004844ab)\n// WARNING: Removing unreachable block (ram,0x0048449e)\n// WARNING: Removing unreachable block (ram,0x004844b8)\n// WARNING: Removing unreachable block (ram,0x00484521)\n// WARNING: Removing unreachable block (ram,0x0048452b)\n// WARNING: Removing unreachable block (ram,0x00484549)\n// WARNING: Removing unreachable block (ram,0x00484585)\n// WARNING: Removing unreachable block (ram,0x0048458f)\n// WARNING: Removing unreachable block (ram,0x0048468f)\n// WARNING: Removing unreachable block (ram,0x004846bc)\n// WARNING: Removing unreachable block (ram,0x004846e5)\n// WARNING: Removing unreachable block (ram,0x00484728)\n// WARNING: Removing unreachable block (ram,0x0048456b)\n// WARNING: Removing unreachable block (ram,0x00484579)\n// WARNING: Removing unreachable block (ram,0x004845a0)\n// WARNING: Removing unreachable block (ram,0x004845aa)\n// WARNING: Removing unreachable block (ram,0x004845b4)\n// WARNING: Removing unreachable block (ram,0x004845db)\n// WARNING: Removing unreachable block (ram,0x00484620)\n// WARNING: Removing unreachable block (ram,0x00484580)\n// WARNING: Removing unreachable block (ram,0x00484695)\n// WARNING: Removing unreachable block (ram,0x004846ab)\n// WARNING: Removing unreachable block (ram,0x004846af)\n// WARNING: Removing unreachable block (ram,0x00484571)\n// WARNING: Removing unreachable block (ram,0x00484535)\n// WARNING: Removing unreachable block (ram,0x004848f8)\n// WARNING: Removing unreachable block (ram,0x00484905)\n\nvoid fcn.00484100(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong in_XMM0_Qa;\n    ulong extraout_XMM0_Qa;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x60 && *0x20 + -0x60 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0xe0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 9) != '\\0') {\n                unaff_RDI = *(in_RAX + 0x20);\n            }\n            *(*0x20 + 0x20) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = unaff_RDI;\n            unaff_RDI = arg1;\n            *(*0x20 + -0xe8) = 0x484165;\n            fcn.0046ca40(0x44, in_RAX + 0x28, unaff_RBX);\n            unaff_RBX = 1;\n            *(*0x20 + -0xe8) = 0x48491c;\n            uVar1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(1);\n            arg1._0_4_ = uVar1;\n            in_XMM0_Qa = extraout_XMM0_Qa;\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = in_XMM0_Qa;\n        *(puVar2 + 0x18) = unaff_RBX;\n        *(puVar2 + 0x20) = arg1;\n        *(puVar2 + 0x28) = unaff_RDI;\n        *(puVar2 + -8) = 0x48493b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        in_XMM0_Qa = *(puVar2 + 0x10);\n        unaff_RBX = *(puVar2 + 0x18);\n        arg1._0_4_ = *(puVar2 + 0x20);\n        unaff_RDI = *(puVar2 + 0x28);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 2010
    },
    "00484960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484960(ulong param_1, ulong param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg2;\n    int32_t unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t arg2_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (unaff_EBX < 0x80) {\n                iVar4 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar3 = iVar1;\n                if (in_RAX[2] < iVar4 + 1U) {\n                    *(*0x20 + -0x70) = 0x4849c5;\n                    arg2 = iVar1;\n                    iVar3 = fcn.00445200(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[2] = iVar4;\n                    if (*0x593680 == 0) {\n                        *in_RAX = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x4849e5;\n                        iVar3 = fcn.0045c5e0(iVar4, arg2, param_3, param_4);\n                    }\n                    unaff_EBX = *(*0x20 + 0x10);\n                    iVar4 = iVar1;\n                }\n                in_RAX[1] = iVar4 + 1;\n                *(iVar3 + iVar4) = unaff_EBX;\n                return;\n            }\n            uVar5 = in_RAX[1];\n            *(*0x20 + -0x28) = uVar5;\n            arg2_00 = in_RAX[2];\n            param_3 = uVar5;\n            param_4 = *in_RAX;\n            while( true ) {\n                uVar7 = uVar5 + 4;\n                if (uVar7 <= arg2_00) break;\n                uVar7 = param_3 + 1;\n                uVar8 = param_3;\n                iVar4 = param_4;\n                if (arg2_00 < uVar7) {\n                    *(*0x20 + -0x18) = param_3;\n                    *(*0x20 + -0x70) = 0x484a3f;\n                    iVar4 = fcn.00445200(param_3);\n                    uVar7 = param_4 + 1;\n                    unaff_EBX = *(*0x20 + 0x10);\n                    uVar8 = *(*0x20 + -0x18);\n                    uVar5 = *(*0x20 + -0x28);\n                    arg2_00 = param_3;\n                }\n                *(iVar4 + uVar8) = 0;\n                param_3 = uVar7;\n                param_4 = iVar4;\n            }\n            if (uVar7 <= arg2_00) {\n                if (uVar5 <= uVar7) {\n                    *(*0x20 + -0x20) = arg2_00;\n                    *(*0x20 + -0x10) = param_4;\n                    iVar4 = arg2_00 - uVar5;\n                    arg2_00 = -iVar4 >> 0x3f & uVar5;\n                    unaff_EBX = 4;\n                    *(*0x20 + -0x70) = 0x484a98;\n                    iVar4 = fcn.0046bec0(iVar4);\n                    uVar5 = *(*0x20 + -0x28) + iVar4;\n                    uVar8 = *(*0x20 + -0x20);\n                    if (uVar5 <= uVar8) {\n                        puVar2 = *(*0x20 + 8);\n                        puVar2[1] = uVar5;\n                        puVar2[2] = uVar8;\n                        if (*0x593680 == 0) {\n                            *puVar2 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x484ad6;\n                            fcn.0045c5e0(uVar5, uVar8, param_3, param_4);\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x70) = 0x484ae6;\n                    fcn.0045cb00(uVar5, uVar8);\n                }\n                *(*0x20 + -0x70) = 0x484af1;\n                fcn.0045cb40(uVar7);\n            }\n            *(*0x20 + -0x70) = 0x484afc;\n            in_RAX = fcn.0045cb00(uVar7, arg2_00);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x484b0b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1329
    },
    "00484b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00484b80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x484ba5;\n            iVar1 = fcn.00463460();\n            if (iVar1 == 0x4a38c0) {\n                *(unaff_RBX + 0xb2) = 0;\n                *(unaff_RBX + 0xb4) = 0;\n                if (*0x593680 == 0) {\n                    *(unaff_RBX + 0x40) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x484bda;\n                    fcn.0045c720(0x4a38c0, param_2, param_3, param_4);\n                }\n                *(unaff_RBX + 0x48) = 0;\n                *(unaff_RBX + 0x49) = 0;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x4a38c0;\n            *(*0x20 + -0x28) = 0x484c07;\n            fcn.0040a2a0(0x497ae0);\n        }\n        *(puVar2 + -8) = 0x484c0d;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 470
    },
    "00484c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484c20(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x10) < 0x10001) {\n        *(in_RAX + 8) = 0;\n        *(in_RAX + 0x18) = 0;\n        if (*0x593680 == 0) {\n            *(in_RAX + 0x20) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c700(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0x38) = 0;\n        if (*0x593680 == 0) {\n            *(in_RAX + 0x28) = in_XMM15;\n        }\n        else {\n            fcn.0045c700(arg1, 0, arg3, in_R9);\n            in_RAX = fcn.0045c700(arg1, 0, arg3, in_R9);\n        }\n        *(in_RAX + 0xb8) = 0;\n        if (*0x593680 == 0) {\n            *(in_RAX + 0xc0) = 0;\n        }\n        else {\n            in_RAX = fcn.0045c700(arg1, 0, arg3, in_R9);\n        }\n        fcn.00463380(in_RAX);\n        return;\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "00484e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484e00(ulong arg1)\n\n{\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0047a740(arg1);\n    if (((arg1 & 0x1f) == 0x14) && (*unaff_RBX != 0)) {\n        fcn.0047a560(arg1);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00484ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00484ea0(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RDI;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (&iStack16 < *(unaff_R14 + 0x10) || &iStack16 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RDI == 0) {\n        uVar5 = in_RAX[1];\n        uVar6 = in_RAX[2];\n        uVar4 = *in_RAX;\n        if (uVar6 < uVar5 + 5) {\n            uVar6 = uVar5;\n            uVar4 = fcn.00445200(uVar5);\n        }\n        *(uVar4 + uVar5) = 0x6c696e3c;\n        *(uVar4 + 4 + uVar5) = 0x3e;\n        in_RAX[1] = uVar5 + 5;\n        in_RAX[2] = uVar6;\n        if (*0x593680 == 0) {\n            *in_RAX = uVar4;\n        }\n        else {\n            fcn.0045c720(uVar5, arg2, arg3, arg4);\n        }\n        return;\n    }\n    uVar5 = in_RAX[1];\n    uVar6 = *in_RAX;\n    uVar4 = in_RAX[2];\n    uVar1 = uVar6;\n    if (uVar4 < uVar5 + 1) {\n        uVar3 = uVar5;\n        arg3_00 = uVar6;\n        iStack16 = arg1;\n        uVar1 = fcn.00445200(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x593680 == 0) {\n            *in_RAX = uVar1;\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n        else {\n            uVar1 = fcn.0045c5e0(uVar5, uVar3, arg3_00, uVar4);\n            arg1 = iStack16;\n            uVar5 = uVar6;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar1 + uVar5) = 0x3f;\n    iVar2 = fcn.0047b8a0(unaff_RDI);\n    (**(iVar2 + 0xf8))();\n    uVar6 = in_RAX[1];\n    uVar5 = uVar6 + arg1;\n    uVar4 = in_RAX[2];\n    uVar1 = *in_RAX;\n    if (uVar4 < uVar5) {\n        uVar4 = uVar6;\n        uVar1 = fcn.00445200(uVar6);\n    }\n    iVar2 = arg1;\n    fcn.0045d3c0(arg1);\n    in_RAX[1] = uVar5;\n    in_RAX[2] = uVar4;\n    arg1 = uVar6 + arg1;\n    if (*0x593680 == 0) {\n        *in_RAX = uVar1;\n    }\n    else {\n        fcn.0045c720(uVar5, uVar4, uVar6, iVar2);\n    }\n    uVar3 = uVar1;\n    if (uVar4 < arg1 + 1U) {\n        uVar3 = fcn.00445200(uVar5);\n        in_RAX[2] = uVar5;\n        if (*0x593680 == 0) {\n            *in_RAX = uVar3;\n            uVar5 = uVar1;\n        }\n        else {\n            uVar3 = fcn.0045c5e0(uVar5, uVar4, uVar6, iVar2);\n            uVar5 = uVar1;\n        }\n    }\n    in_RAX[1] = uVar5 + 1;\n    *(uVar3 + uVar5) = 0x3f;\n    return;\n}\n",
        "token_count": 999
    },
    "00485160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485160(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    uint64_t uStack32;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (&uStack32 < *(unaff_R14 + 0x10) || &uStack32 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(in_RAX + 0xb3) = 1;\n    uVar9 = in_RAX[1];\n    uVar5 = in_RAX[2];\n    uVar2 = *in_RAX;\n    if (uVar5 < uVar9 + 2) {\n        uVar5 = uVar9;\n        uVar2 = fcn.00445200(uVar9);\n    }\n    *(uVar2 + uVar9) = 0x2125;\n    in_RAX[1] = uVar9 + 2;\n    in_RAX[2] = uVar5;\n    if (*0x593680 == 0) {\n        *in_RAX = uVar2;\n    }\n    else {\n        fcn.0045c700(uVar9, uVar2, arg3, in_R9);\n    }\n    fcn.00484960();\n    uVar9 = in_RAX[1];\n    uVar5 = *in_RAX;\n    uVar2 = in_RAX[2];\n    uVar3 = uVar5;\n    if (uVar2 < uVar9 + 1) {\n        uVar3 = fcn.00445200(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x593680 == 0) {\n            *in_RAX = uVar3;\n            uVar9 = uVar5;\n        }\n        else {\n            uVar3 = fcn.0045c5e0(uVar9, uVar2, arg3, in_R9);\n            uVar9 = uVar5;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar3 + uVar9) = 0x28;\n    uVar9 = in_RAX[3];\n    uVar5 = in_RAX[4];\n    if (uVar9 == 0) {\n        if (in_RAX[7] == 0) {\n            uVar9 = in_RAX[1];\n            uVar2 = in_RAX[2];\n            uVar3 = *in_RAX;\n            if (uVar2 < uVar9 + 5) {\n                uVar2 = uVar9;\n                uVar3 = fcn.00445200(uVar9);\n            }\n            *(uVar3 + uVar9) = 0x6c696e3c;\n            *(uVar3 + 4 + uVar9) = 0x3e;\n            in_RAX[1] = uVar9 + 5;\n            in_RAX[2] = uVar2;\n            if (*0x593680 == 0) {\n                *in_RAX = uVar3;\n            }\n            else {\n                fcn.0045c720(uVar9, uVar2, uVar5, in_R9);\n            }\n        }\n        else {\n            uVar5 = in_RAX[6];\n            iVar4 = fcn.0047b8a0(in_RAX[7]);\n            (**(iVar4 + 0xf8))();\n            uVar2 = in_RAX[1];\n            uVar9 = uVar5 + uVar2;\n            uVar3 = in_RAX[2];\n            uVar8 = *in_RAX;\n            if (uVar3 < uVar9) {\n                uVar3 = uVar2;\n                uVar8 = fcn.00445200(uVar2);\n            }\n            in_R9 = uVar5;\n            uStack32 = uVar8;\n            fcn.0045d3c0(uVar5);\n            uVar1 = uStack32;\n            in_RAX[1] = uVar9;\n            in_RAX[2] = uVar3;\n            if (*0x593680 == 0) {\n                *in_RAX = uStack32;\n                puVar6 = in_RAX;\n                uVar10 = uVar2;\n            }\n            else {\n                puVar6 = fcn.0045c720(uVar9, uVar3, uVar8, in_R9);\n                uVar10 = uVar3;\n            }\n            uVar7 = uVar1;\n            if (uVar3 < uVar5 + uVar2 + 1) {\n                uVar7 = fcn.00445200(uVar9);\n                in_RAX[2] = uVar9;\n                if (*0x593680 == 0) {\n                    *in_RAX = uVar7;\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n                else {\n                    uVar7 = fcn.0045c5e0(uVar9, uVar10, uVar8, in_R9);\n                    puVar6 = in_RAX;\n                    uVar9 = uVar1;\n                }\n            }\n            puVar6[1] = uVar9 + 1;\n            *(uVar7 + uVar9) = 0x3d;\n            uVar5 = 0;\n            fcn.00487e20(puVar6[6], uVar9 + 1, 0);\n        }\n    }\n    else {\n        if (uVar9 == 0) {\n            iVar4 = 0;\n            uVar2 = 0;\n        }\n        else {\n            iVar4 = 0x4ca2b0;\n            uVar2 = uVar9;\n        }\n        uStack24 = uVar9;\n        uStack16 = uVar5;\n        (**(iVar4 + 0xf8))(uVar2);\n        uVar2 = in_RAX[1];\n        uVar9 = uVar3 + uVar2;\n        uVar8 = in_RAX[2];\n        uVar5 = *in_RAX;\n        if (uVar8 < uVar9) {\n            uVar8 = uVar2;\n            uVar5 = fcn.00445200(uVar2);\n        }\n        uStack32 = uVar5;\n        fcn.0045d3c0(uVar3);\n        uVar1 = uStack32;\n        in_RAX[1] = uVar9;\n        in_RAX[2] = uVar8;\n        if (*0x593680 == 0) {\n            *in_RAX = uStack32;\n            puVar6 = in_RAX;\n            uVar10 = uVar2;\n        }\n        else {\n            puVar6 = fcn.0045c720(uVar9, uVar8, uVar5, in_R9);\n            uVar10 = uVar8;\n        }\n        uVar7 = uVar1;\n        if (uVar8 < uVar3 + uVar2 + 1) {\n            uVar7 = fcn.00445200(uVar9);\n            in_RAX[2] = uVar9;\n            if (*0x593680 == 0) {\n                *in_RAX = uVar7;\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n            else {\n                uVar7 = fcn.0045c5e0(uVar9, uVar10, uVar5, in_R9);\n                puVar6 = in_RAX;\n                uVar9 = uVar1;\n            }\n        }\n        puVar6[1] = uVar9 + 1;\n        *(uVar7 + uVar9) = 0x3d;\n        fcn.00487640(puVar6[4]);\n    }\n    uVar9 = in_RAX[1];\n    uVar2 = *in_RAX;\n    uVar3 = in_RAX[2];\n    uVar8 = uVar2;\n    if (uVar3 < uVar9 + 1) {\n        uVar8 = fcn.00445200(uVar9);\n        in_RAX[2] = uVar9;\n        if (*0x593680 == 0) {\n            *in_RAX = uVar8;\n            uVar9 = uVar2;\n        }\n        else {\n            uVar8 = fcn.0045c5e0(uVar9, uVar3, uVar5, in_R9);\n            uVar9 = uVar2;\n        }\n    }\n    in_RAX[1] = uVar9 + 1;\n    *(uVar8 + uVar9) = 0x29;\n    *(in_RAX + 0xb3) = 0;\n    return;\n}\n",
        "token_count": 2057
    },
    "00485760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485760(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xff;\n    }\n    if (unaff_EDI < 100) {\n        if (unaff_EDI < 0x56) {\n            if (unaff_EDI == 0x4f) {\ncode_r0x0048583e:\n                fcn.00482f80(8, arg2, 0x4a8d57, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x55) {\n                fcn.00482c20();\n                return;\n            }\n        }\n        else {\n            if (unaff_EDI == 0x58) {\n                fcn.00482f80(0x10, arg2, 0x4a8d46, 0x11);\n                return;\n            }\n            if (unaff_EDI == 0x62) {\n                fcn.00482f80(2, arg2, 0x4a8d57, 0x11);\n                return;\n            }\n            if (unaff_EDI == 99) {\n                fcn.00483f80();\n                return;\n            }\n        }\n    }\n    else if (unaff_EDI < 0x70) {\n        if (unaff_EDI == 100) {\n            fcn.00482f80(10, arg2, 0x4a8d57, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x6f) goto code_r0x0048583e;\n    }\n    else {\n        if (unaff_EDI == 0x71) {\n            fcn.00484020();\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if ((*(in_RAX + 0x50) != '\\0') && (arg1 == '\\0')) {\n                fcn.004856c0(1);\n                return;\n            }\n            fcn.00482f80(10, arg2, 0x4a8d57, 0x11);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.00482f80(0x10, arg2, 0x4a8d57, 0x11);\n            return;\n        }\n    }\n    fcn.00485160(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 631
    },
    "00485a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00485a60(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t arg1_00;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong in_R8;\n    int64_t arg3;\n    int64_t arg4_00;\n    int64_t unaff_R14;\n    \n    while (iVar3 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar3 < 99) {\n        uVar6 = iVar3 - 0x45;\n        if (((uVar6 < 3) || (iVar3 == 0x58)) || (iVar3 == 0x62)) {\ncode_r0x00485aae:\n            uVar1 = *(in_RAX + 0x4b);\n            uVar5 = uVar1;\n            arg1_00 = in_RAX[1];\n            iVar2 = *in_RAX;\n            uVar4 = arg1;\n            arg4 = iVar2;\n            if (in_RAX[2] < arg1_00 + 1U) {\n                arg3 = arg1_00;\n                arg4_00 = iVar2;\n                arg4 = fcn.00445200(arg1_00);\n                in_RAX[2] = arg1_00;\n                if (*0x593680 == 0) {\n                    *in_RAX = arg4;\n                }\n                else {\n                    arg4 = fcn.0045c5e0(arg1_00, uVar5, arg3, arg4_00);\n                }\n                uVar4 = arg1 & 0xffffffff;\n                arg1_00 = iVar2;\n            }\n            in_RAX[1] = arg1_00 + 1;\n            *(arg4 + arg1_00) = 0x28;\n            fcn.00485960(uVar4);\n            *(in_RAX + 0x4b) = 1;\n            fcn.00485960(arg1 & 0xffffffff);\n            uVar4 = in_RAX[1];\n            uVar5 = in_RAX[2];\n            iVar2 = *in_RAX;\n            if (uVar5 < uVar4 + 2) {\n                uVar5 = uVar4;\n                iVar2 = fcn.00445200(uVar4);\n            }\n            *(iVar2 + uVar4) = 0x2969;\n            in_RAX[1] = uVar4 + 2;\n            in_RAX[2] = uVar5;\n            if (*0x593680 == 0) {\n                *in_RAX = iVar2;\n            }\n            else {\n                fcn.0045c720(uVar4, uVar5, arg1_00, arg4);\n            }\n            *(in_RAX + 0x4b) = uVar1;\n            return;\n        }\n    }\n    else {\n        uVar6 = iVar3 - 0x65;\n        if (((uVar6 < 3) || (iVar3 == 0x76)) || (iVar3 == 0x78)) goto code_r0x00485aae;\n    }\n    fcn.00485160(arg1, uVar6, in_R8);\n    return;\n}\n",
        "token_count": 801
    },
    "00485c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485c60(ulong arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EDI;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_EDI < 0x72) {\n        if (unaff_EDI == 0x58) {\n            fcn.004837e0(arg1, arg2, 0, 0x4a8d46);\n            return;\n        }\n        if (unaff_EDI == 0x71) {\n            fcn.00483d80(arg1);\n            return;\n        }\n    }\n    else {\n        if (unaff_EDI == 0x73) {\n            fcn.00483660(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x76) {\n            if (*(in_RAX + 0x50) != '\\0') {\n                fcn.00483d80(arg1);\n                return;\n            }\n            fcn.00483660(arg1);\n            return;\n        }\n        if (unaff_EDI == 0x78) {\n            fcn.004837e0(arg1, arg2, 0, 0x4a8d57);\n            return;\n        }\n    }\n    fcn.00485160(arg1, arg2, in_R8);\n    return;\n}\n",
        "token_count": 354
    },
    "00485d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00485d60(int64_t arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    int64_t iVar7;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    ulong uStack0000000000000030;\n    uchar auStack48 [16];\n    uint64_t uStack32;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (uStack0000000000000030 = arg3,  auStack48 < *(unaff_R14 + 0x10) || auStack48 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg3 = uStack0000000000000030;\n    }\n    if (iStack0000000000000028 < 0x72) {\n        if (iStack0000000000000028 == 0x58) {\n            fcn.004837e0(0, noname_1, unaff_RDI, 0x4a8d46);\n            return;\n        }\n        if (iStack0000000000000028 == 100) {\ncode_r0x00485e29:\n            if (*(in_RAX + 10) == '\\0') {\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar5 = uVar1;\n                    uVar2 = fcn.00445200(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045c5e0(uVar1, uVar5, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        uVar4 = *in_RAX;\n                        uVar2 = uVar4;\n                        if (in_RAX[2] < uVar1 + 1) {\n                            arg2 = iVar7;\n                            uVar2 = fcn.00445200(uVar1);\n                            in_RAX[2] = uVar1;\n                            if (*0x593680 == 0) {\n                                *in_RAX = uVar2;\n                                uVar1 = uVar4;\n                            }\n                            else {\n                                uVar2 = fcn.0045c5e0(uVar1, arg2, arg3, arg4);\n                                uVar1 = uVar4;\n                            }\n                        }\n                        in_RAX[1] = uVar1 + 1;\n                        *(uVar2 + uVar1) = 0x20;\n                    }\n                    arg3 = 0x4a8d57;\n                    arg4 = 0x11;\n                    fcn.00482f80(10, in_RAX + 8, 0x4a8d57, 0x11);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = uVar4;\n                if (in_RAX[2] < uVar1 + 1) {\n                    uVar2 = fcn.00445200(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar2;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar2 = fcn.0045c5e0(uVar1, iVar7, arg3, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar2 + uVar1) = 0x5d;\n                return;\n            }\n            uVar4 = in_RAX[1];\n            uVar1 = uVar4 + arg4;\n            uVar2 = in_RAX[2];\n            uStack32 = *in_RAX;\n            if (uVar2 < uVar1) {\n                uVar2 = uVar4;\n                uStack32 = fcn.00445200(uVar4);\n            }\n            uVar3 = uStack0000000000000030;\n            uVar8 = arg4;\n            fcn.0045d3c0(arg4);\n            uVar5 = uStack32;\n            in_RAX[1] = uVar1;\n            in_RAX[2] = uVar2;\n            uVar6 = uVar1;\n            if (*0x593680 == 0) {\n                *in_RAX = uStack32;\n            }\n            else {\n                fcn.0045c720(uVar1, uVar2, uVar3, uVar8);\n            }\n            if (unaff_RBX != 0) {\n                uVar1 = uVar5;\n                if (uVar2 < uVar4 + arg4 + 1) {\n                    iVar7 = unaff_RBX;\n                    uVar1 = fcn.00445200(uVar6);\n                    in_RAX[2] = uVar6;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar1;\n                        uVar6 = uVar5;\n                    }\n                    else {\n                        uVar1 = fcn.0045c5e0(uVar6, uVar2, iVar7, arg4);\n                        uVar6 = uVar5;\n                    }\n                }\n                in_RAX[1] = uVar6 + 1;\n                *(uVar1 + uVar6) = 0x7b;\n                for (iVar7 = 0; iVar7 < arg1; iVar7 = iVar7 + 1) {\n                    if (0 < iVar7) {\n                        uVar1 = in_RAX[1];\n                        arg4 = in_RAX[2];\n                        uVar4 = *in_RAX;\n                        if (arg4 < uVar1 + 2) {\n                            arg4 = uVar1;\n                            uVar4 = fcn.00445200(uVar1);\n                        }\n                        *(uVar4 + uVar1) = 0x202c;\n                        in_RAX[1] = uVar1 + 2;\n                        in_RAX[2] = arg4;\n                        if (*0x593680 == 0) {\n                            *in_RAX = uVar4;\n                        }\n                        else {\n                            fcn.0045c740(uVar1, arg1, unaff_RBX, arg4);\n                        }\n                    }\n                    fcn.004856c0(1);\n                }\n                uVar1 = in_RAX[1];\n                uVar4 = *in_RAX;\n                uVar2 = in_RAX[2];\n                uVar5 = uVar4;\n                if (uVar2 < uVar1 + 1) {\n                    uVar5 = fcn.00445200(uVar1);\n                    in_RAX[2] = uVar1;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar5;\n                        uVar1 = uVar4;\n                    }\n                    else {\n                        uVar5 = fcn.0045c5e0(uVar1, uVar2, unaff_RBX, arg4);\n                        uVar1 = uVar4;\n                    }\n                }\n                in_RAX[1] = uVar1 + 1;\n                *(uVar5 + uVar1) = 0x7d;\n                return;\n            }\n            uVar8 = uVar4 + arg4 + 5;\n            arg1_00 = uVar6;\n            if (uVar2 < uVar8) {\n                uVar5 = fcn.00445200(uVar6);\n                arg1_00 = uVar1;\n                uVar2 = uVar6;\n            }\n            *(uVar5 + arg1_00) = 0x6c696e28;\n            *(uVar5 + 4 + arg1_00) = 0x29;\n            in_RAX[1] = uVar8;\n            in_RAX[2] = uVar2;\n            if (*0x593680 == 0) {\n                *in_RAX = uVar5;\n            }\n            else {\n                fcn.0045c720(arg1_00, uVar2, arg4, uVar4);\n            }\n            return;\n        }\n        if (iStack0000000000000028 == 0x71) {\n            fcn.00448f60(arg1);\n            fcn.00483d80(unaff_RBX);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x73) {\n            fcn.00483760(arg1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x76) goto code_r0x00485e29;\n        if (iStack0000000000000028 == 0x78) {\n            fcn.004837e0(0, noname_1, unaff_RDI, 0x4a8d57);\n            return;\n        }\n    }\n    uStack16 = fcn.0040a700(unaff_RDI);\n    if (*0x53f5e0 == '\\0') {\n        iStack24 = 0x494e40;\n        uVar3 = *0x53f5f0;\n    }\n    else {\n        iStack24 = 0x494e40;\n        *0x53f5e8 = 0x494e40;\n        uVar3 = uStack16;\n        if (*0x593680 != 0) {\n            uStack16 = fcn.0045c5e0(unaff_RDI, 0x494e40, arg3, arg4);\n            uVar3 = *0x53f5f0;\n        }\n    }\n    *0x53f5f0 = uVar3;\n    uVar3 = uStack16;\n    iVar7 = iStack24;\n    if (iStack24 == 0) {\n        uVar3 = 0;\n        iVar7 = 0;\n    }\n    fcn.00487e20(uVar3, iVar7, 0);\n    return;\n}\n",
        "token_count": 2485
    },
    "00486460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00486460(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t arg4;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint64_t arg4_00;\n    uint64_t uVar6;\n    uint64_t arg1_00;\n    uint64_t arg3;\n    ulong arg2;\n    int32_t unaff_ESI;\n    ulong unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int32_t iStack0000000000000028;\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    iStack0000000000000028 = unaff_ESI;\n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar7 = unaff_RDI & 0x1f;\n    uVar8 = uVar7 - 0x12;\n    if (((1 < uVar8) && (uVar8 = uVar7 - 0x15,  2 < uVar8)) && (uVar7 != 0x1a)) {\n        fcn.00485160(arg1, unaff_RDI, uVar8);\n        return;\n    }\n    noname_0 = unaff_RDI;\n    arg2 = unaff_RDI;\n    iStack16 = arg1;\n    arg4 = fcn.0047b360(unaff_RDI);\n    if (iStack0000000000000028 < 0x65) {\n        if (((iStack0000000000000028 == 0x58) || (iStack0000000000000028 == 0x62)) || (iStack0000000000000028 == 100))\n        goto code_r0x00486855;\n    }\n    else if (iStack0000000000000028 < 0x71) {\n        if (iStack0000000000000028 == 0x6f) {\ncode_r0x00486855:\n            fcn.00485760(0, arg2);\n            return;\n        }\n        if (iStack0000000000000028 == 0x70) {\n            fcn.004856c0(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n    }\n    else {\n        if (iStack0000000000000028 == 0x76) {\n            if (*(in_RAX + 10) != '\\0') {\n                iVar3 = in_RAX[1];\n                iVar1 = *in_RAX;\n                iVar2 = iVar1;\n                if (in_RAX[2] < iVar3 + 1U) {\n                    piVar4 = in_RAX;\n                    iVar2 = fcn.00445200(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x593680 == 0) {\n                        *in_RAX = iVar2;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar2 = fcn.0045c5e0(iVar3, piVar4, uVar8, in_R9);\n                        iVar3 = iVar1;\n                    }\n                }\n                iVar1 = iStack16;\n                in_RAX[1] = iVar3 + 1;\n                *(iVar2 + iVar3) = 0x28;\n                iVar3 = fcn.0047b8a0(unaff_RDI);\n                (**(iVar3 + 0xf8))();\n                uVar7 = in_RAX[1];\n                uVar8 = uVar7 + iVar1;\n                arg4_00 = in_RAX[2];\n                iVar3 = *in_RAX;\n                if (arg4_00 < uVar8) {\n                    arg4_00 = uVar7;\n                    iVar3 = fcn.00445200(uVar7);\n                }\n                fcn.0045d3c0(iVar1);\n                in_RAX[1] = uVar8;\n                in_RAX[2] = arg4_00;\n                arg3 = uVar7 + iVar1 + 2;\n                uVar6 = uVar8;\n                iVar2 = iVar1;\n                if (*0x593680 == 0) {\n                    *in_RAX = iVar3;\n                    piVar4 = in_RAX;\n                }\n                else {\n                    piVar4 = fcn.0045c780(uVar8, iVar1, arg3);\n                }\n                arg1_00 = uVar6;\n                if (arg4_00 < arg3) {\n                    iVar3 = fcn.00445200(uVar6);\n                    piVar4 = in_RAX;\n                    arg1_00 = uVar8;\n                    iVar2 = iVar1;\n                    arg4_00 = uVar6;\n                }\n                *(iVar3 + arg1_00) = 0x2829;\n                piVar4[1] = arg3;\n                piVar4[2] = arg4_00;\n                if (*0x593680 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    piVar4 = fcn.0045c720(arg1_00, iVar2, arg3, arg4_00);\n                }\n                if (arg4 == 0) {\n                    uVar7 = uVar7 + iVar2 + 5;\n                    if (arg4_00 < uVar7) {\n                        uVar6 = arg3;\n                        iVar3 = fcn.00445200(arg3);\n                        piVar4 = in_RAX;\n                        arg1_00 = uVar8;\n                        arg4_00 = arg3;\n                        arg3 = uVar6;\n                    }\n                    *(arg1_00 + 2 + iVar3) = 0x696e;\n                    *(arg1_00 + 4 + iVar3) = 0x6c;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = arg4_00;\n                    if (*0x593680 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        piVar4 = fcn.0045c720(arg1_00, iVar2, arg3, arg4);\n                    }\n                }\n                else {\n                    fcn.004856c0(1);\n                    piVar4 = in_RAX;\n                }\n                iVar3 = piVar4[1];\n                iVar1 = *piVar4;\n                iVar5 = iVar1;\n                if (piVar4[2] < iVar3 + 1U) {\n                    iVar5 = fcn.00445200(iVar3);\n                    in_RAX[2] = iVar3;\n                    if (*0x593680 == 0) {\n                        *in_RAX = iVar5;\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                    else {\n                        iVar5 = fcn.0045c5e0(iVar3, iVar2, arg3, arg4);\n                        piVar4 = in_RAX;\n                        iVar3 = iVar1;\n                    }\n                }\n                piVar4[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                return;\n            }\n            if (arg4 == 0) {\n                fcn.004828e0(5);\n                return;\n            }\n            fcn.004856c0(*(in_RAX + 0x4c) ^ 1);\n            return;\n        }\n        if (iStack0000000000000028 == 0x78) goto code_r0x00486855;\n    }\n    fcn.00485160(noname_0, arg2, uVar8);\n    return;\n}\n",
        "token_count": 1758
    },
    "004868e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004868e0(ulong arg1, ulong noname_1, ulong *arg3)\n\n{\n    uint8_t uVar1;\n    uchar uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t *unaff_RDI;\n    int64_t iVar14;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    bool bVar15;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x6c) = unaff_RDI;\n            *(*0x20 + -0xb8) = 0x48694a;\n            iVar3 = fcn.00433600(arg1, *0x20 + 8);\n            if (iVar3 == 0) {\n                return;\n            }\n            iVar10 = *(*0x20 + -0x20);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                bVar15 = false;\n                arg3 = NULL;\n            }\n            else {\n                if (*0x53f5e0 == '\\0') {\n                    arg3 = *(*0x20 + 0x18);\n                }\n                else {\n                    *0x53f5e8 = iVar10;\n                    if (*0x593680 == 0) {\n                        arg3 = *(*0x20 + 0x18);\n                        *0x53f5f0 = arg3;\n                    }\n                    else {\n                        arg3 = *(*0x20 + 0x18);\n                        *(*0x20 + -0xb8) = 0x4869a8;\n                        iVar3 = fcn.0045c760(arg1, iVar10, arg3, in_R9);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar10;\n                *(*0x20 + -0x10) = arg3;\n                if (*(*0x20 + -0x18) == 0) {\n                    uVar9 = 0;\n                    bVar15 = false;\n                    arg3 = NULL;\n                }\n                else {\n                    uVar1 = *(*(*0x20 + -0x18) + 0x17);\n                    in_R9 = uVar1;\n                    uVar9 = uVar1 & 0x1f;\n                    bVar15 = (uVar1 & 0x20) == 0;\n                }\n            }\n            if (uVar9 == 0x16) {\n                if (bVar15) {\n                    arg3 = *arg3;\n                }\n                if (arg3 == NULL) {\n                    piVar4 = *(*0x20 + 8);\n                    uVar6 = piVar4[1];\n                    uVar7 = uVar6 + 5;\n                    iVar3 = *piVar4;\n                    uVar8 = uVar6;\n                    uVar11 = piVar4[2];\n                    if (piVar4[2] < uVar7) {\n                        *(*0x20 + -0x48) = uVar7;\n                        *(*0x20 + -0x50) = uVar6;\n                        *(*0x20 + -0xb8) = 0x486a5e;\n                        iVar3 = fcn.00445200(uVar6);\n                        uVar7 = *(*0x20 + -0x48);\n                        piVar4 = *(*0x20 + 8);\n                        uVar8 = *(*0x20 + -0x50);\n                        uVar11 = uVar6;\n                    }\n                    *(iVar3 + uVar8) = 0x6c696e3c;\n                    *(iVar3 + 4 + uVar8) = 0x3e;\n                    piVar4[1] = uVar7;\n                    piVar4[2] = uVar11;\n                    if (*0x593680 == 0) {\n                        *piVar4 = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x486a9d;\n                        fcn.0045c720(uVar8, uVar11, arg3, in_R9);\n                    }\n                    return;\n                }\n            }\n            unaff_RDI = *(*0x20 + 8);\n            if (*(unaff_RDI + 0xb2) == '\\0') {\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x30) = unaff_RBX;\n                uVar2 = *(unaff_RDI + 10);\n                *(*0x20 + -0x39) = unaff_RDI[9];\n                *(*0x20 + -0x31) = uVar2;\n                unaff_RDI[9] = 0;\n                *(unaff_RDI + 0x49) = 0;\n                uVar6 = unaff_RDI[1];\n                uVar7 = uVar6 + 2;\n                iVar3 = *unaff_RDI;\n                uVar8 = uVar6;\n                uVar11 = unaff_RDI[2];\n                if (unaff_RDI[2] < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0x50) = uVar6;\n                    *(*0x20 + -0xb8) = 0x486b28;\n                    iVar3 = fcn.00445200(uVar6);\n                    uVar7 = *(*0x20 + -0x48);\n                    unaff_RDI = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x50);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x2125;\n                unaff_RDI[1] = uVar7;\n                unaff_RDI[2] = uVar11;\n                if (*0x593680 == 0) {\n                    *unaff_RDI = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x486b6f;\n                    fcn.0045c760(uVar8, uVar11, iVar3, in_R9);\n                }\n                *(*0x20 + -0xb8) = 0x486b7b;\n                fcn.00484960();\n                piVar4 = *(*0x20 + 8);\n                uVar6 = piVar4[1];\n                *(*0x20 + -0x48) = uVar6;\n                uVar7 = uVar6 + 7;\n                iVar3 = *piVar4;\n                uVar8 = uVar6;\n                uVar11 = piVar4[2];\n                if (piVar4[2] < uVar7) {\n                    *(*0x20 + -0x50) = uVar7;\n                    *(*0x20 + -0xb8) = 0x486bb1;\n                    iVar3 = fcn.00445200(uVar6);\n                    uVar7 = *(*0x20 + -0x50);\n                    piVar4 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x48);\n                    uVar11 = uVar6;\n                }\n                *(iVar3 + uVar8) = 0x4e415028;\n                *(iVar3 + 3 + uVar8) = 0x3d43494e;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                iVar14 = *(*0x20 + 0x30);\n                uVar6 = uVar8 + iVar14 + 7;\n                iVar10 = uVar8 + iVar14;\n                if (*0x593680 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x486c07;\n                    fcn.0045c720(uVar8, uVar11, iVar14, uVar6);\n                }\n                *(*0x20 + -0x50) = iVar10;\n                *(*0x20 + -0x58) = uVar6;\n                if (uVar11 < uVar6) {\n                    *(*0x20 + -0xb8) = 0x486c2c;\n                    iVar3 = fcn.00445200(uVar7);\n                    iVar14 = *(*0x20 + 0x30);\n                    uVar11 = uVar7;\n                }\n                *(*0x20 + -0x60) = uVar11;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0xb8) = 0x486c65;\n                fcn.0045d3c0(iVar14);\n                uVar8 = *(*0x20 + -0x58);\n                piVar4 = *(*0x20 + 8);\n                piVar4[1] = uVar8;\n                uVar11 = *(*0x20 + -0x60);\n                piVar4[2] = uVar11;\n                uVar7 = *(*0x20 + -0x48) + *(*0x20 + 0x30) + 0x10;\n                if (*0x593680 == 0) {\n                    iVar3 = *(*0x20 + -0x28);\n                    *piVar4 = iVar3;\n                }\n                else {\n                    iVar3 = *(*0x20 + -0x28);\n                    *(*0x20 + -0xb8) = 0x486cbd;\n                    piVar4 = fcn.0045c720(uVar8, uVar11, iVar14, uVar6);\n                }\n                if (uVar11 < uVar7) {\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0xb8) = 0x486cd7;\n                    iVar3 = fcn.00445200(uVar8);\n                    uVar7 = *(*0x20 + -0x48);\n                    piVar4 = *(*0x20 + 8);\n                    uVar11 = uVar8;\n                }\n                iVar10 = *(*0x20 + -0x50);\n                *(iVar10 + 7 + iVar3) = 0x3a646f6874656d20;\n                *(iVar10 + 0xf + iVar3) = 0x20;\n                piVar4[1] = uVar7;\n                piVar4[2] = uVar11;\n                if (*0x593680 == 0) {\n                    *piVar4 = iVar3;\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x486d25;\n                    piVar4 = fcn.0045c720(uVar8, 0x3a646f6874656d20, iVar10, uVar6);\n                }\n                *(piVar4 + 0xb2) = 1;\n                *(*0x20 + -0xb8) = 0x486d45;\n                fcn.00487640(*(*0x20 + -0x30));\n                piVar4 = *(*0x20 + 8);\n                *(piVar4 + 0xb2) = 0;\n                iVar3 = piVar4[1];\n                iVar14 = *piVar4;\n                piVar12 = piVar4;\n                iVar5 = iVar14;\n                if (piVar4[2] < iVar3 + 1U) {\n                    *(*0x20 + -0xb8) = 0x486d75;\n                    iVar5 = fcn.00445200(iVar3);\n                    piVar12 = *(*0x20 + 8);\n                    piVar12[2] = iVar3;\n                    if (*0x593680 == 0) {\n                        *piVar12 = iVar5;\n                        iVar3 = iVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x486d94;\n                        iVar5 = fcn.0045c5e0(iVar3, piVar4, iVar10, uVar6);\n                        iVar3 = iVar14;\n                    }\n                }\n                piVar12[1] = iVar3 + 1;\n                *(iVar5 + iVar3) = 0x29;\n                uVar2 = *(*0x20 + -0x31);\n                piVar12[9] = *(*0x20 + -0x39);\n                *(piVar12 + 10) = uVar2;\n                return;\n            }\n            *(*0x20 + -0xb8) = 0x486dcf;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + 0x20) = unaff_RDI;\n        *(puVar13 + 0x28) = unaff_RSI;\n        *(puVar13 + 0x30) = arg3;\n        *(puVar13 + -8) = 0x486df2;\n        fcn.0045a3a0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        unaff_RDI = *(puVar13 + 0x20);\n        unaff_RSI = *(puVar13 + 0x28);\n        arg3 = *(puVar13 + 0x30);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3294
    },
    "00486e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar fcn.00486e20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    uint64_t uVar5;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack456 [56];\n    ulong *puStack400;\n    ulong *puStack328;\n    ulong *puStack256;\n    int64_t iStack208;\n    int64_t iStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    ulong auStack168 [2];\n    ulong uStack152;\n    uchar auStack144 [16];\n    ulong auStack128 [2];\n    ulong uStack112;\n    uchar auStack104 [16];\n    ulong auStack88 [2];\n    ulong uStack72;\n    uchar auStack64 [16];\n    ulong auStack48 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (auStack456 < *(unaff_R14 + 0x10) || auStack456 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0xb3) != '\\0') {\n        fcn.00432340();\n        return 0;\n    }\n    iVar4 = in_RAX;\n    if (unaff_EBX == 0x77) {\n        uVar1 = *(in_RAX + 0x18);\n        arg1 = *(in_RAX + 0x20);\n        iVar3 = fcn.0040a860(arg1);\n        if (((iVar3 == 0) || (*(in_RAX + 0xb4) == '\\0')) || (*(in_RAX + 0xb8) != 0)) {\n            *(in_RAX + 0xb8) = 0;\n            if (*0x593680 == 0) {\n                *(in_RAX + 0xc0) = 0;\n            }\n            else {\n                arg1 = 0;\n                fcn.0045c6e0();\n            }\n            *(in_RAX + 0xb4) = 0;\n            fcn.00485160(arg1, in_RAX, param_3);\n            fcn.00432340();\n            return 1;\n        }\n        *(in_RAX + 0xb8) = iVar3;\n        if (*0x593680 == 0) {\n            *(in_RAX + 0xc0) = uVar1;\n        }\n        else {\n            fcn.0045c720(arg1, in_RAX, param_3, param_4);\n        }\n        unaff_EBX = 0x76;\n    }\n    uStack184 = *(iVar4 + 0x18);\n    iVar4 = fcn.0040a860(*(iVar4 + 0x20));\n    auStack24._12_4_ = SUB164(in_XMM15 >> 0x60, 0);\n    if (iVar4 != 0) {\n        uStack32 = *(in_RAX + 0x18);\n        auStack48[0] = 0x4875c0;\n        puStack256 = auStack48;\n        iVar2 = fcn.00431d20();\n        if (iVar2 != 0) {\n            fcn.00432340();\n            return 1;\n        }\n        (**(iVar4 + 0x18))(in_RAX);\n        fcn.00432340();\n        return 1;\n    }\n    if (*(in_RAX + 0x50) == '\\0') {\n        if (unaff_EBX < 0x72) {\n            if ((unaff_EBX != 0x58) && (unaff_EBX != 0x71)) goto code_r0x00487193;\n        }\n        else if (((unaff_EBX != 0x73) && (unaff_EBX != 0x76)) && (unaff_EBX != 0x78)) goto code_r0x00487193;\n        iStack208 = *(in_RAX + 0x18);\n        if (iStack208 != 0) {\n            uStack176 = *(in_RAX + 0x20);\n            iVar4 = fcn.0040a860(*(in_RAX + 0x20));\n            if (iVar4 != 0) {\n                uStack112 = *(in_RAX + 0x18);\n                auStack128[0] = 0x4874c0;\n                uVar5 = unaff_EBX;\n                auStack104 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                puStack400 = auStack128;\n                iStack200 = iStack208;\n                iVar2 = fcn.00431d20();\n                if (iVar2 != 0) {\n                    fcn.00432340();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.00485c60(auStack128, uVar5);\n                fcn.00432340();\n                return 1;\n            }\n            iVar4 = fcn.0040a860(uStack176);\n            if (iVar4 != 0) {\n                uStack152 = *(in_RAX + 0x18);\n                auStack168[0] = 0x487440;\n                uVar5 = unaff_EBX;\n                auStack144 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, *(in_RAX + 0x20)));\n                iVar2 = fcn.00431d20();\n                if (iVar2 != 0) {\n                    fcn.00432340();\n                    return 1;\n                }\n                (**(iVar4 + 0x18))();\n                fcn.00485c60(auStack168, uVar5);\n                fcn.00432340();\n                return 1;\n            }\n        }\n    }\n    else {\n        uStack192 = *(in_RAX + 0x18);\n        iVar4 = fcn.0040a860(*(in_RAX + 0x20));\n        if (iVar4 != 0) {\n            uStack72 = *(in_RAX + 0x18);\n            uVar1 = *(in_RAX + 0x20);\n            auStack88[0] = 0x487540;\n            auStack64 = CONCAT412(auStack24._12_4_, CONCAT48(unaff_EBX, uVar1));\n            puStack328 = auStack88;\n            iVar2 = fcn.00431d20();\n            if (iVar2 != 0) {\n                fcn.00432340();\n                return 1;\n            }\n            (**(iVar4 + 0x18))();\n            fcn.00483660(uVar1);\n            fcn.00432340();\n            return 1;\n        }\n    }\ncode_r0x00487193:\n    fcn.00432340();\n    return 0;\n}\n",
        "token_count": 1599
    },
    "00487640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00487640(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    char cVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t arg1_01;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint32_t unaff_EDI;\n    int64_t in_R8;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack24 [8];\n    int64_t iStack16;\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(in_RAX + 0x18) = unaff_RBX;\n    iVar4 = in_RAX + 0x20;\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x20) = arg1;\n    }\n    else {\n        in_RAX = fcn.0045c6e0();\n    }\n    *(in_RAX + 0x38) = 0;\n    if (*0x593680 == 0) {\n        *(in_RAX + 0x28) = in_XMM15;\n    }\n    else {\n        fcn.0045c700(arg1, 0, iVar4, in_R9);\n        in_RAX = fcn.0045c700(arg1, 0, iVar4, in_R9);\n        in_R8 = iVar4;\n    }\n    if (unaff_RBX == 0) {\n        if ((unaff_EDI == 0x54) || (unaff_EDI == 0x76)) {\n            fcn.004828e0(5);\n        }\n        else {\n            fcn.00485160(arg1, iVar4, in_R8);\n        }\n        return;\n    }\n    if (unaff_EDI == 0x54) {\n        if (unaff_RBX == 0) {\n            iVar5 = 0;\n            iVar4 = 0;\n        }\n        else {\n            iVar5 = 0x4ca2b0;\n            iVar4 = unaff_RBX;\n        }\n        iStack16 = arg1;\n        (**(iVar5 + 0xf8))(iVar4);\n        fcn.00483660(unaff_RBX);\n        return;\n    }\n    if (unaff_EDI != 0x70) {\n        if (unaff_RBX != 0) {\n            uVar1 = *(unaff_RBX + 0x10);\n            if (uVar1 < 0xb0c23ed4) {\n                if (uVar1 < 0x500c1abd) {\n                    if (uVar1 < 0x2ea27ffc) {\n                        if (uVar1 == 0x13ff06c5) {\n                            if (unaff_RBX == 0x494fc0) {\n                                fcn.00485660(unaff_EDI);\n                                return;\n                            }\n                        }\n                        else if ((uVar1 == 0x2ea27ffb) && (unaff_RBX == 0x495140)) {\n                            fcn.00485960(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if (uVar1 == 0x382e7edf) {\n                        if (unaff_RBX == 0x494e40) {\n                            fcn.00485d60(*(arg1 + 8), *(arg1 + 8), 0x4a6ee1, 6);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x500c1abc) && (unaff_RBX == 0x4a5d00)) {\n                        arg1_01 = *(arg1 + 0x10);\n                        arg1_00 = *(arg1 + 8);\n                        if ((arg1_01 != 0) && ((arg1_01 & 0x60) == 0)) {\n                            arg4 = arg1_01;\n                            uVar3 = fcn.0047aa40(arg1_01);\n                            *(in_RAX + 0x18) = uVar3;\n                            if (*0x593680 == 0) {\n                                *(in_RAX + 0x20) = arg1_00;\n                                iVar4 = in_RAX;\n                            }\n                            else {\n                                fcn.0045c720(arg1_01, in_RAX, in_R8, arg4);\n                                iVar4 = in_RAX;\n                            }\n                            cVar2 = fcn.00486e20();\n                            if (cVar2 != '\\0') {\n                                return;\n                            }\n                        }\n                        fcn.00487e20(arg1_00, iVar4, 0);\n                        return;\n                    }\n                }\n                else if (uVar1 < 0x7925028d) {\n                    if (uVar1 == 0x663e425f) {\n                        if (unaff_RBX == 0x495d40) {\n                            fcn.00485760(0, 0x495d40);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0x7925028c) && (unaff_RBX == 0x4950c0)) {\n                        fcn.00485a60(unaff_EDI);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x86318d2e) {\n                    if (unaff_RBX == 0x495d00) {\n                        fcn.00485760(0, 0x495d00);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0x963f9bff) {\n                    if (unaff_RBX == 0x4955c0) {\n                        fcn.00485760(1, 0x4955c0);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xb0c23ed3) && (unaff_RBX == 0x495100)) {\n                    fcn.00485960(unaff_EDI);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xd04ae83e) {\n                if (uVar1 < 0xbbad4103) {\n                    if (uVar1 == 0xb31a546d) {\n                        if (unaff_RBX == 0x495080) {\n                            fcn.00485a60(unaff_EDI);\n                            return;\n                        }\n                    }\n                    else if ((uVar1 == 0xbbad4102) && (unaff_RBX == 0x495580)) {\n                        fcn.00485760(1, 0x495580);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xbd4ad792) {\n                    if (unaff_RBX == 0x495d80) {\n                        fcn.00485760(0, 0x495d80);\n                        return;\n                    }\n                }\n                else if (uVar1 == 0xcc06c027) {\n                    if (unaff_RBX == 0x495600) {\n                        fcn.00485760(1, 0x495600);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xd04ae83d) && (unaff_RBX == 0x495cc0)) {\n                    fcn.00485760(0, 0x495cc0);\n                    return;\n                }\n            }\n            else if (uVar1 < 0xe0ff5cb5) {\n                if (uVar1 == 0xd5b87712) {\n                    if (unaff_RBX == 0x495c40) {\n                        fcn.00485760(0, 0x495c40);\n                        return;\n                    }\n                }\n                else if ((uVar1 == 0xe0ff5cb4) && (unaff_RBX == 0x495bc0)) {\n                    fcn.00485c60(*(arg1 + 8), *(arg1 + 8));\n                    return;\n                }\n            }\n            else if (uVar1 == 0xecd580ce) {\n                if (unaff_RBX == 0x495540) {\n                    fcn.00485760(1, 0x495540);\n                    return;\n                }\n            }\n            else if (uVar1 == 0xeff20ea0) {\n                if (unaff_RBX == 0x495c80) {\n                    fcn.00485760(0, 0x495c80);\n                    return;\n                }\n            }\n            else if ((uVar1 == 0xf75371fa) && (unaff_RBX == 0x495500)) {\n                fcn.00485760(1, 0x495500);\n                return;\n            }\n        }\n        iVar4 = arg1;\n        cVar2 = fcn.00486e20();\n        if (cVar2 == '\\0') {\n            iVar5 = *0x53f5f0;\n            if ((*0x53f5e0 != '\\0') && (*0x53f5e8 = unaff_RBX,  iVar5 = arg1,  *0x593680 != 0)) {\n                fcn.0045c780(iVar4, unaff_RBX, in_R8);\n                iVar5 = *0x53f5f0;\n            }\n            *0x53f5f0 = iVar5;\n            if (unaff_RBX == 0) {\n                unaff_RBX = 0;\n                arg1 = 0;\n            }\n            fcn.00487e20(arg1, unaff_RBX, 0);\n        }\n        return;\n    }\n    iVar4 = *0x53f5f0;\n    if ((*0x53f5e0 != '\\0') && (*0x53f5e8 = unaff_RBX,  iVar4 = arg1,  *0x593680 != 0)) {\n        fcn.0045c6e0();\n        iVar4 = *0x53f5f0;\n    }\n    *0x53f5f0 = iVar4;\n    if (unaff_RBX == 0) {\n        arg1 = 0;\n    }\n    fcn.00486460(arg1);\n    return;\n}\n",
        "token_count": 2316
    },
    "0048a080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048a080(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00445200(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x593680 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c700(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.00484960();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 10) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00445200(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x45444e4944414228;\n    *(iVar2 + 8 + uVar1) = 0x2958;\n    in_RAX[1] = uVar1 + 10;\n    in_RAX[2] = uVar3;\n    if (*0x593680 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c720(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 489
    },
    "0048a1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048a1c0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    uint64_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 2) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00445200(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x2125;\n    in_RAX[1] = uVar1 + 2;\n    in_RAX[2] = uVar3;\n    if (*0x593680 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c700(uVar1, iVar2, arg3, in_R9);\n    }\n    fcn.00484960();\n    uVar1 = in_RAX[1];\n    uVar3 = in_RAX[2];\n    iVar2 = *in_RAX;\n    if (uVar3 < uVar1 + 9) {\n        uVar3 = uVar1;\n        iVar2 = fcn.00445200(uVar1);\n    }\n    *(iVar2 + uVar1) = 0x474e495353494d28;\n    *(iVar2 + 8 + uVar1) = 0x29;\n    in_RAX[1] = uVar1 + 9;\n    in_RAX[2] = uVar3;\n    if (*0x593680 == 0) {\n        *in_RAX = iVar2;\n    }\n    else {\n        fcn.0045c720(uVar1, uVar3, arg3, in_R9);\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "0048a300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0048a300(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    uint32_t uVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    char cVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint64_t unaff_RBX;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uchar *puVar18;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t iVar19;\n    uint64_t unaff_RDI;\n    int64_t iVar20;\n    int64_t unaff_R14;\n    bool bVar21;\n    bool bVar22;\n    \n    while (puVar18 = *0x20,  *0x20 + -0x70 < *(unaff_R14 + 0x10) || *0x20 + -0x70 == *(unaff_R14 + 0x10)) {\ncode_r0x0048b2bc:\n        *(puVar18 + 8) = in_RAX;\n        *(puVar18 + 0x10) = unaff_RBX;\n        *(puVar18 + 0x18) = arg1;\n        *(puVar18 + 0x20) = unaff_RDI;\n        *(puVar18 + 0x28) = unaff_RSI;\n        *(puVar18 + 0x30) = arg3;\n        *(puVar18 + -8) = 0x48b2df;\n        fcn.0045a3a0();\n        in_RAX = *(puVar18 + 8);\n        unaff_RBX = *(puVar18 + 0x10);\n        arg1 = *(puVar18 + 0x18);\n        unaff_RDI = *(puVar18 + 0x20);\n        unaff_RSI = *(puVar18 + 0x28);\n        arg3 = *(puVar18 + 0x30);\n        *0x20 = puVar18;\n    }\n    puVar18 = *0x20 + -0xf0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(in_RAX + 0x16) = 0;\n    uVar13 = 0;\n    uVar17 = 0;\n    do {\n        if (arg1 <= uVar13) goto code_r0x0048ab7a;\n        *(in_RAX + 0xb1) = 1;\n        uVar14 = uVar13;\ncode_r0x0048b028:\n        if (uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x0048b2b3;\n            if (*(unaff_RBX + uVar13) == '%') goto code_r0x0048a3ab;\n            goto code_r0x0048b025;\n        }\ncode_r0x0048a3ab:\n        *(*0x20 + -0x98) = uVar17;\n        if (uVar14 < uVar13) {\n            bVar21 = uVar13 <= arg1;\n            uVar6 = arg1;\n            arg1 = uVar13;\n            if (bVar21) {\n                if (uVar14 <= uVar13) {\n                    *(*0x20 + -0xa0) = uVar13;\n                    iVar19 = uVar13 - uVar14;\n                    uVar13 = in_RAX[1];\n                    *(*0x20 + -0x58) = iVar19 + uVar13;\n                    uVar6 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    if (in_RAX[2] < iVar19 + uVar13) {\n                        *(*0x20 + -0x60) = iVar19;\n                        *(*0x20 + -0x48) = unaff_RBX + (uVar14 & -iVar19 >> 0x3f);\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48a437;\n                        uVar6 = fcn.00445200(uVar13);\n                        iVar19 = *(*0x20 + -0x60);\n                        uVar15 = uVar13;\n                    }\n                    *(*0x20 + -0x60) = uVar15;\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0xf8) = 0x48a474;\n                    fcn.0045d3c0(iVar19);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[1] = *(*0x20 + -0x58);\n                    in_RAX[2] = *(*0x20 + -0x60);\n                    if (*0x593680 == 0) {\n                        *in_RAX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa0);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48a4ca;\n                        in_RAX = fcn.0045c700(iVar19, *(*0x20 + -0x38), uVar6, uVar17);\n                        arg1 = *(*0x20 + 0x18);\n                        uVar13 = *(*0x20 + -0xa0);\n                        bVar22 = SBORROW8(arg1, uVar13);\n                        iVar19 = arg1 - uVar13;\n                        bVar21 = arg1 == uVar13;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    arg3 = *(*0x20 + 0x30);\n                    uVar17 = *(*0x20 + -0x98);\n                    goto code_r0x0048a505;\n                }\n                goto code_r0x0048b299;\n            }\ncode_r0x0048b2a5:\n            *(*0x20 + -0xf8) = 0x48b2b3;\n            fcn.0045cac0(arg1, uVar6);\ncode_r0x0048b2b3:\n            *(*0x20 + -0xf8) = 0x48b2bb;\n            in_RAX = fcn.0045ca80(arg1);\n            goto code_r0x0048b2bc;\n        }\n        bVar22 = SBORROW8(arg1, uVar13);\n        iVar19 = arg1 - uVar13;\n        bVar21 = arg1 == uVar13;\ncode_r0x0048a505:\n        if (bVar21 || bVar22 != iVar19 < 0) goto code_r0x0048ab7a;\n        in_RAX[9] = 0;\n        *(in_RAX + 0x49) = 0;\n        while (uVar13 = uVar13 + 1,  uVar13 < arg1) {\n            if (arg1 <= uVar13) goto code_r0x0048b291;\n            uVar1 = *(unaff_RBX + uVar13);\n            if (uVar1 < 0x24) {\n                if (uVar1 == 0x20) {\n                    *(in_RAX + 0x4d) = 1;\n                }\n                else {\n                    if (uVar1 != 0x23) {\ncode_r0x0048a525:\n                        if ((uVar1 + 0x9f < 0x1a) && (uVar17 < unaff_RSI)) {\n                            if (uVar1 == 0x76) {\n                                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                                *(in_RAX + 0x4c) = 0;\n                                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                                *(in_RAX + 0x4b) = 0;\n                            }\n                            if (unaff_RSI <= uVar17) goto code_r0x0048b286;\n                            *(*0x20 + -0xa0) = uVar13;\n                            uVar9 = *(unaff_RDI + 8 + uVar17 * 0x10);\n                            *(*0x20 + -0xf8) = 0x48a588;\n                            fcn.00487640(uVar9);\n                            uVar14 = *(*0x20 + -0x98) + 1;\n                            uVar13 = *(*0x20 + -0xa0) + 1;\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + 8);\n                            goto code_r0x0048a36c;\n                        }\n                        break;\n                    }\n                    *(in_RAX + 0x4c) = 1;\n                }\n            }\n            else if (uVar1 == 0x2b) {\n                *(in_RAX + 0x4b) = 1;\n            }\n            else if (uVar1 == 0x2d) {\n                *(in_RAX + 0x4a) = 1;\n                *(in_RAX + 0x4e) = 0;\n            }\n            else {\n                if (uVar1 != 0x30) goto code_r0x0048a525;\n                *(in_RAX + 0x4e) = *(in_RAX + 0x4a) ^ 1;\n            }\n        }\n        *(*0x20 + -0xf8) = 0x48a5cf;\n        uVar15 = uVar13;\n        arg3 = unaff_RSI;\n        uVar6 = fcn.00489f60(unaff_RBX, uVar13, unaff_RSI);\n        cVar12 = unaff_RBX;\n        arg1 = *(*0x20 + 0x18);\n        if (uVar17 < arg1) {\n            unaff_RSI = uVar13;\n            if (uVar17 < arg1) {\n                uVar13 = *(*0x20 + 0x10);\n                if (*(uVar13 + uVar17) != '*') goto code_r0x0048a732;\n                *(*0x20 + -0x70) = uVar17;\n                uVar9 = *(*0x20 + 0x28);\n                uVar6 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x48a636;\n                iVar19 = fcn.00489c60(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xb] = iVar19;\n                *(piVar10 + 9) = uVar9;\n                if (uVar9 == '\\0') {\n                    uVar17 = piVar10[1];\n                    uVar13 = uVar17 + 0xc;\n                    iVar19 = *piVar10;\n                    uVar14 = uVar17;\n                    uVar7 = piVar10[2];\n                    if (piVar10[2] < uVar13) {\n                        *(*0x20 + -0x78) = uVar6;\n                        *(*0x20 + -0x58) = uVar13;\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0xf8) = 0x48a68c;\n                        iVar19 = fcn.00445200(uVar17);\n                        uVar13 = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar14 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x78);\n                        uVar7 = uVar17;\n                    }\n                    *(iVar19 + uVar14) = 0x4957444142282125;\n                    *(iVar19 + 8 + uVar14) = 0x29485444;\n                    piVar10[1] = uVar13;\n                    piVar10[2] = uVar7;\n                    if (*0x593680 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48a6e5;\n                        fcn.0045c720(uVar6, uVar15, arg3, uVar14);\n                    }\n                }\n                if (piVar10[0xb] < 0) {\n                    piVar10[0xb] = -piVar10[0xb];\n                    *(piVar10 + 0x4a) = 1;\n                    *(piVar10 + 0x4e) = 0;\n                }\n                uVar7 = *(*0x20 + -0x70) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x0048a770;\n            }\ncode_r0x0048b27b:\n            uVar13 = uVar15;\n            *(*0x20 + -0xf8) = 0x48b286;\n            fcn.0045ca80(arg1);\n            unaff_RBX = uVar17;\n            unaff_RDI = arg1;\ncode_r0x0048b286:\n            *(*0x20 + -0xf8) = 0x48b291;\n            arg1 = unaff_RSI;\n            fcn.0045ca80(unaff_RSI);\ncode_r0x0048b291:\n            *(*0x20 + -0xf8) = 0x48b299;\n            fcn.0045ca80(arg1);\ncode_r0x0048b299:\n            *(*0x20 + -0xf8) = 0x48b2a5;\n            arg1 = uVar13;\n            fcn.0045cb40(uVar13);\n            uVar6 = uVar13;\n            goto code_r0x0048b2a5;\n        }\n        uVar13 = *(*0x20 + 0x10);\ncode_r0x0048a732:\n        if (uVar17 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            for (; uVar7 = uVar17,  uVar17 < arg1; uVar17 = uVar17 + 1) {\n                if (arg1 <= uVar17) goto code_r0x0048b270;\n                uVar1 = *(uVar13 + uVar17);\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n                if (2000000 < unaff_RSI + 1000000) {\n                    uVar15 = 0;\n                    unaff_RSI = 0;\n                    uVar7 = arg1;\n                    break;\n                }\n                unaff_RSI = (uVar1 - 0x30 & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n            }\n        }\n        else {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n        }\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xb] = unaff_RSI;\n        *(in_RAX + 9) = uVar15;\n        if ((cVar12 != '\\0') && (uVar15 != '\\0')) {\n            *(in_RAX + 0xb1) = 0;\n        }\ncode_r0x0048a770:\n        unaff_RSI = uVar7 + 1;\n        unaff_RBX = uVar13;\n        if (arg1 <= unaff_RSI) goto code_r0x0048a925;\n        uVar17 = uVar7;\n        if (arg1 <= uVar7) {\ncode_r0x0048b265:\n            *(*0x20 + -0xf8) = 0x48b270;\n            fcn.0045ca80(arg1);\ncode_r0x0048b270:\n            *(*0x20 + -0xf8) = 0x48b27b;\n            fcn.0045ca80(arg1);\n            goto code_r0x0048b27b;\n        }\n        if (*(uVar13 + uVar7) != '.') goto code_r0x0048a925;\n        if (cVar12 != '\\0') {\n            *(in_RAX + 0xb1) = 0;\n        }\n        arg3 = *(*0x20 + 0x28);\n        *(*0x20 + -0xf8) = 0x48a7ba;\n        uVar14 = fcn.00489f60(uVar13, uVar15, arg3);\n        arg1 = *(*0x20 + 0x18);\n        uVar17 = uVar6;\n        if (uVar6 < arg1) {\n            if (arg1 <= uVar6) {\ncode_r0x0048b258:\n                *(*0x20 + -0xf8) = 0x48b265;\n                fcn.0045ca80(arg1);\n                goto code_r0x0048b265;\n            }\n            unaff_RBX = *(*0x20 + 0x10);\n            if (*(unaff_RBX + uVar6) == '*') {\n                *(*0x20 + -0x80) = uVar6;\n                uVar9 = *(*0x20 + 0x28);\n                uVar6 = *(*0x20 + 0x30);\n                *(*0x20 + -0xf8) = 0x48a813;\n                iVar19 = fcn.00489c60(uVar6);\n                piVar10 = *(*0x20 + 8);\n                piVar10[0xc] = iVar19;\n                *(piVar10 + 0x49) = uVar9;\n                if (piVar10[0xc] < 0) {\n                    piVar10[0xc] = 0;\n                    *(piVar10 + 0x49) = 0;\n                }\n                if (*(piVar10 + 0x49) == '\\0') {\n                    uVar13 = piVar10[1];\n                    unaff_RSI = uVar13 + 0xb;\n                    iVar19 = *piVar10;\n                    uVar17 = uVar13;\n                    uVar14 = piVar10[2];\n                    if (piVar10[2] < unaff_RSI) {\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0x58) = unaff_RSI;\n                        *(*0x20 + -0x60) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48a87b;\n                        iVar19 = fcn.00445200(uVar13);\n                        unaff_RSI = *(*0x20 + -0x58);\n                        piVar10 = *(*0x20 + 8);\n                        uVar17 = *(*0x20 + -0x60);\n                        uVar6 = *(*0x20 + -0x88);\n                        uVar14 = uVar13;\n                    }\n                    *(iVar19 + uVar17) = 0x5250444142282125;\n                    *(iVar19 + 3 + uVar17) = 0x2943455250444142;\n                    piVar10[1] = unaff_RSI;\n                    piVar10[2] = uVar14;\n                    if (*0x593680 == 0) {\n                        *piVar10 = iVar19;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48a8d6;\n                        fcn.0045c720(uVar6, uVar15, arg3, uVar17);\n                    }\n                }\n                uVar7 = *(*0x20 + -0x80) + 1;\n                arg1 = *(*0x20 + 0x18);\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                cVar12 = '\\0';\n                goto code_r0x0048a925;\n            }\n        }\n        else {\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if (uVar6 < arg1) {\n            uVar15 = 0;\n            unaff_RSI = 0;\n            goto code_r0x0048b1ee;\n        }\n        uVar15 = 0;\n        unaff_RSI = 0;\n        uVar6 = uVar14;\n        uVar7 = arg1;\ncode_r0x0048b223:\n        cVar12 = uVar13;\n        in_RAX = *(*0x20 + 8);\n        in_RAX[0xc] = unaff_RSI;\n        *(in_RAX + 0x49) = uVar15;\n        if (uVar15 == '\\0') {\n            in_RAX[0xc] = 0;\n            *(in_RAX + 0x49) = 1;\n        }\ncode_r0x0048a925:\n        uVar14 = uVar6;\n        uVar17 = uVar7;\n        if (cVar12 == '\\0') {\n            arg3 = *(*0x20 + 0x28);\n            *(*0x20 + -0xf8) = 0x48a945;\n            uVar14 = fcn.00489f60(unaff_RBX, uVar15, arg3);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar17 = uVar6;\n            unaff_RSI = uVar7;\n        }\n        *(*0x20 + -0x58) = uVar14;\n        if (arg1 <= uVar17) break;\n        if (arg1 <= uVar17) {\ncode_r0x0048b1cb:\n            *(*0x20 + -0xf8) = 0x48b1d6;\n            uVar13 = arg1;\n            uVar6 = fcn.0045ca80(arg1);\n            do {\n                unaff_RSI = (in_RAX - 0x30U & 0xff) + unaff_RSI * 10;\n                uVar15 = 1;\n                uVar14 = uVar6;\n                uVar17 = uVar17 + 1;\ncode_r0x0048b1ee:\n                uVar6 = uVar14;\n                uVar7 = uVar17;\n                if (arg1 <= uVar17) goto code_r0x0048b223;\n                if (arg1 <= uVar17) {\n                    *(*0x20 + -0xf8) = 0x48b258;\n                    fcn.0045ca80(arg1);\n                    goto code_r0x0048b258;\n                }\n                uVar1 = *(unaff_RBX + uVar17);\n                in_RAX = uVar1;\n                if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x0048b223;\n            } while (unaff_RSI + 1000000 < 0x1e8481);\n            uVar15 = 0;\n            unaff_RSI = 0;\n            uVar7 = arg1;\n            goto code_r0x0048b223;\n        }\n        uVar5 = *(unaff_RBX + uVar17);\n        if (*(unaff_RBX + uVar17) < 0x80) {\n            uVar6 = 1;\n        }\n        else {\n            *(*0x20 + -0xa0) = uVar17;\n            uVar6 = arg1 - uVar17;\n            *(*0x20 + -0xf8) = 0x48a9b1;\n            uVar15 = uVar6;\n            uVar5 = fcn.0046bd00();\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = *(*0x20 + -0xa0);\n        }\n        uVar13 = uVar6 + uVar17;\n        *(*0x20 + -0xa0) = uVar13;\n        if (uVar5 != 0x25) {\n            if (*(in_RAX + 0xb1) == '\\0') {\n                *(*0x20 + -0xf8) = 0x48ab50;\n                fcn.0048a080(uVar6, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x0048a36c;\n            }\n            uVar13 = *(*0x20 + 0x28);\n            if (uVar13 <= uVar14) {\n                *(*0x20 + -0xf8) = 0x48ab17;\n                fcn.0048a1c0(uVar13, uVar15, arg3);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                uVar14 = *(*0x20 + -0x58);\n                goto code_r0x0048a36c;\n            }\n            if (uVar5 == 0x76) {\n                *(in_RAX + 10) = *(in_RAX + 0x4c);\n                *(in_RAX + 0x4c) = 0;\n                *(in_RAX + 0x4f) = *(in_RAX + 0x4b);\n                *(in_RAX + 0x4b) = 0;\n            }\n            if (uVar14 < uVar13) {\n                uVar9 = *(*(*0x20 + -0x20) + 8 + uVar14 * 0x10);\n                *(*0x20 + -0xf8) = 0x48aade;\n                fcn.00487640(uVar9);\n                uVar14 = *(*0x20 + -0x58) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n                uVar13 = *(*0x20 + -0xa0);\n                goto code_r0x0048a36c;\n            }\n            *(*0x20 + -0xf8) = 0x48b1cb;\n            fcn.0045ca80(uVar13);\n            goto code_r0x0048b1cb;\n        }\n        uVar17 = in_RAX[1];\n        uVar6 = *in_RAX;\n        uVar7 = uVar6;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x48aa14;\n            uVar7 = fcn.00445200(uVar17);\n            puVar2 = *(*0x20 + 8);\n            puVar2[2] = uVar17;\n            if (*0x593680 == 0) {\n                *puVar2 = uVar7;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48aa33;\n                uVar7 = fcn.0045c5e0(uVar17, uVar15, arg3, unaff_RBX);\n            }\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_RAX = *(*0x20 + 8);\n            uVar13 = *(*0x20 + -0xa0);\n            uVar14 = *(*0x20 + -0x58);\n            uVar17 = uVar6;\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar7 + uVar17) = 0x25;\ncode_r0x0048a36c:\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar17 = uVar14;\n    } while( true );\n    uVar17 = in_RAX[1];\n    uVar13 = uVar17 + 10;\n    uVar14 = *in_RAX;\n    uVar6 = uVar17;\n    uVar15 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x60) = uVar13;\n        *(*0x20 + -0x68) = uVar17;\n        *(*0x20 + -0xf8) = 0x48b145;\n        uVar14 = fcn.00445200(uVar17);\n        uVar13 = *(*0x20 + -0x60);\n        in_RAX = *(*0x20 + 8);\n        uVar6 = *(*0x20 + -0x68);\n        uVar15 = uVar17;\n    }\n    *(uVar14 + uVar6) = 0x5245564f4e282125;\n    *(uVar14 + 8 + uVar6) = 0x2942;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar15;\n    if (*0x593680 == 0) {\n        *in_RAX = uVar14;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48b19e;\n        fcn.0045c720(uVar6, 0x5245564f4e282125, arg3, unaff_RBX);\n    }\n    unaff_RSI = *(*0x20 + 0x28);\n    unaff_RDI = *(*0x20 + -0x20);\n    arg3 = *(*0x20 + 0x30);\n    uVar17 = *(*0x20 + -0x58);\ncode_r0x0048ab7a:\n    if (*(in_RAX + 0x16) != '\\0') {\n        return;\n    }\n    if (unaff_RSI <= uVar17) {\n        return;\n    }\n    in_RAX[9] = 0;\n    *(in_RAX + 0x49) = 0;\n    uVar6 = in_RAX[1];\n    uVar13 = uVar6 + 9;\n    unaff_RBX = *in_RAX;\n    uVar15 = uVar6;\n    uVar14 = in_RAX[2];\n    if (in_RAX[2] < uVar13) {\n        *(*0x20 + -0x58) = uVar13;\n        *(*0x20 + -0x60) = uVar6;\n        *(*0x20 + -0x98) = uVar17;\n        *(*0x20 + -0xf8) = 0x48abdd;\n        unaff_RBX = fcn.00445200(uVar6);\n        uVar13 = *(*0x20 + -0x58);\n        unaff_RSI = *(*0x20 + 0x28);\n        unaff_RDI = *(*0x20 + -0x20);\n        arg3 = *(*0x20 + 0x30);\n        uVar17 = *(*0x20 + -0x98);\n        in_RAX = *(*0x20 + 8);\n        uVar15 = *(*0x20 + -0x60);\n        uVar14 = uVar6;\n    }\n    *(unaff_RBX + uVar15) = 0x4152545845282125;\n    *(unaff_RBX + 8 + uVar15) = 0x20;\n    in_RAX[1] = uVar13;\n    in_RAX[2] = uVar14;\n    if (*0x593680 == 0) {\n        *in_RAX = unaff_RBX;\n    }\n    else {\n        *(*0x20 + -0xf8) = 0x48ac4f;\n        in_RAX = fcn.0045c720(unaff_RDI, uVar13, arg3, uVar17);\n    }\n    if (uVar17 <= unaff_RSI) {\n        iVar19 = unaff_RSI - uVar17;\n        uVar13 = uVar17 - arg3 >> 0x3f & uVar17 << 4;\n        piVar10 = unaff_RDI + uVar13;\n        if (iVar19 != 0) {\n            *(*0x20 + -0x58) = iVar19;\n            arg3 = 0;\n            while( true ) {\n                *(*0x20 + -0xa8) = arg3;\n                *(*0x20 + -0x28) = piVar10;\n                iVar20 = *piVar10;\n                *(*0x20 + -0x90) = iVar20;\n                uVar13 = piVar10[1];\n                *(*0x20 + -0x40) = uVar13;\n                if (0 < arg3) {\n                    uVar14 = in_RAX[1];\n                    uVar17 = uVar14 + 2;\n                    uVar6 = *in_RAX;\n                    uVar7 = in_RAX[2];\n                    uVar15 = uVar14;\n                    if (in_RAX[2] < uVar17) {\n                        *(*0x20 + -0x60) = uVar14;\n                        *(*0x20 + -0x68) = uVar17;\n                        *(*0x20 + -0xf8) = 0x48ad53;\n                        uVar6 = fcn.00445200(uVar14);\n                        piVar10 = *(*0x20 + -0x28);\n                        iVar19 = *(*0x20 + -0x58);\n                        iVar20 = *(*0x20 + -0x90);\n                        uVar13 = *(*0x20 + -0x40);\n                        uVar15 = *(*0x20 + -0x60);\n                        uVar17 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa8);\n                        uVar7 = uVar14;\n                    }\n                    *(uVar6 + uVar15) = 0x202c;\n                    in_RAX[1] = uVar17;\n                    in_RAX[2] = uVar7;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48adb8;\n                        in_RAX = fcn.0045c720(arg3, piVar10, iVar20, uVar13);\n                    }\n                }\n                if (iVar20 == 0) {\n                    uVar17 = in_RAX[1];\n                    uVar13 = uVar17 + 5;\n                    uVar14 = *in_RAX;\n                    uVar15 = in_RAX[2];\n                    uVar6 = uVar17;\n                    if (in_RAX[2] < uVar13) {\n                        *(*0x20 + -0x60) = uVar17;\n                        *(*0x20 + -0x68) = uVar13;\n                        *(*0x20 + -0xf8) = 0x48ae05;\n                        uVar14 = fcn.00445200(uVar17);\n                        piVar10 = *(*0x20 + -0x28);\n                        iVar19 = *(*0x20 + -0x58);\n                        uVar6 = *(*0x20 + -0x60);\n                        uVar13 = *(*0x20 + -0x68);\n                        in_RAX = *(*0x20 + 8);\n                        arg3 = *(*0x20 + -0xa8);\n                        uVar15 = uVar17;\n                    }\n                    *(uVar14 + uVar6) = 0x6c696e3c;\n                    *(uVar14 + 4 + uVar6) = 0x3e;\n                    in_RAX[1] = uVar13;\n                    in_RAX[2] = uVar15;\n                    if (*0x593680 == 0) {\n                        *in_RAX = uVar14;\n                    }\n                    else {\n                        *(*0x20 + -0xf8) = 0x48ae67;\n                        in_RAX = fcn.0045c720(arg3, piVar10, uVar6, uVar13);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = iVar20;\n                    *(*0x20 + -0x10) = uVar13;\n                    iVar19 = *(*0x20 + -0x18);\n                    if (iVar19 == 0) {\n                        iVar20 = 0;\n                        iVar19 = 0;\n                    }\n                    else {\n                        iVar20 = 0x4ca2b0;\n                    }\n                    pcVar3 = *(iVar20 + 0xf8);\n                    *(*0x20 + -0xf8) = 0x48aea2;\n                    uVar8 = (*pcVar3)();\n                    *(*0x20 + -0xb0) = iVar19;\n                    puVar4 = *(*0x20 + 8);\n                    uVar17 = puVar4[1];\n                    *(*0x20 + -0x60) = uVar17;\n                    *(*0x20 + -0x68) = uVar17 + iVar19;\n                    uVar9 = *puVar4;\n                    uVar14 = puVar4[2];\n                    if (puVar4[2] < uVar17 + iVar19) {\n                        *(*0x20 + -0x50) = uVar8;\n                        *(*0x20 + -0xf8) = 0x48aeed;\n                        uVar9 = fcn.00445200(uVar17);\n                        iVar19 = *(*0x20 + -0xb0);\n                        uVar14 = uVar17;\n                    }\n                    *(*0x20 + -0x70) = uVar14;\n                    *(*0x20 + -0x30) = uVar9;\n                    *(*0x20 + -0xf8) = 0x48af2a;\n                    fcn.0045d3c0(iVar19);\n                    iVar19 = *(*0x20 + -0x68);\n                    piVar10 = *(*0x20 + 8);\n                    piVar10[1] = iVar19;\n                    uVar17 = *(*0x20 + -0x70);\n                    piVar10[2] = uVar17;\n                    uVar14 = *(*0x20 + -0x60);\n                    iVar20 = *(*0x20 + -0xb0);\n                    if (*0x593680 == 0) {\n                        iVar16 = *(*0x20 + -0x30);\n                        *piVar10 = iVar16;\n                        uVar6 = uVar14;\n                    }\n                    else {\n                        iVar16 = *(*0x20 + -0x30);\n                        *(*0x20 + -0xf8) = 0x48af88;\n                        piVar10 = fcn.0045c720(iVar19, uVar17, uVar9, uVar13);\n                        uVar6 = uVar17;\n                    }\n                    iVar11 = iVar16;\n                    if (uVar17 < iVar20 + uVar14 + 1) {\n                        *(*0x20 + -0xf8) = 0x48af9d;\n                        iVar11 = fcn.00445200(iVar19);\n                        piVar10 = *(*0x20 + 8);\n                        piVar10[2] = iVar19;\n                        if (*0x593680 == 0) {\n                            *piVar10 = iVar11;\n                            iVar19 = iVar16;\n                        }\n                        else {\n                            *(*0x20 + -0xf8) = 0x48afbc;\n                            iVar11 = fcn.0045c5e0(iVar19, uVar6, uVar9, uVar13);\n                            iVar19 = iVar16;\n                        }\n                    }\n                    piVar10[1] = iVar19 + 1;\n                    *(iVar11 + iVar19) = 0x3d;\n                    *(*0x20 + -0xf8) = 0x48afe8;\n                    fcn.00487640(*(*0x20 + -0x40));\n                    in_RAX = *(*0x20 + 8);\n                    arg3 = *(*0x20 + -0xa8);\n                    piVar10 = *(*0x20 + -0x28);\n                    iVar19 = *(*0x20 + -0x58);\n                }\n                arg3 = arg3 + 1;\n                if (iVar19 <= arg3) break;\n                piVar10 = piVar10 + 2;\n            }\n        }\n        uVar17 = in_RAX[1];\n        uVar14 = *in_RAX;\n        uVar6 = uVar14;\n        if (in_RAX[2] < uVar17 + 1) {\n            *(*0x20 + -0xf8) = 0x48acb5;\n            uVar6 = fcn.00445200(uVar17);\n            in_RAX = *(*0x20 + 8);\n            in_RAX[2] = uVar17;\n            if (*0x593680 == 0) {\n                *in_RAX = uVar6;\n                uVar17 = uVar14;\n            }\n            else {\n                *(*0x20 + -0xf8) = 0x48acd4;\n                uVar6 = fcn.0045c5e0(uVar17, piVar10, arg3, uVar13);\n                uVar17 = uVar14;\n            }\n        }\n        in_RAX[1] = uVar17 + 1;\n        *(uVar6 + uVar17) = 0x29;\n        return;\n    }\n    *(*0x20 + -0xf8) = 0x48b025;\n    arg1 = unaff_RSI;\n    in_RAX = fcn.0045cb40(unaff_RSI);\ncode_r0x0048b025:\n    uVar13 = uVar13 + 1;\n    goto code_r0x0048b028;\n}\n",
        "token_count": 9833
    },
    "0048b4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0048b4a0(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint8_t *puVar3;\n    int64_t in_RDX;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == 0) {\n                *(*0x20 + -0x48) = 0x48b518;\n                iVar2 = fcn.0046c180();\n                return iVar2 + 1;\n            }\n            if (unaff_RDI == 1) {\n                uVar1 = *arg1;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = uVar1;\n                *(*0x20 + -0x48) = 0x48b4f0;\n                fcn.00402620(uVar1, in_RDX);\n                return *(*0x20 + -0x28);\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            in_RDX = 0;\n            while( true ) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RDX;\n                *(*0x20 + -0x48) = 0x48b55f;\n                iVar2 = fcn.0048bd20(arg1, in_RDX);\n                if (iVar2 == -1) {\n                    return *(*0x20 + -0x20);\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                puVar3 = iVar2 + unaff_RDI;\n                arg1 = *(*0x20 + -0x18);\n                if (arg1 < puVar3) break;\n                in_RDX = *(*0x20 + -0x20) + 1;\n                unaff_RBX = arg1 - puVar3;\n                in_RAX = (puVar3 & -unaff_RBX >> 0x3f) + *(*0x20 + -0x10);\n                arg1 = *(*0x20 + 0x18);\n            }\n            *(*0x20 + -0x48) = 0x48b58e;\n            in_RAX = fcn.0045cb40(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x48b5a8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 898
    },
    "0048bd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0048bd20(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t *arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint8_t uVar5;\n    uint8_t *unaff_RDI;\n    uint64_t noname_2;\n    uint8_t *arg1_01;\n    uint8_t *puVar6;\n    uint8_t *unaff_R12;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar2 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI == NULL) {\n                return 0;\n            }\n            if (unaff_RDI == 0x1) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x80) = in_RAX;\n                *(*0x20 + -0x78) = unaff_RBX;\n                *(*0x20 + -0x70) = uVar5;\n                *(*0x20 + -0x88) = 0x48be90;\n                fcn.00402c40(uVar5, arg2);\n                return *(*0x20 + -0x68);\n            }\n            if (unaff_RBX == unaff_RDI) {\n                *(*0x20 + -0x88) = 0x48be5a;\n                cVar1 = fcn.004027a0(unaff_RDI, arg2);\n                if (cVar1 == '\\0') {\n                    return -1;\n                }\n                return 0;\n            }\n            if (unaff_RBX < unaff_RDI) {\n                return -1;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x593480 < unaff_RDI) {\n                uVar5 = *arg1;\n                *(*0x20 + -0x52) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x54) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x10) = puVar2;\n                arg1_01 = puVar2 + 1;\n                *(*0x20 + -0x50) = arg1_01;\n                iVar3 = 0;\n                puVar7 = NULL;\n                while( true ) {\n                    puVar6 = puVar7;\n                    if (arg1_01 <= puVar6) {\n                        return -1;\n                    }\n                    puVar7 = unaff_R12;\n                    if (unaff_RBX <= puVar6) goto code_r0x0048c118;\n                    *(*0x20 + -0x30) = iVar3;\n                    puVar7 = puVar6[in_RAX];\n                    if (puVar6[in_RAX] != uVar5) {\n                        if (unaff_RBX < arg1_01) goto code_r0x0048c110;\n                        puVar7 = puVar6 + 1;\n                        if (arg1_01 < puVar7) goto code_r0x0048c105;\n                        *(*0x20 + -0x40) = puVar6;\n                        iVar3 = puVar2 - puVar6;\n                        *(*0x20 + -0x80) = (-iVar3 >> 0x3f & puVar7) + in_RAX;\n                        *(*0x20 + -0x78) = iVar3;\n                        *(*0x20 + -0x70) = uVar5;\n                        *(*0x20 + -0x88) = 0x48bf2a;\n                        fcn.00402c40(arg1, iVar3);\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x68) < 0) {\n                            return -1;\n                        }\n                        puVar6 = *(*0x20 + -0x68) + *(*0x20 + -0x40) + 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        puVar2 = *(*0x20 + -0x10);\n                        uVar5 = *(*0x20 + -0x52);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x54);\n                        arg1_01 = *(*0x20 + -0x50);\n                        iVar3 = *(*0x20 + -0x30);\n                    }\n                    puVar7 = puVar6 + 1;\n                    if (unaff_RBX <= puVar7) goto code_r0x0048c0f9;\n                    *(*0x20 + -0x18) = puVar6;\n                    if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x0048c043:\n                    iVar3 = iVar3 + 1;\n                    unaff_R12 = (puVar7 >> 4) + 4;\n                    if ((unaff_R12 <= iVar3) && (puVar7 < arg1_01)) {\n                        *(*0x20 + -0x88) = 0x48c088;\n                        iVar3 = fcn.00401f60(arg1, unaff_RBX + (-1 - puVar6), noname_2, arg1_01);\n                        if (-1 < iVar3) {\n                            return iVar3 + *(*0x20 + -0x18) + 1;\n                        }\n                        return -1;\n                    }\n                }\n                arg1_00 = puVar6 + unaff_RDI;\n                if (arg1_00 <= unaff_RBX) {\n                    if (puVar6 <= arg1_00) {\n                        *(*0x20 + -0x20) = puVar7;\n                        *(*0x20 + -0x88) = 0x48bff7;\n                        cVar1 = fcn.004027a0(unaff_RDI, unaff_RDI);\n                        if (cVar1 != '\\0') {\n                            return *(*0x20 + -0x18);\n                        }\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        puVar2 = *(*0x20 + -0x10);\n                        uVar5 = *(*0x20 + -0x52);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        noname_2 = *(*0x20 + -0x54);\n                        arg1_01 = *(*0x20 + -0x50);\n                        puVar6 = *(*0x20 + -0x18);\n                        iVar3 = *(*0x20 + -0x30);\n                        puVar7 = *(*0x20 + -0x20);\n                        goto code_r0x0048c043;\n                    }\n                    *(*0x20 + -0x88) = 0x48c0f1;\n                    fcn.0045cb40(arg1_00);\n                }\n                *(*0x20 + -0x88) = 0x48c0f9;\n                fcn.0045cac0(arg1_00, unaff_RBX);\ncode_r0x0048c0f9:\n                *(*0x20 + -0x88) = 0x48c105;\n                fcn.0045ca80(unaff_RBX);\ncode_r0x0048c105:\n                *(*0x20 + -0x88) = 0x48c110;\n                fcn.0045cb40(arg1_01);\ncode_r0x0048c110:\n                *(*0x20 + -0x88) = 0x48c118;\n                fcn.0045cac0(arg1_01, unaff_RBX);\ncode_r0x0048c118:\n                arg1 = unaff_RBX;\n                *(*0x20 + -0x88) = 0x48c125;\n                unaff_RBX = arg1;\n                in_RAX = fcn.0045ca80(arg1);\n                unaff_R12 = puVar7;\n            }\n            else {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + -0x80) = in_RAX;\n                    *(*0x20 + -0x78) = unaff_RBX;\n                    *(*0x20 + -0x70) = arg1;\n                    *(*0x20 + -0x68) = unaff_RDI;\n                    *(*0x20 + -0x88) = 0x48bde7;\n                    fcn.00402ae0(arg1);\n                    return *(*0x20 + -0x60);\n                }\n                uVar5 = *arg1;\n                *(*0x20 + -0x51) = uVar5;\n                noname_2 = arg1[1];\n                *(*0x20 + -0x53) = arg1[1];\n                puVar2 = unaff_RBX + -unaff_RDI;\n                *(*0x20 + -0x10) = puVar2;\n                arg1_01 = puVar2 + 1;\n                *(*0x20 + -0x48) = arg1_01;\n                iVar3 = 0;\n                puVar7 = NULL;\n            }\n            while( true ) {\n                puVar6 = puVar7;\n                if (arg1_01 <= puVar6) {\n                    return -1;\n                }\n                if (unaff_RBX <= puVar6) goto code_r0x0048c3ad;\n                *(*0x20 + -0x28) = iVar3;\n                unaff_R12 = puVar6[in_RAX];\n                if (puVar6[in_RAX] != uVar5) {\n                    if (unaff_RBX < arg1_01) goto code_r0x0048c3a5;\n                    unaff_R12 = puVar6 + 1;\n                    if (arg1_01 < unaff_R12) goto code_r0x0048c398;\n                    *(*0x20 + -0x38) = puVar6;\n                    iVar3 = puVar2 - puVar6;\n                    *(*0x20 + -0x80) = in_RAX + (unaff_R12 & -iVar3 >> 0x3f);\n                    *(*0x20 + -0x78) = iVar3;\n                    *(*0x20 + -0x70) = uVar5;\n                    *(*0x20 + -0x88) = 0x48c195;\n                    fcn.00402c40(arg1, iVar3);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x68) < 0) {\n                        return -1;\n                    }\n                    puVar6 = *(*0x20 + -0x38) + *(*0x20 + -0x68) + 1;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    puVar2 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0x51);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x53);\n                    arg1_01 = *(*0x20 + -0x48);\n                    iVar3 = *(*0x20 + -0x28);\n                }\n                unaff_R12 = puVar6 + 1;\n                if (unaff_RBX <= unaff_R12) goto code_r0x0048c38d;\n                *(*0x20 + -0x18) = puVar6;\n                if (puVar6[in_RAX + 1] == noname_2) break;\ncode_r0x0048c2ac:\n                iVar3 = iVar3 + 1;\n                puVar7 = unaff_R12;\n                if (puVar6 + ((puVar6 + 0x11 >> 0x3f) >> 0x3d) + 0x11 >> 3 < iVar3) {\n                    *(*0x20 + -0x80) = in_RAX + (unaff_R12 & -(unaff_RBX + (-1 - puVar6)) >> 0x3f);\n                    *(*0x20 + -0x78) = unaff_RBX + (-1 - puVar6);\n                    *(*0x20 + -0x70) = arg1;\n                    *(*0x20 + -0x68) = unaff_RDI;\n                    *(*0x20 + -0x88) = 0x48c2ff;\n                    fcn.00402ae0(arg1);\n                    if (*(*0x20 + -0x60) < 0) {\n                        return -1;\n                    }\n                    return *(*0x20 + -0x60) + *(*0x20 + -0x18) + 1;\n                }\n            }\n            puVar7 = puVar6 + unaff_RDI;\n            if (puVar7 <= unaff_RBX) {\n                if (puVar6 <= puVar7) {\n                    *(*0x20 + -0x20) = unaff_R12;\n                    *(*0x20 + -0x88) = 0x48c259;\n                    cVar1 = fcn.004027a0(unaff_RDI, unaff_RDI);\n                    if (cVar1 != '\\0') {\n                        return *(*0x20 + -0x18);\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    puVar2 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0x51);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    noname_2 = *(*0x20 + -0x53);\n                    arg1_01 = *(*0x20 + -0x48);\n                    puVar6 = *(*0x20 + -0x18);\n                    iVar3 = *(*0x20 + -0x28);\n                    unaff_R12 = *(*0x20 + -0x20);\n                    goto code_r0x0048c2ac;\n                }\n                *(*0x20 + -0x88) = 0x48c385;\n                fcn.0045cb40(puVar7);\n            }\n            *(*0x20 + -0x88) = 0x48c38d;\n            fcn.0045cac0(puVar7, unaff_RBX);\ncode_r0x0048c38d:\n            *(*0x20 + -0x88) = 0x48c398;\n            fcn.0045ca80(unaff_RBX);\ncode_r0x0048c398:\n            *(*0x20 + -0x88) = 0x48c3a5;\n            fcn.0045cb40(arg1_01);\ncode_r0x0048c3a5:\n            *(*0x20 + -0x88) = 0x48c3ad;\n            fcn.0045cac0(arg1_01, unaff_RBX);\ncode_r0x0048c3ad:\n            arg1 = unaff_RBX;\n            *(*0x20 + -0x88) = 0x48c3b8;\n            arg2 = arg1;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = puVar2;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x48c3d2;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 3886
    },
    "00413e40": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00413e40(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x413e8b;\n            arg1 = fcn.0040d060(0x595100);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x413ec5;\n                    fcn.00413f40(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x413ef3;\n                    fcn.00433640();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x413efb;\n                fcn.0045ca80(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x413f05;\n            in_RAX = fcn.0045cae0(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x413f15;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 663
    },
    "004350e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004351cb)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004350e0(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.004356e0();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.004356e0();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x4c97a0) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x4c9760 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x4c9760)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x4c9738;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x4c9760)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x4c9758;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x4c9760;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x4c9760 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x4c9760;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x4c9760;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00434ec0(0xe);\n    return;\n}\n",
        "token_count": 1137
    },
    "004487e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004487e0(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x44882f;\n            fcn.0045cceb();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x49f400;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x52cb00; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                    if ((*(iVar2 + 0x130) < 0x593661) && (0x593660 < *(iVar2 + 0x100))) goto code_r0x00448896;\n                }\n                iVar2 = 0;\ncode_r0x00448896:\n                if (iVar2 != 0) {\n                    *0x593660 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x593664 = *puVar1;\n                    *0x593668 = puVar1[1];\n                    *0x59366c = puVar1[4] - *(iVar2 + 0x128);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x4488f0;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x140) = 0x448905;\n            fcn.00433640();\n        }\n        *(puVar3 + -8) = 0x44890b;\n        fcn.0045a3a0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "00449620": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00449620(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x004496f9;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x52a340);\n                    if (0x43 < uVar3) goto code_r0x00449777;\n                    in_RAX = *(uVar3 * 2 + 0x52a480);\ncode_r0x004496f9:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x44970a;\n                    uVar1 = fcn.0040c300(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x449730;\n                        fcn.0045d100(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x52a480);\n                        goto code_r0x004496f9;\n                    }\n                    *(*0x20 + -0x50) = 0x44976a;\n                    fcn.0045ca80(0x44);\n                }\n                *(*0x20 + -0x50) = 0x449777;\n                fcn.0045caa0(0xf9);\ncode_r0x00449777:\n                *(*0x20 + -0x50) = 0x449785;\n                fcn.0045ca80(0x44);\n            }\n            *(*0x20 + -0x50) = 0x449792;\n            in_RAX = fcn.0045caa0(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x44979d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1078
    },
    "004497c0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.004497c0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x004498b9;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x52a340);\n                        if (0x43 < uVar1) goto code_r0x00449945;\n                        uVar1 = *(uVar1 * 2 + 0x52a480);\ncode_r0x004498b9:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x4498ca;\n                        uVar2 = fcn.0040c300(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x4498f5;\n                            fcn.0045d100(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x52a480);\n                            goto code_r0x004498b9;\n                        }\n                        *(*0x20 + -0x58) = 0x449933;\n                        fcn.0045ca80(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x449945;\n                    fcn.0045caa0(0xf9);\ncode_r0x00449945:\n                    *(*0x20 + -0x58) = 0x449952;\n                    fcn.0045ca80(0x44);\n                }\n                *(*0x20 + -0x58) = 0x44995f;\n                fcn.0045caa0(0x81);\n            }\n            *(*0x20 + -0x58) = 0x449970;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44997b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1139
    },
    "0044c660": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.0044c660(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x0044c6b5;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x0044c6b5:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044c708;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044c708:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.0045cb40(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.0045ca80(unaff_RBX);\n                    }\n                    fcn.0045ca80(unaff_RBX);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.0045cb40(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.0045ca80(unaff_RBX);\n    }\n    fcn.0045ca80(unaff_RBX);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1018
    },
    "00450d40": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00450d40(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = fcn.0044b660();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x27) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x44);\n            puVar4 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.0044b180(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 278
    },
    "00470f40": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint64_t fcn.00470f40(uint64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint32_t unaff_EDI;\n    uint64_t in_R8;\n    uchar uVar10;\n    uint64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar10 = in_R9;\n        cVar1 = in_R8;\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + -0x30) = 0;\n            if ((unaff_EDI == unaff_SIL) || (unaff_EDI == 0x5c)) {\n                uVar2 = unaff_RBX + 1;\n                iVar7 = in_RAX;\n                uVar6 = unaff_RBX;\n                if (arg1 < uVar2) {\n                    *(*0x20 + -0x80) = 0x4710af;\n                    iVar7 = fcn.00445200(unaff_RBX);\n                    uVar2 = in_RAX + 1;\n                    uVar6 = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    arg1 = unaff_RBX;\n                }\n                uVar10 = unaff_EDI;\n                *(iVar7 + uVar6) = 0x5c;\n                if (arg1 < uVar2 + 1) {\n                    *(*0x20 + -0x18) = uVar2;\n                    *(*0x20 + -0x80) = 0x4710ec;\n                    iVar7 = fcn.00445200(uVar2);\n                    uVar2 = *(*0x20 + -0x18);\n                    uVar10 = *(*0x20 + 0x20);\n                }\n                *(iVar7 + uVar2) = uVar10;\n                return iVar7;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if (cVar1 != '\\0') {\n                if (unaff_EDI < 0x80) {\n                    *(*0x20 + -0x80) = 0x470fbd;\n                    cVar1 = fcn.00471860();\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_EDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    cVar1 = '\\0';\n                }\n                if (cVar1 != '\\0') {\n                    if (arg1 < unaff_RBX + 1) {\n                        *(*0x20 + -0x80) = 0x471006;\n                        in_RAX = fcn.00445200(unaff_RBX);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                    }\n                    *(in_RAX + unaff_RBX) = unaff_EDI;\n                    return in_RAX;\n                }\n                goto code_r0x004711e3;\n            }\n            *(*0x20 + 0x26) = uVar10;\n            *(*0x20 + -0x80) = 0x471039;\n            cVar1 = fcn.00471860();\n            if (cVar1 != '\\0') goto code_r0x0047110d;\n            if (*(*0x20 + 0x26) == '\\0') {\n                unaff_EDI = *(*0x20 + 0x20);\n                goto code_r0x004711cb;\n            }\n            unaff_EDI = *(*0x20 + 0x20);\n            if (0xffff < unaff_EDI) goto code_r0x004711cb;\n            unaff_RBX = 0;\n            uVar2 = *0x5383d8;\n            while (uVar6 = uVar2,  unaff_RBX < uVar6) {\n                iVar7 = uVar6 - unaff_RBX >> 1;\n                in_R9 = iVar7 + unaff_RBX;\n                arg1 = *0x5383d8;\n                in_R8 = uVar6;\n                if (*0x5383d8 <= in_R9) goto code_r0x004716ff;\n                uVar2 = in_R9;\n                in_R8 = in_R9;\n                if (*(*0x5383d0 + in_R9 * 2) < unaff_EDI) {\n                    unaff_RBX = iVar7 + unaff_RBX + 1;\n                    uVar2 = uVar6;\n                    in_R8 = uVar6;\n                }\n            }\n            if (*0x5383d8 <= unaff_RBX) goto code_r0x004711cb;\n            if (unaff_RBX < *0x5383d8) {\n                if (*(*0x5383d0 + unaff_RBX * 2) == unaff_EDI) {\ncode_r0x0047110d:\n                    unaff_EDI = *(*0x20 + 0x20);\n                    *(*0x20 + -0x80) = 0x471126;\n                    uVar2 = fcn.0046bec0(4);\n                    if (uVar2 < 5) {\n                        uVar6 = *(*0x20 + 0x10);\n                        *(*0x20 + -0x18) = uVar6 + uVar2;\n                        if (*(*0x20 + 0x18) < uVar6 + uVar2) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x80) = 0x471171;\n                            uVar3 = fcn.00445200(uVar6);\n                            uVar2 = *(*0x20 + -0x28);\n                        }\n                        else {\n                            uVar3 = *(*0x20 + 8);\n                            uVar6 = *(*0x20 + 0x18);\n                        }\n                        *(*0x20 + -0x20) = uVar6;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x80) = 0x4711a5;\n                        fcn.0045d3c0(uVar2);\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x80) = 0x4711cb;\n                    fcn.0045cac0(uVar2, 4);\n                }\ncode_r0x004711cb:\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\ncode_r0x004711e3:\n                if (unaff_EDI < 10) {\n                    if (unaff_EDI == 7) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x4712a8;\n                            in_RAX = fcn.00445200(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x615c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 8) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x471268;\n                            in_RAX = fcn.00445200(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x625c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 9) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x47122c;\n                            in_RAX = fcn.00445200(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x745c;\n                        return in_RAX;\n                    }\n                }\n                else {\n                    if (unaff_EDI < 0xc) {\n                        if (unaff_EDI == 10) {\n                            if (arg1 < unaff_RBX + 2) {\n                                *(*0x20 + -0x18) = unaff_RBX + 2;\n                                *(*0x20 + -0x80) = 0x47152f;\n                                in_RAX = fcn.00445200(unaff_RBX);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            *(in_RAX + unaff_RBX) = 0x6e5c;\n                            return in_RAX;\n                        }\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x471567;\n                            in_RAX = fcn.00445200(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x765c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xc) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x4714f2;\n                            in_RAX = fcn.00445200(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x665c;\n                        return in_RAX;\n                    }\n                    if (unaff_EDI == 0xd) {\n                        if (arg1 < unaff_RBX + 2) {\n                            *(*0x20 + -0x18) = unaff_RBX + 2;\n                            *(*0x20 + -0x80) = 0x4714b7;\n                            in_RAX = fcn.00445200(unaff_RBX);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(in_RAX + unaff_RBX) = 0x725c;\n                        return in_RAX;\n                    }\n                }\n                if (unaff_EDI < 0x20) {\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x4713c9;\n                        in_RAX = fcn.00445200(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x785c;\n                    uVar8 = uVar6 + 3;\n                    uVar10 = *((unaff_EDI >> 4) + 0x4a89b4);\n                    iVar7 = in_RAX;\n                    if (arg1 < uVar8) {\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x471425;\n                        iVar7 = fcn.00445200(uVar2);\n                        uVar8 = in_RAX + 1;\n                        uVar6 = *(*0x20 + 0x10);\n                        unaff_EDI = *(*0x20 + 0x20);\n                        uVar10 = *(*0x20 + -0x31);\n                        arg1 = uVar2;\n                    }\n                    *(uVar6 + 2 + iVar7) = uVar10;\n                    uVar10 = *((unaff_EDI & 0xf) + 0x4a89b4);\n                    if (arg1 < uVar8 + 1) {\n                        *(*0x20 + -0x18) = uVar8;\n                        *(*0x20 + -0x31) = uVar10;\n                        *(*0x20 + -0x80) = 0x47147c;\n                        iVar7 = fcn.00445200(uVar8);\n                        uVar8 = *(*0x20 + -0x18);\n                        uVar10 = *(*0x20 + -0x31);\n                    }\n                    *(iVar7 + uVar8) = uVar10;\n                }\n                else {\n                    if ((unaff_EDI < 0xd800) || (unaff_EDI - 0xe000 < 0x102000)) {\n                        if (0xffff < unaff_EDI) {\n                            uVar2 = unaff_RBX + 2;\n                            uVar6 = unaff_RBX;\n                            if (arg1 < uVar2) {\n                                *(*0x20 + -0x18) = uVar2;\n                                *(*0x20 + -0x80) = 0x471334;\n                                in_RAX = fcn.00445200(unaff_RBX);\n                                uVar6 = *(*0x20 + 0x10);\n                                uVar2 = *(*0x20 + -0x18);\n                                unaff_EDI = *(*0x20 + 0x20);\n                                arg1 = unaff_RBX;\n                            }\n                            *(in_RAX + uVar6) = 0x555c;\n                            for (iVar7 = 0x1c; -1 < iVar7; iVar7 = iVar7 + -4) {\n                                uVar10 = *((unaff_EDI >> (iVar7 & 0x1f) & 0xf) + 0x4a89b4);\n                                iVar5 = in_RAX;\n                                uVar6 = uVar2;\n                                uVar8 = uVar2 + 1;\n                                if (arg1 < uVar2 + 1) {\n                                    *(*0x20 + -0x20) = uVar2;\n                                    *(*0x20 + -0x18) = iVar7;\n                                    *(*0x20 + -0x31) = uVar10;\n                                    *(*0x20 + -0x80) = 0x471674;\n                                    iVar5 = fcn.00445200(uVar2);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    uVar6 = *(*0x20 + -0x20);\n                                    unaff_EDI = *(*0x20 + 0x20);\n                                    uVar10 = *(*0x20 + -0x31);\n                                    arg1 = uVar2;\n                                    uVar8 = in_RAX + 1;\n                                }\n                                uVar2 = uVar8;\n                                *(iVar5 + uVar6) = uVar10;\n                                in_RAX = iVar5;\n                            }\n                            return in_RAX;\n                        }\n                    }\n                    else {\n                        unaff_EDI = 0xfffd;\n                    }\n                    *(*0x20 + -0x2c) = unaff_EDI;\n                    uVar2 = unaff_RBX + 2;\n                    uVar6 = unaff_RBX;\n                    if (arg1 < uVar2) {\n                        *(*0x20 + -0x18) = uVar2;\n                        *(*0x20 + -0x80) = 0x471385;\n                        in_RAX = fcn.00445200(unaff_RBX);\n                        uVar6 = *(*0x20 + 0x10);\n                        uVar2 = *(*0x20 + -0x18);\n                        unaff_EDI = *(*0x20 + -0x2c);\n                        arg1 = unaff_RBX;\n                    }\n                    *(in_RAX + uVar6) = 0x755c;\n                    iVar7 = in_RAX;\n                    for (iVar5 = 0xc; -1 < iVar5; iVar5 = iVar5 + -4) {\n                        uVar10 = *((unaff_EDI >> (iVar5 & 0x1f) & 0xf) + 0x4a89b4);\n                        iVar4 = iVar7;\n                        uVar6 = uVar2;\n                        uVar8 = uVar2 + 1;\n                        if (arg1 < uVar2 + 1) {\n                            *(*0x20 + -0x20) = uVar2;\n                            *(*0x20 + -0x18) = iVar5;\n                            *(*0x20 + -0x31) = uVar10;\n                            *(*0x20 + -0x80) = 0x4715ec;\n                            iVar4 = fcn.00445200(uVar2);\n                            iVar5 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x20);\n                            unaff_EDI = *(*0x20 + -0x2c);\n                            uVar10 = *(*0x20 + -0x31);\n                            arg1 = uVar2;\n                            uVar8 = iVar7 + 1;\n                        }\n                        uVar2 = uVar8;\n                        *(iVar4 + uVar6) = uVar10;\n                        iVar7 = iVar4;\n                    }\n                }\n                return iVar7;\n            }\n            *(*0x20 + -0x80) = 0x4716ff;\n            arg1 = fcn.0045ca80(*0x5383d8);\ncode_r0x004716ff:\n            uVar10 = in_R9;\n            cVar1 = in_R8;\n            *(*0x20 + -0x80) = 0x47170a;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_EDI;\n        puVar9[0x24] = unaff_SIL;\n        puVar9[0x25] = cVar1;\n        puVar9[0x26] = uVar10;\n        *(puVar9 + -8) = 0x471732;\n        fcn.0045a3a0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_EDI = *(puVar9 + 0x20);\n        unaff_SIL = puVar9[0x24];\n        in_R8 = puVar9[0x25];\n        in_R9 = puVar9[0x26];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 4531
    },
    "004077c0": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.004077c0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x53f660 != NULL) {\n                if (*0x53f668 == 0) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x53f660;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x0040782e:\n                    iVar2 = iVar2 + 1;\n                    if (*0x53f668 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x4078b3;\n                        fcn.0045ca80(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x0040782e;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x4078c5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4078d5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 767
    },
    "00420f80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420f80(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x420fb8;\n                iVar2 = fcn.004234a0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0042106b:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4210bb;\n                fcn.0045ca80(0x3f);\ncode_r0x004210bb:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x4210cc;\n                fcn.00433640();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x421039;\n                            iVar2 = fcn.004234a0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0042106b;\n                    }\n                    goto code_r0x004210bb;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x4210d9;\n            in_RAX = fcn.0045ca80(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4210ee;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1116
    },
    "00421120": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.00421120(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x421165;\n            uVar3 = fcn.00421120(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x4211c5;\n                uVar3 = fcn.00421120((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x42120c;\n            in_RAX = fcn.0045ca80(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x421225;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 697
    },
    "0042aaa0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042aaa0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x593540,  iVar4 = *0x593548,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (; iVar4 != 0; iVar4 = *(iVar4 + 8)) {\n        piVar2 = fcn.0042a600(uVar1);\n        uVar3 = uVar1 % 3;\n        *piVar2 = *piVar2 + piVar2[uVar3 * 4 + 4];\n        piVar2[1] = piVar2[1] + piVar2[uVar3 * 4 + 5];\n        piVar2[2] = piVar2[2] + piVar2[uVar3 * 4 + 6];\n        piVar2[3] = piVar2[3] + piVar2[uVar3 * 4 + 7];\n        piVar2[uVar3 * 4 + 4] = 0;\n        piVar2[uVar3 * 4 + 5] = 0;\n        piVar2[uVar3 * 4 + 6] = 0;\n        piVar2[uVar3 * 4 + 7] = 0;\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "0042ab80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042ab80(void)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe8 && *0x20 + -0xe8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x168;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x178) = *0x20 + -8;\n            *(*0x20 + -0x170) = 0x42abcf;\n            fcn.0045ccf4();\n            unaff_RBP = *(*0x20 + -0x178);\n            unaff_RBX = *0x20 + -0x120;\n            *(*0x20 + -0x170) = 0x42abea;\n            uVar2 = fcn.00453e40(0x20);\n            *(*0x20 + -0x130) = uVar2;\n            *(*0x20 + -0x170) = 0x42abfd;\n            fcn.0040ac20();\n            if (*(*0x20 + -0x130) < 0x21) {\n                *(*0x20 + -0x170) = 0x42ac31;\n                uVar2 = fcn.0042a6c0(*0x20 + -0x120);\n                *(*0x20 + -0x128) = uVar2;\n                *(*0x20 + -0x134) = *0x593540;\n                *(*0x20 + -0x170) = 0x42ac45;\n                iVar3 = fcn.0042a600();\n                iVar4 = (*(*0x20 + -0x134) + ((*(*0x20 + -0x134) + 2U) / 3) * -3 + 2) * 0x20;\n                piVar1 = iVar3 + 0x20 + iVar4;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar3 + 0x30 + iVar4;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x170) = 0x42ac8b;\n                fcn.0040ae40();\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x42ad40;\n                *(*0x20 + -0x18) = *(*0x20 + 8);\n                *(*0x20 + -0x10) = *(*0x20 + -0x128);\n                *(*0x20 + -0x168) = *0x20 + -0x20;\n                *(*0x20 + -0x170) = 0x42acdd;\n                fcn.0045a260();\n                return;\n            }\n            *(*0x20 + -0x170) = 0x42ad0b;\n            in_RAX = fcn.0045cac0(*(*0x20 + -0x130), 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x42ad1b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1000
    },
    "0042ad80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042ad80(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar2 = *0x593540;\n    iVar3 = fcn.0042a600();\n    iVar4 = (iVar2 + ((iVar2 + 1U) / 3) * -3 + 1) * 0x20;\n    piVar1 = iVar3 + 0x28 + iVar4;\n    *piVar1 = *piVar1 + 1;\n    piVar1 = iVar3 + 0x38 + iVar4;\n    *piVar1 = *piVar1 + unaff_RBX;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 249
    },
    "0042bb00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042bb00(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42bb65;\n                arg1_00 = fcn.0042b8e0();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042bbae:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042bbea;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042bbea:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042bd14:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042bf11;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42be0d;\n                                        piVar1 = fcn.0040d060(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42be4e;\n                                                    fcn.0045d3c0(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42bed1;\n                                                        fcn.0045d3c0(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042beeb;\n                                                }\ncode_r0x0042bf32:\n                                                *(*0x20 + -0x68) = 0x42bf3a;\n                                                arg1_00 = arg1_01;\n                                                fcn.0045cb40(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42bf45;\n                                            fcn.0045cb00(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42bf4d;\n                                        fcn.0045cb00(arg1_00, arg2);\ncode_r0x0042bf4d:\n                                        *(*0x20 + -0x68) = 0x42bf58;\n                                        fcn.0045cb40(arg1_01);\ncode_r0x0042bf58:\n                                        *(*0x20 + -0x68) = 0x42bf65;\n                                        fcn.0045cb40(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042bf58;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042bf4d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42bdc5;\n                                            fcn.0045d3c0(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042beeb:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42bf32;\n                                            fcn.0045ca80(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042bf32;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042bf11;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42bf6d;\n                                    fcn.0045cb00(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42bf75;\n                                fcn.0045ca80(ppiVar2);\n                                goto code_r0x0042bf75;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042bf92;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042bf8a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042bf7f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42bc9e;\n                                    fcn.0045d3c0(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] - 1;\n                                if (arg2 < ppiVar2) goto code_r0x0042bf7a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042bf11:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042bd14;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042bf11;\n                            }\ncode_r0x0042bf75:\n                            *(*0x20 + -0x68) = 0x42bf7a;\n                            fcn.0045ca80(ppiVar2);\ncode_r0x0042bf7a:\n                            *(*0x20 + -0x68) = 0x42bf7f;\n                            fcn.0045cb00(ppiVar2, arg2);\ncode_r0x0042bf7f:\n                            *(*0x20 + -0x68) = 0x42bf8a;\n                            ppiVar2 = unaff_R13;\n                            fcn.0045cb40(unaff_R13);\ncode_r0x0042bf8a:\n                            *(*0x20 + -0x68) = 0x42bf92;\n                            fcn.0045cb40(ppiVar2);\ncode_r0x0042bf92:\n                            *(*0x20 + -0x68) = 0x42bf97;\n                            fcn.0045ca80(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42bf9f;\n                        fcn.0045ca80(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42bfa5;\n                    fcn.0045ca80(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042bbae;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42bfad;\n                fcn.0045ca80(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42bfb2;\n            fcn.00434de0();\n            *(*0x20 + -0x68) = 0x42bfc5;\n            fcn.004356e0();\n            *(*0x20 + -0x68) = 0x42bfcf;\n            fcn.00435540();\n            *(*0x20 + -0x68) = 0x42bfe5;\n            fcn.004356e0();\n            *(*0x20 + -0x68) = 0x42bfef;\n            fcn.00435540();\n            *(*0x20 + -0x68) = 0x42c005;\n            fcn.004356e0();\n            *(*0x20 + -0x68) = 0x42c00a;\n            fcn.00434e60();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42c01b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42c030;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3769
    },
    "00441780": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00441780(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2298) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2278;\n            *(*0x20 + -0x28) = 0x4417c5;\n            fcn.0040ac20();\n            if ((*(*0x20 + 8))[0x8a6] != 0) goto code_r0x00441821;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x53f6e8) {\n                    puVar1 = *0x53f6e0 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x00441821:\n                    *(*0x20 + -0x28) = 0x44182b;\n                    fcn.0040ae40();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x441847;\n                fcn.0045ca80(*0x53f6e8);\n            }\n            *(*0x20 + -0x28) = 0x44184c;\n            in_RAX = fcn.00431c60();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x441857;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 611
    },
    "00441880": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00441880(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t in_RAX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = 0x4418d3;\n                fcn.00441780();\n                piVar2 = *(*0x20 + 8);\n                iVar3 = *piVar2;\n                iVar5 = ((iVar3 >> 0x1f) >> 0x1b) + iVar3 >> 5;\n                uVar6 = iVar3 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    if (iVar5 < *0x53f6a8) {\n                        puVar1 = *0x53f6a0 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar2 + 2) = *0x53ffd0;\n                        LOCK();\n                        iVar3 = *0x53ffd8;\n                        *0x53ffd0 = piVar2;\n                        *0x53ffd8 = *0x53ffd8 + 1;\n                        return iVar3;\n                    }\n                    *(*0x20 + -0x20) = 0x441965;\n                    fcn.0045ca80(*0x53f6a8);\n                }\n                *(*0x20 + -0x20) = 0x44196a;\n                fcn.00431c60();\n            }\n            *(*0x20 + -0x20) = 0x44197b;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x441986;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "004419a0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.004419a0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    piVar4 = *0x53ffd0;\n    if (*0x53ffd0 == NULL) {\n        return;\n    }\n    iVar2 = **0x53ffd0;\n    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n    uVar5 = iVar2 + iVar6 * -0x20;\n    if (-1 < uVar5) {\n        arg1 = *0x53f6e8;\n        if (iVar6 < *0x53f6e8) {\n            puVar1 = *0x53f6e0 + iVar6 * 4;\n            LOCK();\n            *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n            iVar2 = *piVar4;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            arg1 = *0x53f6a8;\n            if (-1 < uVar5) {\n                if (iVar6 < *0x53f6a8) {\n                    puVar1 = *0x53f6a0 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                    LOCK();\n                    *0x53ffd0 = *(piVar4 + 2);\n                    *0x53ffd8 = *0x53ffd8 + -1;\n                    return;\n                }\n                fcn.0045ca80(*0x53f6a8);\n            }\n            fcn.00431c60();\n        }\n        fcn.0045ca80(arg1);\n    }\n    fcn.00431c60();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 514
    },
    "00403820": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403820(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x40386c;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40388a;\n            fcn.00454ee0();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x4038a5;\n            fcn.00448bc0(0x1c);\n            *(*0x20 + -0x38) = 0x4038aa;\n            unaff_RBX = fcn.0040a660();\n            *(*0x20 + -0x38) = 0x4038b9;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4038ce;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 574
    },
    "00403900": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00403900(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x40394f;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x40396d;\n            fcn.00454ee0();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x403986;\n            fcn.00448bc0(0x1c);\n            *(*0x20 + -0x38) = 0x40398b;\n            unaff_RBX = fcn.0040a660();\n            *(*0x20 + -0x38) = 0x40399a;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4039af;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 584
    },
    "00403b40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00403b40(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00433640();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.00457d60();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.0045a260();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.0045c1c0();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.00457da0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 367
    },
    "00405800": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405800(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00412a60(arg1);\n    fcn.0045d3c0(*in_RAX);\n    return;\n}\n",
        "token_count": 110
    },
    "00405880": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405880(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00412a60(*(unaff_RBX + 0x18));\n    fcn.0045d3c0(*in_RAX);\n    return;\n}\n",
        "token_count": 127
    },
    "00407cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407cc0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00448bc0(0xf);\n    return;\n}\n",
        "token_count": 87
    },
    "0040a460": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040a460(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.0040c300(1, *in_RAX);\n    fcn.004117c0(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0040a4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040a4e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.0040c300(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045d3c0(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "00411b20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00411b20(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x411c25;\n                            fcn.00411b00();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x411b85;\n                    fcn.00411b00();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x411c67;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x411c72;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 999
    },
    "004121a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004121a0(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.004120c0(arg1);\n    return;\n}\n",
        "token_count": 101
    },
    "004145c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004145c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = fcn.004247e0(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.00413f40(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "004148e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004148e0(void)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint8_t unaff_BL;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_BL;\n            if (uVar5 < 0x88) {\n                iVar3 = *(in_RAX + 0x28 + uVar5 * 8);\n                if (*(iVar3 + 0x38) == *(iVar3 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x10) = uVar5;\n                    if (iVar3 == 0x593a80) {\ncode_r0x00414977:\n                        *(*0x20 + -0x38) = 0x41498f;\n                        iVar3 = fcn.00415020();\n                        if (iVar3 != 0) {\n                            if (*(iVar3 + 0x38) != *(iVar3 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar3;\n                                *(iVar3 + 0x58) = *0x565810 + 3;\n                                *(*0x20 + -0x38) = 0x4149c7;\n                                iVar3 = fcn.0042ca60();\n                                uVar2 = *(*0x20 + 0x10);\n                                uVar5 = uVar2;\n                                if (uVar2 >> 1 < 0x44) {\n                                    piVar4 = iVar3 + (uVar2 >> 1) * 8 + 0x48;\n                                    LOCK();\n                                    *piVar4 = *piVar4 + (*(*(*0x20 + -0x18) + 0x38) - *(*(*0x20 + -0x18) + 0x60));\n                                    if (uVar2 == 5) {\n                                        piVar4 = *(*0x20 + 8);\n                                        LOCK();\n                                        puVar1 = iVar3 + 0x30;\n                                        uVar5 = *puVar1;\n                                        *puVar1 = *puVar1 + piVar4[4];\n                                        piVar4[4] = 0;\n                                    }\n                                    *(*0x20 + -0x38) = 0x414a2f;\n                                    fcn.0042cb40(piVar4, uVar5);\n                                    arg1 = *(*(*0x20 + 8) + 8);\n                                    *(*0x20 + -0x38) = 0x414a65;\n                                    fcn.0041eaa0(arg1);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(iVar3 + 8) = 0;\n                                    *(iVar3 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                    return;\n                                }\n                                *(*0x20 + -0x38) = 0x414a98;\n                                fcn.0045ca80(0x44);\n                            }\n                            *(*0x20 + -0x38) = 0x414aa9;\n                            fcn.00433640();\n                        }\n                        *(*0x20 + -0x38) = 0x414aba;\n                        fcn.00433640();\n                    }\n                    else if (*(iVar3 + 0x58) == *0x565810 + 3) {\n                        *(*0x20 + -0x38) = 0x414972;\n                        fcn.004153a0();\n                        goto code_r0x00414977;\n                    }\n                    *(*0x20 + -0x38) = 0x414acb;\n                    fcn.00433640();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x38) = 0x414adc;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x38) = 0x414ae9;\n            in_RAX = fcn.0045ca80(0x88);\n        }\n        *(puVar6 + 8) = in_RAX;\n        puVar6[0x10] = unaff_BL;\n        *(puVar6 + -8) = 0x414af8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_BL = puVar6[0x10];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1153
    },
    "00419f80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00419f80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x419fa5;\n            fcn.00436aa0();\n            *(*0x20 + -0x38) = 0x419fb3;\n            fcn.0040ac20();\n            *(*0x20 + -0x20) = *0x565ac0;\n            *(*0x20 + -0x10) = *0x565ab8;\n            *(*0x20 + -0x38) = 0x419fd9;\n            fcn.0040ae40();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x53fa60 = 0;\n                    *0x53fb08 = *0x593d58;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x41a01a;\n                fcn.0045d100();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x41a078;\n            fcn.0045caa0(0x40);\n        }\n        *(puVar4 + -8) = 0x41a07e;\n        fcn.0045eaa0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 552
    },
    "0041b8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0041b8e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar2 = *0x53fb20;\n    iVar1 = *0x53fb18;\n    if (*0x593444 == 0) {\n        fcn.0040ae40();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x53fb20 != 0) {\n        *(*0x53fb20 + 0xa0) = unaff_R14;\n        iVar3 = *0x53fb18;\n    }\n    *0x53fb18 = iVar3;\n    if (*0x593da8 < 1) {\n        *0x53fb20 = unaff_R14;\n        fcn.00435f80(0xb);\n        return 1;\n    }\n    *0x53fb18 = iVar1;\n    *0x53fb20 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.0040ae40();\n    return 0;\n}\n",
        "token_count": 342
    },
    "00423ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00423ee0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00416fe0(0x4b10a0);\n    fcn.00416fe0(0);\n    fcn.00416fe0(0);\n    fcn.00416fe0(0);\n    fcn.00416fe0(0);\n    fcn.00416fe0(0);\n    *(in_RAX + 0x16a78) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10438 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00426a60(0x595118);\n    return;\n}\n",
        "token_count": 246
    },
    "004259e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004259e0(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x425a77;\n            fcn.00434de0();\n            *(*0x20 + -0x38) = 0x425a88;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425a92;\n            fcn.004353e0();\n            *(*0x20 + -0x38) = 0x425aa5;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425aaf;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425ac5;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425acf;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425ae5;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425aef;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425b05;\n            fcn.004356e0();\n            *(*0x20 + -0x38) = 0x425b0f;\n            fcn.004356a0();\n            *(*0x20 + -0x38) = 0x425b14;\n            fcn.00435040();\n            *(*0x20 + -0x38) = 0x425b19;\n            fcn.00434e60();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x425b2a;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x425b3a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "0042a4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a4c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00429b80(arg1);\n    fcn.00429c80(arg1);\n    return;\n}\n",
        "token_count": 102
    },
    "004306a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004306a0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.0040ac20();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.00430980();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 106
    },
    "004338a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004338a0(void)\n\n{\n    fcn.0045a260();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 35
    },
    "00434c60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00434c60(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x434c8c;\n            fcn.00434de0();\n            if (*0x593468 != 0) {\ncode_r0x00434ca9:\n                *(*0x20 + -0x38) = 0x434cae;\n                fcn.00434e60();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00434ca9;\n                if (0x200 < *0x5935a0) goto code_r0x00434d98;\n                iVar6 = *0x5935a0 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x5935a0) + 0x593e40) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x434d6e;\n                    fcn.0045d3c0(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x5935a0 + arg1_01;\n                *0x5935a0 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x434d98;\n            fcn.0045cb40(arg1_00);\ncode_r0x00434d98:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x434da5;\n            in_RAX = fcn.0045cb40(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x434dba;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1015
    },
    "0043e020": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e020(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 84
    },
    "0044bde0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044bde0(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x0044be26;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x0044be26:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x44be33;\n                uVar2 = fcn.00449a80();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44be65;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44be75;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 584
    },
    "0044bf40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044bf40(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044bf7d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044bf7d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x44bf8a;\n                uVar1 = fcn.00449a80();\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44bfbc;\n            in_RAX = fcn.0045ca80(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x44bfd0;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "0044c000": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.0044c000(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4a6955;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4a6955;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x44c059;\n                    uVar2 = fcn.00449a80();\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44c0b4;\n                fcn.0045ca80(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x44c0be;\n            in_RAX = fcn.0045ca80(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44c0d2;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 737
    },
    "0044e4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044e4a0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044d1a0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044f300();\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "004508c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004508c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044f540(0);\n    return;\n}\n",
        "token_count": 117
    },
    "00453560": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453560(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00453660(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "004535c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004535c0(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.00453660(0);\n        return;\n    }\n    fcn.00453660(arg1);\n    return;\n}\n",
        "token_count": 139
    },
    "00458fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00458fa0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00403b40();\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043ed20();\n    return;\n}\n",
        "token_count": 330
    },
    "00459400": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459400(ulong arg1, ulong arg2)\n\n{\n    fcn.0045e5c0();\n    return;\n}\n",
        "token_count": 33
    },
    "0045de80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045de80(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.0045c400();\n    return;\n}\n",
        "token_count": 48
    },
    "0045e260": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e260(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x53ec48)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 83
    },
    "0045e340": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045e340(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "0045e5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e5c0(void)\n\n{\n    ulong uStackX24;\n    \n    fcn.00411860(uStackX24);\n    return;\n}\n",
        "token_count": 38
    },
    "00464480": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00464480(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x4644db;\n            iVar1 = fcn.00445120(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x004645dd;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x004645d5;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x004645cd;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x004645c5;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4645c5;\n            fcn.0045cb00(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x004645c5:\n            *(*0x20 + -0x38) = 0x4645cd;\n            fcn.0045ca80(arg1);\ncode_r0x004645cd:\n            *(*0x20 + -0x38) = 0x4645d5;\n            fcn.0045ca80(arg1);\ncode_r0x004645d5:\n            *(*0x20 + -0x38) = 0x4645dd;\n            fcn.0045ca80(arg1);\ncode_r0x004645dd:\n            *(*0x20 + -0x38) = 0x4645e5;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4645fa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1113
    },
    "0046c2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0046c2e0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    char acStack33 [25];\n    \n    uVar3 = 0;\n    while (unaff_RBX != 0) {\n        if (0x17 < uVar3) goto code_r0x0046c408;\n        acStack33[uVar3 + 1] = unaff_RBX + (unaff_RBX / 10) * -10 + '0';\n        uVar3 = uVar3 + 1;\n        unaff_RBX = unaff_RBX / 10;\n    }\n    *(in_RAX + 800) = 0;\n    while (uVar4 = uVar3 - 1,  -1 < uVar4) {\n        if (0x17 < uVar4) goto code_r0x0046c3fb;\n        if (799 < *(in_RAX + 800)) goto code_r0x0046c3ee;\n        *(in_RAX + *(in_RAX + 800)) = acStack33[uVar3];\n        *(in_RAX + 800) = *(in_RAX + 800) + 1;\n        uVar3 = uVar4;\n    }\n    *(in_RAX + 0x328) = *(in_RAX + 800);\n    while (iVar1 = *(in_RAX + 800),  0 < iVar1) {\n        if (799 < iVar1 - 1U) {\n            fcn.0045ca80(800);\ncode_r0x0046c3ee:\n            fcn.0045ca80(800);\ncode_r0x0046c3fb:\n            fcn.0045ca80(0x18);\ncode_r0x0046c408:\n            fcn.0045ca80(0x18);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (*(iVar1 + -1 + in_RAX) != '0') break;\n        *(in_RAX + 800) = iVar1 - 1U;\n    }\n    if (iVar1 == 0) {\n        *(in_RAX + 0x328) = 0;\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "00477dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00477dc0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = *(in_RAX + 0x17) & 0x1f;\n            if (uVar2 < 0x13) {\n                if (uVar2 == 0x11) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ca2b0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x12) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ca2b0;\n                    }\n                    return uVar1;\n                }\n            }\n            else {\n                if (uVar2 == 0x15) {\n                    if (*(in_RAX + 0x38) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ca2b0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x16) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ca2b0;\n                    }\n                    return uVar1;\n                }\n                if (uVar2 == 0x17) {\n                    if (*(in_RAX + 0x30) == 0) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 0x4ca2b0;\n                    }\n                    return uVar1;\n                }\n            }\n            *(*0x20 + -0x38) = 0x477ec5;\n            fcn.00477c20();\n            *(*0x20 + -0x38) = 0x477ede;\n            fcn.00448bc0(0x1e);\n            *(*0x20 + -0x38) = 0x477ee5;\n            fcn.0040a660();\n            *(*0x20 + -0x38) = 0x477ef4;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x477eff;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 722
    },
    "00483760": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00483760(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00483520(arg1);\n    fcn.00482620(unaff_RBX);\n    return;\n}\n",
        "token_count": 106
    },
    "00483f80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00483f80(void)\n\n{\n    int64_t in_RAX;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x28;\n            unaff_RBX = 4;\n            *(*0x20 + -0x38) = 0x483fc7;\n            arg1 = fcn.0046bec0(0x44);\n            if (arg1 < 0x45) {\n                *(*0x20 + -0x38) = 0x483fe5;\n                fcn.00482620(arg1);\n                return;\n            }\n            *(*0x20 + -0x38) = 0x483ffc;\n            in_RAX = fcn.0045cb00(arg1, 0x44);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x48400c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 422
    },
    "00485960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00485960(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (iVar1 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if (iVar1 < 0x59) {\n        if (iVar1 < 0x47) {\n            if (iVar1 == 0x45) {\ncode_r0x004859c5:\n                fcn.00484100(arg1);\n                return;\n            }\n            if (iVar1 == 0x46) {\n                fcn.00484100(0x66);\n                return;\n            }\n        }\n        else if ((iVar1 == 0x47) || (iVar1 == 0x58)) goto code_r0x004859ea;\ncode_r0x004859fe:\n        fcn.00485160(arg1, in_RDX, in_R8);\n    }\n    else {\n        if (iVar1 < 0x67) {\n            if (iVar1 != 0x62) {\n                if (100 < iVar1) goto code_r0x004859c5;\n                goto code_r0x004859fe;\n            }\n        }\n        else if (iVar1 != 0x67) {\n            if (iVar1 == 0x76) {\n                fcn.00484100(0x67);\n                return;\n            }\n            if (iVar1 != 0x78) goto code_r0x004859fe;\n        }\ncode_r0x004859ea:\n        fcn.00484100(arg1);\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "00401e80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00401e80(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 210
    },
    "00404ae0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00404ae0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00404340(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00433640();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00409640": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.00409640(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x5936c0 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 941
    },
    "00414b20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00414b20(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar4 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar4 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar4 << 0xd;\n                *(*0x20 + -0x50) = 0x414b85;\n                fcn.00422bc0();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x50) = 0x414ba5;\n                iVar2 = fcn.004246a0();\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x50) = 0x414bbf;\n                    iVar2 = fcn.0042ca60();\n                    LOCK();\n                    *(iVar2 + 0x38) = *(iVar2 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar2 + 0x40;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x50) = 0x414be5;\n                    fcn.0042cb40(iVar2);\n                    *(*0x20 + -0x50) = 0x414c05;\n                    fcn.0041eaa0(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x50) = 0x414c4a;\n                        fcn.0042c400(*(*0x20 + -0x21) * 0xc0 + 0x565b70, (*0x565810 >> 1 & 1) * 5);\n                        iVar2 = *(*0x20 + -0x20);\n                        *(iVar2 + 0x70) = *(iVar2 + 0x18) + *(*0x20 + 0x10);\n                        uVar4 = *(iVar2 + 0x18) + 0x800000000000;\n                        uVar3 = uVar4 >> 0x2a;\n                        if (uVar3 < 0x40) {\n                            uVar4 = uVar4 >> 0x16;\n                            if (*(*(uVar3 * 8 + 0x565870) + (uVar4 & 0xfffff) * 8) == 0) {\n                                uVar4 = 0;\n                            }\n                            *(*0x20 + -0x50) = 0x414ce5;\n                            fcn.00412ca0(uVar4 & 0xffffffff);\n                            return *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x50) = 0x414cfe;\n                        fcn.0045caa0(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x50) = 0x414d08;\n                    fcn.0045ca80(0x88);\n                }\n                *(*0x20 + -0x50) = 0x414d19;\n                fcn.00433640();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x50) = 0x414d2a;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x414d3e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1183
    },
    "00414d60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00414d60(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00414d60:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar4 = *(in_RAX + 8);\n        *(*0x20 + -0x10) = uVar4;\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x565810;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x414ecc;\n                iVar3 = fcn.0042ca60(uVar4);\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x414eef;\n                fcn.0042cb40(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x414f05;\n                fcn.0041eaa0(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x593a80) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x40) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x38);\n                *(*0x20 + -0x20) = *(iVar3 + 0x60);\n                *(*0x20 + -0x68) = 0x414ded;\n                iVar2 = fcn.0042ca60();\n                uVar7 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar7) goto code_r0x00414f0f;\n                *(*0x20 + -0x38) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar7 * 8 + 0x48;\n                LOCK();\n                *piVar1 = *piVar1 + (*(*0x20 + -0x20) - *(*0x20 + -0x18));\n                *(*0x20 + -0x68) = 0x414e36;\n                fcn.0042cb40();\n                if (*(*(*0x20 + -0x40) + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(*0x20 + -0x38) * *(*(*0x20 + -0x40) + 0x68);\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x414e85;\n                fcn.004153a0(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x593a80;\n                uVar6 = *(*0x20 + -0x28);\n                uVar4 = *(*0x20 + -0x10);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00414f1d;\ncode_r0x00414f0f:\n    *(*0x20 + -0x68) = 0x414f1c;\n    in_RAX = fcn.0045ca80(0x44);\ncode_r0x00414f1d:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x414f27;\n    fcn.0045a3a0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00414d60;\n}\n",
        "token_count": 1231
    },
    "004154a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.004154a0(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x529380);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x52a480);\n                *(*0x20 + -0x48) = 0x4154fb;\n                iVar2 = fcn.004246a0();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x565870) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x4155bc;\n                    fcn.00412ca0(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x4155e5;\n                fcn.0045caa0(0x40);\n            }\n            *(*0x20 + -0x48) = 0x4155ef;\n            in_RAX = fcn.0045ca80(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4155fa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 674
    },
    "0041cbc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041cbc0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.00411ec0(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.00420d00(0);\n                        }\n                    }\n                    else {\n                        fcn.0041d3a0(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "0041ede0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.0041ede0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *in_RAX;\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 2) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    fcn.0041eb60(*(in_RAX + 4));\n    return iVar1;\n}\n",
        "token_count": 194
    },
    "0041f000": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041f000(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    if (unaff_RBX == 0) {\n        uVar1 = *0x565858;\n        *0x565858 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (in_RAX < 0) {\n        dVar3 = in_RAX & 1 | in_RAX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = in_RAX;\n    }\n    if (unaff_RBX < 0) {\n        dVar4 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = unaff_RBX;\n    }\n    if (*0x5967c0 < 0) {\n        dVar5 = *0x5967c0 & 1 | *0x5967c0 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x5967c0;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x4c9790 <= dVar5) {\n        uVar2 = dVar5 - *0x4c9790 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    uVar2 = -*0x593598 & (uVar2 + uVar2 / 10 + *0x593598) - 1;\n    if ((uVar2 < *0x5950b0 - *0x5950c0) && (*0x593598 <= (*0x5950b0 - *0x5950c0) - uVar2)) {\n        *0x565858 = uVar2;\n        return 0x565858;\n    }\n    uVar1 = *0x565858;\n    *0x565858 = 0xffffffffffffffff;\n    return uVar1;\n}\n",
        "token_count": 513
    },
    "00441bc0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00441bc0(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    uchar *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    ulong unaff_RBP;\n    uint32_t uVar9;\n    int32_t unaff_EDI;\n    uchar *puVar10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b8 && *0x20 + -0x3b8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x438;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            *(*0x20 + -0x448) = *0x20 + -8;\n            *(*0x20 + -0x440) = 0x441c0f;\n            puVar5 = fcn.0045cbe0();\n            unaff_RBP = *(*0x20 + -0x448);\n            uVar7 = unaff_EDI - arg1 >> 1;\n            puVar10 = *0x20 + -0x408;\n            if (uVar7 == 0x80) {\n                uVar6 = 0;\n                while (uVar9 = uVar6,  uVar9 < 0x80) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(puVar5 + (uVar9 + arg1 & 0xff) * 8 + 0x198);\n                    uVar6 = uVar9 + 1;\n                }\n                LOCK();\n                if (arg1 != *(puVar5 + 400)) {\n                    return 0;\n                }\n                *(puVar5 + 400) = arg1 + 0x80;\n                *(*0x20 + uVar7 * 8 + -0x410) = unaff_RBX;\n                uVar6 = 0;\n                while( true ) {\n                    if (0x7f < uVar6) {\n                        *(*0x20 + -0x424) = 0x80;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + uVar7 * 8 + -0x410);\n                        *(*0x20 + -0x440) = 0x441cd9;\n                        fcn.0040ac20();\n                        iVar1 = *(*0x20 + -0x418);\n                        uVar2 = *(*0x20 + -0x420);\n                        uVar3 = *0x53ffe0;\n                        iVar4 = *0x53ffe8;\n                        if ((iVar1 != 0) && (*(iVar1 + 0xa0) = 0,  uVar3 = uVar2,  iVar4 = iVar1,  *0x53ffe8 != 0)) {\n                            *(*0x53ffe8 + 0xa0) = uVar2;\n                            uVar3 = *0x53ffe0;\n                        }\n                        *0x53ffe8 = iVar4;\n                        *0x53ffe0 = uVar3;\n                        *0x53fff0 = *0x53fff0 + *(*0x20 + -0x424) + 1;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x440) = 0x441d46;\n                        fcn.0040ae40();\n                        return 1;\n                    }\n                    iVar1 = uVar6 * 8;\n                    uVar6 = uVar6 + 1;\n                    if (0x80 < uVar6) break;\n                    *(*(*0x20 + iVar1 + -0x410) + 0xa0) = *(*0x20 + uVar6 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x440) = 0x441d65;\n                fcn.0045ca80(0x81);\n                puVar10 = puVar5;\n            }\n            unaff_EDI = puVar10;\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x440) = 0x441d76;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x1c) = unaff_EDI;\n        *(puVar8 + -8) = 0x441d8e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1._0_4_ = *(puVar8 + 0x18);\n        unaff_EDI = *(puVar8 + 0x1c);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1257
    },
    "0046e760": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint64_t fcn.0046e760(uint64_t arg1, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uchar uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t unaff_RBX;\n    uint8_t unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar11;\n    int64_t in_R10;\n    int64_t *in_R11;\n    int64_t unaff_R14;\n    uint64_t uVar12;\n    uint8_t uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_SIL;\n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (arg4 == 0) {\n        in_R10 = 0;\n    }\n    for (uVar11 = arg4 << (-(*in_R11 + -0x3c) & 0x3f) & -(-(*in_R11 + -0x3c) < 0x40);\n        (uVar11 != 0 && ((uVar11 >> 0x3c & 1) == 0)); uVar11 = uVar11 << 1) {\n        in_R10 = in_R10 + -1;\n    }\n    if (unaff_RDI < 0xf) {\n        uVar7 = unaff_RDI * 4;\n        uVar9 = -(-(uVar7 - 0x3c) < 0x40);\n        uVar5 = -(uVar7 - 0x3c);\n        uVar12 = uVar11 >> (uVar5 & 0x3f) & uVar9;\n        if (0x800000000000000 < (uVar11 << (uVar7 & 0x3f) & -(uVar7 < 0x40) & 0xfffffffffffffff | uVar12 & 1)) {\n            uVar12 = uVar12 + 1;\n        }\n        uVar11 = uVar12 << (uVar5 & 0x3f) & uVar9;\n        if ((uVar11 >> 0x3d & 1) != 0) {\n            uVar11 = uVar11 >> 1;\n            in_R10 = in_R10 + 1;\n        }\n    }\n    if (uStack0000000000000028 == 0x58) {\n        iVar8 = 0x4a89a4;\n    }\n    else {\n        iVar8 = 0x4a89b4;\n    }\n    if (noname_2 != '\\0') {\n        uVar12 = unaff_RBX + 1;\n        iVar3 = in_RAX;\n        if (arg1 < uVar12) {\n            arg1 = unaff_RBX;\n            iVar3 = fcn.00445200(unaff_RBX);\n            uVar12 = in_RAX + 1;\n        }\n        *(iVar3 + unaff_RBX) = 0x2d;\n        in_RAX = iVar3;\n        unaff_RBX = uVar12;\n    }\n    uVar12 = unaff_RBX + 3;\n    iVar3 = in_RAX;\n    if (arg1 < uVar12) {\n        arg1 = unaff_RBX;\n        iVar3 = fcn.00445200(unaff_RBX);\n        uVar12 = in_RAX + 3;\n    }\n    *(iVar3 + unaff_RBX) = 0x30;\n    *(iVar3 + 1 + unaff_RBX) = uStack0000000000000028;\n    *(iVar3 + 2 + unaff_RBX) = (uVar11 >> 0x3c & 1) + 0x30;\n    uVar11 = uVar11 << 4;\n    if ((unaff_RDI < 0) && (uVar11 != 0)) {\n        uVar9 = uVar12 + 1;\n        iVar4 = iVar3;\n        if (arg1 < uVar9) {\n            arg1 = uVar12;\n            iVar4 = fcn.00445200(uVar12);\n            uVar9 = iVar3 + 1;\n        }\n        *(iVar4 + uVar12) = 0x2e;\n        iVar3 = iVar4;\n        uVar12 = uVar9;\n        uVar5 = uStack0000000000000028;\n        for (; uVar11 != 0; uVar11 = uVar11 << 4) {\n            uVar9 = uVar12 + 1;\n            uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00445200(uVar12);\n                uVar9 = iVar3 + 1;\n                uVar5 = uStack0000000000000028;\n            }\n            *(iVar4 + uVar12) = uVar6;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n        }\n    }\n    else {\n        uVar5 = uStack0000000000000028;\n        if (0 < unaff_RDI) {\n            uVar9 = uVar12 + 1;\n            iVar4 = iVar3;\n            if (arg1 < uVar9) {\n                arg1 = uVar12;\n                iVar4 = fcn.00445200(uVar12);\n                uVar9 = iVar3 + 1;\n            }\n            *(iVar4 + uVar12) = 0x2e;\n            iVar3 = iVar4;\n            uVar12 = uVar9;\n            uVar5 = uStack0000000000000028;\n            for (iVar10 = 0; iVar10 < unaff_RDI; iVar10 = iVar10 + 1) {\n                uVar9 = uVar12 + 1;\n                uVar6 = *(iVar8 + (uVar11 >> 0x3c));\n                iVar4 = iVar3;\n                if (arg1 < uVar9) {\n                    arg1 = uVar12;\n                    iVar4 = fcn.00445200(uVar12);\n                    uVar9 = iVar3 + 1;\n                    uVar5 = uStack0000000000000028;\n                }\n                *(iVar4 + uVar12) = uVar6;\n                uVar11 = uVar11 << 4;\n                iVar3 = iVar4;\n                uVar12 = uVar9;\n            }\n        }\n    }\n    if (uVar5 == (uVar5 | 0x20)) {\n        uVar6 = 0x70;\n    }\n    else {\n        uVar6 = 0x50;\n    }\n    uVar11 = uVar12 + 1;\n    iVar8 = iVar3;\n    if (arg1 < uVar11) {\n        arg1 = uVar12;\n        iVar8 = fcn.00445200(uVar12);\n        uVar11 = iVar3 + 1;\n    }\n    *(iVar8 + uVar12) = uVar6;\n    if (in_R10 < 0) {\n        in_R10 = -in_R10;\n        uVar6 = 0x2d;\n    }\n    else {\n        uVar6 = 0x2b;\n    }\n    uVar12 = uVar11 + 1;\n    iVar3 = iVar8;\n    if (arg1 < uVar12) {\n        arg1 = uVar11;\n        iVar3 = fcn.00445200(uVar11);\n        uVar12 = iVar8 + 1;\n    }\n    *(iVar3 + uVar11) = uVar6;\n    cVar1 = in_R10;\n    cVar2 = in_R10 >> 0x3f;\n    if (in_R10 < 100) {\n        cVar2 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 3) - cVar2;\n        if (arg1 < uVar12 + 2) {\n            iVar3 = fcn.00445200(uVar12);\n        }\n        *(iVar3 + uVar12) = cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = cVar1 + cVar2 * -10 + '0';\n    }\n    else if (in_R10 < 1000) {\n        iVar8 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar4 = iVar8 >> 3;\n        if (arg1 < uVar12 + 3) {\n            iVar3 = fcn.00445200(uVar12);\n        }\n        *(iVar3 + uVar12) = (SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6) + '0';\n        *(iVar3 + 1 + uVar12) =\n             iVar4 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar4) >> 0x40, 0) + iVar4 >> 3) - (iVar8 >> 0x3f))\n                     * -10 + '0';\n        *(iVar3 + 2 + uVar12) = cVar1 + iVar4 * -10 + '0';\n    }\n    else {\n        iVar8 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(in_R10) >> 0x40, 0) + in_R10 >> 6;\n        iVar4 = SUB168(SEXT816(-0x3333333333333333) * SEXT816(in_R10) >> 0x40, 0) + in_R10;\n        iVar10 = iVar4 >> 3;\n        if (arg1 < uVar12 + 4) {\n            iVar3 = fcn.00445200(uVar12);\n        }\n        *(iVar3 + uVar12) = in_R10 / 1000 + cVar2 + '0';\n        *(iVar3 + 1 + uVar12) = iVar8 + ((iVar8 & 0xff) / 10) * -10 + '0';\n        *(iVar3 + 2 + uVar12) =\n             iVar10 + ((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar10) >> 0x40, 0) + iVar10 >> 3) -\n                      (iVar4 >> 0x3f)) * -10 + '0';\n        *(iVar3 + 3 + uVar12) = cVar1 + iVar10 * -10 + '0';\n    }\n    return iVar3;\n}\n",
        "token_count": 2522
    },
    "0046f460": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0046f460(ulong arg1, ulong noname_1, ulong noname_2, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RSI;\n    uint32_t unaff_EDI;\n    int64_t iVar5;\n    \n    if (0x13 < unaff_RSI) goto code_r0x0046f729;\n    uVar3 = *(unaff_RSI * 8 + 0x52a8e0);\n    iVar5 = 0;\n    while (uVar3 <= unaff_RBX) {\n        uVar4 = unaff_RBX % 10;\n        if (uVar4 < 6) {\n            if (uVar4 < 5) {\n                unaff_EDI = 0;\n            }\n            else if (arg1 == 0) {\n                unaff_EDI = unaff_RBX / 10 & 1;\n            }\n            else {\n                unaff_EDI = 1;\n            }\n        }\n        else {\n            unaff_EDI = 1;\n        }\n        iVar5 = iVar5 + 1;\n        arg1._0_1_ = arg1 | uVar4 != 0;\n        unaff_RBX = unaff_RBX / 10;\n        arg4 = uVar3;\n    }\n    if (unaff_EDI != '\\0') {\n        unaff_RBX = unaff_RBX + 1;\n    }\n    if (uVar3 <= unaff_RBX) {\n        unaff_RBX = unaff_RBX / 10;\n        iVar5 = iVar5 + 1;\n    }\n    in_RAX[3] = unaff_RSI;\n    while (99 < unaff_RBX) {\n        if (unaff_RBX >> 0x20 == 0) {\n            uVar3 = ((unaff_RBX & 0xffffffff) >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        else {\n            uVar3 = (unaff_RBX >> 1) / 0x32;\n            uVar4 = unaff_RBX + uVar3 * -100;\n        }\n        if (199 < uVar4 * 2 + 1) goto code_r0x0046f71f;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 1) goto code_r0x0046f717;\n        *((unaff_RSI - 1) + *in_RAX) = *(uVar4 * 2 + 0x4b01ff);\n        if (199 < uVar4 << 1) goto code_r0x0046f70d;\n        arg4 = in_RAX[1];\n        if (arg4 <= unaff_RSI - 2) goto code_r0x0046f705;\n        *((unaff_RSI - 2) + *in_RAX) = *(uVar4 * 2 + 0x4b01fe);\n        unaff_RBX = uVar3;\n        unaff_RSI = unaff_RSI - 2;\n    }\n    if (unaff_RBX == 0) {\ncode_r0x0046f660:\n        if (unaff_RBX < 10) {\ncode_r0x0046f6a0:\n            while( true ) {\n                unaff_RBX = *in_RAX;\n                uVar3 = in_RAX[3];\n                if (in_RAX[1] <= uVar3 - 1) break;\n                if (*((uVar3 - 1) + unaff_RBX) != '0') {\n                    in_RAX[4] = iVar5 + uVar3;\n                    return;\n                }\n                in_RAX[3] = uVar3 - 1;\n                iVar5 = iVar5 + 1;\n            }\n            fcn.0045ca80(in_RAX[1]);\ncode_r0x0046f6d8:\n            fcn.0045caa0(uVar3);\n        }\n        else if (unaff_RBX << 1 < 200) {\n            uVar3 = in_RAX[1];\n            arg4 = 0x4b01fe;\n            uVar1 = *(unaff_RBX * 2 + 0x4b01fe);\n            unaff_RBX = uVar1;\n            if (unaff_RSI - 1 < uVar3) {\n                *((unaff_RSI - 1) + *in_RAX) = uVar1;\n                goto code_r0x0046f6a0;\n            }\n            goto code_r0x0046f6d8;\n        }\n        fcn.0045caa0(200);\n        uVar3 = unaff_RBX;\ncode_r0x0046f6f2:\n        fcn.0045caa0(uVar3);\n    }\n    else if (unaff_RBX * 2 + 1 < 200) {\n        uVar1 = *(unaff_RBX * 2 + 0x4b01ff);\n        arg4 = uVar1;\n        uVar3 = in_RAX[1];\n        if (unaff_RSI - 1 < in_RAX[1]) {\n            *((unaff_RSI - 1) + *in_RAX) = uVar1;\n            unaff_RSI = unaff_RSI - 1;\n            goto code_r0x0046f660;\n        }\n        goto code_r0x0046f6f2;\n    }\n    fcn.0045caa0(200);\ncode_r0x0046f705:\n    fcn.0045caa0(arg4);\ncode_r0x0046f70d:\n    fcn.0045caa0(200);\ncode_r0x0046f717:\n    fcn.0045caa0(arg4);\ncode_r0x0046f71f:\n    fcn.0045caa0(200);\ncode_r0x0046f729:\n    fcn.0045ca80(0x14);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1393
    },
    "0046ff60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0046ff60(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    char unaff_SIL;\n    uint32_t uVar5;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t uVar10;\n    int32_t iVar11;\n    \n    if (unaff_RDI == 0) {\n        in_RAX[4] = arg4 + 1;\n        return;\n    }\n    iVar3 = 0;\n    uVar8 = 0;\n    while( true ) {\n        if (unaff_RDI == 0) break;\n        uVar4 = unaff_RBX + 9;\n        unaff_RBX = uVar4 / 10;\n        uVar7 = arg1 & 0xffffffff;\n        uVar2 = arg1 + (uVar7 / 10) * -10;\n        uVar6 = unaff_RDI & 0xffffffff;\n        uVar4 = uVar4 / 10;\n        uVar9 = uVar6 / 10;\n        if (uVar9 < uVar4) break;\n        uVar5 = uVar7 / 10 + 1;\n        arg1 = uVar7 / 10;\n        if ((uVar4 == uVar5) && (uVar4 = uVar7 / 10,  uVar4 <= uVar9 && uVar6 / 10 != uVar4)) {\n            uVar2 = 0;\n            arg1 = uVar5;\n            arg3 = 0;\n        }\n        unaff_SIL = unaff_SIL != '\\0' && uVar8 == 0;\n        iVar3 = iVar3 + 1;\n        unaff_RDI = uVar6 / 10;\n        uVar8 = uVar2;\n    }\n    arg1 = arg1 & 0xffffffff;\n    if (iVar3 < 1) {\n        uVar10 = arg3;\n        goto code_r0x00470040;\n    }\n    if (uVar8 < 6) {\n        if (uVar8 == 5) {\n            if (unaff_SIL == '\\0') goto code_r0x00470028;\n            if (unaff_SIL != '\\0') {\n                uVar10 = arg1 & 1;\n                goto code_r0x00470040;\n            }\n        }\n        uVar10 = 0;\n    }\n    else {\ncode_r0x00470028:\n        uVar10 = 1;\n    }\ncode_r0x00470040:\n    if ((arg1 < unaff_RDI) && (uVar10 != 0)) {\n        arg1 = arg1 + 1;\n    }\n    for (uVar7 = arg4 - iVar3; in_RAX[3] < uVar7; uVar7 = uVar7 - 2) {\n        iVar11 = arg1;\n        arg1 = (arg1 >> 1) / 0x32;\n        iVar11 = iVar11 + arg1 * -100;\n        uVar6 = iVar11 * 2 + 1;\n        if (199 < uVar6) goto code_r0x00470148;\n        arg3 = in_RAX[1];\n        if (arg3 <= uVar7) goto code_r0x0047013d;\n        *(*in_RAX + uVar7) = *(uVar6 + 0x4b01fe);\n        uVar6 = iVar11 * 2;\n        if (199 < uVar6) goto code_r0x00470130;\n        unaff_RDI = in_RAX[1];\n        arg3 = *in_RAX;\n        if (unaff_RDI <= uVar7 - 1) goto code_r0x00470125;\n        *((uVar7 - 1) + arg3) = *(uVar6 + 0x4b01fe);\n    }\n    if (uVar7 == in_RAX[3]) {\n        if (in_RAX[1] <= uVar7) {\n            fcn.0045ca80(in_RAX[1]);\ncode_r0x00470125:\n            fcn.0045ca80(unaff_RDI);\ncode_r0x00470130:\n            fcn.0045ca80(200);\ncode_r0x0047013d:\n            fcn.0045ca80(arg3);\ncode_r0x00470148:\n            fcn.0045ca80(200);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *(*in_RAX + uVar7) = arg1 + '0';\n    }\n    in_RAX[3] = (arg4 - iVar3) + 1;\n    in_RAX[4] = arg4 + 1;\n    return;\n}\n",
        "token_count": 1133
    },
    "00470460": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00470460(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar *in_RAX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    uint64_t uVar7;\n    char cVar8;\n    uint64_t in_R8;\n    uchar uVar9;\n    uint64_t in_R9;\n    uchar uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar9 = in_R9;\n        cVar8 = in_R8;\n        puVar3 = *0x20 + -0x18;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar3 && puVar3 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = in_XMM15;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar8 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar4 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar5 = unaff_RDI / unaff_RSI;\n                            uVar7 = unaff_RDI - puVar5 * unaff_RSI;\n                            puVar11 = in_RAX;\n                            if (0x23 < uVar7) goto code_r0x004706d0;\n                            uVar1 = *(uVar7 + 0x4ad991);\n                            puVar3 = uVar1;\n                            if (0x40 < puVar4 + -1) goto code_r0x004706c6;\n                            (*0x20 + -0x52)[puVar4] = uVar1;\n                            puVar4 = puVar4 + -1;\n                            unaff_RDI = puVar5;\n                        }\n                        puVar11 = puVar4 + -1;\n                        puVar12 = unaff_RDI[0x4ad991];\n                        puVar5 = puVar4;\n                        if (0x40 < puVar11) goto code_r0x004706b9;\n                        (*0x20 + -0x52)[puVar4] = unaff_RDI[0x4ad991];\n                        bVar13 = cVar8 == '\\0';\n                        goto code_r0x00470572;\n                    }\n                    iVar2 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                        }\n                    }\n                    puVar5 = iVar2 & 7;\n                    puVar11 = unaff_RSI + -1;\n                    puVar12 = 0x41;\n                    goto code_r0x004706f4;\n                }\n                puVar4 = 0x41;\n                puVar11 = unaff_RDI;\ncode_r0x00470780:\n                uVar9 = in_R9;\n                cVar8 = in_R8;\n                if (puVar11 < 0x64) {\n                    unaff_RDI = puVar11;\n                    if (puVar11 * 2 + 1U < 200) {\n                        puVar3 = puVar4 + -1;\n                        puVar12 = 0x4b01fe;\n                        if (puVar3 < 0x41) {\n                            (*0x20 + -0x52)[puVar4] = *(puVar11 * 2 + 0x4b01ff);\n                            if (puVar11 < 0xa) {\ncode_r0x004708ab:\n                                bVar13 = cVar8 == '\\0';\n                                puVar11 = puVar3;\ncode_r0x00470572:\n                                do {\n                                    puVar5 = puVar11;\n                                    if (bVar13) {\ncode_r0x00470595:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar5 < 0x42) {\n                                                *(*0x20 + -0xa0) = 0x470675;\n                                                fcn.00448f60(-(puVar5 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0xa0) = 0x47069f;\n                                            fcn.0045cb40(0x41);\n                                        }\n                                        else if (puVar5 < 0x42) {\n                                            uVar7 = (unaff_RBX - puVar5) + 0x41;\n                                            *(*0x20 + -0x60) = uVar7;\n                                            puVar3 = puVar5 + -0x41;\n                                            if (arg1 < uVar7) {\n                                                *(*0x20 + -0x68) = puVar3;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar5 & puVar3 >> 0x3f) - 0x51);\n                                                *(*0x20 + -0x70) = unaff_RBX;\n                                                *(*0x20 + -0xa0) = 0x4705f8;\n                                                in_RAX = fcn.00445200(unaff_RBX);\n                                                puVar3 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0xa0) = 0x470629;\n                                            fcn.0045d3c0(-puVar3);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0xa0) = 0x4706ac;\n                                        fcn.0045cb40(0x41);\n                                    }\n                                    else {\n                                        puVar5 = puVar11 + -1;\n                                        if (puVar5 < 0x41) {\n                                            (*0x20 + -0x52)[puVar11] = 0x2d;\n                                            goto code_r0x00470595;\n                                        }\n                                    }\n                                    *(*0x20 + -0xa0) = 0x4706b9;\n                                    fcn.0045ca80(0x41);\ncode_r0x004706b9:\n                                    puVar4 = puVar12;\n                                    *(*0x20 + -0xa0) = 0x4706c6;\n                                    fcn.0045ca80(0x41);\n                                    in_RAX = puVar11;\ncode_r0x004706c6:\n                                    *(*0x20 + -0xa0) = 0x4706d0;\n                                    fcn.0045ca80(0x41);\n                                    puVar11 = in_RAX;\ncode_r0x004706d0:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0xa0) = 0x4706dd;\n                                    in_RAX = fcn.0045caa0(0x24);\n                                    unaff_RDI = puVar3;\n                                    while( true ) {\n                                        puVar12 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar4] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar5 & 0x3f);\n                                        puVar3 = unaff_RDI;\n                                        unaff_R13 = puVar12;\ncode_r0x004706f4:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar4 = puVar12;\n                                        if (0x23 < (unaff_RDI & puVar11)) goto code_r0x0047075f;\n                                        unaff_R13 = puVar12 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar11) + 0x4ad991);\n                                        if (0x40 < unaff_R13) goto code_r0x00470752;\n                                    }\n                                    puVar5 = puVar12 + -1;\n                                    puVar11 = unaff_RDI[0x4ad991];\n                                    if (0x40 < puVar5) goto code_r0x00470745;\n                                    (*0x20 + -0x52)[puVar12] = unaff_RDI[0x4ad991];\n                                    bVar13 = in_R8 == '\\0';\n                                    puVar11 = puVar5;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar11 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar3 = puVar4 + -2;\n                                if (puVar3 < 0x41) {\n                                    (*0x20 + -0x53)[puVar4] = *(puVar11 * 2 + 0x4b01fe);\n                                    goto code_r0x004708ab;\n                                }\n                                *(*0x20 + -0xa0) = 0x4708c5;\n                                fcn.0045ca80(0x41);\n                            }\n                            *(*0x20 + -0xa0) = 0x4708d2;\n                            fcn.0045caa0(200);\n                        }\n                        *(*0x20 + -0xa0) = 0x4708df;\n                        fcn.0045ca80(0x41);\n                    }\n                    *(*0x20 + -0xa0) = 0x4708ec;\n                    fcn.0045caa0(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar11 >> 1;\n                    puVar5 = unaff_RDI / 0x32;\n                    puVar11 = puVar11 + puVar5 * -100;\n                    if (199 < puVar11 * 2 + 1U) goto code_r0x0047090f;\n                    uVar1 = *(puVar11 * 2 + 0x4b01ff);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar4 + -1) goto code_r0x00470905;\n                    (*0x20 + -0x52)[puVar4] = uVar1;\n                    if (199 < puVar11 * 2) goto code_r0x004708f6;\n                    puVar3 = puVar4 + -2;\n                    uVar10 = *(puVar11 * 2 + 0x4b01fe);\n                    if (puVar3 < 0x41) goto code_r0x0047076c;\n                }\n                *(*0x20 + -0xa0) = 0x4708f6;\n                fcn.0045ca80(0x41);\ncode_r0x004708f6:\n                *(*0x20 + -0xa0) = 0x470905;\n                fcn.0045caa0(200);\ncode_r0x00470905:\n                *(*0x20 + -0xa0) = 0x47090f;\n                fcn.0045ca80(0x41);\ncode_r0x0047090f:\n                arg1 = 200;\n                *(*0x20 + -0xa0) = 0x470919;\n                fcn.0045caa0(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x4c9c50;\n            *(*0x20 + -0xa0) = 0x47092c;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        puVar6[0x30] = cVar8;\n        puVar6[0x31] = uVar9;\n        *(puVar6 + -8) = 0x470955;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        in_R8 = puVar6[0x30];\n        in_R9 = puVar6[0x31];\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x00470745:\n    *(*0x20 + -0xa0) = 0x470752;\n    fcn.0045ca80(0x41);\ncode_r0x00470752:\n    *(*0x20 + -0xa0) = 0x47075f;\n    fcn.0045ca80(0x41);\n    puVar4 = puVar12;\ncode_r0x0047075f:\n    uVar10 = SUB81(puVar11, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0xa0) = 0x47076c;\n    puVar3 = fcn.0045caa0(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x0047076c:\n    (*0x20 + -0x53)[puVar4] = uVar10;\n    puVar4 = puVar3;\n    unaff_RSI = in_RAX;\n    puVar11 = puVar5;\n    goto code_r0x00470780;\n}\n",
        "token_count": 3286
    },
    "004781a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004781a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    ulong uVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_XMM15;\n            *(*0x20 + -0x38) = *0x20 + -8;\n            *(*0x20 + -0x30) = 0x4781d6;\n            iVar2 = fcn.0045cd2b();\n            unaff_RBP = *(*0x20 + -0x38);\n            if ((-1 < unaff_RBX) &&\n               (iVar4 = *(iVar2 + 0x38),  *(iVar2 + 0x40) != unaff_RBX && unaff_RBX <= *(iVar2 + 0x40))) {\n                *(*0x20 + 0x70) = iVar2;\n                *(*0x20 + 0x78) = unaff_RBX;\n                iVar2 = *(iVar4 + 8 + unaff_RBX * 0x18);\n                if (iVar2 == 0) {\n                    uVar7 = 0;\n                    iVar2 = 0;\n                }\n                else {\n                    uVar7 = 0x4ca2b0;\n                }\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x18) = unaff_RBX * 3;\n                *(*0x20 + 0x28) = uVar7;\n                *(*0x20 + 0x30) = iVar2;\n                *(*0x20 + -0x30) = 0x47823f;\n                uVar7 = fcn.004774e0(iVar4, unaff_RBX * 3, param_3, param_4);\n                *(*0x20 + 8) = uVar7;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar2 = *(*0x20 + -0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(*0x20 + 0x68) = (*(iVar4 + 0x10 + iVar2 * 8) & 1) != 0;\n                uVar1 = **(iVar4 + iVar2 * 8);\n                uVar5 = uVar1;\n                if ((uVar1 & 1) == 0) {\n                    *(*0x20 + -0x30) = 0x478285;\n                    uVar7 = fcn.004774e0(*(*0x20 + 0x70), iVar4, param_3, param_4);\n                    *(*0x20 + 0x18) = uVar7;\n                    *(*0x20 + 0x20) = uVar5;\n                    iVar2 = *(*0x20 + -0x18);\n                    iVar4 = *(*0x20 + -0x10);\n                }\n                *(*0x20 + -0x30) = 0x4782a5;\n                uVar7 = fcn.00477580(iVar2, iVar4, param_3, param_4);\n                if (uVar5 != 0) {\n                    *(*0x20 + 0x38) = uVar7;\n                    *(*0x20 + 0x40) = uVar5;\n                }\n                *(*0x20 + 0x48) = *(*(*0x20 + -0x10) + 0x10 + *(*0x20 + -0x18) * 8) >> 1;\n                *(*0x20 + -0x30) = 0x4782d7;\n                puVar3 = fcn.0040cd00();\n                *puVar3 = *(*0x20 + 0x78);\n                *(*0x20 + 0x50) = puVar3;\n                *(*0x20 + 0x58) = 1;\n                *(*0x20 + 0x60) = 1;\n                return;\n            }\n            unaff_RBX = 0x4c99b0;\n            *(*0x20 + -0x30) = 0x47831c;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar6 + 0x70) = in_RAX;\n        *(puVar6 + 0x78) = unaff_RBX;\n        *(puVar6 + -8) = 0x47832c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 0x70);\n        unaff_RBX = *(puVar6 + 0x78);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1202
    },
    "0047a740": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0047a740(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = arg1 & 0x1f;\n            if (uVar1 == 0x19) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x47a7f2;\n                fcn.00432ec0(0x19, arg1);\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = 0x47a805;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x13;\n            *unaff_RBX = 0x4a9946;\n            arg1 = *(*0x20 + -0x10);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x28) = 0x47a82f;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x47a849;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 610
    },
    "004120c0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.004120c0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x565870);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.0045caa0(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 357
    },
    "00412ca0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00412ca0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x412d2e;\n                    uVar1 = fcn.004121a0(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = unaff_EBX;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar3 = *(*0x20 + -0x10);\n                        for (uVar4 = 0; uVar4 < uVar2 >> 2; uVar4 = uVar4 + 1) {\n                            *puVar3 = 0xff;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x412d6f;\n                        fcn.0045d100();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    unaff_EBX = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x412da5;\n            fcn.00433640();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x412db6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x412dd3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 931
    },
    "00454540": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00454540(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00434de0();\n        fcn.00435040();\n        fcn.00434e60();\n        fcn.00454300();\n        fcn.00453660(0);\n    }\n    fcn.00436b60();\n    return;\n}\n",
        "token_count": 185
    },
    "0048ce00": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong fcn.0048ce00(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x140) == -1) {\n                arg1_01 = ((arg1 * 6 >> 0x3f) >> 0x3d) + arg1 * 6 >> 3;\n            }\n            else {\n                arg1_01 = (arg1 >> 2) * 3;\n            }\n            *(*0x20 + -0x38) = arg1_01;\n            *(*0x20 + -0x78) = 0x48ce71;\n            uVar1 = fcn.00445120(arg1_01);\n            *(*0x20 + -0x10) = uVar1;\n            uVar1 = *(*0x20 + 0x10);\n            arg1_00 = *(*0x20 + 0x18);\n            *(*0x20 + -0x78) = 0x48ce90;\n            fcn.00449100(arg1_00);\n            unaff_RBX = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x48ceb0;\n            arg1 = fcn.0048cf20(*(*0x20 + -0x38), arg1_01, uVar1, arg1_00);\n            if (arg1 <= *(*0x20 + -0x38)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x78) = 0x48cedd;\n            in_RAX = fcn.0045cb00(arg1, *(*0x20 + -0x38));\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x48cef2;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 706
    },
    "00450920": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450920(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044f540(0);\n    }\n    fcn.0044f540(0);\n    return;\n}\n",
        "token_count": 136
    },
    "00455820": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00455820(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.00431c60();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 292
    },
    "004558e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.004558e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x004559cf;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00431c60();\ncode_r0x004559cf:\n    fcn.00431c60();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 394
    },
    "004559e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.004559e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00455b14;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x00455a82;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x00455a82:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x455aac;\n                    fcn.004550c0();\n                    *(*0x20 + -0x28) = 0x455ab1;\n                    uVar2 = fcn.00455820(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x455b14;\n            fcn.00431c60();\ncode_r0x00455b14:\n            *(*0x20 + -0x28) = 0x455b19;\n            in_RAX = fcn.00431c60();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x455b25;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 968
    },
    "004647a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004647a0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.00431c60();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "004774e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.004774e0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.00431c60();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "00477580": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00477580(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x0047766f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00431c60();\ncode_r0x0047766f:\n    fcn.00431c60();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 395
    },
    "00477680": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar * fcn.00477680(ulong arg1, uint64_t arg2)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    uint8_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uchar *puVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    bool bVar11;\n    \n    do {\n        iVar2 = in_RAX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX < 0x20000000) {\n                if (unaff_RDI < 0x20000000) {\n                    *(*0x20 + -0x22) = 0;\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x2c) = 0;\n                    *(*0x20 + -0x2a) = 0;\n                    uVar7 = 0;\n                    uVar8 = unaff_RBX;\n                    while( true ) {\n                        uVar4 = uVar8 & 0x7f;\n                        uVar8 = uVar8 >> 7;\n                        if (uVar8 == 0) break;\n                        if (9 < uVar7) goto code_r0x00477a26;\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4 | 0x80;\n                        uVar7 = uVar7 + 1;\n                    }\n                    if (uVar7 < 10) {\n                        *(*0x20 + (uVar7 - 0x22)) = uVar4;\n                        uVar8 = 0;\n                        iVar2 = unaff_RDI;\n                        while( true ) {\n                            uVar4 = iVar2 & 0x7f;\n                            iVar2 = iVar2 >> 7;\n                            if (iVar2 == 0) break;\n                            if (9 < uVar8) goto code_r0x00477a0c;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4 | 0x80;\n                            uVar8 = uVar8 + 1;\n                        }\n                        if (uVar8 < 10) {\n                            *(*0x20 + -0x38) = unaff_RBX;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + 0x18) = arg1;\n                            *(*0x20 + -0x60) = uVar8;\n                            *(*0x20 + -0x58) = uVar7;\n                            *(*0x20 + (uVar8 - 0x2c)) = uVar4;\n                            iVar2 = uVar7 + unaff_RBX + 2;\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x48) = unaff_RBX + uVar7;\n                            if (unaff_RDI != 0) {\n                                iVar2 = unaff_RDI + uVar8 + unaff_RBX + uVar7 + 3;\n                                unaff_SIL = unaff_SIL | 2;\n                            }\n                            *(*0x20 + -0x50) = iVar2;\n                            *(*0x20 + -0x71) = unaff_SIL;\n                            *(*0x20 + -0xb8) = 0x47780c;\n                            puVar1 = fcn.00445120(iVar2);\n                            uVar8 = *(*0x20 + -0x50);\n                            if (uVar8 != 0) {\n                                *(*0x20 + -0x10) = puVar1;\n                                *puVar1 = *(*0x20 + -0x71);\n                                iVar2 = uVar8 - 1;\n                                iVar3 = *(*0x20 + -0x58);\n                                arg1_01 = iVar2;\n                                if (iVar3 + 1 < iVar2) {\n                                    arg1_01 = iVar3 + 1;\n                                }\n                                if (*0x20 + -0x22 != puVar1 + (-iVar2 >> 0x3f & 1)) {\n                                    *(*0x20 + -0xb8) = 0x477867;\n                                    fcn.0045d3c0(arg1_01);\n                                    puVar1 = *(*0x20 + -0x10);\n                                    uVar8 = *(*0x20 + -0x50);\n                                    iVar3 = *(*0x20 + -0x58);\n                                }\n                                unaff_RBX = iVar3 + 2;\n                                if (unaff_RBX <= uVar8) {\n                                    iVar3 = (uVar8 - iVar3) + -2;\n                                    iVar2 = iVar3;\n                                    if (*(*0x20 + -0x38) < iVar3) {\n                                        iVar2 = *(*0x20 + -0x38);\n                                    }\n                                    if (*(*0x20 + 8) == puVar1 + (unaff_RBX & -iVar3 >> 0x3f)) {\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xb8) = 0x4778ce;\n                                        fcn.0045d3c0(iVar2);\n                                        unaff_RBX = *(*0x20 + -0x40);\n                                        puVar1 = *(*0x20 + -0x10);\n                                        uVar8 = *(*0x20 + -0x50);\n                                    }\n                                    if (unaff_RBX == 0) {\n                                        return puVar1;\n                                    }\n                                    if (*(*0x20 + -0x68) <= uVar8) {\n                                        uVar8 = uVar8 - *(*0x20 + -0x48);\n                                        uVar7 = uVar8 - 2;\n                                        iVar2 = *(*0x20 + -0x60);\n                                        uVar9 = iVar2 + 1;\n                                        arg1_00 = uVar7;\n                                        if (uVar9 < uVar7) {\n                                            arg1_00 = uVar9;\n                                        }\n                                        puVar6 = puVar1 + (*(*0x20 + -0x68) & -uVar7 >> 0x3f);\n                                        if (*0x20 + -0x2c == puVar6) {\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                        }\n                                        else {\n                                            *(*0x20 + -0x70) = uVar9;\n                                            *(*0x20 + -0x38) = uVar8;\n                                            *(*0x20 + -0x48) = uVar7;\n                                            *(*0x20 + -0x18) = puVar6;\n                                            *(*0x20 + -0xb8) = 0x477957;\n                                            fcn.0045d3c0(arg1_00);\n                                            uVar9 = *(*0x20 + -0x70);\n                                            uVar7 = *(*0x20 + -0x48);\n                                            bVar10 = uVar9 < uVar7;\n                                            bVar11 = uVar9 == uVar7;\n                                            unaff_RBX = *(*0x20 + -0x40);\n                                            puVar6 = *(*0x20 + -0x18);\n                                            uVar8 = *(*0x20 + -0x38);\n                                            iVar2 = *(*0x20 + -0x60);\n                                            puVar1 = *(*0x20 + -0x10);\n                                        }\n                                        if (bVar10 || bVar11) {\n                                            uVar8 = (uVar8 - iVar2) - 3;\n                                            uVar7 = uVar8;\n                                            if (unaff_RBX < uVar8) {\n                                                uVar7 = unaff_RBX;\n                                            }\n                                            if (*(*0x20 + 0x18) != puVar6 + (-uVar8 >> 0x3f & uVar9)) {\n                                                *(*0x20 + -0xb8) = 0x4779bf;\n                                                fcn.0045d3c0(uVar7);\n                                                puVar1 = *(*0x20 + -0x10);\n                                            }\n                                            return puVar1;\n                                        }\n                                        *(*0x20 + -0xb8) = 0x4779e5;\n                                        fcn.0045cb40(uVar7);\n                                    }\n                                    *(*0x20 + -0xb8) = 0x4779f0;\n                                    fcn.0045cb40(uVar8);\n                                }\n                                *(*0x20 + -0xb8) = 0x4779f8;\n                                fcn.0045cb40(uVar8);\n                            }\n                            *(*0x20 + -0xb8) = 0x4779ff;\n                            fcn.0045ca80(uVar8);\n                        }\n                        *(*0x20 + -0xb8) = 0x477a0c;\n                        fcn.0045ca80(10);\ncode_r0x00477a0c:\n                        *(*0x20 + -0xb8) = 0x477a19;\n                        fcn.0045ca80(10);\n                    }\n                    *(*0x20 + -0xb8) = 0x477a26;\n                    fcn.0045ca80(10);\ncode_r0x00477a26:\n                    *(*0x20 + -0xb8) = 0x477a33;\n                    fcn.0045ca80(10);\n                    arg2 = unaff_RBX;\n                }\n                *(*0x20 + -0xb8) = 0x477a5b;\n                fcn.00448c60(0x20, arg2, 0x4a6a42, 3);\n                *(*0x20 + -0xb8) = 0x477a65;\n                fcn.0040a660();\n                *(*0x20 + -0xb8) = 0x477a74;\n                in_RAX = fcn.00432ec0();\n            }\n            arg1 = 0x21;\n            unaff_SIL = 0;\n            *(*0x20 + -0xb8) = 0x477a9c;\n            fcn.00448c60(0x21, arg2, 0x4a6a42, 3);\n            *(*0x20 + -0xb8) = 0x477aa5;\n            unaff_RBX = fcn.0040a660();\n            *(*0x20 + -0xb8) = 0x477ab4;\n            iVar2 = fcn.00432ec0();\n            unaff_RDI = in_RAX;\n        }\n        *(puVar5 + 8) = iVar2;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        puVar5[0x28] = unaff_SIL;\n        *(puVar5 + -8) = 0x477ad3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_SIL = puVar5[0x28];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2752
    },
    "00401f60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.00401f60(uint64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        uVar5 = unaff_RDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            arg2 = 0;\n            for (iVar4 = 0; iVar2 = arg2,  iVar4 < unaff_RDI; iVar4 = iVar4 + 1) {\n                arg2 = iVar2 * 0x1000193 + *(arg1 + iVar4);\n            }\n            iVar7 = 0x1000193;\n            iVar8 = 1;\n            for (; 0 < uVar5; uVar5 = uVar5 >> 1) {\n                if ((uVar5 & 1) != 0) {\n                    iVar8 = iVar8 * iVar7;\n                }\n                iVar7 = iVar7 * iVar7;\n            }\n            iVar7 = 0;\n            for (uVar5 = 0; uVar5 < unaff_RDI; uVar5 = uVar5 + 1) {\n                if (unaff_RBX <= uVar5) goto code_r0x0040217c;\n                iVar7 = iVar7 * 0x1000193 + *(in_RAX + uVar5);\n            }\n            *(*0x20 + -0x10) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x30) = iVar8;\n            *(*0x20 + -0x2c) = iVar2;\n            arg1_00 = unaff_RDI;\n            uVar6 = unaff_RDI;\n            if (iVar7 == iVar2) {\n                uVar6 = uVar5;\n                if (unaff_RDI <= unaff_RBX) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x50) = 0x402045;\n                    cVar1 = fcn.004027a0(unaff_RDI, arg2);\n                    if (cVar1 != '\\0') {\n                        return 0;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x2c);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar6 = *(*0x20 + -0x10);\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar8 = *(*0x20 + -0x30);\n                    arg1_00 = uVar6;\n                    goto code_r0x00402080;\n                }\n            }\n            else {\ncode_r0x00402080:\n                while( true ) {\n                    do {\n                        uVar5 = arg1_00;\n                        if (unaff_RBX <= uVar5) {\n                            return 0xffffffffffffffff;\n                        }\n                        unaff_RDI = uVar5 - uVar6;\n                        if (unaff_RBX <= unaff_RDI) goto code_r0x00402166;\n                        iVar7 = (iVar7 * 0x1000193 + *(in_RAX + uVar5)) - *(in_RAX + unaff_RDI) * iVar8;\n                        arg1_00 = uVar5 + 1;\n                    } while (arg2 != iVar7);\n                    uVar9 = unaff_RDI + 1;\n                    if (arg1_00 < uVar9) break;\n                    if (uVar6 == uVar5 - unaff_RDI) {\n                        *(*0x20 + -0x24) = iVar7;\n                        *(*0x20 + -0x20) = arg1_00;\n                        *(*0x20 + -0x18) = uVar9;\n                        *(*0x20 + -0x50) = 0x402106;\n                        cVar1 = fcn.004027a0(uVar5 - unaff_RDI, arg2);\n                        arg2 = *(*0x20 + -0x2c);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar6 = *(*0x20 + -0x10);\n                        iVar7 = *(*0x20 + -0x24);\n                        iVar8 = *(*0x20 + -0x30);\n                        arg1_00 = *(*0x20 + -0x20);\n                        uVar9 = *(*0x20 + -0x18);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        cVar1 = '\\0';\n                    }\n                    if (cVar1 != '\\0') {\n                        return uVar9;\n                    }\n                }\n                *(*0x20 + -0x50) = 0x402166;\n                fcn.0045cb40(arg1_00);\ncode_r0x00402166:\n                *(*0x20 + -0x50) = 0x402171;\n                fcn.0045ca80(unaff_RBX);\n            }\n            *(*0x20 + -0x50) = 0x40217c;\n            fcn.0045cac0(unaff_RDI, unaff_RBX);\n            uVar5 = uVar6;\ncode_r0x0040217c:\n            *(*0x20 + -0x50) = 0x402187;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = uVar5;\n        *(puVar3 + -8) = 0x4021a5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1627
    },
    "004090e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004090e0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x409116;\n            fcn.0044b660();\n            *(*0x20 + -0x130) = 0x40911b;\n            uVar1 = fcn.0044bde0();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x40913b;\n            fcn.00402c40(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1_00 = iVar4 + 2;\n                    uVar6 = param_2 < arg1_00;\n                    if (arg1_00 < param_2) goto code_r0x0040919b;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x409196;\n                        fcn.00448bc0(0x31);\n                        *(*0x20 + -0x130) = 0x40919b;\n                        uVar2 = fcn.00433640();\ncode_r0x0040919b:\n                        if (uVar6) goto code_r0x00409425;\n                        if (arg1_00 < uVar2) goto code_r0x00409419;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1_00) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x40921e;\n                    fcn.00402c40(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x0040927a;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            arg1 = 0x2e;\n                            *(*0x20 + -0x130) = 0x409275;\n                            fcn.00448bc0(0x2e);\n                            *(*0x20 + -0x130) = 0x40927a;\n                            uVar2 = fcn.00433640();\ncode_r0x0040927a:\n                            if (!uVar6 && !uVar7) goto code_r0x004093ec;\n                            if (arg1 < uVar2) goto code_r0x004093e7;\n                            iVar4 = *(*0x20 + -0xa0);\n                            arg1_00 = *(iVar4 + uVar2);\n                        } while (*(iVar4 + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x4092cf;\n                        iVar3 = fcn.0045cd19();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4a82fa;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4a694e;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = iVar3;\n                        *(*0x20 + -0x58) = 0x4a694e;\n                        *(*0x20 + -0x50) = 1;\n                        arg1_00 = (*(*0x20 + -0xf0) - iVar3) - 4;\n                        *(*0x20 + -0x48) = (-arg1_00 >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x38) = 0x4a9486;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = iVar3;\n                        param_2 = 0x4a7190;\n                        *(*0x20 + -0x18) = 0x4a7190;\n                        *(*0x20 + -0x10) = 8;\n                        arg1 = 9;\n                        *(*0x20 + -0x130) = 0x4093d3;\n                        fcn.00448920(9);\n                        *(*0x20 + -0x130) = 0x4093d8;\n                        fcn.0040a660();\n                        *(*0x20 + -0x130) = 0x4093e7;\n                        fcn.00432ec0();\ncode_r0x004093e7:\n                        *(*0x20 + -0x130) = 0x4093ec;\n                        fcn.0045cb40(arg1);\ncode_r0x004093ec:\n                        *(*0x20 + -0x130) = 0x4093f1;\n                        fcn.0045cac0(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x409414;\n                    fcn.00448bc0(0x13);\n                    *(*0x20 + -0x130) = 0x409419;\n                    fcn.00433640();\ncode_r0x00409419:\n                    *(*0x20 + -0x130) = 0x409425;\n                    fcn.0045cb40(arg1_00);\ncode_r0x00409425:\n                    *(*0x20 + -0x130) = 0x40942d;\n                    uVar2 = fcn.0045cac0(arg1_00, param_2);\n                }\n                *(*0x20 + -0x130) = 0x409435;\n                fcn.0045cac0(uVar2, param_2);\n            }\n            unaff_RBX = 0x4a9920;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x409458;\n            fcn.00448bc0(0x13);\n            *(*0x20 + -0x130) = 0x40945d;\n            fcn.00433640();\n        }\n        *(puVar5 + -8) = 0x409465;\n        fcn.0045a3a0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2129
    },
    "0041f760": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.0041f760(void)\n\n{\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    uint64_t uStack72;\n    uchar auStack64 [16];\n    ulong uStack48;\n    uchar *puStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    auStack64 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    uStack72 = 0;\n    while (uStack72 < unaff_RBX) {\n        if (auStack64._0_8_ + 0x800000000000U < auStack64._8_8_ + 0x800000000000U) {\n            auStack64._8_8_ = auStack64._8_8_ - auStack64._0_8_;\n        }\n        else {\n            auStack64._8_8_ = 0;\n        }\n        if (auStack64._8_8_ == 0) {\n            iVar1 = fcn.0041fc60();\n            auStack64 = CONCAT88(unaff_RBX, iVar1);\n            if (iVar1 + 0x800000000000U < unaff_RBX + 0x800000000000) {\n                iVar1 = unaff_RBX - iVar1;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) break;\n        }\n        uStack48 = 0x41f8e0;\n        puStack32 = auStack64;\n        auStack24 = CONCAT88(&uStack72, unaff_RBX);\n        fcn.0045a260();\n    }\n    fcn.0041fd80(auStack64._8_8_);\n    return uStack72;\n}\n",
        "token_count": 503
    },
    "0041fc60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041fc60(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar2 = *(in_RAX + 0x100f0);\n    uVar1 = fcn.0042c060();\n    if (uVar1 + 0x800000000000 < iVar2 + 0x800000000000U) {\n        iVar2 = iVar2 - uVar1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        fcn.0040ae40();\n        return uVar1;\n    }\n    fcn.0042c0e0();\n    fcn.0040ae40();\n    return uVar1 & 0xffffffffffc00000;\n}\n",
        "token_count": 249
    },
    "004202e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004202e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = *(in_RAX + 0x10110);\n            *(*0x20 + -0x50) = 0x420325;\n            fcn.0040ac20(arg1, uVar3);\n            arg1 = *(*(*0x20 + 8) + 0x68);\n            unaff_RBX = *(*(*0x20 + 8) + 0x60);\n            unaff_RSI = *(*0x20 + -0x10);\n            unaff_RDI = unaff_RSI + 0x7fffffffffff;\n            uVar2 = unaff_RDI >> 0x16;\n            if (uVar2 < arg1) {\n                uVar1 = *(unaff_RBX + uVar2 * 8);\n                if (uVar1 < 0) {\n                    arg1 = 0x200000;\n                }\n                else {\n                    arg1 = uVar1 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x10) = uVar2;\n                if (arg1 < *(*0x20 + 0x20)) goto code_r0x00420425;\n                unaff_RDI = unaff_RDI >> 0x23;\n                if (unaff_RDI < 0x2000) {\n                    uVar2 = (unaff_RSI - 1U & 0x3fffff) >> 0xd;\n                    *(*0x20 + -0x50) = 0x4203c8;\n                    uVar3 = fcn.004209c0(*(*0x20 + 0x20));\n                    if (uVar2 != 0) {\n                        *(*0x20 + -0x28) = uVar2;\n                        *(*0x20 + -0x50) = 0x4203ee;\n                        uVar3 = fcn.004204c0(uVar3);\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x50) = 0x420408;\n                        fcn.0040ae40();\n                        return *(*0x20 + -0x28) << 0xd;\n                    }\ncode_r0x00420425:\n                    *(*0x20 + -0x50) = 0x420432;\n                    fcn.0040ae40();\n                    return 0;\n                }\n                *(*0x20 + -0x50) = 0x420467;\n                fcn.0045caa0(0x2000);\n            }\n            *(*0x20 + -0x50) = 0x42046f;\n            in_RAX = fcn.0045caa0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + -8) = 0x42048e;\n        fcn.0045eaa0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1065
    },
    "004209c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.004209c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x00420c48;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x420a71;\n                        iVar2 = fcn.004206c0(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x420c48;\n                    fcn.0045ca80(8);\ncode_r0x00420c48:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x420c55;\n                    fcn.0045ca80(8);\n                }\n                *(*0x20 + -0x50) = 0x420c5a;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x420c6b;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x420c75;\n                fcn.004353e0();\n                *(*0x20 + -0x50) = 0x420c7a;\n                fcn.00435040();\n                *(*0x20 + -0x50) = 0x420c7f;\n                fcn.00434e60();\n                *(*0x20 + -0x50) = 0x420c90;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x50) = 0x420c95;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x420ca6;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x420cb0;\n            fcn.004353e0();\n            *(*0x20 + -0x50) = 0x420cb5;\n            fcn.00435040();\n            *(*0x20 + -0x50) = 0x420cba;\n            fcn.00434e60();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x420ccb;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x420ce5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x420abe;\n    uVar4 = fcn.004206c0(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x420b8f;\n            uVar3 = fcn.004206c0();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x593590) && (*0x593598 < *0x593590)) &&\n        (uVar6 = -(*0x593590 >> 0xd),  ((uVar8 + (*0x593590 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2090
    },
    "00426be0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00426be0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x426c34;\n            fcn.00428f60(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x426ca5;\n            fcn.0042b620();\n            *(*0x20 + -0x70) = 0x426cc5;\n            fcn.0042bb00(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar5 = *(*0x20 + -0x28);\n            uVar3 = *(*0x20 + -0x20);\ncode_r0x00426d4a:\n            if (uVar5 <= uVar3) {\n                *(*0x20 + -0x70) = 0x426dde;\n                fcn.00426e40(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar5 = uVar3 >> 0xd;\n            if (0x1fff < uVar5) goto code_r0x00426df9;\n            *(*0x20 + -0x30) = uVar3;\n            if (*(iVar2 + 0x78 + uVar5 * 8) != 0) {\ncode_r0x00426d07:\n                *(*0x20 + -0x70) = 0x426d2f;\n                fcn.00429b80(0x200);\n                uVar3 = *(*0x20 + -0x30) + 1;\n                uVar5 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x00426d4a;\n            }\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x10) = iVar2 + uVar5 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x426da5;\n            iVar2 = fcn.004159c0();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00426d07;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x426df9;\n            fcn.00433640();\ncode_r0x00426df9:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x426e06;\n            in_RAX = fcn.0045caa0(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x426e1b;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1333
    },
    "00427420": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00427420(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = unaff_RBX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            uVar10 = uVar9 >> 0x16;\n            uVar6 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar7 = uVar6 >> 0x16;\n            unaff_RBX = (uVar1 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar8 = ((uVar1 + arg1 * 0x2000) - 1 & 0x3fffff) >> 0xd;\n            if (uVar7 == uVar10) {\n                if (0x1fff < uVar9 >> 0x23) {\n                    *(*0x20 + -0x90) = 0x42762b;\n                    fcn.0045caa0(0x2000);\n                    goto code_r0x0042762b;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x48) = (uVar10 & 0x1fff) << 7;\n                iVar3 = (uVar8 - unaff_RBX) + 1;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x90) = 0x4275af;\n                uVar2 = fcn.00429da0(iVar3);\n                *(*0x20 + -0x58) = uVar2;\n                *(*0x20 + -0x90) = 0x4275d3;\n                fcn.0042a4c0(*(*0x20 + -0x50));\n                iVar3 = *(*0x20 + -0x58);\ncode_r0x004275d8:\n                *(*0x20 + -0x68) = iVar3;\n                *(*0x20 + -0x90) = 0x427605;\n                fcn.00426e40(*(*0x20 + 0x18));\n                return *(*0x20 + -0x68) << 0xd;\n            }\n            if (uVar9 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x28) = uVar6;\n                *(*0x20 + -0x30) = uVar8;\n                *(*0x20 + -0x38) = uVar10;\n                *(*0x20 + -0x40) = uVar7;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x48) = (uVar10 & 0x1fff) << 7;\n                *(*0x20 + -0x50) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x90) = 0x42751f;\n                uVar2 = fcn.00429da0(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x58) = uVar2;\n                unaff_RBX = *(*0x20 + -0x20);\n                *(*0x20 + -0x90) = 0x427545;\n                fcn.0042a4c0(*(*0x20 + -0x50));\n                iVar4 = *(*0x20 + -0x38);\n                iVar3 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x40);\n                uVar7 = *(*0x20 + -0x58);\n                while( true ) {\n                    in_RDX = iVar4 + 1;\n                    *(*0x20 + -0x68) = uVar7;\n                    if (uVar6 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x90) = 0x427765;\n                            iVar4 = fcn.0045caa0(0x2000);\n                            goto code_r0x00427765;\n                        }\n                        *(*0x20 + -0x10) = *(iVar3 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x48) = (uVar6 & 0x1fff) << 7;\n                        *(*0x20 + -0x50) = *(*0x20 + -0x30) + 1;\n                        *(*0x20 + -0x90) = 0x427725;\n                        uVar2 = fcn.00429da0(*(*0x20 + -0x30) + 1);\n                        *(*0x20 + -0x58) = uVar2;\n                        *(*0x20 + -0x90) = 0x427746;\n                        fcn.0042a4c0(*(*0x20 + -0x50));\n                        iVar3 = *(*0x20 + -0x68) + *(*0x20 + -0x58);\n                        goto code_r0x004275d8;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x60) = in_RDX;\n                    iVar3 = *(iVar3 + 0x78 + (in_RDX >> 0xd) * 8);\n                    *(*0x20 + -0x10) = iVar3;\n                    iVar4 = (in_RDX & 0x1fff) * 0x80;\n                    *(*0x20 + -0x48) = iVar4;\n                    *(*0x20 + -0x18) = iVar3 + iVar4 + 0x40;\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x90) = 0x4276a5;\n                    iVar3 = fcn.00429da0(0x200);\n                    in_RDX = *(*0x20 + -0x68) + iVar3;\n                    iVar3 = *(*0x20 + -0x48) + *(*0x20 + -0x10);\n                    for (iVar4 = 0; iVar4 < 8; iVar4 = iVar4 + 1) {\ncode_r0x00427765:\n                        *(iVar3 + iVar4 * 8) = 0xffffffffffffffff;\n                    }\n                    iVar3 = *(*0x20 + -0x18);\n                    for (iVar4 = 0; iVar4 < 8; iVar4 = iVar4 + 1) {\n                        *(iVar3 + iVar4 * 8) = 0;\n                    }\ncode_r0x0042762b:\n                    iVar4 = *(*0x20 + -0x60);\n                    iVar3 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x40);\n                    uVar7 = in_RDX;\n                }\n                *(*0x20 + -0x90) = 0x42779b;\n                fcn.0045caa0(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x90) = 0x4277a8;\n            in_RAX = fcn.0045caa0(0x2000);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4277bd;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2094
    },
    "004298a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004298a0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = *(in_RAX + 0x10078);\n            uVar3 = iVar9 + 0x800000000000;\n            uVar6 = uVar3 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar2 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x42991a;\n                    uVar6 = fcn.004278c0();\n                    if (uVar6 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x5273a0;\n                        return 0;\n                    }\n                    arg1 = uVar6 + 0x800000000000;\n                    if (arg1 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (arg1 >> 0x23) * 8);\n                        arg1 = (arg1 >> 0x16 & 0x1fff) * 0x80;\n                        iVar9 = iVar2 + arg1;\n                        uVar3 = (uVar6 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar8 = *(iVar2 + arg1 + uVar3 * 8);\n                            uVar6 = uVar6 & 0xfffffffffff80000;\n                            uVar3 = *(iVar2 + arg1 + 0x40 + uVar3 * 8);\ncode_r0x00429a8c:\n                            uVar8 = ~uVar8;\n                            uVar4 = (uVar6 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar3;\n                                *(*0x20 + -0x38) = uVar8;\n                                *(*0x20 + -0x30) = uVar6;\n                                puVar1 = iVar9 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar8;\n                                puVar1 = iVar9 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar8 & uVar3);\n                                *(*0x20 + -0x68) = 0x429ad4;\n                                fcn.00426e40(0x40);\n                                iVar9 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar9 + 0x7e000;\n                                return iVar9;\n                            }\n                            *(*0x20 + -0x68) = 0x429b1c;\n                            fcn.0045caa0(8);\ncode_r0x00429b1c:\n                            *(*0x20 + -0x68) = 0x429b26;\n                            fcn.0045caa0(8);\n                            uVar3 = arg1;\n                            goto code_r0x00429b26;\n                        }\n                        goto code_r0x00429b45;\n                    }\n                }\n                else {\n                    uVar3 = uVar3 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar3 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        uVar3 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x68) = 0x429a1f;\n                        arg1 = fcn.0042a1c0((iVar9 & 0x3fffff) >> 0xd);\n                        iVar9 = *(*0x20 + -0x10) + *(*0x20 + -0x28);\n                        if (arg1 != 0xffffffffffffffff) {\n                            uVar3 = arg1 >> 6;\n                            if (uVar3 < 8) {\n                                uVar6 = ((arg1 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x20) * 0x400000) -\n                                        0x800000000000;\n                                uVar8 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                arg1 = *(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40;\n                                uVar3 = *(arg1 + uVar3 * 8);\n                                goto code_r0x00429a8c;\n                            }\n                            goto code_r0x00429b1c;\n                        }\ncode_r0x00429b26:\n                        *(*0x20 + -0x68) = 0x429b37;\n                        fcn.00433640();\n                        arg1 = uVar3;\n                    }\n                    *(*0x20 + -0x68) = 0x429b45;\n                    fcn.0045caa0(0x2000);\ncode_r0x00429b45:\n                    *(*0x20 + -0x68) = 0x429b4f;\n                    fcn.0045caa0(8);\n                }\n                *(*0x20 + -0x68) = 0x429b5c;\n                fcn.0045caa0(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x429b67;\n            in_RAX = fcn.0045caa0(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x429b72;\n        fcn.0045eaa0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1671
    },
    "0042a380": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.0042a380(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0042e460": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042e460(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = fcn.0042dac0(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042da00(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x4987a0;\n            uStack16 = 0x4b1040;\n            fcn.00458800(1);\n            fcn.00430a80();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0042f920": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042f920(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42f985;\n                fcn.00430b80();\n                return;\n            }\n            *(*0x20 + -0x50) = 0x42f9b4;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42f9ce;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 559
    },
    "00430e80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00430e80(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430c00();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 130
    },
    "004339e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004339e0(void)\n\n{\n    fcn.0045a260();\n    fcn.0045a260();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "004356e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004356e0(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434ec0(unaff_RBX);\n    return;\n}\n",
        "token_count": 95
    },
    "00448bc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00448bc0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00448920(2);\n    return;\n}\n",
        "token_count": 88
    },
    "00449580": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00449580(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.0040c300(0);\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0044ff80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0044ff80(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    code *pcVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x44ffc5;\n            uVar1 = fcn.0045c4a0(arg1 << 3);\n            uVar4 = uVar1 & 0x1fff;\n            unaff_RDI = *(*(*0x20 + 8) + 0x20 + uVar4 * 8);\n            uVar9 = *(*0x20 + 8) + uVar4 * 8 + 0x20;\n            arg1_00 = *(*0x20 + 0x18);\n            iVar10 = *(*0x20 + 0x10);\n            while( true ) {\n                if (unaff_RDI == NULL) {\n                    iVar6 = 0;\n                    arg1_00 = uVar9;\n                    goto code_r0x00450037;\n                }\n                if ((unaff_RDI[1] == uVar1) && (unaff_RBX = unaff_RDI[3],  arg1_00 == unaff_RBX)) break;\ncode_r0x0044fff9:\n                unaff_RDI = *unaff_RDI;\n            }\n            if (unaff_RBX < 0x81) {\n                in_R10 = 0;\n                do {\n                    if (in_R10 < unaff_RBX) {\n                        if (*(iVar10 + in_R10 * 8) != unaff_RDI[in_R10 + 4]) goto code_r0x0044fff9;\n                    }\n                    else {\n                        iVar6 = *(unaff_RDI + 2);\n                        arg1_00 = uVar9;\ncode_r0x00450037:\n                        if (iVar6 != 0) {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x10) = arg1_00;\n                        *(*0x20 + -0x50) = 0x450054;\n                        fcn.0040ac20();\n                        iVar3 = *(*0x20 + 8);\n                        pcVar5 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar1 = *(*0x20 + 0x18);\n                        unaff_RDI = *(*0x20 + -0x20);\n                        while( true ) {\n                            if (pcVar5 == NULL) {\n                                iVar6 = 0;\n                                goto code_r0x004500b7;\n                            }\n                            if ((*(pcVar5 + 8) == unaff_RDI) && (arg1_00 = *(pcVar5 + 0x18),  uVar1 == arg1_00)) break;\ncode_r0x00450081:\n                            pcVar5 = *pcVar5;\n                        }\n                        if (arg1_00 < 0x81) {\n                            iVar10 = 0;\n                            do {\n                                if (iVar10 < arg1_00) {\n                                    in_R10 = *(pcVar5 + (iVar10 + 4) * 8);\n                                    if (*(unaff_RBX + iVar10 * 8) != in_R10) goto code_r0x00450081;\n                                }\n                                else {\n                                    iVar6 = *(pcVar5 + 0x10);\ncode_r0x004500b7:\n                                    if (iVar6 != 0) {\n                                        *(*0x20 + -0x2c) = iVar6;\n                                        *(*0x20 + -0x50) = 0x450105;\n                                        fcn.0040ae40();\n                                        return *(*0x20 + -0x2c);\n                                    }\n                                    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                                    *(*0x20 + -0x50) = 0x4500c6;\n                                    puVar2 = fcn.00450220();\n                                    puVar2[1] = *(*0x20 + -0x20);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(puVar2 + 2) = *(iVar3 + 8);\n                                    uVar9 = *(*0x20 + 0x18);\n                                    puVar2[3] = uVar9;\n                                    if (uVar9 < 0x81) {\n                                        iVar10 = *(*0x20 + 0x10);\n                                        for (iVar7 = 0; iVar7 < uVar9; iVar7 = iVar7 + 1) {\n                                            puVar2[iVar7 + 4] = *(iVar10 + iVar7 * 8);\n                                        }\n                                        *(*0x20 + -0x18) = puVar2;\n                                        *puVar2 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                                        *(*0x20 + -0x50) = 0x450145;\n                                        fcn.00403b00();\n                                        *(*0x20 + -0x50) = 0x450151;\n                                        fcn.0040ae40();\n                                        return *(*(*0x20 + -0x18) + 0x10);\n                                    }\n                                    pcVar5 = pe_nt_image_headers64;\n                                    *(*0x20 + -0x50) = 0x450170;\n                                    iVar3 = fcn.0045cac0(uVar9, 0x80);\n                                    unaff_RBX = uVar1;\n                                }\n                                iVar10 = iVar10 + 1;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x50) = 0x4501a5;\n                        uVar9 = arg1_00;\n                        uVar4 = fcn.0045cac0(arg1_00, 0x80);\n                    }\n                    in_R10 = in_R10 + 1;\n                } while( true );\n            }\n            *(*0x20 + -0x50) = 0x4501da;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045cac0(unaff_RBX, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4501f4;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1838
    },
    "00450680": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00450680(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.00450d40();\n    piVar3 = fcn.0040cd00();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.0044ff80(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044f540(auStack24);\n    return;\n}\n",
        "token_count": 248
    },
    "004509a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004509a0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044f540(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044f540(auStack24);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00450ac0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00450ac0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x545620)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.0044f540(&uStack32);\n    return;\n}\n",
        "token_count": 269
    },
    "00455620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00455620(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x40a980;\n            }\n            for (iVar2 = 0x52cb00; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x00455680;\n            }\n            iVar2 = 0;\ncode_r0x00455680:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x455759;\n                iVar2 = fcn.0044b180();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x4556a5;\n            fcn.0040ac20();\n            *(*0x20 + -0x50) = 0x4556bc;\n            puVar1 = fcn.0040f6e0(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x4556d3;\n            fcn.0040ae40();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x4556e5;\n            fcn.00434de0();\n            *(*0x20 + -0x50) = 0x4556f6;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x455705;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x455716;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x455725;\n            fcn.00435540();\n            *(*0x20 + -0x50) = 0x455736;\n            fcn.004356e0();\n            *(*0x20 + -0x50) = 0x45573b;\n            fcn.00434e60();\n            iVar2 = 0x52cb00;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x118);\n                *(*0x20 + -0x28) = *(iVar2 + 0x120);\n                *(*0x20 + -0x50) = 0x455785;\n                fcn.00434de0();\n                *(*0x20 + -0x50) = 0x455796;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x4557a5;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x4557b6;\n                fcn.004356e0();\n                *(*0x20 + -0x50) = 0x4557c5;\n                fcn.00435540();\n                *(*0x20 + -0x50) = 0x4557ca;\n                fcn.00435040();\n                *(*0x20 + -0x50) = 0x4557cf;\n                fcn.00434e60();\n                iVar2 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x4557fa;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x455809;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1172
    },
    "00458e40": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00458e40(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00403b40();\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043ed20();\n    return;\n}\n",
        "token_count": 331
    },
    "0045cbe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cbe0(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4586
    },
    "0045cc2e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc2e(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "0045cc78": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc78(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "0045cc98": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cc98(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "0045ccbd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccbd(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2052
    },
    "0045ccd4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccd4(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1722
    },
    "0045cceb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cceb(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1402
    },
    "0045ccf8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045ccf8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1246
    },
    "0045cd19": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cd19(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 775
    },
    "0045cd30": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045cd30(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 459
    },
    "0045eae0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045eae0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    uchar auStack56 [8];\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack56;\n    }\n    fcn.0045a540();\n    return;\n}\n",
        "token_count": 128
    },
    "00465da0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00465e49)\n// WARNING: Removing unreachable block (ram,0x00465e75)\n\nulong fcn.00465da0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x53d1c0);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x465e0f;\n            uVar2 = fcn.0045cc78();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x465e38;\n            uVar3 = fcn.00466240(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x00465f45;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x465f1b;\n                fcn.00464620(300);\n                *(*0x20 + -0x2a0) = 0x465f2b;\n                uVar2 = fcn.004493a0(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x465f45;\n            fcn.0045cb00(uVar4, 300);\ncode_r0x00465f45:\n            *(*0x20 + -0x2a0) = 0x465f51;\n            in_RAX = fcn.0045ca80(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x465f5c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 778
    },
    "00465f80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00465f80(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x53ed98;\n            *(*0x20 + -0x50) = 0x465fb7;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x465fec;\n                iVar2 = fcn.00459100(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5382f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x538300,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x466027;\n                        fcn.0040a5e0();\n                        uVar3 = 0x4c9dd8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x466052;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x466065;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 563
    },
    "00466460": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00466460(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x53ef30;\n            *(*0x20 + -0x50) = 0x466497;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x50) = 0x4664cc;\n                iVar2 = fcn.00459100(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5382f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x538300,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x50) = 0x466507;\n                        fcn.0040a5e0();\n                        uVar3 = 0x4c9dd8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x50) = 0x466532;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x466545;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 562
    },
    "00466560": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00466560(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x53ef80;\n            *(*0x20 + -0x50) = 0x466592;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x4665bc;\n                uVar2 = fcn.00459100(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x466606;\n                    fcn.0040a5e0();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x466636;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x466645;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 476
    },
    "00466660": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00466660(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x53efd8;\n            *(*0x20 + -0x50) = 0x466692;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x4666bc;\n                iVar2 = fcn.00459100(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x466706;\n                    fcn.0040a5e0();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x466736;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x466745;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 476
    },
    "00466760": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00466760(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x53efe0;\n            *(*0x20 + -0x50) = 0x466793;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x4667c5;\n                uVar2 = fcn.00459100(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x466806;\n                    fcn.0040a5e0();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x466836;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x466845;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "00478ee0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00478ee0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint32_t uVar2;\n    ulong *unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = in_XMM15;\n            uVar2 = arg1;\n            if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                if ((uVar2 >> 7 & 1) == 0) {\n                    *(*0x20 + -0x10) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x10) = *unaff_RBX;\n                }\n                goto code_r0x00478f6b;\n            }\n            if ((uVar2 >> 7 & 1) != 0) {\n                if ((uVar2 >> 8 & 1) != 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x50) = 0x478f2c;\n                    uVar1 = fcn.00457480();\n                    *(*0x20 + -0x30) = uVar1;\n                    *(*0x20 + -0x50) = 0x478f45;\n                    fcn.004575e0(*(*0x20 + -0x20));\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\ncode_r0x00478f6b:\n                *(*0x20 + -0x18) = in_RAX;\n                return;\n            }\n            unaff_RBX = 0x4c98a0;\n            *(*0x20 + -0x50) = 0x478f92;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x478fa7;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 745
    },
    "0047c560": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0047c560(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = 0x14;\n    iVar4 = 0;\n    while (iVar5 = iVar1,  iVar5 <= arg1) {\n        fcn.0047c3e0(iVar4);\n        iVar4 = iVar5;\n        iVar1 = iVar5 + 0x14;\n    }\n    fcn.0047c3e0(iVar4);\n    iVar1 = 0x14;\n    while (iVar1 < arg1) {\n        iVar2 = iVar1 << 1;\n        iVar4 = iVar2;\n        iVar5 = 0;\n        while (iVar3 = iVar4,  iVar3 <= arg1) {\n            fcn.0047c6c0(iVar5);\n            iVar5 = iVar3;\n            iVar4 = iVar3 + iVar1 * 2;\n        }\n        iVar4 = iVar1 + iVar5;\n        iVar1 = iVar2;\n        if (iVar4 < arg1) {\n            fcn.0047c6c0(iVar5);\n        }\n    }\n    return in_RAX;\n}\n",
        "token_count": 346
    },
    "004856c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004856c0(uchar param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *(in_RAX + 0x4c);\n    *(in_RAX + 0x4c) = param_1;\n    fcn.00482f80(0x10, uVar1, 0x4a8d57, 0x11);\n    *(in_RAX + 0x4c) = uVar1;\n    return;\n}\n",
        "token_count": 176
    },
    "0048d820": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0048d820(void)\n\n{\n    ulong in_RAX;\n    ulong arg1;\n    ulong uVar1;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x78) = 0x48d852;\n            uVar1 = *0x53ea50;\n            arg1 = fcn.0048ce00(unaff_RBX);\n            *(*0x20 + -0x78) = 0x48d865;\n            fcn.00448f60(in_RAX);\n            *(*0x20 + -0x78) = 0x48d885;\n            fcn.0048b5e0(0x4a695e, uVar1, 0, 0xffffffffffffffff);\n            *(*0x20 + -0x78) = 0x48d8a5;\n            unaff_RBX = fcn.0048b5e0(0x4a69c3, uVar1, 0, 0xffffffffffffffff);\n            *(*0x20 + -0x78) = 0x48d8b2;\n            uVar1 = fcn.00449100(arg1);\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x78) = 0x48d8ca;\n            arg1_00 = fcn.0048c480();\n            if (arg1_00 <= *(*0x20 + -0x38)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x78) = 0x48d8f1;\n            in_RAX = fcn.0045cb00(arg1_00, *(*0x20 + -0x38));\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x48d905;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 649
    },
    "0041d0e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041d0e0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041d0e0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041d179:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41d1dc;\n                    iVar3 = fcn.00423e40();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x30) < arg3 || *(iVar3 + 0x30) == arg3) &&\n                           ((*((uVar4 >> 0x23) + *(iVar3 + 0x48)) & 1 << (uVar4 >> 0x20 & 7)) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41d275;\n                            fcn.0041d3a0(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41d1ac;\n                    fcn.00420d00(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041d2c5;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041d179;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041d2d7;\ncode_r0x0041d2c5:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41d2d6;\n    in_RAX = fcn.00433640();\ncode_r0x0041d2d7:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41d2f5;\n    fcn.0045a3a0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041d0e0;\n}\n",
        "token_count": 1542
    },
    "004499a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint64_t fcn.004499a0(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x00449a59;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x00449a59:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 393
    },
    "00454f80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00454f80(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "004561c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint64_t fcn.004561c0(uint64_t arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint32_t *noname_0;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    int64_t unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    while (puVar14 = *0x20,  *0x20 + -0xa0 < *(unaff_R14 + 0x10) || *0x20 + -0xa0 == *(unaff_R14 + 0x10)) {\ncode_r0x00456e3e:\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x456e52;\n        fcn.0045a3a0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    }\n    puVar14 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x20) = arg1;\n    *(*0x20 + -0x18) = in_RAX;\n    *(*0x20 + -0x10) = unaff_RBX;\n    *(*0x20 + -0x128) = 0x456228;\n    fcn.0040dcc0(*0x20 + -0x18);\n    if (arg1 != '\\0') {\n        return 1;\n    }\n    *(*0x20 + -0x18) = *(*0x20 + 8);\n    *(*0x20 + -0x10) = *(*0x20 + 0x10);\n    *(*0x20 + -0x128) = 0x45626c;\n    fcn.0040e100(*0x20 + -0x18);\n    iVar12 = *(*0x20 + 0x10);\n    if (*(*0x20 + 8) == iVar12) {\n        return 1;\n    }\n    uVar3 = *(*(*0x20 + 8) + 0x17);\n    if ((*(iVar12 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n        return 0;\n    }\n    *(*0x20 + -0x105) = uVar3;\n    *(*0x20 + -0x106) = uVar3 & 0x1f;\n    *(*0x20 + -0x128) = 0x4562b6;\n    uVar8 = fcn.00454ee0();\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xb8) = uVar3;\n    *(*0x20 + -0x128) = 0x4562d0;\n    unaff_RBX = fcn.00454ee0();\n    if (uVar3 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4562ea;\n    cVar7 = fcn.004027a0(*(*0x20 + -0xb8), iVar12);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45630e;\n    uVar8 = fcn.00454f80();\n    *(*0x20 + -0x80) = uVar8;\n    *(*0x20 + -0x128) = 0x456325;\n    iVar9 = fcn.00454f80();\n    noname_0 = *(*0x20 + -0x80);\n    if (noname_0 == NULL) {\n        if (iVar9 != 0) {\n            return 0;\n        }\n    }\n    else {\n        if (iVar9 == 0) {\n            return 0;\n        }\n        *(*0x20 + -0x88) = iVar9;\n        uVar6 = *noname_0;\n        *(*0x20 + -0x128) = 0x456373;\n        fcn.004550c0();\n        *(*0x20 + -0x128) = 0x456378;\n        uVar8 = fcn.00455820(noname_0, iVar12, in_R8, in_R9);\n        *(*0x20 + -0x68) = uVar8;\n        *(*0x20 + -0xf0) = uVar6;\n        uVar6 = **(*0x20 + -0x88);\n        uVar15 = uVar6;\n        *(*0x20 + -0x128) = 0x45639e;\n        fcn.004550c0();\n        *(*0x20 + -0x128) = 0x4563a5;\n        unaff_RBX = fcn.00455820(uVar15, iVar12, in_R8, in_R9);\n        if (uVar6 != *(*0x20 + -0xf0)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4563c5;\n        cVar7 = fcn.004027a0(*(*0x20 + -0xf0), iVar12);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n    }\n    uVar3 = *(*0x20 + -0x106);\n    if (uVar3 - 1 < 0x10) {\n        return 1;\n    }\n    if (uVar3 < 0x16) {\n        if (0x12 < uVar3) {\n            if (uVar3 == 0x13) {\n                iVar12 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar12 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar12 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar12 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar12 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    iVar9 = in_R8 + iVar9;\n                    *(*0x20 + -0xa0) = iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar15 = 0;\n                    while (uVar16 = uVar5,  uVar15 < arg1) {\n                        if (uVar16 <= uVar15) goto code_r0x00456e2c;\n                        *(*0x20 + -0xd0) = uVar15;\n                        iVar11 = *(iVar9 + uVar15 * 8);\n                        *(*0x20 + -0x128) = 0x456cbe;\n                        cVar7 = fcn.004561c0(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00456c5d:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar9 = *(*0x20 + -0xa0);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar12 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        unaff_RBX = iVar11;\n                        uVar15 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar12 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar12 + 0x30);\n                    uVar15 = (*(iVar12 + 0x32) & 0x7fff) + *(iVar12 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar15) {\n                        iVar11 = uVar15 - uVar16;\n                        iVar12 = iVar12 + iVar9 + (uVar16 << 3 & uVar16 - 0x100000 >> 0x3f);\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar15 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0xf8) = iVar11;\n                            *(*0x20 + -0xa8) = iVar12;\n                            uVar15 = uVar15 - uVar16;\n                            *(*0x20 + -0x100) = uVar15;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar10 = 0;\n                            while( true ) {\n                                if (iVar11 <= uVar10) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar12 + uVar10 * 8);\n                                if (uVar15 <= uVar10) break;\n                                *(*0x20 + -0xd8) = uVar10;\n                                unaff_RBX = *(uVar16 + uVar10 * 8);\n                                *(*0x20 + -0x128) = 0x456de5;\n                                cVar7 = fcn.004561c0(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar10 = *(*0x20 + -0xd8) + 1;\n                                iVar11 = *(*0x20 + -0xf8);\n                                uVar15 = *(*0x20 + -0x100);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar12 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x456e18;\n                            fcn.0045ca80(uVar15);\n                        }\n                        *(*0x20 + -0x128) = 0x456e25;\n                        fcn.0045cb40(uVar15);\n                    }\n                    *(*0x20 + -0x128) = 0x456e2c;\n                    fcn.0045cb40(uVar15);\ncode_r0x00456e2c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x456e33;\n                    fcn.0045ca80(arg1);\n                }\n                *(*0x20 + -0x128) = 0x456e3d;\n                in_RAX = fcn.0045cac0(arg1, 0x100000);\n                goto code_r0x00456e3e;\n            }\n            if (uVar3 != 0x14) {\n                *(*0x20 + -0x128) = 0x45657b;\n                cVar7 = fcn.004561c0(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar15 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x4565a8;\n                    uVar15 = fcn.004561c0(*(*0x20 + -0x20));\n                }\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x4564c6;\n            uVar8 = fcn.00455820(*(*0x20 + 8), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = unaff_RBX;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x4564e7;\n            iVar11 = fcn.00455820(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (unaff_RBX == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x456505;\n                cVar7 = fcn.004027a0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar12 = *(*0x20 + 8);\n                    iVar9 = *(iVar12 + 0x40);\n                    iVar13 = *(*0x20 + 0x10);\n                    if (*(iVar13 + 0x40) != iVar9) {\n                        return 0;\n                    }\n                    *(*0x20 + -0xb8) = iVar9;\n                    uVar15 = 0;\n                    while( true ) {\n                        if (iVar9 <= uVar15) {\n                            return 1;\n                        }\n                        iVar9 = *(iVar12 + 0x38);\n                        uVar16 = *(iVar12 + 0x40);\n                        if (uVar16 <= uVar15) break;\n                        iVar12 = iVar9 + uVar15 * 8;\n                        uVar16 = *(iVar13 + 0x40);\n                        if (uVar16 <= uVar15) {\n                            *(*0x20 + -0x128) = 0x456c58;\n                            fcn.0045ca80(uVar16);\n                            break;\n                        }\n                        *(*0x20 + -0x40) = *(iVar13 + 0x38);\n                        *(*0x20 + -0x48) = iVar9;\n                        *(*0x20 + -0xe0) = uVar15;\n                        *(*0x20 + -0x78) = iVar12;\n                        *(*0x20 + -0x128) = 0x456ac7;\n                        uVar8 = fcn.004550c0();\n                        *(*0x20 + -0x50) = uVar8;\n                        iVar11 = *(*0x20 + -0xe0);\n                        iVar13 = *(*0x20 + -0x40);\n                        *(*0x20 + -0x90) = iVar13 + iVar11 * 8;\n                        uVar16 = *(iVar13 + iVar11 * 8);\n                        *(*0x20 + -0x128) = 0x456af3;\n                        uVar8 = fcn.004550c0();\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x128) = 0x456b08;\n                        uVar8 = fcn.00455820(iVar11, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x60) = uVar8;\n                        *(*0x20 + -0xc0) = uVar16;\n                        *(*0x20 + -0x128) = 0x456b25;\n                        iVar11 = fcn.00455820(iVar11, iVar13, iVar9, iVar12);\n                        uVar15 = *(*0x20 + -0xc0);\n                        if (uVar16 != uVar15) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x456b45;\n                        cVar7 = fcn.004027a0(uVar15, iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x456b5a;\n                        uVar8 = fcn.004559e0(uVar15, iVar13, iVar9, iVar12);\n                        *(*0x20 + -0x28) = uVar8;\n                        *(*0x20 + -0xc0) = iVar11;\n                        *(*0x20 + -0x128) = 0x456b74;\n                        fcn.004559e0(uVar15, iVar13, iVar9, iVar12);\n                        if (iVar11 != *(*0x20 + -0xc0)) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x456b99;\n                        cVar7 = fcn.004027a0(*(*0x20 + -0xc0), iVar13);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\n                        *(*0x20 + -0x128) = 0x456bbb;\n                        uVar8 = fcn.00455360();\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0x128) = 0x456be5;\n                        iVar11 = fcn.00455360();\n                        *(*0x20 + -0x128) = 0x456bfd;\n                        cVar7 = fcn.004561c0(*(*0x20 + -0x20));\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00456a50:\n                        uVar15 = *(*0x20 + -0xe0) + 1;\n                        iVar9 = *(*0x20 + -0xb8);\n                        iVar13 = *(*0x20 + 0x10);\n                        iVar12 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x128) = 0x456c5d;\n                    fcn.0045ca80(uVar16);\n                    goto code_r0x00456c5d;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x11) {\n            *(*0x20 + -0x128) = 0x456634;\n            cVar7 = fcn.004561c0(*(*0x20 + -0x20));\n            if (cVar7 == '\\0') {\n                uVar15 = 0;\n            }\n            else {\n                uVar15 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                         *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n            }\n            return uVar15 & 0xffffffff;\n        }\n        if (uVar3 == 0x12) {\n            if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                *(*0x20 + -0x128) = 0x4565ff;\n                uVar15 = fcn.004561c0(*(*0x20 + -0x20));\n            }\n            else {\n                uVar15 = 0;\n            }\n            return uVar15;\n        }\n    }\n    else {\n        if (uVar3 < 0x18) {\n            if (uVar3 == 0x16) {\n                *(*0x20 + -0x128) = 0x45669a;\n                uVar15 = fcn.004561c0(*(*0x20 + -0x20));\n                return uVar15;\n            }\n            *(*0x20 + -0x128) = 0x4566cf;\n            uVar15 = fcn.004561c0(*(*0x20 + -0x20));\n            return uVar15;\n        }\n        if (uVar3 == 0x18) {\n            return 1;\n        }\n        if (uVar3 == 0x19) {\n            iVar12 = *(*(*0x20 + 0x10) + 0x40);\n            iVar9 = *(*0x20 + 8);\n            if (*(iVar9 + 0x40) != iVar12) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x456717;\n            uVar8 = fcn.00455820(*(*0x20 + 0x10), iVar12, in_R8, in_R9);\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = iVar9;\n            uVar8 = *(*(*0x20 + 0x10) + 0x30);\n            *(*0x20 + -0x128) = 0x456738;\n            fcn.00455820(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n            if (iVar9 == *(*0x20 + -0xb8)) {\n                *(*0x20 + -0x128) = 0x456755;\n                cVar7 = fcn.004027a0(*(*0x20 + -0xb8), uVar8);\n                if (cVar7 != '\\0') {\n                    iVar9 = *(*0x20 + 8);\n                    iVar11 = *(iVar9 + 0x40);\n                    *(*0x20 + -0xb8) = iVar11;\n                    iVar12 = *(*0x20 + 0x10);\n                    uVar15 = 0;\n                    goto code_r0x00456883;\n                }\n            }\n            return 0;\n        }\n        if (uVar3 == 0x1a) {\n            return 1;\n        }\n    }\n    *(*0x20 + -0x128) = 0x456825;\n    fcn.00434de0();\n    *(*0x20 + -0x128) = 0x456836;\n    fcn.004356e0();\n    *(*0x20 + -0x128) = 0x456845;\n    fcn.004353e0();\n    *(*0x20 + -0x128) = 0x45684a;\n    fcn.00435040();\n    *(*0x20 + -0x128) = 0x45684f;\n    fcn.00434e60();\n    *(*0x20 + -0x128) = 0x456865;\n    fcn.00433640();\n    while( true ) {\n        uVar15 = *(*0x20 + -0xe8) + 1;\n        iVar11 = *(*0x20 + -0xb8);\n        iVar12 = *(*0x20 + 0x10);\n        iVar9 = *(*0x20 + 8);\ncode_r0x00456883:\n        if (iVar11 <= uVar15) {\n            return 1;\n        }\n        uVar8 = *(iVar9 + 0x38);\n        uVar16 = *(iVar9 + 0x40);\n        if (uVar16 <= uVar15) break;\n        iVar13 = uVar15 * 3;\n        arg4 = *(iVar12 + 0x38);\n        uVar16 = *(iVar12 + 0x40);\n        if (uVar16 <= uVar15) {\n            *(*0x20 + -0x128) = 0x456a4b;\n            fcn.0045ca80(uVar16);\n            break;\n        }\n        *(*0x20 + -0xc0) = iVar13;\n        *(*0x20 + -0x30) = uVar8;\n        *(*0x20 + -0x38) = arg4;\n        *(*0x20 + -0xe8) = uVar15;\n        *(*0x20 + -0x128) = 0x4568d5;\n        uVar8 = fcn.00455820(uVar16, iVar9, iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar11;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x4568fb;\n        fcn.00455820(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar11 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x456919;\n        cVar7 = fcn.004027a0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        iVar12 = *(*(*0x20 + -0x38) + 8 + *(*0x20 + -0xc0) * 8);\n        *(*0x20 + -0x128) = 0x456954;\n        cVar7 = fcn.004561c0(*(*0x20 + -0x20));\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x456972;\n        uVar8 = fcn.004558e0(*(*0x20 + -0xc0), *(*0x20 + -0x30), iVar13, arg4);\n        *(*0x20 + -0x28) = uVar8;\n        *(*0x20 + -200) = iVar12;\n        uVar8 = *(*0x20 + -0x38);\n        *(*0x20 + -0x128) = 0x456998;\n        fcn.004558e0(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n        if (iVar12 != *(*0x20 + -200)) {\n            return 0;\n        }\n        *(*0x20 + -0x128) = 0x4569b5;\n        cVar7 = fcn.004027a0(*(*0x20 + -200), uVar8);\n        if (cVar7 == '\\0') {\n            return 0;\n        }\n        if (*(*(*0x20 + -0x38) + 0x10 + *(*0x20 + -0xc0) * 8) != *(*(*0x20 + -0x30) + 0x10 + *(*0x20 + -0xc0) * 8)) {\n            return 0;\n        }\n    }\n    *(*0x20 + -0x128) = 0x456a50;\n    fcn.0045ca80(uVar16);\n    goto code_r0x00456a50;\n}\n",
        "token_count": 6386
    },
    "00477ba0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.00477ba0(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    \n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        return 0;\n    }\n    uVar1 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar1 < 0x15) {\n        if (0x12 < uVar1) {\n            if (uVar1 == 0x13) {\n                return in_RAX + 0x38;\n            }\n            return in_RAX + 0x50;\n        }\n        if (uVar1 == 0x11) {\n            return in_RAX + 0x48;\n        }\n        if (uVar1 == 0x12) {\n            return in_RAX + 0x40;\n        }\n    }\n    else {\n        if (uVar1 < 0x17) {\n            if (uVar1 == 0x15) {\n                return in_RAX + 0x58;\n            }\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x17) {\n            return in_RAX + 0x38;\n        }\n        if (uVar1 == 0x19) {\n            return in_RAX + 0x50;\n        }\n    }\n    return in_RAX + 0x30;\n}\n",
        "token_count": 321
    },
    "0046c420": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046c420(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    uVar4 = 0;\n    while( true ) {\n        uVar5 = -(unaff_RBX < 0x40);\n        uVar7 = uVar6;\n        if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) goto code_r0x0046c49e;\n        if (*(in_RAX + 800) == uVar4 || *(in_RAX + 800) < uVar4) break;\n        if (799 < uVar4) {\n            fcn.0045ca80(800);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar6 = (*(uVar4 + in_RAX) + uVar6 * 10) - 0x30;\n        uVar4 = uVar4 + 1;\n    }\n    if (uVar6 == 0) {\n        *(in_RAX + 800) = 0;\n        return;\n    }\ncode_r0x0046c5ef:\n    uVar7 = uVar6;\n    if ((uVar5 & uVar6 >> (unaff_RBX & 0x3f)) != 0) {\ncode_r0x0046c49e:\n        *(in_RAX + 0x328) = (*(in_RAX + 0x328) - uVar4) + 1;\n        uVar3 = unaff_RBX;\n        uVar6 = (1 << (uVar3 & 0x3f) & uVar5) - 1;\n        uVar9 = 0;\n        for (; *(in_RAX + 800) != uVar4 && uVar4 <= *(in_RAX + 800); uVar4 = uVar4 + 1) {\n            if (799 < uVar4) goto code_r0x0046c5d5;\n            uVar1 = *(uVar4 + in_RAX);\n            if (799 < uVar9) goto code_r0x0046c5c8;\n            *(in_RAX + uVar9) = (uVar7 >> (uVar3 & 0x3f) & uVar5) + 0x30;\n            uVar9 = uVar9 + 1;\n            uVar7 = (uVar1 + (uVar7 & uVar6) * 10) - 0x30;\n        }\n        while (uVar7 != 0) {\n            uVar8 = uVar7 >> (uVar3 & 0x3f) & uVar5;\n            uVar4 = uVar7 & uVar6;\n            if (uVar9 < 800) {\n                if (799 < uVar9) goto code_r0x0046c5bb;\n                *(in_RAX + uVar9) = uVar8 + '0';\n                uVar9 = uVar9 + 1;\n            }\n            else if (uVar8 != 0) {\n                *(in_RAX + 0x331) = 1;\n            }\n            uVar7 = uVar4 * 10;\n        }\n        *(in_RAX + 800) = uVar9;\n        do {\n            uVar4 = *(in_RAX + 800);\n            if (uVar4 < 1) {\ncode_r0x0046c597:\n                if (uVar4 == 0) {\n                    *(in_RAX + 0x328) = 0;\n                }\n                return;\n            }\n            if (799 < uVar4 - 1) goto code_r0x0046c5ae;\n            uVar3 = *((uVar4 - 1) + in_RAX);\n            uVar5 = uVar3;\n            if (uVar3 != 0x30) goto code_r0x0046c597;\n            *(in_RAX + 800) = uVar4 - 1;\n        } while( true );\n    }\n    goto code_r0x0046c5e5;\ncode_r0x0046c5ae:\n    fcn.0045ca80(800);\ncode_r0x0046c5bb:\n    fcn.0045ca80(800);\ncode_r0x0046c5c8:\n    fcn.0045ca80(800);\ncode_r0x0046c5d5:\n    unaff_RBX = 800;\n    in_RAX = fcn.0045ca80(800);\ncode_r0x0046c5e5:\n    uVar6 = uVar6 * 10;\n    uVar4 = uVar4 + 1;\n    goto code_r0x0046c5ef;\n}\n",
        "token_count": 1135
    },
    "0046c620": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046c620(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    \n    uVar7 = *0x538478;\n    if (unaff_RBX < *0x538478) {\n        iVar9 = *(*0x538470 + unaff_RBX * 0x18);\n        uVar7 = *(in_RAX + 800);\n        if (uVar7 < 0x321) {\n            for (iVar6 = 0; iVar6 < *(*0x538470 + 0x10 + unaff_RBX * 0x18); iVar6 = iVar6 + 1) {\n                if (uVar7 <= iVar6) {\ncode_r0x0046c69b:\n                    iVar9 = iVar9 + -1;\n                    break;\n                }\n                uVar1 = *(*(*0x538470 + 8 + unaff_RBX * 0x18) + iVar6);\n                if (uVar1 != *(iVar6 + in_RAX)) {\n                    if (*(iVar6 + in_RAX) < uVar1) goto code_r0x0046c69b;\n                    break;\n                }\n            }\n            uVar4 = 0;\n            uVar5 = iVar9 + uVar7;\n            while (uVar7 = uVar7 - 1,  -1 < uVar7) {\n                uVar8 = uVar4 + (*(in_RAX + uVar7) - 0x30 << (unaff_RBX & 0x3f) & -(unaff_RBX < 0x40));\n                uVar4 = uVar8 / 10;\n                uVar8 = uVar8 % 10;\n                uVar3 = uVar5 - 1;\n                if (uVar3 < 800) {\n                    if (799 < uVar3) goto code_r0x0046c81a;\n                    *((uVar5 - 1) + in_RAX) = uVar8 + '0';\n                    uVar5 = uVar3;\n                }\n                else {\n                    uVar5 = uVar3;\n                    if (uVar8 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            while (uVar4 != 0) {\n                uVar8 = uVar4 / 10;\n                uVar3 = uVar4 % 10;\n                uVar7 = uVar5 - 1;\n                uVar4 = uVar8;\n                if (uVar7 < 800) {\n                    if (799 < uVar7) goto code_r0x0046c810;\n                    *((uVar5 - 1) + in_RAX) = uVar3 + '0';\n                    uVar5 = uVar7;\n                }\n                else {\n                    uVar5 = uVar7;\n                    if (uVar3 != 0) {\n                        *(in_RAX + 0x331) = 1;\n                    }\n                }\n            }\n            iVar6 = *(in_RAX + 800) + iVar9;\n            *(in_RAX + 800) = iVar6;\n            if (799 < iVar6) {\n                *(in_RAX + 800) = 800;\n            }\n            *(in_RAX + 0x328) = *(in_RAX + 0x328) + iVar9;\ncode_r0x0046c7c5:\n            iVar9 = *(in_RAX + 800);\n            if (0 < iVar9) {\n                if (799 < iVar9 - 1U) {\n                    fcn.0045ca80(800);\ncode_r0x0046c810:\n                    fcn.0045ca80(800);\ncode_r0x0046c81a:\n                    uVar7 = 800;\n                    fcn.0045ca80(800);\n                    goto code_r0x0046c825;\n                }\n                if (*(iVar9 + -1 + in_RAX) == '0') goto code_r0x0046c7be;\n            }\n            if (iVar9 == 0) {\n                *(in_RAX + 0x328) = 0;\n            }\n            return;\n        }\ncode_r0x0046c825:\n        fcn.0045cac0(uVar7, 800);\n    }\n    fcn.0045caa0(uVar7);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\ncode_r0x0046c7be:\n    *(in_RAX + 800) = iVar9 - 1U;\n    goto code_r0x0046c7c5;\n}\n",
        "token_count": 1083
    },
    "00404bc0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00404bc0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045eaa0();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00404ae0(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00404bc0(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00404d25:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.00433640();\n            arg1 = in_R8;\n            goto code_r0x00404d25;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00404bc0(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 881
    },
    "0040cf00": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040cf00(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x52b4a0);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x4c96f0 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x52b4a8) - dVar5)) - *0x4c9768;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x4c97b0 + 1;\n    }\n    fcn.0045caa0(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 512
    },
    "00477d60": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00477d60(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n        return *(in_RAX + 0x40);\n    }\n    fcn.00477ce0();\n    return unaff_RBX;\n}\n",
        "token_count": 144
    },
    "0047a560": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.0047a560(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    ulong *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            uVar3 = arg1 & 0x1f;\n            if (uVar3 == 0x14) {\n                *(*0x20 + -0x48) = 0x47a61d;\n                iVar2 = fcn.00477d60();\n                if (iVar2 == 0) {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                }\n                else {\n                    iVar2 = **(*0x20 + -0x20);\n                    iVar4 = (*(*0x20 + -0x20))[1];\n                    if (iVar2 != 0) {\n                        iVar2 = *(iVar2 + 8);\n                    }\n                }\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar4;\n                iVar2 = *(*0x20 + -0x18);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                return iVar2;\n            }\n            if (uVar3 == 0x16) {\n                if ((arg1 >> 7 & 1) == 0) goto code_r0x0047a5e1;\n                if ((*(in_RAX + 0x17) & 0x20) == 0) {\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x47a5c7;\n                    cVar1 = fcn.00457680();\n                    if (cVar1 == '\\0') {\n                        *(*0x20 + -0x48) = 0x47a6ca;\n                        fcn.00432ec0();\n                        goto code_r0x0047a6ca;\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                unaff_RBX = *unaff_RBX;\ncode_r0x0047a5e1:\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                return *(in_RAX + 0x30);\n            }\ncode_r0x0047a6ca:\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x48) = 0x47a6db;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x12;\n            *unaff_RBX = 0x4a9389;\n            arg1 = *(*0x20 + -0x30);\n            unaff_RBX[2] = arg1;\n            *(*0x20 + -0x48) = 0x47a705;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x47a71a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1015
    },
    "0047a880": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0047a880(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1 = arg1 & 0x1f;\n            if (arg1 == 0x11) {\n                if (unaff_RDI <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != unaff_RDI) {\n                    return *(in_RAX + 0x30);\n                }\n            }\n            else {\n                if (arg1 == 0x17) {\n                    if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                        return *(in_RAX + 0x30);\n                    }\n                }\n                else {\n                    if (arg1 == 0x18) {\n                        if (unaff_RDI <= *(unaff_RBX + 8) && *(unaff_RBX + 8) != unaff_RDI) {\n                            return *0x53ec18;\n                        }\n                        *(*0x20 + -0x28) = 0x47a99f;\n                        fcn.00432ec0();\n                    }\n                    *(*0x20 + -0x10) = arg1;\n                    *(*0x20 + -0x28) = 0x47a9b0;\n                    puVar1 = fcn.0040cd00();\n                    puVar1[1] = 0x13;\n                    *puVar1 = 0x4a996c;\n                    arg1 = *(*0x20 + -0x10);\n                    puVar1[2] = arg1;\n                    *(*0x20 + -0x28) = 0x47a9da;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x28) = 0x47a9ed;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9a60;\n            *(*0x20 + -0x28) = 0x47aa05;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x47aa1f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "0047aa40": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.0047aa40(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t iVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((unaff_DIL == '\\0') || ((arg1 & 0x60) == 0)) {\n                    if ((arg1 >> 9 & 1) != 0) {\n                        unaff_RBX = 0x9;\n                        *(*0x20 + -0x40) = 0x47aa9d;\n                        fcn.00477120(in_RAX);\n                        arg1 = in_RAX;\n                    }\n                    if ((arg1 & 0x1f) == 0x14) {\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x40) = 0x47aab6;\n                        iVar1 = fcn.0047b1c0(arg1);\n                        if (iVar1 != 0) {\n                            iVar1 = **(*0x20 + -0x10);\n                            if (iVar1 != 0) {\n                                iVar1 = *(iVar1 + 8);\n                            }\n                            return iVar1;\n                        }\n                        return **(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x40) = 0x47aafb;\n                    iVar1 = fcn.00478ee0(arg1);\n                    return iVar1;\n                }\n                *(*0x20 + -0x40) = 0x47ab18;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x40) = 0x47ab25;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4aad11;\n            *unaff_RBX = 0x4aad11;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x40) = 0x47ab4e;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        puVar2[0x20] = unaff_DIL;\n        *(puVar2 + -8) = 0x47ab68;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_DIL = puVar2[0x20];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 795
    },
    "0047b7c0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0047b7c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    code *noname_1;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((arg1 & 0x1f) != 0) {\n        if ((arg1 & 0x1f) == 0x18) {\n            return *unaff_RBX;\n        }\n        iVar1 = fcn.0047b8a0(arg1);\n        noname_1 = *(iVar1 + 0xf8);\n        (*noname_1)();\n        uVar2 = fcn.00448c60(1, noname_1, 0x4a6f5c, 7);\n        return uVar2;\n    }\n    return 0x4a86a2;\n}\n",
        "token_count": 243
    },
    "0047b8a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.0047b8a0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 != 0) {\n                if ((arg1 >> 9 & 1) == 0) {\n                    return 0x4ca2b0;\n                }\n                uVar1 = arg1 >> 10;\n                if ((*(in_RAX + 0x17) & 0x1f) == 0x14) {\n                    if (uVar1 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar1) {\n                        *(*0x20 + -0x30) = 0x47b8fd;\n                        fcn.00458280();\n                        return 0x4ca2b0;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x30) = 0x47b925;\n                    fcn.00477ce0();\n                    if (*(*0x20 + -0x18) < unaff_RBX) {\n                        *(*0x20 + -0x30) = 0x47b945;\n                        fcn.00458280();\n                        return 0x4ca2b0;\n                    }\n                    *(*0x20 + -0x30) = 0x47b985;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0x30) = 0x47b998;\n                fcn.00432ec0();\n            }\n            *(*0x20 + -0x30) = 0x47b9a5;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x12;\n            arg1 = 0x4a939b;\n            *unaff_RBX = 0x4a939b;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x30) = 0x47b9ce;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x47b9e5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 788
    },
    "00441640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.00441640(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x53ffe0;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53fff0 == 0) {\n                return 0;\n            }\n            if (*0x593450 != 0) {\n                if (*0x593450 == -1) {\n                    iVar1 = -*0x53fff0;\n                }\n                else {\n                    iVar1 = *0x53fff0 / *0x593450;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x53fff0 < iVar1 + 1) {\n                    iVar3 = *0x53fff0;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x53fff0 = *0x53fff0 - iVar3;\n                if ((*0x53ffe0 != 0) && (*0x53ffe0 = *(*0x53ffe0 + 0xa0),  *0x53ffe0 == 0)) {\n                    *0x53ffe8 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x53ffe0 != 0) && (*0x53ffe0 = *(*0x53ffe0 + 0xa0),  *0x53ffe0 == 0)) {\n                        *0x53ffe8 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x441707;\n                    fcn.00441ac0(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x44175b;\n            in_RAX = fcn.00431cc0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x44176a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 758
    },
    "0044b4a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044b4a0(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX == NULL) {\n        return 0;\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 4);\n    }\n    for (iVar2 = 0x52cb00; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044b51c;\n    }\n    iVar2 = 0;\ncode_r0x0044b51c:\n    uVar1 = fcn.0044bde0(in_RAX, iVar2);\n    return uVar1;\n}\n",
        "token_count": 281
    },
    "0044b560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044b560(void)\n\n{\n    int32_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*in_RAX == -1) {\n        return *(in_RAX + 2);\n    }\n    for (iVar2 = 0x52cb00; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n        if (((*(iVar2 + 0x70) != 0) && (*(iVar2 + 0x68) <= in_RAX)) && (in_RAX < *(iVar2 + 0x70) + *(iVar2 + 0x68)))\n        goto code_r0x0044b5bc;\n    }\n    iVar2 = 0;\ncode_r0x0044b5bc:\n    uVar1 = fcn.0044b180(iVar2);\n    return uVar1;\n}\n",
        "token_count": 258
    },
    "0044c100": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0044c100(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.0044b7e0(*(in_RAX + 0x14));\n        iVar2 = fcn.0044b7e0(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.0044c000(uVar1);\n            return uVar3;\n        }\n        return 0x4a6955;\n    }\n    return 0x4a6955;\n}\n",
        "token_count": 270
    },
    "00455360": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00455360(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x52cb00; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x004553bc;\n            }\n            iVar2 = 0;\ncode_r0x004553bc:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45543c;\n                fcn.0040ac20();\n                *(*0x20 + -0x58) = 0x455453;\n                puVar1 = fcn.0040f6e0(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x45546a;\n                fcn.0040ae40();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x455479;\n                fcn.00434de0();\n                *(*0x20 + -0x58) = 0x45548a;\n                fcn.004356e0();\n                *(*0x20 + -0x58) = 0x455496;\n                fcn.00435540();\n                *(*0x20 + -0x58) = 0x4554a7;\n                fcn.004356e0();\n                *(*0x20 + -0x58) = 0x4554b1;\n                fcn.00435540();\n                *(*0x20 + -0x58) = 0x4554c5;\n                fcn.004356e0();\n                *(*0x20 + -0x58) = 0x4554ca;\n                fcn.00434e60();\n                iVar2 = 0x52cb00;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x4554ff;\n                    fcn.00434de0();\n                    *(*0x20 + -0x58) = 0x455510;\n                    fcn.004356e0();\n                    *(*0x20 + -0x58) = 0x45551a;\n                    fcn.00435540();\n                    *(*0x20 + -0x58) = 0x45552b;\n                    fcn.004356e0();\n                    *(*0x20 + -0x58) = 0x455535;\n                    fcn.00435540();\n                    *(*0x20 + -0x58) = 0x45553a;\n                    fcn.00435040();\n                    *(*0x20 + -0x58) = 0x45553f;\n                    fcn.00434e60();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x220);\n                }\n                *(*0x20 + -0x58) = 0x455565;\n                fcn.00433640();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x4553e5;\n                puVar1 = fcn.0040f6e0(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x455574;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x455585;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x455591;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4555a5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4555af;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4555c5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4555cf;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4555d4;\n            fcn.00435040();\n            *(*0x20 + -0x58) = 0x4555d9;\n            fcn.00434e60();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x4555ea;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x4555f9;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "00466960": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00466960(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x28) = *0x53f170;\n            *(*0x20 + -0x60) = 0x466999;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x60) = 0x4669cf;\n                uVar2 = fcn.00459100(iVar1);\n                if (((uVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x60) = 0x466a0f;\n                    fcn.0040a5e0();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x60) = 0x466a45;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x466a5a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 585
    },
    "00424840": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00424840(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00424919:\n        fcn.0045caa0(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10190 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.0045caa0(0x40);\n                goto code_r0x00424919;\n            }\n            iVar3 = *(*(in_RAX + 0x10190 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 450
    },
    "00424940": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00424940(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x424a4c;\n                        fcn.00433640();\n                        goto code_r0x00424a4c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x00424a4c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x424a59;\n            in_RAX = fcn.0045caa0(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x424a6e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 907
    },
    "00426e40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00426e40(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar9;\n            uVar10 = uVar9 >> 0x16;\n            *(*0x20 + -0x28) = uVar10;\n            uVar8 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar8;\n            uVar8 = uVar8 >> 0x16;\n            if (uVar8 == uVar10) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                if (uVar5 <= uVar10) goto code_r0x00427265;\n                noname_1 = *(noname_1 + uVar10 * 8);\n                if (0x1fff < uVar9 >> 0x23) goto code_r0x00427258;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x42704f;\n                iVar1 = fcn.00429fe0(iVar1 + (uVar10 & 0x1fff) * 0x80, noname_1, uVar8);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar10 = *(iVar6 + 0x68);\n                uVar8 = *(iVar6 + 0x60);\n                if (uVar10 <= *(*0x20 + -0x28)) goto code_r0x00427250;\n                *(uVar8 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00427092;\n            }\n            *(*0x20 + -0x38) = uVar8;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar9 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x426f3f;\n                    uVar2 = fcn.00429fe0(iVar1 + (uVar10 & 0x1fff) * 0x80, uVar5, uVar8);\n                    uVar8 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar8) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar10 = *(unaff_RDI + 0x70);\n                        uVar8 = *(*0x20 + -0x38);\n                        if (uVar8 <= uVar10) {\n                            if (uVar5 + 1 <= uVar8) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar10 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                unaff_RBX = (uVar8 - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (unaff_RBX == 0) goto code_r0x0042726d;\n                                    unaff_RBX = unaff_RBX * 8;\n                                    *(*0x20 + -0xc0) = 0x426fdd;\n                                    fcn.0045d100();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    uVar8 = *(*0x20 + -0x38);\n                                    goto code_r0x0042726d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x004272f6;\n                            }\n                            *(*0x20 + -0xc0) = 0x42730d;\n                            fcn.0045cb60(uVar8);\n                        }\n                        uVar5 = uVar10;\n                        *(*0x20 + -0xc0) = 0x427318;\n                        fcn.0045cb20(uVar8, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x427325;\n                    fcn.0045caa0(uVar8);\n                }\n                uVar10 = 0x2000;\n                *(*0x20 + -0xc0) = 0x427332;\n                uVar2 = fcn.0045caa0(0x2000);\n                goto code_r0x00427332;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar8 < uVar10) goto code_r0x004272c3;\n                if (0x1fff < uVar10 >> 0xd) goto code_r0x004273b9;\n                *(*0x20 + -0x50) = uVar10;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0xd) * 8);\n                iVar6 = (uVar10 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x42739f;\n                uVar2 = fcn.00429fe0(iVar1 + iVar6, iVar6, uVar8);\n                uVar10 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar10) break;\ncode_r0x00427332:\n                *(*(*0x20 + -0x18) + uVar10 * 8) = uVar2;\n                uVar10 = uVar10 + 1;\n                uVar8 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x4273b9;\n            fcn.0045caa0(uVar5);\ncode_r0x004273b9:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x4273c6;\n            in_RAX = fcn.0045caa0(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_RDI;\n        puVar7[0x21] = unaff_SIL;\n        *(puVar7 + -8) = 0x4273e5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = puVar7[0x20];\n        unaff_SIL = puVar7[0x21];\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x004272c3:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00427092:\n    uVar9 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x004270b7:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar10 = *(iVar1 * 8 + 0x5288a0);\n    uVar8 = -(uVar10 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x528828);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x528868);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar10;\n    uVar10 = uVar9 >> (uVar4 & 0x3f) & uVar8;\n    iVar11 = (unaff_RBX >> (uVar4 & 0x3f) & uVar8) + 1;\n    *(*0x20 + -0x58) = iVar11;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar11 <= uVar10) goto code_r0x004270ae;\n        *(*0x20 + -0x60) = uVar10;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar8 = uVar10 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar10 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar10) break;\n        if (uVar10 < uVar8) {\ncode_r0x00427237:\n            *(*0x20 + -0xc0) = 0x427245;\n            fcn.0045cb40(uVar10);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar8;\n        unaff_RBX = uVar10 - uVar8;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x4271ed;\n        uVar10 = unaff_RBX;\n        iVar11 = fcn.00428c00(iVar1, uVar9, uVar8 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar9 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar8 = *(*0x20 + -0x60);\n        if (uVar9 <= uVar8) {\n            *(*0x20 + -0xc0) = 0x427237;\n            fcn.0045ca80(uVar9);\n            goto code_r0x00427237;\n        }\n        if (*(iVar1 + uVar8 * 8) == iVar11) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar8 * 8) = iVar11;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar11 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar10 = *(*0x20 + -0x40);\n        uVar9 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x427250;\n    fcn.0045cb00(uVar10, noname_1);\ncode_r0x00427250:\n    *(*0x20 + -0xc0) = 0x427258;\n    fcn.0045caa0(uVar10);\ncode_r0x00427258:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x427265;\n    fcn.0045caa0(0x2000);\ncode_r0x00427265:\n    *(*0x20 + -0xc0) = 0x42726d;\n    fcn.0045caa0(uVar5);\ncode_r0x0042726d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x4272a5;\n            uVar2 = fcn.00429fe0(uVar2, noname_1, uVar8);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x004272b7;\n            *(*0x20 + -0xc0) = 0x4272d8;\n            fcn.0045caa0(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x4272e5;\n        iVar1 = fcn.0045caa0(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x004272f6:\n        } while (noname_1 < unaff_RBX);\n    } while( true );\ncode_r0x004270ae:\n    iVar1 = iVar1 + -1;\n    goto code_r0x004270b7;\ncode_r0x004272b7:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x004272c3;\n}\n",
        "token_count": 3665
    },
    "004278c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nint64_t fcn.004278c0(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x00428459:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x428468;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = in_XMM15;\n    *(*0x20 + -0x30) = *0x5273b8;\n    *(*0x20 + -0x28) = *0x527398;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x428480;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x00427980:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x427ad3;\n            iVar3 = fcn.0042a1c0(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x90) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x427b30;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x427b45;\n                fcn.004277e0();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0xf8) = uVar11;\n                *(*0x20 + -0xf0) = uVar9;\n                if (-1 < uVar7) goto code_r0x00427ced;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0x100) = uVar7;\n                    *(*0x20 + -0x120) = 0x427bfb;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x427c0c;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427c16;\n                    fcn.004354e0();\n                    *(*0x20 + -0x120) = 0x427c27;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427c34;\n                    fcn.004354e0();\n                    *(*0x20 + -0x120) = 0x427c45;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427c4f;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x427c65;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427c6f;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x427c85;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427c8f;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x427ca5;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427caa;\n                    fcn.00434e60();\n                    *(*0x20 + -0x120) = 0x427caf;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x427cc5;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x427cd2;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x427cd7;\n                    fcn.00435040();\n                    *(*0x20 + -0x120) = 0x427cdc;\n                    fcn.00434e60();\n                    *(*0x20 + -0x120) = 0x427ced;\n                    fcn.00433640();\ncode_r0x00427ced:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x427d18;\n            fcn.0045ca80(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x427d25;\n        fcn.0045caa0(0x2000);\n        goto code_r0x00427d25;\n    }\n    param_3 = 0x528820;\n    uVar11 = *(puVar2 * 8 + 0x528820);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x528860;\n    unaff_R15 = *(puVar2 * 8 + 0x528860);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x5288a0;\n            uVar9 = *(puVar2 * 8 + 0x5288a0);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00427fa0:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x428270;\n                        fcn.004277e0();\n                        return (*(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f) & -(*(*0x20 + -0x58) < 0x40)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -200) = unaff_R15;\n                    *(*0x20 + -0xc0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = arg2;\n                    *(*0x20 + -0x120) = 0x428032;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x428045;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428059;\n                    fcn.004354e0(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x42806a;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428074;\n                    fcn.004354e0();\n                    *(*0x20 + -0x120) = 0x428085;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x42808f;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x4280a5;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x4280af;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x4280c5;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x4280cf;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x4280d4;\n                    fcn.00435040();\n                    *(*0x20 + -0x120) = 0x4280d9;\n                    fcn.00434e60();\n                    *(*0x20 + -0x120) = 0x4280de;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x4280ef;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x4280fc;\n                    fcn.004354e0();\n                    *(*0x20 + -0x120) = 0x42810d;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x42811a;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x42812b;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428138;\n                    fcn.004354e0();\n                    *(*0x20 + -0x120) = 0x42813d;\n                    fcn.00435040();\n                    *(*0x20 + -0x120) = 0x428145;\n                    fcn.00434e60();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x428165;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x428176;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428185;\n                    fcn.00435540();\n                    *(*0x20 + -0x120) = 0x428196;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x4281a5;\n                    fcn.004354e0();\n                    *(*0x20 + -0x120) = 0x4281aa;\n                    fcn.00435040();\n                    *(*0x20 + -0x120) = 0x4281af;\n                    fcn.00434e60();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x5288a0);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x528820);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x4281e5;\n                    fcn.00434de0();\n                    *(*0x20 + -0x120) = 0x4281f6;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428205;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x428216;\n                    fcn.004356e0();\n                    *(*0x20 + -0x120) = 0x428225;\n                    fcn.004353e0();\n                    *(*0x20 + -0x120) = 0x42822a;\n                    fcn.00435040();\n                    *(*0x20 + -0x120) = 0x42822f;\n                    fcn.00434e60();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -0xe0) = param_4;\n                        *(*0x20 + -0xd8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xe8) = uVar7;\n                        *(*0x20 + -0x120) = 0x4282cb;\n                        fcn.00434de0();\n                        *(*0x20 + -0x120) = 0x4282dc;\n                        fcn.004356e0();\n                        *(*0x20 + -0x120) = 0x4282e9;\n                        fcn.004354e0();\n                        *(*0x20 + -0x120) = 0x4282fa;\n                        fcn.004356e0();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x428316;\n                        fcn.004354e0();\n                        *(*0x20 + -0x120) = 0x428327;\n                        fcn.004356e0();\n                        *(*0x20 + -0x120) = 0x428331;\n                        fcn.004353e0();\n                        *(*0x20 + -0x120) = 0x428345;\n                        fcn.004356e0();\n                        *(*0x20 + -0x120) = 0x42834f;\n                        fcn.004353e0();\n                        *(*0x20 + -0x120) = 0x428365;\n                        fcn.004356e0();\n                        *(*0x20 + -0x120) = 0x42836f;\n                        fcn.004353e0();\n                        *(*0x20 + -0x120) = 0x428385;\n                        fcn.004356e0();\n                        *(*0x20 + -0x120) = 0x42838a;\n                        fcn.00434e60();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x42843d;\n                    fcn.00433640();\ncode_r0x0042843d:\n                    *(*0x20 + -0x120) = 0x428448;\n                    fcn.0045ca80(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x0042843d;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00427d25;\n                }\n                *(*0x20 + -0x80) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x427dce;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x5288a0;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00427fa0;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00427959;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x5288a0;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00427d25;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x5288a0;\ncode_r0x00427d25:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x428450;\n        fcn.0045cb40(arg1);\n    }\n    *(*0x20 + -0x120) = 0x428458;\n    in_RAX = fcn.0045cb00(arg1, arg2);\n    goto code_r0x00428459;\ncode_r0x00427959:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x00427980;\n}\n",
        "token_count": 5929
    },
    "00457681": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00457681(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x565870);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 284
    },
    "0043b6e0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043b6e0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar4 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x43b795;\n                    fcn.0040ac20();\n                    *(*0x20 + -0x28) = 0x43b79a;\n                    uVar2 = fcn.004419a0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43b7ad;\n                    fcn.0040ae40();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43b7cb;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.0045ca80(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x43b7ef;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 875
    },
    "0043b820": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.0043b820(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1208);\n            iVar6 = *(iVar3 + 0x1210);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.0045ca80(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "0040b8e0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b8e0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    uint64_t *puVar10;\n    uint64_t *puVar11;\n    uint64_t uVar12;\n    uint64_t in_R11;\n    ulong uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \ncode_r0x0040b8e0:\n    puVar8 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar7 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar7;\n        *(*0x20 + -0xa0) = 0x40b93f;\n        uVar2 = fcn.0040d440(0x400000);\n        if (uVar2 != 0) {\n            uVar6 = *(*0x20 + -0x78);\n            goto code_r0x0040b95c;\n        }\n        uVar9 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + -0x78);\n        do {\n            puVar10 = *(uVar9 + 0x103b0);\n            if (puVar10 == NULL) {\n                uVar6 = 0;\ncode_r0x0040bd4b:\n                if (uVar6 == 0) {\n                    *(*0x20 + -0xa0) = 0x40bd65;\n                    iVar3 = fcn.0040bf80(0x400000);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x38) = uVar7;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16ba8;\n                    *(*0x20 + -0xa0) = 0x40bd94;\n                    puVar4 = fcn.00417100();\n                    *puVar4 = *(*0x20 + -0x10);\n                    *(puVar4 + 1) = 1;\n                    puVar4[2] = *0x565a90;\n                    *(*0x20 + -0xa0) = 0x40bdbf;\n                    *0x565a90 = puVar4;\n                    piVar5 = fcn.00417100();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    *piVar5 = uVar6 + uVar2;\n                    piVar5[2] = *0x565a90;\n                    *0x565a90 = piVar5;\n                }\n                uVar9 = uVar6 + uVar2;\n                if (uVar9 < uVar2) {\n                    iVar3 = 0x1c;\n                    uVar13 = 0x4ac112;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar14 = 0x3ffffff < uVar9 + 0x7fffffffffff >> 0x16;\n                    iVar3 = 0;\n                    if (bVar14) {\n                        iVar3 = 0x20;\n                    }\n                    uVar13 = 0;\n                    if (bVar14) {\n                        uVar13 = 0x4acdb3;\n                    }\n                }\n                else {\n                    iVar3 = 0x21;\n                    uVar13 = 0x4ad158;\n                }\n                if (iVar3 != 0) goto code_r0x0040bebe;\n                uVar7 = uVar6;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040bead;\ncode_r0x0040b95c:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar6;\n                uVar9 = uVar2 + 0x800000000000 >> 0x16;\n                puVar11 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar6 + 0x7fffffffffff >> 0x16 < uVar9) {\n                        return uVar2;\n                    }\n                    puVar10 = uVar9 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040bbfa;\n                    *(*0x20 + -0x40) = uVar9;\n                    uVar2 = puVar11[puVar10 + 0x2032];\n                    puVar10 = puVar11 + puVar10 + 0x2032;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa0) = 0x40ba15;\n                        uVar2 = fcn.0040d060(0);\n                        if (uVar2 == 0) goto code_r0x0040bbe9;\n                        **(*0x20 + -0x18) = uVar2;\n                        uVar9 = *(*0x20 + -0x40);\n                    }\n                    uVar7 = uVar9 & 0xfffff;\n                    in_R11 = *(uVar2 + uVar7 * 8);\n                    uVar9 = uVar2 + uVar7 * 8;\n                    if (in_R11 != 0) goto code_r0x0040bbd8;\n                    *(*0x20 + -0x20) = uVar9;\n                    uVar7 = 0x210d0;\n                    *(*0x20 + -0xa0) = 0x40ba8c;\n                    iVar3 = fcn.0040d440(8);\n                    if (iVar3 == 0) {\n                        uVar7 = 8;\n                        *(*0x20 + -0xa0) = 0x40baa7;\n                        iVar3 = fcn.0040d060(0x595118);\n                        if (iVar3 == 0) goto code_r0x0040bbc7;\n                    }\n                    puVar10 = *(*0x20 + 8);\n                    uVar2 = puVar10[0x207d];\n                    if (puVar10[0x207c] == uVar2) {\n                        *(*0x20 + -0x68) = iVar3;\n                        iVar3 = uVar2 << 4;\n                        if (iVar3 == 0) {\n                            iVar3 = *0x593598;\n                        }\n                        *(*0x20 + -0x70) = iVar3;\n                        *(*0x20 + -0xa0) = 0x40bafb;\n                        uVar2 = fcn.0040d060(0x595118);\n                        if (uVar2 == 0) goto code_r0x0040bbb6;\n                        puVar10 = *(*0x20 + 8);\n                        uVar7 = puVar10[0x207b];\n                        puVar10[0x207b] = uVar2;\n                        puVar10[0x207d] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar10[0x207c];\n                        if (puVar10[0x207c] < puVar10[0x207c]) {\n                            uVar2 = puVar10[0x207c];\n                        }\n                        if (puVar10[0x207b] != uVar7) {\n                            *(*0x20 + -0xa0) = 0x40bb59;\n                            fcn.0045d3c0(uVar2 << 3);\n                            puVar10 = *(*0x20 + 8);\n                        }\n                        iVar3 = *(*0x20 + -0x68);\n                    }\n                    uVar6 = puVar10[0x207c];\n                    uVar9 = puVar10[0x207d];\n                    uVar2 = uVar6 + 1;\n                    if (uVar9 < uVar2) goto code_r0x0040bbb1;\n                    puVar10[0x207c] = uVar2;\n                    uVar9 = puVar10[0x207b];\n                    if (uVar2 <= uVar6) break;\n                    iVar1 = *(*0x20 + -0x40);\n                    *(uVar9 + uVar6 * 8) = iVar1;\n                    **(*0x20 + -0x20) = iVar3;\n                    uVar9 = iVar1 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar6 = *(*0x20 + -0x38);\n                    puVar11 = puVar10;\n                }\n                *(*0x20 + -0xa0) = 0x40bbb1;\n                fcn.0045ca80(uVar2);\ncode_r0x0040bbb1:\n                *(*0x20 + -0xa0) = 0x40bbb6;\n                fcn.0045cb00(uVar2, uVar9);\ncode_r0x0040bbb6:\n                *(*0x20 + -0xa0) = 0x40bbc7;\n                fcn.00433640();\ncode_r0x0040bbc7:\n                *(*0x20 + -0xa0) = 0x40bbd8;\n                fcn.00433640();\ncode_r0x0040bbd8:\n                *(*0x20 + -0xa0) = 0x40bbe9;\n                fcn.00433640();\ncode_r0x0040bbe9:\n                uVar7 = 0x27;\n                *(*0x20 + -0xa0) = 0x40bbfa;\n                fcn.00433640();\n                uVar2 = in_R11;\ncode_r0x0040bbfa:\n                *(*0x20 + -0xa0) = 0x40bc07;\n                fcn.0045caa0(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar6 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar6 = *puVar10 - uVar7;\n                }\n                uVar12 = uVar7 + uVar6;\n                if (uVar12 < uVar6) {\n                    uVar2 = 0;\n                }\n                else if (uVar12 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = uVar12;\n                    *(*0x20 + -0xa0) = 0x40bcae;\n                    uVar2 = fcn.00415fc0();\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar6) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar12 = uVar6;\n                    }\n                    *puVar10 = uVar12;\n                    uVar6 = uVar7;\n                    goto code_r0x0040bd4b;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xa0) = 0x40bcfb;\n                    fcn.00415e80(0);\n                    uVar9 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            *(uVar9 + 0x103b0) = puVar10[2];\n            *(uVar9 + 0x16bd8) = *(uVar9 + 0x16bd8) - *(uVar9 + 0x16ba8);\n            *puVar10 = *(uVar9 + 0x16bc0);\n            *(uVar9 + 0x16bc0) = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040bf50;\ncode_r0x0040bead:\n    *(*0x20 + -0xa0) = 0x40bebe;\n    fcn.00433640();\ncode_r0x0040bebe:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar9;\n    *(*0x20 + -0x30) = uVar13;\n    *(*0x20 + -0x50) = iVar3;\n    *(*0x20 + -0xa0) = 0x40bed7;\n    fcn.00434de0();\n    *(*0x20 + -0xa0) = 0x40bee8;\n    fcn.004356e0();\n    *(*0x20 + -0xa0) = 0x40bef2;\n    fcn.00435540();\n    *(*0x20 + -0xa0) = 0x40bf05;\n    fcn.004356e0();\n    *(*0x20 + -0xa0) = 0x40bf0f;\n    fcn.00435540();\n    *(*0x20 + -0xa0) = 0x40bf25;\n    fcn.004356e0();\n    *(*0x20 + -0xa0) = 0x40bf34;\n    fcn.004356e0();\n    *(*0x20 + -0xa0) = 0x40bf39;\n    fcn.00435040();\n    *(*0x20 + -0xa0) = 0x40bf3e;\n    fcn.00434e60();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa0) = 0x40bf4f;\n    in_RAX = fcn.00433640();\ncode_r0x0040bf50:\n    *(puVar8 + 8) = in_RAX;\n    *(puVar8 + 0x10) = unaff_RBX;\n    *(puVar8 + -8) = 0x40bf5f;\n    fcn.0045a3a0();\n    in_RAX = *(puVar8 + 8);\n    unaff_RBX = *(puVar8 + 0x10);\n    *0x20 = puVar8;\n    in_R11 = uVar2;\n    goto code_r0x0040b8e0;\n}\n",
        "token_count": 3570
    },
    "004353e0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004353e0(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43542f;\n            uVar1 = fcn.0045cd2b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x43549f;\n                fcn.00434ec0(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x4354bc;\n            in_RAX = fcn.0045cb40(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4354c7;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 493
    },
    "00464ca0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong fcn.00464ca0(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4a6950;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x00464db3;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x00464e5d;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x00464e1a;\n            *(*0x20 + -0x80) = 0x464e5d;\n            fcn.0045ca80(0x14);\ncode_r0x00464e5d:\n            *(*0x20 + -0x80) = 0x464e6a;\n            in_RAX = fcn.0045ca80(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x464e75;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x00464d2d:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x00464d60;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x00464da6;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x00464d2d;\ncode_r0x00464e1a:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x464e45;\n    fcn.00448f60(-(uVar4 - 0x14));\n    goto code_r0x00464db3;\ncode_r0x00464d60:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x464d8e;\n        uVar3 = fcn.00448f60(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x464da6;\n    fcn.0045ca80(0x14);\ncode_r0x00464da6:\n    *(*0x20 + -0x80) = 0x464db3;\n    fcn.0045ca80(0x14);\ncode_r0x00464db3:\n    *(*0x20 + -0x80) = 0x464dcc;\n    uVar3 = fcn.00448bc0(1);\n    return uVar3;\n}\n",
        "token_count": 1037
    },
    "00428f60": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.00428f60(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00428f60:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x429400;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x429380;\n            *(*0x20 + -0x18) = 0x4b0e90;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x42902a;\n            uVar2 = fcn.0042b8e0(0x4b0e90, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar5 = 0;\n            do {\n                if (4 < iVar5) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                uVar4 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x429065;\n                arg1 = fcn.0042b620();\n                *(*0x20 + -0xa8) = 0x42908a;\n                iVar3 = (**0x4b0e90)(uVar4, 0x4b0e90);\n                iVar5 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar5 * 0x18);\n                if (*(iVar7 + 8 + iVar5 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x004292cf;\n                    *(iVar7 + 8 + iVar5 * 0x18) = arg1;\n                }\n                arg1_00 = *(iVar7 + 8 + iVar5 * 0x18);\n                iVar1 = *(iVar7 + iVar5 * 0x18);\n                arg2 = -*0x593598;\n                uVar2 = (*0x593598 + arg1 * 8) - 1 & arg2;\n                if (arg1_00 == 0) goto code_r0x004292c5;\n                arg2 = (iVar3 << 3 & arg2) + iVar1;\n                arg1_00 = uVar2 + iVar1;\n                uVar2 = *(*0x20 + -0x58);\n                if (0 < uVar2) {\n                    iVar5 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar2 - 1) goto code_r0x004292b5;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = arg1_00;\n                    uVar4 = *((uVar2 - 1) * 0x10 + 8 + iVar5);\n                    *(*0x20 + -0xa8) = 0x429147;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x42915c;\n                    arg2 = fcn.0042b6a0(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar2 = *(*0x20 + -0x58);\n                    arg1_00 = arg1;\n                }\n                iVar3 = *(iVar7 + 0x10090);\n                arg1_01 = *(iVar7 + 0x10098);\n                if (uVar2 < arg1_01) {\n                    if (arg1_01 <= uVar2) goto code_r0x004292ad;\n                    *(*0x20 + -0x70) = arg1_00;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar4 = *(uVar2 * 0x10 + 8 + iVar3);\n                    *(*0x20 + -0xa8) = 0x4291bc;\n                    uVar4 = (**(*0x20 + -0x20))(uVar4, *0x20 + -0x20);\n                    arg1_00 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x4291d1;\n                    arg2 = fcn.0042b6a0(uVar4);\n                    iVar5 = *(*0x20 + -0x60);\n                    uVar2 = *(*0x20 + -0x58);\n                }\n                if (arg2 + 0x800000000000 < arg1_00 + 0x800000000000) {\n                    iVar7 = arg1_00 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = arg1_00 + 0x800000000000;\n                    *(*0x20 + -0x48) = arg1_00;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x42924e;\n                    fcn.0042c9a0();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar5 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar5 = 0;\n                    }\n                    *(*0x20 + -0xa8) = 0x42927c;\n                    fcn.00415c20(iVar5);\n                    uVar2 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + -0x60);\n                }\n                iVar5 = iVar5 + 1;\n            } while( true );\n        }\n        goto code_r0x004292da;\n    }\n    goto code_r0x0042933c;\ncode_r0x004292ad:\n    *(*0x20 + -0xa8) = 0x4292b5;\n    fcn.0045ca80(arg1_01);\ncode_r0x004292b5:\n    *(*0x20 + -0xa8) = 0x4292c5;\n    fcn.0045ca80(arg1_01);\ncode_r0x004292c5:\n    *(*0x20 + -0xa8) = 0x4292cf;\n    fcn.0045ca80(arg1_00);\ncode_r0x004292cf:\n    *(*0x20 + -0xa8) = 0x4292da;\n    fcn.0045cb00(arg1, arg2);\ncode_r0x004292da:\n    *(*0x20 + -0xa8) = 0x4292df;\n    fcn.00434de0();\n    *(*0x20 + -0xa8) = 0x4292f0;\n    fcn.004356e0();\n    *(*0x20 + -0xa8) = 0x4292fd;\n    fcn.00435540();\n    *(*0x20 + -0xa8) = 0x42930e;\n    fcn.004356e0();\n    *(*0x20 + -0xa8) = 0x42931b;\n    fcn.00435540();\n    *(*0x20 + -0xa8) = 0x429325;\n    fcn.00435040();\n    *(*0x20 + -0xa8) = 0x42932a;\n    fcn.00434e60();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x42933b;\n    in_RAX = fcn.00433640();\ncode_r0x0042933c:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x429350;\n    fcn.0045a3a0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x00428f60;\n}\n",
        "token_count": 2337
    },
    "00437460": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00437460(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *0x59343c = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x540064 = 0x7fffffff;\n        *0x540060 = 1;\n        cVar1 = fcn.004409e0();\n        if (cVar1 == '\\0') break;\n        fcn.00430d00();\n    }\n    fcn.00430d00();\n    fcn.004409e0();\n    fcn.00430d00();\n    return;\n}\n",
        "token_count": 209
    },
    "0048c480": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t fcn.0048c480(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int32_t iVar6;\n    uint8_t uVar7;\n    \n    uVar5 = 0;\n    for (uVar4 = 1; uVar4 < unaff_RSI; uVar4 = uVar4 + 2) {\n        if (unaff_RSI <= uVar4 - 1) goto code_r0x0048c670;\n        uVar7 = *(unaff_RDI + -1 + uVar4);\n        iVar6 = uVar7 - 0x30;\n        if (iVar6 < 10) {\n            bVar3 = true;\n        }\n        else if (uVar7 + 0x9f < 6) {\n            iVar6 = uVar7 - 0x57;\n            bVar3 = true;\n        }\n        else if (uVar7 + 0xbf < 6) {\n            iVar6 = uVar7 - 0x37;\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n            iVar6 = 0;\n        }\n        if (!bVar3) {\n            return uVar5;\n        }\n        if (unaff_RSI <= uVar4) goto code_r0x0048c665;\n        cVar1 = *(unaff_RDI + uVar4);\n        uVar7 = cVar1 - 0x30;\n        if (uVar7 < 10) {\n            bVar3 = true;\n        }\n        else if (cVar1 + 0x9fU < 6) {\n            uVar7 = cVar1 + 0xa9;\n            bVar3 = true;\n        }\n        else if (cVar1 + 0xbfU < 6) {\n            uVar7 = cVar1 - 0x37;\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n            uVar7 = 0;\n        }\n        if (!bVar3) {\n            return uVar5;\n        }\n        if (unaff_RBX <= uVar5) goto code_r0x0048c65a;\n        *(in_RAX + uVar5) = iVar6 << 4 | uVar7;\n        uVar5 = uVar5 + 1;\n    }\n    if ((unaff_RSI & 1) == 0) {\n        return uVar5;\n    }\n    if (uVar4 - 1 < unaff_RSI) {\n        cVar1 = *(unaff_RDI + -1 + uVar4);\n        if (((9 < cVar1 - 0x30U) && (5 < cVar1 + 0x9fU)) && (5 < cVar1 + 0xbfU)) {\n            return uVar5;\n        }\n        return uVar5;\n    }\n    fcn.0045ca80(unaff_RSI);\ncode_r0x0048c65a:\n    fcn.0045ca80(unaff_RBX);\ncode_r0x0048c665:\n    fcn.0045ca80(unaff_RSI);\ncode_r0x0048c670:\n    fcn.0045ca80(unaff_RSI);\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 799
    },
    "00454980": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00454980(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.0044b660();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x24);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.0044bde0();\n        if (unaff_RBX < 8) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar4 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x593405 ^ 1;\n}\n",
        "token_count": 330
    },
    "00470360": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.00470360(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((99 < in_RAX) || (unaff_RBX != 10)) {\n                *(*0x20 + -0x40) = 0x470405;\n                fcn.00470460(0);\n                return in_RAX;\n            }\n            if (in_RAX < 10) {\n                arg1 = in_RAX + 1;\n                if (in_RAX <= arg1) {\n                    return in_RAX + 0x4ad991;\n                }\n            }\n            else {\n                arg1 = in_RAX * 2 + 2;\n                if (arg1 < 0xc9) {\n                    if (in_RAX << 1 <= arg1) {\n                        return in_RAX * 2 + 0x4b01fe;\n                    }\n                    *(*0x20 + -0x40) = 0x47041a;\n                    fcn.0045cb40(arg1);\n                }\n                *(*0x20 + -0x40) = 0x470425;\n                fcn.0045cac0(arg1, 200);\n            }\n            *(*0x20 + -0x40) = 0x47042a;\n            in_RAX = fcn.0045cb40(arg1);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x47043a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 530
    },
    "0048c820": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.0048c820(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0x40) {\n                iVar2 = 0;\n                while( true ) {\n                    if (0x3f < iVar2) {\n                        *(*0x20 + 0x10) = 0x40;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x30) = 0x48c889;\n                        iVar1 = fcn.0040cd00();\n                        *(iVar1 + 0x140) = 0x3d;\n                        iVar2 = *(*0x20 + 8);\n                        if (iVar1 != iVar2) {\n                            *(*0x20 + -0x10) = iVar1;\n                            *(*0x20 + -0x30) = 0x48c8ac;\n                            fcn.0045d3c0(0x40);\n                            iVar1 = *(*0x20 + -0x10);\n                            iVar2 = *(*0x20 + 8);\n                        }\n                        for (iVar3 = 0; iVar3 < 0x100; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + iVar3) = 0xff;\n                        }\n                        iVar3 = *(*0x20 + 0x10);\n                        for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n                            *(iVar1 + 0x40 + *(iVar2 + iVar4)) = iVar4;\n                        }\n                        return;\n                    }\n                    if ((*(in_RAX + iVar2) == '\\n') || (*(in_RAX + iVar2) == '\\r')) break;\n                    iVar2 = iVar2 + 1;\n                }\n                *(*0x20 + -0x30) = 0x48c905;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c97f0;\n            *(*0x20 + -0x30) = 0x48c918;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x48c928;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 747
    },
    "00437e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint64_t fcn.00437e80(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                LOCK();\n                bVar2 = *(in_RAX + 0x90) == 9;\n                if (bVar2) {\n                    *(in_RAX + 0x90) = 4;\n                }\n                return in_RAX & 0xffffff00 | bVar2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x437ed3;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x437ee6;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 425
    },
    "00476fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.00476fe0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x47701c;\n                    fcn.004587a0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x477033;\n                fcn.0045ca80(9);\n            }\n            unaff_RBX = 0x4c9850;\n            *(*0x20 + -0x28) = 0x477046;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x477065;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 487
    },
    "00477080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.00477080(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (((arg1 < 9) && (arg1 != 0)) && ((arg1 - 1 & arg1) == 0)) {\n                if (unaff_RBX < 9) {\n                    *(*0x20 + -0x28) = 0x4770bc;\n                    fcn.004587a0(arg1);\n                    return;\n                }\n                arg1 = 9;\n                *(*0x20 + -0x28) = 0x4770d3;\n                fcn.0045ca80(9);\n            }\n            unaff_RBX = 0x4c9850;\n            *(*0x20 + -0x28) = 0x4770e6;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x477105;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00470240": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00470240(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_RAX << 8;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                iVar5 = (arg1 + 0x15cU) * 0x10;\n                uVar1 = *(iVar5 + 0x534e44);\n                uVar2 = *(iVar5 + 0x534e48);\n                uVar3 = *(iVar5 + 0x534e4c);\n                *(*0x20 + -0x18) = *(iVar5 + 0x534e40);\n                *(*0x20 + -0x14) = uVar1;\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0xc) = uVar3;\n                if (arg1 < 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) + 1;\n                }\n                uVar6 = SUB168(ZEXT816(*(*0x20 + -0x18)) * ZEXT816(in_RAX) >> 0x40, 0);\n                uVar4 = SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX), 0);\n                return (SUB168(ZEXT816(*(*0x20 + -0x10)) * ZEXT816(in_RAX) >> 0x40, 0) + CARRY8(uVar4, uVar6)) * 0x200 |\n                       uVar4 + uVar6 >> 0x37;\n            }\n            unaff_RBX = 0x4c9c40;\n            *(*0x20 + -0x30) = 0x470334;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x470349;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 732
    },
    "0048cf20": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint64_t fcn.0048cf20(uint64_t arg1, ulong noname_1, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if (arg3 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar6 = 0;\n            uVar7 = 0;\n            iVar9 = 0;\n            iVar12 = 0;\n            while ((7 < arg3 - uVar6 && (iVar5 = arg1 - uVar7,  7 < iVar5))) {\n                arg1 = uVar6 + 8;\n                if (arg4 < arg1) goto code_r0x0048d51a;\n                if (arg1 < uVar6) goto code_r0x0048d50f;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x28) = iVar12;\n                *(*0x20 + -0x10) = iVar9;\n                *(*0x20 + -0x50) = uVar6;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x50);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                *(*0x20 + -0x51) = uVar3;\n                *(*0x20 + -0x52) = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                *(*0x20 + -0x53) = *(in_RAX + 0x40 + *(unaff_RSI + 4 + uVar6));\n                *(*0x20 + -0x54) = *(in_RAX + 0x40 + *(unaff_RSI + 5 + uVar6));\n                *(*0x20 + -0x55) = *(in_RAX + 0x40 + *(unaff_RSI + 6 + uVar6));\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 7 + uVar6));\n                arg1_00 = *(*0x20 + -0x55);\n                if ((uVar2 | uVar1 | uVar3 | *(*0x20 + -0x52) | *(*0x20 + -0x53) | *(*0x20 + -0x54) | *(*0x20 + -0x55) |\n                    uVar4) == 0xff) {\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x0048d4fc;\n                    *(*0x20 + -0x30) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x48d1b4;\n                    uVar6 = fcn.0048c9a0(iVar5, arg1, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x30) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar6 = uVar1 << 0x3a | uVar2 << 0x34;\n                    uVar13 = *(*0x20 + -0x51) << 0x2e | uVar6;\n                    uVar14 = *(*0x20 + -0x53) << 0x22 | *(*0x20 + -0x52) << 0x28 | uVar13;\n                    uVar11 = *(*0x20 + -0x54) << 0x1c | uVar14;\n                    uVar16 = arg1_00 << 0x16;\n                    arg1_00 = uVar16 | uVar11;\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x0048d507;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar6 >> 0x38 | (uVar13 & 0xff000000000000) >> 0x28 | (uVar14 & 0xff0000000000) >> 0x18 |\n                         (uVar11 & 0xff00000000) >> 8 | (arg1_00 & 0xff000000) << 8 |\n                         (uVar4 << 0x10 | uVar16 & 0xff0000) << 0x18;\n                    uVar7 = uVar7 + 6;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x10);\n                    iVar12 = *(*0x20 + -0x28);\n                }\n            }\n            while ((arg1_00 = arg3 - uVar6,  uVar11 = uVar6,  3 < arg1_00 && (iVar5 = arg1 - uVar7,  3 < iVar5))) {\n                arg1_00 = uVar6 + 4;\n                arg1 = arg4;\n                if (arg4 < arg1_00) goto code_r0x0048d4f1;\n                if (arg1_00 < uVar6) goto code_r0x0048d4e6;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x20) = arg1_00;\n                *(*0x20 + -0x18) = iVar9;\n                *(*0x20 + -0x40) = iVar12;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x38);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                arg1_00 = uVar3;\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                if ((uVar2 | uVar1 | uVar3 | uVar4) == 0xff) {\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x0048d4d3;\n                    *(*0x20 + -0x48) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x48d385;\n                    uVar6 = fcn.0048c9a0(iVar5, uVar11, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x48) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar10 = uVar1 << 0x1a | uVar2 << 0x14;\n                    uVar15 = uVar3 << 0xe | uVar10;\n                    arg1_00 = uVar15;\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x0048d4de;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar10 >> 0x18 | (uVar15 & 0xff0000) >> 8 | (uVar4 << 8 | uVar3 << 0xe & 0xff00) << 8;\n                    uVar7 = uVar7 + 3;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x18);\n                    iVar12 = *(*0x20 + -0x40);\n                    arg1 = uVar11;\n                }\n            }\n            while( true ) {\n                if (arg3 <= uVar11) {\n                    return uVar7;\n                }\n                if (arg1 < uVar7) break;\n                *(*0x20 + -0x20) = uVar7;\n                iVar9 = arg1 - uVar7;\n                *(*0x20 + -0xa0) = 0x48d485;\n                uVar11 = fcn.0048c9a0(iVar9, uVar11, arg3, arg4);\n                uVar7 = *(*0x20 + -0x20) + (-(unaff_RDI - uVar7) >> 0x3f & uVar7) + unaff_RBX;\n                if (iVar9 != 0) {\n                    return uVar7;\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                arg4 = *(*0x20 + 0x38);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg3 = *(*0x20 + 0x30);\n                arg1_00 = unaff_RDI;\n            }\n            *(*0x20 + -0xa0) = 0x48d4d3;\n            fcn.0045cb40(arg1);\ncode_r0x0048d4d3:\n            *(*0x20 + -0xa0) = 0x48d4de;\n            fcn.0045cb40(uVar11);\n            arg1 = arg4;\ncode_r0x0048d4de:\n            *(*0x20 + -0xa0) = 0x48d4e6;\n            fcn.0045cb40(uVar11);\ncode_r0x0048d4e6:\n            *(*0x20 + -0xa0) = 0x48d4f1;\n            fcn.0045cb40(arg1_00);\ncode_r0x0048d4f1:\n            *(*0x20 + -0xa0) = 0x48d4fc;\n            arg4 = arg1;\n            fcn.0045cb00(arg1_00, arg1);\ncode_r0x0048d4fc:\n            *(*0x20 + -0xa0) = 0x48d507;\n            fcn.0045cb40(arg1);\ncode_r0x0048d507:\n            *(*0x20 + -0xa0) = 0x48d50f;\n            fcn.0045cb40(arg1);\n            arg1 = arg1_00;\ncode_r0x0048d50f:\n            *(*0x20 + -0xa0) = 0x48d51a;\n            fcn.0045cb40(arg1);\ncode_r0x0048d51a:\n            *(*0x20 + -0xa0) = 0x48d525;\n            in_RAX = fcn.0045cb00(arg1, arg4);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + 0x30) = arg3;\n        *(puVar8 + 0x38) = arg4;\n        *(puVar8 + -8) = 0x48d54e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        arg4 = *(puVar8 + 0x38);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3501
    },
    "00448e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid fcn.00448e40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045cd30();\n    fcn.00448920(5);\n    return;\n}\n",
        "token_count": 135
    },
    "0040a9c0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a9c0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x40aa47;\n            fcn.00434de0();\n            *(*0x20 + -0x40) = 0x40aa58;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x40aa65;\n            fcn.00435660();\n            *(*0x20 + -0x40) = 0x40aa76;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x40aa85;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x40aa96;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x40aaa5;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x40aab6;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x40aac5;\n            fcn.00435660();\n            *(*0x20 + -0x40) = 0x40aaca;\n            fcn.00435040();\n            *(*0x20 + -0x40) = 0x40aacf;\n            fcn.00434e60();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x40aae5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x40aaf5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 884
    },
    "0040ab20": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040ab20(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x40ab66;\n            fcn.00434de0();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x40ab75;\n            fcn.00434de0();\n            *(*0x20 + -0x30) = 0x40ab86;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x40ab90;\n            fcn.00435540();\n            *(*0x20 + -0x30) = 0x40ab95;\n            fcn.00435040();\n            *(*0x20 + -0x30) = 0x40ab9a;\n            fcn.00434e60();\n            *(*0x20 + -0x30) = 0x40abab;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x40abb6;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "004228c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004228c0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x4228e5;\n            fcn.00434de0();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x422905;\n            fcn.00434de0();\n            *(*0x20 + -0x80) = 0x422916;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x422925;\n            fcn.004356a0();\n            *(*0x20 + -0x80) = 0x422936;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x422945;\n            fcn.004353e0();\n            *(*0x20 + -0x80) = 0x422956;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x422965;\n            fcn.004353e0();\n            *(*0x20 + -0x80) = 0x422976;\n            fcn.004356e0();\n            *(*0x20 + -0x80) = 0x42297b;\n            fcn.00434e60();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x4229f0;\n                fcn.00434de0();\n                *(*0x20 + -0x80) = 0x4229fa;\n                fcn.00435540();\n                *(*0x20 + -0x80) = 0x4229ff;\n                fcn.00434e60();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x422a55;\n                    fcn.00434de0();\n                    *(*0x20 + -0x80) = 0x422a66;\n                    fcn.004356e0();\n                    *(*0x20 + -0x80) = 0x422a6b;\n                    fcn.00434e60();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422a38;\n                    fcn.00434de0();\n                    *(*0x20 + -0x80) = 0x422a49;\n                    fcn.004356e0();\n                    *(*0x20 + -0x80) = 0x422a4e;\n                    fcn.00434e60();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x422aa5;\n                    fcn.00434de0();\n                    *(*0x20 + -0x80) = 0x422ab6;\n                    fcn.004356e0();\n                    *(*0x20 + -0x80) = 0x422abb;\n                    fcn.00434e60();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x422a85;\n                    fcn.00434de0();\n                    *(*0x20 + -0x80) = 0x422a96;\n                    fcn.004356e0();\n                    *(*0x20 + -0x80) = 0x422a9b;\n                    fcn.00434e60();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x422ae9;\n                    fcn.00434de0();\n                    *(*0x20 + -0x80) = 0x422afa;\n                    fcn.004356e0();\n                    *(*0x20 + -0x80) = 0x422aff;\n                    fcn.00434e60();\n                }\n                *(*0x20 + -0x80) = 0x422b05;\n                fcn.00434de0();\n                *(*0x20 + -0x80) = 0x422b0a;\n                fcn.00435040();\n                *(*0x20 + -0x80) = 0x422b0f;\n                fcn.00434e60();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x422b45;\n                    fcn.00435840(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x422ba5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x422bb0;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1994
    },
    "00429540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00429540(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x0042959b:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x004295a8:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x593415 == '\\0') {\n                    fcn.00401e80();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x0042959b;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x004295a8;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 572
    },
    "00429fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.00429fe0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar9 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar7 = *(in_RAX + iVar2 * 8);\n        if (uVar7 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar7 != 0) {\n                for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar5 = iVar1 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar9 < uVar5) {\n                uVar9 = uVar5;\n            }\n            iVar1 = 0x3f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar7 == 0) {\n                iVar10 = -1;\n            }\n            uVar5 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar9 < uVar5) {\n        uVar9 = uVar5;\n    }\n    if (0x3d < uVar9) {\n        if (uVar9 == 0x200000) {\n            uVar4 = 0x8000000000000000;\n        }\n        else {\n            uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar4;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar9 == 0x200000) {\n                uVar4 = 0x8000000000000000;\n            }\n            else {\n                uVar4 = (uVar9 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar4;\n        }\n        uVar7 = *(in_RAX + iVar2 * 8);\n        iVar1 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar8 = iVar1;\n        if (uVar7 == 0) {\n            uVar8 = 0;\n        }\n        uVar7 = uVar7 >> (uVar8 & 0x3f);\n        if ((uVar7 + 1 & uVar7) != 0) {\n            uVar3 = 1;\n            uVar6 = uVar9;\ncode_r0x0042a195:\n            do {\n                if (uVar6 != 0) {\n                    if (uVar3 < uVar6) {\n                        uVar7 = uVar7 >> (uVar3 & 0x3f) | uVar7;\n                        if ((uVar7 & uVar7 + 1) == 0) break;\n                        uVar6 = uVar6 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x0042a195;\n                    }\n                    uVar7 = uVar7 | uVar7 >> (uVar6 & 0x3f);\n                    if ((uVar7 & uVar7 + 1) == 0) break;\n                }\n                uVar6 = ~uVar7;\n                iVar1 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar8 = iVar1;\n                if (uVar6 == 0) {\n                    uVar8 = 0;\n                }\n                uVar7 = uVar7 >> (uVar8 & 0x3f);\n                uVar6 = 0;\n                if (uVar7 != 0) {\n                    for (; (uVar7 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar7 == 0) {\n                    uVar6 = 0x40;\n                }\n                uVar7 = uVar7 >> (uVar6 & 0x3f);\n                uVar9 = uVar9 + uVar6;\n            } while ((uVar7 & uVar7 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1303
    },
    "0042a280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.0042a280(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x0042a30b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x0042a30b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 737
    },
    "0042c400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c400(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = fcn.0042c8c0(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042c552:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.0040ac20();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040d060(0x595118);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045d3c0(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042c820();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.0040ae40(iVar1);\n            goto code_r0x0042c552;\n        }\n        fcn.0040ae40();\n    } while( true );\n}\n",
        "token_count": 557
    },
    "00425200": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00425200(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar4 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar4 + *(in_RAX + 0x10420);\n    uVar5 = -*0x593598 & (*0x593598 + uVar1) - 1;\n    if ((*(in_RAX + 0x10428) < uVar5) || (uVar1 < *(in_RAX + 0x10420))) {\n        iVar2 = fcn.0040b8e0();\n        if (iVar2 == 0) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.004356e0();\n            fcn.00434e60();\n            return 0;\n        }\n        if (iVar2 == *(in_RAX + 0x10428)) {\n            *(in_RAX + 0x10428) = iVar2 + iVar4;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10428) - *(in_RAX + 0x10420);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.004160c0(0x5950b0);\n                LOCK();\n                *0x5950c0 = *0x5950c0 + arg1;\n                iVar3 = fcn.0042ca60();\n                LOCK();\n                *(iVar3 + 8) = *(iVar3 + 8) + arg1;\n                fcn.0042cb40();\n                fcn.00426be0(arg1);\n            }\n            *(in_RAX + 0x10420) = iVar2;\n            *(in_RAX + 0x10428) = iVar2 + iVar4;\n        }\n        uVar5 = -*0x593598 & (*0x593598 + *(in_RAX + 0x10420) + iVar4) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar4 = *(in_RAX + 0x10420);\n    *(in_RAX + 0x10420) = uVar5;\n    iVar4 = uVar5 - iVar4;\n    fcn.004160c0(0x5950b0);\n    LOCK();\n    *0x5950c0 = *0x5950c0 + iVar4;\n    iVar2 = fcn.0042ca60();\n    LOCK();\n    *(iVar2 + 8) = *(iVar2 + 8) + iVar4;\n    fcn.0042cb40();\n    fcn.00426be0(iVar4);\n    return iVar4 + arg1;\n}\n",
        "token_count": 768
    },
    "0042f6a0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042f6a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42f6d9;\n            fcn.0040ac20();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42f74d;\n                        uVar1 = fcn.00456e80(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042f8c5;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42f799;\n                        fcn.0042f920(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042f8b3;\n                        *(arg1_01 * 2 + 0x5948a0) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042f8a6;\n                        *(arg1_01 * 2 + 0x5948a0) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042f899;\n                        *(arg1_01 * 2 + 0x5948a2) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42f86f;\n                    fcn.0042f920(uVar3);\n                    *(*0x20 + -0x78) = 0x42f87d;\n                    fcn.0040ae40();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42f899;\n                fcn.0045cb00(uVar3, 1000);\ncode_r0x0042f899:\n                *(*0x20 + -0x78) = 0x42f8a6;\n                fcn.0045ca80(1000);\ncode_r0x0042f8a6:\n                *(*0x20 + -0x78) = 0x42f8b3;\n                fcn.0045ca80(1000);\ncode_r0x0042f8b3:\n                *(*0x20 + -0x78) = 0x42f8c5;\n                fcn.0045ca80(1000);\ncode_r0x0042f8c5:\n                *(*0x20 + -0x78) = 0x42f8d2;\n                fcn.0045cb00(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42f8df;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.0045cac0(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42f8f3;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1557
    },
    "004491e0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.004491e0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x28) = arg1;\n                    *(*0x20 + -0x48) = 0x449245;\n                    fcn.00456e80(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + 0x18);\n                    arg1 = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x004492a2:\n                *(*0x20 + -0x48) = 0x4492aa;\n                iVar2 = fcn.004497c0();\n                uVar4 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x004492ba:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = 0x449305;\n                        uVar1 = fcn.00456e80(uVar3);\n                        uVar5 = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x20);\n                        uVar7 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x48) = 0x44934c;\n                fcn.0045ca80(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x004492a2;\n                *(*0x20 + -0x50) = unaff_RBP;\n                *(*0x20 + -0x48) = 0x44928f;\n                iVar2 = fcn.0045cd22();\n                unaff_RBP = *(*0x20 + -0x50);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x004492ba;\n                }\n            }\n            *(*0x20 + -0x48) = 0x449359;\n            in_RAX = fcn.0045cac0(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x44936e;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1279
    },
    "0045a540": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.0045a540(ulong param_1, ulong param_2, ulong param_3, ulong param_4, uint32_t param_5)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *unaff_RBP;\n    uchar *puVar5;\n    int64_t in_GS_OFFSET;\n    ulong uStackX8;\n    code **ppcStackX16;\n    uchar *puStackX24;\n    uint32_t uStackX32;\n    uint32_t uStackX36;\n    uchar auStack524296 [128];\n    uchar auStack524168 [262016];\n    uchar auStack262152 [128];\n    uchar auStack262024 [130944];\n    uchar auStack131080 [128];\n    uchar auStack130952 [65400];\n    ulong uStack65552;\n    uchar auStack65544 [128];\n    uchar auStack65416 [32632];\n    ulong uStack32784;\n    uchar auStack32776 [128];\n    uchar auStack32648 [16248];\n    ulong uStack16400;\n    uchar auStack16392 [128];\n    uchar auStack16264 [8056];\n    ulong uStack8208;\n    uchar auStack8200 [128];\n    uchar auStack8072 [3960];\n    ulong uStack4112;\n    uchar auStack4104 [128];\n    uchar auStack3976 [1912];\n    ulong uStack2064;\n    uchar auStack2056 [128];\n    uchar auStack1928 [888];\n    ulong uStack1040;\n    uchar auStack1032 [128];\n    uchar auStack904 [376];\n    ulong uStack528;\n    uchar auStack520 [128];\n    uchar auStack392 [120];\n    ulong uStack272;\n    uchar auStack264 [120];\n    ulong uStack144;\n    uchar auStack136 [56];\n    ulong uStack80;\n    uchar auStack72 [24];\n    ulong uStack48;\n    uchar auStack40 [8];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    if (param_5 < 0x11) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack24;\n        }\n        puVar5 = auStack24;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32 = 0x45a785;\n        fcn.0045a480();\n        uStack32 = 0x45a790;\n        (**ppcStackX16)();\n        uStack32 = 0x45a79a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32 = 0x45a7bd;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x21) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack40;\n        }\n        puVar5 = auStack40;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack48 = 0x45a845;\n        fcn.0045a480();\n        uStack48 = 0x45a850;\n        (**ppcStackX16)();\n        uStack48 = 0x45a85a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack48 = 0x45a87d;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x41) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *0x20 < *puVar1 || *0x20 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack72;\n        }\n        puVar5 = auStack72;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack80 = 0x45a905;\n        fcn.0045a480();\n        uStack80 = 0x45a910;\n        (**ppcStackX16)();\n        uStack80 = 0x45a91a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack80 = 0x45a93d;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x81) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n              &stack0xfffffffffffffff8 < *puVar1 || &stack0xfffffffffffffff8 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack136;\n        }\n        puVar5 = auStack136;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack144 = 0x45a9e4;\n        fcn.0045a480();\n        uStack144 = 0x45a9f2;\n        (**ppcStackX16)();\n        uStack144 = 0x45a9ff;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack144 = 0x45aa2e;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x101) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack136 < *puVar1 || auStack136 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack264;\n        }\n        puVar5 = auStack264;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack272 = 0x45aae7;\n        fcn.0045a480();\n        uStack272 = 0x45aaf5;\n        (**ppcStackX16)();\n        uStack272 = 0x45ab02;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack272 = 0x45ab31;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x201) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack392 < *puVar1 || auStack392 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack520;\n        }\n        puVar5 = auStack520;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack528 = 0x45abe7;\n        fcn.0045a480();\n        uStack528 = 0x45abf5;\n        (**ppcStackX16)();\n        uStack528 = 0x45ac02;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack528 = 0x45ac31;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x401) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack904 < *puVar1 || auStack904 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack1032;\n        }\n        puVar5 = auStack1032;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack1040 = 0x45ace7;\n        fcn.0045a480();\n        uStack1040 = 0x45acf5;\n        (**ppcStackX16)();\n        uStack1040 = 0x45ad02;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack1040 = 0x45ad31;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x801) {\n        while (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  auStack1928 < *puVar1 || auStack1928 == *puVar1) {\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack2056;\n        }\n        puVar5 = auStack2056;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack2064 = 0x45ade7;\n        fcn.0045a480();\n        uStack2064 = 0x45adf5;\n        (**ppcStackX16)();\n        uStack2064 = 0x45ae02;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack2064 = 0x45ae31;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1001) {\n        while( true ) {\n            if ((0xf87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack3976 && auStack3976 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack4104;\n        }\n        puVar5 = auStack4104;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack4112 = 0x45aeef;\n        fcn.0045a480();\n        uStack4112 = 0x45aefd;\n        (**ppcStackX16)();\n        uStack4112 = 0x45af0a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack4112 = 0x45af39;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2001) {\n        while( true ) {\n            if ((0x1f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack8072 && auStack8072 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack8200;\n        }\n        puVar5 = auStack8200;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack8208 = 0x45afef;\n        fcn.0045a480();\n        uStack8208 = 0x45affd;\n        (**ppcStackX16)();\n        uStack8208 = 0x45b00a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack8208 = 0x45b039;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4001) {\n        while( true ) {\n            if ((0x3f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack16264 && auStack16264 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack16392;\n        }\n        puVar5 = auStack16392;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack16400 = 0x45b0ef;\n        fcn.0045a480();\n        uStack16400 = 0x45b0fd;\n        (**ppcStackX16)();\n        uStack16400 = 0x45b10a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack16400 = 0x45b139;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8001) {\n        while( true ) {\n            if ((0x7f87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack32648 && auStack32648 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack32776;\n        }\n        puVar5 = auStack32776;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack32784 = 0x45b1ef;\n        fcn.0045a480();\n        uStack32784 = 0x45b1fd;\n        (**ppcStackX16)();\n        uStack32784 = 0x45b20a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack32784 = 0x45b239;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10001) {\n        while( true ) {\n            if ((0xff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack65416 && auStack65416 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack65544;\n        }\n        puVar5 = auStack65544;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack65552 = 0x45b2ef;\n        fcn.0045a480();\n        uStack65552 = 0x45b2fd;\n        (**ppcStackX16)();\n        uStack65552 = 0x45b30a;\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        uStack65552 = 0x45b339;\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20001) {\n        while( true ) {\n            if ((0x1ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack130952 && auStack130952 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack131080;\n        }\n        puVar5 = auStack131080;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40001) {\n        while( true ) {\n            if ((0x3ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack262024 && auStack262024 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack262152;\n        }\n        puVar5 = auStack262152;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x80001) {\n        while( true ) {\n            if ((0x7ff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10,  *puVar1 <= auStack524168 && auStack524168 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = auStack524296;\n        }\n        puVar5 = auStack524296;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x100001) {\n        while( true ) {\n            if ((0xfff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffff00078 && &stack0xfffffffffff00078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffeffff8;\n        }\n        puVar5 = &stack0xffffffffffeffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x200001) {\n        while( true ) {\n            if ((0x1fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffe00078 && &stack0xffffffffffe00078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffdffff8;\n        }\n        puVar5 = &stack0xffffffffffdffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x400001) {\n        while( true ) {\n            if ((0x3fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffffc00078 && &stack0xffffffffffc00078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffffbffff8;\n        }\n        puVar5 = &stack0xffffffffffbffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x800001) {\n        while( true ) {\n            if ((0x7fff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff800078 && &stack0xffffffffff800078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffff7ffff8;\n        }\n        puVar5 = &stack0xffffffffff7ffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x1000001) {\n        while( true ) {\n            if ((0xffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffff000078 && &stack0xffffffffff000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffefffff8;\n        }\n        puVar5 = &stack0xfffffffffefffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x2000001) {\n        while( true ) {\n            if ((0x1ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffe000078 && &stack0xfffffffffe000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffdfffff8;\n        }\n        puVar5 = &stack0xfffffffffdfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x4000001) {\n        while( true ) {\n            if ((0x3ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffffc000078 && &stack0xfffffffffc000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffffbfffff8;\n        }\n        puVar5 = &stack0xfffffffffbfffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x8000001) {\n        while( true ) {\n            if ((0x7ffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff8000078 && &stack0xfffffffff8000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xfffffffff7fffff8;\n        }\n        puVar5 = &stack0xfffffffff7fffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x10000001) {\n        while( true ) {\n            if ((0xfffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xfffffffff0000078 && &stack0xfffffffff0000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffeffffff8;\n        }\n        puVar5 = &stack0xffffffffeffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x20000001) {\n        while( true ) {\n            if ((0x1fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffe0000078 && &stack0xffffffffe0000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffdffffff8;\n        }\n        puVar5 = &stack0xffffffffdffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    if (param_5 < 0x40000001) {\n        while( true ) {\n            if ((0x3fffff87 < *0x20) &&\n               (puVar1 = **(in_GS_OFFSET + 0x28) + 0x10, \n               *puVar1 <= &stack0xffffffffc0000078 && &stack0xffffffffc0000078 != *puVar1)) break;\n            fcn.0045a3a0();\n        }\n        piVar2 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n        if ((piVar2 != NULL) && (*piVar2 == &uStackX8)) {\n            *piVar2 = &stack0xffffffffbffffff8;\n        }\n        puVar5 = &stack0xffffffffbffffff8;\n        for (uVar4 = uStackX32; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puStackX24;\n            puStackX24 = puStackX24 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0045a480();\n        (**ppcStackX16)();\n        fcn.0045a3c0(uVar4, ppcStackX16, param_3, param_4);\n        fcn.00459400(uStackX32 - uStackX36, uStackX8);\n        return;\n    }\n    iVar3 = **(in_GS_OFFSET + 0x28);\n    do {\n        puVar1 = iVar3 + 0x10;\n        if (*puVar1 <= *0x20 && *0x20 != *puVar1) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436887;\n            fcn.00432ec0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43688d;\n        fcn.0045a3a0();\n    } while( true );\n}\n",
        "token_count": 9554
    },
    "00463700": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint64_t fcn.00463700(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.00457fe0();\n    if (uVar1 < in_RAX[1]) {\n        return uVar1 * 0x80 + *in_RAX;\n    }\n    iVar2 = fcn.00463780();\n    return iVar2;\n}\n",
        "token_count": 158
    },
    "00470160": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nuint64_t fcn.00470160(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return in_EAX << 6;\n            }\n            if (arg1 + 0x15cU < 0x2b8) {\n                uVar1 = *((arg1 + 0x15cU) * 0x10 + 0x534e48);\n                if (arg1 < 0) {\n                    uVar1 = uVar1 + 1;\n                }\n                return SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1) >> 0x40, 0) << 7 |\n                       SUB168(ZEXT416(in_EAX) * ZEXT816(uVar1), 0) >> 0x39;\n            }\n            unaff_RBX = 0x4c9c30;\n            *(*0x20 + -0x20) = 0x470211;\n            in_EAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_EAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x470225;\n        fcn.0045a3a0();\n        in_EAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "0042a9c0": {
        "rules": [
            "encrypt data using HC-128/425018b86d394d5ebff49c9438559e47"
        ],
        "decompiled_code": "\nvoid fcn.0042a9c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *0x593540 = *0x593540 + ((*0x593540 + 1U) / 0x6000000) * -0x6000000 + 1;\n    *0x593544 = 0;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 147
    },
    "00471860": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint64_t fcn.00471860(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint16_t uVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    \n    iVar11 = *0x538410;\n    uVar4 = in_RAX;\n    if (uVar4 < 0x100) {\n        if (uVar4 - 0x20 < 0x5f) {\n            return 1;\n        }\n        if (0xa0 < uVar4) {\n            return in_RAX & 0xffffffffffffff00 | uVar4 != 0xad;\n        }\n        return 0;\n    }\n    if (uVar4 < 0x10000) {\n        uVar15 = 0;\n        uVar5 = *0x538438;\n        uVar10 = *0x5383f8;\n        uVar13 = *0x5383f0;\n        iVar11 = *0x538430;\n        uVar14 = *0x538438;\n    }\n    else {\n        uVar6 = 0;\n        uVar7 = *0x538458;\n        while (uVar5 = uVar7,  uVar10 = *0x538418,  uVar13 = *0x538450,  uVar14 = *0x538458,  uVar6 < uVar5) {\n            iVar8 = uVar5 - uVar6 >> 1;\n            uVar7 = iVar8 + uVar6;\n            uVar15 = uVar6;\n            if (*0x538458 <= uVar7) goto code_r0x00471a3b;\n            if (*(*0x538450 + uVar7 * 4) < uVar4) {\n                uVar6 = uVar6 + iVar8 + 1;\n                uVar7 = uVar5;\n            }\n        }\n        if (*0x538458 <= uVar6) {\n            return 0;\n        }\n        uVar15 = uVar6 & 0xfffffffffffffffe;\n        if (uVar15 < *0x538458) {\n            uVar2 = *(*0x538450 + uVar15 * 4);\n            uVar15 = uVar2;\n            if (uVar4 < uVar2) {\n                return 0;\n            }\n            uVar6 = uVar6 | 1;\n            if (uVar6 < *0x538458) {\n                if (*(*0x538450 + uVar6 * 4) < uVar4) {\n                    return 0;\n                }\n                if (0x1ffff < uVar4) {\n                    return 1;\n                }\n                uVar13 = uVar4 - 0x10000;\n                uVar7 = 0;\n                uVar5 = *0x538418;\n                while (uVar9 = uVar5,  uVar12 = uVar4 - 0x10000,  uVar7 < uVar9) {\n                    uVar10 = uVar9 - uVar7 >> 1;\n                    uVar15 = uVar10 + uVar7;\n                    uVar5 = *0x538418;\n                    uVar14 = uVar9;\n                    if (*0x538418 <= uVar15) goto code_r0x00471a16;\n                    uVar1 = *(*0x538410 + uVar15 * 2);\n                    uVar6 = uVar1;\n                    uVar5 = uVar15;\n                    uVar14 = uVar15;\n                    if (uVar1 < uVar12) {\n                        uVar7 = uVar7 + uVar10 + 1;\n                        uVar5 = uVar9;\n                        uVar14 = uVar9;\n                    }\n                }\n                if (*0x538418 <= uVar7) {\n                    return 1;\n                }\n                if (uVar7 < *0x538418) {\n                    uVar1 = *(*0x538410 + uVar7 * 2);\n                    return uVar1 & 0xff00 | uVar1 != uVar12;\n                }\n                uVar10 = *0x538418;\n                uVar5 = fcn.0045ca80(*0x538418);\ncode_r0x00471a16:\n                fcn.0045ca80(uVar5);\n            }\n            fcn.0045ca80(uVar14);\n        }\n        fcn.0045ca80(uVar14);\n        uVar5 = uVar6;\ncode_r0x00471a3b:\n        in_RAX = fcn.0045ca80(uVar14);\n    }\n    while (uVar6 = uVar5,  uVar12 = in_RAX,  uVar15 < uVar6) {\n        iVar8 = uVar6 - uVar15 >> 1;\n        uVar5 = iVar8 + uVar15;\n        if (uVar14 <= uVar5) goto code_r0x00471b51;\n        if (*(iVar11 + uVar5 * 2) < uVar12) {\n            uVar15 = uVar15 + iVar8 + 1;\n            uVar5 = uVar6;\n        }\n    }\n    if (uVar14 <= uVar15) {\n        return 0;\n    }\n    if ((uVar15 & 0xfffffffffffffffe) < uVar14) {\n        if (uVar12 < *(iVar11 + (uVar15 & 0xfffffffffffffffe) * 2)) {\n            return 0;\n        }\n        if ((uVar15 | 1) < uVar14) {\n            if (*(iVar11 + (uVar15 | 1) * 2) < uVar12) {\n                return 0;\n            }\n            uVar6 = 0;\n            uVar5 = uVar10;\n            uVar7 = uVar14;\n            while (uVar14 = uVar5,  uVar6 < uVar14) {\n                iVar11 = uVar14 - uVar6 >> 1;\n                uVar7 = iVar11 + uVar6;\n                if (uVar10 <= uVar7) goto code_r0x00471b33;\n                uVar5 = uVar7;\n                if (*(uVar13 + uVar7 * 2) < uVar12) {\n                    uVar6 = uVar6 + iVar11 + 1;\n                    uVar5 = uVar14;\n                    uVar7 = uVar14;\n                }\n            }\n            if (uVar10 <= uVar6) {\n                return 1;\n            }\n            if (uVar6 < uVar10) {\n                uVar1 = *(uVar13 + uVar6 * 2);\n                return uVar1 & 0xff00 | uVar1 != uVar12;\n            }\n            fcn.0045ca80(uVar10);\n            uVar14 = uVar7;\ncode_r0x00471b33:\n            fcn.0045ca80(uVar10);\n        }\n        fcn.0045ca80(uVar14);\n    }\n    fcn.0045ca80(uVar14);\ncode_r0x00471b51:\n    fcn.0045ca80(uVar14);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1691
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                do {\n                    while (arg1 = *in_RAX,  arg1 == 0) {\n                        *(*0x20 + -0x28) = 0x4010cc;\n                        fcn.00458020();\n                        *(*0x20 + -0x28) = 0x4010df;\n                        cVar1 = fcn.00457400(0x593417);\n                        if (cVar1 != '\\0') {\n                            *(*0x20 + -0x28) = 0x401129;\n                            fcn.004573a0(*(*0x20 + 8));\n                            *(*0x20 + -0x28) = 0x401138;\n                            fcn.004573a0();\n                            *(*0x20 + -0x28) = 0x40113d;\n                            fcn.00458040();\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x4010e9;\n                        fcn.00458040();\n                        in_RAX = *(*0x20 + 8);\n                    }\n                } while (arg1 == 0x593417);\n                if (*(*0x20 + 0x10) == arg1) {\n                    *(*0x20 + -0x28) = 0x40110c;\n                    fcn.004573a0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x40115a;\n                fcn.00432ec0();\n            }\n            unaff_RBX = 0x4c9c60;\n            *(*0x20 + -0x28) = 0x40116d;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x401185;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 724
    },
    "00401200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401200(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004017c0();\n    fcn.00401260();\n    return;\n}\n",
        "token_count": 91
    },
    "00402d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402dad)\n\nint64_t fcn.00402d80(void)\n\n{\n    float *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045c4a0(4);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 180
    },
    "00402e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402eaf)\n\nint64_t fcn.00402e80(void)\n\n{\n    double *in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*in_RAX != 0.0) {\n        iVar1 = fcn.0045c4a0(8);\n        return iVar1;\n    }\n    return (unaff_RBX ^ 0x756ea16a56a621) * 0x52ef6bbb8f63bf;\n}\n",
        "token_count": 181
    },
    "00402f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402f80(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00402d80();\n    fcn.00402d80(in_RAX + 4);\n    return;\n}\n",
        "token_count": 107
    },
    "00402fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402fe0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00402e80();\n    fcn.00402e80(in_RAX + 8);\n    return;\n}\n",
        "token_count": 107
    },
    "00403aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403aa0(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1260) + 0x10;\n    *(iVar1 + 0x1260) = iVar3;\n    if (*(iVar1 + 0x1268) == iVar3) {\n        fcn.0042cca0();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00404340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00404340(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x00423da0();\n    if (cVar2 == '\\0') {\n        if (*0x53ecd8 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x53ecd8;\n            iVar4 = (*0x53ecd8)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 317
    },
    "00404fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404fe0(void)\n\n{\n    fcn.00405020(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00405d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405d20(void)\n\n{\n    fcn.00405d60(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00406720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00406720(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar1 = *0x593450;\n    fcn.0040ae40();\n    if ((0 < in_RAX) && (in_RAX != iVar1)) {\n        fcn.00438160();\n        *0x593464 = in_RAX;\n        fcn.004381e0();\n        return iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 175
    },
    "00407140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00407140(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x407220);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 221
    },
    "00407280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00407280(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.00435040();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 934
    },
    "004083e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004083e0(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0xb31a546e) {\n            if (uVar4 < 0x7925028d) {\n                if (uVar4 < 0x2ea27ffc) {\n                    if (uVar4 == 0x13ff06c5) {\n                        if (in_RAX == 0x494fc0) {\n                            fcn.00434de0();\n                            fcn.00435080();\n                            fcn.00434e60();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x2ea27ffb) && (uVar5 = 0x495140,  in_RAX == 0x495140)) {\n                        fcn.00434de0();\n                        fcn.004350e0(uVar5, param_2);\n                        fcn.00434e60();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x663e425f) {\n                    if (in_RAX == 0x495d40) {\n                        fcn.00434de0();\n                        fcn.004353e0();\n                        fcn.00434e60();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x7925028c) && (in_RAX == 0x4950c0)) {\n                    fVar1 = *(unaff_RBX + 4);\n                    fVar2 = *unaff_RBX;\n                    fcn.00434de0();\n                    fcn.00435340(fVar2, fVar1);\n                    fcn.00434e60();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x963f9c00) {\n                if (uVar4 == 0x86318d2e) {\n                    if (in_RAX == 0x495d00) {\n                        fcn.00434de0();\n                        fcn.004353e0();\n                        fcn.00434e60();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x963f9bff) && (in_RAX == 0x4955c0)) {\n                    fcn.00434de0();\n                    fcn.004354e0();\n                    fcn.00434e60();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xb0c23ed3) {\n                uVar5 = 0x495100;\n                if (in_RAX == 0x495100) {\n                    fcn.00434de0();\n                    fcn.004350e0(uVar5, param_2);\n                    fcn.00434e60();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xb31a546d) && (in_RAX == 0x495080)) {\n                uVar5 = unaff_RBX[1];\n                uVar3 = *unaff_RBX;\n                fcn.00434de0();\n                fcn.00435340(uVar3, uVar5);\n                fcn.00434e60();\n                return;\n            }\n        }\n        else if (uVar4 < 0xd04ae83e) {\n            if (uVar4 < 0xbd4ad793) {\n                if (uVar4 == 0xbbad4102) {\n                    if (in_RAX == 0x495580) {\n                        fcn.00434de0();\n                        fcn.004354e0();\n                        fcn.00434e60();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0xbd4ad792) && (in_RAX == 0x495d80)) {\n                    fcn.00434de0();\n                    fcn.004353e0();\n                    fcn.00434e60();\n                    return;\n                }\n            }\n            else if (uVar4 == 0xcc06c027) {\n                if (in_RAX == 0x495600) {\n                    fcn.00434de0();\n                    fcn.004354e0();\n                    fcn.00434e60();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xd04ae83d) && (in_RAX == 0x495cc0)) {\n                fcn.00434de0();\n                fcn.004353e0();\n                fcn.00434e60();\n                return;\n            }\n        }\n        else if (uVar4 < 0xe0ff5cb5) {\n            if (uVar4 == 0xd5b87712) {\n                if (in_RAX == 0x495c40) {\n                    fcn.00434de0();\n                    fcn.004353e0();\n                    fcn.00434e60();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xe0ff5cb4) && (in_RAX == 0x495bc0)) {\n                fcn.00434de0();\n                fcn.004356e0();\n                fcn.00434e60();\n                return;\n            }\n        }\n        else if (uVar4 == 0xecd580ce) {\n            if (in_RAX == 0x495540) {\n                fcn.00434de0();\n                fcn.004354e0();\n                fcn.00434e60();\n                return;\n            }\n        }\n        else if (uVar4 == 0xeff20ea0) {\n            if (in_RAX == 0x495c80) {\n                fcn.00434de0();\n                fcn.004353e0();\n                fcn.00434e60();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xf75371fa) && (in_RAX == 0x495500)) {\n            fcn.00434de0();\n            fcn.004354e0();\n            fcn.00434e60();\n            return;\n        }\n        fcn.00408940();\n        return;\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 1507
    },
    "00409c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00409c00(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 207
    },
    "00409da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409da0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "0040a1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a1c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if (*0x53ecd8 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x53ecd8;\n        iVar3 = (*0x53ecd8)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x170);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00409c60();\n        }\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 271
    },
    "0040a560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040a560(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_EAX < 0x100) {\n        puVar1 = in_EAX * 8 + 0x532a60;\n    }\n    else {\n        puVar1 = fcn.0040c300(0);\n        *puVar1 = in_EAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 162
    },
    "0040a5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0040a5e0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x532a60;\n    }\n    else {\n        puVar1 = fcn.0040c300(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 164
    },
    "0040a860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040a860(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00409900(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "0040a900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a900(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x5379d8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0040abe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040abe0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040b540();\n    return;\n}\n",
        "token_count": 84
    },
    "0040ae00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ae00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040b580();\n    return;\n}\n",
        "token_count": 84
    },
    "0040b380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b380(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40b3b7;\n                fcn.0042ffe0();\n                *(*0x20 + -0x40) = 0x40b3ca;\n                fcn.0040b0e0(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40b3e5;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40b3f5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 418
    },
    "0040b420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040b420(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40b457;\n                fcn.0042ffe0();\n                *(*0x20 + -0x48) = 0x40b45c;\n                fcn.0043d5a0();\n                *(*0x20 + -0x48) = 0x40b46f;\n                uVar1 = fcn.0040b0e0(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40b478;\n                fcn.00457da0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40b498;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40b4a8;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "0040b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b540(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    return;\n}\n",
        "token_count": 84
    },
    "0040b580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b580(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 84
    },
    "0040bf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040bf80(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x48) = 0x40bfd3;\n                uVar1 = fcn.00415fc0();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x48) = 0x40c005;\n                fcn.00415e80(0);\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x48) = 0x40c02d;\n                uVar1 = fcn.00415fc0();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                arg1 = 0;\n                *(*0x20 + -0x48) = 0x40c049;\n                fcn.00415e80(0);\n                if (*(*0x20 + -0x28) == 99) break;\n                iVar2 = *(*0x20 + -0x28) + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40c09d;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40c0b2;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 790
    },
    "0040c0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040c0e0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40c12d;\n                uVar1 = fcn.00411b20(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40c165;\n                        fcn.004148e0();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40c17e;\n                        uVar1 = fcn.00411b20(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040c192;\n                    }\n                }\n                else {\ncode_r0x0040c192:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40c1e5;\n                        fcn.00434de0();\n                        *(*0x20 + -0x48) = 0x40c1f6;\n                        fcn.004356e0();\n                        *(*0x20 + -0x48) = 0x40c205;\n                        fcn.004353e0();\n                        *(*0x20 + -0x48) = 0x40c216;\n                        fcn.004356e0();\n                        *(*0x20 + -0x48) = 0x40c225;\n                        fcn.004353e0();\n                        *(*0x20 + -0x48) = 0x40c22a;\n                        fcn.00435040();\n                        *(*0x20 + -0x48) = 0x40c22f;\n                        fcn.00434e60();\n                        *(*0x20 + -0x48) = 0x40c245;\n                        fcn.00433640();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40c256;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40c265;\n                fcn.00434de0();\n                *(*0x20 + -0x48) = 0x40c276;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x40c285;\n                fcn.004353e0();\n                *(*0x20 + -0x48) = 0x40c296;\n                fcn.004356e0();\n                *(*0x20 + -0x48) = 0x40c2a5;\n                fcn.004353e0();\n                *(*0x20 + -0x48) = 0x40c2aa;\n                fcn.00435040();\n                *(*0x20 + -0x48) = 0x40c2af;\n                fcn.00434e60();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40c2c5;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x48) = 0x40c2d2;\n            in_RAX = fcn.0045ca80(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40c2e5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1449
    },
    "0040cd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cd00(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040c300(1, *in_RAX);\n    return;\n}\n",
        "token_count": 98
    },
    "0040d060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040d060(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40d120;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.0045a260();\n    return uStack56;\n}\n",
        "token_count": 145
    },
    "0040d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040d840(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = fcn.0040cd00();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 243
    },
    "00411ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ac0(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.00412240(unaff_RBX);\n    fcn.0045d100();\n    return;\n}\n",
        "token_count": 45
    },
    "00411b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411b00(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 63
    },
    "00412020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00412020(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.0045caa0(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x565870);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "004147c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004147c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 84
    },
    "00414f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414f40(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x565810) {\n                return;\n            }\n            if (iVar1 == *0x565810 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x414f79;\n                fcn.00414d60();\n                *(*0x20 + -0x28) = 0x414f85;\n                fcn.00445e80();\n                *(*(*0x20 + 8) + 0x488) = *0x565810;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x565810;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x414fb8;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x414fc9;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x414fd2;\n            fcn.004353e0();\n            *(*0x20 + -0x28) = 0x414fe5;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x414fee;\n            fcn.004353e0();\n            *(*0x20 + -0x28) = 0x414ff3;\n            fcn.00435040();\n            *(*0x20 + -0x28) = 0x414ff8;\n            fcn.00434e60();\n            *(*0x20 + -0x28) = 0x415009;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x415014;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 620
    },
    "00415620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415620(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x565ab8;\n            *(*0x20 + -0x18) = *0x565ac0;\n            iVar2 = 0;\n            iVar3 = *0x565ab8;\n            iVar5 = *0x565ac0;\n            while( true ) {\n                if (iVar5 <= iVar2) {\n                    *0x593411 = 1;\n                    return;\n                }\n                uVar1 = *(iVar3 + iVar2 * 8);\n                uVar6 = uVar1 >> 0x14;\n                if (0x3f < uVar6) break;\n                *(*0x20 + -0x20) = iVar2;\n                iVar2 = *(*(uVar6 * 8 + 0x565870) + (uVar1 & 0xfffff) * 8);\n                iVar5 = *(iVar2 + 0x210c0);\n                if (iVar5 == 0) {\n                    *(*0x20 + -0x28) = iVar2;\n                    iVar3 = 0x595118;\n                    *(*0x20 + -0x48) = 0x4156d1;\n                    iVar2 = fcn.0040d060(0x595118);\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x48) = 0x415709;\n                        fcn.00433640();\n                        goto code_r0x00415709;\n                    }\n                    *(*(*0x20 + -0x28) + 0x210c0) = iVar2;\n                }\n                else {\n                    for (iVar3 = 0; iVar3 < 0x10000; iVar3 = iVar3 + 1) {\ncode_r0x00415709:\n                        *(iVar5 + iVar3) = 0;\n                    }\n                }\n                iVar2 = *(*0x20 + -0x20) + 1;\n                iVar5 = *(*0x20 + -0x18);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x48) = 0x41572c;\n            fcn.0045caa0(0x40);\n        }\n        *(puVar4 + -8) = 0x415732;\n        fcn.0045a3a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "00415740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415740(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53f9e0 == 0) {\n                if (*0x53fa68 < *0x53fa6c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x593411 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4157a9;\n            fcn.00433640();\n        }\n        *(puVar2 + -8) = 0x4157af;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 301
    },
    "004157c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004157c0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x565870) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x41587a;\n                in_RAX = fcn.0045caa0(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41588e;\n            fcn.00434de0();\n            *(*0x20 + -0x40) = 0x415893;\n            fcn.00434de0();\n            *(*0x20 + -0x40) = 0x4158a5;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x4158af;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x4158b4;\n            fcn.00435040();\n            *(*0x20 + -0x40) = 0x4158b9;\n            fcn.00434e60();\n            *(*0x20 + -0x40) = 0x4158be;\n            fcn.00434de0();\n            *(*0x20 + -0x40) = 0x4158cf;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x4158d9;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x4158ea;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x4158f4;\n            fcn.00435540();\n            *(*0x20 + -0x40) = 0x415905;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x41590a;\n            fcn.00434e60();\n            *(*0x20 + -0x40) = 0x415925;\n            fcn.0041d6c0(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x415945;\n            fcn.0041d6c0(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x415965;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x415989;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1253
    },
    "004159c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004159c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.0042c9a0();\n    fcn.00430b00();\n    return uStack24;\n}\n",
        "token_count": 46
    },
    "00415f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415f80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00415a40();\n    return;\n}\n",
        "token_count": 84
    },
    "00415fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415fc0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430b00();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.00430b00();\n    return 0;\n}\n",
        "token_count": 124
    },
    "004160c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004160c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0042c9a0();\n    return;\n}\n",
        "token_count": 89
    },
    "00417240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417240(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *0x53f81c = 0x80000000;\n    fcn.0041ee60();\n    *0x593ce8 = 0x400000;\n    *0x593d08 = 0x3feccccccccccccd;\n    *0x593d10 = 0x4010000000000000;\n    *0x593d18 = 0x408f400000000000;\n    *0x593d20 = 0xc08f400000000000;\n    *0x593d28 = 0x408f400000000000;\n    *0x593d30 = in_XMM15;\n    fcn.0041ede0();\n    *0x53fad8 = 0x100000001;\n    return;\n}\n",
        "token_count": 249
    },
    "00419220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419220(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (; *0x593440 < *0x593450; *0x593440 = *0x593440 + 1) {\n        fcn.0043e020();\n        fcn.0040b420();\n        *0x53fae0 = 0;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0041a600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a600(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53fa6c <= *0x53fa68) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x41a6e0;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x41a657;\n                fcn.00436b60();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x53fa68;\n            *(*0x20 + -0x28) = *0x53fa6c;\n            *(*0x20 + -0x40) = 0x41a66e;\n            fcn.00434de0();\n            *(*0x20 + -0x40) = 0x41a677;\n            fcn.004353e0();\n            *(*0x20 + -0x40) = 0x41a688;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x41a691;\n            fcn.004353e0();\n            *(*0x20 + -0x40) = 0x41a6a5;\n            fcn.004356e0();\n            *(*0x20 + -0x40) = 0x41a6aa;\n            fcn.00434e60();\n            *(*0x20 + -0x40) = 0x41a6bb;\n            fcn.00433640();\n        }\n        *(puVar1 + -8) = 0x41a6c5;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 553
    },
    "0041adc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041adc0(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.0041cbc0(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 216
    },
    "0041b860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b860(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *0x53fb18 = in_XMM15;\n    fcn.0043bb20();\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 124
    },
    "0041d320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d320(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg3 = 0;\n    iVar1 = fcn.00411ec0(0);\n    if (iVar1 != 0) {\n        fcn.0041d3a0(0, *(*(unaff_R14 + 0x30) + 0xa0), arg3);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0041dc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041dc20(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x53f648,  iVar1 = *0x53f640,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.00411ec0(0);\n            fcn.0041d3a0(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0041dfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041dfe0(void)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar2 = *in_RAX;\n    iVar7 = *(in_RAX + 0x1a);\n    if (iVar2 < 0) {\n        iVar2 = 100000;\n    }\n    iVar5 = *(in_RAX + 0x2c) + *(in_RAX + 0x2e) + *(in_RAX + 0x30);\n    iVar6 = *(in_RAX + 0x22) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    iVar4 = *(in_RAX + 0x20) + *(in_RAX + 0x24) + *(in_RAX + 0x28);\n    if (iVar6 < iVar5) {\n        iVar1 = *(in_RAX + 6) + ((iVar7 - *(in_RAX + 6)) / iVar6) * iVar4;\n        iVar3 = (*0x4c9738 + iVar2 / *0x4c9770) * iVar7;\n        iVar6 = iVar4;\n        iVar7 = iVar1;\n        if (iVar3 < iVar1) {\n            iVar7 = iVar3;\n        }\n    }\n    if (iVar7 < *(in_RAX + 0x1e)) {\n        iVar7 = *0x4c9740 * iVar7;\n        iVar6 = iVar4;\n    }\n    iVar6 = iVar6 - iVar5;\n    if (iVar6 < 1000) {\n        iVar6 = 1000;\n    }\n    iVar7 = iVar7 - *(in_RAX + 0x1e);\n    if (iVar7 < 1) {\n        iVar7 = 1;\n    }\n    *(in_RAX + 0x40) = iVar6 / iVar7;\n    *(in_RAX + 0x42) = iVar7 / iVar6;\n    return;\n}\n",
        "token_count": 481
    },
    "0041fd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041fd80(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000 < arg1 + 0x800000000000U) {\n                iVar1 = arg1 - unaff_RBX;\n            }\n            else {\n                iVar1 = 0;\n            }\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((unaff_RBX & 0x3fffff) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x20) = unaff_EDI;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x10) = in_RAX + 0x100b8;\n                *(*0x20 + -0x40) = 0x41fdf8;\n                fcn.0040ac20();\n                if (*(*(*0x20 + 8) + 0x100e8) == *(*0x20 + 0x20)) {\n                    *(*0x20 + -0x40) = 0x41fe1f;\n                    fcn.0042bb00(*(*0x20 + -0x20));\n                }\n                *(*0x20 + -0x40) = 0x41fe2b;\n                fcn.0040ae40();\n                return;\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x40) = 0x41fe50;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = iVar1;\n        *(puVar2 + 0x20) = unaff_EDI;\n        *(puVar2 + -8) = 0x41fe69;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 695
    },
    "00420880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420880(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX - 1 & unaff_RBX) == 0) && (unaff_RBX != 0)) {\n                if (unaff_RBX < 0x41) {\n                    *(*0x20 + 8) = in_RAX;\n                    iVar3 = 7;\n                    while( true ) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        *(*0x20 + -0x10) = iVar3;\n                        uVar1 = *(in_RAX + 0x40 + iVar3 * 8);\n                        uVar2 = *(in_RAX + iVar3 * 8);\n                        *(*0x20 + -0x28) = 0x4208f5;\n                        iVar3 = fcn.004206c0(iVar3, uVar1 | uVar2);\n                        if (iVar3 != -1) break;\n                        iVar3 = *(*0x20 + -0x10) + -1;\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    return 1;\n                }\n                *(*0x20 + -0x28) = 0x42091b;\n                fcn.00434de0();\n                *(*0x20 + -0x28) = 0x42092c;\n                fcn.004356e0();\n                *(*0x20 + -0x28) = 0x420936;\n                fcn.004353e0();\n                *(*0x20 + -0x28) = 0x42093b;\n                fcn.00435040();\n                *(*0x20 + -0x28) = 0x420945;\n                fcn.00434e60();\n                *(*0x20 + -0x28) = 0x420956;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x28) = 0x42095b;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x42096c;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x420976;\n            fcn.004353e0();\n            *(*0x20 + -0x28) = 0x42097b;\n            fcn.00435040();\n            *(*0x20 + -0x28) = 0x420985;\n            fcn.00434e60();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x28) = 0x420996;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4209a6;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 872
    },
    "00420d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420d00(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x420dad;\n                    iVar1 = fcn.004234a0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x420d87;\n                        iVar1 = fcn.004234a0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x420deb;\n                fcn.0045ca80(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x420dfc;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x420e10;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 878
    },
    "00422d21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00422d21(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x53f81c == -0x80000000) {\n        *0x565850 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x593d58) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x565830 - *0x565838 < 1) {\n            *0x565850 = 0.0;\n        }\n        else {\n            *0x565850 = (*0x565830 - *0x565838) / iVar1;\n            *0x565848 = *0x593d58;\n            *0x565840 = *0x565838;\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00422dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422dc0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.004234a0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.004237e0();\n    if (iVar2 == 0) {\n        iVar2 = fcn.004234a0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 165
    },
    "00423720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423720(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00423440();\n    fcn.0040a9c0();\n    return;\n}\n",
        "token_count": 93
    },
    "00423780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423780(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004233e0();\n    fcn.0040a9c0();\n    return;\n}\n",
        "token_count": 94
    },
    "004237e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004237e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53f9e0 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x53f9e0 >> 0x13) << 3;\n        *0x53f9e0 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.004233e0();\n    return piVar1;\n}\n",
        "token_count": 185
    },
    "00423880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00423880(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x4238a5;\n            iVar2 = fcn.004234a0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x4238f3;\n                fcn.0045d3c0(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x4238fd;\n                fcn.00423780();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x423919;\n            in_RAX = fcn.0045ca80(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x423925;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00423e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00423e40(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x565870);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "004246a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004246a0(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x424760;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&uStack56, auStack24._0_8_);\n    fcn.0045a260();\n    return uStack56;\n}\n",
        "token_count": 253
    },
    "004247e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004247e0(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x4247ff;\n                fcn.00424ba0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x42481a;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42482e;\n        fcn.0045eaa0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 366
    },
    "004254c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004254c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 84
    },
    "004255c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004255c0(uint8_t param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045eaa0();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.0040ac20();\n    fcn.00425640(param_1);\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 131
    },
    "004262e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004262e0(void)\n\n{\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    puVar1 = fcn.00425ec0();\n    if (puVar1 != NULL) {\n        fcn.0040ac20();\n        *0x56c1d8 = *0x56c1d8 - *0x56c1a8;\n        *puVar1 = *0x56c1c0;\n        *0x56c1c0 = puVar1;\n        fcn.0040ae40();\n        return;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00426380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426380(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4263af;\n            fcn.0040ac20();\n            *(*0x20 + -0x30) = 0x4263bb;\n            uVar3 = fcn.00417100();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x4263ce;\n            fcn.0040ae40();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x4263ea;\n            cVar2 = fcn.00425c80();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x426409;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x426419;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 539
    },
    "00426580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00426580(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x593710;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x593710 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x593710 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00426614:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x426635;\n                fcn.0040ac20();\n                piVar2 = *0x593710;\n                if (*0x593710 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x593710 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004266b4:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42682c;\n                        fcn.0040ae40();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x4266c5;\n                    piVar4 = fcn.004269a0();\n                    piVar2 = *0x593710;\n                    if (*0x593710 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x593710 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00426740:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x593708;\n                            *(*0x20 + -0x48) = 0x42680a;\n                            *0x593708 = piVar4;\n                            fcn.0040ae40();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x004267a5:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x593710;\n                                *(*0x20 + -0x48) = 0x4267d6;\n                                *0x593710 = piVar4;\n                                fcn.0040ae40();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x426859;\n                            fcn.00433640();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x004267a5;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x004267a5;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x426866;\n                        fcn.0045caa0(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x593710;\n                        **0x593710 = **0x593710 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00426740;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x00426740;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x426873;\n                    fcn.0045caa0(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x593710;\n                    **0x593710 = **0x593710 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004266b4;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004266b4;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x42687d;\n                fcn.0045caa0(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x593710;\n                **0x593710 = **0x593710 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00426614;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00426614;\n                }\n            }\n            *(*0x20 + -0x48) = 0x426887;\n            in_RAX = fcn.0045caa0(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x426892;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1773
    },
    "004268a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004268a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00426580();\n    return;\n}\n",
        "token_count": 83
    },
    "004268e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004268e0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    if (*0x593720 != 0) {\n        iVar1 = *0x593720;\n        if (*0x593708 == 0) {\n            *0x593708 = *0x593720;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x593708;\n            *0x593708 = *0x593720;\n        }\n    }\n    uVar2 = *0x593710;\n    *0x593720 = *0x593718;\n    *0x593718 = *0x593710;\n    *0x593710 = 0;\n    fcn.0040ae40(uVar2);\n    return;\n}\n",
        "token_count": 278
    },
    "004269a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004269a0(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x593708 != 0) {\n                *(*0x20 + -0x18) = *0x593708;\n                *0x593708 = *(*0x593708 + 8);\n                *(*0x20 + -0x30) = 0x4269df;\n                fcn.0045d100();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00426a22;\n            }\n            *(*0x20 + -0x30) = 0x4269f4;\n            fcn.0040ae40();\n            *(*0x20 + -0x30) = 0x426a05;\n            iVar1 = fcn.004159c0();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x426a1d;\n                fcn.0040ac20();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00426a22:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x426a45;\n            fcn.00433640();\n        }\n        *(puVar3 + -8) = 0x426a4b;\n        fcn.0045a3a0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "00428c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00428c00(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.0045ca80(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 702
    },
    "0042ae40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.0042ae40(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x5934c8 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x5934c8) {\n        uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n        auVar2 = SEXT816(*0x5934c8);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0)) & 0xffffffffffffffff) % auVar2, \n                                0);\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.0042af20(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "0042b120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b120(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435660();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    else {\n        fcn.00454ee0();\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435660();\n        fcn.004356e0();\n        fcn.00435540();\n        fcn.004356e0();\n        fcn.004356e0();\n        fcn.004356e0();\n        fcn.00434e60();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00454300();\n        fcn.0045a260();\n    }\n    else {\n        fcn.00454300();\n        fcn.00453660(0);\n    }\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 426
    },
    "0042b3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b3c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435660();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.00434e60();\n    fcn.00454300();\n    fcn.0045a260();\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 245
    },
    "0042b560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b560(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00434e60();\n    fcn.00454540();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00434e60();\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 227
    },
    "0042b620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0042b620(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x42b670;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42b685;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 340
    },
    "0042b6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b6a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x42b74a;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42b765;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 580
    },
    "0042b780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b780(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX + 0x800000000000U < arg1 + 0x800000000000U) {\n        if (unaff_RBX + 0x800000000000U <= arg1 + 0x800000000000U) {\n            return in_RAX;\n        }\n        iVar1 = fcn.0042b620();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0042b8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042b8e0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x0042b9d0;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.0045ca80(arg1);\ncode_r0x0042b9d0:\n    fcn.0045ca80(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 520
    },
    "0042b9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042b9e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t *arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42ba07;\n            piVar3 = fcn.0042b8e0();\n            if (piVar3 == NULL) {\n                arg1 = (*(*0x20 + 8))[1];\n                if (arg1 != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (piVar3 - 1U < arg1) {\n                    iVar5 = (piVar3 - 1U) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= piVar3) {\n                        return 0;\n                    }\n                    if (piVar3 < arg1) {\n                        return *(piVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42bac8;\n                    fcn.0045ca80(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42bad0;\n                fcn.0045ca80(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42bad7;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42bae7;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 707
    },
    "0042c060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c060(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uint64_t uVar6;\n    \n    iVar1 = *in_RAX;\n    if (in_RAX[1] == 0) {\n        return 0;\n    }\n    iVar4 = in_RAX[1] + -1;\n    iVar5 = iVar4 * 0x10;\n    iVar2 = *(iVar1 + 8 + iVar5);\n    iVar3 = *(iVar1 + iVar5);\n    if (iVar3 + 0x800000000000U < iVar2 + 0x800000000000U) {\n        uVar6 = iVar2 - iVar3;\n    }\n    else {\n        uVar6 = 0;\n    }\n    if (unaff_RBX < uVar6) {\n        *(iVar1 + 8 + iVar5) = iVar2 - unaff_RBX;\n        in_RAX[3] = in_RAX[3] - unaff_RBX;\n        return iVar2 - unaff_RBX;\n    }\n    in_RAX[1] = iVar4;\n    in_RAX[3] = in_RAX[3] - uVar6;\n    return iVar3;\n}\n",
        "token_count": 312
    },
    "0042c0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c0e0(void)\n\n{\n    int64_t iVar1;\n    uint64_t arg2;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t *puVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = 0x42c107;\n            uVar2 = fcn.0042b8e0();\n            if (uVar2 == 0) {\n                iVar12 = *(*0x20 + 8);\n                *(iVar12 + 0x18) = 0;\n                *(iVar12 + 8) = 0;\n                return;\n            }\n            puVar9 = *(*0x20 + 8);\n            uVar10 = *puVar9;\n            uVar5 = puVar9[1];\n            if (uVar2 <= uVar5) break;\n            *(*0x20 + -0x58) = 0x42c2ea;\n            in_RAX = fcn.0045cb40(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x42c2fa;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n    uVar5 = uVar5 - uVar2;\n    piVar11 = (uVar2 << 4 & uVar2 - puVar9[2] >> 0x3f) + uVar10;\n    if (uVar5 == 0) {\n        iVar12 = 0;\n        goto code_r0x0042c174;\n    }\n    iVar3 = 0;\n    iVar6 = 0;\n    do {\n        if (*piVar11 + 0x800000000000U < piVar11[1] + 0x800000000000U) {\n            iVar12 = piVar11[1] - *piVar11;\n        }\n        else {\n            iVar12 = 0;\n        }\n        iVar3 = iVar3 + 1;\n        iVar12 = iVar12 + iVar6;\n        iVar6 = iVar12;\n        if (uVar5 <= iVar3) {\ncode_r0x0042c174:\n            uVar5 = uVar2;\n            iVar6 = uVar5 - 1;\n            piVar11 = iVar6 * 0x10;\n            iVar3 = *(uVar10 + piVar11);\n            iVar1 = *(uVar10 + 8 + piVar11);\n            uVar10 = 0x800000000000;\n            uVar2 = *(*0x20 + 0x10) + 0x800000000000;\n            if ((uVar2 < iVar3 + 0x800000000000U) || (iVar1 + 0x800000000000U <= uVar2)) {\ncode_r0x0042c26d:\n                arg2 = puVar9[2];\n                if (uVar5 <= arg2) {\n                    puVar9[1] = uVar5;\n                    puVar9[3] = puVar9[3] - iVar12;\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x42c290;\n                uVar2 = uVar5;\n                fcn.0045cb00(uVar5, arg2);\n            }\n            else {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = iVar6;\n                *(*0x20 + -0x20) = iVar1;\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x30) = piVar11;\n                *(*0x20 + -0x38) = iVar12;\n                *(*0x20 + -0x58) = 0x42c1dd;\n                iVar4 = fcn.0042b780(*(*0x20 + 0x10));\n                iVar12 = (*(*0x20 + -0x20) - *(*0x20 + -0x28)) + *(*0x20 + -0x38);\n                uVar10 = iVar4 + 0x800000000000;\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 == 0) {\n                    puVar9 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x18);\n                    goto code_r0x0042c26d;\n                }\n                if (uVar10 < iVar1 + 0x800000000000U) {\n                    iVar7 = iVar1 - iVar4;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                iVar12 = iVar12 - iVar7;\n                puVar9 = *(*0x20 + 8);\n                uVar10 = *puVar9;\n                uVar5 = puVar9[1];\n                uVar2 = *(*0x20 + -0x18);\n                if (uVar2 < uVar5) {\n                    iVar7 = *(*0x20 + -0x30);\n                    *(uVar10 + iVar7) = iVar4;\n                    *(uVar10 + 8 + iVar7) = iVar1;\n                    uVar5 = *(*0x20 + -0x10);\n                    goto code_r0x0042c26d;\n                }\n            }\n            *(*0x20 + -0x58) = 0x42c298;\n            fcn.0045ca80(uVar5);\n        }\n        piVar11 = piVar11 + 2;\n    } while( true );\n}\n",
        "token_count": 1526
    },
    "0042c320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c320(void)\n\n{\n    uint64_t arg2;\n    int64_t *in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    int64_t *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX[2] < in_RAX[1]) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX[1] = 0;\n                unaff_RBX[2] = in_RAX[2];\n                iVar1 = unaff_RBX[4];\n                *(*0x20 + -0x28) = 0x42c375;\n                iVar1 = fcn.0040d060(iVar1);\n                unaff_RBX = *(*0x20 + 0x10);\n                *unaff_RBX = iVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            arg2 = unaff_RBX[2];\n            arg1 = in_RAX[1];\n            if (arg1 <= arg2) {\n                unaff_RBX[1] = arg1;\n                unaff_RBX[3] = in_RAX[3];\n                if (in_RAX[1] < arg1) {\n                    arg1 = in_RAX[1];\n                }\n                if (*unaff_RBX != *in_RAX) {\n                    *(*0x20 + -0x28) = 0x42c3c5;\n                    fcn.0045d3c0(arg1 << 4);\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x42c3d4;\n            in_RAX = fcn.0045cb00(arg1, arg2);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42c3e5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 622
    },
    "0042c5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042c5a0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    while( true ) {\n        uVar12 = *(in_RAX + 0x20);\n        uVar10 = uVar12 >> 0x20;\n        if (uVar12 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar12 >> 0x29) break;\n        while (uVar11 = uVar12 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar12 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar12 & 0xffffffff));\n            if (uVar12 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar13 = *piVar2;\n                while (iVar13 == 0) {\n                    iVar13 = *piVar2;\n                }\n                iVar9 = *piVar2;\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.0040a9c0(uVar6, iVar8, iVar9);\n                }\n                return iVar13;\n            }\n            uVar12 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 629
    },
    "0042c6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c6e0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042c756;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042c756;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42c750;\n                        fcn.0040a9c0(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042c756:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42c77d;\n                    fcn.00433640();\n                }\n                *(*0x20 + -0x30) = 0x42c78e;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42c79d;\n            fcn.00434de0();\n            *(*0x20 + -0x30) = 0x42c7ae;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x42c7b8;\n            fcn.004353e0();\n            *(*0x20 + -0x30) = 0x42c7c9;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x42c7d5;\n            fcn.004353e0();\n            *(*0x20 + -0x30) = 0x42c7da;\n            fcn.00435040();\n            *(*0x20 + -0x30) = 0x42c7df;\n            fcn.00434e60();\n            *(*0x20 + -0x30) = 0x42c7f0;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42c7fb;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 947
    },
    "0042c820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042c820(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040d060(0x595118);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 262
    },
    "0042c8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c8c0(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42c8fe;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x42c90f;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x42c91d;\n            fcn.004353e0();\n            *(*0x20 + -0x28) = 0x42c92e;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x42c93a;\n            fcn.004353e0();\n            *(*0x20 + -0x28) = 0x42c93f;\n            fcn.00435040();\n            *(*0x20 + -0x28) = 0x42c945;\n            fcn.00434e60();\n            *(*0x20 + -0x28) = 0x42c956;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42c965;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 516
    },
    "0042c9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c9a0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (in_RAX == NULL) {\n        return;\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004353e0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00433640();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 240
    },
    "0042cb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cb40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.0040ae40();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004353e0();\n            fcn.00435040();\n            fcn.00434e60();\n            fcn.00433640();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0042d0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d0a0(void)\n\n{\n    int64_t in_RAX;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *unaff_RBX = *(in_RAX + 8);\n    *(in_RAX + 8) = unaff_RBX;\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 141
    },
    "0042d2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d2e0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42d325;\n            fcn.00430b00();\n            *0x527388 = *(*0x20 + -0x18);\n            if (*0x527388 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42d359;\n            fcn.0045df00();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42d37a;\n            fcn.00434de0();\n            *(*0x20 + -0x48) = 0x42d38b;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x42d395;\n            fcn.004353e0();\n            *(*0x20 + -0x48) = 0x42d3a6;\n            fcn.004356e0();\n            *(*0x20 + -0x48) = 0x42d3ab;\n            fcn.00434e60();\n            *(*0x20 + -0x48) = 0x42d3bc;\n            fcn.00433640();\n        }\n        *(puVar1 + -8) = 0x42d3c5;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 672
    },
    "0042d940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d940(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42d97b;\n                fcn.0042d120(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42d98e;\n            fcn.00434de0();\n            *(*0x20 + -0x30) = 0x42d99f;\n            fcn.004356e0();\n            *(*0x20 + -0x30) = 0x42d9ab;\n            fcn.004354e0();\n            *(*0x20 + -0x30) = 0x42d9b0;\n            fcn.00435040();\n            *(*0x20 + -0x30) = 0x42d9b5;\n            fcn.00434e60();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42d9c6;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42d9de;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 657
    },
    "0042da00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042da00(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42da49;\n                    fcn.00430a00();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42da7d;\n                fcn.00433640();\n            }\n            *(*0x20 + -0x30) = 0x42da85;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42da9f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "0042e7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e7e0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430b00();\n    if (iStack16 != 0) {\n        *0x593408 = 1;\n        fcn.00430980();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0042ed00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042ed00(void)\n\n{\n    fcn.00430980();\n    return -*0x5935c0 * *0x5935b8;\n}\n",
        "token_count": 41
    },
    "0042ed80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042ed80(void)\n\n{\n    fcn.00430980();\n    fcn.00430980();\n    return 0x195726909;\n}\n",
        "token_count": 38
    },
    "0042f160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f160(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.00430a00();\n        fcn.00443200(arg1);\n        return;\n    }\n    fcn.0045ca80(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 99
    },
    "0042f460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f460(void)\n\n{\n    fcn.0040ac20();\n    *0x59342c = 1;\n    fcn.00430980();\n    return;\n}\n",
        "token_count": 44
    },
    "00430140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430140(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.00430c00();\n    if (iStack32 != 0) {\n        fcn.00430980();\n        return;\n    }\n    if (*0x59342c != 0) goto code_r0x0043027d;\n    do {\n        fcn.0045df00();\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.004354e0();\n        fcn.004356e0();\n        fcn.004353e0();\n        fcn.004356e0();\n        fcn.00434e60();\n        fcn.00433640();\ncode_r0x0043027d:\n        fcn.0040ac20();\n        fcn.0040ac20();\n    } while( true );\n}\n",
        "token_count": 192
    },
    "00430740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430740(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.00430980();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.00430980();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.00430980();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00430920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430920(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 94
    },
    "00430980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430980(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 117
    },
    "00430a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430a00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 118
    },
    "00430a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430a80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 126
    },
    "00430b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430b00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 126
    },
    "00430b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430b80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 126
    },
    "00430c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430c00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 126
    },
    "00430c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430c80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.00430840();\n    return;\n}\n",
        "token_count": 126
    },
    "00430d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430d00(void)\n\n{\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 25
    },
    "00431d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431d20(void)\n\n{\n    code *pcVar1;\n    ushort *in_RAX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) {\n        *in_RAX = 0;\n        *(in_RAX + 1) = 0;\n        *(in_RAX + 4) = auStackX8;\n        *(in_RAX + 8) = in_stack_00000000;\n        *(in_RAX + 0x1c) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        *(in_RAX + 0x10) = 0;\n        *(in_RAX + 0x18) = 0;\n        *(in_RAX + 0x14) = *(unaff_R14 + 0x28);\n        *(unaff_R14 + 0x28) = in_RAX;\n        fcn.0045c580();\n        return;\n    }\n    fcn.00433640();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 328
    },
    "00432480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432480(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x43249e;\n            iVar1 = fcn.00433600();\n            if (iVar1 == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4324c5;\n            fcn.00433640();\n        }\n        *(puVar2 + -8) = 0x4324cb;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 256
    },
    "00432740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432740(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 87
    },
    "00434de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434de0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.0040ac20();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 206
    },
    "00435000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435000(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004356e0();\n    return;\n}\n",
        "token_count": 83
    },
    "00435040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435040(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004356e0();\n    return;\n}\n",
        "token_count": 83
    },
    "00435080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435080(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_AL == '\\0') {\n        fcn.004356e0();\n    }\n    else {\n        fcn.004356e0();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00435340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435340(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004350e0(param_1, param_2);\n    fcn.004350e0(param_1, param_2);\n    fcn.004356e0();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 151
    },
    "004354e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004354e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_RAX < 0) {\n        fcn.004356e0();\n    }\n    fcn.004353e0();\n    return;\n}\n",
        "token_count": 114
    },
    "00435540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435540(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43558f;\n            uVar2 = fcn.0045cd2b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x4a89b4),  0xf < uVar2 ||\n                 (iVar1 = *0x593558 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x593558, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x435618;\n                    fcn.00434ec0(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x435632;\n                fcn.0045ca80(100);\n            }\n            *(*0x20 + -0x90) = 0x43563c;\n            in_RAX = fcn.0045ca80(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x435647;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 627
    },
    "00435660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435660(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00435540();\n    return;\n}\n",
        "token_count": 82
    },
    "004356a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004356a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00435540();\n    return;\n}\n",
        "token_count": 83
    },
    "00435760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435760(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.004354e0();\n    fcn.004356e0();\n    fcn.00434e60();\n    fcn.00435540();\n    return;\n}\n",
        "token_count": 148
    },
    "00435840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435840(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    *0x593558 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.00434de0();\n                fcn.00435040();\n                fcn.00434e60();\n            }\n            fcn.00434de0();\n            fcn.00435540();\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00434ec0(1);\n        fcn.00434de0();\n        fcn.00435540();\n        fcn.00434e60();\n        fcn.00434de0();\n        fcn.00435000();\n        fcn.00434e60();\n        puVar2 = fcn.0044b660();\n        if (puVar2 != NULL) {\n            fcn.0044bde0();\n            uVar3 = fcn.0044b180(*puVar2);\n            fcn.00434de0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.004356e0();\n            fcn.00435540(uVar3);\n            fcn.004356e0();\n            fcn.00434e60();\n        }\n    }\n    *0x593558 = 0;\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 517
    },
    "004360c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004360c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    return;\n}\n",
        "token_count": 84
    },
    "00436aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436aa0(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar1 = *0x53f628;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 158
    },
    "00436b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436b60(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5934a8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00436c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00436c00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00401200();\n    *0x593414 = *0x593b67;\n    *0x593415 = *0x593b6a;\n    *0x593416 = *0x593b6e;\n    return;\n}\n",
        "token_count": 127
    },
    "00436f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436f40(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53ffb0 - *0x53ffc0 <= *0x53ffb8) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x53ffb8;\n            *(*0x20 + -0x28) = 0x436f85;\n            fcn.00434de0();\n            *(*0x20 + -0x28) = 0x436f96;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x436fa5;\n            fcn.004354e0();\n            *(*0x20 + -0x28) = 0x436fb6;\n            fcn.004356e0();\n            *(*0x20 + -0x28) = 0x436fbb;\n            fcn.00434e60();\n            *(*0x20 + -0x28) = 0x436fcc;\n            fcn.00433640();\n        }\n        *(puVar1 + -8) = 0x436fd2;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 390
    },
    "00436fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00436fe0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53ffb0 <= *0x53ffb0 + 1) {\n                *(*0x20 + -0x10) = *0x53ffb0;\n                *(*0x20 + -0x28) = 0x437016;\n                *0x53ffb0 = *0x53ffb0 + 1;\n                fcn.00436f40();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x437036;\n            fcn.00433640();\n        }\n        *(puVar1 + -8) = 0x43703c;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 301
    },
    "00438160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438160(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443640(0);\n    fcn.00437f00();\n    return;\n}\n",
        "token_count": 93
    },
    "004381e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004381e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00438080();\n    fcn.00443980(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00438720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438720(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x438769;\n                fcn.0045a180();\n                *(*0x20 + -0x28) = 0x438785;\n                fcn.004302e0();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x53fba0) {\n                    *(*0x20 + -0x28) = 0x43879c;\n                    fcn.00438820();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x4387bd;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x53fba0) {\n                    *(*0x20 + -0x28) = 0x4387de;\n                    fcn.0043fbc0();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x4387f7;\n                fcn.0043be40();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x438812;\n            fcn.00433640();\n        }\n        *(puVar4 + -8) = 0x438818;\n        fcn.0045a3a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 650
    },
    "00438860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438860(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.0040afa0();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 57
    },
    "00439360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00439360(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x593434,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *0x593434 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00439620();\n        uVar3 = *0x5934f8;\n        *0x5934f8 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.004393e0();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.004393e0();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "0043a2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a2d7)\n\nvoid fcn.0043a2a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53ffd8 != 0) {\n        if (*0x53ffdc != 0) {\n            return;\n        }\n        LOCK();\n        *0x53ffdc = 1;\n        fcn.00439d00();\n        return;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043ba40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ba40(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x53ff88 == 0) {\n        if ((*0x53ff90 == 0) || (in_RAX < *0x53ff90)) {\n            fcn.0042d4a0();\n        }\n    }\n    else {\n        fcn.0043a2a0();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0043d5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043d5a0(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043d0c0();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045a260();\n    }\n    fcn.004379a0(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.0045a260();\n    }\n    fcn.0045a260();\n    fcn.0043d0c0();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 433
    },
    "0043dca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043dca0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar2 = fcn.004419a0();\n    iVar1 = *0x540070;\n    if ((iVar2 != 0) && (*0x540070 != 0)) {\n        *0x540070 = 0;\n        fcn.0040af20(iVar1);\n    }\n    fcn.0040ae40();\n    if (iVar2 != 0) {\n        fcn.0043fbc0();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 203
    },
    "0043dec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043dec0(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = fcn.0040cd00();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.0045a260();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0043fea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043fea0(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    *0x53ffac = *0x53ffac + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043ff00();\n    }\n    fcn.0040ae40();\n    return;\n}\n",
        "token_count": 141
    },
    "004415e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004415e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    *(in_RAX + 0x128) = *0x53ffa0;\n    *0x53ffa8 = *0x53ffa8 + 1;\n    *0x53ffa0 = in_RAX;\n    fcn.0043ff00();\n    return;\n}\n",
        "token_count": 141
    },
    "00441ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00441ac0(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.00441bc0(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 405
    },
    "00442ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442ee0(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5938a0 = 1;\n            *0x5938c0 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x442f1d;\n            uVar3 = fcn.004077c0();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x5938e0 = (*0x5938e4 | *0x5938e8 | *0x5938ec) != 0;\n                    *(*0x20 + -0x88) = 0x4430df;\n                    fcn.004077c0();\n                    *(*0x20 + -0x88) = 0x4430e5;\n                    fcn.00458120();\n                    *0x593478 = *0x527288;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x442f4f;\n                fcn.00402c40(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x004431da;\n                    if (param_2 < param_1 + 1) goto code_r0x004431d2;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x442fd5;\n                fcn.00402c40(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x00442f1f:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x443065;\n                        uVar4 = param_2;\n                        uVar3 = fcn.004499a0();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x593498 = uVar3;\n                        }\n                    }\n                    else if (*0x538358 != 0) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x538358;\n                        iVar8 = 0;\n                        iVar5 = *0x538358;\n                        iVar7 = *0x538350;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x44312d;\n                                cVar2 = fcn.004027a0(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x443171;\n                                    iVar5 = fcn.004499a0();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x00442f1f;\n                }\n                *(*0x20 + -0x88) = 0x4431cd;\n                fcn.0045cb40(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x4431d2;\n            fcn.0045cac0(param_1, param_2);\ncode_r0x004431d2:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x4431da;\n            param_2 = param_1;\n            fcn.0045cb40(param_1);\ncode_r0x004431da:\n            *(*0x20 + -0x88) = 0x4431df;\n            fcn.0045cac0(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x4431e5;\n        fcn.0045a3a0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1949
    },
    "00443200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443200(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x443245;\n                fcn.0045e360();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x443290;\n                uVar3 = fcn.0045c4a0(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x4432e5;\n                        fcn.0045ca80(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x004432e5;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x004432e5:\n            *(*0x20 + -0x30) = 0x4432f0;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045ca80(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x44330a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 883
    },
    "00443380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443380(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.0045a260();\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00444500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444500(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430980();\n    fcn.00430980();\n    return;\n}\n",
        "token_count": 90
    },
    "004445a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004445a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00430a00();\n    if (*0x53ec28 == 0) {\n        fcn.00430980();\n    }\n    else {\n        fcn.00430a00();\n        fcn.00430a00();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00445120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445120(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040c300(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00445198;\n        do {\n            unaff_RBX = 0x4c9bc0;\n            uVar3 = fcn.00432ec0();\ncode_r0x00445198:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x4c9a90;\n        fcn.00432ec0();\n    } while( true );\n}\n",
        "token_count": 392
    },
    "00446ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446ae0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "00446be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446be0(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.0040ac20();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045d3c0(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.0040ae40();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 497
    },
    "00448c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448c60(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00448920(3);\n    return;\n}\n",
        "token_count": 126
    },
    "00448d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448d40(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00448920(4);\n    return;\n}\n",
        "token_count": 126
    },
    "00449060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00449060(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x44909c;\n                iVar1 = fcn.00449580();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x4490c5;\n                fcn.0045ca80(0);\n            }\n            *(*0x20 + -0x20) = 0x4490d2;\n            in_RAX = fcn.0045cac0(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4490e5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 431
    },
    "00449100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449100(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.00449620();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045d3c0(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004493a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004493a0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x4493f5;\n                iVar1 = fcn.00457060(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x44942e;\n            uVar2 = fcn.00449060();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar5 = *(*0x20 + 0x18);\n            iVar7 = *(*0x20 + -0x48);\n            iVar4 = 0;\n            arg1_00 = 0;\n            while ((iVar4 < iVar5 && (arg1_00 < iVar7))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00449528;\n                *(*0x20 + -0x28) = iVar4;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x449496;\n                iVar3 = fcn.00457060(iVar1 - arg1_00);\n                iVar4 = *(*0x20 + -0x28) + 1;\n                iVar5 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449528;\n            fcn.0045cac0(arg1_00, unaff_RBX);\ncode_r0x00449528:\n            *(*0x20 + -0x80) = 0x449533;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045cb40(unaff_RDI);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x44954d;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1129
    },
    "00449a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00449a80(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402c40(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00449b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449b40(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x00449b40:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x449bce;\n                uVar2 = fcn.00449580();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x00449c73;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x449b86;\n            iVar3 = fcn.00457060(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x00449cea;\n    }\n    goto code_r0x00449cf6;\ncode_r0x00449c73:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x00449cdf;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x449cc9;\n            fcn.0045cac0(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x449cd4;\n        fcn.0045ca80(arg1_00);\ncode_r0x00449cd4:\n        *(*0x20 + -0x80) = 0x449cdf;\n        fcn.0045cb40(arg1_00);\n        goto code_r0x00449cdf;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x00449cd4;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x449c2b;\n    iVar3 = fcn.00457060(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x00449c73;\ncode_r0x00449cdf:\n    *(*0x20 + -0x80) = 0x449cea;\n    fcn.0045ca80(arg1_02);\ncode_r0x00449cea:\n    *(*0x20 + -0x80) = 0x449cf5;\n    in_RAX = fcn.0045ca80(arg1);\ncode_r0x00449cf6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x449d05;\n    fcn.0045a3a0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00449b40;\n}\n",
        "token_count": 1317
    },
    "00449d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.00449d60(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 162
    },
    "0044b600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b600(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0044b180(*in_RAX);\n    return;\n}\n",
        "token_count": 95
    },
    "0044bea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044bea0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x0044bea0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x44bec5;\n        iVar1 = fcn.0044bde0();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x0044bef6;\n            if (unaff_RBX <= arg1) goto code_r0x0044bf0d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x0044bef6;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x0044bf19;\ncode_r0x0044bef6:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44bf0d;\n    fcn.0045cac0(arg1, unaff_RBX);\ncode_r0x0044bf0d:\n    *(*0x20 + -0x20) = 0x44bf18;\n    in_RAX = fcn.0045ca80(unaff_RBX);\ncode_r0x0044bf19:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44bf28;\n    fcn.0045a3a0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044bea0;\n}\n",
        "token_count": 599
    },
    "0044c220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c220(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0044c100(arg1);\n    return;\n}\n",
        "token_count": 89
    },
    "0044c280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c280(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0044b7e0(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 106
    },
    "0044c300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0044c300(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x44c37b;\n                uVar6 = fcn.0044b180(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x44c3f9;\n                    fcn.0044b180();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x44c425;\n                    iVar7 = fcn.0044c660(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x44c446;\n            in_RAX = fcn.0045cb40(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x44c456;\n        fcn.0045a3a0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 971
    },
    "0044c480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c480(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044b7e0(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "0044c520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c520(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044b7e0(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "0044c5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c5c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0044b7e0(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0044ee80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044ee80(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040ac20();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x53f648; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x53f640 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1208);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1210);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.0040ae40();\n    return iVar4;\n}\n",
        "token_count": 278
    },
    "0044f340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044f340(void)\n\n{\n    ulong uStack16;\n    \n    fcn.0045e360();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0044f380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f380(ulong param_1)\n\n{\n    if (*0x53ece0 != NULL) {\n        (***0x53ece0)();\n        return;\n    }\n    fcn.0042f4e0(param_1);\n    return;\n}\n",
        "token_count": 60
    },
    "0044fc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044fc00(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.0040ac20();\n    return iVar2;\n}\n",
        "token_count": 178
    },
    "00450220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450220(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00450280();\n    return;\n}\n",
        "token_count": 82
    },
    "004503a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004503a0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044f540(&uStack16);\n    return;\n}\n",
        "token_count": 117
    },
    "00450c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450c40(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uStack16 = *0x593d58;\n    fcn.0044f540(&uStack16);\n    return;\n}\n",
        "token_count": 106
    },
    "00450ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450ca0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593d48 == -1) {\n        iStack16 = 0;\n        fcn.0044f540(&iStack16);\n    }\n    else {\n        iStack16 = *0x593d48;\n        fcn.0044f540(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00452ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00452ea0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 8);\n            arg2 = uVar1;\n            uVar8 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar8;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar8;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x60) = 0x452f05;\n            fcn.0044bde0();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x60) = 0x452f3a;\n                cVar3 = fcn.004027a0(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x00452f3e;\n                *(*0x20 + -0x60) = 0x452f25;\n                cVar3 = fcn.004027a0(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x00452f3e:\n                return *(*0x20 + -0x30);\n            }\n            iVar5 = *(*0x20 + 0x28);\n            if (iVar5 == 0) {\n                iVar5 = **(*(*0x20 + 8) + 0x28);\n                uVar4 = *(*(*(*0x20 + 8) + 0x28) + 4);\n                unaff_RSI = iVar5;\n            }\n            else {\n                uVar4 = 0;\n            }\n            *(*0x20 + -0x39) = uVar4;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x60) = 0x452f8d;\n            iVar5 = fcn.0044b180();\n            arg1 = *(*0x20 + -0x28);\n            if (*arg1 == iVar5) {\n                if (*(*0x20 + -0x39) == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x60) = 0x452fdb;\n            uVar6 = fcn.0044bde0();\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x60) = 0x452fea;\n            fcn.00434de0();\n            *(*0x20 + -0x60) = 0x452ffb;\n            fcn.004356e0();\n            *(*0x20 + -0x60) = 0x45300a;\n            fcn.004356e0();\n            *(*0x20 + -0x60) = 0x45300f;\n            fcn.00435040();\n            *(*0x20 + -0x60) = 0x453014;\n            fcn.00434e60();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x60) = 0x453025;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_DIL;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x453045;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_DIL = puVar7[0x20];\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1272
    },
    "00453080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00453080(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00453080:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x4530ef;\n        fcn.0045ccf4();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x453108;\n        fcn.00454e00(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x45314f;\n        fcn.0045d000();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x453290;\n                    fcn.00454d80();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x004532a8;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x53ecb8;\n                if (*0x53ecb8 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x453215;\n                    fcn.00434de0();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x453226;\n                    fcn.004356e0();\n                    *(*0x20 + -0x290) = 0x453230;\n                    fcn.00435540();\n                    *(*0x20 + -0x290) = 0x453235;\n                    fcn.00435040();\n                    *(*0x20 + -0x290) = 0x45323a;\n                    fcn.00434e60();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x4531f4;\n                    iVar2 = fcn.00454b80(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x004532b6;\ncode_r0x004532a8:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x4532b5;\n    in_RAX = fcn.0045ca80(0x100000);\ncode_r0x004532b6:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x4532d3;\n    fcn.0045a3a0();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x00453080;\n}\n",
        "token_count": 1560
    },
    "004533a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004533a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0044bde0();\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.00435040();\n    fcn.00434e60();\n    uVar1 = fcn.0044b180();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.0044c100(uVar2);\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.004356e0();\n    fcn.004354e0(uVar2 & 0xffffffff);\n    fcn.00434e60();\n    uVar2 = fcn.0044b180();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.0044b180();\n        fcn.00434de0();\n        fcn.004356e0();\n        fcn.00435540(uVar3);\n        fcn.00434e60();\n    }\n    fcn.00434de0();\n    fcn.00435040();\n    fcn.00434e60();\n    return;\n}\n",
        "token_count": 376
    },
    "00453e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00453e40(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045a260();\n    return 0;\n}\n",
        "token_count": 89
    },
    "00453fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453fc0(int64_t arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x454009;\n                fcn.00450e00(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            *(*0x20 + -0x60) = 0x45401d;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x45403c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 499
    },
    "00454760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454760(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00434de0();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.00435540();\n    fcn.004356e0();\n    fcn.00434e60();\n    auStack32 = CONCAT88(arg1, 0x454940);\n    fcn.00435840(auStack32);\n    return;\n}\n",
        "token_count": 208
    },
    "004550c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004550c0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x52cb00; iVar3 != 0; iVar3 = *(iVar3 + 0x220)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x00455296;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x45514b;\n            fcn.0040ac20();\n            uVar1 = *0x53f750;\n            *(*0x20 + -0x58) = 0x455165;\n            puVar2 = fcn.0040f880(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x455185;\n            fcn.0040ae40();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x455193;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x4551a5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4551b1;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4551c5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4551cf;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4551e5;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4551ea;\n            fcn.00434e60();\n            iVar3 = 0x52cb00;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x455227;\n                fcn.00434de0();\n                *(*0x20 + -0x58) = 0x455238;\n                fcn.004356e0();\n                *(*0x20 + -0x58) = 0x455245;\n                fcn.00435540();\n                *(*0x20 + -0x58) = 0x455256;\n                fcn.004356e0();\n                *(*0x20 + -0x58) = 0x455265;\n                fcn.00435540();\n                *(*0x20 + -0x58) = 0x45526a;\n                fcn.00435040();\n                *(*0x20 + -0x58) = 0x45526f;\n                fcn.00434e60();\n                iVar3 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            *(*0x20 + -0x58) = 0x455296;\n            fcn.00433640();\ncode_r0x00455296:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x4552a5;\n            fcn.00434de0();\n            *(*0x20 + -0x58) = 0x4552b6;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4552c5;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4552d6;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x4552e5;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x4552f6;\n            fcn.004356e0();\n            *(*0x20 + -0x58) = 0x455305;\n            fcn.00435540();\n            *(*0x20 + -0x58) = 0x45530a;\n            fcn.00435040();\n            *(*0x20 + -0x58) = 0x45530f;\n            fcn.00434e60();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x455325;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x455334;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1505
    },
    "004571c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004571c0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x4571ee;\n                fcn.0044f380(unaff_RBX);\n                return;\n            }\n            *(*0x20 + -0x28) = 0x457205;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x45721a;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 390
    },
    "00457480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457480(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040c300(1, *in_RAX);\n    return;\n}\n",
        "token_count": 97
    },
    "004574e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004574e0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040e620(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 110
    },
    "00457540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457540(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 85
    },
    "004575e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004575e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004117c0(arg1);\n    return;\n}\n",
        "token_count": 89
    },
    "00457640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457640(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00411a60();\n    return;\n}\n",
        "token_count": 83
    },
    "00457680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00457680(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x565870);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        uVar1 = CONCAT71(0xdeaddeaddeadde, in_RAX != 0xdeaddeaddeaddead);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1 & 0xffffffff;\n}\n",
        "token_count": 284
    },
    "00457780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00457780(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (0 < *0x593560) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x593560);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.0042af20(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00457d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457d60(void)\n\n{\n    fcn.0043d120();\n    return;\n}\n",
        "token_count": 25
    },
    "004580e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004580e0(void)\n\n{\n    fcn.0045c180();\n    return;\n}\n",
        "token_count": 25
    },
    "00458240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458240(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004550c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00458280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458280(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00455360();\n    return;\n}\n",
        "token_count": 82
    },
    "004582c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004582c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00455620();\n    return;\n}\n",
        "token_count": 83
    },
    "00458300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458300(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004550c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00458480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458480(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443640(1);\n    return;\n}\n",
        "token_count": 84
    },
    "004584e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004584e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443980(arg1);\n    return;\n}\n",
        "token_count": 88
    },
    "00458540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458540(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443640(3);\n    return;\n}\n",
        "token_count": 87
    },
    "004585a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004585a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00443980(0);\n    return;\n}\n",
        "token_count": 85
    },
    "004585e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004585e0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x458612;\n            fcn.00434de0();\n            *(*0x20 + -0x20) = 0x458625;\n            fcn.004356e0();\n            *(*0x20 + -0x20) = 0x45862f;\n            fcn.004353e0();\n            *(*0x20 + -0x20) = 0x458645;\n            fcn.004356e0();\n            *(*0x20 + -0x20) = 0x45864f;\n            fcn.004353e0();\n            *(*0x20 + -0x20) = 0x458654;\n            fcn.00435040();\n            *(*0x20 + -0x20) = 0x458659;\n            fcn.00434e60();\n            *(*0x20 + -0x20) = 0x45866a;\n            in_RAX = fcn.00433640();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x458675;\n        fcn.0045a3a0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 464
    },
    "00458680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00458680(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045e360();\n    return uStack16;\n}\n",
        "token_count": 92
    },
    "00458700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00458700(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x48) = 0x45871e;\n            iVar1 = fcn.00449a80();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x48) = 0x45872f;\n            uVar2 = fcn.00449580();\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x28) = unaff_RBX;\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x48) = 0x458750;\n                fcn.0045d3c0(*(*0x20 + -0x20));\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x48) = 0x45877c;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x458787;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 479
    },
    "004587a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004587a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.0045d3c0(arg1);\n    return;\n}\n",
        "token_count": 91
    },
    "00459100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459100(ulong arg1)\n\n{\n    fcn.00459200(3);\n    return;\n}\n",
        "token_count": 28
    },
    "00459160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459160(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.00459200(9);\n    return;\n}\n",
        "token_count": 42
    },
    "00459200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00459200(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.0045d3c0(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x0045935f;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x4b1150;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.00403b40();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043ed20();\n        return uVar2;\n    }\n    fcn.0045ca80(0);\ncode_r0x0045935f:\n    fcn.00432ec0();\n    fcn.00432340();\n    return 0;\n}\n",
        "token_count": 449
    },
    "0045c5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045c5e0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *(iVar1 + 0x1260) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1268);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045e620();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 210
    },
    "0045cf3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cf3c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    uVar1 = unaff_RSI[0x51];\n    uVar2 = unaff_RSI[0x52];\n    uVar3 = unaff_RSI[0x53];\n    unaff_RDI[0x50] = unaff_RSI[0x50];\n    unaff_RDI[0x51] = uVar1;\n    unaff_RDI[0x52] = uVar2;\n    unaff_RDI[0x53] = uVar3;\n    uVar1 = unaff_RSI[0x55];\n    uVar2 = unaff_RSI[0x56];\n    uVar3 = unaff_RSI[0x57];\n    unaff_RDI[0x54] = unaff_RSI[0x54];\n    unaff_RDI[0x55] = uVar1;\n    unaff_RDI[0x56] = uVar2;\n    unaff_RDI[0x57] = uVar3;\n    uVar1 = unaff_RSI[0x59];\n    uVar2 = unaff_RSI[0x5a];\n    uVar3 = unaff_RSI[0x5b];\n    unaff_RDI[0x58] = unaff_RSI[0x58];\n    unaff_RDI[0x59] = uVar1;\n    unaff_RDI[0x5a] = uVar2;\n    unaff_RDI[0x5b] = uVar3;\n    uVar1 = unaff_RSI[0x5d];\n    uVar2 = unaff_RSI[0x5e];\n    uVar3 = unaff_RSI[0x5f];\n    unaff_RDI[0x5c] = unaff_RSI[0x5c];\n    unaff_RDI[0x5d] = uVar1;\n    unaff_RDI[0x5e] = uVar2;\n    unaff_RDI[0x5f] = uVar3;\n    uVar1 = unaff_RSI[0x61];\n    uVar2 = unaff_RSI[0x62];\n    uVar3 = unaff_RSI[99];\n    unaff_RDI[0x60] = unaff_RSI[0x60];\n    unaff_RDI[0x61] = uVar1;\n    unaff_RDI[0x62] = uVar2;\n    unaff_RDI[99] = uVar3;\n    uVar1 = unaff_RSI[0x65];\n    uVar2 = unaff_RSI[0x66];\n    uVar3 = unaff_RSI[0x67];\n    unaff_RDI[100] = unaff_RSI[100];\n    unaff_RDI[0x65] = uVar1;\n    unaff_RDI[0x66] = uVar2;\n    unaff_RDI[0x67] = uVar3;\n    uVar1 = unaff_RSI[0x69];\n    uVar2 = unaff_RSI[0x6a];\n    uVar3 = unaff_RSI[0x6b];\n    unaff_RDI[0x68] = unaff_RSI[0x68];\n    unaff_RDI[0x69] = uVar1;\n    unaff_RDI[0x6a] = uVar2;\n    unaff_RDI[0x6b] = uVar3;\n    uVar1 = unaff_RSI[0x6d];\n    uVar2 = unaff_RSI[0x6e];\n    uVar3 = unaff_RSI[0x6f];\n    unaff_RDI[0x6c] = unaff_RSI[0x6c];\n    unaff_RDI[0x6d] = uVar1;\n    unaff_RDI[0x6e] = uVar2;\n    unaff_RDI[0x6f] = uVar3;\n    uVar1 = unaff_RSI[0x71];\n    uVar2 = unaff_RSI[0x72];\n    uVar3 = unaff_RSI[0x73];\n    unaff_RDI[0x70] = unaff_RSI[0x70];\n    unaff_RDI[0x71] = uVar1;\n    unaff_RDI[0x72] = uVar2;\n    unaff_RDI[0x73] = uVar3;\n    uVar1 = unaff_RSI[0x75];\n    uVar2 = unaff_RSI[0x76];\n    uVar3 = unaff_RSI[0x77];\n    unaff_RDI[0x74] = unaff_RSI[0x74];\n    unaff_RDI[0x75] = uVar1;\n    unaff_RDI[0x76] = uVar2;\n    unaff_RDI[0x77] = uVar3;\n    return;\n}\n",
        "token_count": 3269
    },
    "0045d000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d000(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1742
    },
    "0045cfc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cfc8(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    return;\n}\n",
        "token_count": 2183
    },
    "0045d038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d038(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    return;\n}\n",
        "token_count": 1302
    },
    "0045d046": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d046(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    return;\n}\n",
        "token_count": 1187
    },
    "0045d08c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d08c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    return;\n}\n",
        "token_count": 637
    },
    "0045d09a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045d09a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 530
    },
    "0045cff2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cff2(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    return;\n}\n",
        "token_count": 1849
    },
    "0045e2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e2a0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x53ec48)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 189
    },
    "0045e620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e620(void)\n\n{\n    fcn.0042cca0();\n    return;\n}\n",
        "token_count": 25
    },
    "0045e800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e800(void)\n\n{\n    fcn.0044f380(*0x5381e8);\n    return;\n}\n",
        "token_count": 32
    },
    "0045e820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e820(void)\n\n{\n    fcn.0044f380(*0x5381f8);\n    return;\n}\n",
        "token_count": 32
    },
    "0045e8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e8c0(void)\n\n{\n    fcn.0043e020();\n    return;\n}\n",
        "token_count": 27
    },
    "0045e900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e900(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00442880(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "0045eba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045eba0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458cc0();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045ec00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045ec00(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458e40();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045ec40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045ec40(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00458fa0();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045eee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045eee0(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    ulong uVar2;\n    int64_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*unaff_RBX == *in_RAX) && (unaff_RBX[1] == in_RAX[1])) {\n        if ((unaff_RBX[3] == in_RAX[3]) &&\n           (((unaff_RBX[5] == in_RAX[5] && (cVar1 = fcn.004027a0(in_RAX[3], unaff_RBX[2]),  cVar1 != '\\0')) &&\n            (cVar1 = fcn.004027a0(in_RAX[5], unaff_RBX),  cVar1 != '\\0')))) {\n            uVar2 = fcn.004027a0(0x20, unaff_RBX);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00462100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.00462100(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int32_t *in_RAX;\n    int64_t **ppiVar4;\n    char cVar5;\n    int64_t *piVar6;\n    char cVar7;\n    ulong uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [8];\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = *(in_RAX + 2);\n    auStack40 = in_XMM15;\n    if ((iVar2 != 0) && (iVar2 != 0x593417)) {\n        auStack40 = CONCAT88(*(in_RAX + 4), iVar2);\n    }\n    if (auStack40._0_8_ == 0x49c9c0) {\n        cVar7 = *auStack40._8_8_;\n        cVar5 = *(auStack40._8_8_ + 1);\n    }\n    else {\n        cVar5 = '\\0';\n        cVar7 = '\\0';\n    }\n    uStack16 = arg1;\n    ppiVar4 = fcn.0040dcc0(auStack24);\n    piVar6 = *ppiVar4;\n    if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.00462dc0();\n        }\n        iVar2 = *(in_RAX + 2);\n        auStack56 = in_XMM15;\n        if ((iVar2 != 0) && (iVar2 != 0x593417)) {\n            auStack56 = CONCAT88(*(in_RAX + 4), iVar2);\n        }\n        if (auStack56._0_8_ == 0x49c9c0) {\n            cVar7 = *auStack56._8_8_;\n            cVar5 = *(auStack56._8_8_ + 1);\n        }\n        else {\n            cVar5 = '\\0';\n            cVar7 = '\\0';\n        }\n        uStack16 = arg1;\n        ppiVar4 = fcn.0040dcc0(auStack24);\n        piVar6 = *ppiVar4;\n        if ((cVar7 == '\\0') && (cVar5 != '\\0')) {\n            uVar8 = *(in_RAX + 6);\n            uStack16 = arg1;\n            ppiVar4 = fcn.0040dcc0(auStack24);\n            cVar7 = uVar8;\n            piVar6 = *ppiVar4;\n            fcn.00462a80();\n        }\n        LOCK();\n        iVar1 = *in_RAX;\n        *in_RAX = *in_RAX + -1;\n        if (iVar1 != 1) {\n            fcn.004630c0();\n        }\n    }\n    if (cVar7 != '\\0') {\n        puVar3 = *piVar6;\n        if ((puVar3 == NULL) || (*0x53ed20 == puVar3)) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = *puVar3;\n        }\n        return uVar8;\n    }\n    return 0;\n}\n",
        "token_count": 819
    },
    "00462d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00462d40(void)\n\n{\n    char cVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 != 0) {\n            return in_RAX & 0xffffffffffffff00 | *0x53ed20 == iVar2;\n        }\n        cVar1 = fcn.00457400(*0x53ed20);\n        if (cVar1 != '\\0') break;\n        iVar2 = *in_RAX;\n    }\n    return 1;\n}\n",
        "token_count": 191
    },
    "00463060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463060(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.004630c0();\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "004630c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004630c0(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00457d20();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.004584e0(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.004584e0(1);\n    return;\n}\n",
        "token_count": 249
    },
    "00464140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00464140(ulong param_1)\n\n{\n    int64_t *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = *in_RAX;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        uVar1 = fcn.00463d20();\n        if (param_1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x28);\n    }\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "004641c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004641c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t noname_0;\n    char cVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    noname_1 = *(in_RAX + 8);\n    if (*(in_RAX + 8) == 0) {\n        return 0;\n    }\n    while( true ) {\n        noname_0 = *(noname_1 + 0x20);\n        iVar3 = noname_0;\n        uVar2 = fcn.00463e40(noname_0, noname_1, param_3, param_4);\n        if (iVar3 != '\\0') {\n            return uVar2;\n        }\n        if (noname_0 == 0) break;\n        cVar1 = fcn.00457400(noname_0);\n        noname_1 = noname_0;\n        if (cVar1 != '\\0') {\n            fcn.004573a0(noname_0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "00464620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464620(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x464651;\n            iVar5 = fcn.00445120(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x00464751;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x00464746;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0046473b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x00464662;\n                            }\n                            goto code_r0x00464730;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x00464725;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x00464662:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x464725;\n            fcn.0045cb00(unaff_RBX, arg1);\ncode_r0x00464725:\n            *(*0x20 + -0x28) = 0x464730;\n            fcn.0045ca80(arg1);\ncode_r0x00464730:\n            *(*0x20 + -0x28) = 0x46473b;\n            fcn.0045ca80(arg1);\ncode_r0x0046473b:\n            *(*0x20 + -0x28) = 0x464746;\n            fcn.0045ca80(arg1);\ncode_r0x00464746:\n            *(*0x20 + -0x28) = 0x464751;\n            fcn.0045ca80(arg1);\ncode_r0x00464751:\n            *(*0x20 + -0x28) = 0x46475c;\n            in_RAX = fcn.0045ca80(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x464771;\n        fcn.0045a3a0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1055
    },
    "004657c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004657c0(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    uVar1 = fcn.00459200(arg1);\n    fcn.0040a5e0();\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "00465c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00465c40(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (unaff_RBX <= iVar2) {\n            fcn.00448bc0(unaff_RBX);\n            fcn.004491e0(in_RAX);\n            uVar1 = fcn.00464480(in_RAX);\n            return uVar1;\n        }\n        if (*(in_RAX + iVar2) == '\\0') break;\n        iVar2 = iVar2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "00465d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465d20(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.00464620(arg1);\n    fcn.004493a0(arg1_00);\n    return;\n}\n",
        "token_count": 201
    },
    "00466080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466080(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x53edf0;\n            *(*0x20 + -0x48) = 0x4660b2;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x4660d8;\n                iVar2 = fcn.00459100(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5382f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x538300,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x466116;\n                        fcn.0040a5e0();\n                        uVar3 = 0x4c9dd8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x466145;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x466150;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 509
    },
    "00466160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466160(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x53eec0;\n            *(*0x20 + -0x48) = 0x466192;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x4661b8;\n                iVar2 = fcn.00459100(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5382f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x538300,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x4661f6;\n                        fcn.0040a5e0();\n                        uVar3 = 0x4c9dd8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x466225;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x466230;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "00466240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466240(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x53eee8;\n            *(*0x20 + -0x90) = 0x4662b3;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x46630b;\n                uVar2 = fcn.00459160(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x46634a;\n                    fcn.0040a5e0();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x466385;\n            in_EAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x4663b0;\n        fcn.0045a3a0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 963
    },
    "004663e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004663e0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = *0x53ef20;\n            *(*0x20 + -0x40) = 0x466406;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x40) = 0x466428;\n                fcn.00459100(0);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x46643d;\n            fcn.00432ec0();\n        }\n        *(puVar2 + -8) = 0x466445;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 303
    },
    "00466860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466860(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x53f108;\n            *(*0x20 + -0x48) = 0x466896;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x4668c7;\n                iVar2 = fcn.00459100(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5382f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x538300,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x466905;\n                        fcn.0040a5e0();\n                        uVar3 = 0x4c9dd8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x466930;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x46693f;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 556
    },
    "00466a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466a80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    ulong in_R11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x20) = unaff_EDI;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + -0x38) = in_R11;\n            *(*0x20 + -0x40) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RSI;\n            *(*0x20 + -0x20) = arg4;\n            *(*0x20 + -0x28) = in_R10;\n            *(*0x20 + -0x30) = *0x53f178;\n            *(*0x20 + -0xa0) = 0x466af5;\n            arg1 = *0x53f178;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x98) = *(*0x20 + -0x28);\n                *(*0x20 + -0x90) = *(*0x20 + -0x38);\n                iVar1 = *(*0x20 + -0x40);\n                *(*0x20 + -0xa0) = 0x466b5f;\n                iVar2 = fcn.00459160(iVar1, *(*0x20 + 0x30), *(*0x20 + 0x20), *(*0x20 + -0x18));\n                if (iVar2 == 0xffffffff) {\n                    uVar3 = *0x5382f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x538300,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0xa0) = 0x466ba5;\n                        fcn.0040a5e0();\n                        uVar3 = 0x4c9dd8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0xa0) = 0x466bd6;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_EDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + 0x38) = arg4;\n        *(puVar4 + 0x40) = in_R10;\n        *(puVar4 + 0x48) = in_R11;\n        *(puVar4 + -8) = 0x466c07;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_EDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3._0_4_ = *(puVar4 + 0x30);\n        arg4 = *(puVar4 + 0x38);\n        in_R10 = *(puVar4 + 0x40);\n        in_R11 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1038
    },
    "00466c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466c40(void)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x53f1a0;\n            *(*0x20 + -0x48) = 0x466c76;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x48) = 0x466ca5;\n                iVar1 = fcn.00459100(*(*0x20 + 8));\n                if (iVar1 == 0) {\n                    uVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x466cb5;\n                    fcn.0040a5e0();\n                    uVar2 = 0x4c9dd8;\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x48) = 0x466cd7;\n            in_EAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x466ce6;\n        fcn.0045a3a0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 503
    },
    "0046d140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046d140(ulong arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t unaff_SIL;\n    int64_t unaff_RDI;\n    ulong in_R10;\n    ulong *in_R11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uVar3;\n    uint8_t uStack0000000000000028;\n    ulong uStack0000000000000038;\n    ulong *puStack0000000000000040;\n    uchar auStack880 [8];\n    uchar auStack872 [792];\n    int64_t iStack80;\n    int64_t iStack72;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    uStack0000000000000038 = in_R10;\n    puStack0000000000000040 = in_R11;\n    uStack0000000000000028 = unaff_SIL;\n    while (uVar3 = SUB168(in_XMM15 >> 0x40, 0),  auStack872 < *(unaff_R14 + 0x10) || auStack872 == *(unaff_R14 + 0x10))\n    {\n        fcn.0045a3a0();\n    }\n    fcn.0045cc29();\n    fcn.0046c2e0();\n    fcn.0046c840(puStack0000000000000040, *puStack0000000000000040);\n    if (unaff_RDI < 0) {\n        fcn.0046d7e0(uStack0000000000000038);\n        auStack24 = CONCAT88(uVar3, iStack72);\n        iVar2 = unaff_RDI;\n        if (uStack0000000000000028 < 0x48) {\n            if (uStack0000000000000028 == 0x45) {\ncode_r0x0046d428:\n                iStack72 = unaff_RDI;\n                iVar2 = iStack80 + -1;\n                goto code_r0x0046d487;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x47) goto code_r0x0046d487;\n        }\n        else {\n            if (uStack0000000000000028 == 0x65) goto code_r0x0046d428;\n            if (uStack0000000000000028 == 0x66) {\n                iVar1 = iStack80 - iStack72;\n                iStack72 = unaff_RDI;\n                iVar2 = 0;\n                if (0 < iVar1) {\n                    iVar2 = iVar1;\n                }\n                goto code_r0x0046d487;\n            }\n            iStack72 = unaff_RDI;\n            if (uStack0000000000000028 != 0x67) goto code_r0x0046d487;\n        }\n        iStack72 = iStack80;\n        iVar2 = iStack80;\n        goto code_r0x0046d487;\n    }\n    if (uStack0000000000000028 < 0x48) {\n        if (uStack0000000000000028 == 0x45) {\ncode_r0x0046d266:\n            fcn.0046c900(unaff_RDI + 1);\n        }\n        else if (uStack0000000000000028 == 0x47) {\ncode_r0x0046d29f:\n            if (unaff_RDI == 0) {\n                unaff_RDI = 1;\n            }\n            fcn.0046c900();\n        }\n    }\n    else {\n        if (uStack0000000000000028 == 0x65) goto code_r0x0046d266;\n        if (uStack0000000000000028 == 0x66) {\n            fcn.0046c900(iStack72 + unaff_RDI);\n        }\n        else if (uStack0000000000000028 == 0x67) goto code_r0x0046d29f;\n    }\n    auStack24 = CONCAT88(uVar3, iStack72);\n    iVar2 = unaff_RDI;\ncode_r0x0046d487:\n    auStack40 = CONCAT88(iStack80, 800);\n    auStack56 = CONCAT88(800, auStack880);\n    fcn.0046d560(arg1, iStack72, iVar2);\n    return;\n}\n",
        "token_count": 1012
    },
    "0046d560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046d560(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    char unaff_DIL;\n    uint8_t in_R9B;\n    int64_t unaff_R14;\n    uint uStackX32;\n    uint uStackX36;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    int64_t iStack0000000000000038;\n    \n    iStack0000000000000038 = in_RAX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (in_R9B < 0x48) {\n        if (in_R9B == 0x45) {\ncode_r0x0046d59d:\n            fcn.0046dce0(arg1);\n            return;\n        }\n        if (in_R9B == 0x47) {\ncode_r0x0046d5f4:\n            iVar1 = CONCAT44(uStackX36, uStackX32);\n            if ((iVar1 < arg3) &&\n               (CONCAT44(in_stack_0000002c, in_stack_00000028) == iVar1 ||\n                CONCAT44(in_stack_0000002c, in_stack_00000028) < iVar1)) {\n                arg3 = iVar1;\n            }\n            if (unaff_DIL != '\\0') {\n                arg3 = 6;\n            }\n            iVar1 = CONCAT44(in_stack_0000002c, in_stack_00000028) + -1;\n            if ((-5 < iVar1) && (iVar1 < arg3)) {\n                fcn.0046e240(arg1);\n                return;\n            }\n            fcn.0046dce0(arg1);\n            return;\n        }\n    }\n    else {\n        if (in_R9B == 0x65) goto code_r0x0046d59d;\n        if (in_R9B == 0x66) {\n            fcn.0046e240(arg1);\n            return;\n        }\n        if (in_R9B == 0x67) goto code_r0x0046d5f4;\n    }\n    if (arg1 < unaff_RBX + 2U) {\n        iStack0000000000000038 = fcn.00445200(unaff_RBX);\n    }\n    *(iStack0000000000000038 + unaff_RBX) = 0x25;\n    *(iStack0000000000000038 + 1 + unaff_RBX) = in_R9B;\n    return;\n}\n",
        "token_count": 622
    },
    "0046e240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e240(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char cVar10;\n    uint64_t unaff_RDI;\n    uchar uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \ncode_r0x0046e240:\n    cVar10 = unaff_RDI;\n    puVar9 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0x98;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x38) = in_RAX;\n        *(*0x20 + 0x58) = unaff_RSI;\n        uVar6 = unaff_RBX;\n        if (cVar10 != '\\0') {\n            uVar6 = unaff_RBX + 1;\n            uVar2 = in_RAX;\n            uVar5 = arg1;\n            uVar12 = unaff_RBX;\n            if (arg1 < uVar6) {\n                *(*0x20 + 0x40) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x46e2a5;\n                uVar2 = fcn.00445200(unaff_RBX);\n                uVar6 = in_RAX + 1;\n                uVar12 = *(*0x20 + 0x40);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar5 = unaff_RBX;\n                unaff_RDI = arg1;\n            }\n            *(uVar2 + uVar12) = 0x2d;\n            in_RAX = uVar2;\n            arg1 = uVar5;\n            unaff_RBX = uVar12;\n        }\n        cVar10 = unaff_RDI;\n        *(*0x20 + -0x18) = uVar6;\n        uVar12 = *(*0x20 + 0x28);\n        if (uVar12 < 1) {\n            uVar12 = uVar6 + 1;\n            uVar3 = in_RAX;\n            uVar5 = arg1;\n            uVar2 = uVar6;\n            if (arg1 < uVar12) {\n                *(*0x20 + -0xa0) = 0x46e2fd;\n                uVar3 = fcn.00445200(uVar6);\n                uVar12 = in_RAX + 1;\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar2 = *(*0x20 + -0x18);\n                uVar5 = uVar6;\n                unaff_RBX = in_RAX;\n                unaff_RDI = arg1;\n            }\n            *(uVar3 + uVar2) = 0x30;\ncode_r0x0046e439:\n            if (unaff_RSI < 1) {\n                return;\n            }\n            uVar6 = uVar12 + 1;\n            uVar4 = uVar3;\n            uVar8 = uVar5;\n            uVar2 = uVar12;\n            if (uVar5 < uVar6) {\n                *(*0x20 + -0x30) = uVar12;\n                *(*0x20 + -0xa0) = 0x46e465;\n                uVar4 = fcn.00445200(uVar12);\n                uVar6 = uVar3 + 1;\n                uVar2 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + 0x58);\n                uVar8 = uVar12;\n                unaff_RBX = uVar3;\n                unaff_RDI = uVar5;\n            }\n            *(uVar4 + uVar2) = 0x2e;\n            uVar2 = 0;\n            do {\n                cVar10 = unaff_RDI;\n                if (unaff_RSI <= uVar2) {\n                    return;\n                }\n                uVar12 = *(*0x20 + 0x28) + uVar2;\n                if ((uVar12 < 0) || (*(*0x20 + 0x20) == uVar12 || *(*0x20 + 0x20) < uVar12)) {\n                    uVar11 = 0x30;\n                }\n                else {\n                    if (*(*0x20 + 0x10) <= uVar12) goto code_r0x0046e545;\n                    uVar11 = *(*(*0x20 + 8) + uVar12);\n                }\n                uVar5 = uVar4;\n                uVar3 = uVar8;\n                uVar12 = uVar6;\n                uVar1 = uVar6 + 1;\n                if (uVar8 < uVar6 + 1) {\n                    *(*0x20 + -0x38) = uVar6;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x51) = uVar11;\n                    *(*0x20 + -0xa0) = 0x46e51c;\n                    uVar5 = fcn.00445200(uVar6);\n                    uVar2 = *(*0x20 + -0x40);\n                    unaff_RSI = *(*0x20 + 0x58);\n                    uVar12 = *(*0x20 + -0x38);\n                    uVar11 = *(*0x20 + -0x51);\n                    uVar3 = uVar6;\n                    unaff_RBX = uVar4;\n                    unaff_RDI = uVar8;\n                    uVar1 = uVar4 + 1;\n                }\n                uVar6 = uVar1;\n                *(uVar5 + uVar12) = uVar11;\n                uVar2 = uVar2 + 1;\n                uVar4 = uVar5;\n                uVar8 = uVar3;\n            } while( true );\n        }\n        if (*(*0x20 + 0x20) < uVar12) {\n            uVar12 = *(*0x20 + 0x20);\n        }\n        uVar2 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 8);\n        if (uVar12 <= uVar2) {\n            *(*0x20 + -0x50) = uVar12;\n            *(*0x20 + -0x20) = uVar12 + uVar6;\n            if (arg1 < uVar12 + uVar6) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0xa0) = 0x46e37c;\n                in_RAX = fcn.00445200(uVar6);\n                unaff_RBX = *(*0x20 + -0x10);\n                uVar12 = *(*0x20 + -0x50);\n                arg1 = uVar6;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0xa0) = 0x46e3b0;\n            fcn.0045d3c0(uVar12);\n            uVar12 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x10);\n            for (iVar7 = *(*0x20 + -0x50); *(*0x20 + 0x28) != iVar7 && iVar7 <= *(*0x20 + 0x28); iVar7 = iVar7 + 1) {\n                uVar2 = uVar3;\n                uVar6 = uVar12;\n                uVar4 = uVar12 + 1;\n                if (uVar5 < uVar12 + 1) {\n                    *(*0x20 + -0x48) = iVar7;\n                    *(*0x20 + -0x28) = uVar12;\n                    *(*0x20 + -0xa0) = 0x46e412;\n                    uVar2 = fcn.00445200(uVar12);\n                    uVar6 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x48);\n                    unaff_RBX = uVar3;\n                    uVar5 = uVar12;\n                    uVar4 = uVar3 + 1;\n                }\n                uVar12 = uVar4;\n                *(uVar2 + uVar6) = 0x30;\n                uVar3 = uVar2;\n            }\n            unaff_RSI = *(*0x20 + 0x58);\n            unaff_RDI = uVar5;\n            goto code_r0x0046e439;\n        }\n        goto code_r0x0046e550;\n    }\n    goto code_r0x0046e559;\ncode_r0x0046e545:\n    *(*0x20 + -0xa0) = 0x46e550;\n    fcn.0045ca80(*(*0x20 + 0x10));\ncode_r0x0046e550:\n    arg1 = uVar12;\n    *(*0x20 + -0xa0) = 0x46e558;\n    in_RAX = fcn.0045cb00(arg1, uVar2);\ncode_r0x0046e559:\n    *(puVar9 + 0x38) = in_RAX;\n    *(puVar9 + 0x40) = unaff_RBX;\n    *(puVar9 + 0x48) = arg1;\n    puVar9[0x50] = cVar10;\n    *(puVar9 + 0x58) = unaff_RSI;\n    *(puVar9 + -8) = 0x46e577;\n    fcn.0045a3a0();\n    in_RAX = *(puVar9 + 0x38);\n    unaff_RBX = *(puVar9 + 0x40);\n    arg1 = *(puVar9 + 0x48);\n    unaff_RDI = puVar9[0x50];\n    unaff_RSI = *(puVar9 + 0x58);\n    *0x20 = puVar9;\n    goto code_r0x0046e240;\n}\n",
        "token_count": 2430
    },
    "0046e5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046e5a0(uint64_t arg1, ulong noname_1, int64_t arg3, int64_t *arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000030;\n    int64_t *piStack0000000000000038;\n    \n    iStack0000000000000030 = arg3;\n    piStack0000000000000038 = arg4;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_DIL != '\\0') {\n        uVar3 = unaff_RBX + 1;\n        iVar1 = in_RAX;\n        if (arg1 < uVar3) {\n            arg1 = unaff_RBX;\n            iVar1 = fcn.00445200(unaff_RBX);\n            uVar3 = in_RAX + 1;\n        }\n        *(iVar1 + unaff_RBX) = 0x2d;\n        unaff_RBX = uVar3;\n    }\n    iVar2 = fcn.00470460(arg1);\n    uVar3 = unaff_RBX + 1;\n    iVar1 = iVar2;\n    if (arg1 < uVar3) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00445200(unaff_RBX);\n        uVar3 = iVar2 + 1;\n    }\n    *(iVar1 + unaff_RBX) = 0x70;\n    if (-1 < iStack0000000000000030 - *piStack0000000000000038) {\n        if (arg1 < uVar3 + 1) {\n            arg1 = uVar3;\n            iVar1 = fcn.00445200(uVar3);\n        }\n        *(iVar1 + uVar3) = 0x2b;\n    }\n    fcn.00470460(arg1);\n    return;\n}\n",
        "token_count": 498
    },
    "00470e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00470e00(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t arg1_00;\n    uint64_t unaff_RBX;\n    uchar unaff_SIL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1_00 = unaff_RBX + 1;\n    iVar1 = in_RAX;\n    if (arg1 < arg1_00) {\n        arg1 = unaff_RBX;\n        iVar1 = fcn.00445200(unaff_RBX);\n        arg1_00 = in_RAX + 1;\n    }\n    *(iVar1 + unaff_RBX) = unaff_SIL;\n    iVar1 = fcn.00470f40(arg1);\n    if (arg1 < arg1_00 + 1) {\n        iVar1 = fcn.00445200(arg1_00);\n    }\n    *(iVar1 + arg1_00) = unaff_SIL;\n    return;\n}\n",
        "token_count": 270
    },
    "00477ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00477ce0(ulong param_1)\n\n{\n    uint16_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x477cf9;\n            iVar2 = fcn.00477ba0();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar1 = *(iVar2 + 6);\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 < 0x10001) {\n                return *(iVar2 + 8) + iVar2;\n            }\n            *(*0x20 + -0x20) = 0x477d4b;\n            in_RAX = fcn.0045cb80(param_1, uVar1);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x477d56;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 378
    },
    "00479100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00479100(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00409480();\n    iVar1 = fcn.0044b2a0();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0044b4a0();\n        return uVar2;\n    }\n    return 0x4a864c;\n}\n",
        "token_count": 149
    },
    "0047b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0047b100(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(in_RAX + 0x17) & 0x20) == 0) {\n        fcn.00457480();\n        fcn.004575e0(arg1);\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 142
    },
    "0047b1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047b1c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong *unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX != 0) {\n                if ((arg1 >> 9 & 1) != 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x20) = 0x47b1fc;\n                uVar1 = fcn.00477d60();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x47b212;\n            unaff_RBX = fcn.0040cd00();\n            unaff_RBX[1] = 0x17;\n            arg1 = 0x4aad28;\n            *unaff_RBX = 0x4aad28;\n            unaff_RBX[2] = 0;\n            *(*0x20 + -0x20) = 0x47b23b;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x47b250;\n        fcn.0045a3a0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 517
    },
    "0047bbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047bbe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00477420(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 58
    },
    "0047bc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047bc20(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    ulong uStackX24;\n    uchar auStack40 [32];\n    \n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x20);\n    if ((piVar1 != NULL) && (*piVar1 == auStackX8)) {\n        *piVar1 = auStack40;\n    }\n    fcn.00479640(uStackX24);\n    return;\n}\n",
        "token_count": 127
    },
    "0047bfa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047bfa0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if ((*(unaff_RBX + 0x50) == *(in_RAX + 0x50)) && (*(unaff_RBX + 0x58) == *(in_RAX + 0x58))) {\n        uVar1 = fcn.004027a0(0x4c, *(in_RAX + 0x58));\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 194
    },
    "0047c2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c2e0(ulong noname_0, ulong arg2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.004027a0(0x1a, arg2);\n    return;\n}\n",
        "token_count": 103
    },
    "0047c3e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c3e0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (iVar2 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    while (iVar2 = iVar2 + 1,  iVar3 = iVar2,  iVar2 < unaff_RDI) {\n        while( true ) {\n            if (arg1 < iVar3) {\n                cVar1 = (**(in_RAX + 0x20))(iVar3 + -1);\n            }\n            else {\n                cVar1 = '\\0';\n            }\n            if (cVar1 == '\\0') break;\n            (**(in_RAX + 0x28))();\n            iVar3 = iVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0047c500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047c500(void)\n\n{\n    int64_t in_RAX;\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1 = (**(in_RAX + 0x18))();\n    fcn.0047c560(arg1);\n    return;\n}\n",
        "token_count": 115
    },
    "0047ca60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047ca60(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RSI;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    arg1 = unaff_RDI - arg1;\n    iVar2 = unaff_RSI - unaff_RDI;\n    while (iVar2 != arg1) {\n        if (iVar2 < arg1) {\n            for (iVar1 = 0; iVar1 < iVar2; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + unaff_RDI, unaff_RDI - arg1);\n            }\n            arg1 = arg1 - iVar2;\n        }\n        else {\n            for (iVar1 = 0; iVar1 < arg1; iVar1 = iVar1 + 1) {\n                (**(in_RAX + 0x28))(iVar1 + ((unaff_RDI + iVar2) - arg1), unaff_RDI - arg1);\n            }\n            iVar2 = iVar2 - arg1;\n        }\n    }\n    for (iVar2 = 0; iVar2 < arg1; iVar2 = iVar2 + 1) {\n        (**(in_RAX + 0x28))(iVar2 + unaff_RDI, unaff_RDI - arg1, iVar2 + (unaff_RDI - arg1));\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0047f420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0047f420(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x53eaf8;\n            *(*0x20 + -0x58) = 0x47f45b;\n            iVar1 = fcn.00465a20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x47f492;\n                uVar2 = fcn.00459100(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x58) = 0x47f4d1;\n                    fcn.0040a5e0();\n                    uVar2 = *(*0x20 + -0x28);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x58) = 0x47f505;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x47f519;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 594
    },
    "00480620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00480620(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar3 = *in_RAX;\n                if ((uVar3 & 1) != 0) {\n                    return 0;\n                }\n                uVar2 = (uVar3 | 1) + 8;\n                if ((uVar2 & 0x7ffff8) == 0) break;\n                LOCK();\n                uVar1 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar3 == uVar1) * (*in_RAX ^ uVar2 & 0x80000000007fffff);\n                if (uVar3 == uVar1) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    while ((uVar3 & 0x7ffff800000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x48069e;\n                        fcn.004585a0();\n                        uVar3 = *(*0x20 + -0x18) - 0x800000;\n                    }\n                    while ((uVar3 & 0x7ffff80000000000) != 0) {\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x30) = 0x4806d0;\n                        fcn.004585a0();\n                        uVar3 = *(*0x20 + -0x18) - 0x80000000000;\n                    }\n                    return 1;\n                }\n            }\n            *(*0x20 + -0x30) = 0x48071b;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x480726;\n        fcn.0045a3a0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 613
    },
    "004807e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004807e0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (*0x593648 == 0) {\n        fcn.004631a0();\n    }\n    uVar1 = fcn.00457880();\n    if (unaff_RBX == 0) {\n        *in_RAX = uVar1;\n        return 0;\n    }\n    uVar1 = *0x538150;\n    if (unaff_RBX != 0x3e5) {\n        fcn.0040a5e0();\n        uVar1 = 0x4c9dd8;\n    }\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "004808c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004808c0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong *puVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if ((0x4e2f < *0x20) && (*(unaff_R14 + 0x10) <= *0x20 + -0x4e30 && *0x20 + -0x4e30 != *(unaff_R14 + 0x10))) {\n            puVar4 = *0x20 + -0x4eb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x4eb8) = 0x4808fd;\n            iVar2 = fcn.00465a20();\n            if (iVar2 != 0) {\n                return;\n            }\n            *(*0x20 + -0x4e90) = 0;\n            *(*0x20 + -0x4e90) = 6;\n            puVar5 = *0x20 + -0x4e88;\n            for (iVar2 = 0x9d0; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            *(*0x20 + -0x4e94) = 0x4e80;\n            *(*0x20 + -0x4eb8) = 0x480945;\n            iVar1 = fcn.00466960(*0x20 + -0x4e94);\n            if (*0x20 != 0x4e88) {\n                return;\n            }\n            iVar3 = 0;\n            while( true ) {\n                if (iVar1 <= iVar3) {\n                    *0x593400 = 1;\n                    return;\n                }\n                if (0x1f < iVar3) break;\n                if ((*(iVar3 * 0x274) >> 0x11 & 1) == 0) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *0xffffffffffffffd0 = 0x4809c5;\n            fcn.0045ca80(0x20);\n        }\n        *(puVar4 + -8) = 0x4809cb;\n        fcn.0045a3a0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 592
    },
    "00481be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00481be0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    fcn.00481c20();\n    return;\n}\n",
        "token_count": 84
    },
    "00481c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00481c20(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            arg1 = 0x400;\n            while( true ) {\n                *(*0x20 + -0x1c) = arg1;\n                *(*0x20 + -0x40) = 0x481c5c;\n                iVar3 = fcn.00445120(arg1);\n                if (*(*0x20 + -0x1c) == 0) break;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = 0x481c77;\n                uVar2 = fcn.0047f420(*(*0x20 + -0x1c));\n                if (iVar3 != 0) {\n                    return 0;\n                }\n                uVar1 = *(*0x20 + -0x1c);\n                if (uVar2 < uVar1) {\n                    *(*0x20 + -0x40) = 0x481c90;\n                    uVar4 = fcn.00465d20(uVar1);\n                    return uVar4;\n                }\n                arg1 = uVar1 + 0x400;\n            }\n            *(*0x20 + -0x40) = 0x481cb9;\n            in_RAX = fcn.0045ca80(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x481cc5;\n        fcn.0045a3a0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 541
    },
    "00482ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00482ba0(void)\n\n{\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    if (unaff_BL == '\\0') {\n        fcn.004828e0(5);\n    }\n    else {\n        fcn.004828e0(4);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00484d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00484d20(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong arg1_00;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n    }\n    iVar1 = fcn.00484b80();\n    fcn.0048a300(unaff_RBX, in_RDX, uStack0000000000000028);\n    arg1_00 = *(iVar1 + 8);\n    uVar2 = fcn.00448f60(arg1_00);\n    fcn.00484c20(arg1_00, in_RDX, uStack0000000000000028);\n    return uVar2;\n}\n",
        "token_count": 241
    },
    "00485660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00485660(uint64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.0045a3a0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    if ((arg1 == 0x74) || (arg1 == 0x76)) {\n        fcn.00482ba0();\n    }\n    else {\n        fcn.00485160(arg1, in_RDX, in_R8);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00489f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00489f60(uint64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    char cVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI <= unaff_RSI) {\n                return unaff_RBX;\n            }\n            if (unaff_RSI < unaff_RDI) {\n                if (*(arg1 + unaff_RSI) != '[') {\n                    return unaff_RBX;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x30) = arg3;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + 0x28) = unaff_RSI;\n                *(in_RAX + 0xb0) = 1;\n                cVar2 = arg1 + (-(unaff_RDI - unaff_RSI) >> 0x3f & unaff_RSI);\n                *(*0x20 + -0x28) = 0x489fdc;\n                iVar1 = fcn.00489e80();\n                if (((cVar2 != '\\0') && (-1 < iVar1)) && (iVar1 < *(*0x20 + 0x30))) {\n                    return iVar1;\n                }\n                *(*(*0x20 + 8) + 0xb1) = 0;\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x48a038;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.0045ca80(unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + 0x30) = arg3;\n        *(puVar3 + -8) = 0x48a05c;\n        fcn.0045a3a0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        arg3 = *(puVar3 + 0x30);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 761
    },
    "0048b5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048b5e0(uchar *arg1, uchar *noname_1, uchar *arg3, uchar *arg4)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *puVar7;\n    uchar *unaff_RDI;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (arg3 == unaff_RDI) {\n                *(*0x20 + -0xc0) = 0x48b657;\n                uVar1 = fcn.004027a0(unaff_RDI, noname_1);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg4 = *(*0x20 + 0x38);\n                noname_1 = uVar1;\n                in_RAX = *(*0x20 + 8);\n            }\n            else {\n                noname_1 = NULL;\n            }\n            if ((noname_1 != '\\0') || (arg4 == NULL)) {\n                return in_RAX;\n            }\n            *(*0x20 + -0xc0) = 0x48b6af;\n            iVar2 = fcn.0048b4a0(arg1);\n            if (iVar2 == 0) {\n                return *(*0x20 + 8);\n            }\n            iVar9 = *(*0x20 + 0x38);\n            if ((-1 < iVar9) && (iVar9 <= iVar2)) {\n                iVar2 = iVar9;\n            }\n            *(*0x20 + -0x28) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            arg3 = *0x20 + -0x28;\n            *(*0x20 + -0x28) = arg3;\n            unaff_RDI = *(*0x20 + 0x20);\n            arg1 = *(*0x20 + 0x10);\n            arg4 = arg1 + (*(*0x20 + 0x30) - unaff_RDI) * iVar2;\n            if (-1 < arg4) {\n                *(*0x20 + -0x50) = iVar2;\n                if (*(*0x20 + -0x10) - *(*0x20 + -0x18) < arg4) {\n                    *(*0x20 + -0x80) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = arg4 + *(*0x20 + -0x10) * 2;\n                    *(*0x20 + -0xc0) = 0x48b765;\n                    iVar2 = fcn.00445120(arg4 + *(*0x20 + -0x10) * 2);\n                    unaff_RSI = *(*0x20 + -0x80);\n                    puVar5 = unaff_RSI;\n                    if (*(*0x20 + -0x18) < unaff_RSI) {\n                        puVar5 = *(*0x20 + -0x18);\n                    }\n                    if (iVar2 != *(*0x20 + -0x20)) {\n                        *(*0x20 + -0x30) = iVar2;\n                        *(*0x20 + -0xc0) = 0x48b796;\n                        fcn.0045d3c0(puVar5);\n                        iVar2 = *(*0x20 + -0x30);\n                        unaff_RSI = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x78);\n                    *(*0x20 + -0x20) = iVar2;\n                    iVar2 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                arg4 = *(*0x20 + 0x18);\n                iVar9 = *(*0x20 + 8);\n                puVar5 = NULL;\n                noname_1 = NULL;\n                while (arg3 = *0x20 + -0x28,  noname_1 < iVar2) {\n                    *(*0x20 + -0x88) = noname_1;\n                    *(*0x20 + -0x90) = puVar5;\n                    if (unaff_RDI == NULL) {\n                        puVar7 = puVar5;\n                        if (0 < noname_1) {\n                            if (arg1 < puVar5) goto code_r0x0048bca5;\n                            *(*0x20 + -0xc0) = 0x48b90a;\n                            fcn.0046bd00(-(arg1 - puVar5) >> 0x3f & puVar5);\n                            puVar5 = *(*0x20 + -0x90) + (arg1 - puVar5);\n                            arg1 = *(*0x20 + 0x10);\n                            unaff_RDI = *(*0x20 + 0x20);\n                            arg4 = *(*0x20 + 0x18);\n                            iVar9 = *(*0x20 + 8);\n                            puVar7 = *(*0x20 + -0x90);\n                        }\n                    }\n                    else {\n                        if (arg1 < puVar5) goto code_r0x0048bc9b;\n                        *(*0x20 + -0xc0) = 0x48b97e;\n                        iVar2 = fcn.0048bd20(arg4, noname_1);\n                        puVar5 = *(*0x20 + -0x90) + iVar2;\n                        arg1 = *(*0x20 + 0x10);\n                        unaff_RDI = *(*0x20 + 0x20);\n                        arg4 = *(*0x20 + 0x18);\n                        iVar9 = *(*0x20 + 8);\n                        puVar7 = *(*0x20 + -0x90);\n                    }\n                    arg3 = *0x20 + -0x28;\n                    if (arg1 < puVar5) goto code_r0x0048bc90;\n                    if (puVar5 < puVar7) goto code_r0x0048bc85;\n                    iVar2 = puVar5 - puVar7;\n                    unaff_RSI = puVar7 & -iVar2 >> 0x3f;\n                    puVar7 = unaff_RSI + iVar9;\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = arg3;\n                    }\n                    else if (*(*0x20 + -0x28) != arg3) goto code_r0x0048bc6d;\n                    *(*0x20 + -0x58) = puVar5;\n                    puVar5 = *(*0x20 + -0x18);\n                    unaff_RSI = puVar5 + iVar2;\n                    *(*0x20 + -0x60) = unaff_RSI;\n                    arg4 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0x20);\n                    if (arg4 < unaff_RSI) {\n                        *(*0x20 + -0x68) = iVar2;\n                        *(*0x20 + -0x40) = puVar7;\n                        *(*0x20 + -0x70) = puVar5;\n                        *(*0x20 + -0xc0) = 0x48ba65;\n                        uVar3 = fcn.00445200(puVar5);\n                        iVar2 = *(*0x20 + -0x68);\n                        unaff_RDI = arg4;\n                        arg4 = puVar5;\n                    }\n                    *(*0x20 + -0x68) = arg4;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0xc0) = 0x48ba93;\n                    fcn.0045d3c0(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    if (*(*0x20 + -0x28) == NULL) {\n                        *(*0x20 + -0x28) = *0x20 + -0x28;\n                    }\n                    else {\n                        arg3 = *0x20 + -0x28;\n                        if (*(*0x20 + -0x28) != arg3) goto code_r0x0048bc5a;\n                    }\n                    uVar4 = *(*0x20 + -0x18);\n                    iVar2 = *(*0x20 + 0x30);\n                    *(*0x20 + -0x60) = iVar2 + uVar4;\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x10) < iVar2 + uVar4) {\n                        *(*0x20 + -0x68) = uVar4;\n                        *(*0x20 + -0xc0) = 0x48bb3a;\n                        uVar3 = fcn.00445200(uVar4);\n                        iVar2 = *(*0x20 + 0x30);\n                        uVar8 = uVar4;\n                    }\n                    *(*0x20 + -0x68) = uVar8;\n                    *(*0x20 + -0x38) = uVar3;\n                    *(*0x20 + -0xc0) = 0x48b83f;\n                    fcn.0045d3c0(iVar2);\n                    *(*0x20 + -0x18) = *(*0x20 + -0x60);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x68);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    puVar5 = unaff_RDI + *(*0x20 + -0x58);\n                    arg1 = *(*0x20 + 0x10);\n                    iVar2 = *(*0x20 + -0x50);\n                    arg4 = *(*0x20 + 0x18);\n                    iVar9 = *(*0x20 + 8);\n                    unaff_RSI = arg1;\n                    noname_1 = *(*0x20 + -0x88) + 1;\n                }\n                if (puVar5 <= arg1) {\n                    iVar2 = arg1 - puVar5;\n                    arg1 = -iVar2 >> 0x3f;\n                    arg4 = *(*0x20 + -0x28);\n                    if (arg4 == NULL) {\n                        *(*0x20 + -0x28) = arg3;\ncode_r0x0048bb92:\n                        uVar4 = *(*0x20 + -0x18);\n                        *(*0x20 + -0x50) = uVar4 + iVar2;\n                        uVar3 = *(*0x20 + -0x20);\n                        uVar8 = *(*0x20 + -0x10);\n                        if (*(*0x20 + -0x10) < uVar4 + iVar2) {\n                            *(*0x20 + -0x58) = uVar4;\n                            *(*0x20 + -0x60) = iVar2;\n                            *(*0x20 + -0x48) = (puVar5 & arg1) + iVar9;\n                            *(*0x20 + -0xc0) = 0x48bbd6;\n                            uVar3 = fcn.00445200(uVar4);\n                            iVar2 = *(*0x20 + -0x60);\n                            uVar8 = uVar4;\n                        }\n                        *(*0x20 + -0x58) = uVar8;\n                        *(*0x20 + -0x38) = uVar3;\n                        *(*0x20 + -0xc0) = 0x48bc05;\n                        fcn.0045d3c0(iVar2);\n                        *(*0x20 + -0x18) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x10) = *(*0x20 + -0x58);\n                        *(*0x20 + -0x20) = *(*0x20 + -0x38);\n                        return *(*0x20 + -0x38);\n                    }\n                    if (arg4 == arg3) goto code_r0x0048bb92;\n                    *(*0x20 + -0xc0) = 0x48bc52;\n                    fcn.00432ec0();\n                }\n                *(*0x20 + -0xc0) = 0x48bc5a;\n                fcn.0045cb40(arg1);\ncode_r0x0048bc5a:\n                *(*0x20 + -0xc0) = 0x48bc6d;\n                fcn.00432ec0();\ncode_r0x0048bc6d:\n                puVar5 = 0x4c9820;\n                *(*0x20 + -0xc0) = 0x48bc85;\n                fcn.00432ec0();\n                puVar7 = unaff_RSI;\ncode_r0x0048bc85:\n                *(*0x20 + -0xc0) = 0x48bc90;\n                arg1 = puVar5;\n                fcn.0045cb40(puVar5);\ncode_r0x0048bc90:\n                *(*0x20 + -0xc0) = 0x48bc9b;\n                noname_1 = arg1;\n                fcn.0045cac0(puVar5, arg1);\n                arg1 = puVar5;\n                unaff_RSI = puVar7;\ncode_r0x0048bc9b:\n                *(*0x20 + -0xc0) = 0x48bca5;\n                fcn.0045cb40(arg1);\ncode_r0x0048bca5:\n                *(*0x20 + -0xc0) = 0x48bcad;\n                fcn.0045cb40(arg1);\n            }\n            unaff_RBX = 0x4c9830;\n            *(*0x20 + -0xc0) = 0x48bcc5;\n            in_RAX = fcn.00432ec0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + 0x38) = arg4;\n        *(puVar6 + -8) = 0x48bcee;\n        fcn.0045a3a0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        arg4 = *(puVar6 + 0x38);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3761
    },
    "00401ca0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401ca0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "004021c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.004021c0(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = 0; iVar1 < unaff_RBX; iVar1 = iVar1 + 1) {\n        if (*(in_RAX + iVar1) == param_1) {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "00431c60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431c60(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x431c8a;\n            fcn.00431440(0x15);\n            *(*0x20 + -0x28) = 0x431ca9;\n            fcn.00432ec0();\n        }\n        *(puVar1 + -8) = 0x431caf;\n        fcn.0045a3a0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00431cc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00431cc0(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x431ce5;\n            fcn.00431500();\n            iVar1 = *0x538230;\n            if (*0x538230 != 0) {\n                iVar1 = *(*0x538230 + 8);\n            }\n            *(*0x20 + -0x20) = 0x431d05;\n            fcn.00432ec0(iVar1);\n        }\n        *(puVar2 + -8) = 0x431d0b;\n        fcn.0045a3a0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 280
    },
    "004322c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004322c0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4322e5;\n            fcn.00433640();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4322eb;\n        fcn.0045a3a0();\n    } while( true );\n}\n",
        "token_count": 179
    },
    "00432300": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00432300(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x432325;\n            fcn.00433640();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43232b;\n        fcn.0045a3a0();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "004367e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004367e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436805;\n            fcn.00433640();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43680b;\n        fcn.0045a3a0();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00436820": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436820(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x436845;\n            fcn.00433640();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43684b;\n        fcn.0045a3a0();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "00436920": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436920(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t arg1_00;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00433640();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x43697b;\n                fcn.0040ac20();\n                uVar2 = *0x53f620;\n                arg1_00 = *0x53f628;\n                uVar4 = *0x53f620;\n                if (*0x53f630 < *0x53f628 + 1) {\n                    *(puVar5 + -0x58) = 0x4369a5;\n                    arg1 = *0x53f628;\n                    uVar4 = fcn.00445200(*0x53f628);\n                    arg1_00 = uVar2;\n                    uVar2 = uVar4;\n                    *0x53f630 = arg1;\n                    if (*0x593680 != 0) {\n                        *(puVar5 + -0x58) = 0x4369ca;\n                        uVar4 = fcn.0045c5e0(arg1, param_2, param_3, param_4);\n                        uVar2 = *0x53f620;\n                    }\n                }\n                *0x53f620 = uVar2;\n                *0x53f628 = arg1_00 + 1;\n                if (*0x593680 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(uVar4 + arg1_00 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x4369fd;\n                    fcn.0045c700(arg1_00, param_2, param_3, param_4);\n                }\n                if (*0x53f628 != 0) {\n                    uVar2 = *0x53ec90;\n                    if ((*0x53ec90 != *0x53f620) && (uVar2 = *0x53f620,  *0x593680 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x53f620;\n                        *(puVar5 + -0x58) = 0x436a34;\n                        fcn.00403aa0();\n                        uVar2 = *(puVar5 + -0x10);\n                    }\n                    *0x53ec90 = uVar2;\n                    uVar1 = *0x5934a8;\n                    *0x5934a8 = *0x53f628;\n                    *(puVar5 + -0x58) = 0x436a65;\n                    fcn.0040ae40(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x436a76;\n                fcn.0045ca80(0);\n            }\n            *(puVar5 + -0x58) = 0x436a87;\n            iVar3 = fcn.00433640();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x436a92;\n        fcn.0045a3a0();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 976
    },
    "00441f00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00441f00(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 269
    },
    "0044f300": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044f300(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44f325;\n            fcn.00433640();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44f32b;\n        fcn.0045a3a0();\n    } while( true );\n}\n",
        "token_count": 179
    },
    "0045c180": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045c180(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 55
    },
    "0045ca80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ca80(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x4315b4;\n            fcn.00431440(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x4315f0;\n            arg1 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x4315ff;\n            in_RAX = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x43160f;\n        fcn.0045a3a0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 455
    },
    "0045caa0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045caa0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431654;\n            fcn.00431440(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x431690;\n            arg1 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x43169f;\n            in_RAX = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x4316af;\n        fcn.0045a3a0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 451
    },
    "0045cac0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cac0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x4316f4;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x431730;\n            arg2 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x43173f;\n            arg1 = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x43174f;\n        fcn.0045a3a0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 447
    },
    "0045cb00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb00(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x431834;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431870;\n            arg2 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x43187f;\n            arg1 = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x43188f;\n        fcn.0045a3a0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 445
    },
    "0045cb20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb20(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x4318d4;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x431910;\n            arg2 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x43191f;\n            arg1 = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x43192f;\n        fcn.0045a3a0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 447
    },
    "0045cb40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb40(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431974;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x4319b0;\n            arg1 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x4319bf;\n            in_RAX = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x4319cf;\n        fcn.0045a3a0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 453
    },
    "0045cb60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb60(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x431a14;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x431a50;\n            arg1 = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x431a5f;\n            in_RAX = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x431a6f;\n        fcn.0045a3a0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 455
    },
    "0045cb80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cb80(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431ab4;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431af0;\n            unaff_RBX = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x431aff;\n            arg2 = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x431b0f;\n        fcn.0045a3a0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 464
    },
    "0045cba0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045cba0(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x431b54;\n            fcn.00431440(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x431b90;\n            unaff_RBX = fcn.0040a4e0();\n            *(*0x20 + -0x40) = 0x431b9f;\n            arg2 = fcn.00432ec0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x431baf;\n        fcn.0045a3a0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 465
    },
    "0045eaa0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0045eaa0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_RDI;\n    int64_t in_GS_OFFSET;\n    uchar auStack24 [16];\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar7 = &stack0xfffffffffffffff8;\n    uVar3 = fcn.00433640();\n    puVar5 = auStack24;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x40;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            *(puVar5 + -0x10) = uVar3;\n            *(puVar5 + -0x48) = 0x45871e;\n            iVar4 = fcn.00449a80();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(puVar5 + -0x20) = iVar4;\n            *(puVar5 + -0x48) = 0x45872f;\n            uVar3 = fcn.00449580();\n            if (unaff_RDI != 0) {\n                *(puVar5 + -0x28) = 0x32;\n                *(puVar5 + -0x18) = uVar3;\n                *(puVar5 + -0x48) = 0x458750;\n                fcn.0045d3c0(*(puVar5 + -0x20));\n                return *(puVar5 + -0x18);\n            }\n            *(puVar5 + -0x48) = 0x45877c;\n            uVar3 = fcn.0045ca80(0);\n        }\n        *(puVar6 + 8) = uVar3;\n        *(puVar6 + -8) = 0x458787;\n        fcn.0045a3a0();\n        uVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 538
    }
}