{
    "0040105f": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint fcn.0040105f(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47ea28;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a2460 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (-1 < *(param_2 + -0xc)) {\n        iVar3 = fcn.0043c5c9(param_2, \"m_str\", uVar2);\n        if ((iVar3 != 0) && (iVar3 == param_2)) {\n            iVar3 = *(param_2 + -0xc) + -5;\ncode_r0x00406206:\n            fcn.004011b3(param_1, iVar3);\n            piStack12 = 0xffffffff;\n            piVar1 = param_2 + -4;\n            LOCK();\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n            }\n            *in_FS_OFFSET = unaff_ESI;\n            return param_1;\n        }\n        if (-1 < *(param_2 + -0xc)) {\n            iVar3 = fcn.0043c5c9(param_2, \"m_dt\");\n            if ((iVar3 != 0) && (iVar3 == param_2)) {\n                iVar3 = *(param_2 + -0xc) + -4;\n                goto code_r0x00406206;\n            }\n            if (-1 < *(param_2 + -0xc)) {\n                iVar3 = fcn.0043c5c9(param_2, 0x487574);\n                if ((iVar3 != 0) && (iVar3 == param_2)) {\n                    iVar3 = *(param_2 + -0xc) + -3;\n                    goto code_r0x00406206;\n                }\n                if (-1 < *(param_2 + -0xc)) {\n                    iVar3 = fcn.0043c5c9(param_2, 0x487570);\n                    if ((iVar3 != 0) && (iVar3 == param_2)) {\n                        fcn.004011b3(param_1, *(param_2 + -0xc) + -3);\n                        goto code_r0x00406348;\n                    }\n                    if (-1 < *(param_2 + -0xc)) {\n                        iVar3 = fcn.0043c5c9(param_2, \"m_rgb\");\n                        if ((iVar3 != 0) && (iVar3 == param_2)) {\n                            fcn.004011b3(param_1, *(param_2 + -0xc) + -5);\n                            goto code_r0x00406348;\n                        }\n                        if (-1 < *(param_2 + -0xc)) {\n                            iVar3 = fcn.0043c5c9(param_2, 0x487564);\n                            if ((iVar3 != 0) && (iVar3 == param_2)) {\n                                fcn.004011b3(param_1, *(param_2 + -0xc) + -3);\n                                goto code_r0x00406348;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.00401352(0x4875c7);\ncode_r0x00406348:\n    fcn.0040144c();\n    *in_FS_OFFSET = NULL;\n    return param_1;\n}\n",
        "token_count": 869
    },
    "00426911": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426911(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar1 = fcn.004268c6(arg_8h);\n    iVar2 = fcn.0042685a(arg_8h);\n    if (iVar2 != 0) {\n        iVar1 = iVar1 + (bVar6 * 2 + 1) * 2;\n        iVar2 = fcn.004410a0(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        iVar5 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar5 = *(arg_8h + 8);\n    }\n    if (iVar5 != 0) {\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            uVar4 = *puVar3;\n            if ((uVar4 != 0) && (!bVar6)) {\n                uVar4 = uVar4 - 2;\n            }\n            iVar5 = iVar5 + -1;\n            iVar1 = puVar3 + uVar4 + 2;\n        } while (iVar5 != 0);\n    }\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 493
    },
    "00426c35": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.00426c35(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.DLL_GlobalLock)(*in_ECX);\n        bVar12 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.0042685a(puVar2);\n        iVar1 = bVar12 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar12) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(arg_8h);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar4 = var_58h + iVar4 * 2;\n            if (var_58h <= iVar4) {\n                uVar13 = fcn.004268c6(puVar2);\n                puVar5 = uVar13;\n                iVar7 = 0;\n                iVar10 = uVar13 >> 0x20;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.004410a0(puVar5 + iVar1);\n                    iVar7 = var_58h + 2 + iVar3 * 2;\n                    iVar10 = iVar4;\n                }\n                uVar6 = iVar7 + 3 + puVar5 & 0xfffffffc;\n                uVar11 = puVar5 + iVar10 + 3 & 0xfffffffc;\n                if (bVar12) {\n                    iVar9 = *(puVar2 + 4);\n                }\n                else {\n                    iVar9 = *(puVar2 + 2);\n                }\n                if ((iVar4 != iVar7) && (iVar9 != 0)) {\n                    uVar8 = (in_ECX[1] - uVar6) + puVar2;\n                    if (in_ECX[1] < uVar8) goto code_r0x00426d75;\n                    fcn.00426a17(uVar11, uVar8, uVar6, uVar8);\n                }\n                *puVar5 = arg_ch;\n                iVar4 = iVar4 + iVar1 * -2;\n                fcn.00426a17(puVar5 + iVar1, iVar4, &var_44h, iVar4);\n                in_ECX[1] = in_ECX[1] + (uVar11 - uVar6);\n                (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x00426d75:\n    fcn.0043bb11(var_58h);\n    return;\n}\n",
        "token_count": 867
    },
    "null": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401078": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.00401078(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    char *pcVar4;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47e601;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a2460 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 1;\n    piVar2 = fcn.0041bca8(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401451(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *unaff_retaddr = iVar3 + 0x10;\n    if (*(param_1 + -0xc) < 0) goto code_r0x004048eb;\n    iVar3 = fcn.0043c5c9(param_1, \"m_str\");\n    if ((iVar3 == 0) || (iVar3 != param_1)) {\n        if (*(param_1 + -0xc) < 0) goto code_r0x004048eb;\n        iVar3 = fcn.0043c5c9(param_1, \"m_dt\");\n        if ((iVar3 == 0) || (iVar3 != param_1)) {\n            if (*(param_1 + -0xc) < 0) goto code_r0x004048eb;\n            iVar3 = fcn.0043c5c9(param_1, 0x487574);\n            if ((iVar3 == 0) || (iVar3 != param_1)) {\n                if (*(param_1 + -0xc) < 0) goto code_r0x004048eb;\n                iVar3 = fcn.0043c5c9(param_1, 0x487570);\n                if ((iVar3 == 0) || (iVar3 != param_1)) {\n                    if (*(param_1 + -0xc) < 0) goto code_r0x004048eb;\n                    iVar3 = fcn.0043c5c9(param_1, \"m_rgb\");\n                    if ((iVar3 == 0) || (iVar3 != param_1)) {\n                        if (*(param_1 + -0xc) < 0) goto code_r0x004048eb;\n                        iVar3 = fcn.0043c5c9(param_1, 0x487564);\n                        if ((iVar3 == 0) || (iVar3 != param_1)) goto code_r0x004048eb;\n                        pcVar4 = \"%s = FALSE;\";\n                    }\n                    else {\n                        pcVar4 = \"%s = 0;\";\n                    }\n                }\n                else {\n                    pcVar4 = \"%s = 0.0;\";\n                }\n            }\n            else {\n                pcVar4 = \"%s = 0;\";\n            }\n        }\n        else {\n            pcVar4 = \"%s = 0.0;\";\n        }\n    }\n    else {\n        pcVar4 = \"%s = _T(\\\"\\\");\";\n    }\n    fcn.0040105a(unaff_retaddr, pcVar4, param_1);\ncode_r0x004048eb:\n    uStack8 = uStack8 & 0xffffff00;\n    piVar2 = param_1 + -4;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n    }\n    *in_FS_OFFSET = piStack16;\n    return unaff_retaddr;\n}\n",
        "token_count": 891
    },
    "004010b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004010b4(int32_t param_1, uint32_t param_2, int32_t *param_3)\n\n{\n    uint8_t uVar3;\n    uint32_t uVar1;\n    uint8_t *arg_8h;\n    int32_t iVar2;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int32_t arg_8h_00;\n    uint uStack268;\n    int32_t *piStack264;\n    char acStack260 [61];\n    uchar uStack199;\n    uint32_t uStack4;\n    \n    uStack4 = *0x4a2460 ^ &stack0xfffffef0;\n    uVar7 = 0;\n    piStack264 = param_3;\n    arg_8h_00 = 0;\n    fcn.0043c410(acStack260, 0x80, 0x100);\n    uVar1 = 0;\n    do {\n        acStack260[\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[uVar1]] = uVar1;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x40);\n    uVar4 = 0;\n    uVar1 = 0;\n    uStack199 = 0;\n    if (param_2 != 0) {\n        do {\n            if (acStack260[*(uVar1 + param_1)] != -0x80) {\n                uVar4 = uVar4 + 1;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n        if ((uVar4 != 0) && ((uVar4 & 3) == 0)) {\n            arg_8h = fcn.0043c34d((uVar4 >> 2) * 3);\n            iVar2 = 0;\n            puVar5 = arg_8h;\n            if (arg_8h != NULL) {\n                do {\n                    puVar6 = puVar5;\n                    if (acStack260[*(uVar7 + param_1)] != -0x80) {\n                        if (*(uVar7 + param_1) == 0x3d) {\n                            arg_8h_00 = arg_8h_00 + 1;\n                        }\n                        *(&uStack268 + iVar2) = acStack260[*(uVar7 + param_1)];\n                        iVar2 = iVar2 + 1;\n                        if (iVar2 == 4) {\n                            uVar3 = uStack268 >> 8;\n                            *puVar5 = uVar3 >> 4 | uStack268 * '\\x04';\n                            puVar5[1] = uStack268._2_1_ >> 2 | uVar3 << 4;\n                            puVar5[2] = uStack268._2_1_ << 6 | uStack268._3_1_;\n                            puVar6 = puVar5 + 3;\n                            iVar2 = 0;\n                            if (arg_8h_00 != 0) {\n                                if (arg_8h_00 == 1) {\n                                    puVar6 = puVar5 + 2;\n                                }\n                                else {\n                                    if (arg_8h_00 != 2) {\n                                        fcn.0043c1fb(arg_8h);\n                                        goto code_r0x004024e5;\n                                    }\n                                    puVar6 = puVar5 + 1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    uVar7 = uVar7 + 1;\n                    puVar5 = puVar6;\n                } while (uVar7 < param_2);\n                *piStack264 = puVar6 - arg_8h;\n            }\ncode_r0x004024e5:\n            fcn.0043bb11(arg_8h_00);\n            return;\n        }\n    }\n    fcn.0043bb11(arg_8h_00);\n    return;\n}\n",
        "token_count": 898
    },
    "004010cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010cd(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            fcn.004012f3();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.0043bec7(iVar4 + 0x10, param_2 + 1, iVar5, param_2 + 1);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 1);\n        if (iVar5 != 0) goto code_r0x00402cee;\n    }\n    iVar5 = fcn.004012f3();\ncode_r0x00402cee:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 597
    },
    "00401190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.00401190(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar2 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar3 = (***piVar2)(param_1[1], 1);\n    if (ppiVar3 == NULL) {\n        fcn.00401451(0x8007000e);\n        pcVar1 = swi(3);\n        ppiVar3 = (*pcVar1)();\n        return ppiVar3;\n    }\n    ppiVar3[1] = param_1[1];\n    fcn.0043bec7(ppiVar3 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    return ppiVar3;\n}\n",
        "token_count": 257
    },
    "0040120d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040120d(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *arg_8h;\n    \n    if (param_1 == NULL) {\n        fcn.00401451(0x80070057);\n    }\n    arg_8h = param_1;\n    if (param_1 < 0) {\n        fcn.00401451(0x80070057);\n        arg_8h = extraout_ECX;\n    }\n    if (param_2 == 0) {\n        fcn.00401451(0x80070057);\n        arg_8h = extraout_ECX_00;\n    }\n    iVar1 = *param_1;\n    if (iVar1 == param_2) goto code_r0x0040cb48;\n    if (param_2 < arg_8h) {\n        iVar1 = fcn.0043d242(iVar1, arg_8h, 1);\n        if (iVar1 != 0) goto code_r0x0040cb59;\n        iVar1 = fcn.00401451(0x8007000e);\n    }\n    fcn.0043c1fb(iVar1);\n    do {\n        *param_1 = param_2;\n        while( true ) {\n            if (*param_1 != 0) {\n                return;\n            }\n            fcn.00401451(0x8007000e);\n            arg_8h = extraout_ECX_01;\ncode_r0x0040cb48:\n            if (arg_8h <= param_2) break;\n            iVar1 = fcn.0043cfe8(arg_8h, 1);\ncode_r0x0040cb59:\n            *param_1 = iVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 441
    },
    "00401212": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401212(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00401451(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "004012ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004012ee(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.0043bec7(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.0040dcf0(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "00401339": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401339(uint *param_1)\n\n{\n    code *pcVar1;\n    uint *apuStack16 [4];\n    \n    if (param_1 == NULL) {\n        apuStack16[0] = NULL;\n    }\n    else {\n        apuStack16[0] = param_1;\n        if (0xffffffff / ZEXT48(param_1) == 0) {\n            apuStack16[0] = &param_1;\n            param_1 = NULL;\n            fcn.0043bc5b();\n            apuStack16[0] = vtable.std::bad_alloc.0;\n            fcn.0043cb83(apuStack16, 0x499db4);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.0040dcc5();\n    return;\n}\n",
        "token_count": 195
    },
    "004013bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004013bb(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 == ppiVar5) {\n        return param_1;\n    }\n    piVar2 = iVar4 + -4;\n    if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n        iVar4 = fcn.00401190(ppiVar1);\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *param_1 = iVar4 + 0x10;\n        return param_1;\n    }\n    fcn.0040101e(iVar3, *(iVar3 + -0xc));\n    return param_1;\n}\n",
        "token_count": 300
    },
    "004013d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004013d4(int32_t **param_1)\n\n{\n    int32_t **arg_8h;\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    while (piVar1 != NULL) {\n        arg_8h = *param_1;\n        *param_1 = *arg_8h;\n        fcn.0043c1fb(arg_8h);\n        piVar1 = *param_1;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0043c1fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043c1fb(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49e480, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4a8200 == 3) {\n            fcn.004484f3(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0044860f(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0044863a(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0043c251();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0043c283;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x4a6598, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0043e08a();\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            uVar3 = fcn.0043e04f(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0043c283:\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 436
    },
    "0040ddcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0040ddcb(uint32_t *param_1, int32_t param_2)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    \n    Var2 = *0x4a43a4 >> 8;\n    if (*0x4a43a4 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((param_2 == 0) || (*param_1 != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x4a43a4)(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "0040de01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040de01(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4a43ac == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x4a43ac)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 108
    },
    "0040e169": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e169(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.004216f3(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0040e2fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e2fe(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.DLL_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00422524(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00422524(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "0040e494": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.0040e494(int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_11ch;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    if (Locale == 0x800) {\n        uVar1 = fcn.0043ddc9(&var_11ch, 4, 0x489824);\n        fcn.004013ac(uVar1);\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.DLL_GetLocaleInfoA)(Locale, 3, &var_11ch, 4);\n        if (iVar5 == 0) goto code_r0x0040e554;\n    }\n    puVar2 = fcn.0043e08a();\n    uVar1 = *puVar2;\n    puVar2 = fcn.0043e08a();\n    *puVar2 = 0;\n    uVar3 = fcn.0043df89(&lpLibFileName, 0x112, 0x111, in_ECX, &var_11ch);\n    piVar4 = fcn.0043e08a();\n    if (*piVar4 == 0) {\n        puVar2 = fcn.0043e08a();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.0043e08a();\n        fcn.0040e3d3(*puVar2);\n    }\n    if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n        (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x0040e554:\n    fcn.0043bb11(var_11ch);\n    return;\n}\n",
        "token_count": 466
    },
    "0040e561": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e561(int32_t *param_1)\n\n{\n    if ((*0x4a43a8 != NULL) && (*param_1 != -1)) {\n        fcn.0040de2e();\n        (**0x4a43a8)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0040e7cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e9d5)\n\nvoid fcn.0040e7cb(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char **in_FS_OFFSET;\n    char *arg_8h;\n    char *pcStack304;\n    char *pcStack300;\n    uint auStack288 [65];\n    uchar uStack28;\n    uchar uStack27;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack288;\n    auStack288[0] = 0x58;\n    fcn.0043d895();\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetModuleHandleA;\n    pcStack300 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)();\n    pcVar4 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n    arg_8h = pcStack300;\n    pcVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)();\n    if (pcVar3 == NULL) {\n        iVar5 = (*_sym.imp.KERNEL32.DLL_GetVersion)();\n        if (iVar5 < 0) {\n            pcStack304 = &stack0xfffffec8;\n            arg_8h = NULL;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n                if (((iVar5 == 0) && (*0x10 == 0x165)) &&\n                   (iVar5 = fcn.0043e200(),  pcVar1 = _sym.imp.KERNEL32.DLL_ConvertDefaultLocale,  iVar5 == 1)) {\n                    (*_sym.imp.KERNEL32.DLL_ConvertDefaultLocale)();\n                    (*pcVar1)();\n                    pcStack304 = 0x2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n        else {\n            pcStack304 = \"ntdll.dll\";\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                (*_sym.imp.KERNEL32.DLL_EnumResourceLanguagesA)();\n            }\n        }\n    }\n    else {\n        (*pcVar3)();\n        pcVar1 = _sym.imp.KERNEL32.DLL_ConvertDefaultLocale;\n        (*_sym.imp.KERNEL32.DLL_ConvertDefaultLocale)();\n        (*pcVar1)();\n        arg_8h = \"GetSystemDefaultUILanguage\";\n        pcStack304 = 0x2;\n        pcVar4 = (*pcVar4)();\n        if (pcVar4 != NULL) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar1)();\n            pcStack304 = 0x4;\n        }\n    }\n    iVar5 = pcStack304 * 4;\n    pcStack304 = pcStack304 + 1;\n    *(&stack0xfffffeac + iVar5) = 0x800;\n    uStack27 = 0;\n    uStack28 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)();\n    if (iVar5 != 0) {\n        fcn.0043c410();\n        fcn.0040dd1b();\n        cVar2 = fcn.0040ddcb();\n        if (cVar2 != '\\0') {\n            fcn.0040de01();\n        }\n        iVar5 = 0;\n        if (0 < pcStack304) {\n            do {\n                iVar6 = fcn.0040e494(*(&stack0xfffffeac + iVar5 * 4));\n                if (iVar6 != 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < pcStack304);\n        }\n        fcn.0040e561();\n    }\n    *in_FS_OFFSET = pcStack300;\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 897
    },
    "0040ef92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ef92(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.004145d6();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x0040efb0;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x0040f066;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0040f066:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.00415371(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.0040ee5a(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x0040f02d:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.0040ee42(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x0040f02d;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.00411ea1();\ncode_r0x0040efb0:\n    iVar1 = fcn.004145d6();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 754
    },
    "0040f5e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f5e2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_4h;\n    \n    fcn.0043d8c8(0x10);\n    *(unaff_EBP + -4) = 0;\n    fcn.004239d6();\n    fcn.00423c47(0xffffffff);\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 8) == 0) {\n        iVar1 = fcn.00414649();\n        if ((iVar1 != 0) && (*(iVar1 + 0x3c) != NULL)) {\n            (**(**(iVar1 + 0x3c) + 0x60))();\n            if (*(iVar1 + 0x3c) != NULL) {\n                (**(**(iVar1 + 0x3c) + 4))(1);\n            }\n            *(iVar1 + 0x3c) = 0;\n        }\n    }\n    bVar2 = *0x4a5eec != 0;\n    *(unaff_EBP + -4) = 4;\n    if (bVar2) {\n        fcn.00422ec4(*(unaff_EBP + 8), 0);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 331
    },
    "0040f963": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040f963(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.00414649();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.0040f7a7(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.0040e447();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[8];\n    }\n    iVar1 = fcn.00417bd8(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0041769a(*param_1);\n            piVar4 = fcn.00418fa4();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "0040fa71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040fa71(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.00414649();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0xf] != NULL) {\n            (*piVar1[0xf])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.0040f5e2(0);\n    fcn.00440e82(unaff_retaddr);\n    return;\n}\n",
        "token_count": 179
    },
    "0040fd89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040fd89(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004145d6();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00414023();\n        uVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x40fbf5, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "004103f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004103f4(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.00401410(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 63
    },
    "00410894": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410894(int32_t param_1)\n\n{\n    if (*(param_1 + 0x58) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041089f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x58) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00410a32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00410a32(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00410a67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410a67(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040e447();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00410b46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410b46(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t hWnd;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *lpCaption;\n    int32_t *arg_8h;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack160;\n    fcn.00410a67(0);\n    arg_8h = &iStack272;\n    hWnd = fcn.00410a9b(0);\n    if (hWnd != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    iStack280 = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &iStack280);\n    if ((((hWnd == 0) || (iVar1 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcessId)(),  iStack280 != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        lpCaption = auStack268;\n        iVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        lpCaption = *(param_1 + 0x50);\n    }\n    fcn.004109d0(hWnd, param_2, lpCaption, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.00410a67(1);\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 697
    },
    "00410da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410da0(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.004178d9();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004180c8();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 164
    },
    "004119d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.004119d1(uint32_t arg_8h, uint32_t wParam, int32_t lParam, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == 0x2b) {\n        var_4h = lParam;\n        var_8h = 0x411a56;\n        (**(*in_ECX + 0x138))();\n        return 1;\n    }\n    if (arg_8h == 0x2c) {\n        var_4h = lParam;\n        var_8h = 0x411a49;\n        (**(*in_ECX + 0x13c))();\n        return 1;\n    }\n    if (arg_8h == 0x2d) {\n        var_4h = lParam;\n        var_8h = 0x411a3c;\n        (**(*in_ECX + 0x144))();\n        return 1;\n    }\n    if (arg_8h == 0x2e) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x411a2f;\n        iVar1 = (**(*in_ECX + 0x148))();\n    }\n    else if (arg_8h == 0x2f) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x411a19;\n        iVar1 = (**(*in_ECX + 0x14c))();\n    }\n    else {\n        if (arg_8h != 0x39) {\n            if (in_ECX[0x14] != 0) {\n                var_8h = lParam;\n                var_ch = wParam;\n                iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], arg_8h + 0x2000);\n                if ((6 < arg_8h - 0x132) || (iVar1 != 0)) {\n                    if (arg_14h != NULL) {\n                        *arg_14h = iVar1;\n                    }\n                    iVar1 = 1;\n                }\n                return iVar1;\n            }\n            if (arg_8h < 0x112) {\n                if (arg_8h == 0x111) {\n                    iVar1 = fcn.0040ef92(0, wParam >> 0x10 | 0xbd110000, 0, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    if (arg_14h != NULL) {\n                        *arg_14h = 1;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (0x2a < arg_8h) {\n                    if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0041a20d;\n                    if (arg_8h == 0x4e) {\n                        var_8h = arg_14h;\n                        var_4h = lParam;\n                        iVar1 = fcn.0040ef92(0, *(lParam + 8) & 0xffff | 0xbc4e0000, &fcn.004119d1::var_8h, 0);\n                        return iVar1;\n                    }\n                }\n            }\n            else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0041a20d:\n                iVar1 = fcn.00419ace(arg_8h + 0xbc00, wParam, lParam, arg_14h);\n                return iVar1;\n            }\n            if (arg_8h - 0x132 < 7) {\n                var_4h = arg_8h - 0x132;\n                var_8h = wParam;\n                iVar1 = fcn.00419ace(0xbc19, 0, &fcn.004119d1::var_ch, arg_14h);\n                if (*arg_14h != 0) {\n                    return iVar1;\n                }\n            }\n            return 0;\n        }\n        var_4h = lParam;\n        var_8h = 0x4119fe;\n        iVar1 = (**(*in_ECX + 0x140))();\n    }\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 1052
    },
    "00411d86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d86(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "004121a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004121a9(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_10h == NULL) {\n        arg_10h = fcn.00411ea1();\n    }\n    if ((arg_8h == NULL) && (arg_ch != 0)) {\n        *(arg_10h + 2) = 0;\n        *(arg_10h + 6) = 0xffffffff;\n        *(arg_10h + 8) = 0xffffffff;\n        *arg_10h = arg_ch;\n        *(arg_10h + 4) = 1;\n        arg_8h = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "004122b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004122b7(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTreatAsClass;\n    iVar2 = (*_sym.imp.ole32.dll_CoTreatAsClass)(arg_ch, arg_10h);\n    if ((iVar2 != 0) && (arg_8h != 0)) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_StringFromCLSID)(arg_ch, &var_4h);\n        uVar3 = fcn.004270f1(var_4h);\n        uVar4 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(arg_8h);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueA)(var_8h, uVar3, 1, arg_8h, uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n    }\n    return iVar2;\n}\n",
        "token_count": 340
    },
    "00412342": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00412342(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.004273a2(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 262
    },
    "004123a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004123a9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.00412342(arg_8h);\n        if (var_8h != NULL) {\n            iVar1 = (**(*var_8h + 0x58))(var_8h, &var_ch);\n            if ((iVar1 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar1 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &var_4h);\n                if (iVar1 == 0) {\n                    arg_8h = 0;\n                    iVar1 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &arg_8h);\n                    if ((iVar1 == 0) && (arg_8h != 0)) {\n                        uVar2 = fcn.004410a0(arg_8h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                    }\n                    fcn.004273a2(&var_4h);\n                }\n            }\n            fcn.004273a2(&var_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 351
    },
    "004127ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004127ec(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint hMem;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_18h = arg_34h;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenW)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        var_18h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenW)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (*_sym.imp.KERNEL32.DLL_GlobalAlloc)(0x2042, iVar1);\n    if (iVar4 != 0) {\n        piVar5 = (*_sym.imp.KERNEL32.DLL_GlobalLock)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            fcn.004014a6(piVar5 + 0xd, iVar2, arg_30h);\n        }\n        if (var_18h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            fcn.004014a6(iVar2 + piVar5, iVar3, var_18h);\n        }\n        *piVar5 = iVar1;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(iVar4);\n    }\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 742
    },
    "00412c73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412c73(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.00412c3f(iVar1);\n        }\n    }\n    else {\n        fcn.00412bd7(param_2);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00413932": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00413932(void)\n\n{\n    code *pcVar1;\n    char *pcStack12;\n    \n    if (*0x4a43cc == 0) {\n        *0x4a43cc = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)();\n        pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n        if (*0x4a43cc == 0) {\n            pcStack12 = 0x4a15e8;\n            fcn.0043cb83(&pcStack12, 0x49af08);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        pcStack12 = \"CreateActCtxW\";\n        *0x4a43bc = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(*0x4a43cc);\n        *0x4a43c0 = (*pcVar1)(*0x4a43cc, \"ReleaseActCtx\");\n        *0x4a43c4 = (*pcVar1)(*0x4a43cc, \"ActivateActCtx\");\n        *0x4a43c8 = (*pcVar1)(*0x4a43cc, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "004139df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.004139df(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00411ea1();\n    }\n    if (*0x4a43c4 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.004139bf(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "00413a0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413a0f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack544;\n    uint uStack536;\n    uchar auStack532 [96];\n    uchar auStack436 [424];\n    int16_t iStack12;\n    ushort uStack10;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack436;\n    fcn.00413932();\n    uVar2 = *(param_1 + 8);\n    uStack10 = 0;\n    iStack12 = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleFileNameW)(uVar2, auStack532);\n    if (iVar1 != 0) {\n        if (iStack12 == 0) {\n            puStack556 = auStack532;\n            puVar3 = &uStack564;\n            uStack564 = 0x20;\n            uStack560 = 0x88;\n            uStack544 = 2;\n            uStack536 = uVar2;\n            iVar1 = fcn.004139a0(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                uStack544 = 3;\n                uVar2 = fcn.004139a0(&uStack564);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                uStack544 = 1;\n                iVar1 = fcn.004139a0(puVar3, &uStack564);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(0x6f);\n        }\n    }\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 503
    },
    "00413e94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413e94(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0xc);\n    while (iVar1 != 0) {\n        fcn.00427836();\n        if (var_8h != arg_8h) {\n            fcn.0040dcf0(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00413ed6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413ed6(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.0040dcf0(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.004279fb();\n            fcn.0040dcf0(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "00414102": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414102(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0041466b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041466b(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004145d6();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.004139bf(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 154
    },
    "004146b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004146b2(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043c410(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExA)();\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 145
    },
    "00414847": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414847(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0041470a();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n    }\n    else {\n        uVar3 = (**0x4a5bec)(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 239
    },
    "00414ad8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414ad8(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041470a();\n    if (iVar1 == 0) {\n        if ((arg_8h == 0) && (arg_ch == 0)) {\n            if ((arg_10h == NULL) || (*arg_10h < 0x1a8)) {\n                uVar2 = 0;\n            }\n            else {\n                fcn.004412be(arg_10h + 1, 0x20, \"DISPLAY\", 0x1f);\n                fcn.004412be(arg_10h + 9, 0x80, \"DISPLAY\", 0x1f);\n                arg_10h[0x29] = 5;\n                uVar2 = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x00414ae5. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (**0x4a5bf8)();\n    return uVar2;\n}\n",
        "token_count": 289
    },
    "00414b4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00414b4a(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x004150b4;\n    // switch table (19 cases) at 0x4150ca\n    switch(*((arg_ch + 0x139aU) * 4 + 0x4150ca)) {\n    case 0x414c27:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414c48:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00414e40;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x0041502c:\n                    *arg_28h = 1;\n                    goto code_r0x004150b4;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414cb5:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00414e40;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414d02:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414d6b:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00414e40;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414db5:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x00414fe3:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414ddd:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x004150b4;\n    case 0x414deb:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x004150b4;\n    case 0x414df9:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00414fe3;\n        }\n        break;\n    case 0x414e21:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x00414e40:\n                *arg_28h = 0;\n                goto code_r0x004150b4;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00415089;\n        }\n        break;\n    case 0x414ea3:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00414fe3;\n        }\n        break;\n    case 0x414ecb:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414eef:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x004150b4;\n        }\n        break;\n    case 0x414f13:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00414fe3;\n        }\n        break;\n    case 0x414f3b:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00414fbc;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0041502c;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x004150b4;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00414fe3;\n        }\n        break;\n    case 0x414fbc:\ncode_r0x00414fbc:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00415054;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0041502c;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x004150b4;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00414fe3;\n        }\n        break;\n    case 0x415054:\ncode_r0x00415054:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004150a6;\n        }\n        break;\n    case 0x41507c:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x00415089:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x004150b4;\n    case 0x415099:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x004150a6:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x004150b4;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x004150b4:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3759
    },
    "00415116": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00415116(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.DLL_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x4a1820));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x4a17d0);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "00415371": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00415371(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 167
    },
    "004154b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004154b2(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    param_3[1] = param_4;\n    (*_sym.imp.USER32.dll_GetScrollInfo)(iVar2, param_2, param_3);\n    return;\n}\n",
        "token_count": 180
    },
    "004154fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004154fd(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "004158d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004158d2(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x00415941:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00422643(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x00415941;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 302
    },
    "00415b26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415b26(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00415bbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415bbc(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00415c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415c50(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00415cff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415cff(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00415d8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415d8d(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0041606d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041606d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.00414649();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x164))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "004163cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004163cc(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint *puStack8;\n    \n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar3 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar4 = 5;\n        iVar3 = *(in_ECX + 0x20);\n        while (iVar3 = (*pcVar1)(iVar3, uVar4),  iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &fcn.004163cc::var_10h);\n            puStack8 = &fcn.004163cc::var_10h;\n            uStack12 = 0x416411;\n            fcn.0041df95();\n            iVar2 = var_ch;\n            uStack12 = 0x15;\n            var_ch = 0;\n            var_10h = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, arg_8h, iVar2 + arg_ch);\n            uVar4 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00416e8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00416e8a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (*(param_1 + 0x4c) != 0) {\n        iVar1 = *(*(param_1 + 0x4c) + 0x44);\n        while (iVar1 != 0) {\n            piVar2 = fcn.00415836();\n            if ((*(*piVar2 + 4) != 0) && (*(*(*piVar2 + 4) + 0x74) != 0)) {\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 181
    },
    "00416ed0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00416ed0(uint arg_8h, uint noname_1, int32_t arg_10h, uint noname_3, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h, int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004157e1(arg_18h, arg_1ch, arg_20h, arg_24h, arg_8h);\n    if (iVar1 < 0) {\n        (**(**(in_ECX + 0x28) + 0x20))(*(in_ECX + 0x28), &var_4h);\n        iVar2 = fcn.00416e8a();\n        if (arg_10h <= iVar2 + var_4h) {\n            var_8h = *(*(in_ECX + 0x4c) + 0x44);\n            while (var_8h != 0) {\n                piVar3 = fcn.00415836(&var_8h);\n                iVar2 = *(*piVar3 + 4);\n                if (iVar2 != 0) {\n                    if (*(iVar2 + 0x74) != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    if (var_4h == arg_10h) {\n                        iVar1 = *(*piVar3 + 4);\n                        var_18h = *(iVar1 + 0x30);\n                        var_14h = *(iVar1 + 0x34);\n                        var_10h = *(iVar1 + 0x38);\n                        var_ch = *(iVar1 + 0x3c);\n                        fcn.0041dfd1(&var_18h);\n                        *arg_18h = var_18h;\n                        *arg_1ch = var_14h;\n                        *arg_20h = var_10h - var_18h;\n                        *arg_24h = var_ch - var_14h;\n                        iVar1 = 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 558
    },
    "004173cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004173cd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 161
    },
    "004173ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004173ff(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.004173cd(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 124
    },
    "0041748c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041748c(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.004139cf(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0041749d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041749d(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.004173cd(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 126
    },
    "0041753c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041753c(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00417626": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417626(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d895(0);\n    iVar1 = fcn.00414649();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040dcb3(0x422557);\n        iVar3 = fcn.0040dcc5(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004239df(0x48a70c, 0x417391, 0x415a15, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0040dcb3(uVar2);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 316
    },
    "00417742": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00417742(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.00422f1d(0x40f89d);\n    if (iVar3 == 0) {\n        uStack16 = 0x4a15e8;\n        fcn.0043cb83(&stack0xfffffff0, 0x49af08);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.004145d6();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x417776;\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 266
    },
    "004177c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004177c8(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0040f595();\n    if (iVar2 == 0) goto code_r0x00417813;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.004145d6();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.004145d6();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00423072();\n                if (iVar3 == 0) goto code_r0x00417808;\n            }\n            fcn.0040e1ff(0);\n        }\ncode_r0x00417808:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x00417813:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.00414649();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.0043c410(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.004175f6();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.00417714();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 731
    },
    "00417a8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00417a8e(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x20), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x20)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.004176c1(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.0041769a(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.004154fd(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 946
    },
    "00417cdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00417cdd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.004175f6();\n    return piVar1;\n}\n",
        "token_count": 163
    },
    "00417f8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00417f8a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043d8c8(0x38);\n    iVar1 = fcn.00422f1d(0x40f89d);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00411ea1();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.00415fb3(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.00417f0e(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 811
    },
    "004180c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004180c8(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x4a5c10)) && (extraout_ECX != 0x4a5c68)) &&\n       ((extraout_ECX != 0x4a5cc0 && (extraout_ECX != 0x4a5d18)))) {\n        fcn.004178d9();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040f26f();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 346
    },
    "00418257": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00418257(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.00418218();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.00418218();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 183
    },
    "00418296": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418296(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.004176c1(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00417f8a(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00418296(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "004184c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004184c0(int32_t arg_8h, int32_t arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (*(in_ECX + 0x4c) != 0) {\n        var_8h = arg_8h;\n        var_4h = arg_ch;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*(in_ECX + 0x20), &var_8h);\n        iVar2 = fcn.0041840a();\n        if (*(in_ECX + 0x4c) != 0) {\n            iVar1 = *(*(in_ECX + 0x4c) + 0x44);\n            while (iVar1 != 0) {\n                piVar3 = fcn.00415836();\n                iVar4 = *(*piVar3 + 4);\n                if ((iVar4 != 0) && (*(iVar4 + 0x74) != 0)) {\n                    iVar2 = iVar2 + 1;\n                    iVar4 = (*_sym.imp.USER32.dll_PtInRect)(iVar4 + 0x30, var_8h, var_4h);\n                    if (iVar4 != 0) {\n                        *arg_10h = 3;\n                        *(arg_10h + 4) = iVar2;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    uVar5 = fcn.0041584f(arg_8h, arg_ch, arg_10h);\n    return uVar5;\n}\n",
        "token_count": 418
    },
    "00418564": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00418564(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_8ch;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(0x80);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040f134();\n    fcn.00415f70();\n    uVar1 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.004180c8();\n            fcn.0043d96d();\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x8c;\n        iVar4 = fcn.004176c1(iVar2);\n        if (iVar4 == 0) {\ncode_r0x004185d7:\n            iVar4 = fcn.0040ef92(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) {\n                iVar4 = *(unaff_EBP + 0xc);\n                if (iVar4 != 0) {\n                    uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                    if ((uVar3 & 0x2000) != 0) {\n                        uVar3 = fcn.0041ae8a();\n                        uVar3 = uVar3 & 0xf;\n                        if ((((uVar3 != 3) && (uVar3 != 6)) && (uVar3 != 7)) && (uVar3 != 9)) goto code_r0x0041862e;\n                    }\n                    iVar4 = 0;\n                }\ncode_r0x0041862e:\n                fcn.0040f15a(*(unaff_EBP + 8), iVar4);\n            }\n        }\n        else {\n            iVar4 = fcn.0040ef92(0, 0xbd11ffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) goto code_r0x004185d7;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 810
    },
    "00418667": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00418667(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.004176db(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.00418077);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 175
    },
    "00418cfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418cfb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x20));\n        uVar2 = fcn.00411d03(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x20), uVar2);\n        fcn.004103cf(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00418d3a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x8c))();\n    return;\n}\n",
        "token_count": 200
    },
    "00418fcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418fcc(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.00418fa4();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0041b02c();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x20);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x20));\n            fcn.0041769a(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x20), 0x112, wParam, lParam);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 456
    },
    "004192ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004192ab(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "004192dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004192dc(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "00419307": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419307(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.004192dc(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.00419271(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0041933b;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0041933b:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 426
    },
    "004193cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004193cd(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.004192ab();\n    iVar2 = fcn.004145d6();\n    iVar2 = (*_sym.imp.KERNEL32.DLL_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.004145d6();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00423092(1);\n        iVar2 = fcn.004145d6();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.004145d6();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.0040e1ff(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0041aff0();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004230df. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "00419920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00419920(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00422f1d(0x40f89d);\n    if (iVar1 == 0) {\n        fcn.00411ea1();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x4196cd, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00411e6d();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00419ace": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00419ace(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x00419b0c:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x00419fc5;\n        }\n        goto code_r0x00419cde;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x00419fa2;\n        }\n        goto code_r0x00419cde;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0041769a(var_24h);\n        fcn.0041949d(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.00419513(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x00419b0c;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x00419fc5;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.00415ee2(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x4a43e0);\n    *(unaff_EBP + -0x18) = iVar8 + 0x4a43e0;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x4a43e8))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.00415371(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.00415f11();\n                    goto code_r0x00419c6c;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.00415371(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.00415f11();\n                        goto code_r0x00419fb7;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.00415f11();\n        goto code_r0x00419cde;\n    }\n    iVar3 = *(iVar8 + 0x4a43e4);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.00415f11();\n    if (iVar3 == 0) goto code_r0x00419cde;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00419fb7:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x00419fba:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x00419fbe;\n    }\ncode_r0x00419c6c:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x419fe6\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041e36e(var_14h);\n        goto code_r0x00419d0d;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00419d0d;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0041769a(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x00419d42;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0041769a();\n        goto code_r0x00419fbe;\n    case 7:\n    case 0xd:\ncode_r0x00419d0d:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x00419fc2:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.0041db63();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.00415f70();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.004176c1(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0042778c(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.004180c8();\n        goto code_r0x00419ded;\n    case 9:\n        fcn.0041db63();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x00419ded:\n        *(unaff_EBP + -4) = 0;\n        fcn.0041e3f6();\n        break;\n    case 10:\n        uVar7 = fcn.0041769a(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x00419e0b;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x00419fbe;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x00419fba;\n    case 0xf:\n        var_18h = fcn.00427f43(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00419e0b:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x00419d42:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x00419fc2;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x00419f33;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00419f40;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x00419f36;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x00419f36;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00419f5f;\n    case 0x1a:\n        fcn.0041769a(var_24h);\ncode_r0x00419f33:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x00419f36;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x00419fc2;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0041769a(var_14h);\n        fcn.0041769a(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x00419f63;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041e36e(var_14h);\n        goto code_r0x00419f40;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00427f43(var_14h);\n        goto code_r0x00419f40;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.00427f43(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00419f63;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00419ec5;\n    case 0x24:\ncode_r0x00419ec5:\n        fcn.0041769a(var_14h);\n        goto code_r0x00419f40;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00419ee2;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x00419ee2:\n        uVar7 = fcn.0041769a(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00419f63;\n    case 0x27:\n        var_18h = fcn.0041769a(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x00419f36;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0041769a(var_24h, var_14h);\n        goto code_r0x00419f4d;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0041769a(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x00419f63;\n        }\ncode_r0x00419f36:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x00419f40:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x00419b0c;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x00419fbe:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x00419fc2;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00419f4d:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00419f63;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x00419f5f:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x00419f63:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x00419fa2;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x00419fa2:\n        if (iVar3 != 0) {\ncode_r0x00419cde:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00415f11();\n            goto code_r0x00419cec;\n        }\n    }\ncode_r0x00419fc5:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00415f11();\ncode_r0x00419cec:\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 4492
    },
    "0041a65b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a65b(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.0043d8c8(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.00415b5d(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.00415aca(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.004145d6(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.0042384c(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.004145d6();\n        fcn.0041045d(*(lpWndClass + 0x24));\n        fcn.00412cba(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004238b9(1);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 316
    },
    "0041a7ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a7ec(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar5 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            uVar3 = *puVar5;\n            if (*puVar5 == 0) break;\n            uVar2 = puVar5[1];\n            var_10h = *(puVar5 + 2);\n            puVar5 = puVar5 + 4;\n            var_ch = uVar3;\n            if (uVar2 == 0x1234) {\ncode_r0x0041a857:\n                puVar6 = &var_30h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.00401352(puVar5);\n                var_2ch = arg_8h;\n                iVar4 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n                fcn.00401438();\n                in_ECX = var_8h;\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x0041a8b8:\n                iVar4 = (*pcVar1)(*(in_ECX + 0x20), uVar3, uVar2, 0, puVar5);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x0041a857;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x0041a8b8;\n            }\n            puVar5 = puVar5 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.00418296(*(in_ECX + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 737
    },
    "0041acae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041acae(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041acb9. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041acc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041acc4(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041accf. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041acf9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041acf9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ad1e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x6c))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041ad21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ad21(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        fcn.0041769a(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ad42. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041ad45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ad45(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ad66. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x70))();\n    return;\n}\n",
        "token_count": 162
    },
    "0041ad69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad69(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ad8e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041ad91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad91(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemTextA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041adb6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 156
    },
    "0041adb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041adb9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ade1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 166
    },
    "0041ade7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ade7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ae0c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041ae8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ae8a(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041aea1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 129
    },
    "0041aea4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aea4(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041aebb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 128
    },
    "0041aebe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aebe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.00415223(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041aee2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x80))();\n    return;\n}\n",
        "token_count": 148
    },
    "0041aee8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aee8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0041523d(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041af0c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 150
    },
    "0041af12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041af12(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) goto code_r0x0041af1e;\n    while( true ) {\n        fcn.00411ea1();\ncode_r0x0041af1e:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n        if (iVar1 != 0) break;\n        if (*(param_1 + 0x50) != 0) {\ncode_r0x0041af30:\n    // WARNING: Could not recover jumptable at 0x0041af36. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(param_1 + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    goto code_r0x0041af30;\n}\n",
        "token_count": 261
    },
    "0041af91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af91(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0041afcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041afcf(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041afea. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 130
    },
    "0041aff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aff0(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b005. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 121
    },
    "0041b00b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b00b(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b026. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 131
    },
    "0041b02c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b02c(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.0041769a(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b047. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 144
    },
    "0041b0f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b0f0(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x50) == 0) && (*(param_2 + 0x4c) != 0)) {\n        (**(**(param_2 + 0x4c) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0041b115": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b115(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0041b120. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 114
    },
    "0041b2a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041b2a5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x4c) != 0) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 234
    },
    "0041b2f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b2f6(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041b32c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 198
    },
    "0041b332": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b332(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.0042778c(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041b40f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041b40f(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    bool bVar9;\n    uint uVar10;\n    code *var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (*(in_ECX + 0x4c) == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            uVar10 = 5;\n            uVar4 = *(in_ECX + 0x20);\n            while( true ) {\n                uVar4 = (*pcVar2)(uVar4, uVar10);\n                iVar5 = fcn.0041769a(uVar4);\n                if (iVar5 == 0) break;\n                uVar8 = fcn.0041aea4();\n                if ((((uVar8 & 0x10000) != 0) && (uVar8 = fcn.0041ae8a(),  (uVar8 & 0x10000000) != 0)) &&\n                   (uVar8 = fcn.0041ae8a(),  (uVar8 & 0x8000000) == 0)) goto code_r0x0041b504;\n                uVar4 = *(iVar5 + 0x20);\n                uVar10 = 2;\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = 0x415a10;\n            arg_ch = 0x41580d;\n        }\n        else {\n            var_8h = 0x41b3dc;\n            arg_ch = 0x41b21f;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x0041b4af:\n        do {\n            if (var_4h == 0) goto code_r0x0041b504;\n            ppiVar6 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar6;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar5 = *piVar1;\n                }\n                else {\n                    iVar5 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar5 != 0) && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar5 == iVar7)) break;\n                if (piVar1[1] == 0) goto joined_r0x0041b4af;\n                bVar9 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar9 = arg_8h == piVar1;\n            }\n        } while (!bVar9);\n        if (piVar1 == NULL) {\ncode_r0x0041b504:\n            piVar3 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar6 = (*var_8h)(&var_4h);\n                piVar3 = *ppiVar6;\n                uVar8 = fcn.0041b115();\n            } while ((piVar3 != piVar1) &&\n                    ((((uVar8 & 0x10000) == 0 || ((uVar8 & 0x8000000) != 0)) || ((uVar8 & 0x10000000) == 0))));\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 888
    },
    "0041b566": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b566(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.00427aae(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.00415836(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x0041b60b:\n                arg_8h = puVar3;\n                fcn.0041b23c(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0041b23c(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0041b115();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.00415836();\n            puVar4 = *puVar4;\n            uVar5 = fcn.0041b115();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x0041b60b;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 598
    },
    "0041b698": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041b698(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0041b1d3(param_1);\n    iVar1 = param_2;\n    while ((0 < iVar1 && (*(param_1 + 4) != 0))) {\n        if (*(param_2 + 4) != 0) {\n            fcn.0041b223(param_2 + 4);\n        }\n        iVar1 = iVar1 + -1;\n    }\n    return param_2;\n}\n",
        "token_count": 131
    },
    "0041b6f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041b6f2(uint lpString, uint nMaxCount)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    if (*(extraout_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x20), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        uVar2 = fcn.0041bca8();\n        fcn.00401456(uVar2);\n        iVar1 = **(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x8c))(unaff_EBP + -0x10);\n        fcn.00411ec0(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x10), 0xffffffff);\n        (*_sym.imp.KERNEL32.DLL_lstrlenA)(*(unaff_EBP + 8));\n        fcn.00401438();\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 343
    },
    "0041b858": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b858(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041b1d3();\n    fcn.0041b7c1(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        uVar1 = fcn.0041b115();\n        if ((uVar1 >> 0x11 & 1) != 0) break;\n        fcn.0041b223();\n        if (*(arg_8h + 4) != 0) {\n            fcn.0041b223();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "0041b96e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b96e(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041b1d3(param_1);\n    bVar1 = false;\n    do {\n        if (((var_4h == 0) || (fcn.0041b223(&var_4h),  iVar5 = var_4h,  var_4h == 0)) ||\n           (uVar3 = fcn.0041b115(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0041b7f2(&var_10h);\n            fcn.0041b1ef(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n            iVar5 = var_4h;\n        }\n        cVar2 = fcn.0041b12e(*(iVar5 + 8));\n        if (cVar2 == '\\0') {\n            fcn.0041b1ef(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 315
    },
    "0041b9e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b9e9(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041b1d3(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (uVar3 = fcn.0041b115(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0041b858(&var_10h);\n            fcn.0041b1ef(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            fcn.0041b256(&var_4h);\n        }\n        if ((var_4h != 0) && (cVar2 = fcn.0041b12e(*(var_4h + 8)),  cVar2 == '\\0')) {\n            fcn.0041b1ef(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 296
    },
    "0041ba64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ba64(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0041b8fc();\n        }\n        else {\n            iVar1 = fcn.0041b8b3(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0041b9e9(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "0041bab2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bab2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0041b8fc();\n        }\n        else {\n            iVar1 = fcn.0041b8b3(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0041b96e(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0041bbc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bbc8(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.00441484(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.00401212();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.00441484(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.00411d03(iVar2, iVar2, arg_ch, iVar2);\n        fcn.004125eb(uVar1);\n        fcn.004103cf(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 300
    },
    "0041bf64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041bf64(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint in_stack_fffffff0;\n    \n    if (param_4 == NULL) {\n        fcn.00401451(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        in_stack_fffffff0 = 0x80070057;\n        fcn.00401451(0x80070057);\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00412b6f();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00412b48(param_2);\n    fcn.00412555(*param_1, param_2, in_stack_fffffff0, param_2);\n    return param_1;\n}\n",
        "token_count": 285
    },
    "0041bfc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041bfc7(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041bec2();\n    *param_1 = iVar1;\n    if ((*param_2 != 0) && (iVar1 == 0)) {\n        fcn.00401451(0x8007000e);\n    }\n    return param_1;\n}\n",
        "token_count": 105
    },
    "0041c0ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c0ca(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    \n    if (arg_ch == 0) {\n        fcn.00412b8e();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401451(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar3 = arg_8h - *in_ECX >> 1;\n        iVar2 = fcn.00412ce2(arg_ch);\n        if (uVar1 < uVar3) {\n            fcn.00412555(iVar2, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0041bd2b(iVar2, arg_ch, iVar2 + uVar3 * 2);\n        }\n        fcn.00412b48(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0041c582": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c582(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0041ad45(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0041acc4(iVar1);\n        if (iVar2 == 0) {\n            fcn.00411e87();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 158
    },
    "0041c5c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c5c1(int32_t *param_1)\n\n{\n    int32_t *hWnd;\n    \n    hWnd = param_1;\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        fcn.0041ad45(param_1[2], &hWnd);\n        if (hWnd != NULL) {\n            (*_sym.imp.USER32.dll_SetFocus)(hWnd);\n            if (param_1[3] != 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0xb1, 0, 0xffffffff);\n            }\n        }\n    }\n    fcn.0041d9b9();\n    return;\n}\n",
        "token_count": 164
    },
    "0041c610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c610(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = arg_8h;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        if ((*arg_10h < 0) || (2 < *arg_10h)) {\n            *arg_10h = 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf1, *arg_10h, 0);\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf0, 0, 0);\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0041c7c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c7c6(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = arg_8h;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        (*_sym.imp.USER32.dll_SetScrollPos)(arg_8h, 2, *arg_10h, 1);\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetScrollPos)(arg_8h, 2);\n        *arg_10h = uVar2;\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0041c8b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c8b5(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        fcn.0041ad45(arg_8h[2], &arg_ch);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_ch, 0x407, 0, uVar2);\n        (*pcVar1)(arg_ch, 0x408, 1, uVar3);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0041c907": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c907(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x20) != 0) {\n        return;\n    }\n    iVar1 = fcn.0041aca2();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.00418667(arg_10h);\n        if (iVar1 == 0) {\n            fcn.00411e87();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x20));\n            if (*(iVar1 + 0x20) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x0041c982;\n        }\n    }\n    iVar2 = fcn.0041acc4(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x0041c982:\n    fcn.0041b0f0(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 345
    },
    "0041c9a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c9a7(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint unaff_EDI;\n    uint var_48h;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0041c990(arg_ch);\n    uVar1 = arg_18h;\n    if (*arg_8h == 0) {\n        puVar3 = fcn.0043e08a();\n        uVar1 = *puVar3;\n        puVar3 = fcn.0043e08a();\n        *puVar3 = 0;\n        fcn.0043c9e7(&lpString, 0x40, 0x3f, arg_10h, &arg_18h);\n        piVar4 = fcn.0043e08a();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.0043e08a();\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.0043e08a();\n            fcn.0040e3d3(*puVar3);\n        }\n        fcn.0042246c(arg_8h_00, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, &lpString, 0x40);\n        iVar2 = fcn.0044153b(&lpString, 0x40, arg_10h, uVar1);\n        if (iVar2 != 1) {\n            fcn.00410cea(arg_14h, 0, 0xffffffff);\n            fcn.0041c5c1();\n        }\n    }\n    fcn.0043bb11(unaff_EDI);\n    return;\n}\n",
        "token_count": 482
    },
    "0041ca6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ca6a(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.0041c9a7(arg_8h, arg_ch, 0x48b110, 0xf116, arg_10h);\n    }\n    else {\n        fcn.0041c9a7(arg_8h, arg_ch, 0x48b110, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.00410cea(0xf116, 0, 0xffffffff);\n            fcn.0041c5c1();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0041cadb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cadb(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0041c9a7(arg_8h, arg_ch, 0x48b114, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 99
    },
    "0041cb0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb0c(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0041c9a7(arg_8h, arg_ch, 0x48b118, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 98
    },
    "0041cb3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb3b(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0041c9a7(arg_8h, arg_ch, 0x48b110, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 98
    },
    "0041cb6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb6a(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0041c9a7(arg_8h, arg_ch, 0x48b11c, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 99
    },
    "0041cb99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cb99(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0041c9a7(arg_8h, arg_ch, 0x48b120, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0041cbc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cbc8(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.0041c9a7(arg_8h, arg_ch, \"%I64d\", 0xf110, *arg_10h);\n    }\n    else {\n        fcn.0041c9a7(arg_8h, arg_ch, \"%I64d\", 0xf110, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0041cc10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cc10(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.0041c9a7(arg_8h, arg_ch, \"%I64u\", 0xf117, *arg_10h);\n    }\n    else {\n        fcn.0041c9a7(arg_8h, arg_ch, \"%I64u\", 0xf117, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0041cc58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cc58(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0041c990(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0042246c(arg_8h_00, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0041d0ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d0ee(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h_00 = fcn.0041c990(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0042246c(arg_8h_00, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        uVar2 = fcn.00411d03(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, uVar2);\n        fcn.004103cf(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041d140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d140(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = hWnd;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &hWnd);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*piVar2 == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.00401212();\n        }\n        else {\n            uVar4 = (*pcVar1)(hWnd, 0x18a, iVar3, 0);\n            uVar4 = fcn.00411d03(uVar4);\n            (*pcVar1)(hWnd, 0x189, iVar3, uVar4);\n        }\n        fcn.004103cf(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0041d1d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d1d4(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    int32_t iVar2;\n    \n    hWnd = arg_8h;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar2) {\n            (*pcVar1)(arg_8h, 0x186, iVar2, 0);\n        }\n    }\n    else {\n        fcn.0041d140(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0041d234": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d234(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = hWnd;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &hWnd);\n    puVar2 = lParam;\n    if (*piVar1 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar3 == -1) {\n            fcn.0042246c(hWnd, *puVar2);\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar3 < 1) {\n            uVar4 = fcn.0040123f(0xff);\n            iVar3 = 0x100;\n        }\n        else {\n            uVar4 = fcn.00411d03(iVar3, iVar3 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar4, iVar3);\n        fcn.004103cf(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0041d2c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d2c6(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    hWnd = arg_8h;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &arg_8h);\n    puVar2 = arg_10h;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x158, 0xffffffff, *arg_10h);\n        if (iVar3 < 0) {\n            fcn.0042246c(arg_8h, *puVar2);\n        }\n        else {\n            (*pcVar1)(arg_8h, 0x14e, iVar3, 0);\n        }\n    }\n    else {\n        fcn.0041d234(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0041e2fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e2fa(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d895(0);\n    iVar1 = fcn.00414649();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040dcb3(0x422557);\n        iVar3 = fcn.0040dcc5(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004239df(0x48b1f8, 0x41e28f, 0x41d9d3, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0040dcb3(uVar2);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 323
    },
    "00423a87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00423a87(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d8c8(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0042778c(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0042778c(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.0040dcb3(0x422557);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.00430855();\n            if (iVar1 == 0) {\n                fcn.00411e6d();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00427942(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.0040dcb3(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 518
    },
    "0041e3f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e3f6(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.0041e3af();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041e5c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e5c1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d895(0);\n    iVar1 = fcn.00414649();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040dcb3(0x422557);\n        iVar3 = fcn.0040dcc5(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004239df(0x48b268, 0x41e2ab, 0x41d9e1, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0040dcb3(uVar2);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 320
    },
    "0041e696": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041e696(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0041e66c();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0041f94d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041f94d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.00401451(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.00441856(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 236
    },
    "0041fb96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041fb96(uint arg_8h, int32_t lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    if (lpFileTime == 0) {\n        iStack36 = 0x4a15e8;\n        fcn.0043cb83(&stack0xffffffdc, 0x49af08);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iStack36 = 0x41fbb2;\n    lpSystemTime._0_2_ = fcn.0041f993();\n    iStack36 = 0x41fbbd;\n    lpSystemTime._2_2_ = fcn.0041f9b3();\n    iStack36 = 0x41fbc8;\n    var_12h._0_2_ = fcn.0041f9cf();\n    iStack36 = 0x41fbd3;\n    var_12h._2_2_ = fcn.0041f9ea();\n    iStack36 = 0x41fbde;\n    var_eh = fcn.0041fa06();\n    iStack36 = 0x41fbe9;\n    var_ch = fcn.0041fa22();\n    var_ah._0_2_ = 0;\n    iStack36 = &fcn.0041fb96::var_ah + 2;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_SystemTimeToFileTime)(&fcn.0041fb96::lpSystemTime);\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetLastError;\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)(0);\n        fcn.0042cf07(uVar3);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.DLL_LocalFileTimeToFileTime)(&fcn.0041fb96::var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar3 = (*pcVar1)(0);\n        fcn.0042cf07(uVar3);\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "004202f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004202f2(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.004173cd(\"GetOpenFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 126
    },
    "00420391": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00420391(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004203c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004203c7(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.004173cd(\"GetSaveFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 126
    },
    "00420466": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00420466(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004204ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004204ca(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(*(*(param_1 + 0x74) + 0x1c));\n    bVar1 = false;\n    fcn.0043c410(*(*(param_1 + 0x74) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x74) + 0x20) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    iVar3 = *(param_1 + 0x74);\n    uVar4 = fcn.004110b6();\n    *(iVar3 + 4) = uVar4;\n    fcn.00417742();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(*(param_1 + 0x74) + 4) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(*(param_1 + 0x74) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x74) + 4), 0);\n        }\n    }\n    iVar3 = fcn.00414023();\n    if ((*(*(param_1 + 0x74) + 0x34) & 0x80000) == 0) {\n        fcn.00419920(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        fcn.004204b3(*(param_1 + 0x74));\n    }\n    else {\n        fcn.0042049c();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x74) + 4), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EBP);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(unaff_ESI);\n    }\n    fcn.004110f0();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 593
    },
    "00420e1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00420e1f(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint arg_74h)\n\n{\n    uint hFile;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    \n    iVar2 = arg_10h;\n    uVar1 = arg_ch;\n    if (arg_8h == 0) {\n        return 0;\n    }\n    *(in_ECX + 0x10) = 0;\n    iVar3 = fcn.00426328(arg_8h, arg_ch & 0xffffbfff, arg_10h);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    iVar3 = 1;\n    if ((uVar1 & 0x1000) == 0) {\n        if ((uVar1 & 1) != 0) goto code_r0x00420e68;\n        arg_8h = CONCAT31(arg_8h._1_3_, 0x72);\n        if ((uVar1 & 2) == 0) goto code_r0x00420e78;\n    }\n    else {\n        if ((uVar1 & 0x2000) == 0) {\n            arg_8h = CONCAT31(arg_8h._1_3_, 0x77);\n        }\n        else {\ncode_r0x00420e68:\n            arg_8h = CONCAT31(arg_8h._1_3_, 0x61);\n        }\n        if ((uVar1 & 1) != 0) goto code_r0x00420e78;\n    }\n    arg_8h._0_2_ = CONCAT11(0x2b, arg_8h);\n    arg_8h = arg_8h & 0xffff0000 | arg_8h;\n    iVar3 = 2;\ncode_r0x00420e78:\n    uVar5 = 0x4000;\n    if (uVar1 < 0) {\n        *(&arg_8h + iVar3) = 0x62;\n        uVar5 = 0;\n    }\n    else {\n        *(&arg_8h + iVar3) = 0x74;\n    }\n    hFile = *(in_ECX + 4);\n    *(&arg_8h + iVar3 + 1) = 0;\n    iVar3 = fcn.0044227e(hFile, uVar5);\n    if (iVar3 != -1) {\n        uVar5 = fcn.004423c0(iVar3, &arg_8h);\n        *(in_ECX + 0x10) = uVar5;\n    }\n    if (*(in_ECX + 0x10) == 0) {\n        if (iVar2 != 0) {\n            puVar4 = fcn.0043e09d();\n            *(iVar2 + 0xc) = *puVar4;\n            puVar4 = fcn.0043e09d();\n            uVar5 = fcn.0042cb73(*puVar4);\n            *(iVar2 + 8) = uVar5;\n        }\n        fcn.00425e0a();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 899
    },
    "00421011": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00421011(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_2 == 0) {\n        fcn.00411ea1();\n    }\n    iVar1 = fcn.00442b7e(param_2, *(param_1 + 0x10));\n    if (iVar1 == -1) {\n        arg_10h = *(param_1 + 0xc);\n        puVar2 = fcn.0043e09d();\n        fcn.0042cec1(0xd, *puVar2, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0042168a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042168a(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.DLL_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x68));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00421644(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 260
    },
    "004216f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004216f3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.0043df50(&lpString, 0x10, 0x48b118, arg_10h);\n        (*_sym.imp.KERNEL32.DLL_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.00421644(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.0043bb11(unaff_EBX);\n    return;\n}\n",
        "token_count": 273
    },
    "0042177a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042177a(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.DLL_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x68));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.004215b3();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x004217e6;\n        }\n    }\n    else {\n        iVar1 = fcn.00421644(lpAppName);\n        if (lpString == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x004217e6:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x004217e6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "00421810": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00421810(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        iVar2 = fcn.0040dcc5(arg_14h * 2 + 1);\n        uVar1 = 0;\n        if (arg_14h != 0) {\n            do {\n                *(iVar2 + uVar1 * 2) = (*(arg_10h + uVar1) & 0xf) + 0x41;\n                *(iVar2 + 1 + uVar1 * 2) = (*(arg_10h + uVar1) >> 4) + 0x41;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < arg_14h);\n        }\n        *(iVar2 + uVar1 * 2) = 0;\n        uVar1 = fcn.0042177a(arg_8h, arg_ch, iVar2);\n        fcn.0040dcf0(iVar2);\n    }\n    else {\n        uVar1 = fcn.00421644(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 387
    },
    "00421bc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421bc5(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = arg_8h;\n    iVar4 = fcn.004287b6(arg_8h, 0xffffffff);\n    if (iVar4 == 0) {\n        fcn.00411ea1();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(arg_8h);\n    iVar5 = fcn.0042cf4c(arg_8h, 0, 0);\n    iVar5 = iVar5 + -1;\n    pcVar1 = arg_8h + (iVar4 - iVar5);\n    if (arg_ch < iVar4) {\n        if (arg_ch < iVar5) {\n            if (arg_10h == 0) {\n                *arg_8h = '\\0';\n                return;\n            }\n        }\n        else {\n            pcVar6 = arg_8h + 2;\n            if ((*arg_8h == '\\\\') && (arg_8h[1] == '\\\\')) {\n                for (; *pcVar6 != '\\\\'; pcVar6 = fcn.00441b45(pcVar6)) {\n                }\n            }\n            arg_8h = pcVar6;\n            if (3 < iVar4 - iVar5) {\n                do {\n                    arg_8h = fcn.00441b45(arg_8h);\n                } while (*arg_8h != '\\\\');\n            }\n            pcVar2 = _sym.imp.KERNEL32.DLL_lstrlenA;\n            iVar8 = arg_8h - pcVar3;\n            if (iVar8 + 5 + iVar5 <= arg_ch) {\n                while (iVar5 = (*pcVar2)(arg_8h),  arg_ch < iVar5 + 4 + iVar8) {\n                    do {\n                        arg_8h = fcn.00441b45(arg_8h);\n                    } while (*arg_8h != '\\\\');\n                }\n                if ((iVar8 < 0) || (arg_ch <= iVar8)) {\n                    iVar8 = arg_ch;\n                }\n                uVar7 = fcn.0043bec7(pcVar3 + iVar8, 5, \"\\\\...\", 5);\n                fcn.004013ac(uVar7);\n                fcn.00421b7a(pcVar3, iVar4, arg_8h);\n                return;\n            }\n        }\n        fcn.0040e408(pcVar3, iVar4, pcVar1);\n    }\n    return;\n}\n",
        "token_count": 628
    },
    "00422831": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00422831(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) goto code_r0x0042283c;\n    do {\n        param_1 = fcn.00411ea1();\ncode_r0x0042283c:\n    } while (param_2 == 0);\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_1 = *(param_1 + 0x10);\n    } while (param_1 != 0);\n    return 0;\n}\n",
        "token_count": 136
    },
    "0042287e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042287e(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.00422866(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 81
    },
    "00422928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00422928(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0042292f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.DLL_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00422a70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00422a70(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00411ea1();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 87
    },
    "00422e2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422e2f(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(in_ECX + 7);\n    fcn.00422aa6(arg_8h);\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.DLL_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.DLL_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 366
    },
    "00422ec4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422ec4(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.00422e2f(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.00422e2f(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 224
    },
    "00422f1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422f1d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00422f3c;\ncode_r0x00422f37:\n    do {\n        fcn.00411ea1();\ncode_r0x00422f3c:\n        if (*extraout_ECX != 0) goto code_r0x00422f77;\n        if (*0x4a5eec == 0) {\n            *(unaff_EBP + -0x10) = 0x4a5ef0;\n            *(unaff_EBP + -4) = 0;\n            *0x4a5eec = fcn.00422c42();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x4a5eec == 0) goto code_r0x00422f37;\n        }\n        iVar1 = fcn.00422b0c();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00422f77:\n            iVar1 = fcn.00422939(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.00422ce4(*extraout_ECX, arg_ch);\n            }\n            fcn.0043d96d();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 401
    },
    "004232cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004232cd(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x4a616c == 0) && (*0x4a616c = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f8b),  *0x4a616c == 0)) {\n        iVar2 = fcn.004145d6();\n        *0x4a616c = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x4a616c == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 232
    },
    "00423436": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423436(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_28h;\n    uint lpPoint;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar6 = *(arg_8h + 4);\n    if ((uVar6 == 0x367) || ((uVar6 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x00423621:\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, uVar6, uVar6, 1);\n        return 0;\n    }\n    if (((uVar6 < 0x200) || (0x209 < uVar6)) && ((uVar6 < 0xa0 || (0xa9 < uVar6)))) {\n        if ((uVar6 != 0x112) && ((uVar6 < 0x100 || (0x109 < uVar6)))) {\n            iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h, 0, uVar6, uVar6, 1);\n            if (iVar3 == 0) {\n                return 1;\n            }\ncode_r0x00423548:\n            (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n            return 1;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n        pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            do {\n                iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n            } while (iVar3 != 0);\n        }\n        iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n        if (iVar3 == 0) goto code_r0x004235fd;\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n        iVar3 = (**(*var_4h + 0x100))(iVar2);\n        if (iVar3 != 0) goto code_r0x004235fd;\n        (*_sym.imp.USER32.dll_TranslateMessage)(iVar2);\n        uVar6 = *(iVar2 + 4);\n        if ((uVar6 != 0x112) && ((uVar6 < 0x104 || (0x107 < uVar6)))) goto code_r0x004235fd;\n    }\n    else {\n        iVar3 = fcn.00423327(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            goto code_r0x00423548;\n        }\n        if (*(iVar2 + 4) != 0x201) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            return 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n        if ((iVar4 != 5) && (iVar4 != 3)) {\n            if (iVar4 == 1) {\n                uVar5 = fcn.0042310f(iVar3, *(iVar2 + 0x14), iVar3);\n            }\n            else {\n                uVar5 = fcn.0042317d(iVar4);\n            }\n            *arg_ch = uVar5;\n            uVar6 = *(iVar2 + 4);\n            goto code_r0x00423621;\n        }\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, 0xa1, 0xa1);\n    }\n    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\ncode_r0x004235fd:\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    fcn.00423327(lpPoint, var_8h, 0);\n    return 1;\n}\n",
        "token_count": 1094
    },
    "00423631": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423631(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpMsg;\n    uint lpPoint;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x68) != 1) && (iVar3 = fcn.004232cd(),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, *(param_1 + 0x20), 0x367, 0x367, 3),  iVar3 == 0)) {\n        var_ch = *(param_1 + 0x68);\n        *(param_1 + 0x68) = 1;\n        if (var_ch != 2) {\n            piVar1 = *(param_1 + 0x80);\n            if ((piVar1 != NULL) && (iVar3 = (**(*piVar1 + 0x60))(1),  iVar3 == 0)) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n                *(param_1 + 0x68) = 0;\n                return;\n            }\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x111, 0xe145);\n            *(param_1 + 0x68) = 2;\n        }\n        else {\n            var_ch = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, 0xe002, 0);\n            if (var_ch == 0) {\n                var_ch = 0xe001;\n            }\n            var_8h = 0;\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            fcn.00423327(lpPoint, var_14h, 0);\n            var_4h = 0;\n            iVar3 = fcn.004145d6();\n            piVar1 = *(iVar3 + 4);\n            var_10h = piVar1;\n            do {\n                while( true ) {\n                    if (*(param_1 + 0x68) == 0) goto code_r0x00423761;\n                    iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 0);\n                    if (iVar3 != 0) break;\n                    iVar3 = (**(*piVar1 + 0x60))(var_4h);\n                    var_4h = var_4h + 1;\n                    if (iVar3 == 0) {\n                        var_4h = 0;\n                        (*_sym.imp.USER32.dll_WaitMessage)();\n                    }\n                }\n                iVar3 = fcn.00423436(&lpMsg, &var_8h);\n            } while (iVar3 != 0);\ncode_r0x00423761:\n            pcVar2 = _sym.imp.USER32.dll_ReleaseCapture;\n            *(param_1 + 0x68) = 0;\n            (*pcVar2)();\n            uVar4 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x20));\n            fcn.0041769a(uVar4);\n            (*pcVar2)();\n            pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, var_ch, 0);\n            if (*(param_1 + 0x80) != NULL) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n            }\n            if (var_8h != 0) {\n                if (var_8h == -1) {\n                    (*pcVar2)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n                }\n                else {\n                    (**(*var_10h + 0xac))(var_8h, 1);\n                }\n            }\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1003
    },
    "004237e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.004237e3(void)\n\n{\n    if (*0x4a5f28 == 0) {\n        *0x4a5f28 = 1;\n        (*_sym.imp.KERNEL32.DLL_InitializeCriticalSection)(0x4a60c8);\n    }\n    return *0x4a5f28;\n}\n",
        "token_count": 78
    },
    "0042384c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042384c(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.00411ea1();\n    }\n    if (*0x4a5f28 == 0) {\n        fcn.004237e3();\n    }\n    pcVar2 = _sym.imp.KERNEL32.DLL_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x4a60e0;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(0x4a60c8);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.DLL_InitializeCriticalSection)(param_1 * 0x18 + 0x4a5f30);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(0x4a60c8);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x4a5f30);\n    return;\n}\n",
        "token_count": 263
    },
    "00423b3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423b3a(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00427836(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.00427710();\n        fcn.00430791();\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00423c47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423c47(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.00414649();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0040f595(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00423b3a();\n            fcn.00423b3a();\n            fcn.00423b3a();\n            fcn.00423b3a();\n            fcn.00423b3a();\n        }\n        iVar2 = fcn.004145d6();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.004229c6();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.00443834(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.00443834(*(iVar3 + 0xc));\n                fcn.0043c1fb(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.0043c34d(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.0043c34d(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 540
    },
    "00423d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00423d40(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 307
    },
    "004240c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004240c1(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.00415836(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "004243a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004243a3(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0xc;\n    fcn.0043d895(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        iVar4 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.00415836();\n        piVar2 = *ppiVar3;\n        if (piVar2[8] != 0) {\n            fcn.00427a50(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00427af6(iVar4);\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 356
    },
    "00424653": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424653(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *(*in_ECX + -0xc);\n    iVar2 = fcn.0042440d(arg_ch, arg_10h);\n    if (iVar1 < iVar2) {\n        arg_10h = *(*in_ECX + -0xc) - arg_ch;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.0040114a();\n    }\n    else {\n        uVar3 = fcn.004013c0();\n        fcn.00401361(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 295
    },
    "0042556d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042556d(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    if (iVar3 < 0) {\n        uVar6 = fcn.00401451(0x80070057);\n        iVar3 = uVar6 >> 0x20;\n        in_ECX = uVar6;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = *in_ECX;\n        if (iVar3 < *(iVar2 + -0xc)) {\n            uVar4 = fcn.004013c0();\n            fcn.004249cc(*arg_10h + iVar2, uVar4);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar2 = *in_ECX;\n        uVar1 = iVar2 + iVar3;\n        uVar5 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar5) {\n            iVar3 = fcn.00443b6f(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar5) {\n                arg_10h_00 = fcn.00443c47(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.00424653(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar4 = fcn.004013c0();\n    fcn.00401456(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 480
    },
    "004259c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004259c4(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.00411ea1();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x004259d8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x2c))();\n    return;\n}\n",
        "token_count": 126
    },
    "00425c6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425c6b(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint var_624h;\n    uint var_620h;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_lstrcmpiA)(lpString1, lpString2);\n    if ((iVar2 == 0) &&\n       (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a),  pcVar1 = _sym.imp.KERNEL32.DLL_lstrlenA,  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(lpString1);\n        iVar3 = (*pcVar1)(lpString2);\n        if (iVar2 == iVar3) {\n            uVar4 = (*_sym.imp.KERNEL32.DLL_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.DLL_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.DLL_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_61ch);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_414h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_20ch + iVar2) & 0x80) != 0) && (*(&var_61ch + iVar2) != *(&var_414h + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.00441b45(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n    }\n    fcn.0043bb11(unaff_EDI);\n    return;\n}\n",
        "token_count": 505
    },
    "0042612e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042612e(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar *puStack360;\n    uchar *puStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uchar *puStack332;\n    uint arg_8h;\n    uchar auStack284 [276];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ &stack0xfffffeb8;\n    arg_8h = 0x14;\n    puStack332 = 0x426152;\n    fcn.0043d895();\n    puStack352 = param_3;\n    if (param_1 != NULL) goto code_r0x00426177;\n    do {\n        puStack332 = 0x426177;\n        fcn.00411ea1();\ncode_r0x00426177:\n    } while (param_2 == NULL);\n    puStack332 = &stack0xfffffea4;\n    puStack336 = param_1;\n    uStack340 = 0x104;\n    puStack344 = param_2;\n    puStack348 = 0x426194;\n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetFullPathNameA)();\n    if (uVar1 == 0) {\n        puStack348 = 0xffffffff;\n        puStack352 = param_2;\n        puStack356 = 0x104;\n        puStack360 = param_1;\n        fcn.00411ec0();\n        puStack348 = param_2;\n        puStack356 = 0x4261ae;\n        fcn.00426103();\n        goto code_r0x00426280;\n    }\n    if (0x103 < uVar1) goto code_r0x00426280;\n    puStack348 = 0x4261be;\n    puStack348 = fcn.0041bca8();\n    puStack352 = 0x4261c7;\n    fcn.00401456();\n    puStack332 = NULL;\n    puStack352 = &stack0xfffffea8;\n    puStack356 = param_1;\n    puStack360 = 0x4261d5;\n    fcn.00425f8c();\n    puStack360 = puStack344;\n    puStack348 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)();\n    if (puStack348 == NULL) {\n        puStack356 = &stack0xfffffe9c;\n        puStack360 = &stack0xfffffe98;\n        puStack352 = puStack348;\n        iVar2 = (*_sym.imp.KERNEL32.DLL_GetVolumeInformationA)(puStack344, 0, 0, 0);\n        if (iVar2 == 0) {\n            puStack348 = param_2;\n            puStack356 = 0x426209;\n            fcn.00426103();\n            goto code_r0x00426209;\n        }\n        if ((puStack356 & 2) == 0) {\n            puStack348 = param_1;\n            puStack352 = 0x426223;\n            (*_sym.imp.USER32.dll_CharUpperA)();\n        }\n        if ((puStack356 & 4) == 0) {\n            puStack352 = param_2;\n            puStack356 = 0x426234;\n            puStack348 = &stack0xfffffeb8;\n            puStack348 = (*_sym.imp.KERNEL32.DLL_FindFirstFileA)();\n            if (puStack348 != 0xffffffff) {\n                puStack352 = 0x426240;\n                (*_sym.imp.KERNEL32.DLL_FindClose)();\n                if ((puStack348 != NULL) && (param_1 < puStack348)) {\n                    puStack348 = &stack0xfffffee4;\n                    puStack352 = 0x426255;\n                    iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)();\n                    if (iVar2 + (puStack348 - param_1) < 0x104) {\n                        puStack356 = &stack0xfffffee4;\n                        puStack352 = 0x104 - (puStack348 - param_1);\n                        puStack360 = 0x42626f;\n                        puStack348 = puStack356;\n                        fcn.0040e408();\n                        goto code_r0x00426272;\n                    }\n                }\ncode_r0x00426209:\n                puStack348 = 0x426214;\n                fcn.00401438();\n                goto code_r0x00426280;\n            }\n        }\n    }\ncode_r0x00426272:\n    puStack348 = 0x42627d;\n    fcn.00401438();\ncode_r0x00426280:\n    *in_FS_OFFSET = uStack340;\n    puStack332 = 0x42629b;\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 1114
    },
    "00426328": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00426328(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint in_stack_fffffedc;\n    uint uStack276;\n    uchar auStack268 [104];\n    uchar auStack164 [156];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack164;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0xffffffff;\n    fcn.00401212();\n    if (((param_2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(param_2),  0x103 < iVar2)) ||\n       (iVar2 = param_2,  iVar3 = fcn.0042612e(),  iVar3 == 0)) goto code_r0x004264a5;\n    fcn.00401226(auStack268);\n    uVar4 = param_3 & 3;\n    uStack276 = 0;\n    if (uVar4 == 0) {\n        uStack276 = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        uStack276 = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        uStack276 = 0xc0000000;\n    }\n    uVar4 = param_3 & 0x70;\n    uVar5 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x00426405:\n        uVar5 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = 3;\n            if (uVar4 != 0x40) goto code_r0x00426405;\n        }\n    }\n    in_stack_fffffedc = 0xc;\n    if ((param_3 & 0x1000) == 0) {\n        cVar1 = '\\x03';\n    }\n    else {\n        cVar1 = (-((param_3 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar4 = 0x80;\n    if ((param_3 & 0x10000) != 0) {\n        uVar4 = 0x20000080;\n    }\n    if ((param_3 & 0x20000) != 0) {\n        uVar4 = uVar4 | 0x80000000;\n    }\n    if ((param_3 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x10000000;\n    }\n    if ((param_3 & 0x80000) != 0) {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.DLL_CreateFileA)(param_2, uStack276, uVar5, &stack0xfffffedc, cVar1, uVar4, 0);\n    if (iVar3 == -1) {\n        fcn.00426103(iVar2, param_2, param_4);\n    }\n    else {\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 8) = 1;\n    }\ncode_r0x004264a5:\n    fcn.0043bb11(in_stack_fffffedc);\n    return;\n}\n",
        "token_count": 851
    },
    "00426d84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426d84(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00426e00;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.DLL_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00426e00:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.00426c35(arg_8h_00, arg_8h);\n    fcn.0043bb11(unaff_EDI);\n    return;\n}\n",
        "token_count": 475
    },
    "004273be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004273be(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x493348 == *param_2) && (param_2[1] == *0x49334c)) && (param_2[2] == *0x493350)) &&\n           (param_2[3] == *0x493354)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 450
    },
    "0042746c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042746c(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "00427523": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427523(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.DLL_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 86
    },
    "004276b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004276b6(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.0040dcf0(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0040dcc5(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.0043c410(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 214
    },
    "004278f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004278f4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00430918(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 288
    },
    "00427b01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427b01(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00430918(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "00427bad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427bad(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00411ea1();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.0041b23c(&arg_8h);\n        fcn.00427b5a();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00427bea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427bea(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00411ea1();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.00415836(&arg_8h);\n        fcn.00427b84();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00427ecf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427ecf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d895(0);\n    iVar1 = fcn.00414649();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040dcb3(0x422557);\n        iVar3 = fcn.0040dcc5(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004239df(0x48bfd4, 0x427e98, 0x427de0, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0040dcb3(uVar2);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 315
    },
    "00427fbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427fbe(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00427f94();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00428817": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428817(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0042c11f(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.004125eb(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.004125eb(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 937
    },
    "004289bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004289bd(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x004289d7;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.0042c11f(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x004289d7:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.00426a17(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 812
    },
    "00428ca2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00428ca2(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00428b96(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00428c1d(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00428b96(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00428cc6;\n            fcn.00428c1d(&arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.00428c60(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00428bd5(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.0042c11f(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n        else {\n            puVar2 = arg_8h & 0xffff;\n        }\n    }\n    else {\ncode_r0x00428cc6:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 390
    },
    "00428dcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00428dcc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        fcn.00411ea1();\n    }\n    iVar1 = fcn.004145d6();\n    fcn.0042384c(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.004238b9(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.DLL_lstrcmpA)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.004238b9(0);\n    return puVar2;\n}\n",
        "token_count": 201
    },
    "00428e9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428e9d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0042c11f(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.004125eb(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.00428946();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x00428f42;\n            do {\n                fcn.00411ea1();\ncode_r0x00428f42:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.004125eb(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "004295e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004295e6(int16_t *plLbound, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t cDims;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar2 = plLbound;\n    if ((*plLbound != 0x2011) || (iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(plLbound + 4)),  iVar3 != 1))\n    {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar2);\n        var_8h = 0;\n        cDims = arg_ch;\n        *piVar2 = 0x2011;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(0x11, 1, &cDims);\n        *(piVar2 + 4) = iVar3;\n        if (iVar3 != 0) {\n            return;\n        }\n        fcn.00411e6d();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(piVar2 + 4), 1, &var_4h);\n    fcn.0042933b(uVar4);\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(piVar2 + 4), 1, &plLbound);\n    fcn.0042933b(uVar4);\n    iVar3 = plLbound - var_4h;\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    if (iVar3 == arg_ch) {\n        return;\n    }\n    cDims = arg_ch;\n    var_8h = var_4h;\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptorEx)(*(piVar2 + 4), &cDims);\n    fcn.0042933b(uVar4);\n    return;\n}\n",
        "token_count": 487
    },
    "00429912": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429912(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        if ((arg_8h == 0) || (arg_ch == 0)) {\n            fcn.00411ea1();\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            fcn.004298df();\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00429c71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00429c71(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.0043c410(param_1, 0, 0x18);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00429f3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00429f3e(ulong *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 1) == 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*param_1, param_2),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0042a0fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a0fc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.0042933b(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 1, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 1, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.004309f5(iVar2, 0xffffffff);\n        fcn.004125eb(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.004309f5(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 357
    },
    "0042a635": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a635(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.0042933b(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 0, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 0, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.004309f5(iVar2, 0xffffffff);\n        fcn.004125eb(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.004309f5(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 356
    },
    "0042a6cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a6cf(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack20 = *(param_1 + 8);\n    puStack24 = 0x42a6e0;\n    var_8h = param_1;\n    var_4h = param_1;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)();\n    if (iVar2 != 1) {\n        uStack28 = 0x4a15e8;\n        puStack24 = &stack0xfffffffc;\n        fcn.0043cb83(&stack0xffffffe4, 0x49af08);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puStack24 = &fcn.0042a6cf::var_4h;\n    uStack28 = 1;\n    fcn.00429ba3();\n    fcn.00429b89(1, &fcn.0042a6cf::var_8h);\n    return (var_4h - var_8h) + 1;\n}\n",
        "token_count": 304
    },
    "0042a70e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a70e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar1 != 1) {\n        fcn.00411ea1();\n    }\n    var_4h = 0;\n    var_8h = arg_8h;\n    fcn.00429c0b(&var_8h);\n    return;\n}\n",
        "token_count": 138
    },
    "0042a743": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a743(uint16_t *param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    \n    if ((param_3 != 0) && (param_4 != 0)) {\n        uVar4 = param_2;\n        if (((param_2 & 0x7000) == 0) && ((uVar4 != 0 && (uVar4 != 1)))) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(param_2, param_3, param_3);\n            *(param_1 + 4) = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = fcn.00411e6d();\n            }\n            *param_1 = uVar4 | 0x2000;\n            *(param_1 + 10) = param_3;\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(iVar2);\n            *(param_1 + 8) = uVar3;\n            return;\n        }\n    }\n    fcn.00411ea1();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 325
    },
    "0042aea6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042aea6(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (arg_ch != 0) goto code_r0x0042aebb;\n    while( true ) {\n        fcn.00411ea1();\ncode_r0x0042aebb:\n        var_4h = arg_14h;\n        var_8h = uVar2;\n        fcn.0042a743(arg_8h, 1, &var_8h);\n        if (arg_10h == 0) break;\n        fcn.00429b26(&arg_ch);\n        uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar1 = uVar3 * uVar2;\n        uVar3 = iVar1;\n        if ((iVar1 >> 0x20 == 0) && (uVar3 < 0x80000000)) {\n            fcn.004125eb(arg_ch, uVar3, arg_10h, uVar3);\n            fcn.00429b3c();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "0042bb6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042bb6f(uint arg_8h, uint pbstrOut, uint dwFlags)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *extraout_ECX;\n    int32_t unaff_EBP;\n    uint pbstr;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = 0;\n    if (*(extraout_ECX + 1) == 2) {\n        fcn.00401352(0x4875c7);\n    }\n    else if (*(extraout_ECX + 1) == 1) {\n        uVar2 = fcn.0041bca8();\n        fcn.00401456(uVar2);\n        *(unaff_EBP + -4) = 0;\n        iVar3 = fcn.004012b7(0xd800);\n        if (iVar3 == 0) {\n            fcn.00401352(\"Invalid DateTime\");\n        }\n        else {\n            fcn.0040114a(unaff_EBP + 0xc);\n        }\n        fcn.00401438();\n    }\n    else {\n        *(unaff_EBP + -0x10) = 0;\n        uVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VarBstrFromDisp)\n                          (uVar1, *(unaff_EBP + 0x10), *(unaff_EBP + 0xc), unaff_EBP + -0x10);\n        if (iVar3 < 0) {\n            uVar2 = fcn.0041bca8();\n            fcn.00401456(uVar2);\n            *(unaff_EBP + -4) = 2;\n            iVar3 = fcn.004012b7(0xd800);\n            if (iVar3 == 0) {\n                fcn.00401352(\"Invalid DateTime\");\n            }\n            else {\n                fcn.0040114a(unaff_EBP + 0xc);\n            }\n        }\n        else {\n            fcn.00412d6d(*(unaff_EBP + -0x10));\n            *(unaff_EBP + -4) = 3;\n            fcn.0040114a(unaff_EBP + 0x10);\n        }\n        fcn.00401438();\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x10));\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 613
    },
    "0042c162": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c162(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x0042c175;\n    do {\n        fcn.00411ea1();\ncode_r0x0042c175:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0042c1cd;\n                if (cVar2 < ':') goto code_r0x0042c1ad;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0042c1ad:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0042c1e0;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x0042c1cd:\n            iVar3 = fcn.0044369a(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x0042c1e0:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.0040123f(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.004103cf(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0042c269;\n                if (cVar2 < ':') goto code_r0x0042c226;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0042c226:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x0042c286;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(iVar3);\n                fcn.0040e408(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x0042c269:\n            iVar3 = fcn.0044369a(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x0042c286:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "0042c470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c470(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4a6144;\n    uVar3 = *0x4a6140;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0041e1eb(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.DLL_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.DLL_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 359
    },
    "0042c4fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c4fe(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4a6144;\n    uVar3 = *0x4a6140;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0041e182(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.DLL_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.DLL_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 359
    },
    "0042c5c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042c5c2(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0042384c(8);\n    if (*0x4a6184 == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar2 != 0) {\n            *0x4a6184 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n        }\n    }\n    if (*0x4a6188 == '\\0') {\n        iVar2 = fcn.0043bc38(0x42c338);\n        *0x4a6188 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.004238b9(8);\n    iVar2 = *0x4a6184;\n    fcn.0041e635();\n    fcn.0043bb11(iVar2);\n    return;\n}\n",
        "token_count": 345
    },
    "0042cf07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042cf07(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.0042cb73(param_1, param_1, param_2);\n        fcn.0042cec1(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0042cf4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042cf4c(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (pszPath == 0) {\n        fcn.00411ea1();\n    }\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        fcn.00411ec0(arg_ch, arg_10h, uVar1, 0xffffffff);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 175
    },
    "0042cf8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cf8a(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack848;\n    char *pcStack844;\n    uint uStack840;\n    uchar *puStack836;\n    uchar *puStack832;\n    uchar *pszPath;\n    char acStack784 [124];\n    uchar auStack660 [132];\n    uchar auStack528 [260];\n    char acStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ &stack0xfffffd6c;\n    iVar2 = fcn.004145d6();\n    *(iVar2 + 8) = *(param_1 + 0x44);\n    *(iVar2 + 0xc) = *(param_1 + 0x44);\n    iVar3 = (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)();\n    if ((iVar3 == 0) || (iVar3 == 0x104)) {\n        fcn.0041d9b9();\n    }\n    puVar4 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (puVar4 == NULL) {\n        fcn.0041d9b9();\n    }\n    *puVar4 = 0;\n    pszPath = &stack0xfffffef4;\n    puStack832 = 0x42d013;\n    iVar3 = fcn.0042cf4c(pszPath, &stack0xfffffdf0, 0x104);\n    if (iVar3 != 0) {\n        puStack832 = 0x42d01c;\n        fcn.0041d9b9();\n    }\n    if (*(param_1 + 0x60) == 0) {\n        puStack832 = &stack0xfffffdf0;\n        puStack836 = 0x42d02e;\n        iVar3 = fcn.0043e240();\n        *(param_1 + 0x60) = iVar3;\n        if (iVar3 == 0) goto code_r0x00411e6d;\n    }\n    iVar3 = *(param_1 + 0x50);\n    if (iVar3 == 0) {\n        puStack832 = 0x100;\n        puStack836 = &stack0xfffffcf0;\n        uStack840 = 0xe000;\n        pcStack844 = 0x42d055;\n        iVar3 = fcn.0041bb05();\n        if (iVar3 == 0) {\n            pcStack844 = *(param_1 + 0x60);\n        }\n        else {\n            pcStack844 = &stack0xfffffcf0;\n        }\n        puStack848 = 0x42d067;\n        iVar3 = fcn.0043e240();\n        *(param_1 + 0x50) = iVar3;\n        if (iVar3 == 0) goto code_r0x00411e6d;\n    }\n    *(iVar2 + 0x10) = iVar3;\n    if (*(param_1 + 100) == 0) {\n        puStack848 = &stack0xfffffff8 + -puVar4;\n        if (*(param_1 + 0x6c) == 1) {\n            pcStack844 = \".CHM\";\n        }\n        else {\n            pcStack844 = \".HLP\";\n        }\n        fcn.0040e408(puVar4);\n        pcStack844 = &stack0xfffffef4;\n        puStack848 = 0x42d0ab;\n        iVar2 = fcn.0043e240();\n        *(param_1 + 100) = iVar2;\n        if (iVar2 == 0) goto code_r0x00411e6d;\n        *puVar4 = 0;\n    }\n    if (*(param_1 + 0x68) == 0) {\n        pcStack844 = \".INI\";\n        puStack848 = 0x104;\n        uVar5 = fcn.00443333(&stack0xfffffdf0);\n        fcn.004013ac(uVar5);\n        iVar2 = fcn.0043e240(&stack0xfffffdf0);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x00411e6d:\n            puStack848 = 0x4a14b8;\n            pcStack844 = &stack0xfffffd6c;\n            fcn.0043cb83(&stack0xfffffcb0, 0x49ae10);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    puStack832 = 0x42d101;\n    fcn.0043bb11(pszPath);\n    return;\n}\n",
        "token_count": 1075
    },
    "0042d109": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042d109(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.DLL_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.004145d6();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    fcn.00413a0f();\n    iVar3 = fcn.004145d6();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = param_1;\n        *(iVar3 + 0x4c) = param_2;\n        *(iVar3 + 0x44) = unaff_ESI;\n        fcn.0042cf8a();\n    }\n    iVar3 = fcn.004145d6();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0040fd89();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x4a5c04 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 355
    },
    "0042d4d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d52c)\n// WARNING: Removing unreachable block (ram,0x0042d538)\n\nvoid fcn.0042d4d0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n        iVar5 = fcn.004176c1(iVar4);\n        if ((((iVar5 != 0) && (*0x25 != iVar4)) && (iVar6 = fcn.0042d43f(*0x25, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x3c) & 2) != 0)) && (*(unaff_EBX + 0xb4) == 0)))) {\n            (*pcVar1)(iVar4, 4);\n            *(iVar5 + 0x3c) = *(iVar5 + 0x3c) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0042d661": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d661(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xb0);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xb0) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x160))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xb0) == 0) && (*(param_1 + 0xb0) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x160))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0042d771": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d771(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x15c))();\n    if (iVar1 != 0) {\n        return param_1[0x25];\n    }\n    if ((param_1[0x23] != 0) && (*(param_1[0x23] + 0x94) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0042d994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042d994(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_10h == 0) && (arg_8h != 0)) {\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (**0x4a3990)();\n        iVar1 = (*_sym.imp.KERNEL32.DLL_MultiByteToWideChar)(uVar2, 0, arg_ch, 0xffffffff, arg_8h, arg_10h);\n        if ((arg_8h != 0) && (arg_10h < iVar1)) {\n            iVar1 = fcn.00401451(0x80004005);\n        }\n        if ((0 < iVar1) && (arg_8h != 0)) {\n            *(arg_8h + -2 + iVar1 * 2) = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 229
    },
    "0042e00d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e00d(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.004145d6();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.0043c410(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (var_30h != 0) {\n            iVar2 = fcn.004145d6();\n            iVar2 = fcn.00415b5d(*(iVar2 + 8), var_30h, &var_28h);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0041a6e9(var_28h, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "0042e157": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e157(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2d] != NULL) {\n        piStack24 = 0x42e16c;\n        (*param_1[0x2d])();\n    }\n    piVar2 = (**(*param_1 + 0x13c))();\n    if (piVar2 != NULL) {\n        piStack24 = 0x42e187;\n        iVar3 = (**(*piVar2 + 0x8c))();\n        if (iVar3 == 0) {\n            return;\n        }\n    }\n    piStack24 = 0x42e195;\n    iVar3 = fcn.004145d6();\n    piVar4 = *(iVar3 + 4);\n    if ((piVar4 != NULL) && (piVar4[8] == param_1)) {\n        if (piVar2 == NULL) {\n            piStack24 = 0x42e1af;\n            iVar3 = (**(*piVar4 + 0x94))();\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n        piStack24 = 0x42e1be;\n        fcn.00410928();\n        iStack28 = 0x42e1c7;\n        fcn.00410894();\n        iStack28 = 0x42e1cc;\n        iStack28 = fcn.00423072();\n        if (iStack28 == 0) {\n            fcn.00423092();\n            return;\n        }\n        iStack28 = 0x42e1dd;\n        iVar3 = fcn.004145d6();\n        if ((*(iVar3 + 0x14) == '\\0') && (piVar4[8] == 0)) {\n            iStack28 = 0;\n            fcn.0040e1ff();\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x13] != 0)) {\n        piStack24 = 0x42e203;\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                piStack24 = 0x42e231;\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            piStack24 = &fcn.0042e157::var_4h;\n            iStack28 = 0x42e215;\n            iVar3 = (**(*piVar2 + 100))();\n            if (iVar3 == 0) {\n                iStack28 = 0x4a15e8;\n                piStack24 = &stack0xfffffffc;\n                fcn.0043cb83(&stack0xffffffe4, 0x49af08);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            piStack24 = 0x42e220;\n            piVar4 = fcn.00418218();\n        } while (piVar4 == param_1);\n        iStack28 = 0x42e243;\n        piStack24 = param_1;\n        (**(*piVar2 + 0x94))();\n    }\n    piStack24 = 0x42e24a;\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 816
    },
    "0042e3cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e3cb(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t *extraout_ECX;\n    \n    fcn.004175f6();\n    uVar1 = fcn.0041ae8a();\n    piVar2 = in_ECX;\n    if ((uVar1 & 0x40000000) == 0) {\n        piVar2 = fcn.00418257();\n    }\n    piVar4 = NULL;\n    if (piVar2 == NULL) {\n        fcn.00411ea1();\n        piVar4 = extraout_ECX;\n    }\n    if (arg_8h != piVar4) {\n        arg_ch = in_ECX;\n    }\n    if (arg_ch != piVar4) {\n        if ((piVar2 == arg_ch) ||\n           ((piVar4 = fcn.00418257(),  piVar2 == piVar4 &&\n            (iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[8], 0x36d, 0x40, 0),  iVar3 != 0)))) {\n            piVar4 = 0x1;\n        }\n        else {\n            piVar4 = NULL;\n        }\n    }\n    piVar2[0xf] = piVar2[0xf] & 0xffffffdf;\n    if (piVar4 != NULL) {\n        piVar2[0xf] = piVar2[0xf] | 0x20;\n    }\n    fcn.0042de64((piVar4 == NULL) * '\\x04' + '\\x04');\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 == NULL) {\n        iVar3 = (**(*in_ECX + 0x140))();\n        piVar2 = *(iVar3 + 0xb0);\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != NULL) && (arg_10h == 0)) {\n        (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n    }\n    (**(*piVar2 + 0x164))(arg_8h);\n    return;\n}\n",
        "token_count": 547
    },
    "0042e4ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e4ac(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00418257();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00411ea1();\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 0x68) == 0) {\ncode_r0x0042e4f1:\n        fcn.004175f6();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x0042e4ea:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x0042e4f1;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x0042e4ea;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "0042e743": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e743(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.00411ea1();\n    }\n    piVar1 = fcn.0042d75d();\n    if (arg_10h == 0) {\n        fcn.0041b2f6(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x150))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.0042d771(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x148))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x150))(arg_ch);\n        piVar1[0x34] = piVar1[0x34] | 0xc;\n    }\n    iVar2 = fcn.0042d771();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x23] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x23] + 0x16c))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x28] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x0042e82a;\n            }\n            piVar1[0x28] = 8;\n            goto code_r0x0042e838;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x28] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x28] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x0042e82a:\n        fcn.0041afcf(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x0042e838:\n    (**(*piVar1 + 0x148))(0);\n    return;\n}\n",
        "token_count": 588
    },
    "0042e848": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e848(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00422757(*(in_ECX + 0x20));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x80) == NULL || (iVar2 = (**(**(in_ECX + 0x80) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        if (arg_8h == 0) {\n            fcn.00411ea1();\n        }\n        fcn.0040f134();\n        iVar2 = fcn.00414023();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n             (iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x20)),  iVar2 != 0)) &&\n            (iVar2 = fcn.00418fa4(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x20)),  iVar2 != 0)) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.00427f43(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.00415dec(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x0042e9bb;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x54) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.0040f15a(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x0042e9bb:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1005
    },
    "0042e9d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e9d1(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00418257();\n    if (iVar1 == 0) {\n        fcn.00411ea1();\n    }\n    if ((in_ECX[0x20] != NULL) && (iVar2 = (**(*in_ECX[0x20] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xf] = in_ECX[0xf] & 0xffffffbf;\n        if (*(iVar1 + 0x68) == 0) {\n            in_ECX[0x2a] = 0xe001;\n        }\n        else {\n            in_ECX[0x2a] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x362, in_ECX[0x2a], 0);\n        iVar1 = (**(*in_ECX + 0x154))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x20));\n        }\n        goto code_r0x0042eab1;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x2a] = 0;\n    }\n    else {\n        if (arg_8h - 0xf000 < 0x1f0) {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        else if (0xfeff < arg_8h) {\n            in_ECX[0x2a] = 0xef1f;\n            goto code_r0x0042eaad;\n        }\n        in_ECX[0x2a] = arg_8h;\n    }\ncode_r0x0042eaad:\n    *(iVar1 + 0x3c) = *(iVar1 + 0x3c) | 0x40;\ncode_r0x0042eab1:\n    if (in_ECX[0x2a] != in_ECX[0x2b]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar1 = fcn.0041769a(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[8], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 653
    },
    "0042eb4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042eb4c(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x88);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.00415836(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x20));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "0042f2bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f2bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00430918(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.00411ea1();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 318
    },
    "0042f3a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f3a3(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x3c) == 0) {\n        uVar1 = fcn.004173cd(\"ImageList_Draw\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x3c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x3c);\n    return;\n}\n",
        "token_count": 130
    },
    "0042f451": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042f451(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0042f487": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f487(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x9c;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004173cd(\"ImageList_GetImageInfo\");\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "0042f530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042f530(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0042fa01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0042fa01(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack24;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x3c;\n    var_4h = 0x42fa0d;\n    fcn.0043d895();\n    var_4h = 10;\n    iStack12 = 0x42fa19;\n    fcn.0042f253();\n    *(unaff_EBP + -4) = 0;\n    iStack12 = 10;\n    iStack16 = 0x42fa27;\n    fcn.0042f253();\n    iVar1 = *(extraout_ECX + 0x88);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    while (iVar1 != 0) {\n        iStack16 = unaff_EBP + -0x10;\n        var_10h = 0x42fa49;\n        ppiVar3 = fcn.00415836();\n        piVar4 = *ppiVar3;\n        var_10h = 0x42fa55;\n        (**(*piVar4 + 0x15c))();\n        iStack12 = piVar4[8];\n        iStack16 = 0x42fa67;\n        fcn.0042f87e();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while( true ) {\n        while( true ) {\n            do {\n                if (puVar5 == NULL) {\n                    puVar5 = *(unaff_EBP + -0x28);\n                    while (puVar5 != NULL) {\n                        iStack12 = puVar5[2];\n                        puVar5 = *puVar5;\n                        var_10h = 0x42facb;\n                        var_10h = fcn.004176c1();\n                        uStack24 = 0x48c284;\n                        piVar4 = fcn.0042287e();\n                        if (piVar4 != NULL) {\n                            var_10h = 0x42fae3;\n                            (**(*piVar4 + 0x60))();\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x2c) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x42fafb;\n                    fcn.0042d969();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + -0x48) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x42fb0a;\n                    fcn.0042d969();\n                    iStack16 = 0x42fb0f;\n                    fcn.0043d96d();\n                    return;\n                }\n                iStack12 = puVar5[2];\n                puVar5 = *puVar5;\n                var_10h = 0x42fa7e;\n                var_10h = fcn.004176c1();\n                uStack24 = 0x48ded8;\n                piVar4 = fcn.0042287e();\n            } while (piVar4 == NULL);\n            if (piVar4[0x25] != 0) break;\n            var_10h = 0x42fab1;\n            (**(*piVar4 + 0x60))();\n        }\n        var_10h = 0x42fa9f;\n        piVar4 = fcn.00418218();\n        if (piVar4 == NULL) break;\n        var_10h = 0x42faaa;\n        (**(*piVar4 + 0x60))();\n    }\n    uStack24 = 0x4a15e8;\n    fcn.0043cb83(&stack0xffffffe8, 0x49af08);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1034
    },
    "00430767": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00430767(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 126
    },
    "00430855": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430855(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00430918(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 198
    },
    "00430918": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00430918(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.0040dcc5(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.00411ea1();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 142
    },
    "00430be3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430be3(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.004309f5(arg_10h + iVar1, 0xffffffff);\n            iVar3 = *(in_ECX + 4) + arg_8h;\n            fcn.00426a17(iVar3 + arg_10h, (*(in_ECX + 8) - arg_8h) - arg_10h, iVar3, iVar1 - arg_8h);\n            fcn.0043c410(*(in_ECX + 4) + arg_8h, 0, arg_10h);\n        }\n        else {\n            fcn.004309f5(arg_10h + arg_8h, 0xffffffff);\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00411ea1();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 353
    },
    "004329c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004329c2(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.004173cd(\"ImageList_Create\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 125
    },
    "00432a6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432a6d(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00432aa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432aa3(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        uVar1 = fcn.004173cd(\"ImageList_Destroy\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x1c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 128
    },
    "00432b42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432b42(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00432b78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432b78(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        uVar1 = fcn.004173cd(\"ImageList_LoadImageA\");\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1);\n        *(param_1 + 0x58) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x58);\n    return;\n}\n",
        "token_count": 127
    },
    "00432c29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432c29(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00432c5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432c5f(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x84;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004173cd(\"ImageList_Read\");\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00432d02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432d02(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00432d38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432d38(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x88;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004173cd(\"ImageList_Write\");\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "00432dde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432dde(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00432e14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432e14(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xa0;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004173cd(\"ImageList_Merge\");\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00432ec6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432ec6(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00432efc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432efc(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xcc;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004173cd(\"MakeDragList\");\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 137
    },
    "00432f9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432f9f(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00432fd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432fd5(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xd4;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004173cd(\"LBItemFromPt\");\n        iVar3 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00433083": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00433083(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != -1;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        }\n        fcn.004139cf(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0043326c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043326c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d895(0);\n    iVar1 = fcn.00414649();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0040dcb3(0x422557);\n        iVar3 = fcn.0040dcc5(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004239df(0x48cbe4, 0x4329ad, 0x432255, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.0040dcb3(uVar2);\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 315
    },
    "0043330a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043330a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004332e0();\n    uVar1 = fcn.004330df(uVar1);\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "004340bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004340bf(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.0041a135();\n        if ((*(in_ECX + 0x164) & 0x40) != 0) {\ncode_r0x0043416d:\n            fcn.004175f6();\n            return;\n        }\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.00433f3d();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if (iVar1 != 0) goto code_r0x00434108;\n    }\n    else {\n        if (7 < arg_8h - 10U) goto code_r0x0043416d;\n        fcn.0041a135();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.00433f3d();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if ((iVar1 != 0) && (*(iVar1 + 0x90) != NULL)) {\n            (**(**(iVar1 + 0x90) + 4))(arg_8h, arg_ch, arg_10h);\n            return;\n        }\n    }\n    do {\n        iVar1 = fcn.00411ea1();\ncode_r0x00434108:\n    } while (*(iVar1 + 0x90) == 0);\n    (****(iVar1 + 0x90))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 434
    },
    "004342b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004342b3(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.00433f00(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.0043a213(iVar1, 1);\n        piVar2 = fcn.00433cdd(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.00433cdd(iVar1);\n            if (*piVar2 == 0) {\n                fcn.0043a213(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0043431a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043431a(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    if (in_ECX != NULL) goto code_r0x0043432a;\n    do {\n        fcn.00411ea1();\ncode_r0x0043432a:\n    } while ((arg_8h == 0) || (iVar1 = fcn.00433f00(arg_8h, arg_ch),  iVar1 < 1));\n    if (arg_10h == 1) {\n        puVar2 = fcn.00433cdd(iVar1);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.00433cdd(iVar1);\n        iVar4 = fcn.00433f00();\n        if (0 < iVar4) {\n            fcn.0043a213(iVar1, 1);\n            piVar5 = fcn.00433cdd();\n            if ((*piVar5 == 0) && (piVar5 = fcn.00433cdd(),  *piVar5 == 0)) {\n                fcn.0043a213(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.0043a213(iVar1, 1);\n        piVar5 = fcn.00433cdd(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.00433cdd(iVar1),  *piVar5 == 0)) {\n            fcn.0043a213(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.004342b3(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x90) != 0) {\n        piVar5 = fcn.0042d75d();\n        if ((in_ECX[0x25] == 0) || (iVar1 = (**(*in_ECX + 0x16c))(),  iVar1 != 0)) {\n            piVar5[0x34] = piVar5[0x34] | 0xc;\n        }\n        else {\n            iVar1 = fcn.0043424b();\n            if (iVar1 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.0041afcf(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 631
    },
    "00434ccd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434ccd(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint unaff_ESI;\n    uint uFlags;\n    uchar auStack308 [16];\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [88];\n    uchar auStack180 [172];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack180;\n    iStack288 = param_2;\n    iStack292 = param_3;\n    if (param_1 != 0) goto code_r0x00434d08;\n    do {\n        fcn.00411ea1();\ncode_r0x00434d08:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), auStack308);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (param_3 == 0) goto code_r0x00434ef3;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(auStack308, param_3);\n        if (iVar2 != 0) goto code_r0x00434ef3;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041b6f2(auStack268, 0x104);\n        fcn.0042246c(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00437efe(uVar3);\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x20), 0xffffffff);\n    iVar2 = fcn.00433f00(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.00433cdd(iVar2);\n        *piVar4 = param_2;\n    }\n    if (iStack292 == 0) {\n        if (iVar2 < 1) {\n            fcn.0043a13f(*(param_1 + 0xa0), param_2);\n            fcn.0043a13f(*(param_1 + 0xa0), 0);\n        }\n        uFlags = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x4a613c;\n        iStack284 = -*0x4a6138;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, iStack292);\n        fcn.0041df95();\n        if (iVar2 < 1) {\n            fcn.00433f5c(iStack288, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284\n                         , (iStack272 - iStack280) / 2 + iStack280);\n            param_2 = iStack288;\n        }\n        iStack272 = iStack272 - iStack280;\n        uFlags = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.0041b2f6(0, iStack284, iStack280, iStack276, iStack272, uFlags);\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.0041769a();\n    if (iVar2 != param_1) {\n        fcn.00433d45(param_1);\n    }\n    if (*(param_2 + 0x8c) != 0) {\n        fcn.0043431a(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x8c) = param_1;\n    iVar2 = fcn.0042d75d();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x00434ef3:\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 1236
    },
    "0043541f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043541f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar6 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x004354e2:\n        return var_4h + 1;\n    }\ncode_r0x0043543d:\n    piVar1 = iVar3 * 0x14 + arg_8h;\n    piVar4 = piVar1 + 2;\n    *piVar4 = *piVar4 & 0xdf;\n    if ((*piVar4 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar2 = *(in_ECX + 0xac);\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        iVar6 = iVar6 + iVar2;\n        iVar2 = iVar3;\n        if (arg_10h < iVar6) {\n            for (; (-1 < iVar2 && ((*piVar4 & 0x20) == 0)); piVar4 = piVar4 + -5) {\n                if (((*(piVar4 + 1) & 1) != 0) && ((piVar4[-1] == 0 && ((*piVar4 & 8) == 0)))) goto code_r0x004354c5;\n                iVar2 = iVar2 + -1;\n            }\n            iVar2 = iVar3 + -1;\n            if (-1 < iVar2) {\n                puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n                do {\n                    if ((*puVar5 & 0x20) != 0) break;\n                    if (((*puVar5 & 8) == 0) && (((puVar5[1] & 1) == 0 || (*(puVar5 + -4) == 0))))\n                    goto code_r0x004354c5;\n                    iVar2 = iVar2 + -1;\n                    puVar5 = puVar5 + -0x14;\n                } while (-1 < iVar2);\n            }\n        }\n    }\n    goto code_r0x004354d6;\ncode_r0x004354c5:\n    puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n    *puVar5 = *puVar5 | 0x20;\n    iVar6 = 0;\n    var_4h = var_4h + 1;\n    iVar3 = iVar2;\ncode_r0x004354d6:\n    iVar3 = iVar3 + 1;\n    if (arg_ch <= iVar3) goto code_r0x004354e2;\n    goto code_r0x0043543d;\n}\n",
        "token_count": 699
    },
    "00435721": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00435721(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *arg_8h;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint hResData;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = (*_sym.imp.KERNEL32.DLL_LoadResource)(hModule, hResInfo);\n    piVar10 = piVar5;\n    if ((piVar5 != NULL) && (piVar6 = (*_sym.imp.KERNEL32.DLL_LockResource)(piVar5),  piVar10 = piVar6,  piVar6 != NULL)\n       ) {\n        iVar14 = *piVar6 + 0x40;\n        arg_8h = fcn.0043c34d(iVar14);\n        piVar10 = arg_8h;\n        if (arg_8h != NULL) {\n            fcn.004125eb(arg_8h, iVar14, piVar6, iVar14);\n            pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n            iVar14 = *arg_8h;\n            hResInfo = 0;\n            do {\n                puVar1 = arg_8h + hResInfo * 4 + iVar14;\n                iVar13 = 0;\n                do {\n                    if (*puVar1 == *(iVar13 * 8 + 0x48e334)) {\n                        if (arg_10h == 0) {\n                            puVar2 = iVar13 * 8 + 0x48e338;\n                            uVar7 = (*pcVar3)(*puVar2);\n                            uVar4 = (*pcVar3)(*puVar2);\n                            uVar8 = (*pcVar3)(*puVar2);\n                            *puVar1 = uVar8 >> 0x10 & 0xff | (uVar4 << 8 | uVar7 >> 8 & 0xff) << 8;\n                        }\n                        else if (*(iVar13 * 8 + 0x48e338) != 0x12) {\n                            *puVar1 = 0xffffff;\n                        }\n                        break;\n                    }\n                    iVar13 = iVar13 + 1;\n                } while (iVar13 < 4);\n                hResInfo = hResInfo + 1;\n            } while (hResInfo < 0x10);\n            iVar14 = arg_8h[1];\n            iVar13 = arg_8h[2];\n            uVar9 = (*_sym.imp.USER32.dll_GetDC)(0);\n            piVar10 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar9, iVar14, iVar13);\n            if (piVar10 != NULL) {\n                uVar11 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar9);\n                pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n                uVar12 = (*_sym.imp.GDI32.dll_SelectObject)(uVar11, piVar10);\n                (*_sym.imp.GDI32.dll_StretchDIBits)\n                          (uVar11, 0, 0, iVar14, iVar13, 0, 0, iVar14, iVar13, \n                           piVar6 + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10, arg_8h, 0, 0xcc0020);\n                (*pcVar3)(uVar11, uVar12);\n                (*_sym.imp.GDI32.dll_DeleteDC)(uVar11);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar9);\n            fcn.0043c1fb(arg_8h);\n            (*_sym.imp.KERNEL32.DLL_FreeResource)(piVar5);\n        }\n    }\n    return piVar10;\n}\n",
        "token_count": 940
    },
    "00435d5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00435d5e(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar7 = *in_ECX;\n    var_ch = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    uVar2 = (**(iVar7 + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar8 = arg_ch + 9;\n        arg_ch = arg_10h;\n        do {\n            arg_10h = *(puVar8 + -9);\n            uVar3 = fcn.0041ae8a();\n            if (((uVar3 & 0x800) == 0) && (*0x4a2380 != 0x40047)) {\n                arg_10h = (arg_10h * 2) / 3;\n            }\n            if ((puVar8[-1] & 8) == 0) {\n                uVar1 = *puVar8;\n                iVar7 = in_ECX[0x2b];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar7 = iVar7 + *0x4a2384;\n                    }\n                    iVar4 = var_ch + iVar7;\n                    if (var_ch + iVar7 <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                    iVar4 = in_ECX[0x2c];\n                    iVar6 = var_8h;\ncode_r0x00435e37:\n                    iVar5 = iVar4 + iVar6;\n                    if (iVar4 + iVar6 <= arg_8h[1]) {\n                        iVar5 = arg_8h[1];\n                    }\n                    arg_8h[1] = iVar5;\n                }\n                else {\n                    if ((puVar8[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2c] + var_8h;\n                        iVar6 = arg_10h;\n                        goto code_r0x00435e37;\n                    }\n                    iVar4 = *(puVar8 + -9) + var_ch;\n                    if (*(puVar8 + -9) + var_ch <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar7 = *(puVar8 + -9);\n                }\n                var_ch = var_ch + iVar7;\n                if ((puVar8[-1] & 0x20) != 0) {\n                    var_8h = var_8h + in_ECX[0x2c];\n                    var_ch = 0;\n                    if ((uVar1 & 1) != 0) {\n                        var_8h = var_8h + arg_10h;\n                    }\n                }\n            }\n            puVar8 = puVar8 + 0x14;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 846
    },
    "0043622e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043622e(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint dwNewLong;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    dwNewLong = 0;\n    var_4h = 0;\n    if (0x40046 < *0x4a2380) {\n        dwNewLong = fcn.0041ae8a();\n        iVar3 = fcn.0041aebe(0, 0x8800, 0);\n        if (0x5ffff < *0x4a2380) {\n            if (in_ECX == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *(in_ECX + 0x20);\n            }\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar2 != 0) {\n                fcn.004356f7();\n                var_4h = fcn.0043570a();\n            }\n        }\n    }\n    iVar2 = fcn.004175f6();\n    if (iVar2 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x20), 0xfffffff0, dwNewLong);\n    }\n    if (var_4h != 0) {\n        fcn.0043570a(var_4h);\n    }\n    return iVar2;\n}\n",
        "token_count": 393
    },
    "004366d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpRect\n\nint32_t * __cdecl fcn.004366d9(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t lpRect;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t lprc;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t *var_4h;\n    \n    iVar6 = *in_ECX;\n    arg_8h_00 = 0x418;\n    var_4h = NULL;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    var_ch = (**(iVar6 + 0x110))(0x418, 0, 0);\n    if (var_ch == 0) goto code_r0x004369cb;\n    var_4h = fcn.0040dcc5(-(var_ch * 0x14 >> 0x20 != 0) | var_ch * 0x14);\n    puVar4 = NULL;\n    if (var_ch < 1) goto code_r0x004369cb;\n    do {\n        arg_8h_00 = puVar4;\n        fcn.0043533f();\n        arg_ch_00 = var_ch;\n        puVar4 = puVar4 + 1;\n    } while (puVar4 < var_ch);\n    uVar3 = 0;\n    if (var_ch < 1) goto code_r0x004369cb;\n    uVar1 = in_ECX[0x20];\n    if ((uVar1 & 2) == 0) {\n        if ((uVar1 & 4) == 0) {\ncode_r0x004367d4:\n            uVar3 = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x004367d4;\n                        goto code_r0x0043676f;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n                    (**(*in_ECX + 0x140))(&lprc, arg_ch & 2);\n                    lpRect = arg_ch & 0x20;\n                    if (lpRect == 0) {\n                        var_28h = var_24h - lprc;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    uVar3 = var_28h + arg_10h;\n                }\n                else {\n                    lpRect = 0;\n                }\n            }\n            else {\n                uVar3 = 0x7fff;\n            }\n        }\n        else {\ncode_r0x0043676f:\n            uVar3 = in_ECX[0x1c];\n        }\n        fcn.00435e8d(var_4h, arg_ch_00, uVar3, lpRect);\n    }\n    arg_8h_00 = &var_24h;\n    piVar2 = fcn.00435d5e(arg_8h_00, var_4h, arg_ch_00);\n    iVar6 = piVar2[1];\n    *arg_8h = *piVar2;\n    arg_8h[1] = iVar6;\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x28];\n        var_14h = 0;\n        arg_10h = 0;\n        in_ECX[0x28] = 0;\n        if (0 < arg_ch_00) {\n            var_18h = var_4h + 1;\n            puVar5 = var_18h;\n            uVar3 = arg_ch_00;\n            do {\n                if (((*(puVar5 + 5) & 1) != 0) && (*puVar5 != 0)) {\n                    arg_10h = arg_10h + 1;\n                }\n                puVar5 = puVar5 + 5;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (0 < arg_10h) {\n                var_14h = fcn.0040dcc5(-(arg_10h * 0x18 >> 0x20 != 0) | arg_10h * 0x18);\n                var_10h = var_14h + 8;\n                var_1ch = arg_10h;\n                arg_10h = 0;\n                var_8h = NULL;\n                puVar5 = var_10h;\n                do {\n                    arg_ch_00 = var_ch;\n                    if (var_1ch <= arg_10h) break;\n                    puVar7 = puVar5;\n                    if (((*(var_18h + 5) & 1) != 0) && (*var_18h != 0)) {\n                        puVar5[-2] = var_8h;\n                        puVar5[-1] = *var_18h;\n                        (**(*in_ECX + 0x170))(var_8h, &lpRect);\n                        arg_8h_00 = &lpRect;\n                        fcn.0041dfd1(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        puVar7 = var_10h + 6;\n                        *puVar5 = lpRect;\n                        puVar5[1] = var_38h;\n                        puVar5[2] = var_34h;\n                        puVar5[3] = var_30h;\n                        var_10h = puVar7;\n                    }\n                    var_8h = var_8h + 1;\n                    var_18h = var_18h + 5;\n                    arg_ch_00 = var_ch;\n                    puVar5 = puVar7;\n                } while (var_8h < var_ch);\n            }\n        }\n        if (((in_ECX[0x20] & 1U) != 0) && ((in_ECX[0x20] & 4U) != 0)) {\n            in_ECX[0x1c] = *arg_8h;\n        }\n        var_8h = NULL;\n        if (0 < arg_ch_00) {\n            var_10h = var_4h;\n            do {\n                arg_8h_00 = var_8h;\n                fcn.00435b60(var_8h, var_10h);\n                var_8h = var_8h + 1;\n                var_10h = var_10h + 5;\n            } while (var_8h < arg_ch_00);\n        }\n        if (0 < arg_10h) {\n            puVar5 = var_14h + 8;\n            do {\n                arg_8h_00 = puVar5[-1];\n                var_10h = puVar5;\n                var_1ch = fcn.0041ad21();\n                if (var_1ch != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_1ch + 0x20), &lpRect);\n                    iVar8 = var_38h - puVar5[1];\n                    iVar6 = lpRect - *puVar5;\n                    (**(*in_ECX + 0x170))(var_10h[-2], &lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.0041b2f6(0, iVar6 + lpRect, iVar8 + var_38h, 0, 0, 0x15);\n                    puVar5 = var_10h;\n                }\n                puVar5 = puVar5 + 6;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            var_10h = puVar5;\n            fcn.0040dcf0(var_14h, arg_8h_00);\n        }\n        in_ECX[0x28] = var_20h;\n    }\n    fcn.0040dcf0(var_4h);\ncode_r0x004369cb:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&lpRect, arg_8h_00);\n    (**(*in_ECX + 0x140))(&lpRect, arg_ch & 2);\n    arg_8h[1] = arg_8h[1] + (var_38h - var_30h);\n    *arg_8h = *arg_8h + (lpRect - var_34h);\n    fcn.00438311(&var_24h, arg_ch & 1, arg_ch & 2);\n    iVar6 = *arg_8h;\n    if (*arg_8h <= var_24h) {\n        iVar6 = var_24h;\n    }\n    *arg_8h = iVar6;\n    iVar6 = arg_8h[1];\n    if (arg_8h[1] <= var_20h) {\n        iVar6 = var_20h;\n    }\n    arg_8h[1] = iVar6;\n    return arg_8h;\n}\n",
        "token_count": 2273
    },
    "0043708a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043708a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_3ch;\n    uint var_20h;\n    \n    if (arg_8h == 0) {\n        fcn.00411ea1();\n    }\n    var_48h = arg_14h;\n    var_4ch = 1;\n    if (arg_ch != 0) {\n        var_4ch = 5;\n        var_3ch = arg_ch;\n    }\n    if (arg_10h != 0) {\n        var_20h = *(arg_10h + 4);\n        var_4ch = var_4ch | 0x80;\n    }\n    fcn.00436f90(arg_8h, &var_50h);\n    return;\n}\n",
        "token_count": 221
    },
    "00437b0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00437b0a(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041ae8a();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_14h);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    iVar5 = fcn.004175f6();\n    if ((var_4h & 0x1000) != 0) {\n        if (iVar5 == 3) {\n            iVar5 = 2;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < iVar5) && (iVar5 < 0x12)) || (iVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (iVar5 != 4) {\n                    if (iVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (iVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (iVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (iVar5 != 0x11) {\n                        return iVar5;\n                    }\n                }\n                iVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            iVar5 = 2;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 542
    },
    "00438013": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00438013(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    if ((*(param_1 + 0x20) != 0) && (iVar2 = fcn.0042d771(),  iVar2 != 0)) {\n        piVar3 = fcn.0042d75d();\n    // WARNING: Could not recover jumptable at 0x00438031. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (**(*piVar3 + 0x60))();\n        return uVar4;\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) == 0) {\n        if (*(param_1 + 0x50) == 0) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = fcn.00417626(0);\n        if (iVar2 == 0) {\n            iStack20 = 0x4a15e8;\n            fcn.0043cb83(&iStack20, 0x49af08);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iStack20 = 0x41790d;\n        fcn.0042778c();\n    }\n    iStack20 = *(param_1 + 0x20);\n    if ((iStack20 != 0) || (*(param_1 + 0x50) != 0)) {\n        if (*(param_1 + 0x50) == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            iStack20 = 0x41792f;\n            uVar4 = (**(**(param_1 + 0x50) + 0x58))();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 453
    },
    "00438150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438150(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x80);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x4a6138;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x4a613c;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x4a6138;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x4a613c;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 100);\n        param_2[1] = param_2[1] + *(param_1 + 0x5c);\n        param_2[2] = param_2[2] - *(param_1 + 0x68);\n        param_2[3] = param_2[3] - *(param_1 + 0x60);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x5c);\n        param_2[1] = param_2[1] + *(param_1 + 100);\n        param_2[2] = param_2[2] - *(param_1 + 0x60);\n        param_2[3] = param_2[3] - *(param_1 + 0x68);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00438311": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438311(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    *arg_8h = uVar1;\n    if ((arg_ch == 0) || (arg_10h != 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 159
    },
    "0043837f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043837f(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.00414649();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[8], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x4c) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.00418fa4();\n        iVar5 = fcn.0041a0fa();\n        if (iVar5 == 0) {\ncode_r0x004383fa:\n            var_4h = -1;\n        }\n        else {\n            if (iVar4 == 0) {\n                fcn.00411ea1();\n            }\n            iVar5 = fcn.0041aff0();\n            if (iVar5 == 0) goto code_r0x004383fa;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x20);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.0041769a(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[8];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.00418fa4(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x0043848f:\n            var_4h = -1;\n            *(var_8h + 0x4c) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[8]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[8], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x20);\n            }\n            if (iVar4 != iVar3) goto code_r0x0043848f;\n        }\n        if (-1 < var_4h) goto code_r0x004384bf;\n    }\n    if (*(var_8h + 0x4c) == -1) {\n        (*pcVar1)(in_ECX[8], 0xe001);\n    }\n    (**(*in_ECX + 0x164))(0xffffffff);\ncode_r0x004384bf:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[8], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x164))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 924
    },
    "004387db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004387db(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x23] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &arg_ch);\n        (***in_ECX[0x24])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.004175f6();\n    return;\n}\n",
        "token_count": 154
    },
    "0043885f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043885f(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x158))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar4 = var_14h - lprcDst;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x20] & 4U) == 0) || ((var_4h[0x20] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x138))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if (uVar1 < 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = lprcDst + var_ch;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.004154fd(arg_ch, var_4h[8], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 857
    },
    "00439077": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00439077(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x004390d5;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.0043b531(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x004390d5:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.0043b531(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.0043b531(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.0043b531(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.0043b531(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 757
    },
    "00439493": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439493(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.0041e635(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.0042c5c2();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x74) & 0xf000) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.0042c665(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 849
    },
    "0043959e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043959e(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.00439077();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.00439493(0);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "004395f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004395f2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.00439077();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.00439493(0);\n    return;\n}\n",
        "token_count": 306
    },
    "0043985b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043985b(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.00439816();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.0043b401(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.00439195(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x74) & 0x5000) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x20));\n        if ((uVar1 & 0xffff) - 0xe81b < 4) {\n            *(param_1 + 0x90) = uVar1 & 0xffff;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.0041df95(param_1 + 0x94);\n        }\n        fcn.0043b252(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "0043a302": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043a302(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.0040dcf0(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0040dcc5(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.0043c410(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 214
    },
    "0043a3b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0043a3b1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00430918(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -4;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    if (puVar4 != 0xfffffff8) {\n        fcn.0040111d();\n    }\n    puVar4[3] = 0;\n    return puVar4;\n}\n",
        "token_count": 311
    },
    "0043aa62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aa62(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.0043a98b(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.0043bec7(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.004013ac(uVar1);\n    }\n    var_ch = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 200
    },
    "0043aab8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043aab8(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    \n    fcn.0043a98b(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.0043bec7(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.004013ac(uVar1);\n    }\n    iVar2 = fcn.004145d6();\n    var_10h = *(iVar2 + 0xc);\n    var_ch = arg_ch & 0xffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 248
    },
    "0043abc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043abc7(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x0043abe3;\n    do {\n        do {\n            fcn.00411ea1();\ncode_r0x0043abe3:\n        } while (arg_ch == 0);\n        uVar2 = fcn.0043de30(arg_8h);\n    } while (0x400 < uVar2);\n    fcn.0043a98b(&var_30h, arg_ch, arg_10h);\n    var_ch = arg_8h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40c, 0, &var_30h);\n    return;\n}\n",
        "token_count": 245
    },
    "0043b114": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b114(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.00414649();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x3c) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.0041606d(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n                fcn.0043c410(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x20);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x3c) = *(in_ECX + 0x3c) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x3c) & arg_ch) == 0) {\n        iVar2 = fcn.004145d6();\n        *(iVar2 + 0x38) = 0x43b044;\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 420
    },
    "0043b401": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b401(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (arg_8h != 0) goto code_r0x0043b419;\ncode_r0x0043b414:\n    do {\n        fcn.00411ea1();\ncode_r0x0043b419:\n        if (((*(arg_8h + 0x88) != 0) && (iVar4 = *(arg_8h + 0x8c),  iVar4 != 0)) && (*(iVar4 + 0x94) != 0)) {\n            iVar1 = fcn.0043424b();\n            if ((iVar1 == 1) && ((*(iVar4 + 0x80) & arg_14h & 0xf000) != 0)) {\n                uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x20));\n                piVar3 = fcn.0041769a(uVar2);\n                if (piVar3 != NULL) {\n                    fcn.0041b2f6(0, arg_ch, arg_10h, 0, 0, 0x15);\n                    (**(*piVar3 + 0x148))(1);\n                    goto code_r0x0043b521;\n                }\n                goto code_r0x0043b414;\n            }\n        }\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x80) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar3 = fcn.0043b219(arg_14h);\n        if (piVar3 != NULL) {\n            fcn.0041b2f6(0, arg_ch, arg_10h, 0, 0, 0x15);\n            if (piVar3[0xe] == 0) {\n                piVar3[0xe] = *(arg_8h + 0x20);\n            }\n            iVar4 = fcn.0041ad21(0xe81f);\n            if (iVar4 != 0) {\n                fcn.00434a45(arg_8h, 0);\n                (**(*piVar3 + 0x148))(1);\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x20), 0xfffffff0);\n                if ((uVar5 & 0x10000000) != 0) {\n                    fcn.0041afcf(8);\ncode_r0x0043b521:\n                    (*_sym.imp.USER32.dll_UpdateWindow)(piVar3[8]);\n                }\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 720
    },
    "0043b531": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0043b531(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x88);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.00415836(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x15c))();\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar1[8]),  iVar4 == 0)) ||\n                 ((piVar1[0x20] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x25] != 0 && ((piVar1[0x20] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[8], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x20] & arg_18h;\n}\n",
        "token_count": 541
    },
    "0043b839": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043b839(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x43b8e2;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0043b90e;\n        uStack36 = *0x4a2460 ^ &fcn.0043b839::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0043b839::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0044567d();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0043b839::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 727
    },
    "0043bb11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bb11(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4a2460) {\n        return;\n    }\n    *0x4a6340 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4a6344 = &arg_8h;\n    *0x4a6280 = 0x10001;\n    *0x4a6228 = 0xc0000409;\n    *0x4a622c = 1;\n    var_328h = *0x4a2460;\n    var_324h = *0x4a2464;\n    *0x4a6234 = unaff_retaddr;\n    *0x4a630c = in_GS;\n    *0x4a6310 = in_FS;\n    *0x4a6314 = in_ES;\n    *0x4a6318 = in_DS;\n    *0x4a631c = unaff_EDI;\n    *0x4a6320 = unaff_ESI;\n    *0x4a6324 = unaff_EBX;\n    *0x4a6328 = in_EDX;\n    *0x4a632c = in_ECX;\n    *0x4a6330 = in_EAX;\n    *0x4a6334 = unaff_EBP;\n    *0x4a6338 = unaff_retaddr;\n    *0x4a633c = in_CS;\n    *0x4a6348 = in_SS;\n    *0x4a6278 = (*_sym.imp.KERNEL32.DLL_IsDebuggerPresent)();\n    fcn.00458d93(1);\n    (*_sym.imp.KERNEL32.DLL_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.DLL_UnhandledExceptionFilter)(0x48f134);\n    if (*0x4a6278 == 0) {\n        fcn.00458d93(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 856
    },
    "0043bd6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bd6f(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0043c1fb(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0043dc6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0043dd04: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0043dd09)\n// WARNING: Removing unreachable block (ram,0x0043dd37)\n// WARNING: Removing unreachable block (ram,0x0043dd0f)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043dc6f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49e528, 0xc);\n    fcn.004484f3(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4a61fc != 1) {\n        *0x4a61f8 = 1;\n        *0x4a61f4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.0044543f(*0x4a8238);\n            uVar2 = fcn.0044543f(*0x4a8234);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.0043da10(0x486cb0);\n        }\n        fcn.0043da10(0x486fbc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00448403(8);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "0044345f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044345f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.004433b6(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004434c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004434c4(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.004433b6(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004443c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004443c4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044567d();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0044567d();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00444a5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444a5a(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0043ba67(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0044567d();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0044567d();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0043ba46(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00444424(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0044d252": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044d252(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00448403(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0045bd49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045bd49(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.00445436();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x4a6c64 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, \"MessageBoxA\"),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x4a6c64 = fcn.004453d3(iVar2);\n        uVar3 = (*pcVar4)(iVar1, \"GetActiveWindow\");\n        *0x4a6c68 = fcn.004453d3(uVar3);\n        uVar3 = (*pcVar4)(iVar1, \"GetLastActivePopup\");\n        *0x4a6c6c = fcn.004453d3(uVar3);\n        iVar2 = fcn.0043da48(&var_8h);\n        if (iVar2 != 0) {\n            fcn.0044607f(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x4a6c74 = fcn.004453d3(uVar3);\n            if (*0x4a6c74 != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x4a6c70 = fcn.004453d3(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x4a6c70 == var_10h) || (*0x4a6c74 == var_10h)) {\ncode_r0x0045be97:\n        if (*0x4a6c68 != iVar1) {\n            pcVar4 = fcn.0044543f(*0x4a6c68);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x4a6c6c != iVar1)) {\n                pcVar4 = fcn.0044543f(*0x4a6c6c, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.0044543f(*0x4a6c70);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.0044543f(*0x4a6c74, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x0045be97;\n        }\n        iVar1 = fcn.0043daf7(&var_ch);\n        if (iVar1 != 0) {\n            fcn.0044607f(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.0044543f(*0x4a6c64, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 985
    },
    "0045f9cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045f9cf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043bfd9(arg_10h);\n    var_14h = fcn.004625bf(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004614a0(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0045fa26:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0045fa66;\n        }\n        if (iVar1 != 2) {\ncode_r0x0045fa58:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0045fa66;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0045fa58;\n        goto code_r0x0045fa26;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0045fa66:\n    fcn.0043bb11(unaff_EBX);\n    return;\n}\n",
        "token_count": 504
    },
    "0045fb42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045fb42(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043bfd9(arg_10h);\n    var_14h = fcn.004625bf(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004619e2(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0045fb99:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0045fbd9;\n        }\n        if (iVar1 != 2) {\ncode_r0x0045fbcb:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0045fbd9;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0045fbcb;\n        goto code_r0x0045fb99;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0045fbd9:\n    fcn.0043bb11(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "004614a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004614a0(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0046199f;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004615d3;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004615da;\ncode_r0x004615d3:\n                        do {\n                            var_4h = 1;\ncode_r0x004615da:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004615e8;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004615e8:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4a35fc - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4a35fc < iVar12) {\n                if (iVar12 < *0x4a35f8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4a35f8;\n                    uVar5 = 1;\n                }\n                goto code_r0x0046199f;\n            }\n            var_10h = *0x4a35fc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0046178b;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0046178b:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0046199f:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3669
    },
    "004619e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004619e2(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00461ee1;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4a3618 - 1;\n        iVar4 = *0x4a3618 + (*0x4a3618 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4a3618 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00461b15;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00461b1c;\ncode_r0x00461b15:\n                        do {\n                            var_4h = 1;\ncode_r0x00461b1c:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00461b2a;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00461b2a:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4a3614 - *0x4a3618) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4a3614 < iVar12) {\n                if (iVar12 < *0x4a3610) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4a3624;\n                    iVar4 = *0x4a361c + (*0x4a361c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4a361c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4a361c + (*0x4a361c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4a361c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4a3624 + *0x4a3610;\n                    uVar5 = 1;\n                }\n                goto code_r0x00461ee1;\n            }\n            var_10h = *0x4a3614 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4a3618 - 1;\n            iVar12 = *0x4a3618 + (*0x4a3618 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4a3618 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00461ccd;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00461ccd:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4a361c + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00461ee1:\n    var_20h = iVar12 << (0x1fU - *0x4a361c & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4a3620 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4a3620 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3666
    },
    "004664db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004664db(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExA)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x4664d7,  var_94h < 5)) {\n        pcVar1 = fcn.00466472;\n    }\n    arg_8h = 0x4a3990;\n    (*_sym.imp.KERNEL32.DLL_InterlockedExchange)(0x4a3990, pcVar1);\n    (**0x4a3990)();\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 226
    },
    "004667e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004667e7(uint *param_1)\n\n{\n    if (*(param_1 + 1) != '\\0') {\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(*param_1);\n        *(param_1 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00466971": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466971(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack124;\n    fcn.004667fe();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.0043c410(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExA)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x004669ed;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x004669ed;\n    *(param_1 + 3) = 1;\ncode_r0x004669ed:\n    param_1[4] = 0x800;\n    param_1[5] = 0x493bd8;\n    iVar1 = fcn.004665bb();\n    if (iVar1 < 0) {\n        *0x4a4384 = 1;\n    }\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 386
    },
    "0040142e": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d7a0)\n\nint32_t __thiscall fcn.0040142e(int32_t *param_1, uint32_t param_2)\n\n{\n    if (param_2 < 0x81) {\n        *param_1 = param_1 + 1;\n        return param_1 + 1;\n    }\n    fcn.00401140(param_2);\n    return *param_1;\n}\n",
        "token_count": 104
    },
    "004012d0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004012d0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x47e4d0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.00401339(var_8h + 1, 0);\n    if (var_ch_2 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.0043bec7(arg_8h, var_8h + 1, arg_10h, var_ch_2);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.0040dcf0(*(param_1 + 4));\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = var_8h;\n    *(param_1 + 0x14) = var_ch_2;\n    if (0xf < var_8h) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 584
    },
    "00401357": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401357(uint32_t param_1, uint32_t param_2)\n\n{\n    if (param_1 * param_2 >> 0x20 != 0) {\n        fcn.00401451(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "004013a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004013a2(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 * param_3;\n    if ((param_2 * param_3 >> 0x20) + (0x7fffffff < uVar1) != 0) {\n        return 0x80070057;\n    }\n    *param_1 = uVar1;\n    return 0;\n}\n",
        "token_count": 113
    },
    "0040ce30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Removing unreachable block (ram,0x0040cf83)\n\nvoid __cdecl fcn.0040ce30(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    ulong uVar4;\n    uchar *var_2ch;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47ee88;\n    var_ch = *in_FS_OFFSET;\n    var_2ch = *0x4a2460 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    (**0x4a3990)(var_2ch);\n    var_4h = 0;\n    var_1ch = 0;\n    if (arg_10h != 0) {\n        (*_sym.imp.KERNEL32.DLL_lstrlenW)(arg_10h);\n        var_1ch = 0;\n        var_2ch = &stack0xffffffd4;\n        uVar4 = fcn.0043d5e0();\n        uVar2 = uVar4;\n        if ((uVar4 >> 0x20) + (0x7fffffff < uVar2) == 0) {\n            if ((uVar2 < 0x401) && (cVar1 = fcn.004010a0(uVar2),  cVar1 != '\\0')) {\n                fcn.0043d5b0();\n            }\n            else {\n                var_2ch = fcn.004012f8();\n            }\n            var_1ch = fcn.004010e6();\n            if (var_1ch != 0) goto code_r0x0040cee8;\n        }\n        var_2ch = 0x8007000e;\n        fcn.00401451(0x8007000e);\n    }\ncode_r0x0040cee8:\n    iVar3 = 0;\n    if (arg_18h != 0) {\n        (*_sym.imp.KERNEL32.DLL_lstrlenW)(arg_18h, var_2ch);\n        var_1ch = 0;\n        var_2ch = &stack0xffffffd4;\n        uVar4 = fcn.0043d5e0();\n        uVar2 = uVar4;\n        if ((uVar4 >> 0x20) + (0x7fffffff < uVar2) == 0) {\n            if ((uVar2 < 0x401) && (cVar1 = fcn.004010a0(uVar2),  cVar1 != '\\0')) {\n                fcn.0043d5b0();\n            }\n            else {\n                var_2ch = fcn.004012f8();\n            }\n            iVar3 = fcn.004010e6();\n            if (iVar3 != 0) goto code_r0x0040cf62;\n        }\n        var_2ch = 0x8007000e;\n        iVar3 = fcn.00401451(0x8007000e);\n    }\ncode_r0x0040cf62:\n    (*_sym.imp.KERNEL32.DLL_CompareStringA)(arg_8h, arg_ch, var_1ch, arg_14h, iVar3, arg_1ch, var_2ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043bb11(var_1ch);\n    return;\n}\n",
        "token_count": 873
    },
    "0040d080": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d1b7)\n\nvoid __cdecl fcn.0040d080(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    ulong uVar5;\n    uchar *var_38h;\n    uint32_t in_stack_ffffffd4;\n    uint32_t uVar6;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47eec8;\n    var_ch = *in_FS_OFFSET;\n    var_38h = *0x4a2460 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040d080::var_ch;\n    (**0x4a3990)();\n    var_4h = 0;\n    if (arg_ch == 0) {\n        var_1ch = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenW)(arg_ch);\n        var_38h = iVar3 + 1;\n        puVar4 = &fcn.0040d080::var_38h;\n        uVar6 = 0x40d0dd;\n        uVar5 = fcn.0043d5e0();\n        in_stack_ffffffd4 = uVar5;\n        if ((uVar5 >> 0x20) + (0x7fffffff < in_stack_ffffffd4) == 0) {\n            if ((in_stack_ffffffd4 < 0x401) && (cVar1 = fcn.004010a0(),  cVar1 != '\\0')) {\n                in_stack_ffffffd4 = 0x40d116;\n                fcn.0043d5b0();\n            }\n            else {\n                puVar4 = fcn.004012f8();\n            }\n            var_38h = puVar4;\n            var_1ch = fcn.004010e6();\n        }\n        else {\n            var_1ch = 0;\n            in_stack_ffffffd4 = uVar6;\n        }\n    }\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenW)(arg_8h);\n        var_38h = iVar3 + 1;\n        var_1ch = 2;\n        puVar4 = &fcn.0040d080::var_38h;\n        uVar6 = 0x40d156;\n        uVar5 = fcn.0043d5e0();\n        in_stack_ffffffd4 = uVar5;\n        if ((uVar5 >> 0x20) + (0x7fffffff < in_stack_ffffffd4) == 0) {\n            if ((in_stack_ffffffd4 < 0x401) && (cVar1 = fcn.004010a0(),  cVar1 != '\\0')) {\n                in_stack_ffffffd4 = 0x40d18a;\n                fcn.0043d5b0();\n            }\n            else {\n                puVar4 = fcn.004012f8();\n            }\n            var_38h = puVar4;\n            uVar2 = fcn.004010e6();\n        }\n        else {\n            uVar2 = 0;\n            in_stack_ffffffd4 = uVar6;\n        }\n    }\n    (*_sym.imp.KERNEL32.DLL_lstrcmpiA)(uVar2, var_1ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043bb11(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 882
    },
    "0040d2b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d41a)\n// WARNING: Removing unreachable block (ram,0x0040d420)\n\nvoid __cdecl fcn.0040d2b0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int16_t *piVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    ulong uVar8;\n    int16_t *piStack60;\n    uchar *puStack56;\n    int16_t *var_30h;\n    int32_t in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47ef08;\n    var_ch = *in_FS_OFFSET;\n    var_30h = *0x4a2460 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040d2b0::var_ch;\n    puVar7 = NULL;\n    if (arg_8h == NULL) {\n        puStack56 = 0x80004005;\n        piStack60 = 0x40d2f5;\n        fcn.00401451();\n    }\n    piStack60 = 0x40d2fb;\n    (**0x4a3990)();\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        piStack60 = arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenW)();\n        puStack56 = iVar3 + 1;\n        puVar7 = &stack0xffffffc8;\n        uVar8 = fcn.0043d5e0();\n        if ((uVar8 >> 0x20) + (0x7fffffff < uVar8) == 0) {\n            if ((uVar8 < 0x401) && (cVar2 = fcn.004010a0(),  cVar2 != '\\0')) {\n                fcn.0043d5b0();\n            }\n            else {\n                puVar7 = fcn.004012f8();\n            }\n            var_30h = arg_8h;\n            piStack60 = 0x40d371;\n            puStack56 = puVar7;\n            puVar7 = fcn.004010e6();\n        }\n        else {\n            puVar7 = NULL;\n        }\n    }\n    piStack60 = puVar7;\n    (*_sym.imp.USER32.dll_CharLowerA)();\n    if (puVar7 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(puVar7);\n        piStack60 = iVar3 + 1;\n        in_stack_ffffffdc = piStack60 >> 0x1f;\n        puVar5 = &stack0xffffffc4;\n        uVar8 = fcn.0043d5e0();\n        piVar6 = uVar8;\n        if ((uVar8 >> 0x20) + (0x7fffffff < piVar6) == 0) {\n            if ((piVar6 < 0x401) && (cVar2 = fcn.004010a0(),  cVar2 != '\\0')) {\n                fcn.0043d5b0();\n            }\n            else {\n                puVar5 = fcn.004012f8();\n            }\n            piStack60 = puVar5;\n            puStack56 = puVar7;\n            var_30h = piVar6;\n            uVar4 = fcn.004013e8();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    piVar6 = arg_8h;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    uVar4 = fcn.0043ce5e(arg_8h, (piVar6 - (arg_8h + 1) >> 1) + 1, uVar4);\n    fcn.004013ac(uVar4);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043bb11(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 998
    },
    "0040d520": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d68a)\n// WARNING: Removing unreachable block (ram,0x0040d690)\n\nvoid __cdecl fcn.0040d520(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int16_t *piVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    ulong uVar8;\n    int16_t *piStack60;\n    uchar *puStack56;\n    int16_t *var_30h;\n    int32_t in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x47ef48;\n    var_ch = *in_FS_OFFSET;\n    var_30h = *0x4a2460 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040d520::var_ch;\n    puVar7 = NULL;\n    if (arg_8h == NULL) {\n        puStack56 = 0x80004005;\n        piStack60 = 0x40d565;\n        fcn.00401451();\n    }\n    piStack60 = 0x40d56b;\n    (**0x4a3990)();\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        piStack60 = arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenW)();\n        puStack56 = iVar3 + 1;\n        puVar7 = &stack0xffffffc8;\n        uVar8 = fcn.0043d5e0();\n        if ((uVar8 >> 0x20) + (0x7fffffff < uVar8) == 0) {\n            if ((uVar8 < 0x401) && (cVar2 = fcn.004010a0(),  cVar2 != '\\0')) {\n                fcn.0043d5b0();\n            }\n            else {\n                puVar7 = fcn.004012f8();\n            }\n            var_30h = arg_8h;\n            piStack60 = 0x40d5e1;\n            puStack56 = puVar7;\n            puVar7 = fcn.004010e6();\n        }\n        else {\n            puVar7 = NULL;\n        }\n    }\n    piStack60 = puVar7;\n    (*_sym.imp.USER32.dll_CharUpperA)();\n    if (puVar7 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(puVar7);\n        piStack60 = iVar3 + 1;\n        in_stack_ffffffdc = piStack60 >> 0x1f;\n        puVar5 = &stack0xffffffc4;\n        uVar8 = fcn.0043d5e0();\n        piVar6 = uVar8;\n        if ((uVar8 >> 0x20) + (0x7fffffff < piVar6) == 0) {\n            if ((piVar6 < 0x401) && (cVar2 = fcn.004010a0(),  cVar2 != '\\0')) {\n                fcn.0043d5b0();\n            }\n            else {\n                puVar5 = fcn.004012f8();\n            }\n            piStack60 = puVar5;\n            puStack56 = puVar7;\n            var_30h = piVar6;\n            uVar4 = fcn.004013e8();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    piVar6 = arg_8h;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    uVar4 = fcn.0043ce5e(arg_8h, (piVar6 - (arg_8h + 1) >> 1) + 1, uVar4);\n    fcn.004013ac(uVar4);\n    *in_FS_OFFSET = var_ch;\n    fcn.0043bb11(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 994
    },
    "00410132": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00410132(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004227d4();\n    if (piVar1 == NULL) {\n        fcn.00411e6d();\n    }\n    piVar1[0xd] = 0;\n    iVar2 = fcn.0040ffca(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.DLL_SetThreadPriority)(piVar1[0xb], arg_ch);\n        if (((arg_14h & 4) == 0) && (iVar2 = (*_sym.imp.KERNEL32.DLL_ResumeThread)(piVar1[0xb]),  iVar2 == -1)) {\n            fcn.00411ea1();\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 264
    },
    "004103cf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004103cf(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.0043de30(param_2);\n    }\n    fcn.00401249(param_2);\n    return;\n}\n",
        "token_count": 90
    },
    "00410cea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00410cea(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    uVar1 = fcn.0041bca8();\n    fcn.00401456(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.004012b7(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.00410ca1(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.00401438();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 277
    },
    "00412574": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00412574(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 80
    },
    "0041266d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041266d(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.004410a0(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.0041260a(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 112
    },
    "0041403c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041403c(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.0040dcf0(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.004139b1(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00422fa7();\n    fcn.00401438();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 457
    },
    "0041f7f2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041f7f2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = unaff_EBX;\n    uVar2 = unaff_EDI;\n    if (0x76b < arg_8h) goto code_r0x0041f80e;\n    do {\n        do {\n            fcn.00401451();\n            iVar1 = unaff_EBX;\n            uVar2 = unaff_EDI;\ncode_r0x0041f80e:\n            unaff_EBX = arg_ch;\n            unaff_EDI = uVar2;\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (unaff_EDI = arg_14h,  0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        unaff_EDI = uVar2;\n        unaff_EBX = iVar1;\n        iVar3 = fcn.0044183c(&var_24h, uVar2, iVar1);\n        *in_ECX = iVar3;\n        in_ECX[1] = iVar3 >> 0x20;\n    } while (iVar3 == -1);\n    return;\n}\n",
        "token_count": 525
    },
    "0041fc31": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fc31(uint arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.DLL_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)(arg_8h);\n        fcn.0042cf07(uVar2);\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) != 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042cf07(uVar2);\n        }\n    }\n    if ((arg_ch[2] | arg_ch[3]) != 0) {\n        fcn.0041fb96(arg_ch + 2, &var_24h);\n        if ((arg_ch[4] | arg_ch[5]) != 0) {\n            fcn.0041fb96(arg_ch + 4, &var_14h);\n            var_8h = &var_14h;\n        }\n        if ((*arg_ch | arg_ch[1]) != 0) {\n            fcn.0041fb96(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.DLL_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042cf07(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.DLL_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042cf07(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042cf07(uVar2);\n        }\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) == 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0042cf07(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 764
    },
    "0041fd9a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fd9a(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.0043c410(arg_8h, 0, 0x128);\n    fcn.00411ec0(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x48bdfc) {\ncode_r0x0041fee9:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar3;\n            arg_8h[7] = 0;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.0041f7b1(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar4 = fcn.0041f8dd(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                iVar1 = fcn.0041f7b1(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar4 = fcn.0041f8dd(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar4;\n                    arg_8h[5] = puVar4[1];\n                }\n                iVar1 = fcn.0041f7b1(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar4 = fcn.0041f8dd(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar4;\n                    arg_8h[3] = puVar4[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x0041fee9;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 872
    },
    "00422c42": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00422c42(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.DLL_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x4a14b8;\n        fcn.0043cb83(&stack0xfffffff4, 0x49ae10);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x422c7d;\n    (*_sym.imp.KERNEL32.DLL_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 253
    },
    "00422fd7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422fd7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00422e2f(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.DLL_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.DLL_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.DLL_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.DLL_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 236
    },
    "00425dc7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425dc7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00401212();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)(*(param_1 + 0xc));\n        fcn.0042cf07(uVar2);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00425e0a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425e0a(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 4) != -1) {\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(*(param_1 + 4));\n        *(param_1 + 4) = 0xffffffff;\n    }\n    piVar3 = param_1 + 0xc;\n    iVar5 = *piVar3;\n    ppiVar1 = iVar5 + -0x10;\n    piVar4 = *ppiVar1;\n    if (*(iVar5 + -0xc) != 0) {\n        piVar2 = iVar5 + -4;\n        if (*(iVar5 + -4) < 0) {\n            if (*(iVar5 + -8) < 0) {\n                fcn.00401451(0x80070057);\n                iVar5 = extraout_ECX;\n            }\n            *(iVar5 + -0xc) = 0;\n            **piVar3 = 0;\n            return;\n        }\n        LOCK();\n        iVar5 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar5 = (**(*piVar4 + 0xc))();\n        *piVar3 = iVar5 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "00425fcf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00425fcf(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.0043d8c8();\n    *extraout_ECX = vtable.CFile.0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.00425dc7();\n    }\n    fcn.00401438();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0043bb11(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 146
    },
    "00427836": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427836(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00427866;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.00411ea1();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x00427866:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "0042ac9a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042ac9a(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    ulong uVar3;\n    \n    iVar1 = in_ECX[2];\n    if (iVar1 == 0) {\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = -0x80000000;\n        }\n        else {\n            if (((arg_ch != -1) || (*in_ECX != 0)) || (in_ECX[1] != -0x80000000)) {\n                uVar3 = fcn.00443da0(*in_ECX, in_ECX[1], arg_ch, arg_ch >> 0x1f);\n                *arg_8h = uVar3;\n                arg_8h[1] = uVar3 >> 0x20;\n                arg_8h[2] = 0;\n                return arg_8h;\n            }\n            *arg_8h = -1;\n            arg_8h[1] = 0x7fffffff;\n        }\n        arg_8h[2] = 1;\n    }\n    else {\n        iVar2 = in_ECX[1];\n        *arg_8h = *in_ECX;\n        arg_8h[1] = iVar2;\n        arg_8h[2] = iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 342
    },
    "0042dfbe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042dfbe(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004175f6();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x15c))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[8], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x148))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 152
    },
    "004309f5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004309f5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00430a0b;\n    do {\n        fcn.00411ea1();\ncode_r0x00430a0b:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.0040dcf0(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00430afb;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.0040dcc5(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.0043c410(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00430a72:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.0043c410(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x00430a72;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00430aa4:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00430aa4;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.0040dcc5(arg_8h);\n    fcn.004125eb(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.0043c410(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.0040dcf0(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00430afb:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 746
    },
    "0043257a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.0043257a(uint wParam)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint nWidth;\n    uint nHeight;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(0x18);\n    if (*(unaff_EBP + 8) != -1) {\n        uVar2 = fcn.0042c5c2();\n        (*_sym.imp.USER32.dll_GetClientRect)(*(extraout_ECX + 0x20), unaff_EBP + -0x24);\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar3 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x24);\n        fcn.0041e643(uVar3);\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(*(extraout_ECX + 0x20));\n        iVar4 = fcn.0041e36e(uVar3);\n        fcn.0041df18(unaff_EBP + -0x14);\n        (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x20), 0x198, *(unaff_EBP + 8), unaff_EBP + -0x24);\n        iVar1 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -2;\n        *(unaff_EBP + -0x18) = iVar1 + 2;\n        uVar2 = fcn.0041e838(uVar2);\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (*(iVar4 + 4), *(unaff_EBP + -0x24), *(unaff_EBP + -0x20), *(unaff_EBP + -0x1c) - *(unaff_EBP + -0x24)\n                   , *(unaff_EBP + -0x18) - *(unaff_EBP + -0x20), 0x5a0049);\n        fcn.0041e838(uVar2);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(extraout_ECX + 0x20), *(iVar4 + 4));\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n        fcn.0041e696();\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 769
    },
    "0043287f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043287f(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_ECX;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    var_14h = arg_ch;\n    var_1ch = arg_10h;\n    var_20h = 5;\n    if (arg_14h != -1) {\n        var_20h = 7;\n        var_18h = arg_14h;\n    }\n    if (arg_18h != -1) {\n        var_20h = var_20h | 8;\n        var_ch = arg_18h;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x101b, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 235
    },
    "0043508a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0043508a(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x4a2384 == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x4a2384);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x4a2384;\n}\n",
        "token_count": 305
    },
    "00435b60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435b60(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    arg_8h_00 = &var_18h;\n    (**(*in_ECX + 0x110))(0x417, arg_8h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.0043f802(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        uVar3 = fcn.0041ae8a();\n        var_20h = uVar3;\n        fcn.0041aebe(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (arg_ch[4] < -1) {\n            var_1ch = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x43d, 0, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 0, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch + 1, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 1, 0);\n            arg_ch[4] = arg_ch[4] + 1000000;\n            uVar3 = var_20h;\n        }\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.0041aebe(0, uVar3 & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x00435cb3;\n            puVar4 = &var_30h;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[8], puVar4, 1);\n    }\ncode_r0x00435cb3:\n    fcn.0043bb11(arg_8h_00);\n    return;\n}\n",
        "token_count": 790
    },
    "004364ea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004364ea(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x4a2380;\n    if (*0x4a2380 == -1) {\n        fcn.004145d6();\n        uVar1 = fcn.004173cd();\n        pcVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.0043c410(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x4a2380 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 258
    },
    "0043a7f2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a7f2(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_34h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_34h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_14h == 0) && (var_10h != 0xffffffff)) && (var_10h != NULL)) {\n        iVar2 = fcn.0043a45d(var_10h, &var_4h);\n        if (iVar2 == 0) {\n            puVar1 = fcn.0043a656(var_10h);\n            *puVar1 = 0;\n        }\n        arg_ch = NULL;\n        fcn.0043a484(var_10h, &arg_ch);\n        var_10h = arg_ch;\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 327
    },
    "004171f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004171f0(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0041ae8a(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[8]);\n    param_1[0xf] = param_1[0xf] | 0x18;\n    iVar6 = fcn.0040f59e();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x004172af:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.0040fbdf();\n            if (iVar7 == 0) {\n                fcn.0040e1ff(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0041afcf(1);\n                (*pcVar3)(param_1[8]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xf] = param_1[0xf] & 0xffffffe7;\n                return param_1[0x11];\n            }\n            iVar7 = fcn.0040fa56(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0041afcf(1);\n        (*pcVar3)(param_1[8]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[8]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x00417290;\n    goto code_r0x004172ab;\ncode_r0x00417290:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[8], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x004172ab:\n        bVar2 = false;\n    }\n    goto code_r0x004172af;\n}\n",
        "token_count": 785
    },
    "0041a942": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041a942(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.004145d6();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0043c410(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.004145d6();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x4a6168;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.0041a65b(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.0041a65b(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0041a65b(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0041a901(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0041a901(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.00417e0b(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.00417e0b(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.00417e0b(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.00417e0b(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.00417e0b(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.00417e0b(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.00417e0b(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.00417e0b(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.00417e0b(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.00417e0b(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.00417e0b(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.00417e0b(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.00417e0b(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.00417e0b(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1812
    },
    "0041b7f2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b7f2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0041b1d3();\n    puVar4 = &var_8h;\n    fcn.0041b1d3(puVar4);\n    do {\n        iVar1 = var_4h;\n        if (var_4h == 0) {\n            puVar3 = &var_10h;\ncode_r0x0041b847:\n            fcn.0041b1d3(puVar3, puVar4);\n            return arg_8h;\n        }\n        uVar2 = fcn.0041b115();\n        if ((uVar2 >> 0x11 & 1) != 0) {\ncode_r0x0041b844:\n            puVar3 = &var_8h;\n            goto code_r0x0041b847;\n        }\n        if (var_10h != var_8h) {\n            fcn.00411ea1();\n            goto code_r0x0041b844;\n        }\n        puVar4 = &var_4h;\n        var_ch = iVar1;\n        fcn.0041b256();\n    } while( true );\n}\n",
        "token_count": 329
    },
    "0041c029": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041c029(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    \n    if (noname_2 != 0) {\n        if (noname_1 == 0) {\n            fcn.00411ea1();\n        }\n        if ((~*(var_8h + 0x18) & 1) == 0) {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0042aa16(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n        else {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0041bfc7();\n                fcn.0042a9c9(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00421ce1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00421ce1(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.00401438();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.0040dcf0(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.00443414(param_1, 4, *puVar1, fcn.0040144c);\n        if ((param_2 & 1) != 0) {\n            fcn.0040dcf0(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 181
    },
    "00422b0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422b0c(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    iStack24 = param_1 + 0x1c;\n    iStack28 = 0x422b21;\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x00422bf0;\n        }\n        iVar3 = iVar3 + 0x20;\n        iStack28 = *(param_1 + 0x10);\n        if (iStack28 == 0) {\n            iStack28 = 8;\n            iStack36 = 0x422b6c;\n            iStack32 = iVar3;\n            iStack28 = fcn.00401357();\n            iStack32 = 2;\n            iStack36 = 0x422b77;\n            iStack36 = (*_sym.imp.KERNEL32.DLL_GlobalAlloc)();\n        }\n        else {\n            iStack32 = 0x422b80;\n            uVar4 = (*_sym.imp.KERNEL32.DLL_GlobalHandle)();\n            iStack36 = 0x422b89;\n            iStack32 = uVar4;\n            (*_sym.imp.KERNEL32.DLL_GlobalUnlock)();\n            iStack36 = 0x2002;\n            iStack40 = 8;\n            iStack44 = iVar3;\n            iStack40 = fcn.00401357();\n            iStack44 = uVar4;\n            iStack36 = (*_sym.imp.KERNEL32.DLL_GlobalReAlloc)();\n        }\n        if (iStack36 == 0) {\n            iStack36 = *(param_1 + 0x10);\n            if (iStack36 != 0) {\n                iStack40 = 0x422bb2;\n                iStack40 = (*_sym.imp.KERNEL32.DLL_GlobalHandle)();\n                iStack44 = 0x422bb9;\n                (*_sym.imp.KERNEL32.DLL_GlobalLock)();\n            }\n            iStack40 = 0x422bc3;\n            (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)();\n            iStack44 = 0x4a14b8;\n            iStack40 = iVar3;\n            fcn.0043cb83(&stack0xffffffd4, 0x49ae10);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        iStack40 = 0x422bcf;\n        iVar5 = (*_sym.imp.KERNEL32.DLL_GlobalLock)();\n        iStack28 = (iVar3 - *(param_1 + 4)) * 8;\n        iStack36 = iVar5 + *(param_1 + 4) * 8;\n        iStack32 = 0;\n        iStack40 = 0x422be7;\n        fcn.0043c410();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x00422bf0:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    iStack32 = 0x422c14;\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 1024
    },
    "00428946": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428946(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 375
    },
    "00428aad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428aad(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 1;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "00428ae3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428ae3(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00428b23": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428b23(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00428b5d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428b5d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 199
    },
    "00428b96": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428b96(int32_t param_1)\n\n{\n    uchar *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 1U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 1);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "00428bd5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428bd5(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 224
    },
    "00428c1d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428c1d(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 194
    },
    "00428c60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428c60(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "0042a7ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a7ad(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 234
    },
    "0042a7ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a7ed(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 199
    },
    "0042a826": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a826(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "0042a85f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __fastcall fcn.0042a85f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00428946();\n    }\n    **(param_1 + 0x28) = CONCAT44(unaff_retaddr, unaff_ESI);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 228
    },
    "0042a898": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a898(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 224
    },
    "0042a8e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a8e0(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0042a922": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a922(int32_t param_1)\n\n{\n    ulong *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "0042a964": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042a964(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0042c11f(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.004289bd((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "0042ab7d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0042ac3f)\n\nvoid __cdecl fcn.0042ab7d(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = in_ECX[2];\n    if (uVar3 != 0) {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        arg_8h[2] = uVar3;\n        return;\n    }\n    uVar3 = in_ECX[1];\n    uVar5 = *in_ECX;\n    if (((uVar5 | uVar3) == 0) || (arg_ch == 0)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        return;\n    }\n    uVar1 = arg_ch >> 0x18 ^ uVar3 >> 0x18;\n    if ((uVar3 < 1) && (uVar3 < 0)) {\n        bVar6 = uVar5 != 0;\n        uVar5 = -uVar5;\n        uVar3 = -(uVar3 + bVar6);\n    }\n    uVar4 = fcn.0044157e(arg_ch);\n    uVar7 = fcn.0043d5e0(uVar3, 0, uVar4, 0);\n    if ((uVar7 >> 0x20 == 0) && (uVar7 < 0x80000001)) {\n        uVar8 = fcn.0043d5e0(uVar5, 0, uVar4, 0);\n        iVar9 = fcn.0043d5e0(uVar7, 0, 0, 1);\n        uVar2 = uVar8 + iVar9;\n        if (uVar8 <= uVar2) {\n            if (uVar1 < '\\0') {\n                uVar2 = CONCAT44(-((uVar2 >> 0x20) + (uVar2 != 0)), -uVar2);\n            }\n            if (-1 < (uVar2 >> 0x20 ^ arg_ch ^ in_ECX[1])) {\n                uVar3 = 0;\n                goto code_r0x0042ac7b;\n            }\n        }\n    }\n    uVar3 = 1;\n    if (uVar1 < '\\0') {\n        uVar2 = 0x8000000000000000;\n    }\n    else {\n        uVar2 = 0x7fffffffffffffff;\n    }\ncode_r0x0042ac7b:\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    arg_8h[2] = uVar3;\n    return;\n}\n",
        "token_count": 762
    },
    "0042b543": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042b543(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if ((noname_2 != 0) && (noname_1 == 0)) {\n        fcn.00411ea1();\n    }\n    if ((~*(var_8h + 0x18) & 1) == 0) {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.0042b2db(var_8h, noname_1);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    else {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.0042a0b6();\n            fcn.0042b0db(var_8h, noname_1, uStack32, uStack28, uStack24);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0042de64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042de64(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0041ae8a();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.00418257();\n    }\n    if (iVar4 == 0) {\n        fcn.00411ea1();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0041aff0();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) | 0x200;\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 1, 0);\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffdff;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.0042d43f(*(iVar4 + 0x20), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "0042f31d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f31d(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00411ea1();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429f10();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00428e9d(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "004353a1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004353a1(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x20];\n    param_1[0x28] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x138))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 218
    },
    "00436dd5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00436dd5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_30h;\n    \n    iVar1 = fcn.004175f6();\n    if (iVar1 != 0) {\n        var_50h = 0x50;\n        var_4ch = 0x11;\n        (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_50h);\n        uVar2 = fcn.004176c1(var_30h);\n        piVar3 = fcn.0042287e(0x48c284, uVar2);\n        if (piVar3 == NULL) {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_30h, 0xfffffff0);\n            uVar4 = uVar4 >> 0x1c & 1;\n        }\n        else {\n            uVar4 = (**(*piVar3 + 0x154))();\n        }\n        uVar5 = ~(var_48h >> 3) & 1;\n        if (uVar4 != uVar5) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_30h, -(uVar5 != 0) & 5);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 358
    },
    "00437507": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00437507(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint in_stack_fffffff4;\n    \n    if (param_2 != 0) goto code_r0x0043751d;\n    in_stack_fffffff4 = *(param_1 + 0x14);\n    arg_8h = 6;\n    while( true ) {\n        fcn.0042c11f(arg_8h, in_stack_fffffff4);\ncode_r0x0043751d:\n        if ((~*(param_1 + 0x18) & 1) != 0) break;\n        arg_8h = 1;\n    }\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.00411e87();\n    }\n    fcn.0043740e(0);\n    puVar2 = fcn.00427942(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.00428b23(0xffff);\n        fcn.004290a1(param_1);\n        fcn.004373fa();\n        puVar3 = fcn.00427942(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.00428b23(uVar1 | 0x8000);\n    }\n    else {\n        fcn.00428b23(0x7fff);\n        fcn.00428b5d(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0043778d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043778d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.0042c11f(2, in_stack_fffffff8);\n    }\n    fcn.0043740e(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.00428b23(0);\n    }\n    else {\n        puVar2 = fcn.00427942(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.00437507(uVar3);\n            fcn.004373fa();\n            puVar4 = fcn.00427942(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.00428b23(uVar1);\n        }\n        else {\n            fcn.00428b23(0x7fff);\n            fcn.00428b5d(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00438533": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438533(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x20), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &lpRect);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - lpRect;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x80) & 0x400) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x4a6138, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x4a6138, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x80) & 0x800) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x4a613c, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x4a613c, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "0043a390": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043a390(uint param_1, uint8_t param_2)\n\n{\n    fcn.00401438();\n    if ((param_2 & 1) != 0) {\n        fcn.0040dcf0(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 70
    },
    "00451bfb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00451bfb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49ed38, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043e09d();\n        *puVar2 = 0;\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4a8064)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4a80c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0044201d(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043e08a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043e09d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00451659(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00451ccd(0x49ed38);\n                goto code_r0x00451cc7;\n            }\n        }\n        puVar2 = fcn.0043e09d();\n        *puVar2 = 0;\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 9;\n        fcn.004461b3(0, 0, 0, 0, 0);\n    }\ncode_r0x00451cc7:\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 638
    },
    "0045229d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045229d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49ed58, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043e09d();\n        *puVar2 = 0;\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4a8064)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4a80c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0044201d(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043e08a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043e09d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00451cd7(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0045236f(0x49ed58);\n                goto code_r0x00452369;\n            }\n        }\n        puVar2 = fcn.0043e09d();\n        *puVar2 = 0;\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 9;\n        fcn.004461b3(0, 0, 0, 0, 0);\n    }\ncode_r0x00452369:\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 638
    },
    "004524b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004524b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49ed78, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0043e09d();\n        *puVar2 = 0;\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4a8064)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4a80c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0044201d(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0043e08a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0043e09d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0045243e(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00452582(0x49ed78);\n                goto code_r0x0045257c;\n            }\n        }\n        puVar2 = fcn.0043e09d();\n        *puVar2 = 0;\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 9;\n        fcn.004461b3(0, 0, 0, 0, 0);\n    }\ncode_r0x0045257c:\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 639
    },
    "0041e8e6": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e8e6(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.0041de18(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    uVar5 = fcn.0041e635(uVar5);\n                    iVar3 = *arg_18h;\ncode_r0x0041e9ae:\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                uVar5 = fcn.0041e635(uVar5);\n                iVar3 = *arg_18h;\n                goto code_r0x0041e9ae;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1185
    },
    "0042d72e": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d72e(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x20));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0040f434": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0040f434(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack124;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.0043c410(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x4899c4;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x4a6178 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iStack148, 1);\n        if (*0x4a6178 == 0) {\n            *0x4a6178 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.0043bb11(uVar3);\n        return;\n    }\n    fcn.0043cb83(&stack0xffffff54, 0x49af08);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 610
    },
    "0040f59e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040f59e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00414023();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 45
    },
    "004175b8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.004175b8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.00422f1d(0x40f89d);\n    if (iVar2 == 0) {\n        uStack16 = 0x4a15e8;\n        fcn.0043cb83(&uStack16, 0x49af08);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 225
    },
    "00418e45": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418e45(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.00415421();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x00418ec8:\n            uVar2 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar2;\n        }\n    }\n    else {\n        iVar1 = fcn.00422f1d(0x40f89d);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00411ea1();\n        }\n        if ((*(iVar1 + 0xdc) != in_ECX[8]) && (iVar1 = fcn.00418313(arg_ch, 0),  iVar1 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x00418ec8;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 385
    },
    "00426a36": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426a36(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t lptm;\n    int32_t var_84h;\n    int32_t var_5ch;\n    uint *var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint hdc;\n    int32_t var_40h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    var_54h = arg_18h;\n    hdc = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.0043c410(&var_40h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hdc, 0x5a, 0x48);\n    pcVar2 = _sym.imp.KERNEL32.DLL_MulDiv;\n    var_40h = (*_sym.imp.KERNEL32.DLL_MulDiv)(arg_ch, uVar4);\n    var_40h = -var_40h;\n    var_30h = 400;\n    var_29h._0_1_ = 1;\n    uVar4 = fcn.00441085(&var_24h, 0x20, arg_8h, 0xffffffff);\n    fcn.004013ac(uVar4);\n    var_4ch = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_40h);\n    pcVar3 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (var_4ch == 0) {\n        var_48h = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        var_48h = var_48h & 0xffff;\n        uVar5 = (*pcVar3)();\n        uVar5 = uVar5 >> 0x10;\n    }\n    else {\n        var_50h = (*_sym.imp.GDI32.dll_SelectObject)(hdc, var_4ch);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(hdc, &lptm);\n        uVar5 = var_84h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (hdc, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_5ch);\n        var_48h = (var_5ch + 0x1a) / 0x34;\n        (*pcVar1)(hdc, var_50h);\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_4ch);\n        arg_18h = var_54h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n    uVar4 = (*pcVar2)(arg_10h, var_48h, 4);\n    *arg_18h = uVar4;\n    uVar4 = (*pcVar2)(arg_14h, uVar5, 8);\n    arg_18h[1] = uVar4;\n    fcn.0043bb11(arg_10h);\n    return;\n}\n",
        "token_count": 806
    },
    "0042d1c9": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d1c9(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00422f1d(0x40f89d);\n        if (iVar3 == 0) {\n            fcn.00411ea1();\n        }\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.004176c1(arg_8h),  iVar4 == 0)) {\n            fcn.00418667(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x4a618c = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x4a6190 = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x4a6194 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x4a6198 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x4a619c = (*pcVar1)(\"commdlg_help\");\n            *0x4a61a0 = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.00410d44(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x4a619c) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (((0xbfff < arg_ch) && (piVar5 = fcn.004176c1(arg_8h),  piVar5 != NULL)) &&\n               ((iVar3 = fcn.00422866(0x48b5f0),  iVar3 == 0 ||\n                (iVar3 = fcn.004200b0(),  (*(iVar3 + 0x34) & 0x80000) == 0)))) {\n                if (arg_ch == *0x4a6190) {\n                    uVar2 = (**(*piVar5 + 0x15c))(arg_14h);\n                    return uVar2;\n                }\n                if (arg_ch == *0x4a6194) {\n                    piVar5[0x71] = arg_14h;\n                    uVar2 = (**(*piVar5 + 0x160))();\n                    piVar5[0x71] = 0;\n                    return uVar2;\n                }\n                if (arg_ch == *0x4a618c) {\n                    (**(*piVar5 + 0x164))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x4a6198) {\n                    uVar2 = (**(*piVar5 + 0x15c))();\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 817
    },
    "004359e3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004359e3(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xac) = arg_8h;\n        *(in_ECX + 0xb0) = arg_ch;\n        *(in_ECX + 0xa4) = arg_10h;\n        *(in_ECX + 0xa8) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x20), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        if (0x5ffff < *0x4a2380) {\n            uVar3 = (*pcVar1)(*(in_ECX + 0x20), 0x43a, 0, 0);\n            *(in_ECX + 0xac) = uVar3 & 0xffff;\n            *(in_ECX + 0xb0) = uVar3 >> 0x10;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "00435cfd": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435cfd(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    arg_ch_00 = 0x435d1c;\n    fcn.0043533f(arg_8h, &fcn.00435cfd::var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        arg_ch_00 = &fcn.00435cfd::var_18h;\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.00435b60(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.0043bb11(arg_ch_00);\n    return;\n}\n",
        "token_count": 270
    },
    "0043601a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043601a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043533f(arg_8h, &var_18h);\n    arg_ch_00 = 0x14;\n    uVar1 = fcn.0043bec7(&var_2ch, 0x14, &var_18h, 0x14);\n    fcn.004013ac(uVar1);\n    var_14h = arg_ch;\n    var_18h = arg_14h;\n    var_fh._0_1_ = arg_10h;\n    var_10h = arg_10h >> 0x10;\n    iVar2 = fcn.0043f802(&var_2ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        arg_ch_00 = &var_18h;\n        fcn.00435b60(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.0043bb11(arg_ch_00);\n    return;\n}\n",
        "token_count": 363
    },
    "004498a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.004498a0(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar9 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar9 ^ 0xffffffff ^ uVar9 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar8 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar8[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar8[2]) break;\n            pcVar1 = pcVar8 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar8 = pcVar8 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 923
    },
    "00412980": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412980(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (**0x4a3990)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.004013e8(arg_8h, arg_ch, 0x20, uVar1);\n        iVar2 = fcn.0043bec7(arg_8h + 0x40, 0x26, arg_ch + 0x20, 0x26);\n        if (iVar2 == 0) {\n            fcn.004013e8(arg_8h + 0x66, arg_ch + 0x46, 0x20, uVar1);\n            iVar2 = fcn.0043bec7(arg_8h + 0xa6, 0x36, arg_ch + 0x66, 0x36);\n            if ((iVar2 == 0) &&\n               ((*(arg_ch + 0x26) == 0 ||\n                (iVar2 = fcn.0043bec7(arg_8h + 0xdc, *(arg_ch + 0x26), arg_ch + 0x9c, *(arg_ch + 0x26)),  iVar2 == 0))))\n            {\n                *(arg_8h + 0x44) = 0xdc;\n                fcn.004013d4();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.004013d4();\n    return 0;\n}\n",
        "token_count": 365
    },
    "00412a3d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412a3d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (**0x4a3990)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.004010e6(arg_8h, arg_ch, 0x20, uVar1);\n        iVar2 = fcn.0043bec7(arg_8h + 0x20, 0x26, arg_ch + 0x40, 0x26);\n        if (iVar2 == 0) {\n            fcn.004010e6(arg_8h + 0x46, arg_ch + 0x66, 0x20, uVar1);\n            iVar2 = fcn.0043bec7(arg_8h + 0x66, 0x36, arg_ch + 0xa6, 0x36);\n            if ((iVar2 == 0) &&\n               ((*(arg_ch + 0x46) == 0 ||\n                (iVar2 = fcn.0043bec7(arg_8h + 0x9c, *(arg_ch + 0x46), arg_ch + 0xdc, *(arg_ch + 0x46)),  iVar2 == 0))))\n            {\n                *(arg_8h + 0x24) = 0x9c;\n                fcn.004013d4();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.004013d4();\n    return 0;\n}\n",
        "token_count": 369
    },
    "0041b8b3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0041b8b3(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x4c);\n    if (iVar3 != 0) {\n        puVar1 = iVar3 + 0x40;\n        var_4h = *(iVar3 + 0x44);\n        while (var_4h != 0) {\n            if (var_4h == 0) {\n                fcn.00411ea1(puVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            if (*(var_4h + 8) == arg_8h) {\n                return var_4h;\n            }\n            puVar1 = &var_4h;\n            fcn.0041b223();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00426b72": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00426b72(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 + 0x40;\n    param_1[1] = param_3;\n    if (param_3 <= uVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_GlobalAlloc)(0x40, uVar3);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.DLL_GlobalLock)(iVar1);\n            fcn.004125eb(uVar2, param_1[1], uVar3, param_1[1]);\n            iVar1 = fcn.0042685a(uVar2);\n            param_1[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(*param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "00419975": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00419975(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        iVar1 = fcn.004287b6(arg_10h, 0xffffffff);\n        if (iVar1 == 0) {\n            fcn.00411ea1();\n        }\n    }\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_ch = arg_10h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.004145d6();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.00419920();\n        iVar1 = fcn.00415c85(var_4h, var_8h, var_ch, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, var_28h, \n                             var_2ch, var_30h);\n        iVar2 = fcn.00417742();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 579
    },
    "0043ab1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ab1a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_30h;\n    \n    fcn.0043a98b(&var_30h, arg_8h, arg_ch);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x405, 0, &var_30h);\n    return;\n}\n",
        "token_count": 102
    },
    "0043ab7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ab7d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    \n    fcn.0043a98b(&var_30h, arg_8h, arg_ch);\n    uVar1 = fcn.0043bec7(&var_20h, 0x10, arg_10h, 0x10);\n    fcn.004013ac(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x406, 0, &var_30h);\n    return;\n}\n",
        "token_count": 165
    },
    "00436605": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00436605(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.004145d6();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (*_sym.imp.KERNEL32.DLL_FindResourceA)(uVar1, arg_8h, 0xf1);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.DLL_LoadResource)(uVar1, iVar2),  iVar2 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.DLL_LockResource)(iVar2),  iVar3 != 0)) {\n        arg_8h_00 = fcn.0040dcc5(*(iVar3 + 6) * 4);\n        iVar4 = 0;\n        if (*(iVar3 + 6) != 0) {\n            puVar5 = iVar3 + 8;\n            do {\n                *(arg_8h_00 + iVar4 * 4) = *puVar5;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar4 < *(iVar3 + 6));\n        }\n        iVar4 = fcn.00435201(arg_8h_00, *(iVar3 + 6));\n        fcn.0040dcf0(arg_8h_00);\n        if (iVar4 != 0) {\n            fcn.004359e3(*(iVar3 + 2) + 7, *(iVar3 + 4) + 7, *(iVar3 + 2), *(iVar3 + 4));\n            iVar4 = fcn.00435aff(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.DLL_FreeResource)(iVar2);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 467
    },
    "0043a9de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a9de(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x20), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if (var_20h - 0x200U < 10) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x20), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 361
    },
    "00422524": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00422524(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.DLL_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.DLL_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0042310f": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042310f(int32_t arg_8h, uint32_t lpPoint, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    while( true ) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x366, 0, lpPoint & 0xffff | arg_10h << 0x10);\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if (((uVar2 & 0x40000000) == 0) || (arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h),  arg_8h == 0)) break;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 267
    },
    "0042f0fb": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f0fb(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar3 = 8;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar4 = 4;\n    }\n    else {\n        uVar4 = 0;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar5 == 0) {\n        iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n    }\n    else {\n        do {\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            if (iVar5 == 0) {\n                return 0;\n            }\n        } while (iVar5 != iVar6);\n    }\n    return iVar7;\n}\n",
        "token_count": 420
    },
    "004353e8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004353e8(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043533f(arg_8h, &var_18h);\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 98
    },
    "00435509": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435509(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint unaff_ESI;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043533f(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_fh;\n    *arg_14h = var_18h;\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 191
    },
    "00434a45": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434a45(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint arg_10h;\n    uint uStack300;\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [80];\n    uchar auStack188 [180];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a2460 ^ auStack188;\n    iStack276 = param_2;\n    iStack272 = param_3;\n    if (param_1 != 0) goto code_r0x00434a82;\n    do {\n        fcn.00411ea1();\ncode_r0x00434a82:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), &stack0xfffffec4);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (iStack272 == 0) goto code_r0x00434cb3;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(&stack0xfffffec4, iStack272);\n        if (iVar2 != 0) goto code_r0x00434cb3;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041b6f2(auStack268, 0x104);\n        fcn.0042246c(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00437efe(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x8c) != param_1) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_2 + 0x20));\n        if (iVar2 != 0) {\n            fcn.0041b2f6(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack300 = 0xffffffff;\n    if (iStack272 == 0) {\n        fcn.0043a13f(*(param_1 + 0xa0), param_2);\n        fcn.0043a13f(*(param_1 + 0xa0), 0);\n        fcn.0041b2f6(0, -*0x4a6138, -*0x4a613c, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack292, iStack272);\n        fcn.0041df95(&iStack292);\n        uStack300 = fcn.00433f5c(iStack276, iStack292, iStack288, iStack284, iStack280, \n                                 (iStack284 - iStack292) / 2 + iStack292, (iStack280 - iStack288) / 2 + iStack288);\n        fcn.0041b2f6(0, iStack292, iStack288, iStack284 - iStack292, iStack280 - iStack288, 0x114);\n        param_2 = iStack276;\n    }\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.0041769a();\n    if (iVar2 != param_1) {\n        fcn.00433d45(param_1);\n    }\n    iVar2 = *(param_2 + 0x8c);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x00434c7e:\n        fcn.0043431a(param_2, uStack300, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x94) == 0) || (*(iVar2 + 0x94) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack300 = 0xffffffff;\n        goto code_r0x00434c7e;\n    }\n    *(param_2 + 0x8c) = param_1;\n    if (bVar1) {\n        fcn.0041b2f6(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.004342b3(param_2);\n    iVar2 = fcn.0042d75d();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x00434cb3:\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 1382
    },
    "00428fda": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428fda(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_4h;\n    int32_t iVar5;\n    \n    iVar5 = 0x14;\n    fcn.0043d8c8(0x14);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar3 = *(unaff_EBP + 0xc);\n    iVar4 = 0;\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        *(unaff_EBP + -4) = 0;\n        for (; *(unaff_EBP + -0x18) = iVar4,  iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            iVar5 = unaff_EBP + -0x11;\n            fcn.00428b96();\n            cVar2 = *(unaff_EBP + -0x11);\n            if (cVar2 == '\\n') {\ncode_r0x00429035:\n                if (*(unaff_EBP + 0xc) != iVar3) {\n                    *(iVar4 + iVar1) = cVar2;\n                    iVar4 = iVar4 + 1;\n                }\n                break;\n            }\n            if (cVar2 == '\\r') {\n                iVar5 = unaff_EBP + -0x11;\n                fcn.00428b96();\n                cVar2 = *(unaff_EBP + -0x11);\n                goto code_r0x00429035;\n            }\n            *(iVar4 + iVar1) = cVar2;\n        }\n        *(iVar4 + iVar1) = 0;\n    }\n    fcn.0043d96d(iVar5);\n    return;\n}\n",
        "token_count": 470
    },
    "004296b8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004296b8(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 237
    },
    "004396a2": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004396a2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    uint lprcDst;\n    int32_t lprcSrc1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcSrc2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h - *(in_ECX + 4);\n    iVar4 = arg_ch - *(in_ECX + 8);\n    iVar3 = *(in_ECX + 0x8c);\n    uVar5 = 2;\n    if (iVar3 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar2;\n    }\n    else {\n        if (iVar3 != 0xb) {\n            uVar5 = 0x22;\n            if (iVar3 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar4;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar4;\n            }\n            iVar3 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x004396fa;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar2;\n    }\n    iVar3 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x004396fa:\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x138))(&var_8h, iVar3, uVar5);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    lprcSrc1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4c);\n    var_24h = (*pcVar1)(0x4d);\n    var_20h = (*pcVar1)(0x4e);\n    var_20h = var_20h + lprcSrc1;\n    var_1ch = (*pcVar1)(0x4f);\n    var_1ch = var_1ch + var_24h;\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((*(in_ECX + 0x58) - *(in_ECX + 0x60)) - var_8h) + var_10h;\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.00439493(0);\n    return;\n}\n",
        "token_count": 1201
    },
    "0043a2e1": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043a2e1(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x0043a2f9;\n    uVar3 = fcn.00411ea1();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x0043a2f9:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 195
    },
    "0044236b": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0044236b(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x4a80c0) + 4 + (unaff_ESI & 0x1f) * 0x28;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004420bd();\n    return;\n}\n",
        "token_count": 155
    },
    "00466472": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00466472(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetThreadLocale)();\n    arg_8h = 0x1004;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetLocaleInfoA)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x004664c8;\n        }\n    }\n    (*_sym.imp.KERNEL32.DLL_GetACP)();\ncode_r0x004664c8:\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 310
    },
    "0040101e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040101e(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.00401212();\n        return;\n    }\n    if (param_2 != 0) goto code_r0x00404078;\n    do {\n        fcn.00401451();\n        param_2 = extraout_ECX;\ncode_r0x00404078:\n        iVar1 = *param_1;\n        uVar2 = *(iVar1 + -0xc);\n        uVar3 = param_2 - iVar1;\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.004010cd(param_3, unaff_EDI, unaff_EBP);\n            unaff_retaddr = param_2;\n        }\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        iVar1 = *param_1;\n        if (uVar2 < uVar3) {\n            fcn.0043bec7(iVar1, param_3, param_2, param_3);\n        }\n        else {\n            fcn.0043bf42(iVar1, param_3, iVar1 + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 470
    },
    "00401032": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00401032(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    \n    iVar3 = (*_sym.imp.KERNEL32.DLL_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar3 != 0) {\n        puVar4 = fcn.004011ae(param_2, iVar3, param_3);\n        if (puVar4 != NULL) {\n            uVar1 = *puVar4;\n            uVar5 = (**0x4a3990)();\n            iVar3 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(uVar5, 0, puVar4 + 1, uVar1, 0, 0, 0, 0);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar3) < 0) {\n                fcn.004010cd(iVar3);\n            }\n            uVar5 = (**0x4a3990)(0, puVar4 + 1, *puVar4, *param_1, iVar3, 0, 0);\n            (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(uVar5);\n            if ((-1 < iVar3) && (iVar3 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar3;\n                *(iVar3 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00401451(0x80070057);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 436
    },
    "0040104b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0040104b(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t *unaff_retaddr;\n    uchar *puStack120;\n    int32_t **ppiStack116;\n    uint uStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t **ppiStack96;\n    uint uStack92;\n    int32_t iStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint32_t uStack72;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar uStack40;\n    int32_t iStack32;\n    uchar uStack24;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47ead1;\n    iStack12 = *in_FS_OFFSET;\n    uStack72 = *0x4a2460 ^ &stack0xffffffbc;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iVar5 = 0;\n    uStack4 = 0;\n    uStack44 = 0;\n    iStack76 = 0x4065fc;\n    iStack48 = param_1;\n    piVar2 = fcn.0041bca8();\n    if (piVar2 == NULL) {\n        iStack76 = -0x7fffbffb;\n        iStack80 = 0x406611;\n        piVar2 = fcn.00401451();\n    }\n    iStack80 = 0x40661a;\n    iVar3 = (**(*piVar2 + 0xc))();\n    *unaff_retaddr = iVar3 + 0x10;\n    uStack8 = 0;\n    iStack48 = 1;\n    iStack80 = 0x406635;\n    piVar2 = fcn.0041bca8();\n    if (piVar2 == NULL) {\n        iStack80 = 0x80004005;\n        uStack84 = 0x40664a;\n        piVar2 = fcn.00401451();\n    }\n    iStack80 = 0x406653;\n    (**(*piVar2 + 0xc))();\n    uStack92 = *(param_1 + 0x94);\n    iStack80 = 0;\n    uStack84 = 0;\n    iStack88 = 0x18b;\n    uStack8 = 1;\n    ppiStack96 = 0x406672;\n    iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n    if (0 < iVar3) {\n        do {\n            ppiStack96 = &stack0xffffffb8;\n            iStack104 = 0x406692;\n            iStack100 = iVar5;\n            fcn.00411d24();\n            iStack104 = *(iStack80 + -0xc) + -2;\n            puStack108 = &stack0xffffffcc;\n            uStack112 = 0x4066ab;\n            uStack112 = fcn.004011b3();\n            ppiStack116 = 0x487970;\n            puStack52 = &stack0xffffff88;\n            uStack40 = 2;\n            iVar3 = fcn.00401190(iStack88 + -0x10);\n            puStack120 = iVar3 + 0x10;\n            uVar4 = fcn.00401325(&stack0xffffffc0);\n            uStack40 = 3;\n            puStack120 = fcn.00401285(&stack0xffffffbc, unaff_retaddr, uVar4);\n            uStack40 = 4;\n            ppiStack116 = fcn.00401415(&stack0xffffffb8);\n            puStack120 = &stack0xffffffb4;\n            uStack40 = 5;\n            uStack112 = fcn.00401285();\n            uStack40 = 6;\n            ppiStack116 = 0x406722;\n            fcn.004013bb();\n            ppiStack116 = iStack80 + -0x10;\n            uStack44._0_1_ = 5;\n            piVar2 = iStack80 + -4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 + -1 < 1) {\n                puStack120 = 0x406746;\n                (**(**ppiStack116 + 4))();\n            }\n            ppiStack116 = iStack76 + -0x10;\n            uStack44._0_1_ = 4;\n            piVar2 = iStack76 + -4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 + -1 < 1) {\n                puStack120 = 0x40676b;\n                (**(**ppiStack116 + 4))();\n            }\n            ppiStack116 = uStack72 - 0x10;\n            uStack44._0_1_ = 3;\n            piVar2 = uStack72 - 4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 + -1 < 1) {\n                puStack120 = 0x406790;\n                (**(**ppiStack116 + 4))();\n            }\n            ppiStack116 = unaff_EDI + -0x10;\n            uStack44._0_1_ = 2;\n            piVar2 = unaff_EDI + -4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 + -1 < 1) {\n                puStack120 = 0x4067b5;\n                (**(**ppiStack116 + 4))();\n            }\n            ppiStack116 = unaff_ESI + -0x10;\n            uStack44 = CONCAT31(uStack44._1_3_, 1);\n            piVar2 = unaff_ESI + -4;\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                puStack120 = 0x4067da;\n                (**(**ppiStack116 + 4))();\n            }\n            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n            ppiStack116 = NULL;\n            puStack120 = NULL;\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(iStack88 + 0x94), 0x18b);\n            if (iVar5 < iVar3 + -1) {\n                uVar4 = fcn.00401415(&stack0xffffffb4, unaff_retaddr, 0x4875c4);\n                fcn.004013bb(uVar4);\n                unaff_ESI = CONCAT31(unaff_ESI >> 8, 1);\n                piVar2 = iStack80 + -4;\n                LOCK();\n                iVar3 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n                if (iVar3 == 1 || iVar3 + -1 < 0) {\n                    (**(**(iStack80 + -0x10) + 4))(iStack80 + -0x10);\n                }\n            }\n            iVar5 = iVar5 + 1;\n            iVar3 = (*pcVar1)(*(iStack104 + 0x94), 0x18b, 0, 0);\n        } while (iVar5 < iVar3);\n    }\n    ppiStack96 = uStack72 - 0x10;\n    uStack24 = 0;\n    piVar2 = uStack72 - 4;\n    LOCK();\n    iVar5 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        iStack100 = 0x406888;\n        (**(**ppiStack96 + 4))();\n    }\n    *in_FS_OFFSET = iStack32;\n    return unaff_retaddr;\n}\n",
        "token_count": 1904
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401050(void)\n\n{\n    uint unaff_retaddr;\n    uint in_stack_000022f0;\n    uint in_stack_000022f4;\n    uint in_stack_000022f8;\n    uint in_stack_000022fc;\n    \n    fcn.0043c1d0();\n    fcn.00401145(in_stack_000022f0, *0x10);\n    fcn.004011ea(*0x10, in_stack_000022f4, in_stack_000022f8, in_stack_000022fc);\n    fcn.0043bb11(unaff_retaddr);\n    return;\n}\n",
        "token_count": 141
    },
    "0040108c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040108c(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00401451(0x80070057);\n    }\n    iVar2 = fcn.0043c6c4(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.004010cd(iVar2);\n    }\n    fcn.0043c8c7(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00401451(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 255
    },
    "00401096": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401096(int32_t *param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    \n    param_5 = param_3 + param_5;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - param_5) < 0) {\n        fcn.004010cd(param_5);\n    }\n    arg_8h = *param_1;\n    fcn.0043bec7(arg_8h, param_3, param_1, param_3);\n    fcn.0043bec7(arg_8h + param_3, param_4, param_3, param_4);\n    if ((-1 < param_5) && (param_5 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_5;\n        *(param_5 + *param_1) = 0;\n        return;\n    }\n    fcn.00401451(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 276
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.004010a0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_34h;\n    uint var_24h;\n    uchar var_1dh;\n    uint32_t var_1ch_2;\n    uint *var_18h_2;\n    int32_t var_10h_2;\n    uint uStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    uStack16 = 0x43d410;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x4a2460 ^ 0x49a620;\n    var_34h = *0x4a2460 ^ &stack0xfffffffc;\n    var_18h_2 = &var_34h;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    var_24h = 0;\n    var_1ch_2 = var_34h;\n    iVar1 = fcn.004013e3(&var_24h, var_8h_2, 0x2000);\n    if (iVar1 < 0) {\n        var_1dh = 0;\n    }\n    else {\n        fcn.0043d5b0();\n        var_18h_2 = &var_34h;\n    }\n    var_4h = 0xfffffffe;\n    *in_FS_OFFSET = var_10h_2;\n    fcn.0043bb11(var_24h);\n    return;\n}\n",
        "token_count": 407
    },
    "00401410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401410(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar2 = *param_1;\n    iVar3 = *(iVar2 + -0xc);\n    ppiVar6 = iVar2 + -0x10;\n    puVar4 = (**(**ppiVar6 + 0x10))();\n    iVar5 = (***puVar4)(param_2, 1);\n    if (iVar5 == 0) {\n        fcn.004012f3();\n    }\n    if (iVar3 < param_2) {\n        param_2 = iVar3;\n    }\n    fcn.0043bec7(iVar5 + 0x10, param_2 + 1, iVar2, param_2 + 1);\n    *(iVar5 + 4) = iVar3;\n    piVar1 = iVar2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar6 + 4))(ppiVar6);\n    }\n    *unaff_EBP = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 332
    },
    "004010f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004010f0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *unaff_EBX;\n    uint32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint uVar3;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x47e828;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a2460 ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &piStack12;\n    fcn.0040133e(param_2, 0, 0xffffffff, uVar1);\n    uVar3 = 0xffffffff;\n    uVar2 = fcn.00401334(unaff_retaddr, 0, 0xffffffff);\n    *0x18 = 0xf;\n    *0x14 = 0;\n    *0x4 = 0;\n    fcn.0040133e(uVar2, 0, 0xffffffff);\n    if (0xf < unaff_ESI) {\n        fcn.0040dcf0(uVar3);\n    }\n    *in_FS_OFFSET = unaff_EBX;\n    return 0;\n}\n",
        "token_count": 304
    },
    "004010ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004010ff(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (param_2 == 0) {\n        *param_1 = 0;\n        return;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.DLL_lstrlenW)(param_2);\n    iVar1 = iVar1 + 1;\n    fcn.0040120d(param_1, iVar1 * 4, param_1 + 1, 0x80);\n    uVar5 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(param_2, 0, param_2, iVar1, *param_1, iVar1 * 4, 0, 0);\n    bVar3 = iVar2 == 0;\n    if (bVar3) {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n        if (iVar2 == 0x7a) {\n            uVar4 = 0;\n            uVar5 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(uVar5, 0, param_2, iVar1, 0, 0, 0, 0);\n            fcn.0040120d(param_1, uVar5, param_1 + 1, 0x80);\n            iVar1 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(uVar4, 0, param_2, iVar1, *param_1, uVar5, 0, 0);\n            bVar3 = iVar1 == 0;\n        }\n        if (bVar3) {\n            fcn.00401005();\n        }\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00401104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401104(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    uint uVar4;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47ea58;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a2460 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (-1 < *(param_2 + -0xc)) {\n        iVar3 = fcn.0043c5c9(param_2, \"m_str\", uVar2);\n        if ((iVar3 != 0) && (iVar3 == param_2)) {\n            uVar4 = 0x48796c;\ncode_r0x00406435:\n            fcn.00401352(uVar4);\n            uStack8 = 0xffffffff;\n            piVar1 = param_2 + -4;\n            LOCK();\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n            }\n            *in_FS_OFFSET = NULL;\n            return param_1;\n        }\n        if (-1 < *(param_2 + -0xc)) {\n            iVar3 = fcn.0043c5c9(param_2, \"m_dt\");\n            if ((iVar3 != 0) && (iVar3 == param_2)) {\n                uVar4 = 0x487968;\n                goto code_r0x00406435;\n            }\n            if (-1 < *(param_2 + -0xc)) {\n                iVar3 = fcn.0043c5c9(param_2, 0x487574);\n                if ((iVar3 != 0) && (iVar3 == param_2)) {\n                    uVar4 = 0x487964;\n                    goto code_r0x00406435;\n                }\n                if (-1 < *(param_2 + -0xc)) {\n                    iVar3 = fcn.0043c5c9(param_2, 0x487570);\n                    if ((iVar3 != 0) && (iVar3 == param_2)) {\n                        uVar4 = 0x487960;\n                        goto code_r0x00406532;\n                    }\n                    if (-1 < *(param_2 + -0xc)) {\n                        iVar3 = fcn.0043c5c9(param_2, \"m_rgb\");\n                        if ((iVar3 != 0) && (iVar3 == param_2)) {\n                            uVar4 = 0x48795c;\n                            goto code_r0x00406532;\n                        }\n                        if (-1 < *(param_2 + -0xc)) {\n                            iVar3 = fcn.0043c5c9(param_2, 0x487564);\n                            if ((iVar3 != 0) && (iVar3 == param_2)) {\n                                uVar4 = 0x487958;\n                                goto code_r0x00406532;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    uVar4 = 0x4875c7;\ncode_r0x00406532:\n    fcn.00401352(uVar4);\n    fcn.0040144c();\n    *in_FS_OFFSET = NULL;\n    return param_1;\n}\n",
        "token_count": 808
    },
    "0040111d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040111d(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0041bca8();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401451(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 120
    },
    "00401127": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401127(uint *param_1, int32_t param_2)\n\n{\n    uint *extraout_ECX;\n    int32_t extraout_EDX;\n    \n    if (param_2 == 0) {\n        fcn.00401451(0x80004005);\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    fcn.0043cb70(*param_1, param_2);\n    return;\n}\n",
        "token_count": 111
    },
    "00401140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401140(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043c34d(param_2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401451(0x8007000e);\n    }\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "00401145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401145(int32_t param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar5 = 0;\n    do {\n        pcVar1 = param_1 + iVar5;\n        iVar5 = iVar5 + 1;\n    } while (*pcVar1 != '\\0');\n    iVar6 = 0;\n    iVar3 = 0;\n    do {\n        *(iVar3 + param_2) = iVar3;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x22e5);\n    iVar3 = 0;\n    do {\n        iVar4 = iVar3 + 1;\n        iVar6 = (*(iVar3 + param_2) + *(iVar3 % iVar5 + param_1) + iVar6) % 0x22e5;\n        uVar2 = *(iVar3 + param_2);\n        *(iVar3 + param_2) = *(iVar6 + param_2);\n        *(iVar6 + param_2) = uVar2;\n        iVar3 = iVar4;\n    } while (iVar4 < 0x22e5);\n    return 0;\n}\n",
        "token_count": 290
    },
    "0040114a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040114a(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401190(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "004011ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004011ae(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.DLL_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 280
    },
    "004011b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004011b3(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    iVar2 = *param_1;\n    iVar1 = *(iVar2 + -0xc);\n    if (iVar1 <= param_3) {\n        iVar2 = fcn.00401190(iVar2 + -0x10);\n        *param_2 = iVar2 + 0x10;\n        return param_2;\n    }\n    if (*(iVar2 + -0x10) != NULL) {\n        iVar2 = (**(**(iVar2 + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x004041e1;\n    }\n    piVar3 = fcn.0041bca8();\n    iVar2 = (**(*piVar3 + 0x10))();\ncode_r0x004041e1:\n    fcn.0040149c((*param_1 - param_3) + iVar1, param_3, iVar2);\n    return param_2;\n}\n",
        "token_count": 289
    },
    "004011ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.004011ea(int32_t param_1, int32_t param_2, uint8_t *param_3, uint8_t *param_4)\n\n{\n    uchar uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStack8;\n    \n    iStack8 = param_4;\n    iVar5 = 0;\n    iVar4 = 0;\n    if (param_4 != NULL) {\n        param_4 = param_3;\n        do {\n            iVar5 = (iVar5 + 1) % 0x22e5;\n            iVar4 = (*(iVar5 + param_1) + iVar4) % 0x22e5;\n            uVar1 = *(iVar5 + param_1);\n            *(iVar5 + param_1) = *(param_1 + iVar4);\n            *(param_1 + iVar4) = uVar1;\n            uVar2 = *((*(iVar5 + param_1) + *(param_1 + iVar4)) % 0x22e5 + param_1);\n            (*_sym.imp.USER32.dll_SendMessageA)(0, 0x36b, 0x1561a, 0);\n            iVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            if (iVar3 == 0) {\n                (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (0, L\"uytyDDzxsdEQdssgGGSDSds\", L\"FDSADFXssdsdfggGSDZCSDewd\", 0x800000, 0x36b, 0x377, 0xada7, \n                           0x104ac, 0, 0, 0, 0);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_InSendMessage)();\n                if (iVar3 != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageA)(0, 0x15623, 0x15605, 0);\n                }\n            }\n            *param_4 = (~uVar2 | ~param_4[param_2 - param_3]) & (uVar2 | param_4[param_2 - param_3]);\n            param_4 = param_4 + 1;\n            iStack8 = iStack8 + -1;\n        } while (iStack8 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 545
    },
    "00401221": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401221(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    uVar1 = *(param_1 + 0x18);\n    puVar4 = param_1 + 4;\n    puVar3 = puVar4;\n    if (0xf < uVar1) {\n        puVar3 = *puVar4;\n    }\n    if (puVar3 <= param_2) {\n        puVar3 = puVar4;\n        if (0xf < uVar1) {\n            puVar3 = *puVar4;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar1) {\n                puVar4 = *puVar4;\n            }\n            iVar2 = fcn.0040133e(param_1, param_2 - puVar4, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.00466333();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.004012d0(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *puVar4 = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        puVar3 = puVar4;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar3 = *puVar4;\n        }\n        fcn.0043bec7(puVar3, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *(puVar4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 534
    },
    "00401226": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401226(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.0040101e(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040101e(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 131
    },
    "00401280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401280(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.004011ae(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "00401285": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.00401285(int32_t *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47e649;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a2460 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar2 = (**(**(*param_2 + -0x10) + 0x10))(uVar1);\n        if (piVar2 != NULL) goto code_r0x004049e9;\n    }\n    piVar2 = fcn.0041bca8();\n    piVar2 = (**(*piVar2 + 0x10))();\ncode_r0x004049e9:\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401451(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    fcn.00401096(param_1, *param_2, *(*param_2 + -0xc), *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 380
    },
    "0040128f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040128f(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004663c4();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.0043bf42(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 371
    },
    "0040129e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040129e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x47e463;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x4a2460 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    ppiVar4 = *(param_1 + 0x130) + -0x10;\n    uStack4 = 1;\n    piVar1 = *(param_1 + 0x130) + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4, uVar3);\n    }\n    ppiVar4 = *(param_1 + 300) + -0x10;\n    piVar1 = *(param_1 + 300) + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = *(param_1 + 0x128) + -0x10;\n    piVar1 = *(param_1 + 0x128) + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = *(param_1 + 0x124) + -0x10;\n    piVar1 = *(param_1 + 0x124) + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = *(param_1 + 0x120) + -0x10;\n    piVar1 = *(param_1 + 0x120) + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    ppiVar4 = *(param_1 + 0x11c) + -0x10;\n    piVar1 = *(param_1 + 0x11c) + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    fcn.00411982();\n    uStack4 = uStack4 & 0xffffff00;\n    fcn.00411982();\n    uStack4 = 0xffffffff;\n    fcn.00410da0();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 791
    },
    "004012f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004012f8(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (-param_2 - 1U < 8) {\n        puVar1 = fcn.00401451(0x80070057);\n    }\n    else {\n        puVar1 = fcn.0043c34d(param_2 + 8);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n    }\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return puVar1 + 2;\n}\n",
        "token_count": 142
    },
    "00401325": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401325(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    char *pcVar4;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47e9f8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a2460 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (-1 < *(param_2 + -0xc)) {\n        iVar3 = fcn.0043c5c9(param_2, \"m_str\", uVar2);\n        if ((iVar3 != 0) && (iVar3 == param_2)) {\n            pcVar4 = \"CString\";\ncode_r0x00406025:\n            fcn.00401352(pcVar4);\n            uStack8 = 0xffffffff;\n            piVar1 = param_2 + -4;\n            LOCK();\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n            }\n            *in_FS_OFFSET = NULL;\n            return param_1;\n        }\n        if (-1 < *(param_2 + -0xc)) {\n            iVar3 = fcn.0043c5c9(param_2, \"m_dt\");\n            if ((iVar3 != 0) && (iVar3 == param_2)) {\n                pcVar4 = \"COleDateTime\";\n                goto code_r0x00406025;\n            }\n            if (-1 < *(param_2 + -0xc)) {\n                iVar3 = fcn.0043c5c9(param_2, 0x487574);\n                if ((iVar3 != 0) && (iVar3 == param_2)) {\n                    pcVar4 = 0x487938;\n                    goto code_r0x00406025;\n                }\n                if (-1 < *(param_2 + -0xc)) {\n                    iVar3 = fcn.0043c5c9(param_2, 0x487570);\n                    if ((iVar3 != 0) && (iVar3 == param_2)) {\n                        pcVar4 = \"double\";\n                        goto code_r0x00406122;\n                    }\n                    if (-1 < *(param_2 + -0xc)) {\n                        iVar3 = fcn.0043c5c9(param_2, \"m_rgb\");\n                        if ((iVar3 != 0) && (iVar3 == param_2)) {\n                            pcVar4 = \"COLORREF\";\n                            goto code_r0x00406122;\n                        }\n                        if (-1 < *(param_2 + -0xc)) {\n                            iVar3 = fcn.0043c5c9(param_2, 0x487564);\n                            if ((iVar3 != 0) && (iVar3 == param_2)) {\n                                pcVar4 = \"BOOL\";\n                                goto code_r0x00406122;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    pcVar4 = 0x4875c7;\ncode_r0x00406122:\n    fcn.00401352(pcVar4);\n    fcn.0040144c();\n    *in_FS_OFFSET = NULL;\n    return param_1;\n}\n",
        "token_count": 797
    },
    "00401334": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401334(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.004663c4();\n    }\n    param_3 = *(param_2 + 0x14) - param_3;\n    if (param_3 < param_4) {\n        param_4 = param_3;\n    }\n    uVar2 = *(param_1 + 0x14);\n    if ((-uVar2 - 1 <= param_4) || (uVar2 + param_4 < uVar2)) {\n        fcn.00466333();\n    }\n    if (param_4 != 0) {\n        uVar2 = *(param_1 + 0x14) + param_4;\n        if (uVar2 == 0xffffffff) {\n            fcn.00466333();\n        }\n        if (*(param_1 + 0x18) < uVar2) {\n            fcn.004012d0(uVar2, *(param_1 + 0x14));\n        }\n        else if (uVar2 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (0xf < *(param_1 + 0x18)) {\n                **(param_1 + 4) = 0;\n                return param_1;\n            }\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (uVar2 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar1 = param_1 + 4;\n            }\n            else {\n                iVar1 = *(param_1 + 4);\n            }\n            fcn.0043bec7(*(param_1 + 0x14) + iVar1, *(param_1 + 0x18) - *(param_1 + 0x14), param_2 + unaff_retaddr, \n                         param_4);\n            *(param_1 + 0x14) = uVar2;\n            if (0xf < *(param_1 + 0x18)) {\n                *(*(param_1 + 4) + uVar2) = 0;\n                return param_1;\n            }\n            *(param_1 + 4 + uVar2) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 633
    },
    "0040133e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040133e(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.004663c4();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.00466333();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.004012d0(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.0043bec7(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.0040128f(arg_14h + param_3, 0xffffffff);\n    fcn.0040128f(0, param_3);\n    return param_1;\n}\n",
        "token_count": 581
    },
    "00401352": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401352(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    char *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x47e9c8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a2460 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar3 = fcn.0041bca8(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401451(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack8 = 0;\n    if (unaff_retaddr == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        if ((unaff_retaddr & 0xffff0000) == 0) {\n            iVar4 = fcn.0041bbbd(unaff_retaddr & 0xffff);\n            if (iVar4 != 0) {\n                fcn.00401032(iVar4, unaff_retaddr & 0xffff);\n            }\n            goto code_r0x00405f84;\n        }\n        pcVar5 = unaff_retaddr;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (unaff_retaddr + 1);\n    }\n    fcn.0040101e(unaff_retaddr, iVar4);\ncode_r0x00405f84:\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 471
    },
    "004013b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004013b6(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401221(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 161
    },
    "004013e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004013e3(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    if (-param_2 - 1U < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 79
    },
    "00401415": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00401415(int32_t *param_1, int32_t *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x47e699;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a2460 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_2 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x00404adb;\n    }\n    piVar3 = fcn.0041bca8();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x00404adb:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401451(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.00401096(param_1, *param_2, *(*param_2 + -0xc), param_3, iVar4);\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 467
    },
    "00401433": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00401433(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_2 == NULL) {\n        fcn.0040101e(0, 0);\n        return param_1;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040101e(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00401456": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401456(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401451(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "0040149c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040149c(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    \n    if (param_4 == NULL) {\n        fcn.00401451(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if (unaff_retaddr != 0) goto code_r0x00403021;\n    if (param_2 == 0) goto code_r0x00403021;\n    do {\n        fcn.00401451();\n        param_4 = extraout_ECX_00;\ncode_r0x00403021:\n        iVar1 = (***param_4)(param_2, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004012f3();\n        }\n        *param_1 = iVar1 + 0x10;\n    } while ((param_2 < 0) || (*(iVar1 + 8) < param_2));\n    *(iVar1 + 4) = param_2;\n    *(param_2 + *param_1) = 0;\n    fcn.0043bec7(*param_1, param_2, unaff_retaddr, param_2);\n    return param_1;\n}\n",
        "token_count": 323
    },
    "004014a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004014a6(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0043ce5e(param_1, param_2, param_3);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "0040de54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040de54(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x4a11fc;\n    var_10h = param_1;\n    iVar1 = *0x4a11fc;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "0040e050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0040e050(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar3 = fcn.004145d6();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x4a43a0 != NULL) {\n            (**(**0x4a43a0 + 4))(1);\n            *0x4a43a0 = NULL;\n        }\n        if (*0x4a439c != NULL) {\n            (**(**0x4a439c + 4))(1);\n            *0x4a439c = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00422524(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.00422524(extraout_ECX[0x1d]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.DLL_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.DLL_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar3 = fcn.004145d6();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0043c1fb(extraout_ECX[0x14]);\n    fcn.0043c1fb(extraout_ECX[0x15]);\n    fcn.0043c1fb(extraout_ECX[0x18]);\n    fcn.0043c1fb(extraout_ECX[0x19]);\n    fcn.0043c1fb(extraout_ECX[0x1a]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[0xb] = NULL;\n    fcn.0040f6b8();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 778
    },
    "0040e408": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e408(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0043ddc9(param_1, param_2, param_3);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "0040ee42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040ee42(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043f802(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "0040ee5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0040ee5a(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0040ee69;\ncode_r0x0040ee64:\n    fcn.00411ea1();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x0040ee69:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x40ef62\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x40ef62)) {\n    case 0x40ee9a:\n        (*arg_14h)();\n        return 1;\n    case 0x40eea2:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x40eeaa:\n        arg_18h = arg_ch;\n        break;\n    case 0x40eeb5:\n        arg_18h = arg_ch;\n        goto code_r0x0040ef4e;\n    case 0x40eebd:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040ee64;\n    case 0x40eed1:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040ee64;\n    case 0x40eee2:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x0040ee64;\n    case 0x40eefa:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x0040ee64;\n    case 0x40ef12:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x0040ef21;\n        }\n        goto code_r0x0040ee64;\n    case 0x40ef2f:\n        goto code_r0x0040ef2f;\n    case 0x40ef43:\n        break;\n    case 0x40ef4b:\ncode_r0x0040ef4e:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x0040ef2f:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x0040ef21:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x0040ee64;\n}\n",
        "token_count": 969
    },
    "0040f681": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f681(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.00414023();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 198
    },
    "0040f7a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040f7a7(int32_t *param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint arg_14h;\n    \n    ppcVar1 = (**(*param_1 + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.00415371(ppcVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x0040f7dc:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.00415371(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x0040f7dc;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 354
    },
    "0040fdb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0040fdb7(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.00417f8a(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.00418296(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.004145d6();\n        iVar1 = fcn.0040e7b2();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0041afcf(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.00417f8a(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.00418296(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0041afcf();\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.004145d6();\n        iVar3 = fcn.0040e7b2();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.004239d6();\n            fcn.00423c47(1);\n        }\n    }\n    return unaff_retaddr < 0;\n}\n",
        "token_count": 557
    },
    "0040ffca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ffca(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x2c) != 0) {\n        fcn.00411ea1();\n    }\n    fcn.0043c410(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.00414023();\n    pcVar1 = _sym.imp.KERNEL32.DLL_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.DLL_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.DLL_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.00440f7c(arg_10h, arg_ch, 0x40feb2, &var_1ch, arg_8h | 4, in_ECX + 0x30);\n            *(in_ECX + 0x2c) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.DLL_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.DLL_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.DLL_SuspendThread)(*(in_ECX + 0x2c));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.DLL_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.DLL_WaitForSingleObject)(*(in_ECX + 0x2c), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x2c));\n            *(in_ECX + 0x2c) = 0;\n            goto code_r0x004100a9;\n        }\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x004100a9:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 622
    },
    "0041040e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041040e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.0040123f(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.0043bec7(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.00401249(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 185
    },
    "00410ca1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410ca1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004145d6();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00410cb5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.00410b46(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 145
    },
    "00411372": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411372(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.0043d8c8(0x3c);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.004145d6();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.004145d6();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041a942(0x10);\n    fcn.0041a942(0x7c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x0041155a;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 == 0) goto code_r0x0041155a;\n    uVar3 = fcn.0041bca8();\n    fcn.00401456(uVar3);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x18) = 0;\n    iVar4 = fcn.00426ea6(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n    bVar5 = iVar4 == 0;\n    if (*0x4a617c == 0) {\ncode_r0x00411458:\n        if (bVar5) {\ncode_r0x0041145c:\n            fcn.00426e26(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.00426d84(*(unaff_EBP + -0x18));\n            uVar3 = fcn.0042688f();\n            *(unaff_EBP + -0x14) = uVar3;\n            *(unaff_EBP + -4) = 1;\n            fcn.00426881();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.DLL_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n    }\n    else {\n        if (bVar5) goto code_r0x0041145c;\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        if (iVar4 != 0) {\n            iVar4 = fcn.00401127(iVar2, \"MS Shell Dlg\");\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                if (*(unaff_EBP + -0x18) == 8) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                goto code_r0x00411458;\n            }\n        }\n    }\n    extraout_ECX[0x11] = -1;\n    extraout_ECX[0xf] = extraout_ECX[0xf] | 0x10;\n    fcn.00419920(extraout_ECX);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(unaff_EBP + 0xc) + 0x20);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar3, fcn.00410d44, 0);\n    fcn.00401438();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(unaff_EBP + -0x28) != NULL) && ((**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48),  iVar2 != 0)) {\n        (**(*extraout_ECX + 300))(0);\n    }\n    iVar4 = fcn.00417742();\n    if (iVar4 == 0) {\n        (**(*extraout_ECX + 0x114))();\n    }\n    if ((iVar2 != 0) && ((*(extraout_ECX + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(*(unaff_EBP + -0x14));\n        (*_sym.imp.KERNEL32.DLL_GlobalFree)(*(unaff_EBP + -0x14));\n    }\ncode_r0x0041155a:\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 1394
    },
    "00411ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411ec0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00441085(param_1, param_2, param_3, param_4);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "00412594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412594(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint cb;\n    \n    cb = 0;\n    iVar1 = fcn.00412574(&cb, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(cb);\n    return uVar2;\n}\n",
        "token_count": 111
    },
    "004125eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004125eb(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0043bec7(param_1, param_2, param_3, param_4);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "0041260a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041260a(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004125cc(param_1, param_2, param_3, param_4);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "00412775": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412775(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.DLL_GlobalSize;\n    uVar3 = (*_sym.imp.KERNEL32.DLL_GlobalSize)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.DLL_GlobalAlloc)(0x2002, uVar3);\n        if (arg_8h != 0) {\ncode_r0x004127ae:\n            pcVar2 = _sym.imp.KERNEL32.DLL_GlobalLock;\n            uVar5 = (*_sym.imp.KERNEL32.DLL_GlobalLock)(arg_ch);\n            uVar6 = (*pcVar2)(arg_8h);\n            uVar5 = (*pcVar1)(arg_8h, uVar5, uVar3);\n            fcn.004125eb(uVar6, uVar5);\n            pcVar1 = _sym.imp.KERNEL32.DLL_GlobalUnlock;\n            (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar4 = (*pcVar1)(arg_8h);\n        if (uVar3 <= uVar4) goto code_r0x004127ae;\n    }\n    return 0;\n}\n",
        "token_count": 359
    },
    "00412b23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00412b23(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401451(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "00412b8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412b8e(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401451(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00401438();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00412bd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412bd7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    puVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n    iVar4 = (***puVar3)(arg_8h, 2);\n    if (iVar4 == 0) {\n        fcn.00412b6f();\n    }\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    fcn.00412555(iVar4 + 0x10, arg_8h + 1, iVar1, arg_8h + 1);\n    *(iVar4 + 4) = iVar2;\n    fcn.00401438();\n    *in_ECX = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 252
    },
    "00412c3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412c3f(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 2);\n        if (iVar2 != 0) goto code_r0x00412c6a;\n    }\n    iVar2 = fcn.00412b6f();\ncode_r0x00412c6a:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 174
    },
    "00412d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00412d0c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.004126bc(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00401212();\n    }\n    else {\n        uVar2 = fcn.0040123f(iVar1);\n        fcn.004011fe(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00401249(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 160
    },
    "00413167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00413167(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00412629(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00412b8e();\n    }\n    else {\n        uVar2 = fcn.00412ce2(iVar1);\n        fcn.0041264d(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.00412b48(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 162
    },
    "004131b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * fcn.004131b1(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    \n    puVar1 = fcn.00401280(param_1, param_2);\n    if (puVar1 != NULL) {\n        arg_ch = *puVar1;\n        arg_8h = fcn.00412ce2(arg_ch);\n        fcn.0041266d(arg_8h, arg_ch, puVar1 + 1, *puVar1);\n        fcn.00412b48(arg_ch);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 159
    },
    "00414161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00414161(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    fcn.00401352(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.004140df(unaff_EBP + -0x10);\n    fcn.00401438();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 1385
    },
    "004143a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004143a5(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    fcn.00401352(\"comdlg32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.004140df(unaff_EBP + -0x10);\n    fcn.00401438();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 407
    },
    "00414649": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414649(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.004145d6();\n    iVar2 = fcn.0040e7b2();\n    if (iVar2 == 0) {\n        uStack8 = 0x4a15e8;\n        fcn.0043cb83(&uStack8, 0x49af08);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00414954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414954(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0041470a();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.004412be(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x4a5bf0)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 420
    },
    "00415836": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00415836(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00411ea1();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 106
    },
    "00416251": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416251(int32_t param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint hWnd;\n    \n    if (param_3 == 0) {\n        iVar1 = fcn.004145d6();\n        param_3 = *(iVar1 + 0x10);\n    }\n    if (param_1 == 0) {\n        hWnd = 0;\n    }\n    else {\n        hWnd = *(param_1 + 0x20);\n    }\n    fcn.004109d0(hWnd, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 150
    },
    "00416fa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416fa3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043d8c8(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.00414023();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xf4))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 358
    },
    "0041702e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041702e(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041ae8a();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0040e447();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.004148e9(iVar5, 1);\n            fcn.00414954(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.004148e9(iVar5, 2);\n            fcn.00414954(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        lprcDst = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.0041b2f6(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1079
    },
    "004176c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004176c1(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00417626(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00411ea1();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "0041a2fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a2fc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.0043d8c8();\n    fcn.004145d6();\n    fcn.0040f299();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0043bb11(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 96
    },
    "0041a6e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a6e9(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00414023();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.004145d6();\n    var_1ch = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        puVar3 = fcn.0043e08a();\n        var_4h = *puVar3;\n        puVar3 = fcn.0043e08a();\n        *puVar3 = 0;\n        fcn.0043df89(iVar1, 0x60, 0x5f, \"Afx:%p:%x\", var_1ch);\n    }\n    else {\n        puVar3 = fcn.0043e08a();\n        var_4h = *puVar3;\n        puVar3 = fcn.0043e08a();\n        *puVar3 = 0;\n        fcn.0043df89(iVar1, 0x60, 0x5f, \"Afx:%p:%x:%p:%p:%p\", var_1ch);\n    }\n    piVar4 = fcn.0043e08a();\n    if (*piVar4 == 0) {\n        puVar3 = fcn.0043e08a();\n        *puVar3 = var_4h;\n    }\n    else {\n        puVar3 = fcn.0043e08a();\n        fcn.0040e3d3(*puVar3);\n    }\n    iVar2 = fcn.00415b5d(var_1ch, iVar1, &var_2ch);\n    if (iVar2 == 0) {\n        var_2ch = arg_8h;\n        var_28h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_18h = arg_14h;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_20h = 0;\n        var_24h = 0;\n        var_ch = 0;\n        var_8h = iVar1;\n        iVar2 = fcn.0041a65b(&var_2ch);\n        if (iVar2 == 0) {\n            fcn.0041d99f();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 681
    },
    "0041b23c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041b23c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00411ea1();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 104
    },
    "0041b8fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b8fc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    iVar1 = *(iVar1 + 0x44);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        piVar2 = *(iVar1 + 8);\n        if (piVar2[1] == 0) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = *(piVar2[1] + 0x24);\n        }\n        if ((iVar4 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar3)) break;\n        if ((piVar2[1] != 0) && (piVar2[1] == *(*(param_1 + 0x4c) + 0x70))) {\n            return iVar1;\n        }\n        fcn.0041b223();\n    }\n    return iVar1;\n}\n",
        "token_count": 298
    },
    "0041bb05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041bb05(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.004145d6();\n        puVar3 = fcn.00401280(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.DLL_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.00411ea1();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 247
    },
    "0041cc96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0041cc96(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_50h;\n    uint var_4h;\n    \n    fcn.0043d8fe(0x8c);\n    uVar5 = *(unaff_EBP + 0x1c);\n    iVar1 = **(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        puVar3 = fcn.0043e08a();\n        uVar2 = *puVar3;\n        puVar3 = fcn.0043e08a();\n        *puVar3 = 0;\n        fcn.0043df89(unaff_EBP + -0x90, 0x40, 0x3f, uVar5, *(unaff_EBP + 0xc));\n        piVar4 = fcn.0043e08a();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.0043e08a();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.0043e08a();\n            fcn.0040e3d3(*puVar3);\n        }\n        puVar3 = fcn.0043e08a();\n        uVar2 = *puVar3;\n        puVar3 = fcn.0043e08a();\n        *puVar3 = 0;\n        fcn.0043df89(unaff_EBP + -0x50, 0x40, 0x3f, uVar5, *(unaff_EBP + 0x14));\n        piVar4 = fcn.0043e08a();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.0043e08a();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.0043e08a();\n            fcn.0040e3d3(*puVar3);\n        }\n        uVar5 = fcn.0041bca8();\n        fcn.00401456(uVar5);\n        *(unaff_EBP + -4) = 0;\n        fcn.0042c312(unaff_EBP + -0x94, *(unaff_EBP + 0x20), unaff_EBP + -0x90, unaff_EBP + -0x50);\n        fcn.00410ca1(*(unaff_EBP + -0x94), 0x30, *(unaff_EBP + 0x20));\n        fcn.00401212();\n        fcn.0041c5c1();\n        fcn.00401438();\n    }\n    fcn.0043d981();\n    return;\n}\n",
        "token_count": 742
    },
    "0041dc9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dc9b(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0043c410(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 117
    },
    "0041f993": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041f993(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.0041f94d(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x14) + 0x76c;\n    }\n    return iVar1;\n}\n",
        "token_count": 97
    },
    "0041f9b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041f9b3(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.0041f94d(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x10) + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 96
    },
    "0041f9cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041f9cf(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.0041f94d(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(iVar1 + 0xc);\n    }\n    return uVar2;\n}\n",
        "token_count": 97
    },
    "0041f9ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041f9ea(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.0041f94d(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 97
    },
    "0041fa06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041fa06(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.0041f94d(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 96
    },
    "0041fa22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041fa22(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    puVar1 = fcn.0041f94d(auStack36);\n    if (puVar1 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "004200f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004200f3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00441b86(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 143
    },
    "00420121": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420121(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00441da7(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 107
    },
    "0042125c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042125c(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.0043d8c8();\n    *extraout_ECX = vtable.CStdioFile.0;\n    if ((extraout_ECX[4] != NULL) && (extraout_ECX[2] != NULL)) {\n        fcn.004211e7();\n    }\n    fcn.00425fcf();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0043bb11(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 147
    },
    "0042153b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042153b(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.0043c1fb(*(param_1 + 0x54));\n    uVar1 = fcn.0043e240(param_2);\n    *(param_1 + 0x54) = uVar1;\n    fcn.0043c1fb(*(param_1 + 0x68));\n    uVar1 = fcn.0043e240(*(param_1 + 0x50));\n    *(param_1 + 0x68) = uVar1;\n    return;\n}\n",
        "token_count": 144
    },
    "00421b7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421b7a(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00443333(param_1, param_2, param_3);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 71
    },
    "0042246c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042246c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00422491;\n    do {\n        fcn.00411ea1();\ncode_r0x00422491:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.0043c410(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.DLL_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x004224f1;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x004224f1:\n    fcn.0043bb11(unaff_EBX);\n    return;\n}\n",
        "token_count": 349
    },
    "004225a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004225a4(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        fcn.00411ea1();\n    }\n    arg_8h_00 = &var_104h;\n    iVar1 = fcn.0041bb05(arg_8h, arg_8h_00, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00441484(&var_104h, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.004438fd(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (*_sym.imp.KERNEL32.DLL_MulDiv)(uVar3, *0x4a6144, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        uVar3 = fcn.00441085(arg_ch + 7, 0x20, &var_104h, 0xffffffff);\n        fcn.004013ac(uVar3);\n    }\n    fcn.0043bb11(arg_8h_00);\n    return;\n}\n",
        "token_count": 339
    },
    "00422ce4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.00422ce4(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.0043d8c8(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00422e0b;\n    ppcVar1 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.00422910(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.00422a8d(ppcVar1);\ncode_r0x00422d3b:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.00401357(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.DLL_LocalAlloc)(0, uVar2);\n        }\n        else {\n            uVar2 = fcn.00401357(extraout_ECX[3], 4, 2);\n            pcVar3 = (*_sym.imp.KERNEL32.DLL_LocalReAlloc)(ppcVar1[3], uVar2);\n        }\n        if (pcVar3 == NULL) {\n            (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.00411e6d();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.0043c410(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.DLL_TlsSetValue)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00422d3b;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x00422e0b:\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(puVar5);\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 888
    },
    "00423082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423082(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004145d6();\n    (*_sym.imp.KERNEL32.DLL_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 58
    },
    "0042317d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0042317d(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 0x16) {\n        iVar1 = param_1 + 0x40000;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 74
    },
    "004238b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004238b9(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.00411ea1();\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(param_1 * 0x18 + 0x4a5f30);\n    return;\n}\n",
        "token_count": 80
    },
    "00423e21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00423e21(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0x7fffffff - param_2 < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 80
    },
    "00423ea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n\nvoid __cdecl fcn.00423ea4(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint phkResult;\n    uint lpName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0043e240(arg_8h);\n    if (arg_8h_00 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(arg_8h_00);\n        puVar2 = iVar1 + arg_8h_00;\n        while (puVar2 != NULL) {\n            *puVar2 = 0;\n            fcn.00443a97(arg_8h_00, puVar2);\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, arg_8h_00, &phkResult);\n            if (iVar1 != 0) break;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(phkResult, 0, &lpName, 0x105);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if (iVar1 == 0) break;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000000, arg_8h_00);\n            puVar2 = fcn.004439ed(arg_8h_00, 0x5c);\n        }\n        fcn.0043c1fb(arg_8h_00);\n    }\n    fcn.0043bb11(phkResult);\n    return;\n}\n",
        "token_count": 408
    },
    "0042440d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042440d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00423e21(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401451(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 93
    },
    "00424454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00424454(int32_t *param_1, uchar param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.00441484(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 118
    },
    "00425f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425f8c(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040123f(0x104);\n    fcn.0043c410(uVar1, 0, 0x104);\n    fcn.00411ec0(uVar1, 0x104, unaff_retaddr, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.004103cf(0xffffffff);\n    return;\n}\n",
        "token_count": 125
    },
    "004264c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004264c9(uint arg_8h, uint *arg_ch)\n\n{\n    uint unaff_ESI;\n    uint var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043df50(&var_104h, 0x100, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), \n                 *(arg_ch + 6), *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), \n                 *(arg_ch + 0xd), *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.00401352(&var_104h);\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 240
    },
    "004265cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004265cd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    uVar2 = *(unaff_EBP + 8);\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.004264c9(unaff_EBP + -0x10, uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0041bca8();\n    fcn.00401456(uVar2);\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.00425edc(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 == 0) {\n        fcn.00401438();\n        fcn.00401438();\n    }\n    else {\n        iVar3 = fcn.00415d34(*(unaff_EBP + 0x10));\n        if ((iVar3 != 0) &&\n           (pcVar4 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar3, \"DllGetClassObject\"),  pcVar4 != NULL)) {\n            (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n        }\n        fcn.00401438();\n        fcn.00401438();\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 428
    },
    "004268c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004268c6(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 251
    },
    "00426a17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426a17(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0043bf42(param_1, param_2, param_3, param_4);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "004275a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004275a9(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.004273be(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042746c(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00427523();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "00427942": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00427942(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00427754(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.004276b6(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.004278f4();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 215
    },
    "00427cc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n\nvoid fcn.00427cc1(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.0043d895(0xc);\n    fcn.004145d6();\n    fcn.0042384c(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.0042556d(unaff_EBP + -0x10, 0x487dfc, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.004145d6();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.0042556d(unaff_EBP + -0x18, 0x487dfc, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.004013bb(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.00401438();\n    }\n    fcn.00401212();\n    fcn.004238b9(1);\n    fcn.00401438();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 416
    },
    "00427f51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00427f51(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00427ecf(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00411ea1();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "004298ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004298ff(uint param_1)\n\n{\n    fcn.0043c410(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 38
    },
    "00429c95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00429c95(int16_t *vtime, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint wVerMinor;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00401451(0x80004005);\n    }\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(vtime, arg_ch);\n    fcn.0043c410(&wVerMinor, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg_ch, &wVerMinor),  iVar1 != 0)) &&\n         (*vtime == wVerMinor)) && ((vtime[1] == wVerMinor._2_2_ && (vtime[3] == var_ah)))) &&\n       ((vtime[4] == var_ah._2_2_ && ((vtime[5] == var_6h && (vtime[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "00429f75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429f75(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.0043c410(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.00429c95(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 244
    },
    "0042a038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a038(uint psa, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_4h);\n    fcn.0042933b(uVar1);\n    fcn.004125eb(var_4h, arg_10h, arg_ch, arg_10h);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n    fcn.0042933b(uVar1);\n    return;\n}\n",
        "token_count": 146
    },
    "0042a9c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a9c9(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0043d895(0);\n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantInit;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*pcVar1)(arg_8h_00);\n    fcn.00428b5d(uVar2);\n    iVar3 = (*pcVar1)(arg_8h_00);\n    if (iVar3 != 0) {\n        iVar3 = (*pcVar1)(arg_8h_00);\n        fcn.00428e9d(arg_8h_00, iVar3 * 2);\n    }\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h_00);\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 278
    },
    "0042aa76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042aa76(uint32_t *param_1, int32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[2];\n    iVar4 = 2;\n    param_2[1] = 0;\n    *param_2 = 0;\n    param_2[2] = 0;\n    if ((((uVar1 != 2) && (param_3[2] != 2)) && (iVar4 = 1,  uVar1 != 1)) && (param_3[2] != 1)) {\n        uVar3 = param_3[1] + param_1[1] + CARRY4(*param_3, *param_1);\n        uVar1 = param_1[1];\n        *param_2 = *param_3 + *param_1;\n        uVar2 = param_3[1];\n        param_2[1] = uVar3;\n        if (((uVar2 ^ uVar1) & 0x80000000) != 0) {\n            return;\n        }\n        if (((uVar3 ^ uVar1) & 0x80000000) == 0) {\n            return;\n        }\n    }\n    param_2[2] = iVar4;\n    return;\n}\n",
        "token_count": 326
    },
    "0042afc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0042afc7(uchar *arg_8h, uint pdateOut, uint lcid)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    ulong *in_ECX;\n    uchar *puStack36;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    puStack36 = 0x42afe2;\n    arg_8h_00 = (**0x4a3990)();\n    var_8h = 0;\n    if (arg_8h == NULL) {\n        arg_8h = 0x4875c7;\n    }\n    puVar3 = &stack0xffffffdc;\n    puStack36 = arg_8h;\n    var_ch = (*_sym.imp.KERNEL32.DLL_lstrlenA)();\n    var_ch = var_ch + 1;\n    iVar2 = fcn.004013a2(&fcn.0042afc7::var_ch, var_ch, 2);\n    iVar4 = var_ch;\n    if (iVar2 < 0) {\ncode_r0x0042b04c:\n        *(in_ECX + 1) = 1;\n        *in_ECX = 0;\n    }\n    else {\n        if ((var_ch < 0x401) && (cVar1 = fcn.004010a0(var_ch),  cVar1 != '\\0')) {\n            fcn.0043d5b0();\n        }\n        else {\n            puVar3 = fcn.004012f8(iVar4);\n        }\n        puStack36 = puVar3;\n        iVar4 = fcn.004013e8();\n        if (iVar4 == 0) goto code_r0x0042b04c;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VarDateFromDisp)(iVar4, lcid, pdateOut);\n        if (-1 < iVar4) {\n            *(in_ECX + 1) = 0;\ncode_r0x0042b0a6:\n            fcn.004013d4();\n            goto code_r0x0042b061;\n        }\n        if (iVar4 == -0x7ffdfffb) goto code_r0x0042b04c;\n        *in_ECX = *0x48c060;\n        *(in_ECX + 1) = 1;\n        if (iVar4 != -0x7ffdfff6) goto code_r0x0042b0a6;\n    }\n    fcn.004013d4();\ncode_r0x0042b061:\n    fcn.0043bb11(arg_8h_00);\n    return;\n}\n",
        "token_count": 673
    },
    "0042b2db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0042b2db(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint16_t *puVar8;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0043d934(0x30);\n    puVar8 = *(unaff_EBP + 0xc);\n    uVar6 = *(unaff_EBP + 8);\n    uVar2 = *puVar8;\n    *(unaff_EBP + -0x28) = uVar6;\n    *(unaff_EBP + -0x30) = puVar8;\n    if (uVar2 != 0) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar8);\n    }\n    fcn.00428c1d(puVar8);\n    if ((*puVar8 & 0x6000) != 0) goto code_r0x0042b3dd;\n    // switch table (22 cases) at 0x42b4eb\n    switch(*puVar8) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        fcn.00428c1d(puVar8 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar8 = puVar8 + 4;\n        goto code_r0x0042b34c;\n    case 4:\n        fcn.0042a8e0(puVar8 + 4);\n        break;\n    case 5:\n    case 7:\n        fcn.0042a922(puVar8 + 4);\n        break;\n    case 6:\n        fcn.00428c60(puVar8 + 4);\n        puVar8 = puVar8 + 6;\ncode_r0x0042b34c:\n        fcn.0042a964(puVar8);\n        break;\n    case 8:\n        fcn.00428c60(unaff_EBP + -0x28);\n        if (*(unaff_EBP + -0x28) == 0) {\n            *(puVar8 + 4) = 0;\n        }\n        else {\n            iVar7 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, *(unaff_EBP + -0x28));\n            *(puVar8 + 4) = iVar7;\n            if (iVar7 == 0) {\n                iVar7 = fcn.00411e6d();\n            }\n            fcn.00429f10(iVar7, *(unaff_EBP + -0x28));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x2c) = 0;\n        fcn.00430f57(uVar6);\n        fcn.00428c60(unaff_EBP + -0x24);\n        fcn.00428c1d(unaff_EBP + -0x20);\n        fcn.00428c1d(unaff_EBP + -0x1e);\n        fcn.00429f10(unaff_EBP + -0x1c, 8);\n        pcVar5 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar6 = 0x493348;\n        if (*puVar8 != 0xd) {\n            uVar6 = 0x491728;\n        }\n        puVar1 = puVar8 + 4;\n        iVar7 = (*_sym.imp.ole32.dll_CoCreateInstance)(unaff_EBP + -0x24, 0, 0x17, uVar6, puVar1);\n        if (iVar7 == -0x7ff8ffa9) {\n            uVar6 = 0x493348;\n            if (*puVar8 != 0xd) {\n                uVar6 = 0x491728;\n            }\n            iVar7 = (*pcVar5)(unaff_EBP + -0x24, 0, 7, uVar6, puVar1);\n        }\n        fcn.0042933b(iVar7);\n        puVar3 = *puVar1;\n        ppcVar4 = *puVar3;\n        *(unaff_EBP + -4) = 0;\n        iVar7 = (**ppcVar4)(puVar3, 0x4937e8, unaff_EBP + -0x2c);\n        if (iVar7 < 0) {\n            iVar7 = (****puVar1)(*puVar1, 0x493a48, unaff_EBP + -0x2c);\n        }\n        fcn.0042933b(iVar7);\n        uVar6 = (**(**(unaff_EBP + -0x2c) + 0x14))(*(unaff_EBP + -0x2c), unaff_EBP + -0x38);\n        fcn.0042933b(uVar6);\n        iVar7 = **(unaff_EBP + -0x2c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(iVar7 + 8))(*(unaff_EBP + -0x2c));\n        break;\n    case 0x10:\n    case 0x11:\n        fcn.00428b96(puVar8 + 4);\n        break;\n    case 0x13:\n        fcn.00428c60(puVar8 + 4);\n        break;\n    case 0x14:\n        fcn.0042a898(puVar8 + 4);\n        break;\n    case 0x15:\n        fcn.00428bd5(puVar8 + 4);\n    }\ncode_r0x0042b3dd:\n    fcn.0043d990();\n    return;\n}\n",
        "token_count": 1477
    },
    "0042b8a6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042b8a6(uint arg_8h, uint pcyOut, uint lcid)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    \n    puVar1 = fcn.00413684(arg_8h);\n    arg_8h_00 = (*_sym.imp.OLEAUT32.dll_VarCyFromDisp)(*puVar1, lcid, pcyOut);\n    fcn.00401438();\n    uVar2 = 0;\n    if (arg_8h_00 < 0) {\n        if (arg_8h_00 == -0x7ffdfffb) {\n            in_ECX[1] = 0;\n        }\n        else {\n            if (arg_8h_00 != -0x7ffdfff6) {\n                if (arg_8h_00 == -0x7ff8fff2) {\n                    fcn.00411e6d();\n                }\n                uVar2 = fcn.004126d8(arg_8h_00);\n                goto code_r0x0042b917;\n            }\n            in_ECX[1] = 0x80000000;\n        }\n        *in_ECX = 0;\n        in_ECX[2] = 1;\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0042b917:\n        in_ECX[2] = uVar2;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 346
    },
    "0042c2a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042c2a4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    uVar1 = fcn.0041bca8();\n    fcn.00401456(uVar1);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.004012b7(*(unaff_EBP + 0xc));\n    if (iVar2 != 0) {\n        fcn.0042c162(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.00401438();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 260
    },
    "0042c901": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c901(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 207
    },
    "0042c94d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c94d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0042c901(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.0042c901(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.0042c901(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.0042c901(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 201
    },
    "0042cab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042cab8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint var_40h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    fcn.0043c410(&var_40h, 0, 0x3c);\n    var_40h = arg_8h;\n    var_29h._0_1_ = 1;\n    uVar1 = fcn.00441085(&var_24h, 0x20, arg_ch, 0xffffffff);\n    fcn.004013ac(uVar1);\n    fcn.0042c9b7(&var_40h, arg_10h);\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 228
    },
    "0042cb73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042cb73(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x42cd7f\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x0042cca7;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x0042cca7;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x0042cca7;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x0042cca7:\n                return 5;\n            case 0xb:\ncode_r0x0042cca7:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x0042cca7:\n                return 10;\n            default:\n                goto code_r0x0042cca7;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x42cde3\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x0042cca7;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x0042cca7;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x0042cca7;\n            case 0x3c:\n                goto code_r0x0042cca7;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0042cbee:\n        if (iVar1 == 1) {\ncode_r0x0042cca7:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x0042cca7:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0042cbee;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x0042cca7:\n            return 3;\n        }\n    }\ncode_r0x0042cca7:\n    return 1;\n}\n",
        "token_count": 1734
    },
    "0042d7b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d7b6(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004412be(param_1, param_2, param_3, param_4);\n    fcn.004013ac(uVar1);\n    return;\n}\n",
        "token_count": 81
    },
    "0042d800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d800(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x0042d813;\n    do {\n        fcn.00411ea1();\n        iVar4 = unaff_EDI;\ncode_r0x0042d813:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.0040dcf0(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.0040dcc5(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.0043c410(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x0042d92f;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.0043c410(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0042d92f;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.0040dcc5(arg_8h << 2, iVar4);\n    fcn.004125eb(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0043c410(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.0040dcf0(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0042d92f:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 831
    },
    "0042db8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042db8b(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00414023();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 127
    },
    "0042f715": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f715(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h == 0) || ((*(in_ECX + 0xf) & 4) == 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar4 = fcn.0041769a(uVar3);\n        if (iVar4 != 0) {\n            arg_8h = 0;\n            (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(*(iVar4 + 0x20), &arg_8h);\n            iVar4 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcessId)();\n            if (iVar4 == arg_8h) {\n                return;\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (iVar2 == 0) {\n            if (in_ECX[0x2e] == 0) {\n                in_ECX[0xf] = in_ECX[0xf] | 0x80;\n                (**(*in_ECX + 0xf8))();\n            }\n        }\n        else {\n            if (in_ECX[0xf] < '\\0') {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffff7f;\n                (**(*in_ECX + 0xfc))();\n                arg_8h = in_ECX[8];\n                iVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n                if (iVar4 == arg_8h) {\n                    (*pcVar1)(arg_8h, 6, 1, 0);\n                }\n            }\n            if ((*(in_ECX + 0xf) & 0x20) != 0) {\n                (*pcVar1)(in_ECX[8], 0x86, 1, 0);\n            }\n        }\n        fcn.0042de64((-(iVar2 != 0) & 0xfffffff0) + 0x20);\n    }\n    else {\n        fcn.0041b00b(0);\n        (*_sym.imp.USER32.dll_SetFocus)(0);\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "0042f909": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f909(uint param_1)\n\n{\n    fcn.004145d6();\n    fcn.0040e7b2();\n    fcn.00422a8d(param_1);\n    return;\n}\n",
        "token_count": 54
    },
    "0042f926": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f926(uint param_1)\n\n{\n    fcn.004145d6();\n    fcn.0040e7b2();\n    fcn.00422aa6(param_1);\n    return;\n}\n",
        "token_count": 53
    },
    "00430627": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00430627(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.0043d8fe(0x28);\n    iVar1 = *(unaff_EBP + 8);\n    uVar2 = fcn.0041bca8();\n    fcn.00401456(uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0041ae8a();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.00424705(extraout_ECX + 0xc4);\n        if (iVar1 != 0) {\n            fcn.0041045d(0x48c918);\n            fcn.0041045d(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.0043df50(unaff_EBP + -0x30, 0x20, 0x48c91c, *(extraout_ECX + 0x58));\n                fcn.0041045d(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            fcn.0041045d(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.0043df50(unaff_EBP + -0x30, 0x20, 0x48c91c, *(extraout_ECX + 0x58));\n                fcn.0041045d(unaff_EBP + -0x30);\n            }\n            fcn.0041045d(0x48c918);\n        }\n        fcn.00424705(extraout_ECX + 0xc4);\n    }\n    fcn.0042246c(*(extraout_ECX + 0x20), *(unaff_EBP + -0x34));\n    fcn.00401438();\n    fcn.0043d981();\n    return;\n}\n",
        "token_count": 520
    },
    "004307f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004307f4(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 50
    },
    "00430845": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430845(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 49
    },
    "0043101d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043101d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00431033;\n    do {\n        fcn.00411ea1();\ncode_r0x00431033:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.0040dcf0(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00431137;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.0040dcc5(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.0043c410(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0043109f:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.0043c410(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0043109f;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x004310d1:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x004310d1;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.0040dcc5(arg_8h << 2);\n    fcn.004125eb(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0043c410(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.0040dcf0(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00431137:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 775
    },
    "0043122c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043122c(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0043101d(iVar1 + arg_10h, 0xffffffff);\n            fcn.00426a17(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.0043c410(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0043101d(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00411ea1();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 390
    },
    "0043184e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043184e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    \n    fcn.0043c410(&var_34h, 0, 0x34);\n    var_2ch = arg_ch;\n    var_1ch = arg_14h;\n    var_20h = arg_10h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x102d, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 167
    },
    "00431893": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431893(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_14h;\n    \n    fcn.0043c410(&var_34h, 0, 0x34);\n    var_30h = arg_8h;\n    var_34h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1005, 0, &var_34h);\n    return var_14h;\n}\n",
        "token_count": 134
    },
    "00433c47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433c47(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 107
    },
    "00433eb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433eb3(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    (**(*in_ECX + 0x140))(&var_10h, in_ECX[0x20] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 189
    },
    "00433f3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00433f3d(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00433cc1(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 59
    },
    "00433f5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00433f5c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (in_ECX != 0) goto code_r0x00433f72;\n    do {\n        iVar1 = fcn.00411ea1();\ncode_r0x00433f72:\n    } while (arg_8h == iVar1);\n    uVar4 = *(in_ECX + 0x80) & 0xa000;\n    var_10h = iVar1;\n    var_ch = iVar1;\n    var_8h = iVar1;\n    var_4h = iVar1;\n    if (*(in_ECX + 0xa0) != iVar1 && iVar1 <= *(in_ECX + 0xa0)) {\n        do {\n            iVar1 = var_4h;\n            piVar2 = fcn.00433f3d();\n            if ((piVar2 == NULL) || (iVar3 = (**(*piVar2 + 0x154))(),  iVar3 == 0)) {\n                var_10h = var_10h + (var_8h - *0x4a613c);\n                var_8h = 0;\n                iVar1 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar1 = arg_1ch;\n                }\n                if (iVar1 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.0043a16f(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x0043406e;\n                }\ncode_r0x0043403d:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar2[8], &lpRect, iVar1);\n                fcn.0041df95(&lpRect);\n                if (uVar4 == 0) {\n                    iVar1 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar1 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar1) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar1 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar1 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar1 < 0) goto code_r0x0043403d;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0xa0));\n        iVar1 = 0;\n    }\n    iVar3 = var_ch + 1;\n    fcn.0043a16f(iVar3, iVar1, 1);\ncode_r0x0043406e:\n    fcn.0043a16f(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 944
    },
    "004341e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004341e2(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 4;\n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x28];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar4 = iVar3;\n            iVar2 = fcn.00433f3d();\n            if ((iVar2 != 0) && (*(iVar2 + 0x8c) == extraout_ECX)) {\n                *(iVar2 + 0x8c) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x28]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00439f50(iVar4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00438295();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 326
    },
    "00435201": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435201(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.0043c410(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x0043532e;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.0041ae8a();\n                    if (((uVar2 & 0x800) == 0) && (*0x4a2380 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = var_20h;\n                    var_20h = var_20h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x0043532e;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1d] = iVar1;\n    in_ECX[0x28] = 1;\ncode_r0x0043532e:\n    fcn.0043bb11(unaff_EDI);\n    return;\n}\n",
        "token_count": 739
    },
    "004354eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004354eb(uint arg_8h, uint arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    for (arg_10h = arg_10h + -1; -1 < arg_10h; arg_10h = arg_10h + -1) {\n        (*arg_14h)();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00435e8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435e8d(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.0043541f(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.0043541f(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.0043541f(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.0043541f(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.00435d5e(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x00436003:\n        fcn.0043541f(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.0043541f(arg_8h, arg_ch, 0);\n        piVar3 = fcn.00435d5e(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.0043541f(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.00435d5e(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.0043541f(arg_8h, arg_ch, (iVar1 + iVar4) / 2);\n                piVar3 = fcn.00435d5e(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.00435626(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x00436003;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.00435626(*piVar3, iVar4);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x00436003;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 850
    },
    "00436188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436188(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00438150(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x4a2380 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 223
    },
    "00436f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436f90(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00411ea1();\n    }\n    arg_ch[1] = arg_ch[1] | 0x70;\n    *arg_ch = 0x50;\n    arg_ch[8] = *(arg_8h + 0x20);\n    piVar1 = fcn.0042287e(0x48c284, arg_8h);\n    if (piVar1 == NULL) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_8h + 0x20), &lpRect);\n        var_8h = var_8h - lpRect;\n        var_4h = var_4h - var_ch;\n    }\n    else {\n        piVar1 = (**(*piVar1 + 0x134))(&var_8h, 0, in_ECX[0x20] & 0xa000);\n        var_8h = *piVar1;\n        var_4h = piVar1[1];\n    }\n    arg_ch[10] = var_4h;\n    if (*0x4a2380 < 0x40048) {\n        iVar2 = 4;\n    }\n    else {\n        iVar2 = 0;\n    }\n    iVar2 = iVar2 + var_8h;\n    arg_ch[0x11] = iVar2;\n    arg_ch[0xb] = iVar2;\n    if ((arg_ch[2] & 0x200) == 0) {\n        arg_ch[9] = iVar2;\n    }\n    else {\n        arg_ch[1] = arg_ch[1] | 0x200;\n        arg_ch[9] = var_4h;\n    }\n    iVar2 = (**(*in_ECX + 0x110))(0x401, 0xffffffff, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        piVar1 = fcn.00418218();\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x148))(1);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x41f, 0, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 601
    },
    "00437336": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437336(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00438150(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 188
    },
    "004393d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004393d4(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x84);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x80) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.0041769a(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x20));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x20), 0, uVar3);\n            uVar3 = fcn.0041e36e(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x43940c;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00439816": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439816(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00439493(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar3 = fcn.0041769a(uVar2);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar3 + 0x20), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00439f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439f60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00439f76;\n    do {\n        fcn.00411ea1();\ncode_r0x00439f76:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.0040dcf0(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0043a07a;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.0040dcc5(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.0043c410(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00439fe2:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.0043c410(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00439fe2;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0043a014:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0043a014;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.0040dcc5(arg_8h << 2);\n    fcn.004125eb(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0043c410(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.0040dcf0(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0043a07a:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 781
    },
    "0043a16f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a16f(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00439f60(iVar1 + arg_10h, 0xffffffff);\n            fcn.00426a17(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.0043c410(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00439f60(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00411ea1();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 391
    },
    "0043a213": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043a213(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_2 + param_3;\n    if ((((-1 < param_2) && (-1 < param_3)) && (iVar1 <= *(param_1 + 8))) && ((param_2 <= iVar1 && (param_3 <= iVar1))))\n    {\n        iVar3 = *(param_1 + 8) - iVar1;\n        if (iVar3 != 0) {\n            iVar3 = iVar3 * 4;\n            fcn.00426a17(*(param_1 + 4) + param_2 * 4, iVar3, *(param_1 + 4) + iVar1 * 4, iVar3);\n        }\n        *(param_1 + 8) = *(param_1 + 8) - param_3;\n        return;\n    }\n    fcn.00411ea1();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 258
    },
    "0043a910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043a910(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    fcn.0043c410(&var_3ch, 0, 0x3c);\n    var_30h = 0x28;\n    if (arg_8h == 0) {\n        var_3ch = 0;\n    }\n    else {\n        var_3ch = *(arg_8h + 0x20);\n    }\n    var_38h = arg_ch;\n    var_34h = arg_10h;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40a, 0, &var_3ch);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0043bec7(arg_14h, 0x30, &var_30h, 0x28);\n        fcn.004013ac(uVar2);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 290
    },
    "0043a98b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a98b(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.0043c410(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x20);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0043b054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b054(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_40h;\n    int32_t var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    var_10h = arg_8h;\n    fcn.0043a98b(&var_40h, arg_ch, arg_10h);\n    var_ch = *0x48efd0;\n    uStack12 = *0x48efd4;\n    var_1ch = fcn.0040123f(0x405);\n    fcn.0043c410(var_1ch, 0, 0x400);\n    uVar1 = fcn.0043bec7(var_1ch + 0x400, 5, &var_ch, 5);\n    fcn.004013ac(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40b, 0, &var_40h);\n    iVar2 = fcn.0043f802(&var_ch, var_1ch + 0x400, 5);\n    if (iVar2 != 0) {\n        fcn.00411e6d();\n    }\n    uVar1 = 0xffffffff;\n    fcn.004103cf();\n    fcn.0043bb11(uVar1);\n    return;\n}\n",
        "token_count": 372
    },
    "0043b2b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b2b5(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar3 = 0;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x0043b2c9;\n    while( true ) {\n        fcn.00411ea1();\n        puVar4 = unaff_ESI;\ncode_r0x0043b2c9:\n        if (arg_ch != iVar3) break;\n        unaff_ESI = 0x48efd8;\n        do {\n            arg_8h_00 = *unaff_ESI;\n            iVar2 = fcn.0042eb4c(arg_8h_00);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20), 0xffffffff, arg_8h_00, puVar4);\n                iVar2 = fcn.00433f00(uVar1);\n                if (0 < iVar2) goto code_r0x0043b335;\n            }\n            if (((unaff_ESI[1] ^ *(arg_8h + 0x80)) & 0xf000) == 0) {\n                iVar3 = fcn.0042eb4c(*unaff_ESI);\n            }\n            unaff_ESI = unaff_ESI + 2;\n        } while (unaff_ESI < 0x48eff8);\n        if (iVar3 != 0) break;\n    }\ncode_r0x0043b335:\n    fcn.00434ccd(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 436
    },
    "0043bcc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0043bcc1(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *param_1 = vtable.std::exception.0;\n    pcVar3 = *(param_2 + 8);\n    param_1[2] = pcVar3;\n    pcVar1 = *(param_2 + 4);\n    if (pcVar3 == NULL) {\n        param_1[1] = pcVar1;\n    }\n    else if (pcVar1 == NULL) {\n        param_1[1] = NULL;\n    }\n    else {\n        iVar2 = fcn.0043de30(pcVar1);\n        pcVar3 = fcn.0043c34d(iVar2 + 1);\n        param_1[1] = pcVar3;\n        if (pcVar3 != NULL) {\n            fcn.0043ddc9(pcVar3, iVar2 + 1, *(param_2 + 4));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 246
    },
    "0043c6c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c6c4(uint param_1, uint param_2)\n\n{\n    fcn.0043c66f(fcn.00449b52, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 54
    },
    "0043c819": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c819(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043c728(fcn.00449b52, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "0043ca2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ca2c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043c728(0x44a6c4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 119
    },
    "0043da48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043da48(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4a61bc != 0)) {\n        *param_1 = *0x4a61bc;\n        return 0;\n    }\n    puVar1 = fcn.0043e08a();\n    *puVar1 = 0x16;\n    fcn.004461b3(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 125
    },
    "0043daf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043daf7(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4a61bc != 0)) {\n        *param_1 = *0x4a61c8;\n        return 0;\n    }\n    puVar1 = fcn.0043e08a();\n    *puVar1 = 0x16;\n    fcn.004461b3(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 124
    },
    "0043dfe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dfe4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0043ca2c(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 78
    },
    "0043e200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e200(uint param_1, uint param_2)\n\n{\n    fcn.0043e158(0x44e3a1, param_2, 0, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 57
    },
    "00441253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441253(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00450125(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 74
    },
    "00441519": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441519(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00441497(0x44d6a0, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "0044153b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044153b(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00441497(0x44e3a1, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 60
    },
    "0044155c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044155c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00441497(0x44e3a1, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "00443d26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00443d26(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0044cc9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cc9f(void)\n\n{\n    code **ppcVar1;\n    \n    ppcVar1 = 0x49993c;\n    do {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n        ppcVar1 = ppcVar1 + 1;\n    } while (ppcVar1 < 0x499a3c);\n    return;\n}\n",
        "token_count": 93
    },
    "0044ff0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044ff0f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044fdf2(fcn.0044f372, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "00450125": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450125(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044fdf2(0x45d852, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 115
    },
    "0045058e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045058e(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.0043e08a();\n        *puVar1 = 0x16;\n        fcn.004461b3(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4a2fa4;\n    return 0;\n}\n",
        "token_count": 112
    },
    "004505c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004505c2(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.0043e08a();\n        *puVar1 = 0x16;\n        fcn.004461b3(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4a2fa8;\n    return 0;\n}\n",
        "token_count": 112
    },
    "004505f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004505f6(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.0043e08a();\n        *puVar1 = 0x16;\n        fcn.004461b3(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4a2fa0;\n    return 0;\n}\n",
        "token_count": 112
    },
    "0045c2d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045c2d4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045110b();\n    fcn.00451263(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "004604d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004604d3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49ef58, 0x10);\n    iVar1 = fcn.0045110b();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.0043e08a();\n        *puVar2 = 0x16;\n        fcn.004461b3(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.004511e2(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar3 = fcn.00452379(iVar1);\n        uVar4 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar4;\n        fcn.0045240f(uVar3, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0046055b();\n    }\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 432
    },
    "00466592": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00466592(uint param_1)\n\n{\n    fcn.0043c410(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 43
    },
    "004666a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004666a4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((param_2 < 0) || (iVar1 = param_1[1],  iVar1 <= param_2)) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 != iVar1 + -1) {\n            iVar2 = (iVar1 - param_2) * 4;\n            iVar1 = *param_1 + param_2 * 4;\n            fcn.00426a17(iVar1, iVar2, iVar1 + 4, iVar2 + -4);\n        }\n        param_1[1] = param_1[1] + -1;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 202
    },
    "004668e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004668e5(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (param_1[1] == param_1[2]) {\n        if (param_1[2] == 0) {\n            uVar3 = 1;\ncode_r0x0046690b:\n            iVar1 = fcn.0043d242(*param_1, uVar3, 4);\n            if (iVar1 != 0) {\n                param_1[2] = uVar3;\n                *param_1 = iVar1;\n                goto code_r0x00466921;\n            }\n        }\n        else {\n            uVar3 = param_1[1] * 2;\n            if ((-1 < uVar3) && (uVar3 < 0x20000000)) goto code_r0x0046690b;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00466921:\n        fcn.0046670e(param_1[1], param_2);\n        param_1[1] = param_1[1] + 1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 291
    },
    "0043b783": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b783(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004452ef(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "004121e7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004121e7(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    iVar3 = (*_sym.imp.ole32.dll_ReadClassStg)(arg_8h, &var_14h);\n    if (iVar3 != 0) goto code_r0x004122a6;\n    var_20h = 0;\n    (*_sym.imp.ole32.dll_ReadFmtUserTypeStg)(arg_8h, &var_28h, &var_20h);\n    var_24h = 0;\n    var_18h = NULL;\n    iVar3 = (*_sym.imp.ole32.dll_OleRegGetUserType)(arg_ch, 1, &var_18h);\n    pcVar1 = _sym.imp.ole32.dll_WriteClassStg;\n    if (iVar3 != 0) {\n        var_18h = &var_24h;\n    }\n    var_1ch = (*_sym.imp.ole32.dll_WriteClassStg)(arg_8h, arg_ch);\n    pcVar2 = _sym.imp.ole32.dll_WriteFmtUserTypeStg;\n    if (var_1ch == 0) {\n        var_1ch = (*_sym.imp.ole32.dll_WriteFmtUserTypeStg)(arg_8h, var_28h, var_18h);\n        if (var_1ch == 0) {\n            var_1ch = (*_sym.imp.ole32.dll_SetConvertStg)(arg_8h, 1);\n            if (var_1ch == 0) goto code_r0x0041228b;\n        }\n        (*pcVar1)(arg_8h, &var_14h);\n        (*pcVar2)(arg_8h, var_28h, var_20h);\n    }\ncode_r0x0041228b:\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    if (var_18h != &var_24h) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_18h);\n    }\n    (*pcVar1)(var_20h);\ncode_r0x004122a6:\n    fcn.0043bb11(unaff_ESI);\n    return;\n}\n",
        "token_count": 600
    },
    "00416385": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416385(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00416312(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.004154b2(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 159
    },
    "00423327": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00423327(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x68) == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetCapture)();\n    iVar2 = fcn.004231a3(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    iVar3 = fcn.00418fa4();\n    uVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    fcn.0041769a(uVar4);\n    iVar5 = fcn.00418fa4();\n    var_ch = 0;\n    iVar6 = (*_sym.imp.KERNEL32.DLL_GetCurrentThreadId)();\n    if (iVar2 != 0) {\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  iVar2 == iVar7)) {\n        uVar4 = *0x4a6168;\n        if (iVar1 == *(in_ECX + 0x20)) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            uVar4 = *0x4a6168;\n        }\ncode_r0x0042341b:\n        (*_sym.imp.USER32.dll_SetCursor)(uVar4);\n        goto code_r0x00423421;\n    }\n    if (iVar2 == 0) {\ncode_r0x004233ea:\n        if (iVar6 != iVar8) goto code_r0x004233ef;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar4 = *(in_ECX + 0x20);\n            iVar7 = fcn.0042d43f();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar3) {\n                    iVar2 = 0;\n                    goto code_r0x00423421;\n                }\n                uVar4 = *0x4a616c;\n                if (iVar1 != *(in_ECX + 0x20)) {\n                    (*_sym.imp.USER32.dll_SetCapture)(*(in_ECX + 0x20));\n                    uVar4 = *0x4a616c;\n                }\n                goto code_r0x0042341b;\n            }\n            goto code_r0x004233ea;\n        }\ncode_r0x004233ef:\n        iVar2 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x20)) {\n        (*_sym.imp.USER32.dll_ReleaseCapture)(uVar4);\n    }\ncode_r0x00423421:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 762
    },
    "004286bd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004286bd(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.DLL_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.DLL_GetCPInfo)();\n    fcn.0043bb11(arg_8h);\n    return;\n}\n",
        "token_count": 112
    },
    "0042ad15": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ad15(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = fcn.0044157e(arg_8h);\n    puVar1 = fcn.0042ab7d(&var_24h, 10000);\n    var_ch = *puVar1;\n    var_8h = puVar1[1];\n    var_4h = puVar1[2];\n    if (arg_8h < 0) {\n        puVar1 = fcn.0042ab3a(&var_24h);\n        var_ch = *puVar1;\n        var_8h = puVar1[1];\n        var_4h = puVar1[2];\n    }\n    var_18h = fcn.0044157e(arg_ch);\n    if (arg_ch < 0) {\n        puVar1 = fcn.0042ab3a(&var_24h);\n        var_18h = *puVar1;\n        var_14h = puVar1[1];\n        var_10h = puVar1[2];\n    }\n    uVar2 = fcn.0042aa76(&var_24h, &var_18h);\n    fcn.0042994c(uVar2);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 404
    },
    "0042c665": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: lprcSrc1\n\nvoid __cdecl\nfcn.0042c665(uint lprcSrc2, uint dx, uint dy, uint lprcSrc, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint lprcSrc1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(0x38);\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0042c3d7(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.0041e643(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.0041e643(uVar2);\n    fcn.0042c40b(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.0042c5c2();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    iVar3 = *(unaff_EBP + 0x20);\n    if (iVar3 == 0) {\n        fcn.00411ea1();\n        iVar3 = extraout_ECX_00;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = iVar3;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = _sym.imp.GDI32.dll_CreateRectRgn;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.0041e643(uVar2);\n        fcn.0042c3f0(*(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.0042c3f0(unaff_EBP + -0x44);\n        fcn.0042c40b(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.0041e643(uVar2);\n            fcn.0042c40b(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.0041df18(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.0041e838(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.0041e838(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.0041df18(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.0041e838(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.0041e838(*(unaff_EBP + 0x14));\n    }\n    fcn.0041df18(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 2220
    },
    "0042c9b7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c9b7(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a2460 ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar5 = &var_40h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a, var_40h, 0x2d0);\n    var_44h = (*_sym.imp.KERNEL32.DLL_MulDiv)(uVar3);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_48h = 0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_48h, 1);\n    uVar3 = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    (*pcVar1)(uVar2, &var_50h);\n    iVar4 = fcn.0044157e(var_44h - var_4ch);\n    var_40h = -iVar4;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    fcn.00427e40(&var_40h);\n    fcn.0043bb11(uVar3);\n    return;\n}\n",
        "token_count": 513
    },
    "0042df1f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042df1f(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h != NULL) goto code_r0x0042df39;\n    do {\n        fcn.00411ea1();\ncode_r0x0042df39:\n    } while (*arg_8h == 0);\n    piVar1 = fcn.004227d4();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0041aea4();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0041aee8(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 344
    },
    "0042ef70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ef70(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x32] == 0) {\n        uVar1 = in_ECX[0x34];\n        in_ECX[0x32] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x34] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x20] != NULL)) {\n            (**(*in_ECX[0x20] + 0x50))();\n        }\n        uVar1 = fcn.0041ae8a();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.00417a8e(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.00417a8e(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.00417a8e(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.0041b2f6(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x32] = 0;\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "00431ba7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431ba7(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    \n    var_24h = arg_8h;\n    var_28h = 0x18;\n    var_1ch = 0xf000;\n    var_20h = ((arg_ch != 0) + 1) * 0x1000;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110d, 0, &var_28h);\n    return;\n}\n",
        "token_count": 161
    },
    "00433e4d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433e4d(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xac);\n    puVar1 = in_ECX + 0xb0;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb4);\n    uVar4 = *(in_ECX + 0xb8);\n    uVar5 = *(in_ECX + 0xbc);\n    *(in_ECX + 0xac) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.0043885f(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb4) = uVar3;\n    *(in_ECX + 0xb8) = uVar4;\n    *(in_ECX + 0xbc) = uVar5;\n    *(in_ECX + 0xac) = uVar6;\n    return;\n}\n",
        "token_count": 306
    },
    "00435167": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00435167(int32_t hgdiobj)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    piVar1 = in_ECX + 0x27;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x29], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x29];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.00422502(piVar1);\n        *piVar1 = hgdiobj;\n    }\n    return uVar3;\n}\n",
        "token_count": 378
    },
    "0040ec2d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040ec2d(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.0040111d();\n    fcn.0040111d();\n    fcn.0040111d();\n    fcn.0040111d();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 120
    },
    "0040f134": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f134(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "0040f249": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f249(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004145d6();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 150
    },
    "00411e44": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411e44(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0041bb05(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "00419244": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00419244(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00423082();\n    return param_1;\n}\n",
        "token_count": 143
    },
    "0041e52d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e52d(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.0041e37c(uVar2);\n    if (iVar3 == 0) {\n        fcn.0041d99f();\n    }\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 297
    },
    "00427710": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427710(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0040dcf0(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00430949();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "004278bb": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004278bb(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 131
    },
    "004279b9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004279b9(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00430949();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00427ad3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427ad3(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "0042d969": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d969(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00430949();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 142
    },
    "0042f253": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f253(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CList_struct_HWND_____struct_HWND____.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 112
    },
    "0043a362": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043a362(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "0043a40b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043a40b(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0043a2e1(param_2);\n    *param_3 = uVar1;\n    uVar1 = uVar1 % *(param_1 + 8);\n    *param_2 = uVar1;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (iVar2 = fcn.00401127(unaff_retaddr),  iVar2 == 0)) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 234
    },
    "0043a4bc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a4bc(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar2 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3 == 0xfffffff8) {\n                        uStack20 = 0;\n                        uStack24 = 0x4a15e8;\n                        fcn.0043cb83(&stack0xffffffe8, 0x49af08);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x43a4e5;\n                    fcn.0043a390();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1 + 8));\n        }\n        uStack20 = *(param_1 + 4);\n        uStack24 = 0x43a4f9;\n        fcn.0040dcf0();\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    uStack20 = 0x43a50b;\n    fcn.00430949();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 391
    },
    "00401131": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401131(int32_t param_1, uint param_2)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.0040133e(param_2, 0, 0xffffffff);\n    return param_1;\n}\n",
        "token_count": 96
    },
    "0040ec6c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ec6c(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00401438();\n    fcn.00401438();\n    fcn.00401438();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0040f9ea": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0040f9ea(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.00414023();\n        iVar2 = fcn.0040f8de(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "00414448": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414448(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0043d8c8(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.0040111d();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.0040123f(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.0040dcc5(8);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.00422910(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00414161();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.00422910(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.004143a5();\n    }\n    *(extraout_ECX[0x1e] + 4) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 730
    },
    "004239df": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004239df(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.00430767(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.004278bb(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.004278bb(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00423a34;\n    do {\n        iVar2 = fcn.00411ea1();\ncode_r0x00423a34:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.004276b6(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 458
    },
    "0041cdb0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cdb0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.0041cc96(arg_8h, arg_10h, 0, arg_14h, 0, \"%I64u\", 0xf112);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0041edbb": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_52h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.0041edbb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(0x58);\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.0041ec4d(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.0041ec4d(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    var_18h = (*pcVar1)(0);\n    iVar3 = fcn.0041e37c(var_18h);\n    if (iVar3 != 0) {\n        var_18h = (*pcVar1)(0);\n        iVar3 = fcn.0041e37c(var_18h);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.0041e696();\n            var_18h = *(unaff_EBP + -0x60);\n            iVar4 = fcn.0041e73a(var_18h, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                var_18h = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.0041e643();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.0041e79f(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    var_18h = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.0041e79f(var_18h, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.0041d3c1(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.0041d3c1(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.0041e79f(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.0042c901(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.0041d3c1(0xffffff);\n                            uVar2 = fcn.0041e838(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0041e838(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0041e838(*(unaff_EBP + 0xc));\n                            fcn.0041d3c1(*(unaff_EBP + -0x10));\n                        }\n                        fcn.0041e79f(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        var_18h = *(unaff_EBP + -0x38);\n                        fcn.0041e79f(var_18h, *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.0041e696(var_18h);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041e3f6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041e3f6();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 2162
    },
    "0041f265": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: hDC\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hbr\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n\nvoid __cdecl fcn.0041f265(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(0x6c);\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.0041e37c(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.0041e37c(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.0041e37c(uVar2);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78),  iVar3 != 0)\n               ) {\n                fcn.0041e696();\n                iVar3 = fcn.0041e73a(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                     *(unaff_EBP + -0x66), 0);\n                pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                if (iVar3 != 0) {\n                    uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x48b5c4);\n                    fcn.0041e643(uVar2);\n                    fcn.0041e701(unaff_EBP + -0x18);\n                    fcn.0041e696();\n                    (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                    fcn.0041e643();\n                    uVar2 = fcn.0041e79f(*(unaff_EBP + -0x3c));\n                    *(unaff_EBP + 8) = uVar2;\n                    iVar3 = fcn.0041e79f(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                    *(unaff_EBP + -0x10) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                        fcn.0041d3c1(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        (*_sym.imp.GDI32.dll_BitBlt)\n                                  (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                   *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                        fcn.0041d3c1(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                  *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                        fcn.0041d3c1();\n                        iVar3 = fcn.0041e79f();\n                        *(unaff_EBP + 0xc) = iVar3;\n                        if (iVar3 != 0) {\n                            uVar2 = fcn.0041d4a8();\n                            uVar4 = fcn.0041d3c1();\n                            *(unaff_EBP + 0x14) = uVar4;\n                            *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                            *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                            *(unaff_EBP + -0x60) = 0;\n                            *(unaff_EBP + -0x5c) = 0;\n                            (*_sym.imp.USER32.dll_FillRect)(*(unaff_EBP + -0x2c), unaff_EBP + -0x60);\n                            fcn.0041d4a8(uVar2);\n                            fcn.0041d3c1(*(unaff_EBP + 0x14));\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                        }\n                        fcn.0041e79f();\n                        fcn.0041e79f(*(unaff_EBP + -0x4c));\n                        fcn.0041e79f(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    fcn.0041e696();\n    *(unaff_EBP + -4) = 1;\n    fcn.0041e3f6();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041e3f6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041e3f6();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 2441
    },
    "0041f885": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f885(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.0041f7f2(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004290a1": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004290a1(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.DLL_lstrlenA)(*param_1);\n    fcn.00428b23(*(param_1 + 2), uVar1 & 0xffff);\n    fcn.00428b23();\n    fcn.00428e9d(*param_1, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 108
    },
    "004104a6": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004104a6(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t iStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint uStack276;\n    uint uStack272;\n    uint in_stack_fffffef4;\n    \n    uStack272 = 0x18;\n    uStack276 = 0x4104ca;\n    fcn.0043d8c8();\n    puStack280 = *param_2;\n    uStack276 = &stack0xfffffed8;\n    uStack284 = param_1;\n    iStack288 = 0x4104ea;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)();\n    if (iVar1 == 0) {\n        while( true ) {\n            iStack288 = 0x104;\n            uStack296 = 0;\n            puStack292 = &stack0xfffffef0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(0);\n            if (iVar1 != 0) break;\n            puStack280 = 0x41051d;\n            uStack276 = &stack0xfffffef0;\n            fcn.00401352();\n            puStack280 = &stack0xfffffedc;\n            uStack284 = uStack296;\n            uStack276._0_1_ = 1;\n            iStack288 = 0x41052d;\n            iVar1 = fcn.004104a6();\n            uStack276 = uStack276._1_3_ << 8;\n            iStack288 = 0x410543;\n            fcn.00401438();\n            if (iVar1 != 0) break;\n            uStack276 = 0xffffffff;\n        }\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            iStack288 = *param_2;\n            puStack292 = 0x410508;\n            uStack296 = 0x410583;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n        }\n        iStack288 = uStack296;\n        puStack292 = 0x41058e;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    *in_FS_OFFSET = uStack284;\n    uStack272 = 0x4105ab;\n    fcn.0043bb11(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 573
    },
    "004215b3": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004215b3(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 381
    },
    "00421644": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421644(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004215b3();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "00425edc": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00425edc(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpType;\n    uint lpData;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    var_8h = 0;\n    lpData = fcn.0040123f(0x104);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    lpcbData = 0x104;\n    lpType = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x4875c7, 0, &lpType, lpData, &lpcbData);\n                bVar4 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    fcn.004103cf(0xffffffff);\n    return bVar4;\n}\n",
        "token_count": 400
    },
    "0043995f": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043995f(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.00439816();\n    (**(**(param_1 + 0x68) + 0x138))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.0043b401(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 177
    },
    "00460c95": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00460c95(void)\n\n{\n    *0x4a35f4 = (*_sym.imp.KERNEL32.DLL_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040dcc5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040dcc5(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0043c34d(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4a11f4 == NULL) break;\n        iVar1 = (**0x4a11f4)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 121
    },
    "0040dd1b": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040dd1b(uint *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    *param_1 = param_2;\n    param_1[1] = 0;\n    if (*0x4a43b4 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x0040dd4e;\ncode_r0x0040dd49:\n        do {\n            fcn.00411ea1();\ncode_r0x0040dd4e:\n            pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n            *0x4a43a4 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, \"CreateActCtxA\", unaff_ESI);\n            *0x4a43a8 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x4a43ac = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x4a43b0 = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            if (*0x4a43a4 == 0) {\n                if ((*0x4a43a8 != 0) || (*0x4a43ac != 0)) goto code_r0x0040dd49;\n            }\n            else if ((*0x4a43a8 == 0) || (*0x4a43ac == 0)) goto code_r0x0040dd49;\n        } while (*0x4a43b0 != 0);\n        *0x4a43b4 = '\\x01';\n    }\n    return param_1;\n}\n",
        "token_count": 405
    },
    "0040e3d3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e3d3(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    if (param_1 == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (param_1 == 0x16) goto code_r0x0040e3f9;\n        if (param_1 == 0x22) goto code_r0x0040e3f9;\n        if (param_1 == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00401451(uVar1);\ncode_r0x0040e3f9:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 196
    },
    "00410a9b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00410a9b(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00410aca;\n    iVar3 = fcn.004109c4();\n    if ((iVar3 == 0) && (iVar3 = fcn.0040e447(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00410aca:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 483
    },
    "00415ee2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415ee2(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x00415f01;\n    if (*param_1 == 0x7fffffff) goto code_r0x00415eff;\n    if (*param_1 == param_2) goto code_r0x00415eff;\n    do {\n        iVar1 = fcn.00411ea1();\n        param_1 = extraout_ECX;\ncode_r0x00415eff:\n        *param_1 = param_2;\ncode_r0x00415f01:\n    } while (*param_1 == iVar1);\n    fcn.0042384c(*param_1);\n    return;\n}\n",
        "token_count": 201
    },
    "00416164": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416164(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.00411ea1();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.00415dec(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x004161c6;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x004161c6:\n                    iVar1 = fcn.00427f51(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.00416164(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "004179b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004179b5(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x20),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.0041769a(iVar5);\n    return uVar4;\n}\n",
        "token_count": 235
    },
    "00417a17": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417a17(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.00417a17(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0041769a();\n            return;\n        }\n        iVar2 = fcn.004176c1(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.00417a17(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00417bd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00417bd8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.004176c1(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 186
    },
    "00417da4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417da4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.004175f6();\n    return;\n}\n",
        "token_count": 127
    },
    "00418218": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00418218(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0041769a(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[8];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 193
    },
    "0041840a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041840a(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = 0;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindow)(*(param_1 + 0x20), 5);\n    iVar3 = fcn.0041769a(uVar2);\n    while (iVar3 != 0) {\n        uVar2 = (*pcVar1)(*(iVar3 + 0x20), 2);\n        iVar3 = fcn.0041769a(uVar2);\n        iVar4 = iVar4 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 178
    },
    "00418fa4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418fa4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.00418f5f(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0041769a(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "0041c673": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c673(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_8h;\n    fcn.0041c582(arg_ch);\n    fcn.0041ad45(arg_ch, &arg_8h);\n    if (*piVar2 != 0) {\n        *arg_10h = -1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    arg_ch = 0;\n    while( true ) {\n        uVar3 = (*pcVar1)(arg_8h, 0x87, 0, 0);\n        if ((uVar3 & 0x40) != 0) {\n            if (*piVar2 == 0) {\n                (*pcVar1)(arg_8h, 0xf1, arg_ch == *arg_10h, 0);\n            }\n            else {\n                iVar4 = (*pcVar1)(arg_8h, 0xf0, 0, 0);\n                if (iVar4 != 0) {\n                    *arg_10h = arg_ch;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        }\n        arg_8h = (*_sym.imp.USER32.dll_GetWindow)(arg_8h, 2);\n        if (arg_8h == NULL) break;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if ((uVar3 & 0x20000) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0041f8dd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f8dd(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x0041f908;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00401451();\ncode_r0x0041f908:\n        iVar1 = (*_sym.imp.KERNEL32.DLL_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.0041f885(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 252
    },
    "004226e5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004226e5(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00422866": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00422866(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    \n    if (param_1 != NULL) goto code_r0x0042286f;\n    do {\n        fcn.00411ea1();\n        param_1 = extraout_ECX;\ncode_r0x0042286f:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x0042283c;\n    do {\n        iVar1 = fcn.00411ea1();\ncode_r0x0042283c:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 215
    },
    "00422aa6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00422aa6(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *param_1;\n    if (iVar5 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (iVar5 == param_2) {\n            piVar2 = fcn.00422a70(param_2);\n            *param_1 = *piVar2;\n        }\n        else {\n            do {\n                piVar2 = fcn.00422a70(iVar5);\n                if (*piVar2 == param_2) break;\n                piVar2 = fcn.00422a70();\n                iVar5 = *piVar2;\n            } while (iVar5 != 0);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar3 = fcn.00422a70(param_2);\n            puVar4 = fcn.00422a70(iVar5);\n            *puVar4 = *puVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 283
    },
    "00422c81": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422c81(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00427754": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00427754(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 191
    },
    "0042778c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042778c(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.00411ea1();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "004277f3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004277f3(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.0042773b(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 219
    },
    "00427aae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427aae(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00427ac4;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x00427ac4:\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0042c343": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042c343(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1 != 0) goto code_r0x0042c352;\n    do {\n        fcn.00411ea1();\ncode_r0x0042c352:\n    } while ((*(param_1 + 4) == 0) || (param_2 == 0));\n    (*_sym.imp.GDI32.dll_SetBkColor)(*(param_1 + 4), param_3);\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(param_1 + 4), 0, 0, 2, unaff_ESI, 0, 0, 0);\n    return;\n}\n",
        "token_count": 182
    },
    "0042d43f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0042d43f(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.00418f5f();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 78
    },
    "0042fd3e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042fd3e(void)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0043d895(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0042f926();\n    iVar1 = fcn.00414023();\n    while (*(iVar1 + 0xec) == extraout_ECX) {\n        fcn.0042dbdb();\n    }\n    if (extraout_ECX[0x2f] != NULL) {\n        fcn.0040dcf0(extraout_ECX[0x2f]);\n    }\n    fcn.00401438();\n    *(unaff_EBP + -4) = 0;\n    fcn.00427af6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004180c8();\n    fcn.0043d96d();\n    return;\n}\n",
        "token_count": 281
    },
    "0042ff8f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0042ff8f(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code **ppcVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    int32_t **ppiVar11;\n    uint extraout_ECX;\n    uint32_t uVar12;\n    int32_t unaff_EBP;\n    uint32_t uVar13;\n    uint *in_FS_OFFSET;\n    uint32_t uVar14;\n    \n    fcn.0043d895(0xf4);\n    *(unaff_EBP + 0x60) = extraout_ECX;\n    uVar4 = fcn.0041bca8();\n    fcn.00401456(uVar4);\n    pcVar2 = _sym.imp.KERNEL32.DLL_lstrlenA;\n    *(unaff_EBP + -4) = 0;\n    iVar5 = (*pcVar2)(\"ReBarWindow32\");\n    uVar4 = fcn.0040123f(iVar5 + 1);\n    puVar10 = *(unaff_EBP + 0x74);\n    (*_sym.imp.USER32.dll_GetClassNameA)(*puVar10, uVar4, iVar5 + 1);\n    fcn.004103cf(0xffffffff);\n    uVar4 = fcn.004176c1(*puVar10);\n    *(unaff_EBP + 0x74) = uVar4;\n    iVar5 = fcn.00401127(\"ReBarWindow32\");\n    if ((iVar5 == 0) && (iVar5 = *(unaff_EBP + 0x74),  iVar5 != 0)) {\n        iVar6 = fcn.00422866(0x48e6a8);\n        if (iVar6 != 0) {\n            iVar6 = fcn.00418218();\n            if ((iVar6 != 0) && (*(unaff_EBP + 0x60) != iVar6)) {\n                uVar4 = fcn.0042ff8f(*(unaff_EBP + 0x70), puVar10, *(unaff_EBP + 0x78));\n                goto code_r0x00430042;\n            }\n            fcn.00428035();\n            *(unaff_EBP + -4) = 1;\n            uVar4 = fcn.0041bca8();\n            fcn.00401456(uVar4);\n            *(unaff_EBP + -4) = 2;\n            uVar4 = fcn.0041bca8();\n            fcn.00401456(uVar4);\n            *(unaff_EBP + -4) = 3;\n            fcn.0041db63();\n            *(unaff_EBP + -4) = 4;\n            fcn.0041e40f(*(unaff_EBP + 0x60));\n            pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n            uVar4 = puVar10[3];\n            uVar1 = *(iVar5 + 0x20);\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x100) = 0x50;\n            *(unaff_EBP + -0xfc) = 0x10;\n            (*pcVar3)(uVar1, 0x41d, uVar4, unaff_EBP + -0x100);\n            (*pcVar3)(*(*(unaff_EBP + 0x74) + 0x20), 0x409, puVar10[3], unaff_EBP + -0x1c);\n            iVar5 = (*pcVar2)(\"ToolbarWindow32\");\n            uVar4 = fcn.0040123f(iVar5 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0xe0), uVar4, iVar5 + 1);\n            fcn.004103cf(0xffffffff);\n            iVar5 = fcn.004176c1(*(unaff_EBP + -0xe0));\n            *(unaff_EBP + 0x20) = iVar5;\n            iVar6 = fcn.00401127();\n            if ((iVar6 == 0) && (iVar5 != 0)) {\n                iVar6 = fcn.00422866(0x48e354);\n                if (iVar6 != 0) {\n                    *(unaff_EBP + -0x14) = puVar10[6];\n                    *(unaff_EBP + 0x24) = puVar10 + 6;\n                    fcn.0041dfd1(unaff_EBP + -0x1c);\n                    fcn.0041df95(unaff_EBP + -0x1c);\n                    iVar6 = fcn.0042dc00();\n                    *(unaff_EBP + 0x58) = iVar6;\n                    do {\n                        iVar6 = iVar6 + -1;\n                        uVar4 = *(iVar5 + 0x20);\n                        *(unaff_EBP + 0x74) = iVar6;\n                        (*pcVar3)(uVar4, 0x41d, iVar6, unaff_EBP + -0x80);\n                        iVar7 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x90, unaff_EBP + -0x1c, unaff_EBP + -0x80);\n                        if (iVar7 != 0) break;\n                    } while (iVar6 != 0);\n                    fcn.0043c410(unaff_EBP + -0x70, 0, 0x30);\n                    *(unaff_EBP + -0x70) = 0x30;\n                    iVar5 = fcn.0042dc2c();\n                    fcn.00430ff6();\n                    *(unaff_EBP + 0x3c) = vtable.CTypedPtrArray_class_CObArray__class_CBitmap__.0;\n                    uVar14 = *(unaff_EBP + 0x74);\n                    *(unaff_EBP + -4) = 6;\n                    fcn.0043101d(*(unaff_EBP + 0x58) - uVar14, 0xffffffff);\n                    uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.00427f6b(uVar4);\n                    fcn.0041e762(unaff_EBP + -0x30);\n                    uVar12 = 0;\n                    if (uVar14 < *(unaff_EBP + 0x58)) {\n                        do {\n                            fcn.00435509(*(unaff_EBP + 0x74), unaff_EBP + 0x54, unaff_EBP + 0x38, unaff_EBP + 0x50);\n                            if ((*(unaff_EBP + 0x38) & 1) == 0) {\n                                *(unaff_EBP + -0x6c) = 0x162;\n                                fcn.004012b7(*(unaff_EBP + 0x54));\n                                fcn.0041bbc8(unaff_EBP + 0x5c, *(unaff_EBP + 0x70), 1, 10);\n                                ppcVar8 = fcn.0040dcc5(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                fcn.004311fc(uVar12, ppcVar8);\n                                fcn.0042f58e(*(iVar5 + 4), *(unaff_EBP + 0x50), unaff_EBP + -0xb0);\n                                (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + 0x10, unaff_EBP + -0xa0);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + 0x10, -*(unaff_EBP + 0x10), -*(unaff_EBP + 0x14));\n                                fcn.0042da39(uVar12);\n                                fcn.0042da82(unaff_EBP + -0x30, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n                                piVar9 = fcn.0042da39(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.0041e79f(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.0042da39(uVar12);\n                                *puVar10 = uVar4;\n                                uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.0042c343(unaff_EBP + 0x10, uVar4);\n                                fcn.0042f5ac(unaff_EBP + 0x28, *(unaff_EBP + 0x50), 0, 0, 1);\n                                piVar9 = fcn.0042da39(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.0041e79f(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.0042da39(uVar12);\n                                *puVar10 = uVar4;\n                                *(unaff_EBP + -0x4c) = *(unaff_EBP + 0x5c);\n                                *(unaff_EBP + -0x60) = *(unaff_EBP + 0x54);\n                                *(unaff_EBP + -0x68) = 0x100;\n                                puVar10 = fcn.0042da39(uVar12);\n                                *(unaff_EBP + -0x50) = *puVar10;\n                                uVar12 = uVar12 + 1;\ncode_r0x00430390:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + 4), *(unaff_EBP + 0x74), 1, unaff_EBP + -0x70);\n                            }\n                            else if (uVar12 != 0) {\n                                *(unaff_EBP + -0x6c) = 0x100;\n                                *(unaff_EBP + -0x68) = 0x800;\n                                goto code_r0x00430390;\n                            }\n                            *(unaff_EBP + 0x74) = *(unaff_EBP + 0x74) + 1;\n                        } while (*(unaff_EBP + 0x74) < *(unaff_EBP + 0x58));\n                    }\n                    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x40, *(unaff_EBP + 0x24));\n                    fcn.0041dfd1(unaff_EBP + -0x40);\n                    uVar13 = 0;\n                    uVar14 = 0;\n                    fcn.004160be(0, *(unaff_EBP + -0x40), *(unaff_EBP + -0x34), *(unaff_EBP + 0x60), 0);\n                    **(unaff_EBP + 0x78) = 0;\n                    if (uVar12 != 0) {\n                        do {\n                            uVar14 = uVar13;\n                            ppiVar11 = fcn.0042da39();\n                            if (*ppiVar11 != NULL) {\n                                (**(**ppiVar11 + 4))(1);\n                            }\n                            uVar13 = uVar13 + 1;\n                        } while (uVar13 < uVar12);\n                    }\n                    *(unaff_EBP + -4) = 5;\n                    fcn.0043100d(uVar14);\n                    *(unaff_EBP + -4) = 4;\n                    fcn.0041e463();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.0041e3f6();\n                    fcn.00401438();\n                    fcn.00401438();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0042809c();\n                    uVar4 = 1;\n                    goto code_r0x00430042;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.0041e463();\n            *(unaff_EBP + -4) = 3;\n            fcn.0041e3f6();\n            fcn.00401438();\n            fcn.00401438();\n            *(unaff_EBP + -4) = 0;\n            fcn.0042809c();\n        }\n    }\n    uVar4 = 0;\ncode_r0x00430042:\n    fcn.00401438();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 2923
    },
    "00430949": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430949(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0040dcf0(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00430cb3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430cb3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00430cde;\n    }\n    arg_10h = fcn.00411ea1();\n    arg_8h = unaff_EBX;\ncode_r0x00430cde:\n    fcn.00430be3(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00430992(iVar1);\n            fcn.004309ae();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00431324": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431324(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x0043134f;\n    }\n    arg_10h = fcn.00411ea1();\n    arg_8h = unaff_EBX;\ncode_r0x0043134f:\n    fcn.0043122c(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00430f8e(iVar1);\n            fcn.00430faa();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00431a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431a20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x00431a3b;\n    do {\n        fcn.00411ea1();\ncode_r0x00431a3b:\n    } while (arg_8h == 0);\n    var_24h = arg_8h;\n    var_28h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110c, 0, &var_28h);\n    return var_4h;\n}\n",
        "token_count": 202
    },
    "00433f00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00433f00(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.00433cdd(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xa0));\n    }\n    return -1;\n}\n",
        "token_count": 167
    },
    "0043424b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043424b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            iVar1 = fcn.00433f3d();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0xa0));\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "00434937": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434937(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            arg_8h = fcn.00433f3d(iVar1);\n            if (arg_8h != 0) {\n                fcn.0042d75d();\n                fcn.0042e743(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0xa0));\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "004399a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004399a3(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x20));\n        fcn.0041769a(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.0041769a(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0040e1ff(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0043966e(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0043966e(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.004396a2(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.004395f2(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.0043995f();\n                        }\n                        else {\n                            fcn.0043985b();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.0041769a(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.00439816();\n    }\n    return 0;\n}\n",
        "token_count": 650
    },
    "0043a267": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a267(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x0043a292;\n    }\n    arg_10h = fcn.00411ea1();\n    arg_8h = unaff_EBX;\ncode_r0x0043a292:\n    fcn.0043a16f(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00433cc1(iVar1);\n            fcn.004373da();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0043a518": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a518(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack24;\n    code *pcStack20;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    if (puVar2 == 0xfffffff8) {\n                        pcStack20 = NULL;\n                        uStack24 = 0x4a15e8;\n                        fcn.0043cb83(&uStack24, 0x49af08);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x43a4e5;\n                    fcn.0043a390();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        pcStack20 = param_1[1];\n        uStack24 = 0x43a4f9;\n        fcn.0040dcf0();\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    pcStack20 = 0x43a50b;\n    fcn.00430949();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 367
    },
    "0043b252": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b252(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        fcn.00411ea1();\n    }\n    if (param_2 == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x48efdc) & 0xf000) == (*(param_1 + 0x80) & 0xf000)) {\n                iVar1 = fcn.0042eb4c(*(iVar1 * 8 + 0x48efd8));\n                if (iVar1 != 0) goto code_r0x0043b2a3;\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n        fcn.00411ea1();\n    }\ncode_r0x0043b2a3:\n    fcn.00434a45(param_1, param_2);\n    return;\n}\n",
        "token_count": 230
    },
    "00443e4a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00443e4a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49e7d8, 0xc);\n    fcn.004484f3(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4a620c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4a6208;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00443e8e;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0043c1fb(arg_8h_00);\ncode_r0x00443e8e:\n        fcn.0043c1fb(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00443eb1();\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 405
    },
    "00443faf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00443faf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0044102c(0x49e818, 0xc);\n    fcn.004484f3(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4a620c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4a6208;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00443ff3;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0043c1fb(arg_8h_00);\ncode_r0x00443ff3:\n        fcn.0043c1fb(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00444016();\n    fcn.00441071();\n    return;\n}\n",
        "token_count": 398
    },
    "00450270": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.00450270(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 590
    },
    "00466836": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00466836(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = in_ECX + 0x18;\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(iVar5);\n    iVar4 = 0;\n    if (0 < *(in_ECX + 0x34)) {\n        do {\n            iVar5 = iVar4;\n            piVar1 = fcn.004666e7();\n            if (*piVar1 == arg_8h) {\n                fcn.004666a4();\n                uVar3 = 1;\n                goto code_r0x0046687e;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(in_ECX + 0x34));\n    }\n    iVar4 = iVar5;\n    uVar3 = 0;\ncode_r0x0046687e:\n    uVar2 = fcn.004667e7(iVar4);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 286
    },
    "00411750": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411750(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    iVar1 = fcn.004145d6();\n    uVar3 = *(iVar1 + 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.DLL_FindResourceA)(uVar3, arg_8h, 5);\n    iVar1 = (*_sym.imp.KERNEL32.DLL_LoadResource)(uVar3, uVar2);\n    if (iVar1 != 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.DLL_LockResource)(iVar1);\n    }\n    uVar3 = fcn.00411372(arg_8h_00, arg_ch, uVar3);\n    (*_sym.imp.KERNEL32.DLL_FreeResource)(iVar1);\n    return uVar3;\n}\n",
        "token_count": 231
    },
    "004117a6": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.004117a6(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.DLL_LockResource)(param_1);\n    fcn.00411725(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 75
    },
    "0041ac35": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0041ac35(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.004145d6();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.DLL_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.DLL_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.DLL_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0041a7ec(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.DLL_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "0041470a": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0041470a(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x4a5bfc != 0) {\n        return *0x4a5bf0 != 0;\n    }\n    *0x4a5c00 = fcn.004146b2();\n    iVar2 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n    if (((((iVar2 != 0) &&\n          (*0x4a5be0 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar2, \"GetSystemMetrics\"),  *0x4a5be0 != 0)) &&\n         (*0x4a5be4 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x4a5be4 != 0)) &&\n        ((*0x4a5be8 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x4a5be8 != 0 &&\n         (*0x4a5bec = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x4a5bec != 0)))) &&\n       ((*0x4a5bf4 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x4a5bf4 != 0 &&\n        ((*0x4a5bf0 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x4a5bf0 != 0 &&\n         (*0x4a5bf8 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x4a5bf8 != 0)))))) {\n        *0x4a5bfc = 1;\n        return true;\n    }\n    *0x4a5be0 = 0;\n    *0x4a5be4 = 0;\n    *0x4a5be8 = 0;\n    *0x4a5bec = 0;\n    *0x4a5bf0 = 0;\n    *0x4a5bf4 = 0;\n    *0x4a5bf8 = 0;\n    *0x4a5bfc = 1;\n    return false;\n}\n",
        "token_count": 516
    },
    "0041d81b": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d81b(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.DLL_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "0041d851": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d851(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.DLL_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 193
    },
    "00413e5f": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413e5f(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.0043c1fb(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00427d60": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00427d60(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00427cc1();\n    iVar2 = fcn.004145d6();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.00414649();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x13c))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.00414023();\n    iVar3 = fcn.004145d6();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00437966": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437966(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.0041ae8a();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((uVar3 < 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.00418fcc(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.0042e4ac(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 227
    },
    "00422939": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00422939(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    puVar1 = param_1 + 7;\n    (*_sym.imp.KERNEL32.DLL_EnterCriticalSection)(puVar1);\n    if ((((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) &&\n        (iVar3 = (*_sym.imp.KERNEL32.DLL_TlsGetValue)(*param_1),  iVar3 != 0)) && (unaff_retaddr < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + unaff_retaddr * 4);\n        (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.DLL_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 217
    }
}