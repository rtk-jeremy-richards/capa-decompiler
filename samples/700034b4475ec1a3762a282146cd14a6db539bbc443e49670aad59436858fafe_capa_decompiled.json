{
    "00403810": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.00403810(void)\n\n{\n    ushort uVar1;\n    uint auStack72 [10];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    auStack72[0] = 0x44;\n    sub.kernel32.dll_GetStartupInfoW(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "00403b60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00403b60(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x4bbaec;\n    if (*0x4bbaf0 == 0) {\n        return;\n    }\n    if ((*(*0x4bbaec + -4) & 1) == 0) {\n        *(*0x4bbaec + -4) = *(*0x4bbaec + -4) | 8;\n        piVar3 = iVar5 - *0x4bbaf0;\n        uVar4 = *0x4bbaf0;\n    }\n    else {\n        uVar4 = *(*0x4bbaec + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.00403ac0();\n            uVar4 = *(*0x4bbaec + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x4bbaec - *0x4bbaf0;\n        uVar4 = uVar4 + *0x4bbaf0;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4bbb7c);\n    *piVar3 = uVar4 + 0x4bbb78;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4bbb7c) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4bbb78) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x4bbaf8;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x4bbaf4 = *0x4bbaf4 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 591
    },
    "0040426c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0040426c(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t **in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *puVar11;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint8_t **ppuStack20;\n    \n    ppuVar8 = in_EAX[-1];\n    if ((ppuVar8 & 7) != 0) {\n        if ((ppuVar8 & 5) != 0) {\n            if ((ppuVar8 & 3) != 0) {\n                return -1;\n            }\n            ppuVar8 = in_EAX + -4;\n            fcn.00403c48();\n            if ((in_EAX[-1] & 8) == 0) {\n                puVar11 = NULL;\n                iVar5 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000, *ppuVar8, in_EAX[-3]);\n                ppuVar6 = ppuVar8;\n                if (iVar5 == 0) {\n                    iVar5 = -1;\n                }\n                else {\n                    iVar5 = 0;\n                }\n            }\n            else {\n                uVar7 = in_EAX[-1] & 0xfffffff0;\n                iVar5 = 0;\n                while( true ) {\n                    sub.kernel32.dll_VirtualQuery(ppuVar8, &stack0xffffffe0);\n                    puVar11 = NULL;\n                    ppuVar6 = ppuVar8;\n                    iVar3 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000);\n                    if (iVar3 == 0) break;\n                    if (uVar7 < 0x1d) goto code_r0x00403d73;\n                    uVar7 = uVar7 - 0x1c;\n                    ppuVar8 = ppuVar8 + 7;\n                }\n                iVar5 = -1;\n            }\ncode_r0x00403d73:\n            if (iVar5 == 0) {\n                *puVar11 = ppuVar6;\n                ppuVar6[1] = puVar11;\n            }\n            *0x4bdb78 = 0;\n            return iVar5;\n        }\n        goto code_r0x0040436d;\n    }\n    puVar9 = *ppuVar8;\n    ppuVar6 = in_EAX;\n    if (*0x4bb059 != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar9;\n            *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n            ppuVar6 = in_EAX;\n            if (uVar1 == 0) break;\n            if (*0x4bb989 == '\\0') {\n                in_EAX = NULL;\n                ppuStack20 = 0x404307;\n                ppuVar6 = ppuVar8;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                uVar1 = *puVar9;\n                *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n                ppuVar8 = in_EAX;\n                if (uVar1 == 0) break;\n                ppuStack20 = 0xa;\n                uStack24 = 0x404321;\n                sub.kernel32.dll_Sleep();\n                ppuVar8 = ppuStack20;\n            }\n        }\n    }\n    in_EAX = ppuVar8;\n    ppuVar8 = in_EAX + 5;\n    *ppuVar8 = *ppuVar8 + -1;\n    puVar4 = in_EAX[4];\n    if (*ppuVar8 != NULL) {\n        in_EAX[4] = ppuVar6;\n        ppuVar6[-1] = puVar4 + 1;\n        if (puVar4 != NULL) {\n            *puVar9 = 0;\n            return 0;\n        }\n        puVar4 = *(puVar9 + 8);\n        in_EAX[3] = puVar9;\n        in_EAX[2] = puVar4;\n        *(puVar4 + 0xc) = in_EAX;\n        *(puVar9 + 8) = in_EAX;\n        *puVar9 = 0;\n        return 0;\n    }\n    if (puVar4 == NULL) {\ncode_r0x004042d3:\n        *(puVar9 + 0x14) = puVar4;\n    }\n    else {\n        puVar4 = in_EAX[3];\n        puVar2 = in_EAX[2];\n        *(puVar4 + 8) = puVar2;\n        *(puVar2 + 0xc) = puVar4;\n        puVar4 = NULL;\n        if (*(puVar9 + 0x18) == in_EAX) goto code_r0x004042d3;\n    }\n    *puVar9 = puVar4;\n    ppuVar8 = in_EAX[-1];\ncode_r0x0040436d:\n    puVar9 = ppuVar8 & 0xfffffff0;\n    if (*0x4bb059 != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar10 = *0x4bbae8 == 0;\n            *0x4bbae8 = *0x4bbae8 ^ bVar10 * (*0x4bbae8 ^ 1);\n            if (bVar10) break;\n            if (*0x4bb989 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar10 = *0x4bbae8 == 0;\n                *0x4bbae8 = *0x4bbae8 ^ bVar10 * (*0x4bbae8 ^ 1);\n                if (bVar10) break;\n                ppuStack20 = 0x40435f;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if ((*(puVar9 + -4 + in_EAX) & 1) == 0) {\n        *(puVar9 + -4 + in_EAX) = *(puVar9 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar7 = *(puVar9 + -4 + in_EAX) & 0xfffffff0;\n        puVar9 = puVar9 + uVar7;\n        if (0xb2f < uVar7) {\n            fcn.00403ac0();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar4 = in_EAX[-2];\n        in_EAX = in_EAX - puVar4;\n        puVar9 = puVar9 + puVar4;\n        if (0xb2f < puVar4) {\n            fcn.00403ac0();\n        }\n    }\n    if (puVar9 != 0x13ffe0) {\n        in_EAX[-1] = puVar9 + 3;\n        *(puVar9 + -8 + in_EAX) = puVar9;\n        fcn.00403b00();\n        *0x4bbae8 = 0;\n        return 0;\n    }\n    if (*0x4bbaf0 == 0x13ffe0) {\n        ppuStack20 = in_EAX + -4;\n        puVar9 = *ppuStack20;\n        ppuVar8 = in_EAX[-3];\n        *(puVar9 + 4) = ppuVar8;\n        *ppuVar8 = puVar9;\n        *0x4bbae8 = 0;\n        uStack24 = 0x404419;\n        iVar5 = sub.kernel32.dll_VirtualFree();\n        return -(iVar5 == 0);\n    }\n    fcn.00403b60();\n    in_EAX[0x4fff7] = 0x2;\n    *0x4bbae8 = 0;\n    *0x4bbaec = in_EAX + 0x4fff8;\n    *0x4bbaf0 = 0x13ffe0;\n    return 0;\n}\n",
        "token_count": 1909
    },
    "00404464": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404464(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    \n    piVar1 = *(in_EAX + -4);\n    if ((piVar1 & 7) == 0) {\n        iVar2 = *piVar1;\n        uVar5 = *(iVar2 + 2) - 4;\n        if (uVar5 < param_2) {\n            iVar3 = fcn.00403ee8();\n            if (iVar3 != 0) {\n                if (0x40a2c < param_2) {\n                    *(iVar3 + -8) = param_2;\n                }\n                (**(iVar2 + 0x1c))();\n                fcn.0040426c();\n            }\n            return iVar3;\n        }\n        if (uVar5 <= param_2 * 4 + 0x40) {\n            return in_EAX;\n        }\n        iVar2 = fcn.00403ee8();\n        if (iVar2 != 0) {\n            fcn.00403aa4();\n            fcn.0040426c();\n        }\n        return iVar2;\n    }\n    if ((piVar1 & 5) != 0) {\n        if ((piVar1 & 3) != 0) {\n            return 0;\n        }\n        uVar5 = (*(in_EAX + -4) & 0xfffffff0) - 0x14;\n        if (uVar5 < param_2) {\n            uVar8 = (uVar5 >> 2) + uVar5;\n            uVar6 = param_2;\n            if (param_2 < uVar8) {\n                uVar6 = uVar8;\n            }\n            iVar2 = in_EAX + -0x10 + (*(in_EAX + -4) & 0xfffffff0);\n            sub.kernel32.dll_VirtualQuery(iVar2, &stack0xffffffd4, 0x1c);\n            if ((iStack40 == 0x10000) && (uStack44 = uStack44 & 0xffff0000,  param_2 - uVar5 < uStack44)) {\n                uVar5 = (uVar6 - uVar5) + 0xffff & 0xffff0000;\n                if (uStack44 < uVar5) {\n                    uVar5 = uStack44;\n                }\n                iVar3 = sub.kernel32.dll_VirtualAlloc(iVar2, uVar5, 0x2000, 4);\n                if ((iVar3 != 0) && (iVar2 = sub.kernel32.dll_VirtualAlloc(iVar2, uVar5, 0x1000, 4),  iVar2 != 0)) {\n                    *(in_EAX + -8) = param_2;\n                    *(in_EAX + -4) = uVar5 + *(in_EAX + -4) | 8;\n                    return in_EAX;\n                }\n            }\n            iVar2 = fcn.00403ee8();\n            if (iVar2 != 0) {\n                if (0x40a2c < uVar6) {\n                    *(iVar2 + -8) = param_2;\n                }\n                fcn.00403a74();\n                fcn.0040426c();\n            }\n        }\n        else if (param_2 < uVar5 >> 1) {\n            iVar2 = fcn.00403ee8();\n            if (iVar2 != 0) {\n                if (0x40a2c < param_2) {\n                    *(in_EAX + -8) = param_2;\n                }\n                fcn.00403aa4();\n                fcn.0040426c();\n            }\n        }\n        else {\n            *(in_EAX + -8) = param_2;\n            iVar2 = in_EAX;\n        }\n        return iVar2;\n    }\n    uVar6 = piVar1 & 0xfffffff0;\n    iVar2 = uVar6 + in_EAX;\n    uVar5 = uVar6 - 4;\n    uVar8 = piVar1 & 0xf;\n    if (param_2 <= uVar5) {\n        if (uVar5 <= param_2 * 2) {\n            return in_EAX;\n        }\n        if (param_2 < 0xb2c) {\n            if (param_2 < 0x2cc) {\n                uStack20 = 0x40460d;\n                iVar2 = fcn.00403ee8();\n                if (iVar2 != 0) {\n                    uStack20 = 0x40461e;\n                    fcn.00403aa4();\n                    uStack20 = 0x404625;\n                    fcn.0040426c();\n                }\n                return iVar2;\n            }\n            param_2 = 0xb2c;\n            if (uVar5 < 0xb2d) {\n                return in_EAX;\n            }\n        }\n        uVar5 = (param_2 + 0xd3 & 0xffffff00) + 0x30;\n        uVar6 = uVar6 - uVar5;\n        uStack20 = uVar6;\n        if (*0x4bb059 != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar9 = *0x4bbae8 == 0;\n                *0x4bbae8 = *0x4bbae8 ^ bVar9 * (*0x4bbae8 ^ 1);\n                uVar6 = uStack20;\n                if (bVar9) break;\n                if (*0x4bb989 == '\\0') {\n                    uStack24 = 0;\n                    uStack28 = 0x404588;\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar9 = *0x4bbae8 == 0;\n                    *0x4bbae8 = *0x4bbae8 ^ bVar9 * (*0x4bbae8 ^ 1);\n                    uVar6 = uStack24;\n                    if (bVar9) break;\n                    uStack28 = 10;\n                    uStack32 = 0x4045a0;\n                    sub.kernel32.dll_Sleep();\n                    uStack20 = uStack28;\n                }\n            }\n            uVar8 = *(in_EAX + -4) & 0xf;\n        }\n        *(in_EAX + -4) = uVar8 | uVar5;\n        uVar8 = *(iVar2 + -4);\n        if ((uVar8 & 1) == 0) {\n            *(iVar2 + -4) = uVar8 | 8;\n        }\n        else {\n            uVar8 = uVar8 & 0xfffffff0;\n            uVar6 = uVar6 + uVar8;\n            iVar2 = iVar2 + uVar8;\n            if (0xb2f < uVar8) {\n                uStack20 = 0x4045da;\n                fcn.00403ac0();\n            }\n        }\n        *(iVar2 + -8) = uVar6;\n        *(in_EAX + -4 + uVar5) = uVar6 + 3;\n        if (0xb2f < uVar6) {\n            uStack20 = 0x4045f6;\n            fcn.00403b00();\n        }\n        *0x4bbae8 = 0;\n        return in_EAX;\n    }\n    if ((*(iVar2 + -4) & 1) != 0) {\n        uVar4 = *(iVar2 + -4) & 0xfffffff0;\n        uVar6 = uVar5 + uVar4;\n        if (param_2 <= uVar6) {\n            uStack20 = uVar5;\n            if (*0x4bb059 == '\\0') {\ncode_r0x004046a9:\n                uStack20 = uVar5;\n                if (0xb2f < uVar4) {\n                    uStack28 = 0x4046b9;\n                    uStack24 = param_2;\n                    fcn.00403ac0();\n                    param_2 = uStack24;\n                }\n                uStack20 = (uStack20 >> 2) + uStack20;\n                uVar5 = param_2 + 0xd3 + (uStack20 - param_2 & (uStack20 < param_2) - 1) & 0xffffff00;\n                uVar4 = uVar5 + 0x30;\n                uVar7 = (uVar6 + 4) - uVar4;\n                if (uVar6 + 4 < uVar4 || uVar7 == 0) {\n                    *(in_EAX + uVar6) = *(in_EAX + uVar6) & 0xfffffff7;\n                    uVar4 = uVar6 + 4;\n                }\n                else {\n                    *(in_EAX + -4 + uVar6) = uVar7;\n                    *(uVar5 + 0x2c + in_EAX) = uVar7 + 3;\n                    if (0xb2f < uVar7) {\n                        uStack20 = 0x404708;\n                        fcn.00403b00();\n                    }\n                }\n                *(in_EAX + -4) = uVar4 | uVar8;\n                *0x4bbae8 = 0;\n                return in_EAX;\n            }\n            while( true ) {\n                LOCK();\n                bVar9 = *0x4bbae8 == 0;\n                *0x4bbae8 = *0x4bbae8 ^ bVar9 * (*0x4bbae8 ^ 1);\n                uVar5 = uStack20;\n                if (bVar9) break;\n                if (*0x4bb989 == '\\0') {\n                    uStack28 = 0;\n                    uStack32 = 0x404671;\n                    uStack24 = param_2;\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar9 = *0x4bbae8 == 0;\n                    *0x4bbae8 = *0x4bbae8 ^ bVar9 * (*0x4bbae8 ^ 1);\n                    uVar5 = uStack24;\n                    param_2 = uStack28;\n                    if (bVar9) break;\n                    uStack32 = 10;\n                    uStack36 = 0x40468b;\n                    sub.kernel32.dll_Sleep();\n                    uStack20 = uStack28;\n                    param_2 = uStack32;\n                }\n            }\n            uVar8 = *(in_EAX + -4) & 0xf;\n            if ((*(iVar2 + -4) & 1) != 0) {\n                uVar4 = *(iVar2 + -4) & 0xfffffff0;\n                uVar6 = uVar5 + uVar4;\n                if (param_2 <= uVar6) goto code_r0x004046a9;\n            }\n            *0x4bbae8 = 0;\n        }\n    }\n    uVar5 = (uVar5 >> 2) + uVar5;\n    uStack24 = 0x404740;\n    uStack20 = param_2;\n    iVar2 = fcn.00403ee8();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (0x40a2c < (uVar5 - param_2 & (uVar5 < param_2) - 1) + param_2) {\n        *(iVar2 + -8) = uStack20;\n    }\n    uStack20 = 0x40475d;\n    fcn.00403a74();\n    uStack20 = 0x404764;\n    fcn.0040426c();\n    return iVar2;\n}\n",
        "token_count": 2728
    },
    "00404970": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404970(int32_t lpBuffer)\n\n{\n    uint32_t in_EAX;\n    \n    if ((0xffff < in_EAX) && ((in_EAX & 3) == 0)) {\n        if ((in_EAX < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX + 4)) {\n            *(lpBuffer + -0x10) = 0;\n            sub.kernel32.dll_VirtualQuery();\n        }\n        if ((((3 < *(lpBuffer + -0x10)) && (*(lpBuffer + -0xc) == 0x1000)) && ((*(lpBuffer + -8) & 0xf6) != 0)) &&\n           ((*(lpBuffer + -7) & 1) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "00404b9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b9c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint16_t *var_19h;\n    uint8_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x4b7080U >> 5) * 0x800;\n    fcn.00404898();\n    do {\n        if (var_24h < var_20h) {\n            return;\n        }\n        if (((*(var_20h - 4) & 1) == 0) && (cVar3 = fcn.00404b44(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar7 = 0;\n            iVar5 = fcn.00404a68();\n            if (iVar5 == 0) {\n                if (*(var_20h + 4) < 0x100) {\n                    var_28h = *(var_20h + 8);\n                    uVar6 = *(var_20h + 2);\n                    if ((((uVar6 == 1) || (uVar6 == 2)) && (0 < var_28h)) && (var_28h < (*(*in_EAX + 2) - 0x10) / uVar6)\n                       ) {\n                        bVar4 = true;\n                        if (uVar6 == 1) {\n                            var_14h = var_20h + 0xc;\n                            if (0 < var_28h) {\n                                do {\n                                    if ((bVar4) && (0x1f < *var_14h)) {\n                                        bVar4 = true;\n                                    }\n                                    else {\n                                        bVar4 = false;\n                                    }\n                                    var_14h = var_14h + 1;\n                                    var_28h = var_28h + -1;\n                                } while (var_28h != 0);\n                            }\n                            if ((bVar4) && (*var_14h == 0)) {\n                                iVar7 = 1;\n                            }\n                        }\n                        else {\n                            *NULL = var_20h + 0xc;\n                            if (0 < var_28h) {\n                                do {\n                                    if ((bVar4) && (0x1f < *stack0xffffffe4)) {\n                                        bVar4 = true;\n                                    }\n                                    else {\n                                        bVar4 = false;\n                                    }\n                                    unique0x00007a80 = stack0xffffffe4 + 1;\n                                    var_28h = var_28h + -1;\n                                } while (var_28h != 0);\n                            }\n                            if ((bVar4) && (*stack0xffffffe4 == 0)) {\n                                iVar7 = 2;\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                iVar7 = 3;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar7 * 8)) || (*(iVar2 + iVar7 * 8) == 0)) break;\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < 0x100);\n                if (iVar7 < 0x100) {\n                    *(iVar2 + iVar7 * 8) = iVar5;\n                }\n                else {\n                    iVar7 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar7 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_20h = var_20h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 896
    },
    "00404d58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00404d58(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uchar auStackY131113 [2049];\n    int32_t aiStackY129064 [4096];\n    int32_t *piStackY112680;\n    uint16_t *puStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26100];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00405884();\n    fcn.00405884();\n    fcn.00405884();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x4bbadc; iVar6 = *0x4bdb80,  iVar3 != 0x4bbad8; iVar3 = *(iVar3 + 4)) {\n        iVar6 = fcn.00404858();\n        while (iVar6 != 0) {\n            uVar1 = *(iVar6 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.00404b44();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129064[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.00404b9c(&stack0xfffffffc);\n                }\n            }\n            iVar6 = fcn.00404834();\n        }\n    }\n    while ((iVar6 != 0x4bdb7c && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.00404b44();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129064[iStackY112652] = (*(iVar6 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar6 = *(iVar6 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        fcn.00407ef0();\n        puVar4 = fcn.00404924();\n        iStackY112660 = 0x37;\n        puStackY112676 = 0x4b7082;\n        piStackY112680 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112676 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar5 = piStackY112680;\n            do {\n                if (auStackY131113 < puVar4) break;\n                if (*piVar5 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        fcn.00407ef0();\n                        puVar4 = fcn.00404924();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar4 = 0xd;\n                        puVar4[1] = 10;\n                        puVar4 = fcn.004048d4();\n                        *puVar4 = 0x20;\n                        puVar4[1] = 0x2d;\n                        puVar4[2] = 0x20;\n                        fcn.004048d4();\n                        fcn.00407ef0();\n                        fcn.00404924();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar4 = 0x2c;\n                        puVar4[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        fcn.00407ef0();\n                        puVar4 = fcn.00404924();\n                    }\n                    else if (iVar3 == 1) {\n                        fcn.00407ef0();\n                        puVar4 = fcn.00404924();\n                    }\n                    else if (iVar3 == 2) {\n                        fcn.00407ef0();\n                        puVar4 = fcn.00404924();\n                    }\n                    else {\n                        puVar4 = fcn.0040493c();\n                    }\n                    *puVar4 = 0x20;\n                    puVar4[1] = 0x78;\n                    puVar4[2] = 0x20;\n                    puVar4 = fcn.004048d4();\n                }\n                iVar3 = iVar3 + -1;\n                piVar5 = piVar5 + -2;\n            } while (iVar3 != -1);\n            if (((cStackY112654 != '\\0') || (*0x4bbad6 == '\\0')) || ((iStackY112672 + 4U & 0xf) == 0)) {\n                iStackY112668 = iStackY112672;\n            }\n            piStackY112680 = piStackY112680 + 0x200;\n            puStackY112676 = puStackY112676 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar4 = 0xd;\n                puVar4[1] = 10;\n                puVar4[2] = 0xd;\n                puVar4[3] = 10;\n            }\n            fcn.00407ef0();\n            puVar4 = fcn.00404924();\n            iVar6 = 0;\n            piStackY112680 = aiStackY129064;\n            iVar3 = iStackY112652;\n            do {\n                if (iVar6 != 0) {\n                    *puVar4 = 0x2c;\n                    puVar4[1] = 0x20;\n                }\n                puVar4 = fcn.004048d4();\n                if (auStackY131113 < puVar4) break;\n                iVar6 = iVar6 + 1;\n                piStackY112680 = piStackY112680 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.00407ef0();\n        fcn.00404924();\n        fcn.004047b0();\n    }\n    return;\n}\n",
        "token_count": 1631
    },
    "00406688": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00406688(uint param_1, uint32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    \n    uVar6 = in_EAX[4];\n    do {\n        cVar2 = fcn.00406b30();\n        if (cVar2 != '\\0') {\n            return cVar2;\n        }\n        if (param_2 == 0) {\n            return false;\n        }\n        bVar1 = false;\n        if (0 < uVar6) {\n            iVar3 = sub.kernel32.dll_GetTickCount();\n            for (; 0 < uVar6; uVar6 = uVar6 - 1) {\n                if ((param_2 != 0xffffffff) && (iVar4 = sub.kernel32.dll_GetTickCount(),  param_2 <= iVar4 - iVar3)) {\n                    return false;\n                }\n                if (1 < *in_EAX) break;\n                if (*in_EAX == 0) {\n                    uVar5 = 0;\n                    LOCK();\n                    if (*in_EAX == 0) {\n                        *in_EAX = 1;\n                    }\n                    else {\n                        uVar5 = *in_EAX;\n                    }\n                    if (uVar5 == 0) {\n                        uVar6 = sub.kernel32.dll_GetCurrentThreadId();\n                        in_EAX[2] = uVar6;\n                        in_EAX[1] = 1;\n                        return true;\n                    }\n                }\n                fcn.00406368();\n            }\n            if (param_2 != 0xffffffff) {\n                iVar4 = sub.kernel32.dll_GetTickCount();\n                if (param_2 <= iVar4 - iVar3) {\n                    return false;\n                }\n                param_2 = param_2 - (iVar4 - iVar3);\n            }\n        }\n        while (uVar5 = *in_EAX,  uVar5 != 0) {\n            LOCK();\n            if (uVar5 == *in_EAX) {\n                *in_EAX = uVar5 + 2;\n                uVar7 = uVar5;\n            }\n            else {\n                uVar7 = *in_EAX;\n            }\n            if (uVar5 == uVar7) goto code_r0x00406768;\n        }\n    } while( true );\ncode_r0x00406768:\n    iVar3 = sub.kernel32.dll_GetTickCount();\n    fcn.0040688c();\n    iVar4 = (**(*0x4bb8f8 + 0x10))();\n    bVar8 = iVar4 == 0;\n    if (param_2 != 0xffffffff) {\n        iVar4 = sub.kernel32.dll_GetTickCount();\n        if (iVar4 - iVar3 < param_2) {\n            param_2 = param_2 - (iVar4 - iVar3);\n        }\n        else {\n            param_2 = 0;\n        }\n    }\n    if (bVar8) {\n        do {\n            uVar6 = *in_EAX;\n            if ((uVar6 & 1) != 0) goto code_r0x004067f1;\n            LOCK();\n            if (uVar6 == *in_EAX) {\n                *in_EAX = uVar6 - 2 | 1;\n                uVar5 = uVar6;\n            }\n            else {\n                uVar5 = *in_EAX;\n            }\n        } while (uVar6 != uVar5);\n        bVar1 = true;\n    }\n    else {\n        do {\n            uVar6 = *in_EAX;\n            LOCK();\n            if (uVar6 == *in_EAX) {\n                *in_EAX = uVar6 - 2;\n                uVar5 = uVar6;\n            }\n            else {\n                uVar5 = *in_EAX;\n            }\n        } while (uVar6 != uVar5);\n        bVar1 = true;\n    }\ncode_r0x004067f1:\n    if (bVar1) {\n        if (bVar8) {\n            uVar6 = sub.kernel32.dll_GetCurrentThreadId();\n            in_EAX[2] = uVar6;\n            in_EAX[1] = 1;\n        }\n        return bVar8;\n    }\n    goto code_r0x00406768;\n}\n",
        "token_count": 973
    },
    "0040690c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nulong fcn.0040690c(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uStack12;\n    \n    puVar3 = in_EAX + *(*in_EAX + -0x34) + -4;\n    uStack12 = *puVar3;\n    uVar2 = uStack12 & 0xfffffffe;\n    if (uVar2 == 0) {\n        uVar1 = fcn.0040653c();\n        do {\n            LOCK();\n            if (uStack12 == *puVar3) {\n                *puVar3 = uStack12 & 1 | uVar1;\n            }\n            uStack12 = *puVar3;\n            uVar2 = uStack12 & 0xfffffffe;\n        } while (uVar2 == 0);\n        if (uVar1 != uVar2) {\n            fcn.0040426c();\n        }\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 237
    },
    "0040c4d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c4d8(uint param_1, int32_t *param_2)\n\n{\n    if (param_2 != NULL) {\n        if ((*(param_2 + *(*param_2 + -0x34) + -4) & 1) == 0) {\n            fcn.0040c4cc();\n        }\n        fcn.0040c338();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0040d218": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d218(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t *puVar7;\n    uint *var_58h;\n    uint32_t *var_54h;\n    int32_t *var_50h;\n    uint32_t *lpLibFileName;\n    uint32_t var_48h;\n    uint32_t lpProcName;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    puVar5 = 0x4b7c40;\n    puVar6 = &fcn.0040d218::var_34h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    var_34h = *arg_8h;\n    var_30h = fcn.0040d6c8(arg_8h[1]);\n    var_2ch = fcn.0040d6d8(arg_8h[2]);\n    var_28h = fcn.0040d6e8(arg_8h[3]);\n    var_24h = fcn.0040d6f8(arg_8h[4]);\n    var_20h = fcn.0040d6f8(arg_8h[5]);\n    var_1ch = fcn.0040d6f8(arg_8h[6]);\n    var_18h = arg_8h[7];\n    puVar5 = 0x4b7c60;\n    puVar6 = &fcn.0040d218::var_58h;\n    for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    var_54h = arg_8h;\n    var_50h = arg_ch;\n    lpLibFileName = var_30h;\n    if ((var_34h & 1) == 0) {\n        var_4h = &fcn.0040d218::var_58h;\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_RaiseException(0xc06d0057, 0, 1, &fcn.0040d218::var_4h);\n    }\n    var_8h = arg_ch - var_28h;\n    iVar4 = *var_2ch;\n    if (var_8h < 0) {\n        var_8h = var_8h + 3;\n    }\n    var_8h = var_8h >> 2;\n    puVar7 = var_8h * 4 + var_24h;\n    var_48h = (*(puVar7 + 3) & 0x80) == 0;\n    if (var_48h == 0) {\n        lpProcName = *puVar7 & 0xffff;\n    }\n    else {\n        iVar1 = fcn.0040d708(*puVar7);\n        lpProcName = iVar1 + 2;\n    }\n    iVar1 = 0;\n    if ((*0x4be640 != NULL) && (iVar1 = (**0x4be640)(0, &fcn.0040d218::var_58h),  iVar1 != 0)) goto code_r0x0040d4ca;\n    if (iVar4 == 0) {\n        if (*0x4be640 != NULL) {\n            iVar4 = (**0x4be640)(1, &fcn.0040d218::var_58h);\n        }\n        if (iVar4 == 0) {\n            var_54h = lpLibFileName;\n            iVar4 = sub.kernel32.dll_LoadLibraryA();\n        }\n        if (iVar4 == 0) {\n            var_58h = 0x40d385;\n            var_38h = func_0x0040cbe0();\n            if (*0x4be644 != NULL) {\n                var_58h = &fcn.0040d218::var_58h;\n                iVar4 = (**0x4be644)(3);\n            }\n            if (iVar4 == 0) {\n                var_ch = &fcn.0040d218::var_58h;\n                var_58h = &fcn.0040d218::var_ch;\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_RaiseException(0xc06d007e, 0, 1);\n            }\n        }\n        var_58h = iVar4;\n        iVar2 = fcn.0040cba0(var_2ch, iVar4);\n        if (iVar4 == iVar2) {\n            func_0x0040cbb0(iVar4);\n        }\n        else if ((arg_8h[6] != 0) && (var_10h = sub.kernel32.dll_LocalAlloc(0x40, 8),  var_10h != NULL)) {\n            var_10h[1] = arg_8h;\n            *var_10h = *0x4b7c3c;\n            *0x4b7c3c = var_10h;\n        }\n    }\n    var_40h = iVar4;\n    if (*0x4be640 != NULL) {\n        iVar1 = (**0x4be640)(2, &fcn.0040d218::var_58h);\n    }\n    if (iVar1 == 0) {\n        if ((((arg_8h[5] == 0) || (arg_8h[7] == 0)) || (piVar3 = *(iVar4 + 0x3c) + iVar4,  *piVar3 != 0x4550)) ||\n           (((piVar3[2] != var_18h || (piVar3[0xd] != iVar4)) || (iVar1 = *(var_20h + var_8h * 4),  iVar1 == 0)))) {\n            iVar1 = func_0x0040cbf8(iVar4, lpProcName);\n            goto code_r0x0040d47b;\n        }\n    }\n    else {\ncode_r0x0040d47b:\n        if (iVar1 == 0) {\n            var_38h = func_0x0040cbe0();\n            if (*0x4be644 != NULL) {\n                iVar1 = (**0x4be644)(4, &fcn.0040d218::var_58h);\n            }\n            if (iVar1 == 0) {\n                var_14h = &fcn.0040d218::var_58h;\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_RaiseException(0xc06d007f, 0, 1, &fcn.0040d218::var_14h);\n            }\n        }\n    }\n    *arg_ch = iVar1;\ncode_r0x0040d4ca:\n    if (*0x4be640 != NULL) {\n        var_38h = 0;\n        var_40h = iVar4;\n        var_3ch = iVar1;\n        (**0x4be640)(5, &fcn.0040d218::var_58h);\n    }\n    return iVar1;\n}\n",
        "token_count": 1817
    },
    "0040dfa8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dfa8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t *var_ch;\n    char var_5h;\n    int32_t *var_4h;\n    \n    uStack20 = 0x40dfbb;\n    var_4h = param_2;\n    var_5h = fcn.00406b0c();\n    if (var_5h != '\\0') {\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        if ((*(*var_4h + 0xc) & 1) == 0) {\n            piVar1 = *var_4h + 8;\n            *piVar1 = *piVar1 + -1;\n        }\n        *in_FS_OFFSET = uStack28;\n        uStack20 = 0x40e027;\n        if (*(*var_4h + 8) == 0) {\n            uStack24 = 0x40dffd;\n            fcn.00406868();\n            var_ch = var_4h;\n            *var_4h = 0;\n            uStack24 = 0x40e014;\n            uVar2 = fcn.00405ce8();\n        }\n        else {\n            uStack24 = 0x40e01b;\n            uVar2 = fcn.00406868();\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 364
    },
    "004246e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004246e4(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    puVar2 = 0x4c090c;\n    do {\n        iVar3 = 8;\n        uVar1 = uVar4;\n        do {\n            if ((uVar1 & 1) == 0) {\n                uVar1 = uVar1 >> 1;\n            }\n            else {\n                uVar1 = uVar1 >> 1 ^ 0xedb88320;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        *puVar2 = uVar1;\n        uVar4 = uVar4 + 1;\n        puVar2 = puVar2 + 1;\n    } while (uVar4 != 0x100);\n    return;\n}\n",
        "token_count": 212
    },
    "004255b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.004255b8(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uStack20;\n    \n    uVar2 = 1;\n    uStack20 = param_1;\n    do {\n        uVar3 = uStack20 & 0xff;\n        uStack20 = uStack20 & 0xffffff00 | uStack20 << 1;\n        uVar1 = fcn.0042547c();\n        uVar2 = uVar2 * 2 | uVar1;\n        if (uVar1 != uVar3 >> 7) goto joined_r0x004255ff;\n    } while (uVar2 < 0x100);\ncode_r0x00425623:\n    return CONCAT44(uStack20, uVar2);\njoined_r0x004255ff:\n    for (; uVar2 < 0x100; uVar2 = uVar1 | uVar2 * 2) {\n        uVar1 = fcn.0042547c();\n    }\n    goto code_r0x00425623;\n}\n",
        "token_count": 263
    },
    "00425724": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00425978)\n// WARNING: Removing unreachable block (ram,0x0042596a)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00425724(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_EAX;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t in_ECX;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    int32_t var_6ch;\n    ushort *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar var_15h;\n    uint32_t var_14h;\n    ushort *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_10h = in_EAX[4];\n    var_14h = 0;\n    var_1ch = (1 << (in_EAX[2] & 0x1f)) + -1;\n    var_20h = (1 << (in_EAX[1] & 0x1f)) + -1;\n    var_24h = *in_EAX;\n    uVar12 = in_EAX[0xd];\n    iVar7 = in_EAX[0x11];\n    var_28h = in_EAX[0xe];\n    var_2ch = in_EAX[0xf];\n    var_30h = in_EAX[0x10];\n    var_34h = in_EAX[0x12];\n    var_38h = in_EAX[0xb];\n    var_3ch = in_EAX[0xc];\n    var_40h = in_EAX[7];\n    var_44h = in_EAX[3];\n    uVar13 = in_EAX[10];\n    uVar2 = in_EAX[8];\n    uVar3 = in_EAX[9];\n    uVar4 = in_EAX[5];\n    uVar5 = in_EAX[6];\n    *arg_8h = 0;\n    if (var_34h == 0xffffffff) {\n        var_70h = 0;\n    }\n    else {\n        if (var_44h == 0) {\n            var_40h = &var_48h;\n            var_44h = 1;\n            var_48h._0_1_ = *(in_EAX + 0x13);\n        }\n        var_ch = in_ECX;\n        var_4h = in_EAX;\n        if (var_34h != 0xfffffffe) {\ncode_r0x004258cd:\n            var_68h = var_ch + var_14h;\n            while ((var_34h != 0 && (var_14h < arg_ch))) {\n                uVar9 = uVar13 - uVar12;\n                if (var_44h <= uVar9) {\n                    uVar9 = uVar9 + var_44h;\n                }\n                uVar1 = *(var_40h + uVar9);\n                *(var_40h + uVar13) = uVar1;\n                *var_68h = uVar1;\n                var_14h = var_14h + 1;\n                var_68h = var_68h + 1;\n                uVar13 = uVar13 + 1;\n                if (uVar13 == var_44h) {\n                    uVar13 = 0;\n                }\n                var_34h = var_34h - 1;\n            }\n            if (uVar13 == 0) {\n                var_15h = *(var_40h + (var_44h - 1));\n            }\n            else {\n                var_15h = *(var_40h + (uVar13 - 1));\n            }\ncode_r0x00425940:\n            var_68h = var_ch + var_14h;\njoined_r0x00425952:\n            if (arg_ch <= var_14h) {\ncode_r0x00425d30:\n                var_4h[8] = uVar2;\n                var_4h[9] = uVar3;\n                var_4h[10] = uVar13;\n                var_4h[0xb] = var_38h + var_14h;\n                var_4h[0xc] = var_3ch;\n                var_4h[0xd] = uVar12;\n                var_4h[0xe] = var_28h;\n                var_4h[0xf] = var_2ch;\n                var_4h[0x10] = var_30h;\n                var_4h[0x11] = iVar7;\n                var_4h[0x12] = var_34h;\n                *(var_4h + 0x13) = var_48h;\n                var_4h[5] = uVar4;\n                var_4h[6] = uVar5;\n                *arg_8h = var_14h;\n                return 0;\n            }\n            iVar8 = fcn.0042547c();\n            if (iVar8 == 0) {\n                if (iVar7 < 7) {\n                    var_15h = fcn.0042558c();\n                }\n                else {\n                    var_15h = fcn.004255b8();\n                }\n                *var_68h = var_15h;\n                var_14h = var_14h + 1;\n                var_68h = var_68h + 1;\n                if (var_3ch < var_44h) {\n                    var_3ch = var_3ch + 1;\n                }\n                *(var_40h + uVar13) = var_15h;\n                uVar13 = uVar13 + 1;\n                if (uVar13 == var_44h) {\n                    uVar13 = 0;\n                }\n                if (iVar7 < 4) {\n                    iVar7 = 0;\n                }\n                else if (iVar7 < 10) {\n                    iVar7 = iVar7 + -3;\n                }\n                else {\n                    iVar7 = iVar7 + -6;\n                }\n                goto joined_r0x00425952;\n            }\n            iVar8 = fcn.0042547c();\n            if (iVar8 == 1) {\n                iVar8 = fcn.0042547c();\n                if (iVar8 == 0) {\n                    iVar8 = fcn.0042547c();\n                    uVar9 = uVar12;\n                    uVar6 = var_28h;\n                    if (iVar8 == 0) goto code_r0x00425acd;\n                }\n                else {\n                    iVar8 = fcn.0042547c();\n                    uVar9 = var_28h;\n                    uVar6 = uVar12;\n                    if (iVar8 != 0) {\n                        iVar8 = fcn.0042547c();\n                        uVar12 = var_30h;\n                        uVar9 = var_2ch;\n                        if (iVar8 != 0) {\n                            var_30h = var_2ch;\n                            uVar9 = uVar12;\n                        }\n                        var_2ch = var_28h;\n                    }\n                }\n                var_28h = uVar6;\n                uVar12 = uVar9;\n                var_34h = fcn.0042562c();\n                if (iVar7 < 7) {\n                    iVar7 = 8;\n                }\n                else {\n                    iVar7 = 0xb;\n                }\n            }\n            else {\n                var_30h = var_2ch;\n                var_2ch = var_28h;\n                if (iVar7 < 7) {\n                    iVar7 = 7;\n                }\n                else {\n                    iVar7 = 10;\n                }\n                var_28h = uVar12;\n                var_34h = fcn.0042562c();\n                uVar12 = fcn.00425504();\n                if (3 < uVar12) {\n                    iVar8 = (uVar12 & 1 | 2) << ((uVar12 >> 1) - 1U & 0x1f);\n                    if (uVar12 < 0xe) {\n                        iVar10 = fcn.00425548();\n                        uVar12 = iVar8 + iVar10;\n                    }\n                    else {\n                        iVar10 = fcn.0042541c();\n                        iVar11 = fcn.00425548();\n                        uVar12 = iVar8 + iVar10 * 0x10 + iVar11;\n                    }\n                }\n                uVar12 = uVar12 + 1;\n                if (uVar12 == 0) {\n                    var_34h = 0xffffffff;\n                    goto code_r0x00425d30;\n                }\n            }\n            var_34h = var_34h + 2;\n            if (var_3ch < uVar12) {\n                return 1;\n            }\n            if (var_34h < var_44h - var_3ch) {\n                var_3ch = var_3ch + var_34h;\n            }\n            else {\n                var_3ch = var_44h;\n            }\n            do {\n                uVar9 = uVar13 - uVar12;\n                if (var_44h <= uVar9) {\n                    uVar9 = uVar9 + var_44h;\n                }\n                var_15h = *(var_40h + uVar9);\n                *(var_40h + uVar13) = var_15h;\n                uVar13 = uVar13 + 1;\n                if (uVar13 == var_44h) {\n                    uVar13 = 0;\n                }\n                var_34h = var_34h - 1;\n                *var_68h = var_15h;\n                var_14h = var_14h + 1;\n                var_68h = var_68h + 1;\n            } while ((var_34h != 0) && (var_14h < arg_ch));\n            goto joined_r0x00425952;\n        }\n        iVar7 = 0x300 << (in_EAX[1] + var_24h & 0x1fU);\n        var_50h = 0;\n        var_68h = var_10h;\n        if (iVar7 != -0x736) {\n            do {\n                *var_68h = 0x400;\n                var_50h = var_50h + 1;\n                var_68h = var_68h + 1;\n            } while (var_50h < iVar7 + 0x736U);\n        }\n        var_30h = 1;\n        var_2ch = 1;\n        var_28h = 1;\n        uVar12 = 1;\n        var_38h = 0;\n        var_3ch = 0;\n        iVar7 = 0;\n        uVar13 = 0;\n        *(var_40h + (var_44h - 1)) = 0;\n        fcn.004253dc();\n        if (var_70h == 0) {\n            if (var_6ch == 0) {\n                var_34h = 0;\n                goto code_r0x004258cd;\n            }\n            var_70h = 1;\n        }\n    }\n    return var_70h;\ncode_r0x00425acd:\n    if (var_3ch == 0) {\n        return 1;\n    }\n    if (iVar7 < 7) {\n        iVar7 = 9;\n    }\n    else {\n        iVar7 = 0xb;\n    }\n    uVar9 = uVar13 - uVar12;\n    if (var_44h <= uVar9) {\n        uVar9 = uVar9 + var_44h;\n    }\n    var_15h = *(var_40h + uVar9);\n    *(var_40h + uVar13) = var_15h;\n    uVar13 = uVar13 + 1;\n    if (uVar13 == var_44h) {\n        uVar13 = 0;\n    }\n    *var_68h = var_15h;\n    var_14h = var_14h + 1;\n    if (var_3ch < var_44h) {\n        var_3ch = var_3ch + 1;\n    }\n    goto code_r0x00425940;\n}\n",
        "token_count": 2988
    },
    "00452440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452440(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45250c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uVar1 = (**(*in_EAX + 0xc))();\n    if ((uVar1 & 0x20) == 0) {\n        uVar1 = (**(*in_EAX + 0xc))();\n        if ((uVar1 & 2) == 0) {\n            uVar1 = (**(*in_EAX + 0xc))();\n            if ((uVar1 & 1) == 0) {\n                fcn.00407a20();\n            }\n            else {\n                fcn.00407e00();\n            }\n        }\n        else {\n            fcn.00407e00();\n        }\n    }\n    else {\n        fcn.00407e00();\n    }\n    (**(*in_EAX + 8))();\n    fcn.004086e4();\n    iVar2 = (**(*in_EAX + 0x10))();\n    if (iVar2 != 0) {\n        piVar3 = (**(*in_EAX + 0x10))(0x452574, *param_2);\n        (**(*piVar3 + -0x24))();\n        uStack32 = 0;\n        fcn.004087c4();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x452513;\n    uStack28 = 0x45250b;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 444
    },
    "004596e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004596e8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.004552d0(arg_8h);\n    if (((in_ECX << 0x18 & 0x1000000U) != 0) && ((*0x401100 == NULL || (**0x401100 != '\\a')))) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    if (((in_ECX << 0x18 & 0x2000000U) != 0) && ((*0x433818 == NULL || (**0x433818 != '\\a')))) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    var_1h._0_1_ = in_ECX;\n    *(in_EAX + 0x30) = var_1h;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 355
    },
    "0046776c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046776c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    \n    bVar2 = false;\n    if (param_2 != 0) {\n        iVar1 = **(in_EAX + 0xb + *(in_EAX + 1));\n        puVar7 = iVar1 + 0xf + *(iVar1 + 1);\n        iVar1 = *(iVar1 + 7 + *(iVar1 + 1));\n        iVar4 = 0;\n        do {\n            uVar5 = *puVar7;\n            if (uVar5 == *(param_2 + -4)) {\n                while (!bVar2) {\n                    uVar6 = *((uVar5 - 1) + param_2);\n                    if ((uVar6 & 0x80) != 0) {\n                        bVar2 = true;\n                        break;\n                    }\n                    uVar6 = uVar6 ^ puVar7[uVar5];\n                    if ((uVar6 & 0x80) != 0) break;\n                    if ((uVar6 & 0xdf) != 0) goto code_r0x004677cf;\n                    uVar5 = uVar5 - 1;\n                    if (uVar5 == 0) {\n                        return iVar4;\n                    }\n                }\n                cVar3 = fcn.004676f4();\n                if (cVar3 != '\\0') {\n                    return iVar4;\n                }\ncode_r0x004677cf:\n                uVar5 = *puVar7;\n            }\n            iVar4 = iVar4 + 1;\n            puVar7 = puVar7 + uVar5 + 1;\n        } while (iVar4 <= iVar1);\n    }\n    return -1;\n}\n",
        "token_count": 439
    },
    "004678f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004678f4(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    uchar uVar6;\n    uint8_t uVar8;\n    uchar *puVar7;\n    uchar *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    \n    bVar3 = false;\n    if (in_EAX == 0) {\n        return;\n    }\n    puVar7 = param_2;\n    if (param_2 != NULL) {\n        puVar7 = CONCAT11(*param_2, param_2[-4]);\n    }\n    do {\n        iVar1 = in_EAX + 2 + *(in_EAX + 1);\n        uVar10 = *(iVar1 + 10);\n        uVar11 = *(iVar1 + 0xb + uVar10);\n        if (uVar11 != 0) {\n            iVar5 = iVar1 + 0xd + uVar10;\n            do {\n                if (bVar3) {\ncode_r0x0046798c:\n                    uVar10 = uVar10 & 0xffff0000;\n                    cVar4 = fcn.004676f4();\n                    uVar6 = param_2[-4];\n                    if (cVar4 != '\\0') {\n                        return;\n                    }\ncode_r0x0046795d:\n                    puVar7 = CONCAT11(*param_2, uVar6) & 0xdfff;\n                    puVar9 = uVar10 & 0xffffff00 | *(iVar5 + 0x1a);\n                }\n                else {\n                    uVar2 = *(iVar5 + 0x1a);\n                    uVar10 = uVar10 & 0xffff0000;\n                    if ((uVar2 & 0x8000) != 0) goto code_r0x0046798c;\n                    if ((puVar7 & 0x8000) != 0) {\ncode_r0x00467985:\n                        bVar3 = true;\n                        goto code_r0x0046798c;\n                    }\n                    puVar7 = puVar7 & 0xdfff;\n                    puVar9 = uVar10 | uVar2 & 0xffffdfff;\n                    if (puVar9 == puVar7) {\n                        uVar10 = uVar10 | uVar2 & 0xffff00ff;\n                        while( true ) {\n                            uVar6 = SUB41(puVar7, 0);\n                            if ((param_2[uVar10 - 1] & 0x80) != 0) break;\n                            uVar8 = param_2[uVar10 - 1] ^ *(iVar5 + 0x1a + uVar10);\n                            puVar7 = CONCAT11(uVar8, uVar6);\n                            if ((uVar8 & 0x80) != 0) goto code_r0x0046798c;\n                            if ((uVar8 & 0xdf) != 0) goto code_r0x0046795d;\n                            uVar10 = uVar10 - 1;\n                            if (uVar10 == 0) {\n                                return;\n                            }\n                        }\n                        goto code_r0x00467985;\n                    }\n                }\n                uVar10 = puVar9 & 0xffff00ff;\n                uVar11 = uVar11 - 1;\n                iVar5 = iVar5 + 0x1b + uVar10;\n            } while (uVar11 != 0);\n        }\n        if (*(iVar1 + 4) == NULL) {\n            return;\n        }\n        in_EAX = **(iVar1 + 4);\n    } while( true );\n}\n",
        "token_count": 832
    },
    "0046bcb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\ncode * __fastcall fcn.0046bcb8(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t in_EAX;\n    code *pcVar2;\n    \n    if (param_2 == NULL) {\n        if (in_EAX == '\\0') {\n            pcVar2 = fcn.0046b090();\n        }\n        else if (in_EAX == '\\x01') {\n            pcVar2 = fcn.0046b0c8();\n        }\n        else {\n            fcn.0040554c();\n            pcVar2 = NULL;\n        }\n    }\n    else {\n        puVar1 = (in_EAX & 0x7f) * 0xb8 + 0x4ba250 + *param_2 * 8;\n        pcVar2 = *(puVar1 + 4);\n        if ((*puVar1 & 2) != 0) {\n            pcVar2 = (*pcVar2)();\n        }\n        if ((*puVar1 & 1) != 0) {\n            pcVar2 = fcn.0046a994();\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 260
    },
    "00490880": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490880(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -0x11) & 1) == 0) && (*(arg_8h + -0x18) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 71
    },
    "00490b50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00490b50(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    uint uStack104;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    uStack80 = 0x490d98;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack88 = 0x490b86;\n    (**(*in_EAX + 0x28))();\n    puStack88 = 0x490b91;\n    fcn.00491c60();\n    puStack88 = 0x490b9c;\n    fcn.00491c60();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack92 = 0x490d65;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack88 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_11h & 1) == 0) {\n            uStack104 = 0x490bdd;\n            puStack88 = &stack0xfffffffc;\n            fcn.00490900(&stack0xfffffffc);\n        }\n        else {\n            uStack104 = 0x490bd4;\n            puStack88 = &stack0xfffffffc;\n            fcn.00490ab0(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack104 = 0x490d23;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        fcn.00490780(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.00490808(&stack0xfffffffc);\n        if ((var_11h & 1) == 0) {\n            fcn.00490a10(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack108;\n            fcn.00407210();\n            *in_FS_OFFSET = uStack96;\n            puStack88 = 0x490d9f;\n            uStack92 = 0x490d81;\n            fcn.00407a20();\n            uStack92 = 0x490d89;\n            fcn.00407a20();\n            uStack92 = 0x490d97;\n            fcn.00409d24();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.00490808(&stack0xfffffffc);\n        (**(*param_2 + 0x18))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.00490808(&stack0xfffffffc);\n        if ((var_11h & 2) != 0) {\n            fcn.00405fd0();\n        }\n        if (((var_11h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.00490738(&stack0xfffffffc);\n            fcn.00431524();\n        }\n        else {\n            iVar3 = fcn.004312bc();\n            if (iVar3 < 0) {\n                fcn.00490738(&stack0xfffffffc);\n                fcn.00431524();\n            }\n        }\n        *in_FS_OFFSET = uStack108;\n    }\n    *in_FS_OFFSET = uStack96;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1048
    },
    "0049ff28": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0049ff28(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0049f5d8(arg_8h);\n    if (((in_ECX << 0x18 & 0x1000000U) != 0) && ((*0x401314 == NULL || (**0x401314 != '\\a')))) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    if (((in_ECX << 0x18 & 0x2000000U) != 0) && ((*0x486870 == NULL || (**0x486870 != '\\a')))) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    var_1h._0_1_ = in_ECX;\n    *(in_EAX + 0x30) = var_1h;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 357
    },
    "004afce4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004afd79)\n\nvoid fcn.004afce4(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack100;\n    uchar *puStack96;\n    int32_t iStack92;\n    uchar auStack80 [36];\n    int32_t iStack44;\n    uchar *puStack40;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint32_t uStack24;\n    \n    puStack96 = &stack0xffffffb0;\n    uStack100 = 0x4afcfc;\n    iStack92 = in_EAX;\n    func_0x0040e290();\n    puVar1 = puStack96;\n    uStack100 = 0x1c;\n    iVar2 = func_0x0040e3b8();\n    while ((iVar2 != 0 && (puStack40 == puVar1))) {\n        if ((iStack28 == 0x1000) && ((uStack24 & 0x100) == 0)) {\n            if ((((uStack24 == 1) || (uStack24 == 2)) || (uStack24 == 0x10)) || (uStack24 == 0x20)) {\n                sub.kernel32.dll_VirtualProtect(iStack44, uStack32, 0x40, &stack0xffffff9c);\n            }\n            for (uVar3 = 0; uVar3 < uStack32; uVar3 = uVar3 + iStack92) {\n                fcn.004afcdc();\n            }\n        }\n        iVar2 = func_0x0040e3b8(iStack44 + uStack32, &stack0xffffffd4, 0x1c);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "004afe0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004afe0c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4afe96;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if ((*0x4c1d61 & 1) == 0) {\n        fcn.00407a20();\n    }\n    else {\n        puStack20 = &stack0xfffffffc;\n        fcn.00407e48();\n    }\n    fcn.004087c4(0x4b1370, 0x4b135c);\n    uVar1 = fcn.004084ec(0x4b1440, 0x10);\n    uVar2 = 0;\n    sub.user32.dll_MessageBoxW(0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00407a80(0x4afe9d);\n    return;\n}\n",
        "token_count": 265
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00403aa4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403aa4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 143
    },
    "00403bcc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00403bcc(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.00403b60();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x13fff0, 0x1000, 4);\n    puVar1 = *0x4bbadc;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x4bbad8;\n        puVar2 = puVar3;\n        puVar3[1] = *0x4bbadc;\n        *0x4bbadc = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4fffb] = 2;\n        *0x4bbaf0 = 0x13ffe0 - in_EAX;\n        *0x4bbaec = puVar3 + (0x13fff0 - in_EAX);\n        iVar4 = *0x4bbaec;\n        *(*0x4bbaec + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x4bbaf0 = 0;\n    return 0;\n}\n",
        "token_count": 288
    },
    "00404834": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00404834(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 90
    },
    "00404898": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404898(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x18)) && (*(iVar1 + 0x10) < *(iVar1 + 0x14) || *(iVar1 + 0x10) == *(iVar1 + 0x14))) {\n        *param_1 = *(iVar1 + 0x10) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 184
    },
    "004068ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004068ec(void)\n\n{\n    int32_t *in_EAX;\n    \n    return in_EAX + *(*in_EAX + -0x34) + -4;\n}\n",
        "token_count": 44
    },
    "00407ee4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00407ee4(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00408448": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408448(uint param_1, int32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (0 < param_2) {\n        fcn.00407a08();\n        uVar1 = *in_EAX;\n        if (uVar1 != 0) {\n            uVar1 = *(uVar1 - 4) >> 1;\n        }\n        if (0 < uVar1) {\n            fcn.004055b4();\n        }\n    }\n    fcn.004082e4();\n    return;\n}\n",
        "token_count": 136
    },
    "004085ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004085ec(int32_t param_1, int32_t param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    \n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_1 <= param_2) {\n        param_2 = param_1;\n    }\n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00407b70(param_2);\n        if (iVar1 < 0) {\n            iVar1 = 0;\n        }\n        else if (param_1 < iVar1) {\n            iVar1 = param_1;\n        }\n    }\n    *in_EAX = iVar1;\n    if (0 < iVar1) {\n        fcn.004055b4();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "004087c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004087c4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    piVar4 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    if ((piVar1 == NULL) || (*in_EAX != piVar1)) {\n        uVar2 = 0;\n        iVar3 = param_2;\n    }\n    else {\n        uVar2 = piVar1[-1];\n        iVar3 = param_2 + -1;\n        piVar4 = piVar1;\n    }\n    do {\n        piVar1 = *(&stack0x00000000 + iVar3 * 4);\n        if (piVar1 != NULL) {\n            uVar2 = uVar2 + piVar1[-1];\n            if ((uVar2 & 0xc0000000) != 0) {\n                fcn.00405500(CONCAT13(5, piVar1));\n                return;\n            }\n            if (piVar4 == piVar1) {\n                piVar4 = NULL;\n            }\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (piVar4 == NULL) {\n        iVar3 = fcn.00407974(0);\n    }\n    else {\n        fcn.00408664();\n        iVar3 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar4 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004055b4();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar4 == NULL) {\n        if (iVar3 != 0) {\n            *(iVar3 + -8) = *(iVar3 + -8) + -1;\n        }\n        fcn.00407e00();\n    }\n    // WARNING: Could not recover jumptable at 0x0040886b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 543
    },
    "004088ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004088ac(uint arg_8h)\n\n{\n    fcn.00407ba8();\n    return;\n}\n",
        "token_count": 30
    },
    "004088f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004088f4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.00407f18();\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (((0 < param_2) && (param_2 <= iVar1)) && (0 < param_1)) {\n        fcn.004055b4();\n        fcn.00408664();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00408950": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408950(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        iVar3 = *param_2;\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (param_1 < 1) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = param_1 + -1;\n            if (iVar3 < param_1 + -1) {\n                iVar4 = iVar3;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar2 + iVar3 < 0) {\n            fcn.00405be0();\n        }\n        fcn.00408664();\n        if (iVar4 < iVar3) {\n            fcn.004055b4();\n        }\n        if (iVar1 == in_EAX) {\n            fcn.004055b4();\n        }\n        else {\n            fcn.004055b4();\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00409618": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040972e)\n// WARNING: Removing unreachable block (ram,0x00409820)\n// WARNING: Removing unreachable block (ram,0x00409827)\n// WARNING: Removing unreachable block (ram,0x004097ad)\n// WARNING: Removing unreachable block (ram,0x004097c3)\n// WARNING: Removing unreachable block (ram,0x00409831)\n// WARNING: Removing unreachable block (ram,0x00409834)\n// WARNING: Removing unreachable block (ram,0x0040983a)\n// WARNING: Removing unreachable block (ram,0x004097b9)\n\nulong __fastcall fcn.00409618(uint param_1, int32_t *param_2)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    int32_t in_EAX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar8 = 1;\n    bVar10 = false;\n    uStack28 = 0;\n    iStack24 = 0;\n    uVar5 = 1;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x00409858;\n    }\n    for (; *(in_EAX + -2 + iVar8 * 2) == 0x20; iVar8 = iVar8 + 1) {\n    }\n    iVar1 = *(in_EAX + -2 + iVar8 * 2);\n    if (iVar1 == 0x2d) {\n        bVar10 = true;\n        iVar8 = iVar8 + 1;\n    }\n    else if (iVar1 == 0x2b) {\n        iVar8 = iVar8 + 1;\n    }\n    if (*(in_EAX + -2 + iVar8 * 2) == 0x30) {\n        iVar7 = in_EAX;\n        if (in_EAX != 0) {\n            iVar7 = *(in_EAX + -4);\n        }\n        bVar3 = iVar8 < iVar7;\n    }\n    else {\n        bVar3 = false;\n    }\n    piStack36 = param_2;\n    if (((bVar3) && ((iVar1 = *(in_EAX + iVar8 * 2),  iVar1 == 0x58 || (iVar1 == 0x78)))) ||\n       ((*(in_EAX + -2 + iVar8 * 2) == 0x24 ||\n        ((*(in_EAX + -2 + iVar8 * 2) == 0x58 || (*(in_EAX + -2 + iVar8 * 2) == 0x78)))))) {\n        if (*(in_EAX + -2 + iVar8 * 2) == 0x30) {\n            iVar8 = iVar8 + 1;\n        }\n        do {\n            iVar8 = iVar8 + 1;\n            uVar2 = *(in_EAX + -2 + iVar8 * 2);\n            if (uVar2 - 0x30 < 10) {\n                uVar9 = uVar2 - 0x30;\n            }\n            else if (uVar2 - 0x41 < 6) {\n                uVar9 = uVar2 - 0x37;\n            }\n            else {\n                if (5 < uVar2 - 0x61) goto code_r0x00409760;\n                uVar9 = uVar2 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x00409760;\n            uVar4 = uStack28 >> 0x1c;\n            uVar6 = uStack28 * 0x10;\n            uStack28 = uVar6 + uVar9;\n            iStack24 = (iStack24 << 4 | uVar4) + (uVar9 >> 0x1f) + CARRY4(uVar6, uVar9);\n            uVar5 = 0;\n        } while( true );\n    }\n    while (*(in_EAX + -2 + iVar8 * 2) - 0x30U < 10) {\n        uVar2 = *(in_EAX + -2 + iVar8 * 2);\n        iVar7 = fcn.004095a8();\n        piStack36 = (uVar2 - 0x30) + iVar7;\n        iVar8 = iVar8 + 1;\n        uVar5 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x0040983b;\ncode_r0x00409760:\n    if (bVar10) {\n        bVar10 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar10);\n    }\ncode_r0x0040983b:\n    if (uVar5 | *(in_EAX + -2 + iVar8 * 2) != 0) {\n        *piStack36 = iVar8;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x00409858:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1230
    },
    "0040a380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a380(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    uStack16 = 0x40a390;\n    fcn.00407b04();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            if (*(in_EAX + -2 + iVar1 * 2) == 0x2d) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x40a3e3;\n    uStack20 = 0x40a3db;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 246
    },
    "0040a3ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a3ec(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00408520();\n    iVar1 = *param_2;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (0 < iVar1) {\n        iVar2 = 1;\n        do {\n            if (*(*param_2 + -2 + iVar2 * 2) == 0x2c) goto code_r0x0040a494;\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.00407e48();\n    fcn.00407a20();\n    while (var_8h != 0) {\n        fcn.004087c4(var_8h, var_4h, *param_2);\n        fcn.00407e48();\n        arg_8h = &var_ch;\n        fcn.0040a380();\n        fcn.004088ac(arg_8h);\n        fcn.00407e48();\n    }\ncode_r0x0040a494:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 389
    },
    "0040ae98": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040ae98(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*0x4b7c10 != 0) {\n        fcn.0040426c();\n    }\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX < 1) {\n        *0x4b7c10 = 0;\n    }\n    else {\n        *0x4b7c10 = fcn.00403ee8();\n        fcn.004084ec();\n        fcn.004055b4();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0040af60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040af60(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    puStack40 = 0x40af7f;\n    var_8h = param_2;\n    fcn.00407b04();\n    puStack40 = 0x40af87;\n    fcn.00407b04();\n    uStack44 = 0x40b036;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00407a20();\n    iVar2 = 1;\n    while( true ) {\n        iVar4 = var_8h;\n        if (var_8h != 0) {\n            iVar4 = *(var_8h + -4);\n        }\n        iVar3 = iVar2;\n        if (iVar4 < iVar2) break;\n        while( true ) {\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if ((iVar4 < iVar3) || (*(var_8h + -2 + iVar3 * 2) == 0x2c)) break;\n            iVar3 = iVar3 + 1;\n        }\n        var_10h = iVar2;\n        if (iVar3 != iVar2) {\n            fcn.004088ac(&fcn.0040af60::var_14h);\n            fcn.0040873c();\n            cVar1 = fcn.0040aef4();\n            if (cVar1 != '\\0') goto code_r0x0040b013;\n        }\n        iVar2 = iVar3 + 1;\n    }\n    fcn.00407a20();\ncode_r0x0040b013:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x40b03d;\n    uStack44 = 0x40b028;\n    fcn.00407a20();\n    uStack44 = 0x40b035;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 570
    },
    "0040b110": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b110(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack40 = 0x40b131;\n    var_8h = param_2;\n    fcn.00407b04();\n    puStack40 = 0x40b139;\n    fcn.00407b04();\n    uStack44 = 0x40b227;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h = 0x40b14e;\n    puStack40 = &stack0xfffffffc;\n    fcn.00407a20();\n    if (var_8h != 0) {\n        arg_8h = 0x40b163;\n        fcn.00407e48();\n        iVar1 = var_8h;\n        if (var_8h != 0) {\n            iVar1 = *(var_8h + -4);\n        }\n        if (0 < iVar1) {\n            do {\n                if (*(var_8h + -2 + iVar1 * 2) == 0x2e) {\n                    arg_8h = &fcn.0040b110::var_10h;\n                    fcn.004088ac(arg_8h);\n                    break;\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0040ae34();\n        if (var_ch == 0) {\n            sub.kernel32.dll_GetUserDefaultUILanguage();\n            fcn.0040a7e4();\n            fcn.0040af60();\n            if ((*param_1 == 0) && (*0x4bdc0c == '\\0')) {\n                sub.kernel32.dll_GetSystemDefaultUILanguage();\n                fcn.0040a7e4();\n                fcn.0040af60();\n            }\n            if (*param_1 == 0) {\n                fcn.0040b044();\n            }\n        }\n        else {\n            fcn.0040af60();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40b22e;\n    iStack48 = 0x40b226;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 615
    },
    "0040bbf8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040bbf8(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar2 = 0x1f;\n    piVar3 = in_EAX + 8;\n    do {\n        iVar5 = *piVar3;\n        if (iVar5 != 0) {\n            iVar5 = *(iVar5 + -4);\n        }\n        if (-1 < iVar5 + -1) {\n            iVar4 = 0;\n            do {\n                puVar1 = *(*piVar3 + iVar4 * 4);\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    *(*piVar3 + iVar4 * 4) = 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar5 = piVar3[0x1f];\n        if (iVar5 != 0) {\n            iVar5 = *(iVar5 + -4);\n        }\n        if (-1 < iVar5 + -1) {\n            iVar4 = 0;\n            do {\n                puVar1 = *(piVar3[0x1f] + iVar4 * 4);\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                    *(piVar3[0x1f] + iVar4 * 4) = 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        piVar3 = piVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 425
    },
    "0040bd18": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bd18(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = ((param_1 >> 0xd) + (param_1 >> 5)) % 0x1f;\n    puStack28 = 0x40bd48;\n    fcn.0040bc7c();\n    uStack32 = 0x40bdd3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + uVar2 * 4);\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (*(*(param_2 + uVar2 * 4) + iVar3 * 4) == 0) {\n                *(*(param_2 + uVar2 * 4) + iVar3 * 4) = param_1;\n                puStack28 = &stack0xfffffffc;\n                fcn.00407210();\n                return;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = *(param_2 + uVar2 * 4);\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.0040bb44();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        fcn.0040bb44();\n    }\n    *(*(param_2 + uVar2 * 4) + iVar1 * 4) = param_1;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40bdda;\n    uStack32 = 0x40bdd2;\n    fcn.0040bc94();\n    return;\n}\n",
        "token_count": 514
    },
    "0040bde4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bde4(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = ((param_1 >> 0xd) + (param_1 >> 5)) % 0x1f;\n    puStack24 = 0x40be13;\n    fcn.0040bc7c();\n    uStack28 = 0x40be6b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar3 = *(param_2 + uVar2 * 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        iVar1 = 0;\n        do {\n            if (*(*(param_2 + uVar2 * 4) + iVar1 * 4) == param_1) {\n                *(*(param_2 + uVar2 * 4) + iVar1 * 4) = 0;\n                puStack24 = &stack0xfffffffc;\n                fcn.00407210();\n                return;\n            }\n            iVar1 = iVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40be72;\n    uStack28 = 0x40be6a;\n    fcn.0040bc94();\n    return;\n}\n",
        "token_count": 396
    },
    "0040be78": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040be78(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 == 0) {\n        fcn.0040bb44();\n    }\n    else {\n        iVar1 = *(in_EAX + 8);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + -4);\n        }\n        if (iVar1 == *(in_EAX + 4)) {\n            fcn.0040bb44();\n        }\n    }\n    if (param_2 < *(in_EAX + 4)) {\n        fcn.004055b4();\n        *(*(in_EAX + 8) + param_2 * 4) = param_1;\n    }\n    else {\n        *(*(in_EAX + 8) + *(in_EAX + 4) * 4) = param_1;\n    }\n    *(in_EAX + 4) = *(in_EAX + 4) + 1;\n    return;\n}\n",
        "token_count": 271
    },
    "0040c7c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c820)\n\nvoid __fastcall fcn.0040c7c8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40c896;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x40c7f1;\n    fcn.00407a44();\n    if (in_EAX != 0) {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        fcn.00408254();\n        uVar1 = fcn.004084ec();\n        fcn.00408240(uVar1);\n        iVar2 = fcn.0040c698(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00407a44();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.00408254();\n            iVar2 = in_EAX;\n        }\n        fcn.00407e9c();\n        if (*param_2 != 0) {\n            *(*param_2 + -0xc) = 0xfde9;\n        }\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x40c89d;\n    iStack36 = 0x40c895;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 403
    },
    "0040c8a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c8a4(uint param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004084ec();\n    iVar1 = fcn.0040c698(in_EAX);\n    iVar1 = iVar1 + -1;\n    if (iVar1 < 0) {\n        iVar1 = 0;\n    }\n    *param_2 = iVar1;\n    return;\n}\n",
        "token_count": 132
    },
    "00419630": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419630(uint param_1, uint16_t **param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        puVar3 = *(in_EAX + -2);\n    }\n    fcn.00408664();\n    if ((0 < puVar3) && (puVar2 = *param_2,  0 < puVar3)) {\n        do {\n            uVar1 = *in_EAX;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 | 0x20;\n            }\n            *puVar2 = uVar1;\n            puVar2 = puVar2 + 1;\n            in_EAX = in_EAX + 1;\n            puVar3 = puVar3 + -1;\n        } while (puVar3 != NULL);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00419830": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419830(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00407e00();\n    if (*param_2 != 0) {\n        fcn.00407fb0();\n        iVar2 = *param_2;\n        if (iVar2 != 0) {\n            iVar2 = *(iVar2 + -4);\n        }\n        uVar1 = fcn.004084ec(iVar2);\n        sub.user32.dll_CharUpperBuffW(uVar1);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00419874": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00419874(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004084ec();\n    fcn.00407ba8();\n    if (0 < in_EAX) {\n        uVar1 = fcn.004084ec(in_EAX);\n        sub.user32.dll_CharLowerBuffW(uVar1);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004198b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004198b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004084ec(param_2);\n    uVar1 = fcn.004084ec(in_EAX, uVar1);\n    iVar2 = func_0x0040e0a8(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "004199fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004199fc(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    ushort *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (in_EAX < 10000) {\n        if (in_EAX < 100) {\n            uVar3 = (9 < in_EAX) + 1;\n        }\n        else {\n            uVar3 = (999 < in_EAX) + 3;\n        }\n    }\n    else if (in_EAX < 1000000) {\n        uVar3 = (99999 < in_EAX) + 5;\n    }\n    else if (in_EAX < 100000000) {\n        uVar3 = (9999999 < in_EAX) + 7;\n    }\n    else {\n        uVar3 = (999999999 < in_EAX) + 9;\n    }\n    fcn.00408664();\n    puVar1 = fcn.004084ec();\n    *puVar1 = 0x2d;\n    puVar2 = puVar1 + (param_2 & 0xff);\n    uVar4 = in_EAX;\n    if (2 < uVar3) {\n        do {\n            in_EAX = uVar4 / 100;\n            uVar3 = uVar3 - 2;\n            *(uVar3 * 2 + puVar2) =\n                 *(\nn                  + (uVar4 % 100) * 2);\n            uVar4 = in_EAX;\n        } while (2 < uVar3);\n    }\n    if (uVar3 == 2) {\n        *puVar2 = *(\nn                   + in_EAX * 2);\n    }\n    else {\n        *puVar2 = in_EAX | 0x30;\n    }\n    return;\n}\n",
        "token_count": 1242
    },
    "00419af8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00419af8(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint64_t uVar1;\n    uint8_t in_AL;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint *puVar7;\n    bool bVar8;\n    int32_t iVar9;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_1h;\n    \n    if (((in_AL != 0) && (arg_ch == 0 && arg_8h < 0x7fffffff || arg_ch == 0 && arg_8h == 0x7fffffff)) ||\n       ((in_AL == 0 && (arg_ch == 0 && arg_8h != 0xffffffff || arg_ch == 0 && arg_8h == 0xffffffff)))) {\n        fcn.004199fc();\n    }\n    else {\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        bVar8 = arg_ch < 0x5af3;\n        if (arg_ch == 0x5af3) {\n            bVar8 = arg_8h < 0x107a4000;\n        }\n        if (bVar8) {\n            bVar8 = arg_ch < 0xe8;\n            if (arg_ch == 0xe8) {\n                bVar8 = arg_8h < 0xd4a51000;\n            }\n            if (bVar8) {\n                bVar8 = arg_ch < 2;\n                if (arg_ch == 2) {\n                    bVar8 = arg_8h < 0x540be400;\n                }\n                if (bVar8) {\n                    uVar6 = 10;\n                }\n                else {\n                    bVar8 = arg_ch < 0x17;\n                    if (arg_ch == 0x17) {\n                        bVar8 = arg_8h < 0x4876e800;\n                    }\n                    uVar6 = !bVar8 + 0xb;\n                }\n            }\n            else {\n                bVar8 = arg_ch < 0x918;\n                if (arg_ch == 0x918) {\n                    bVar8 = arg_8h < 0x4e72a000;\n                }\n                uVar6 = !bVar8 + 0xd;\n            }\n        }\n        else {\n            bVar8 = arg_ch < 0x2386f2;\n            if (arg_ch == 0x2386f2) {\n                bVar8 = arg_8h < 0x6fc10000;\n            }\n            if (bVar8) {\n                bVar8 = arg_ch < 0x38d7e;\n                if (arg_ch == 0x38d7e) {\n                    bVar8 = arg_8h < 0xa4c68000;\n                }\n                uVar6 = !bVar8 + 0xf;\n            }\n            else {\n                bVar8 = arg_ch < 0xde0b6b3;\n                if (arg_ch == 0xde0b6b3) {\n                    bVar8 = arg_8h < 0xa7640000;\n                }\n                if (bVar8) {\n                    bVar8 = arg_ch < 0x1634578;\n                    if (arg_ch == 0x1634578) {\n                        bVar8 = arg_8h < 0x5d8a0000;\n                    }\n                    uVar6 = !bVar8 + 0x11;\n                }\n                else {\n                    bVar8 = arg_ch < 0x8ac72304;\n                    if (arg_ch == 0x8ac72304) {\n                        bVar8 = arg_8h < 0x89e80000;\n                    }\n                    if (bVar8) {\n                        uVar6 = 0x13;\n                    }\n                    else {\n                        uVar6 = 0x14;\n                    }\n                }\n            }\n        }\n        fcn.00408664();\n        puVar2 = fcn.004084ec();\n        *puVar2 = 0x2d;\n        puVar7 = puVar2 + in_AL;\n        if (uVar6 == 0x14) {\n            *puVar7 = 0x31;\n            puVar7 = puVar7 + 2;\n            var_10h = arg_8h + 0x76180000;\n            var_ch = (arg_ch + 0x7538dcfc) - (arg_8h < 0x89e80000);\n            uVar6 = 0x13;\n        }\n        if (0x11 < uVar6) {\n            if (uVar6 == 0x13) {\n                *puVar7 = 0x30;\n                while( true ) {\n                    bVar8 = var_ch < 0xde0b6b3;\n                    if (var_ch == 0xde0b6b3) {\n                        bVar8 = var_10h < 0xa7640000;\n                    }\n                    if (bVar8) break;\n                    bVar8 = var_10h < 0xa7640000;\n                    var_10h = var_10h + 0x589c0000;\n                    var_ch = (var_ch + 0xf21f494d) - bVar8;\n                    *puVar7 = *puVar7 + 1;\n                }\n                puVar7 = puVar7 + 2;\n            }\n            *puVar7 = 0x30;\n            while( true ) {\n                bVar8 = var_ch < 0x1634578;\n                if (var_ch == 0x1634578) {\n                    bVar8 = var_10h < 0x5d8a0000;\n                }\n                if (bVar8) break;\n                bVar8 = var_10h < 0x5d8a0000;\n                var_10h = var_10h + 0xa2760000;\n                var_ch = (var_ch + 0xfe9cba88) - bVar8;\n                *puVar7 = *puVar7 + 1;\n            }\n            puVar7 = puVar7 + 2;\n            uVar6 = 0x11;\n        }\n        uVar3 = fcn.004095cc(100000000, 0);\n        iVar9 = 100000000;\n        iVar4 = fcn.004095a8(100000000, 0, var_10h, var_ch);\n        uVar5 = (iVar9 - iVar4) / 100;\n        *(puVar7 + uVar6 * 2 + -4) =\n             *(\nn              + ((iVar9 - iVar4) % 100) * 2);\n        uVar1 = uVar5 / 100;\n        iVar4 = uVar1;\n        *(puVar7 + uVar6 * 2 + -8) =\n             *(\nn              + (uVar5 + iVar4 * -100) * 2);\n        iVar9 = uVar1 / 100;\n        *(puVar7 + uVar6 * 2 + -0xc) =\n             *(\nn              + (iVar4 + iVar9 * -100) * 2);\n        *(puVar7 + uVar6 * 2 + -0x10) =\n             *(\nn              + iVar9 * 2);\n        uVar6 = uVar6 - 8;\n        while (2 < uVar6) {\n            uVar6 = uVar6 - 2;\n            *(uVar6 * 2 + puVar7) =\n                 *(\nn                  + (uVar3 % 100) * 2);\n            uVar3 = uVar3 / 100;\n        }\n        if (uVar6 == 2) {\n            *puVar7 = *(\nn                       + uVar3 * 2);\n        }\n        else {\n            *puVar7 = uVar3 | 0x30;\n        }\n    }\n    return;\n}\n",
        "token_count": 4303
    },
    "00419ea4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419f6a)\n\nvoid __cdecl fcn.00419ea4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x419f99;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_ECX < in_EDX) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00409c00();\n        iVar1 = in_EDX - in_ECX;\n        if (-1 < iVar1 + -1) {\n            iVar3 = 0;\n            do {\n                *(iVar3 * 2) = arg_ch;\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        iVar1 = in_EDX - in_ECX;\n    }\n    else {\n        fcn.00409c00();\n        iVar1 = 0;\n    }\n    puVar2 = (in_ECX + iVar1) * 2;\n    if (1 < in_ECX) {\n        do {\n            in_ECX = in_ECX + -2;\n            puVar2 = puVar2 + -1;\n            *puVar2 = *((in_EAX & 0xff) * 4 + 0x4b8d5e);\n            in_EAX = in_EAX >> 8;\n        } while (1 < in_ECX);\n    }\n    if (in_ECX == 1) {\n        *(iVar1 * 2) = *((in_EAX & 0xf) * 2 + 0x4b915e);\n    }\n    fcn.004214c4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x419fa0;\n    uStack32 = 0x419f98;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 521
    },
    "00419fac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a08d)\n\nvoid __cdecl fcn.00419fac(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    ushort in_CX;\n    uint *puVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41a0bc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EDX < in_EAX) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00409c00();\n        iVar1 = in_EAX - in_EDX;\n        if (-1 < iVar1 + -1) {\n            iVar3 = 0;\n            do {\n                *(iVar3 * 2) = in_CX;\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        iVar1 = in_EAX - in_EDX;\n    }\n    else {\n        fcn.00409c00();\n        iVar1 = 0;\n    }\n    puVar2 = (in_EDX + iVar1) * 2;\n    if (1 < in_EDX) {\n        do {\n            in_EDX = in_EDX + -2;\n            puVar2 = puVar2 + -1;\n            *puVar2 = *((arg_ch & 0xff) * 4 + 0x4b8d5e);\n            arg_ch = arg_ch >> 8 | arg_10h << 0x18;\n            arg_10h = arg_10h >> 8;\n        } while (1 < in_EDX);\n    }\n    if (in_EDX == 1) {\n        *(iVar1 * 2) = *((arg_ch & 0xf) * 2 + 0x4b915e);\n    }\n    fcn.004214c4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41a0c3;\n    uStack32 = 0x41a0bb;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 546
    },
    "0041a234": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041a234(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *0x4be78c;\n    if (*0x4be78c != 0) {\n        iVar1 = *(*0x4be78c + -4);\n    }\n    if (iVar1 == 0) {\n        fcn.00409c00(1);\n        fcn.00407e00();\n    }\n    iVar1 = *0x4be790;\n    if (*0x4be790 != 0) {\n        iVar1 = *(*0x4be790 + -4);\n    }\n    if (iVar1 == 0) {\n        fcn.00409c00(1);\n        fcn.00407e00();\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0041a32c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041a32c(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041be24();\n    if (uVar1 == '\\0') {\n        fcn.0041a234();\n        uVar1 = fcn.0041a2dc(&stack0xfffffffc);\n        if (uVar1 == '\\0') {\n            uVar1 = fcn.0041a2dc(&stack0xfffffffc);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 204
    },
    "0041a430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041a430(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x41a4d0;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x41a45e;\n    fcn.004214f4();\n    uStack44 = 0x41a4b3;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00407a20();\n    arg_8h = &fcn.0041a430::var_4h;\n    fcn.004088ac(arg_8h);\n    fcn.00407e00();\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x41a4ba;\n    iStack48 = 0x41a4b2;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 312
    },
    "0041a8d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a8d4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_14h;\n    uint arg_8h_00;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 2;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.0041a80c(arg_8h, arg_ch, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.00407ba8();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.00407a20();\n            fcn.00408664();\n            arg_14h = in_EDX;\n            if (in_EDX != 0) {\n                arg_14h = *(in_EDX + -4);\n            }\n            arg_8h_00 = arg_8h;\n            fcn.004084ec();\n            var_ch = fcn.0041a80c(arg_8h_00, arg_ch, in_ECX, arg_14h);\n        }\n        fcn.00408664();\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "0041ac0c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ac0c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    char cVar5;\n    uint16_t *in_EAX;\n    uint16_t *in_ECX;\n    uint32_t in_EDX;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    int32_t *in_FS_OFFSET;\n    uchar *puVar10;\n    int32_t arg_8h_00;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d6h;\n    int32_t *var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    uchar var_45h;\n    int32_t *var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    char var_31h;\n    int32_t var_30h;\n    uint16_t *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint16_t *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint16_t var_6h;\n    uint32_t var_4h;\n    \n    var_1ch = 0;\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffef4;\n    if ((in_EAX != NULL) && (in_ECX != NULL)) {\n        iVar9 = -1;\n        var_30h = arg_ch + 1;\n        var_10h = in_EDX;\n        if (in_EDX < 0x7fffffff) {\n            var_10h = in_EDX * 2;\n        }\n        puVar8 = in_ECX + arg_14h;\n        var_14h = in_EAX;\n        if (in_ECX < puVar8) {\n            do {\n                if (*in_ECX == 0x25) {\n                    puVar7 = in_ECX + 1;\n                    if (puVar8 <= puVar7) break;\n                    if (*puVar7 == 0x25) {\n                        if (var_10h == 0) {\n                            fcn.0041a790();\n                        }\n                        *var_14h = *puVar7;\n                        in_ECX = in_ECX + 2;\n                        var_14h = var_14h + 1;\n                        var_10h = var_10h - 2;\n                    }\n                    else {\n                        var_ch = -1;\n                        iVar9 = iVar9 + 1;\n                        cVar5 = fcn.00414b0c();\n                        var_2ch = puVar7;\n                        if (cVar5 == '\\0') {\n                            if (*puVar7 == 0x3a) {\n                                iVar9 = 0;\n                                puVar7 = in_ECX + 2;\n                            }\n                        }\n                        else {\n                            while ((puVar7 < puVar8 && (cVar5 = fcn.00414b0c(),  cVar5 != '\\0'))) {\n                                puVar7 = puVar7 + 1;\n                            }\n                            if (puVar7 != var_2ch) {\n                                fcn.0041a594();\n                                fcn.0040858c();\n                                cVar5 = fcn.0041a1f4();\n                                if (cVar5 == '\\0') {\n                                    fcn.0041a790();\n                                }\n                                if (*puVar7 == 0x3a) {\n                                    puVar7 = puVar7 + 1;\n                                    iVar9 = var_3ch;\n                                }\n                                else {\n                                    var_ch = var_3ch;\n                                }\n                            }\n                        }\n                        var_15h = *puVar7 == 0x2d;\n                        if (var_15h) {\n                            puVar7 = puVar7 + 1;\n                        }\n                        var_2ch = puVar7;\n                        if (*puVar7 == 0x2a) {\n                            var_ch = -2;\n                            puVar7 = puVar7 + 1;\n                        }\n                        else {\n                            cVar5 = fcn.00414b0c();\n                            if (cVar5 != '\\0') {\n                                while ((puVar7 < puVar8 && (cVar5 = fcn.00414b0c(),  cVar5 != '\\0'))) {\n                                    puVar7 = puVar7 + 1;\n                                }\n                                if (puVar7 != var_2ch) {\n                                    fcn.0041a594();\n                                    fcn.0040858c();\n                                    cVar5 = fcn.0041a1f4();\n                                    if (cVar5 == '\\0') {\n                                        fcn.0041a790();\n                                    }\n                                }\n                            }\n                        }\n                        if (*puVar7 == 0x2e) {\n                            puVar6 = puVar7 + 1;\n                            if (puVar8 <= puVar6) break;\n                            puVar4 = puVar6;\n                            if (*puVar6 == 0x2a) {\n                                var_4h = 0xfffffffe;\n                                puVar7 = puVar7 + 2;\n                            }\n                            else {\n                                while ((var_2ch = puVar4,  puVar6 < puVar8 && (cVar5 = fcn.00414b0c(),  cVar5 != '\\0')))\n                                {\n                                    puVar6 = puVar6 + 1;\n                                    puVar4 = var_2ch;\n                                }\n                                fcn.0041a594();\n                                fcn.0040858c();\n                                cVar5 = fcn.0041a1f4();\n                                puVar7 = puVar6;\n                                if (cVar5 == '\\0') {\n                                    var_4h = 0xffffffff;\n                                }\n                            }\n                        }\n                        else {\n                            var_4h = 0xffffffff;\n                        }\n                        cVar5 = fcn.00414a7c();\n                        if (cVar5 == '\\0') break;\n                        if (*puVar7 - 0x61 < 0x1a) {\n                            var_6h = *puVar7 ^ 0x20;\n                        }\n                        else {\n                            var_6h = *puVar7;\n                        }\n                        in_ECX = puVar7 + 1;\n                        if (var_ch == -2) {\n                            if (var_30h <= iVar9) {\n                                fcn.0041a790();\n                            }\n                            cVar5 = *(arg_10h + 4 + iVar9 * 8);\n                            if ((cVar5 == '\\0') || (cVar5 == '\\x10')) {\n                                if (*(arg_10h + 4 + iVar9 * 8) == '\\0') {\n                                    var_ch = *(arg_10h + iVar9 * 8);\n                                }\n                                else {\n                                    puVar1 = *(arg_10h + iVar9 * 8);\n                                    uVar3 = puVar1[1];\n                                    if (uVar3 == 0) {\n                                        if (0x7fffffff < *puVar1) goto code_r0x0041af5c;\ncode_r0x0041af44:\n                                        puVar2 = *(arg_10h + iVar9 * 8);\n                                        puVar1 = puVar2 + 1;\n                                        if (*puVar1 == 0xffffffff) {\n                                            if (*puVar2 < 0x80000000) goto code_r0x0041af5c;\n                                        }\n                                        else if (*puVar1 < -1) goto code_r0x0041af5c;\n                                    }\n                                    else {\n                                        if (uVar3 < 1) goto code_r0x0041af44;\ncode_r0x0041af5c:\n                                        fcn.0041a790();\n                                    }\n                                    var_ch = **(arg_10h + iVar9 * 8);\n                                }\n                                if (var_ch < 0) {\n                                    var_15h = var_15h ^ 1;\n                                    var_ch = -var_ch;\n                                }\n                                iVar9 = iVar9 + 1;\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                        }\n                        if (var_4h == 0xfffffffe) {\n                            if (var_30h <= iVar9) {\n                                fcn.0041a790();\n                            }\n                            cVar5 = *(arg_10h + 4 + iVar9 * 8);\n                            if ((cVar5 == '\\0') || (cVar5 == '\\x10')) {\n                                if (*(arg_10h + 4 + iVar9 * 8) == '\\0') {\n                                    var_4h = *(arg_10h + iVar9 * 8);\n                                }\n                                else {\n                                    puVar1 = *(arg_10h + iVar9 * 8);\n                                    uVar3 = puVar1[1];\n                                    if (uVar3 == 0) {\n                                        if (0x7fffffff < *puVar1) goto code_r0x0041b00a;\ncode_r0x0041aff2:\n                                        puVar2 = *(arg_10h + iVar9 * 8);\n                                        puVar1 = puVar2 + 1;\n                                        if (*puVar1 == 0xffffffff) {\n                                            if (*puVar2 < 0x80000000) goto code_r0x0041b00a;\n                                        }\n                                        else if (*puVar1 < -1) goto code_r0x0041b00a;\n                                    }\n                                    else {\n                                        if (uVar3 < 1) goto code_r0x0041aff2;\ncode_r0x0041b00a:\n                                        fcn.0041a790();\n                                    }\n                                    var_4h = **(arg_10h + iVar9 * 8);\n                                }\n                                iVar9 = iVar9 + 1;\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                        }\n                        if (var_30h <= iVar9) {\n                            fcn.0041a790();\n                        }\n                        var_44h = *(arg_10h + iVar9 * 8);\n                        var_40h = *(arg_10h + 4 + iVar9 * 8);\n                        var_31h = '\\0';\n    // switch table (18 cases) at 0x41b06f\n                        switch(var_40h & 0xff) {\n                        case 0:\n                            if ((0x10 < var_4h) || (var_4h == 0xffffffff)) {\n                                var_4h = 0;\n                            }\n                            if (var_6h == 0x44) {\n                                fcn.00419e08();\n                            }\n                            else if (var_6h == 0x55) {\n                                fcn.00419e74();\n                            }\n                            else if (var_6h == 0x58) {\n                                fcn.0041a168();\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            puVar10 = &stack0xfffffffc;\n                            fcn.004084ec();\n                            var_31h = fcn.0041aa40(puVar10);\n                            break;\n                        case 1:\n                        case 7:\n                        case 8:\n                        case 0xe:\n                            fcn.0041a790();\n                            break;\n                        case 2:\n                        case 9:\n                            if (var_6h == 0x53) {\n                                if (var_40h == '\\x02') {\n                                    fcn.00408510();\n                                }\n                                else {\n                                    fcn.00408510();\n                                }\n                                puVar10 = &stack0xfffffffc;\n                                fcn.004084ec();\n                                var_31h = fcn.0041aa40(puVar10);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 3:\n                        case 0xc:\n                            var_45h = var_40h != '\\x03';\n                            var_38h = 0;\n                            if ((var_6h == 0x47) || (var_6h == 0x45)) {\n                                if (0x12 < var_4h) {\n                                    var_4h = 0xf;\n                                }\n                            }\n                            else if ((0x12 < var_4h) && (var_4h = 2,  var_6h == 0x4d)) {\n                                var_4h = *(arg_8h + 5);\n                            }\n    // switch table (10 cases) at 0x41b202\n                            switch(var_6h) {\n                            case 0x45:\n                                arg_8h_00 = arg_8h;\n                                var_38h = fcn.0041b6c4(arg_8h, 3, var_4h, 1);\n                                break;\n                            case 0x46:\n                                arg_8h_00 = arg_8h;\n                                var_38h = fcn.0041b6c4(arg_8h, var_4h, 0x12, 2);\n                                break;\n                            case 0x47:\n                                arg_8h_00 = arg_8h;\n                                var_38h = fcn.0041b6c4(arg_8h, 3, var_4h, 0);\n                                break;\n                            default:\n                                fcn.0041a790();\n                                break;\n                            case 0x4d:\n                                arg_8h_00 = arg_8h;\n                                var_38h = fcn.0041b6c4(arg_8h, var_4h, 0x12, 4);\n                                break;\n                            case 0x4e:\n                                arg_8h_00 = arg_8h;\n                                var_38h = fcn.0041b6c4(arg_8h, var_4h, 0x12, 3);\n                            }\n                            *(&var_d6h + var_38h * 2) = 0;\n                            var_4h = 0;\n                            var_31h = fcn.0041aa40(&stack0xfffffffc);\n                            break;\n                        case 4:\n                            if (var_6h == 0x53) {\n                                puVar10 = &stack0xfffffffc;\n                                fcn.00408658();\n                                fcn.004084ec();\n                                var_31h = fcn.0041aa40(puVar10);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 5:\n                            if (var_6h == 0x50) {\n                                fcn.0041a168();\n                                puVar10 = &stack0xfffffffc;\n                                fcn.004084ec();\n                                var_31h = fcn.0041aa40(puVar10);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 6:\n                            if (var_6h == 0x53) {\n                                puVar10 = &stack0xfffffffc;\n                                fcn.00408520();\n                                fcn.004084ec();\n                                var_31h = fcn.0041aa40(puVar10);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 10:\n                            if (var_6h == 0x53) {\n                                var_31h = fcn.0041aa40(&stack0xfffffffc);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 0xb:\n                            if (var_6h == 0x53) {\n                                fcn.004085a8();\n                                var_50h = var_1ch;\n                                if (var_1ch != 0) {\n                                    var_50h = *(var_1ch + -4);\n                                }\n                                puVar10 = &stack0xfffffffc;\n                                fcn.004084ec();\n                                var_31h = fcn.0041aa40(puVar10);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 0xd:\n                            if (var_6h == 0x53) {\n                                puVar10 = &stack0xfffffffc;\n                                fcn.0041abc0();\n                                fcn.004084ec();\n                                var_31h = fcn.0041aa40(puVar10);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 0xf:\n                            if (var_6h == 0x53) {\n                                var_4ch = var_44h;\n                                if (var_44h != NULL) {\n                                    var_4ch = var_44h[-1] >> 1;\n                                }\n                                var_31h = fcn.0041aa40(&stack0xfffffffc);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            break;\n                        case 0x10:\n                            if ((0x20 < var_4h) || (var_4h == 0xffffffff)) {\n                                var_4h = 0;\n                            }\n                            if (var_6h == 0x44) {\n                                arg_8h_00 = *var_44h;\n                                fcn.00419e30(arg_8h_00, var_44h[1]);\n                            }\n                            else if (var_6h == 0x55) {\n                                arg_8h_00 = *var_44h;\n                                fcn.00419e88(arg_8h_00, var_44h[1]);\n                            }\n                            else if (var_6h == 0x58) {\n                                arg_8h_00 = *var_44h;\n                                fcn.0041a180(arg_8h_00, var_44h[1]);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                            puVar10 = &stack0xfffffffc;\n                            fcn.004084ec();\n                            var_31h = fcn.0041aa40(puVar10);\n                            break;\n                        case 0x11:\n                            if (var_6h == 0x53) {\n                                var_54h = var_44h;\n                                if (var_44h != NULL) {\n                                    var_54h = var_44h[-1];\n                                }\n                                var_31h = fcn.0041aa40(&stack0xfffffffc);\n                            }\n                            else {\n                                fcn.0041a790();\n                            }\n                        }\n                        if (var_31h != '\\0') break;\n                    }\n                }\n                else {\n                    if (var_10h == 0) break;\n                    *var_14h = *in_ECX;\n                    in_ECX = in_ECX + 1;\n                    var_14h = var_14h + 1;\n                    var_10h = var_10h - 2;\n                }\n            } while (in_ECX < puVar8);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00407a80();\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 4341
    },
    "0041c434": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c434(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (0x100 - *(arg_8h + -0x2d4) < in_EDX) {\n        iVar1 = *(arg_8h + -4);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + -4);\n        }\n        fcn.00409c00(*(arg_8h + -0x2d4) + iVar1 + in_EDX);\n        if (0 < *(arg_8h + -0x2d4)) {\n            fcn.004055b4();\n        }\n        fcn.004055b4();\n        *(arg_8h + -0x2d4) = 0;\n    }\n    else if (0 < in_EDX) {\n        fcn.004055b4();\n        *(arg_8h + -0x2d4) = *(arg_8h + -0x2d4) + in_EDX;\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0041c518": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c518(uint arg_8h)\n\n{\n    fcn.0041c434(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0041c62c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c62c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_218h;\n    uint var_214h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack552 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack556 = 0x41c786;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    fcn.00407a20();\n    var_14h._0_2_ = *(arg_8h + -2);\n    var_14h._2_2_ = *(arg_8h + -4);\n    var_eh._0_2_ = *(arg_8h + -6);\n    fcn.00407e48();\n    uVar1 = fcn.004084ec(&fcn.0041c62c::var_214h, 0x200);\n    uVar2 = sub.kernel32.dll_GetThreadLocale(4, &fcn.0041c62c::var_14h, uVar1);\n    uVar1 = 0x41c6af;\n    iVar3 = sub.kernel32.dll_GetDateFormatW(uVar2);\n    if (iVar3 != 0) {\n        uVar1 = 0x41c6c9;\n        fcn.0040858c();\n        if (in_EAX == 1) {\n            if (*0x4be6b4 == 4) {\n                if (*0x4be6b8 == 1) {\n                    uVar1 = 0x41c71d;\n                    iVar3 = fcn.004200fc();\n                    if (iVar3 == 4) {\n                        fcn.00420210();\n                        fcn.00408550();\n                        fcn.004202a4();\n                        uVar1 = 0x41c765;\n                        fcn.00407ba8();\n                    }\n                }\n            }\n            else if (*0x4be6b4 == 0x11) {\n                fcn.004202a4();\n                fcn.004088ac(in_EDX);\n                uVar1 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00407a20(0x41c78d);\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 601
    },
    "0041c7a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c7a8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int16_t **in_EDX;\n    uint *in_FS_OFFSET;\n    int16_t **ppiVar3;\n    uint uStack556;\n    uint uStack552;\n    uchar *puStack548;\n    uint var_214h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack548 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack552 = 0x41c88b;\n    uStack556 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd4;\n    fcn.00407a20();\n    var_14h._0_2_ = *(arg_8h + -2);\n    var_14h._2_2_ = *(arg_8h + -4);\n    var_eh._0_2_ = *(arg_8h + -6);\n    if (in_EAX < 3) {\n        fcn.00407e48();\n    }\n    else {\n        fcn.00407e48();\n    }\n    uVar1 = fcn.004084ec(&fcn.0041c7a8::var_214h, 0x200);\n    uVar1 = sub.kernel32.dll_GetThreadLocale(4, &fcn.0041c7a8::var_14h, uVar1);\n    ppiVar3 = 0x41c839;\n    iVar2 = sub.kernel32.dll_GetDateFormatW(uVar1);\n    if (iVar2 != 0) {\n        ppiVar3 = 0x41c84f;\n        fcn.0040858c();\n        if ((in_EAX == 1) && (**in_EDX == 0x30)) {\n            fcn.004088ac(in_EDX);\n            ppiVar3 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppiVar3;\n    fcn.00407a20(0x41c892);\n    return;\n}\n",
        "token_count": 489
    },
    "0041d174": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d174(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack764;\n    uint uStack760;\n    uchar *puStack756;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    int32_t var_2d4h;\n    uint var_2d0h;\n    uint var_204h;\n    int32_t var_4h;\n    \n    puStack756 = &stack0xfffffffc;\n    var_2e4h = 0;\n    var_2e0h = 0;\n    var_4h = 0;\n    var_2dch = 0;\n    uStack760 = 0x41d305;\n    iStack764 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd04;\n    var_2d4h = 0;\n    var_2d8h = 0;\n    if (param_2 == 0) {\n        fcn.0041c8c4(&stack0xfffffffc);\n    }\n    else {\n        puStack756 = &stack0xfffffffc;\n        fcn.0041c8c4(&stack0xfffffffc);\n    }\n    iVar1 = var_4h;\n    if (var_4h != 0) {\n        iVar1 = *(var_4h + -4);\n    }\n    if (iVar1 < 1) {\n        arg_8h = &fcn.0041d174::var_2e4h;\n        fcn.00421488(arg_8h, var_2d4h);\n        fcn.00407e00();\n    }\n    else {\n        iVar1 = var_4h;\n        if (var_4h != 0) {\n            iVar1 = *(var_4h + -4);\n        }\n        arg_8h = 0x41d217;\n        fcn.00409c00(iVar1 + var_2d4h);\n        fcn.004055b4();\n        if (0 < var_2d4h) {\n            fcn.004055b4();\n        }\n        fcn.004214c4();\n        fcn.00407e00();\n    }\n    *in_FS_OFFSET = arg_8h;\n    iStack764 = 0x41d30c;\n    fcn.00407a80();\n    fcn.00409d24();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 587
    },
    "0041d35c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d35c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        if ((iVar1 < iVar2) || (*(in_EAX + -2 + iVar2 * 2) != 0x20)) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 154
    },
    "0041d380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041d380(char *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint16_t *in_ECX;\n    uint16_t uVar2;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0041d35c();\n    iVar1 = *in_EDX;\n    uVar2 = 0;\n    while( true ) {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        if (((iVar3 < iVar1) || (9 < *(in_EAX + -2 + iVar1 * 2) - 0x30U)) || (999 < uVar2)) break;\n        uVar2 = uVar2 * 10 + *(in_EAX + -2 + iVar1 * 2) + -0x30;\n        iVar1 = iVar1 + 1;\n    }\n    iVar3 = *in_EDX;\n    if (iVar3 < iVar1) {\n        *arg_8h = iVar1 - *in_EDX;\n        *in_EDX = iVar1;\n        *in_ECX = uVar2;\n    }\n    return iVar3 < iVar1;\n}\n",
        "token_count": 310
    },
    "0041d418": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d418(int32_t param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x41d4ea;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_1 != 0) {\n        puStack44 = 0x41d454;\n        fcn.0041d35c();\n        uStack48 = 0x41d4b2;\n        iStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        fcn.00407a20();\n        arg_8h = &fcn.0041d418::var_4h;\n        fcn.004088ac(arg_8h);\n        fcn.004198b0();\n        *in_FS_OFFSET = arg_8h;\n        uStack48 = 0x41d4b9;\n        iStack52 = 0x41d4b1;\n        fcn.00407a20();\n        return;\n    }\n    *in_FS_OFFSET = iStack40;\n    puStack32 = 0x41d4f1;\n    uStack36 = 0x41d4e9;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 394
    },
    "0041d4fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d4fc(int16_t param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    fcn.0041d35c();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (param_1 == *(in_EAX + -2 + *param_2 * 2))) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 165
    },
    "0041d534": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0041d534(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    \n    iVar1 = 1;\n    while( true ) {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        if (iVar3 < iVar1) {\n            return 0;\n        }\n        uVar2 = *(in_EAX + -2 + iVar1 * 2) & 0xdf;\n        if (uVar2 == 0x44) {\n            return 1;\n        }\n        if (uVar2 == 0x45) break;\n        if (uVar2 == 0x4d) {\n            return 0;\n        }\n        if (uVar2 == 0x59) {\n            return 2;\n        }\n        iVar1 = iVar1 + 1;\n    }\n    return 2;\n}\n",
        "token_count": 223
    },
    "0041d588": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d588(uint param_1, int32_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    while( true ) {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        if ((iVar2 < *param_2) || (*(in_EAX + -2 + *param_2 * 2) - 0x30U < 10)) break;\n        uVar1 = *(in_EAX + -2 + *param_2 * 2);\n        if ((uVar1 < 0xd800) || (0xdfff < uVar1)) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.004203a0();\n            *param_2 = iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0041d638": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d9f9)\n// WARNING: Removing unreachable block (ram,0x0041da19)\n// WARNING: Removing unreachable block (ram,0x0041da1e)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d638(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar4;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *in_stack_ffffff98;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_44h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uchar var_34h;\n    uint var_33h;\n    uint var_2eh;\n    uint16_t var_2ah;\n    uint16_t var_28h;\n    char var_26h;\n    uchar var_25h;\n    uchar *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack88 = 0x41daa9;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_25h = 0;\n    var_20h = in_EDX;\n    var_1ch = in_EAX;\n    var_26h = fcn.0041d534();\n    var_4h = 0;\n    if (**(arg_8h + 0xc) == 0x67) {\n        fcn.0041d588();\n        *in_FS_OFFSET = &stack0xffffff98;\n        fcn.00407a20();\n        puVar4 = &fcn.0041d638::var_10h;\n        uStack112 = 0x41d6c2;\n        fcn.004088ac(puVar4);\n        uStack112 = 0x41d6cd;\n        fcn.00407e48();\n        uStack112 = 0x41d6d8;\n        fcn.00421558();\n        *in_FS_OFFSET = puVar4;\n        fcn.00407a20();\n        return;\n    }\n    iVar2 = fcn.004203e0();\n    if (0 < iVar2) {\n        iVar2 = *(arg_8h + 0xbc);\n        if (iVar2 != 0) {\n            iVar2 = *(iVar2 + -4);\n        }\n        if (-1 < iVar2 + -1) {\n            iVar2 = *(arg_8h + 0xbc);\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            var_4h = *(*(arg_8h + 0xbc) + 4 + (iVar2 + -1) * 0x18);\n        }\n    }\n    cVar1 = fcn.0041d380(&fcn.0041d638::var_33h);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0041d4fc(),  cVar1 != '\\0')) {\n        in_stack_ffffff98 = 0x41d79a;\n        cVar1 = fcn.0041d380(&stack0xffffffc8);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0041d4fc();\n            if (cVar1 == '\\0') {\n                var_2eh._0_2_ = fcn.0041c3f0();\n                if (var_26h == '\\x01') {\n                    var_33h._1_2_ = var_28h;\n                    stack0xffffffcc = var_2ah;\n                }\n                else {\n                    stack0xffffffcc = var_28h;\n                    var_33h._1_2_ = var_2ah;\n                }\n            }\n            else {\n                in_stack_ffffff98 = &stack0xffffffc7;\n                cVar1 = fcn.0041d380(in_stack_ffffff98);\n                if (cVar1 == '\\0') goto code_r0x0041da8e;\n                if (var_26h == '\\0') {\n                    var_2eh._0_2_ = var_2eh._2_2_;\n                    stack0xffffffcc = var_28h;\n                    var_33h._1_2_ = var_2ah;\n                    var_33h._0_1_ = var_35h;\n                }\n                else if (var_26h == '\\x01') {\n                    var_2eh._0_2_ = var_2eh._2_2_;\n                    stack0xffffffcc = var_2ah;\n                    var_33h._1_2_ = var_28h;\n                    var_33h._0_1_ = var_35h;\n                }\n                else {\n                    var_2eh._0_2_ = var_28h;\n                    stack0xffffffcc = var_2ah;\n                    var_33h._1_2_ = var_2eh._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_33h < 3) {\n                        uVar3 = fcn.0041c3f0();\n                        iVar2 = (uVar3 & 0xffff) - *(arg_8h + 0xc4);\n                        var_2eh._0_2_ = var_2eh + (iVar2 / 100) * 100;\n                        if ((*(arg_8h + 0xc4) != 0) && (var_2eh < iVar2)) {\n                            var_2eh._0_2_ = var_2eh + 100;\n                        }\n                    }\n                }\n                else {\n                    uStack112 = 0x41d84a;\n                    var_2eh._0_2_ = fcn.0041d5dc(&stack0xfffffffc);\n                }\n            }\n            fcn.0041d4fc();\n            fcn.0041d35c();\n            if ((*0x4be6bc != '\\0') && (cVar1 = fcn.0042146c(),  cVar1 != '\\0')) {\n                if (**(arg_8h + 0x1c) - 0x30U < 10) {\n                    fcn.0041d588();\n                }\n                else {\n                    while( true ) {\n                        iVar2 = var_1ch;\n                        if (var_1ch != 0) {\n                            iVar2 = *(var_1ch + -4);\n                        }\n                        if ((iVar2 < *var_20h) || (*(var_1ch + -2 + *var_20h * 2) == 0x20)) break;\n                        *var_20h = *var_20h + 1;\n                    }\n                    fcn.0041d35c();\n                    if (var_1ch != 0) {\n                        var_1ch = *(var_1ch + -4);\n                    }\n                    if (*var_20h <= var_1ch) {\n                        uStack112 = 0x41d9e6;\n                        iStack116 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff8c;\n                        fcn.00407a20();\n                        puVar4 = &fcn.0041d638::var_14h;\n                        fcn.004088ac(puVar4);\n                        fcn.004198b0();\n                        *in_FS_OFFSET = puVar4;\n                        uStack112 = 0x41d9ed;\n                        iStack116 = 0x41d9e5;\n                        fcn.00407a20();\n                        return;\n                    }\n                }\n            }\n            uStack112 = 0x41da8b;\n            var_25h = fcn.0041c110(var_24h);\n            in_stack_ffffff98 = var_24h;\n        }\n    }\ncode_r0x0041da8e:\n    *in_FS_OFFSET = in_stack_ffffff98;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 1924
    },
    "0041dce4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041dce4(int32_t param_1)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0041d638(param_1);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < param_1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 145
    },
    "0041dd28": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041dd28(int32_t param_1)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0041dae4(param_1);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < param_1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 144
    },
    "0041dd6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0041dd6c(uint *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    char cVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iStack56;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    double *pdStack24;\n    \n    cVar4 = '\\x01';\n    if (*param_1[3] != 0x67) {\n        fcn.0041d588(param_2, 1);\n    }\n    cVar3 = fcn.0041d638(param_1);\n    if (cVar3 == '\\0') {\n        cVar4 = fcn.0041dd28();\n    }\n    else {\n        iVar6 = param_2;\n        fcn.0041d588();\n        iVar5 = in_EAX;\n        if (in_EAX != 0) {\n            iVar5 = *(in_EAX + -4);\n        }\n        if (iVar6 < iVar5) {\n            iStack56 = param_2 + -1;\n            bVar2 = false;\n            while ((!bVar2 && (iStack56 < iVar6))) {\n                if ((iStack56 < 1) || (iVar6 <= iStack56)) {\n                    bVar2 = true;\n                }\n                else {\n                    iStack56 = iStack56 + 1;\n                    cVar4 = fcn.0041d418();\n                    if ((((cVar4 == '\\0') && (cVar4 = fcn.0041d418(),  cVar4 == '\\0')) &&\n                        (cVar4 = fcn.0041d418(),  cVar4 == '\\0')) && (cVar4 = fcn.0041d418(),  cVar4 == '\\0')) {\n                        bVar2 = false;\n                    }\n                    else {\n                        bVar2 = true;\n                    }\n                }\n                if (!bVar2) {\n                    while( true ) {\n                        if (*(in_EAX + -2 + iStack56 * 2) == 0x20) {\n                            bVar1 = false;\n                        }\n                        else {\n                            iVar5 = in_EAX;\n                            if (in_EAX != 0) {\n                                iVar5 = *(in_EAX + -4);\n                            }\n                            bVar1 = iStack56 <= iVar5;\n                        }\n                        if (!bVar1) break;\n                        iStack56 = iStack56 + 1;\n                    }\n                    iVar5 = in_EAX;\n                    if (in_EAX != 0) {\n                        iVar5 = *(in_EAX + -4);\n                    }\n                    if (iVar5 < iStack56) {\n                        iStack56 = 0;\n                    }\n                }\n            }\n            cVar4 = fcn.0041dae4(pdStack24);\n            if (cVar4 != '\\0') {\n                if (0.0 <= CONCAT44(uStack44, uStack48)) {\n                    *pdStack24 = CONCAT44(uStack44, uStack48) + CONCAT44(uStack36, uStack40);\n                }\n                else {\n                    *pdStack24 = CONCAT44(uStack44, uStack48) - CONCAT44(uStack36, uStack40);\n                }\n            }\n        }\n        else {\n            *param_1 = uStack44;\n            param_1[1] = uStack40;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 776
    },
    "0041e6bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e6bc(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41e743;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    if (((arg_8h != NULL) && (arg_8h != NULL)) && (*arg_8h != 0)) {\n        iVar1 = *0x4be7e0;\n        if (*0x4be7e0 != 0) {\n            iVar1 = *(*0x4be7e0 + -4);\n        }\n        fcn.00409c00(iVar1 + 1);\n        fcn.00408550();\n    }\n    *in_FS_OFFSET = uStack24;\n    return;\n}\n",
        "token_count": 215
    },
    "0041e754": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e754(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41e7d3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar3 = 0; *(*0x4be7e0 + 4 + iVar3 * 0x18) != -1; iVar3 = iVar3 + 1) {\n        iVar1 = *0x4be7e0;\n        if (*0x4be7e0 != 0) {\n            iVar1 = *(*0x4be7e0 + -4);\n        }\n        if (iVar3 == iVar1 + -1) goto code_r0x0041e7bd;\n    }\n    fcn.00408550();\n    uVar2 = fcn.0041a1dc();\n    *(*0x4be7e0 + 4 + iVar3 * 0x18) = uVar2;\ncode_r0x0041e7bd:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41e7da;\n    uStack24 = 0x41e7d2;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 342
    },
    "0041e7e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e7e4(uint param_1, uint param_2)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffa4;\n    code *pcStack56;\n    uint uStack52;\n    uchar *puStack48;\n    code *pcStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack40 = 0x41ea79;\n    pcStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    var_4h = param_2;\n    if (**0x4ba590 == 0) {\n        puStack48 = 0x41e816;\n        fcn.0040554c();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    puStack48 = 0x41e820;\n    fcn.0040690c();\n    puStack48 = 0x41e828;\n    fcn.00406688();\n    uStack52 = 0x41ea5c;\n    pcStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    *0x4be7dc = 0;\n    puStack48 = &stack0xfffffffc;\n    fcn.00409c00(0);\n    fcn.0041e04c(&fcn.0041e7e4::var_8h);\n    iVar3 = fcn.0041a1dc();\n    if (iVar3 - 3U < 3) {\n        uVar4 = sub.kernel32.dll_GetThreadLocale(iVar3, 4);\n        sub.kernel32.dll_EnumCalendarInfoW(fcn.0041e6bc, uVar4);\n        iVar6 = *0x4be7e0;\n        if (*0x4be7e0 != 0) {\n            iVar6 = *(*0x4be7e0 + -4);\n        }\n        if (-1 < iVar6 + -1) {\n            iVar5 = 0;\n            do {\n                *(*0x4be7e0 + 4 + iVar5 * 0x18) = 0xffffffff;\n                iVar5 = iVar5 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        uVar4 = sub.kernel32.dll_GetThreadLocale(iVar3, 3);\n        in_stack_ffffffa4 = fcn.0041e754;\n        sub.kernel32.dll_EnumCalendarInfoW(fcn.0041e754, uVar4);\n    }\n    else if (iVar3 - 1U < 2) {\n        *0x4be7dc = 1;\n        fcn.00409c00(1);\n        fcn.00407e00();\n        *(*0x4be7e0 + 4) = 0;\n        iVar6 = *0x4be7e0;\n        *(*0x4be7e0 + 8) = 0xffc00000;\n        *(iVar6 + 0xc) = 0xc1dfffff;\n        fcn.0041c1dc();\n        iVar1 = fcn.00405790();\n        *(*0x4be7e0 + 0x10) = iVar1;\n        uVar4 = sub.kernel32.dll_GetThreadLocale(iVar3, 4);\n        sub.kernel32.dll_EnumCalendarInfoW(fcn.0041e6bc, uVar4);\n        iVar6 = *0x4be7e0;\n        if (*0x4be7e0 != 0) {\n            iVar6 = *(*0x4be7e0 + -4);\n        }\n        iVar6 = iVar6 + -1;\n        if (0 < iVar6) {\n            iVar5 = 1;\n            do {\n                *(*0x4be7e0 + 4 + iVar5 * 0x18) = 0xffffffff;\n                iVar5 = iVar5 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        uVar4 = sub.kernel32.dll_GetThreadLocale(iVar3, 3);\n        in_stack_ffffffa4 = fcn.0041e754;\n        sub.kernel32.dll_EnumCalendarInfoW(fcn.0041e754, uVar4);\n    }\n    iVar3 = *0x4be7e0;\n    if (*0x4be7e0 != 0) {\n        iVar3 = *(*0x4be7e0 + -4);\n    }\n    fcn.00409c00(iVar3);\n    iVar3 = *0x4be7e0;\n    if (*0x4be7e0 != 0) {\n        iVar3 = *(*0x4be7e0 + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.00408f5c();\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00409d24();\n    *0x4be7dc = *0x4be7e0;\n    if (*0x4be7e0 != 0) {\n        *0x4be7dc = *(*0x4be7e0 + -4);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00406868(0x41ea63);\n    return;\n}\n",
        "token_count": 1305
    },
    "0041eb30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eb30(uint arg_8h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *puVar6;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack52 = 0x41edd7;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack56;\n    var_ch = 1;\n    fcn.00407a20();\n    fcn.0041e04c(&var_4h);\n    puVar6 = &var_14h;\n    fcn.0041e04c(puVar6);\n    iVar4 = fcn.0041a1dc();\n    if (iVar4 - 3U < 3) {\n        while( true ) {\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            if (iVar4 < var_ch) break;\n            uVar2 = *(var_4h + -2 + var_ch * 2);\n            if ((0xd7ff < uVar2) && (uVar2 < 0xe000)) {\n                uVar5 = fcn.00420368();\n                var_10h = uVar5 >> 1;\n                if (var_10h < 0) {\n                    var_10h = var_10h + ((uVar5 & 1) != 0);\n                }\n                *in_FS_OFFSET = &stack0xffffffb4;\n                fcn.00407a20();\n                puVar6 = &var_8h;\n                fcn.004088ac(puVar6);\n                fcn.004086e4();\n                *in_FS_OFFSET = puVar6;\n                fcn.00407a20();\n                return;\n            }\n            iVar4 = fcn.004212cc(1, 2, 0);\n            if (iVar4 == 0) {\n                fcn.004086e4();\n                var_ch = var_ch + 1;\n            }\n            else {\n                iVar4 = fcn.004212cc(1, 4, 0);\n                if (iVar4 == 0) {\n                    fcn.004086e4();\n                    var_ch = var_ch + 3;\n                }\n                else {\n                    iVar4 = fcn.004212cc(1, 2, 0);\n                    if (iVar4 == 0) {\n                        fcn.004086e4();\n                        var_ch = var_ch + 1;\n                    }\n                    else {\n                        iVar1 = *(var_4h + -2 + var_ch * 2);\n                        if ((iVar1 == 0x59) || (iVar1 == 0x79)) {\n                            fcn.004086e4();\n                        }\n                        else {\n                            fcn.00408510();\n                            fcn.004086e4();\n                        }\n                    }\n                }\n            }\n            var_ch = var_ch + 1;\n        }\n        fcn.0041eaec(&stack0xfffffffc);\n    }\n    else {\n        if ((*0x4be6b4 == 4) || (*0x4be6b4 - 0x11U < 2)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        if (bVar3) {\n            while( true ) {\n                iVar4 = var_4h;\n                if (var_4h != 0) {\n                    iVar4 = *(var_4h + -4);\n                }\n                if (iVar4 < var_ch) break;\n                iVar1 = *(var_4h + -2 + var_ch * 2);\n                if ((iVar1 != 0x47) && (iVar1 != 0x67)) {\n                    fcn.00408510();\n                    fcn.004086e4();\n                }\n                var_ch = var_ch + 1;\n            }\n        }\n        else {\n            fcn.00407e00();\n        }\n        fcn.0041eaec(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = puVar6;\n    iStack56 = 0x41edde;\n    fcn.00407a80();\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 1079
    },
    "004200fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004200fc(void)\n\n{\n    fcn.00420120();\n    return;\n}\n",
        "token_count": 23
    },
    "00420120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00420120(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iStack20;\n    \n    iStack20 = 0;\n    if (param_2 < 1) {\n        bVar2 = true;\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        bVar2 = iVar3 < param_2;\n    }\n    if ((!bVar2) && (iVar3 = 1,  0 < param_2)) {\n        do {\n            uVar1 = *(in_EAX + -2 + iVar3 * 2);\n            if ((uVar1 < 0xd800) || (0xdfff < uVar1)) {\n                iVar3 = iVar3 + 1;\n            }\n            else {\n                iVar3 = fcn.004203a0();\n            }\n            iStack20 = iStack20 + 1;\n        } while (iVar3 <= param_2);\n    }\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 275
    },
    "00420184": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420184(int32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = in_EAX;\n    if (in_EAX != 0) {\n        iVar4 = *(in_EAX + -4);\n    }\n    iVar2 = 1;\n    iVar3 = 1;\n    while ((iVar6 = iVar3,  iVar5 = iVar2,  iVar5 < iVar4 && (iVar6 < in_EDX))) {\n        uVar1 = *(in_EAX + -2 + iVar5 * 2);\n        iVar3 = iVar6 + 1;\n        if ((uVar1 < 0xd800) || (0xdfff < uVar1)) {\n            iVar2 = iVar5 + 1;\n        }\n        else {\n            iVar2 = iVar5 + 2;\n            if (iVar4 < iVar5 + 2) {\n                iVar2 = iVar5 + 1;\n                iVar3 = iVar6;\n            }\n        }\n    }\n    if ((((iVar6 == in_EDX) && (iVar5 < iVar4)) && (uVar1 = *(in_EAX + -2 + iVar5 * 2),  0xd7ff < uVar1)) &&\n       (uVar1 < 0xe000)) {\n        iVar5 = fcn.004203a0();\n        iVar5 = iVar5 + -1;\n    }\n    *in_ECX = iVar6;\n    *arg_8h = iVar5;\n    return;\n}\n",
        "token_count": 404
    },
    "00420210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00420210(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    if (!bVar1) {\n        fcn.00420184(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            iVar2 = in_EAX;\n            if (in_EAX != 0) {\n                iVar2 = *(in_EAX + -4);\n            }\n            if (piVar3 < iVar2) {\n                bVar1 = false;\n            }\n            else {\n                if (piVar3 == 0x1) {\n                    if (in_EAX != 0) {\n                        in_EAX = *(in_EAX + -4);\n                    }\n                    bVar1 = 0 < in_EAX;\n                }\n                else {\n                    bVar1 = false;\n                }\n                bVar1 = bVar1 ^ 1;\n            }\n        }\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3;\n            if (1 < param_2) {\n                in_stack_ffffffe8 = piVar3 + 1;\n            }\n        }\n    }\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 434
    },
    "004202a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004202a4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar *in_stack_ffffffec;\n    uint *puVar2;\n    uint auStack16 [2];\n    \n    puVar2 = auStack16;\n    auStack16[0] = 0;\n    if (0 < param_2) {\n        fcn.00420184(auStack16);\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        in_stack_ffffffec = puVar2;\n        if (iVar1 * 2 < puVar2) {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = in_EAX * 2;\n        }\n    }\n    return CONCAT44(auStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 226
    },
    "004203e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.004203e0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    uVar1 = fcn.004084ec(in_EAX, 0);\n    fcn.004084ec(uVar1);\n    iVar2 = fcn.0041a71c(in_EAX);\n    if (iVar2 != 0) {\n        iVar3 = fcn.004084ec(in_EAX, uVar5);\n        iVar4 = iVar2 - iVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((iVar2 - iVar3 & 1U) != 0);\n        }\n        in_EAX = iVar4 + 1;\n    }\n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 234
    },
    "004213a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004213a4(uint Locale, uint arg_ch, uint cchCount2, uint cchCount1, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    bool bVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (iVar1 == 0) {\n        bVar3 = true;\n    }\n    else {\n        iVar1 = in_ECX;\n        if (in_ECX != 0) {\n            iVar1 = *(in_ECX + -4);\n        }\n        bVar3 = iVar1 == 0;\n    }\n    if (bVar3) {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            if (in_ECX != 0) {\n                in_ECX = *(in_ECX + -4);\n            }\n            if (in_ECX < 1) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = -1;\n            }\n        }\n        else {\n            iVar1 = 1;\n        }\n    }\n    else {\n        uVar2 = fcn.00421344();\n        iVar1 = func_0x0040e0a8(Locale, uVar2, in_EAX + in_EDX * 2, cchCount1, in_ECX + arg_18h * 2, cchCount2);\n        iVar1 = iVar1 + -2;\n    }\n    return iVar1;\n}\n",
        "token_count": 405
    },
    "004214f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004214f4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    while (iVar2 = iVar2 + -1,  -1 < iVar2) {\n        iVar1 = param_2;\n        if (param_2 != 0) {\n            iVar1 = *(param_2 + -4);\n        }\n        if (-1 < iVar1 + -1) {\n            iVar3 = 0;\n            do {\n                if (*(param_2 + iVar3 * 2) == *(*in_EAX + iVar2 * 2)) goto code_r0x00421550;\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    iVar2 = -1;\ncode_r0x00421550:\n    return CONCAT44(param_2, iVar2);\n}\n",
        "token_count": 257
    },
    "00421558": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00421558(void)\n\n{\n    uint16_t **in_EAX;\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x421651;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = *in_EAX;\n    if (puVar1 != NULL) {\n        puVar1 = *(puVar1 + -2);\n    }\n    iVar3 = puVar1 + -1;\n    iVar2 = 0;\n    if (((iVar3 < 0) || (**in_EAX < 0x21)) || ((*in_EAX)[iVar3] < 0x21)) {\n        for (; (iVar2 <= iVar3 && ((*in_EAX)[iVar2] < 0x21)); iVar2 = iVar2 + 1) {\n        }\n        if (iVar2 <= iVar3) {\n            for (; (*in_EAX)[iVar3] < 0x21; iVar3 = iVar3 + -1) {\n            }\n            uStack44 = 0x421634;\n            iStack48 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd0;\n            fcn.00407a20();\n            arg_8h = &fcn.00421558::var_4h;\n            fcn.004088ac(arg_8h);\n            fcn.00407e00();\n            *in_FS_OFFSET = arg_8h;\n            uStack44 = 0x42163b;\n            iStack48 = 0x421633;\n            fcn.00407a20();\n            return;\n        }\n        puStack40 = 0x4215d8;\n        puStack28 = &stack0xfffffffc;\n        fcn.00407a20();\n    }\n    else {\n        puStack40 = 0x4215b6;\n        puStack28 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    *in_FS_OFFSET = iStack36;\n    puStack28 = 0x421658;\n    uStack32 = 0x421650;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 598
    },
    "0042176c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042176c(uint *param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    \n    fcn.004084ec();\n    uVar1 = (***in_EAX)();\n    fcn.00409c00(uVar1);\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.004217e4(1, 0, *param_1, param_2);\n    return;\n}\n",
        "token_count": 123
    },
    "004217e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004217e4(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_ch = in_ECX;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    if (~arg_8h < 2) {\n        var_1ch = arg_8h;\n        var_18h._0_1_ = 0;\n        fcn.0041f374(0, &var_1ch);\n        fcn.0040711c();\n    }\n    var_14h = var_ch - arg_8h;\n    if ((arg_10h == 0) && (arg_14h != 0)) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    if (var_14h < 0) {\n        var_1ch = var_ch;\n        var_18h._0_1_ = 0;\n        fcn.0041f374(0, &var_1ch);\n        fcn.0040711c();\n    }\n    if (arg_14h < 0) {\n        var_1ch = arg_14h;\n        var_18h._0_1_ = 0;\n        fcn.0041f374(0, &var_1ch);\n        fcn.0040711c();\n    }\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    if (var_8h - var_14h < arg_14h) {\n        var_1ch = arg_14h;\n        var_18h._0_1_ = 0;\n        fcn.0041f374(0, &var_1ch);\n        fcn.0040711c();\n    }\n    var_10h = arg_10h;\n    if (arg_10h != 0) {\n        var_10h = *(arg_10h + -4);\n    }\n    if ((arg_ch < 0) || (var_10h < arg_ch)) {\n        var_1ch = arg_ch;\n        var_18h._0_1_ = 0;\n        fcn.0041f374(0, &var_1ch);\n        fcn.0040711c();\n    }\n    fcn.004084ec();\n    iVar1 = (***var_4h)();\n    if (var_10h - arg_ch < iVar1) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    fcn.004084ec(var_10h - arg_ch, arg_10h + arg_ch);\n    (**(*var_4h + 4))();\n    return;\n}\n",
        "token_count": 727
    },
    "00421988": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421988(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    ulong uVar3;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    uVar3 = CONCAT44(in_EDX, in_EAX);\n    if ((in_EDX == 0) && (uVar3 = CONCAT44(in_EDX, in_EAX),  arg_8h != 0)) {\n        fcn.0041f338();\n        uVar3 = fcn.0040711c();\n    }\n    if (var_4h < 0) {\n        var_ch = var_4h;\n        var_8h._0_1_ = 0;\n        fcn.0041f374(0, &var_ch);\n        uVar3 = fcn.0040711c();\n    }\n    if (arg_8h < 0) {\n        var_ch = arg_8h;\n        var_8h._0_1_ = 0;\n        fcn.0041f374(0, &var_ch);\n        uVar3 = fcn.0040711c();\n    }\n    iVar2 = uVar3 >> 0x20;\n    piVar1 = uVar3;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 - var_4h < arg_8h) {\n        var_ch = arg_8h;\n        var_8h._0_1_ = 0;\n        fcn.0041f374(0, &var_ch);\n        piVar1 = fcn.0040711c();\n    }\n    (**(*piVar1 + 8))();\n    return;\n}\n",
        "token_count": 442
    },
    "00421a88": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421a88(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    var_4h = in_EAX;\n    if ((iVar1 == 0) && (arg_ch != 0)) {\n        fcn.0041f338();\n        fcn.0040711c();\n        in_EDX = extraout_EDX;\n    }\n    if (in_ECX < 0) {\n        var_ch._0_1_ = 0;\n        var_10h = in_ECX;\n        fcn.0041f374(0, &var_10h);\n        fcn.0040711c();\n        in_EDX = extraout_EDX_00;\n    }\n    if (arg_ch < 0) {\n        var_10h = arg_ch;\n        var_ch._0_1_ = 0;\n        fcn.0041f374(0, &var_10h);\n        fcn.0040711c();\n        in_EDX = extraout_EDX_01;\n    }\n    if (in_EDX != 0) {\n        in_EDX = *(in_EDX + -4);\n    }\n    if (in_EDX - in_ECX < arg_ch) {\n        var_10h = arg_ch;\n        var_ch._0_1_ = 0;\n        fcn.0041f374(0, &var_10h);\n        fcn.0040711c();\n    }\n    iVar1 = fcn.00421988(arg_ch);\n    if ((0 < arg_ch) && (iVar1 == 0)) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    fcn.00408664();\n    uVar2 = fcn.004084ec();\n    (**(*var_4h + 0xc))(iVar1, uVar2);\n    return;\n}\n",
        "token_count": 553
    },
    "00422764": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00422764(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (((iVar2 < 2) || (cVar1 = fcn.004226cc(),  cVar1 == '\\0')) || (cVar1 = fcn.004226cc(),  cVar1 == '\\0')) {\n        if ((iVar2 < 1) || (cVar1 = fcn.004226cc(),  cVar1 == '\\0')) {\n            if (0 < iVar2) {\n                iVar5 = fcn.004226c4();\n                iVar4 = iVar5 + 1;\n                if ((iVar4 <= iVar2) && (*(in_EAX + -2 + iVar4 * 2) == 0x3a)) {\n                    if ((param_2 != '\\0') && ((iVar4 < iVar2 && (cVar1 = fcn.004226cc(),  cVar1 != '\\0')))) {\n                        iVar4 = iVar5 + 2;\n                    }\n                    goto code_r0x00422844;\n                }\n            }\n            iVar4 = 0;\n        }\n        else if (param_2 == '\\0') {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = 1;\n        }\n    }\n    else {\n        iVar4 = 3;\n        iVar5 = 0;\n        if (2 < iVar2) {\n            do {\n                cVar1 = fcn.004226cc();\n                if (cVar1 == '\\0') {\n                    iVar3 = fcn.004226c4();\n                    iVar4 = iVar4 + iVar3;\n                }\n                else {\n                    iVar5 = iVar5 + 1;\n                    if (1 < iVar5) break;\n                    do {\n                        iVar4 = iVar4 + 1;\n                        if (iVar2 < iVar4) break;\n                        cVar1 = fcn.004226cc();\n                    } while (cVar1 != '\\0');\n                }\n            } while (iVar4 <= iVar2);\n        }\n        iVar4 = iVar4 + -1;\n    }\ncode_r0x00422844:\n    return CONCAT14(param_2, iVar4);\n}\n",
        "token_count": 547
    },
    "0042284c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042284c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = fcn.00422764();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    iVar4 = iVar2 + 1;\n    iVar3 = iVar2;\n    while (iVar4 <= in_EAX) {\n        cVar1 = fcn.004226cc();\n        if (cVar1 == '\\0') {\n            iVar3 = fcn.004226c4();\n            iVar4 = iVar4 + iVar3;\n            iVar3 = iVar4 + -1;\n        }\n        else {\n            iVar2 = iVar3;\n            if (param_2 != '\\0') {\n                iVar2 = iVar4;\n            }\n            iVar4 = iVar4 + 1;\n        }\n    }\n    return CONCAT44(iVar3, iVar2);\n}\n",
        "token_count": 236
    },
    "00422924": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00422924(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    iVar3 = fcn.0042284c();\n    iVar1 = 0;\n    iVar3 = iVar3 + 1;\n    while (iVar3 <= iVar2) {\n        if (*(in_EAX + -2 + iVar3 * 2) == 0x2e) {\n            iVar1 = iVar3;\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar4 = fcn.004226c4();\n            iVar3 = iVar3 + iVar4;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 200
    },
    "00422994": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00422994(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004229cc();\n    return uVar1;\n}\n",
        "token_count": 63
    },
    "004229d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004229d8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.00422764();\n    iVar3 = in_EAX;\n    if (in_EAX != 0) {\n        iVar3 = *(in_EAX + -4);\n    }\n    for (; iVar2 < iVar3; iVar3 = iVar3 + -1) {\n        fcn.004229cc();\n        cVar1 = fcn.004226cc();\n        if (cVar1 == '\\0') break;\n    }\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX == iVar3) {\n        fcn.00407e00();\n    }\n    else {\n        fcn.004088ac(param_2);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00422abc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422abc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00408664();\n    while( true ) {\n        iVar3 = *param_2;\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar2 = fcn.004084ec(iVar3);\n        fcn.004084ec(uVar2);\n        iVar3 = sub.kernel32.dll_GetEnvironmentVariableW();\n        if (iVar3 == 0) break;\n        cVar1 = fcn.00422ee4();\n        if (cVar1 != '\\0') {\n            return;\n        }\n    }\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 184
    },
    "00422ee4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00422ee4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    fcn.00408664();\n    return unaff_EBX & 0xffffff00 | param_2 < iVar1;\n}\n",
        "token_count": 112
    },
    "0042478c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042478c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    char in_CL;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_5h;\n    \n    if (4 < in_EDX) {\n        iVar1 = 0;\n        if (0 < in_EDX + -4) {\n            do {\n                if ((*(in_EAX + iVar1) == -0x18) || (*(in_EAX + iVar1) == -0x17)) {\n                    iVar2 = iVar1 + 1;\n                    if ((*(in_EAX + 3 + iVar2) == '\\0') || (*(in_EAX + 3 + iVar2) == -1)) {\n                        uVar3 = arg_8h + iVar2 + 4U & 0xffffff;\n                        uVar4 = CONCAT12(*(in_EAX + 2 + iVar2), CONCAT11(*(in_EAX + 1 + iVar2), *(in_EAX + iVar2)));\n                        if (in_CL == '\\0') {\n                            uVar4 = uVar4 - uVar3;\n                        }\n                        if ((uVar4 & 0x800000) != 0) {\n                            *(in_EAX + 3 + iVar2) = ~*(in_EAX + 3 + iVar2);\n                        }\n                        if (in_CL != '\\0') {\n                            uVar4 = uVar4 + uVar3;\n                        }\n                        *(in_EAX + iVar2) = uVar4;\n                        *(in_EAX + 1 + iVar2) = uVar4 >> 8;\n                        *(in_EAX + 2 + iVar2) = uVar4 >> 0x10;\n                    }\n                    iVar1 = iVar1 + 5;\n                }\n                else {\n                    iVar1 = iVar1 + 1;\n                }\n            } while (iVar1 < in_EDX + -4);\n        }\n    }\n    return;\n}\n",
        "token_count": 457
    },
    "00424a40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424a40(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (*(in_EAX + 0xc) < 5) {\n        fcn.0041f27c();\n        fcn.0040711c();\n    }\n    fcn.00423e08();\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + -4;\n    uVar2 = *(in_EAX + 0xc);\n    if (0x1000 < uVar2) {\n        uVar2 = 0x1000;\n    }\n    fcn.00423e08();\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) - uVar2;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x18) = uVar2;\n    iVar1 = fcn.00424774();\n    if (iVar1 != param_1) {\n        fcn.0041f27c();\n        fcn.0040711c();\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "0042d498": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d498(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EDX;\n    float10 fVar2;\n    ushort in_stack_fffffff2;\n    uint var_4h;\n    \n    uVar1 = *in_EDX & 0xbfff;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42d4c8\n        switch(uVar1) {\n        case 0:\n        case 1:\n        case 9:\n        case 10:\n            goto code_r0x0042d6eb;\n        case 2:\n            fcn.0042d0b4();\n            break;\n        case 3:\n            fcn.0042d0b4();\n            break;\n        case 4:\n            fVar2 = **(in_EDX + 4);\n            fcn.0042d20c(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_fffffff2, fVar2 >> 0x40));\n            break;\n        case 5:\n            fVar2 = **(in_EDX + 4);\n            fcn.0042d20c(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_fffffff2, fVar2 >> 0x40));\n            break;\n        case 6:\n            fcn.0042d2a0(**(in_EDX + 4), (*(in_EDX + 4))[1]);\n            break;\n        case 7:\n            fcn.0042d2f8(**(in_EDX + 4), (*(in_EDX + 4))[1]);\n            break;\n        case 8:\n            fcn.00408ba0(*(arg_8h + -2) & 0xff | (*(arg_8h + -2) >> 8) << 8);\n            break;\n        case 0xb:\n            fcn.004082cc();\n            break;\n        default:\n            fcn.0042d6fc();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042d15c(**(in_EDX + 4), (*(in_EDX + 4))[1]);\n                return;\n            }\n            if (uVar1 == 0x10) {\n                fcn.0042d0b4();\n                return;\n            }\n            if (uVar1 == 0x11) {\n                fcn.0042d108();\n                return;\n            }\n            if (uVar1 == 0x12) {\n                fcn.0042d108();\n                return;\n            }\n            if (uVar1 == 0x13) {\n                fcn.0042d108();\n                return;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                fcn.0042d1b4(**(in_EDX + 4), (*(in_EDX + 4))[1]);\n                return;\n            }\n            if (uVar1 == 0x100) {\n                fcn.004080fc();\n                return;\n            }\n            if (uVar1 == 0x102) {\n                fcn.00408130();\n                return;\n            }\n        }\ncode_r0x0042d6eb:\n        fcn.0042d350();\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "0042d6fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042d6fc(uint16_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    float10 fVar3;\n    uchar uVar4;\n    uchar uVar5;\n    ushort in_stack_ffffffea;\n    ushort uVar6;\n    uint var_8h;\n    uint var_2h;\n    \n    uVar1 = *param_2;\n    var_2h._0_2_ = param_1;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42d731\n        switch(uVar1) {\n        case 0:\n            fcn.00407a44();\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            fcn.004082cc();\n            break;\n        case 2:\n            if ((param_2[4] < -0x80) || (0xff < param_2[4])) {\n                fcn.0042d0b4();\n            }\n            else {\n                fcn.004082cc();\n            }\n            break;\n        case 3:\n            if ((*(param_2 + 4) < -0x80) || (0xff < *(param_2 + 4))) {\n                fcn.0042d0b4();\n            }\n            else {\n                fcn.004082cc();\n            }\n            break;\n        case 4:\n            fVar3 = *(param_2 + 4);\n            fcn.0042d20c(SUB104(fVar3, 0), fVar3 >> 0x20, CONCAT22(in_stack_ffffffea, fVar3 >> 0x40));\n            break;\n        case 5:\n            fVar3 = *(param_2 + 4);\n            fcn.0042d20c(SUB104(fVar3, 0), fVar3 >> 0x20, CONCAT22(in_stack_ffffffea, fVar3 >> 0x40));\n            break;\n        case 6:\n            fcn.0042d2a0(*(param_2 + 4), *(param_2 + 6));\n            break;\n        case 7:\n            fcn.0042d2f8(*(param_2 + 4), *(param_2 + 6));\n            break;\n        case 8:\n            fcn.00408ba0(param_1 & 0xff | (param_1 >> 8) << 8);\n            break;\n        case 9:\ncode_r0x0042da11:\n            fcn.0042d350();\n            break;\n        case 10:\n            goto code_r0x0042da68;\n        case 0xb:\n            fcn.004082cc();\n            break;\n        default:\n            fcn.0042d6fc();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042d15c(*(param_2 + 4), *(param_2 + 6));\n                return;\n            }\n    // switch table (7 cases) at 0x42d77f\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042da11;\n            case 0x10:\n                fcn.004082cc();\n                return;\n            case 0x11:\n                fcn.004082cc();\n                return;\n            case 0x12:\n                if (param_2[4] < 0x100) {\n                    fcn.004082cc();\n                    return;\n                }\n                fcn.0042d108();\n                return;\n            case 0x13:\n                if (*(param_2 + 4) < 0x100) {\n                    fcn.004082cc();\n                    return;\n                }\n                fcn.0042d108();\n                return;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                fcn.0042d1b4(*(param_2 + 4), *(param_2 + 6));\n                return;\n            }\n            if (uVar1 == 0x100) {\n                fcn.00407e9c();\n                return;\n            }\n            if (uVar1 == 0x101) {\n                fcn.0042d42c(&var_2h + 2);\n                return;\n            }\n            if (uVar1 == 0x102) {\n                uVar4 = param_1;\n                uVar5 = param_1 >> 8;\n                uVar6 = 0;\n                fcn.004084ec();\n                fcn.00408ba0(CONCAT22(uVar6, CONCAT11(uVar5, uVar4)));\n                return;\n            }\n        }\ncode_r0x0042da68:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042d3ac();\n            if (cVar2 == '\\0') {\n                fcn.0042d350();\n            }\n        }\n        else {\n            fcn.0042d498(&var_2h + 2);\n        }\n    }\n    return;\n}\n",
        "token_count": 1195
    },
    "0042ed58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ed58(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.0040b47c();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x4b939a != '\\0') {\n                    fcn.00428c94();\n                }\n                fcn.0040b47c();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x0042eded;\n        }\n        fcn.0040b494();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.0042ece0();\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.0040b494();\n            return;\n        }\ncode_r0x0042eded:\n        cVar2 = fcn.004309a8();\n        if (cVar2 != '\\0') {\n            fcn.0040b47c();\n            cVar2 = fcn.00405dbc();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00428c94();\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "0042f698": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042f698(uint32_t param_1, uint8_t param_2)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    uint unaff_EBX;\n    unkbyte3 Var3;\n    uint32_t uVar2;\n    uint32_t uStack8;\n    \n    uStack8 = param_1 & 0xffffff00 | param_2;\n    Var3 = unaff_EBX >> 8;\n    uVar2 = CONCAT31(Var3, 1);\n    if (param_1 == 0xe) {\n        if (*0x4b9398 == '\\0') {\n            fcn.00428d8c();\n        }\n        else if (*0x4b9398 == '\\x01') {\n            uVar2 = *0x4b93d2;\n        }\n        else if (*0x4b9398 == '\\x02') {\n            if ((in_AL == '\\x02') && (param_2 == 2)) {\n                iVar1 = 1;\n            }\n            else {\n                iVar1 = 0;\n            }\n            uVar2 = *(iVar1 + 0x4b93d2);\n        }\n    }\n    else if (param_1 == 0xf) {\n        if (*0x4b9398 == '\\0') {\n            fcn.00428d8c();\n        }\n        else if (*0x4b9398 == '\\x01') {\n            uVar2 = *0x4b93d4;\n        }\n        else if (*0x4b9398 == '\\x02') {\n            if ((in_AL == '\\x02') && (param_2 == 2)) {\n                iVar1 = 0;\n            }\n            else {\n                iVar1 = 1;\n            }\n            uVar2 = *(iVar1 + 0x4b93d4);\n        }\n    }\n    else if (param_1 - 0x10 < 4) {\n        if (*0x4b9399 == '\\0') {\n            fcn.00428d8c();\n        }\n        else if (*0x4b9399 == '\\x01') {\n            uVar2 = *(param_1 * 2 + 0x4b93b6);\n        }\n        else if (*0x4b9399 == '\\x02') {\n            if (in_AL == '\\x02') {\n                if (param_2 == 2) {\n                    uVar2 = CONCAT31(Var3, 1);\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n            else {\n                uVar2 = CONCAT31(Var3, 2);\n            }\n        }\n    }\n    else {\n        fcn.00428d38();\n    }\n    return CONCAT44(uStack8, uVar2);\n}\n",
        "token_count": 614
    },
    "004306ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004306ac(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    \n    puStack16 = 0x4306c3;\n    fcn.004065e0();\n    uStack20 = 0x430739;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    iVar3 = *0x4c17bc;\n    if (*0x4c17bc != 0) {\n        iVar3 = *(*0x4c17bc + -4);\n    }\n    iVar3 = iVar3 + -1;\n    puStack16 = &stack0xfffffffc;\n    puVar2 = &stack0xfffffffc;\n    if (-1 < iVar3) {\n        do {\n            iVar1 = *(*0x4c17bc + iVar3 * 4);\n            if (iVar1 != 0) {\n                if (iVar1 != *0x4b93bc) {\n                    fcn.00405ce8();\n                }\n                if (*(*0x4c17bc + iVar3 * 4) == *0x4b93bc) {\n                    *(*0x4c17bc + iVar3 * 4) = 0;\n                }\n            }\n            iVar3 = iVar3 + -1;\n            puVar2 = puStack16;\n        } while (iVar3 != -1);\n    }\n    puStack16 = puVar2;\n    fcn.00409d24();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x430740;\n    uStack20 = 0x430738;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 399
    },
    "004309a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.004309a8(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_1h;\n    \n    if (((*0x4c17bc == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack20 = 0x4309e9;\n        fcn.004065e0();\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar2 = *0x4c17bc;\n        if (*0x4c17bc != 0) {\n            iVar2 = *(*0x4c17bc + -4);\n        }\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x4c17bc + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack28;\n        uStack20 = 0x430a61;\n        uStack24 = 0x430a59;\n        uVar3 = fcn.00406868();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "00430a6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00430afa)\n// WARNING: Removing unreachable block (ram,0x00430b02)\n\nvoid __fastcall fcn.00430a6c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x430b60;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x430a9e;\n    fcn.004065e0();\n    uStack60 = 0x430b43;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    var_10h = *0x4c17bc;\n    if (*0x4c17bc != 0) {\n        var_10h = *(*0x4c17bc + -4);\n    }\n    if (-1 < var_10h + -1) {\n        var_ch = 0;\n        puStack56 = &stack0xfffffffc;\n        do {\n            iVar1 = *(*0x4c17bc + var_ch * 4);\n            if (((iVar1 != 0) && (iVar1 != *0x4b93bc)) && (fcn.00405be8(),  in_EAX == 0)) {\n                *param_2 = iVar1;\n                break;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x430b4a;\n    uStack60 = 0x430b42;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 496
    },
    "00431030": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431030(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (**0x4ba720 == NULL) {\n        do {\n            if (iVar2 < 0x41) {\n                if (iVar2 < 9) {\n                    iVar2 = iVar2 + 4;\n                }\n                else {\n                    iVar2 = iVar2 + 0x10;\n                }\n            }\n            else {\n                uVar1 = iVar2 * 3;\n                iVar2 = uVar1 >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((uVar1 & 1) != 0);\n                }\n            }\n            if (iVar2 < 0) {\n                fcn.0041f270();\n            }\n        } while (iVar2 < param_2);\n    }\n    else {\n        (***0x4ba720)();\n    }\n    fcn.00432310();\n    return;\n}\n",
        "token_count": 266
    },
    "0043109c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043109c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 < param_2) {\n        fcn.00431030();\n        return;\n    }\n    if (param_2 < 0) {\n        fcn.0041f270();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0043112c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0043112c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 == iVar1) {\n        fcn.00431030();\n    }\n    fcn.0040b494();\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "00431174": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00431174(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 == iVar1) {\n        fcn.00431030();\n    }\n    fcn.00407e00();\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return iVar1;\n}\n",
        "token_count": 157
    },
    "004313b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004313b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(*(arg_8h + -4) + 4) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = (**(*(arg_8h + -4) + 0x14))();\n            if (iVar1 == 0) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return -1;\n}\n",
        "token_count": 144
    },
    "00431414": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431414(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    if (in_EAX[5] == 0) {\n        piVar2 = *in_EAX + in_EAX[1] * 4;\n        iVar1 = in_EAX[1] + -1;\n        if (-1 < iVar1) {\n            do {\n                piVar2 = piVar2 + -1;\n                if (*piVar2 == *param_2) {\n                    return iVar1;\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        iVar1 = -1;\n    }\n    else {\n        iVar1 = fcn.004313b4(&stack0xfffffffc);\n    }\n    return iVar1;\n}\n",
        "token_count": 210
    },
    "00431464": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431464(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[1] < param_2) {\n        fcn.00431010();\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 == in_EAX[1]) {\n        fcn.00431030();\n    }\n    if (param_2 != in_EAX[1]) {\n        fcn.004055b4();\n    }\n    *(*in_EAX + param_2 * 4) = 0;\n    fcn.0040b494();\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00431524": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431524(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 == iVar1) {\n        fcn.00431030();\n    }\n    *(*in_EAX + iVar1 * 4) = *param_2;\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return iVar1;\n}\n",
        "token_count": 177
    },
    "00431568": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431568(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 == iVar1) {\n        fcn.00431030();\n    }\n    iVar2 = *in_EAX;\n    *(iVar2 + iVar1 * 8) = *param_2;\n    *(iVar2 + 4 + iVar1 * 8) = param_2[1];\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return iVar1;\n}\n",
        "token_count": 206
    },
    "004315b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.004315b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 == iVar1) {\n        fcn.00431030();\n    }\n    iVar2 = 1;\n    fcn.00409578(1);\n    *(iVar2 + 4) = *(iVar2 + 4) + 1;\n    if (*(iVar2 + 0x10) != 0) {\n        (**(iVar2 + 0x10))();\n    }\n    return CONCAT44(iVar2, iVar1);\n}\n",
        "token_count": 177
    },
    "00431660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.00431660(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (iVar2 == iVar1) {\n        fcn.00431030();\n    }\n    fcn.004055b4();\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return CONCAT44(in_EAX, iVar1);\n}\n",
        "token_count": 161
    },
    "00432040": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432040(uint *param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[1] < param_2) {\n        fcn.00431010();\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 == in_EAX[1]) {\n        fcn.00431030();\n    }\n    if (param_2 != in_EAX[1]) {\n        fcn.004055b4();\n    }\n    *(*in_EAX + param_2 * 4) = *param_1;\n    in_EAX[1] = in_EAX[1] + 1;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00432324": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432324(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 < 0) {\n        fcn.00431010();\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 < param_2) {\n        fcn.00432310();\n    }\n    if (param_2 < in_EAX[1]) {\n        fcn.00431724();\n    }\n    in_EAX[1] = param_2;\n    return;\n}\n",
        "token_count": 154
    },
    "004323f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004323f0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 < 0) {\n        fcn.00431010();\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (iVar1 < param_2) {\n        fcn.00432310();\n    }\n    if (param_2 < in_EAX[1]) {\n        fcn.00431bdc();\n    }\n    in_EAX[1] = param_2;\n    return;\n}\n",
        "token_count": 156
    },
    "0043d430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0043d430(void)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    \n    iVar1 = fcn.0043cbc0();\n    if (iVar1 != 0) {\n        pcVar2 = fcn.0043cbc0();\n        if (*pcVar2 == '\\r') {\n            iVar1 = fcn.0043cbd8();\n            return *(iVar1 + 4);\n        }\n        pcVar2 = fcn.0043cbc0();\n        if (*pcVar2 == '\\x11') {\n            piVar3 = fcn.0043d6d8();\n            if (*piVar3 == 0) {\n                return 0;\n            }\n            return *(*piVar3 + -4);\n        }\n    }\n    fcn.0041f338();\n    uVar4 = fcn.0040711c();\n    return uVar4;\n}\n",
        "token_count": 212
    },
    "0043e514": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043e60e)\n// WARNING: Removing unreachable block (ram,0x0043e73d)\n// WARNING: Removing unreachable block (ram,0x0043e6a0)\n// WARNING: Removing unreachable block (ram,0x0043e6da)\n// WARNING: Removing unreachable block (ram,0x0043e621)\n// WARNING: Removing unreachable block (ram,0x0043e6af)\n// WARNING: Removing unreachable block (ram,0x0043e749)\n\nvoid __fastcall fcn.0043e514(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    char **in_EAX;\n    uint16_t *puVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t in_stack_fffffed4;\n    uint32_t uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack288 = 0x43e53f;\n    fcn.00408bb4();\n    uStack292 = 0x43e792;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    cVar1 = **in_EAX;\n    if (cVar1 == '\\x05') {\n        puStack288 = &stack0xfffffffc;\n        fcn.0043d6d8();\n        in_stack_fffffed4 = 0x43e575;\n        fcn.00408658();\n    }\n    else if (cVar1 == '\\n') {\n        puStack288 = &stack0xfffffffc;\n        fcn.0043d6d8();\n        in_stack_fffffed4 = 0x43e59b;\n        fcn.004085a8();\n    }\n    else if (cVar1 == '\\v') {\n        puStack288 = &stack0xfffffffc;\n        fcn.0043d6d8();\n        in_stack_fffffed4 = 0x43e588;\n        fcn.004085c8();\n    }\n    else {\n        puStack288 = &stack0xfffffffc;\n        if (cVar1 == '\\x12') {\n            puStack288 = &stack0xfffffffc;\n            fcn.0043d6d8();\n            in_stack_fffffed4 = 0x43e5ae;\n            fcn.00407e48();\n        }\n    }\n    // switch table (19 cases) at 0x43e5db\n    switch(*param_2) {\n    case 2:\n        in_stack_fffffed4 = 0x43e699;\n        fcn.004082cc();\n        break;\n    case 5:\n        fcn.004082cc();\n        fcn.00467260();\n        fcn.0040819c();\n        fcn.00408c90();\n        in_stack_fffffed4 = 0x43e658;\n        fcn.0043d4a8();\n        break;\n    case 9:\n        break;\n    case 10:\n        puVar2 = fcn.00467260();\n        in_stack_fffffed4 = *puVar2;\n        fcn.004084ec();\n        fcn.00408ba0(in_stack_fffffed4);\n        fcn.00408c90();\n        fcn.0043d4a8();\n        break;\n    case 0xb:\n        fcn.004085dc();\n        fcn.00408c90();\n        in_stack_fffffed4 = 0x43e684;\n        fcn.0043d4a8();\n        break;\n    case 0x12:\n        fcn.00408c90();\n        in_stack_fffffed4 = 0x43e734;\n        fcn.0043d4a8();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x43e799;\n    uStack296 = 0x43e781;\n    fcn.00407a68();\n    uStack296 = 0x43e789;\n    fcn.00407a44();\n    uStack296 = 0x43e791;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 958
    },
    "0043fbc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043fc18)\n\nvoid fcn.0043fbc0(void)\n\n{\n    uint8_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43fc46;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00407a20();\n    if (*in_EAX != 0) {\n        fcn.00409c00(*in_EAX + 1);\n        fcn.004055b4();\n        fcn.0040c9b8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43fc4d;\n    uStack28 = 0x43fc45;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 224
    },
    "00443ef4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443ef4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar3 = *(arg_8h + -4);\n    if (-1 < iVar3 + -1) {\n        iVar2 = 0;\n        do {\n            if ((*(**(arg_8h + -8) + iVar2 * 4) != 0) && (iVar1 = fcn.0044681c(),  iVar1 == *(in_EAX + 4))) {\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    var_ch = *(*(*(arg_8h + 8) + -4) + 4);\n    if (var_ch != 0) {\n        var_ch = *(var_ch + -4);\n    }\n    if (-1 < var_ch + -1) {\n        iVar3 = 0;\n        do {\n            if ((*(*(*(*(arg_8h + 8) + -4) + 4) + iVar3 * 4) != 0) && (iVar2 = fcn.0044681c(),  iVar2 == *(in_EAX + 4)))\n            {\n                var_8h = *(*(*(*(arg_8h + 8) + -4) + 4) + iVar3 * 4);\n                *(*(*(*(arg_8h + 8) + -4) + 4) + iVar3 * 4) = 0;\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    if (var_8h == 0) {\n        var_8h = fcn.004535b8(&var_4h, 0);\n    }\n    *(**(arg_8h + -8) + *(arg_8h + -4) * 4) = var_8h;\n    *(arg_8h + -4) = *(arg_8h + -4) + 1;\n    return;\n}\n",
        "token_count": 526
    },
    "00444020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004441b6)\n// WARNING: Removing unreachable block (ram,0x004441bf)\n// WARNING: Removing unreachable block (ram,0x004441c4)\n// WARNING: Removing unreachable block (ram,0x004441ce)\n// WARNING: Removing unreachable block (ram,0x004441d1)\n\nvoid __cdecl fcn.00444020(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x444264;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00405cb8();\n    fcn.0040b494();\n    if (*0x4c17e8 == 0) {\n        *0x4c17e8 = fcn.00405cb8();\n    }\n    if (**0x4ba590 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406688();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puVar1 = **0x4ba700;\n    iVar2 = fcn.0043bb3c();\n    if (iVar2 == *(*(arg_8h + -4) + 0xc)) {\n        fcn.00409d68();\n        fcn.00407210();\n        *in_FS_OFFSET = arg_8h_00;\n        fcn.0040b47c();\n        fcn.0040b47c();\n        return;\n    }\n    var_4h = 0;\n    for (; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[5] == 0) {\n            arg_8h_00 = puVar1[1];\n            iVar3 = fcn.0040e1b8(arg_8h_00, 0x444274);\n            if (iVar3 != 0) goto code_r0x0044410a;\n        }\n        else {\ncode_r0x0044410a:\n            var_4h = var_4h + 1;\n        }\n    }\n    fcn.00409c00(var_4h);\n    puVar1 = **0x4ba700;\n    do {\n        if (puVar1 == NULL) {\n            iVar3 = *(*(arg_8h + -4) + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (-1 < iVar3 + -1) {\n                do {\n                    fcn.00405ce8();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            fcn.00409c00(0);\n            fcn.00409d68();\n            *(*(arg_8h + -4) + 0xc) = iVar2;\n            *in_FS_OFFSET = arg_8h_00;\n            if (*0x4c17e8 == 0) {\n                *0x4c17e8 = fcn.00405cb8();\n            }\n            fcn.00406868();\n            return;\n        }\n        if (puVar1[5] == 0) {\n            arg_8h_00 = puVar1[1];\n            iVar3 = fcn.0040e1b8(arg_8h_00, 0x444274);\n            if (iVar3 != 0) goto code_r0x00444156;\n        }\n        else {\ncode_r0x00444156:\n            fcn.00443ef4(&stack0xfffffffc);\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 931
    },
    "00444324": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00444358)\n// WARNING: Removing unreachable block (ram,0x0044438c)\n\nvoid __fastcall fcn.00444324(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4443bf;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004442a0();\n    iVar1 = 0;\n    iVar3 = 0;\n    while (iVar2 = iVar3,  1 < iVar2 - iVar1) {\n        iVar3 = iVar2 + iVar1 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((iVar2 + iVar1 & 1U) != 0);\n        }\n        if (*(*(iVar3 * 4) + 0x20) <= param_2) {\n            iVar1 = iVar3;\n            iVar3 = iVar2;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4443c6;\n    uStack28 = 0x4443be;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 340
    },
    "00444844": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444844(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_204h;\n    uint var_200h;\n    uint var_1e8h;\n    uint var_e8h;\n    uint var_d0h;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar4 = 0x40;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00408bb4();\n    fcn.00408bb4();\n    fcn.00408bb4();\n    fcn.00408bb4();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409c00();\n    iVar4 = arg_ch;\n    if (arg_ch != 0) {\n        iVar4 = *(arg_ch + -4);\n    }\n    if (-1 < iVar4 + -1) {\n        iVar5 = 0;\n        var_4h = in_EDX;\n        do {\n            (**(**(arg_ch + iVar5 * 4) + 0x10))();\n            uVar1 = fcn.004474e0();\n    // switch table (16 cases) at 0x444920\n            switch(uVar1 & 0x7f) {\n            case 5:\n                (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                fcn.00446cec();\n                fcn.00444808(&stack0xfffffffc);\n                fcn.004560a0();\n                fcn.0043d174(arg_8h_00);\n                fcn.00408f5c();\n                break;\n            default:\n                piVar2 = (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                iVar3 = (**(*piVar2 + 0x18))();\n                (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                fcn.00446cec();\n                fcn.00408c90();\n                fcn.0043d4a8();\n                var_4h = var_4h + iVar3;\n                break;\n            case 7:\n                (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                fcn.00446cec();\n                fcn.00444458();\n                fcn.0043ce98();\n                fcn.0043d174(arg_8h_00);\n                fcn.00408f5c();\n                var_4h = var_4h + 1;\n                break;\n            case 10:\n            case 0xb:\n            case 0x12:\n                (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                fcn.00446cec();\n                fcn.004447cc(&stack0xfffffffc);\n                fcn.00457c1c();\n                fcn.0043d174(arg_8h_00);\n                fcn.00408f5c();\n                break;\n            case 0x13:\n                if (*var_4h == 0) {\n                    fcn.0043cd60();\n                    fcn.00408f5c();\n                }\n                else {\n                    (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                    fcn.00446cec();\n                    fcn.00467260();\n                    fcn.0043cee8();\n                    fcn.0043d174(arg_8h_00);\n                    fcn.00408f5c();\n                }\n                var_4h = var_4h + 1;\n                break;\n            case 0x14:\n                if (*var_4h == 0) {\n                    fcn.0043cd60();\n                    fcn.00408f5c();\n                }\n                else {\n                    (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                    iVar3 = fcn.00446cec();\n                    if (iVar3 == *0x466000) {\n                        (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                        fcn.00446cec();\n                        fcn.00408c90();\n                        fcn.0043d55c();\n                    }\n                    else {\n                        (**(**(arg_ch + iVar5 * 4) + 0x10))();\n                        fcn.00446cec();\n                        fcn.00408c90();\n                        fcn.0043d4a8();\n                    }\n                }\n                var_4h = var_4h + 1;\n            }\n            iVar5 = iVar5 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00407a44();\n    fcn.00408c90();\n    fcn.00408d08();\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 1234
    },
    "00444c58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00444caa)\n// WARNING: Removing unreachable block (ram,0x00444cfa)\n\nvoid __fastcall fcn.00444c58(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x444d34;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    (**(*in_EAX + 0x20))();\n    for (iVar2 = 0; iVar2 < 0; iVar2 = iVar2 + 1) {\n        iVar3 = (**(**(iVar2 * 4) + 0x28))();\n        if (iVar3 == param_2) goto code_r0x00444d13;\n    }\n    fcn.00409d24();\n    iVar2 = **(param_2 + 2);\n    (**(*in_EAX + 0x20))();\n    for (iVar3 = 0; iVar3 < 0; iVar3 = iVar3 + 1) {\n        iVar1 = (**(**(iVar3 * 4) + 0x28))();\n        if (iVar1 == iVar2) goto code_r0x00444d13;\n    }\n    fcn.00409d24();\ncode_r0x00444d13:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x444d3b;\n    uStack44 = 0x444d33;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 438
    },
    "00444d44": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d44(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    \n    var_30h = 0;\n    fcn.00408bb4();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    fcn.0043fb58();\n    fcn.0044441c();\n    fcn.00405f54();\n    var_20h = fcn.0043fb58();\n    uVar1 = fcn.0043fb6c();\n    var_1ch = *in_EAX;\n    *in_EAX = *in_EAX + (uVar1 & 0xffff);\n    piVar2 = fcn.00444c58();\n    if (piVar2 != NULL) {\n        var_2ch = fcn.00449238();\n        (**(*piVar2 + 0x38))(arg_8h);\n        fcn.00444844(&var_30h, 0);\n        var_24h = var_30h;\n        var_28h = var_30h;\n        iVar3 = var_30h;\n        if (var_30h != 0) {\n            iVar3 = *(var_30h + -4);\n        }\n        arg_8h_00 = &var_18h;\n        fcn.00452060(arg_8h_00, iVar3 + -1);\n        fcn.00457c4c();\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00409d24();\n    fcn.00409d24();\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 482
    },
    "00446520": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044666a)\n\nvoid fcn.00446520(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4466fa;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (*(in_EAX + 0x14) == 0) {\n        puStack48 = 0x44655b;\n        puStack36 = &stack0xfffffffc;\n        fcn.00409c0c();\n    }\n    else {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4c17e8 == 0) {\n            puStack48 = 0x446575;\n            *0x4c17e8 = fcn.00405cb8();\n            puVar1 = puStack36;\n        }\n        puStack36 = puVar1;\n        if (**0x4ba590 == 0) {\n            puStack48 = 0x44658b;\n            fcn.0040554c();\n        }\n        puStack48 = 0x446595;\n        fcn.0040690c();\n        puStack48 = 0x44659d;\n        fcn.00406688();\n        uStack52 = 0x4466c9;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        if (*(in_EAX + 0x14) == 0) {\n            puStack48 = &stack0xfffffffc;\n            fcn.00409c0c();\n            fcn.00407210();\n        }\n        else {\n            if (**(in_EAX + 0x14) != 2) {\n                puStack48 = &stack0xfffffffc;\n                fcn.00405cb8();\n                fcn.0040b494();\n                fcn.00444e78();\n                fcn.00409d68();\n                fcn.00409d68();\n                for (iVar2 = 0; iVar2 < 0; iVar2 = iVar2 + 1) {\n                    (**(**(in_EAX + 0xc) + 0xc))();\n                }\n                fcn.00409d24();\n                *(in_EAX + 0x14) = 0;\n                fcn.00409c0c();\n                *in_FS_OFFSET = uStack56;\n                puStack48 = 0x4466d0;\n                if (*0x4c17e8 == 0) {\n                    uStack52 = 0x4466b9;\n                    *0x4c17e8 = fcn.00405cb8();\n                }\n                uStack52 = 0x4466c8;\n                fcn.00406868();\n                return;\n            }\n            puStack48 = &stack0xfffffffc;\n            fcn.00409d24();\n            *(in_EAX + 0x14) = 0;\n            fcn.00409d24();\n            fcn.00407210();\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x446701;\n    uStack52 = 0x4466eb;\n    fcn.00409d24();\n    uStack52 = 0x4466f9;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 834
    },
    "00446b38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446bc3)\n// WARNING: Removing unreachable block (ram,0x00446b8e)\n// WARNING: Removing unreachable block (ram,0x00446b98)\n\nvoid __fastcall fcn.00446b38(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x446c07;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    (**(*in_EAX + 0x24))();\n    for (iVar1 = 0; iVar1 < 0; iVar1 = iVar1 + 1) {\n        (**(**(iVar1 * 4) + 8))();\n        if (param_2 == 0) goto code_r0x00446be3;\n    }\n    fcn.00409d24();\ncode_r0x00446be3:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x446c0e;\n    uStack48 = 0x446bf8;\n    fcn.00407a20();\n    uStack48 = 0x446c06;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 356
    },
    "00446c18": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446c9f)\n\nvoid fcn.00446c18(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x446cdc;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar3 = 0;\n    piVar2 = in_EAX;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX != NULL) {\n        do {\n            iVar3 = iVar3 + 1;\n            piVar2 = (**(*piVar2 + 0x1c))();\n            puVar1 = puStack32;\n        } while (piVar2 != NULL);\n    }\n    puStack32 = puVar1;\n    fcn.00409c00(iVar3);\n    if (in_EAX != NULL) {\n        do {\n            (**(*in_EAX + 0x4c))();\n            fcn.00409d68();\n            in_EAX = (**(*in_EAX + 0x1c))();\n        } while (in_EAX != NULL);\n    }\n    fcn.004580c4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x446ce3;\n    uStack36 = 0x446ccd;\n    fcn.00409d24();\n    uStack36 = 0x446cdb;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 403
    },
    "00446cf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446d77)\n\nvoid fcn.00446cf0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x446db4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar3 = 0;\n    piVar2 = in_EAX;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX != NULL) {\n        do {\n            iVar3 = iVar3 + 1;\n            piVar2 = (**(*piVar2 + 0x1c))();\n            puVar1 = puStack32;\n        } while (piVar2 != NULL);\n    }\n    puStack32 = puVar1;\n    fcn.00409c00(iVar3);\n    if (in_EAX != NULL) {\n        do {\n            (**(*in_EAX + 0x50))();\n            fcn.00409d68();\n            in_EAX = (**(*in_EAX + 0x1c))();\n        } while (in_EAX != NULL);\n    }\n    fcn.00458148();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x446dbb;\n    uStack36 = 0x446da5;\n    fcn.00409d24();\n    uStack36 = 0x446db3;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 403
    },
    "00446dc4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446e4f)\n// WARNING: Removing unreachable block (ram,0x00446e1a)\n// WARNING: Removing unreachable block (ram,0x00446e24)\n\nvoid __fastcall fcn.00446dc4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x446e93;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    (**(*in_EAX + 0x2c))();\n    for (iVar1 = 0; iVar1 < 0; iVar1 = iVar1 + 1) {\n        (**(**(iVar1 * 4) + 8))();\n        if (param_2 == 0) goto code_r0x00446e6f;\n    }\n    fcn.00409d24();\ncode_r0x00446e6f:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x446e9a;\n    uStack48 = 0x446e84;\n    fcn.00407a20();\n    uStack48 = 0x446e92;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 360
    },
    "00446f14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446f9f)\n// WARNING: Removing unreachable block (ram,0x00446f6a)\n// WARNING: Removing unreachable block (ram,0x00446f74)\n\nvoid __fastcall fcn.00446f14(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x446fe3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    (**(*in_EAX + 0x20))();\n    for (iVar1 = 0; iVar1 < 0; iVar1 = iVar1 + 1) {\n        (**(**(iVar1 * 4) + 8))();\n        if (param_2 == 0) goto code_r0x00446fbf;\n    }\n    fcn.00409d24();\ncode_r0x00446fbf:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x446fea;\n    uStack48 = 0x446fd4;\n    fcn.00407a20();\n    uStack48 = 0x446fe2;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 355
    },
    "00446ff4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447170)\n// WARNING: Removing unreachable block (ram,0x0044709f)\n// WARNING: Removing unreachable block (ram,0x0044706c)\n// WARNING: Removing unreachable block (ram,0x00447076)\n// WARNING: Removing unreachable block (ram,0x0044712f)\n// WARNING: Removing unreachable block (ram,0x00447139)\n\nvoid __fastcall fcn.00446ff4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x4471bf;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    (**(*in_EAX + 0x20))();\n    var_18h = 0;\n    fcn.00409d68();\n    for (iVar2 = 0; iVar2 < 0; iVar2 = iVar2 + 1) {\n        (**(**(iVar2 * 4) + 8))();\n        if (param_2 == 0) {\n            var_18h = var_18h + 1;\n        }\n    }\n    fcn.00409d24();\n    if (var_18h == 0) {\n        fcn.00409d24();\n    }\n    else {\n        fcn.00409c00(var_18h);\n        var_18h = 0;\n        fcn.00409d68();\n        for (iVar2 = 0; iVar2 < 0; iVar2 = iVar2 + 1) {\n            piVar1 = *(iVar2 * 4);\n            (**(*piVar1 + 8))();\n            if (param_2 == 0) {\n                *(*param_1 + var_18h * 4) = piVar1;\n                var_18h = var_18h + 1;\n            }\n        }\n        fcn.00409d24();\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x4471c6;\n    uStack76 = 0x4471a3;\n    fcn.00407a20();\n    uStack76 = 0x4471ab;\n    fcn.00407a20();\n    uStack76 = 0x4471be;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 659
    },
    "004471d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447257)\n\nvoid fcn.004471d0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x447294;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar3 = 0;\n    piVar2 = in_EAX;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX != NULL) {\n        do {\n            iVar3 = iVar3 + 1;\n            piVar2 = (**(*piVar2 + 0x1c))();\n            puVar1 = puStack32;\n        } while (piVar2 != NULL);\n    }\n    puStack32 = puVar1;\n    fcn.00409c00(iVar3);\n    if (in_EAX != NULL) {\n        do {\n            (**(*in_EAX + 0x44))();\n            fcn.00409d68();\n            in_EAX = (**(*in_EAX + 0x1c))();\n        } while (in_EAX != NULL);\n    }\n    fcn.004581cc();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x44729b;\n    uStack36 = 0x447285;\n    fcn.00409d24();\n    uStack36 = 0x447293;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 399
    },
    "004472c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044734f)\n\nvoid fcn.004472c8(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x44738c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar3 = 0;\n    piVar2 = in_EAX;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX != NULL) {\n        do {\n            iVar3 = iVar3 + 1;\n            piVar2 = (**(*piVar2 + 0x1c))();\n            puVar1 = puStack32;\n        } while (piVar2 != NULL);\n    }\n    puStack32 = puVar1;\n    fcn.00409c00(iVar3);\n    if (in_EAX != NULL) {\n        do {\n            (**(*in_EAX + 0x48))();\n            fcn.00409d68();\n            in_EAX = (**(*in_EAX + 0x1c))();\n        } while (in_EAX != NULL);\n    }\n    fcn.00458250();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x447393;\n    uStack36 = 0x44737d;\n    fcn.00409d24();\n    uStack36 = 0x44738b;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 402
    },
    "0044739c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447427)\n// WARNING: Removing unreachable block (ram,0x004473f2)\n// WARNING: Removing unreachable block (ram,0x004473fc)\n\nvoid __fastcall fcn.0044739c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44746b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    (**(*in_EAX + 0x28))();\n    for (iVar1 = 0; iVar1 < 0; iVar1 = iVar1 + 1) {\n        (**(**(iVar1 * 4) + 8))();\n        if (param_2 == 0) goto code_r0x00447447;\n    }\n    fcn.00409d24();\ncode_r0x00447447:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x447472;\n    uStack48 = 0x44745c;\n    fcn.00407a20();\n    uStack48 = 0x44746a;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 349
    },
    "00447a74": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00447a74(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    char in_DL;\n    char extraout_DL;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar9;\n    int32_t *piStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack60 = 0x447a8e;\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack64 = 0x447c16;\n    piStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_14h = arg_ch;\n    puStack60 = &fcn.00447a74::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    cVar2 = fcn.00405f30();\n    if (cVar2 != '\\0') {\n        var_14h = *(arg_ch + 0x10);\n    }\n    piVar9 = arg_8h;\n    fcn.00446910(arg_8h, var_14h);\n    puVar3 = fcn.004481b8();\n    uVar1 = *puVar3;\n    iVar8 = *arg_8h;\n    fcn.004481b8();\n    iVar4 = fcn.00467060();\n    *arg_8h = iVar4;\n    if (*arg_8h != uVar1 + iVar8) {\n        iVar8 = *arg_8h;\n        *(in_EAX + 0x1c) = iVar8;\n        piVar5 = *(iVar8 + 2);\n        if (piVar5 != NULL) {\n            piVar5 = *piVar5;\n        }\n        *(in_EAX + 0x20) = piVar5;\n        fcn.00409c00(*(*(in_EAX + 0x1c) + 8));\n        fcn.00405f30();\n        *arg_8h = *(in_EAX + 0x1c) + 9;\n        iVar8 = *(in_EAX + 0x24);\n        if (iVar8 != 0) {\n            iVar8 = *(iVar8 + -4);\n        }\n        if (-1 < iVar8 + -1) {\n            var_10h = 0;\n            do {\n                piVar9 = arg_8h;\n                fcn.0044682c(arg_8h);\n                uVar6 = fcn.00405f54();\n                *(*(in_EAX + 0x24) + var_10h * 4) = uVar6;\n                var_10h = var_10h + 1;\n                iVar8 = iVar8 + -1;\n            } while (iVar8 != 0);\n        }\n        iVar8 = *(in_EAX + 0x24);\n        if (iVar8 != 0) {\n            iVar8 = *(iVar8 + -4);\n        }\n        if (0 < iVar8) {\n            iVar8 = *(in_EAX + 0x24);\n            if (iVar8 != 0) {\n                iVar8 = *(iVar8 + -4);\n            }\n            uVar7 = (**(**(*(in_EAX + 0x24) + -4 + iVar8 * 4) + 0xc))();\n            if ((uVar7 & 0x40) != 0) {\n                iVar8 = *(in_EAX + 0x24);\n                if (iVar8 != 0) {\n                    iVar8 = *(iVar8 + -4);\n                }\n                fcn.00409c00(iVar8 + -1);\n            }\n        }\n        fcn.00446780();\n        fcn.0040b494();\n    }\n    *in_FS_OFFSET = piVar9;\n    piStack68 = 0x447c1d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 1023
    },
    "00447c70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447c70(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_EDX;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint var_20h;\n    int32_t **var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = NULL;\n    puVar6 = &var_20h;\n    for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00408e24();\n    *in_FS_OFFSET = &stack0xffffff54;\n    (**(*in_EAX + 0x38))();\n    ppiVar2 = var_8h;\n    if (var_8h != NULL) {\n        ppiVar2 = var_8h[-1];\n    }\n    if (ppiVar2 != arg_ch + 1) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    fcn.00451f9c();\n    (**(*in_EAX + 0x30))();\n    fcn.00409c00();\n    cVar1 = (**(*in_EAX + 0x30))();\n    if (cVar1 == '\\0') {\n        cVar1 = (**(*in_EAX + 0x2c))();\n        if (cVar1 != '\\0') {\n            fcn.0043cfa4();\n            puVar6 = &var_38h;\n            for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            cVar1 = (**(*in_EAX + 0x14))();\n            fcn.0043cee8();\n            uVar3 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff48;\n            if (cVar1 != '\\x02') {\n                fcn.00408f5c();\n            }\n            *in_FS_OFFSET = uVar3;\n            fcn.00408c90();\n            return;\n        }\n        fcn.0043cf4c();\n        puVar6 = &var_50h;\n        for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        cVar1 = (**(*in_EAX + 0x14))();\n        fcn.0043cf4c();\n        fcn.0043ce98();\n        uVar3 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff48;\n        if (cVar1 != '\\x02') {\n            fcn.00408f5c();\n        }\n        *in_FS_OFFSET = uVar3;\n        fcn.00408c90();\n        return;\n    }\n    iVar5 = arg_ch + 1;\n    if (-1 < arg_ch) {\n        do {\n            uVar3 = (**(*in_EAX + 0x14))();\n            fcn.0043c31c(uVar3);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    cVar1 = (**(*in_EAX + 0x30))();\n    if (cVar1 == '\\0') {\n        cVar1 = (**(*in_EAX + 0x2c))();\n        if (cVar1 != '\\0') {\n            puVar6 = &var_68h;\n            for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            cVar1 = (**(*in_EAX + 0x14))();\n            fcn.0043cee8();\n            uVar3 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff48;\n            if (cVar1 == '\\x02') {\n                fcn.00408f5c();\n            }\n            *in_FS_OFFSET = uVar3;\n            fcn.00408c90();\n            return;\n        }\n        puVar6 = &var_80h;\n        for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        cVar1 = (**(*in_EAX + 0x14))();\n        fcn.0043cf4c();\n        fcn.0043ce98();\n        uVar3 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff48;\n        if (cVar1 == '\\x02') {\n            fcn.00408f5c();\n        }\n        *in_FS_OFFSET = uVar3;\n        fcn.00408c90();\n        return;\n    }\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\x01') {\n        (**(*in_EAX + 0x24))();\n    }\n    else {\n        (**(*in_EAX + 0x28))();\n    }\n    fcn.0043bdf0();\n    iVar5 = (**(*in_EAX + 0x18))();\n    if (iVar5 == 0) {\n        cVar1 = fcn.00451f9c();\n        if (cVar1 == '\\0') {\n            uVar7 = 0;\n            uVar4 = 0;\n            uVar3 = 0;\n            (**(*in_EAX + 0x14))();\n            fcn.00451c38(arg_8h, uVar3, uVar4, uVar7);\n        }\n        else {\n            (**(**var_8h + 0x10))();\n            uVar3 = fcn.00446cec();\n            uVar4 = (**(*in_EAX + 0x30))();\n            uVar7 = 1;\n            (**(*in_EAX + 0x14))();\n            fcn.00451c38(arg_8h, uVar7, uVar4, uVar3);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x18))();\n        uVar3 = fcn.00446cec();\n        uVar4 = (**(*in_EAX + 0x30))();\n        uVar7 = 0;\n        (**(*in_EAX + 0x14))();\n        fcn.00451c38(arg_8h, uVar7, uVar4, uVar3);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00408c90();\n    fcn.00409d24();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 1669
    },
    "004485bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00448b55)\n// WARNING: Removing unreachable block (ram,0x00448b5f)\n// WARNING: Removing unreachable block (ram,0x00448b61)\n// WARNING: Removing unreachable block (ram,0x00448b8f)\n// WARNING: Removing unreachable block (ram,0x00448bac)\n\nvoid __cdecl fcn.004485bc(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_EDX;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_cch;\n    uint var_99h;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_68h;\n    uint var_50h;\n    uint var_38h;\n    uint uVar7;\n    uint var_20h;\n    uchar *puStack32;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar5 = 0x19;\n    do {\n        var_8h = 0;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puVar6 = &fcn.004485bc::var_20h;\n    for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar6 = puVar6 + 1;\n    }\n    puStack32 = 0x4485fa;\n    fcn.00408e24();\n    var_20h = 0x448d07;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*in_EAX + 0x38))();\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    if (var_8h != arg_ch + 1) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    cVar1 = fcn.00451f9c();\n    if (cVar1 == '\\0') {\n        fcn.00451fc0();\n    }\n    (**(*in_EAX + 0x30))();\n    fcn.00409c00();\n    var_94h = 0;\n    cVar1 = (**(*in_EAX + 0x30))();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00451f9c();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.004582d4();\n            if (cVar1 != '\\0') {\n                puVar6 = &fcn.004485bc::var_38h;\n                for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                cVar1 = (**(*in_EAX + 0x14))();\n                fcn.0043cee8();\n                uVar3 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                if (cVar1 != '\\x02') {\n                    fcn.00408f5c();\n                }\n                *in_FS_OFFSET = uVar3;\n                fcn.00408c90();\n                return;\n            }\n            fcn.0043cf4c();\n            puVar6 = &fcn.004485bc::var_50h;\n            for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            cVar1 = (**(*in_EAX + 0x14))();\n            fcn.0043ce98();\n            uVar3 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            if (cVar1 != '\\x02') {\n                fcn.00408f5c();\n            }\n            *in_FS_OFFSET = uVar3;\n            fcn.00408c90();\n            return;\n        }\n        cVar1 = fcn.00451fc0();\n        if (cVar1 == '\\0') {\n            cVar1 = (**(*in_EAX + 0x2c))();\n            if (cVar1 == '\\0') {\n                piVar2 = fcn.0043cf4c();\n                var_94h = *piVar2;\n                cVar1 = (**(*in_EAX + 0x14))();\n                if (cVar1 != '\\x02') {\n                    fcn.00408f5c();\n                }\n            }\n            else {\n                var_94h = fcn.0043cfa4();\n                cVar1 = (**(*in_EAX + 0x14))();\n                if (cVar1 != '\\x02') {\n                    fcn.00408f5c();\n                }\n            }\n        }\n        else {\n            piVar2 = fcn.0043cf4c();\n            var_94h = *piVar2;\n            cVar1 = (**(*in_EAX + 0x14))();\n            if (cVar1 != '\\x02') {\n                fcn.00408f5c();\n            }\n            fcn.0043cf10();\n            fcn.00408f5c();\n        }\n        if (var_94h != 0) {\n            fcn.00452678();\n            fcn.00449238();\n            cVar1 = fcn.00405ff0();\n            if (cVar1 == '\\0') {\n                fcn.0041f338();\n                fcn.0040711c();\n            }\n        }\n    }\n    iVar5 = arg_ch + 1;\n    if (-1 < arg_ch) {\n        do {\n            uVar3 = (**(*in_EAX + 0x14))();\n            fcn.0043c31c(uVar3);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    cVar1 = (**(*in_EAX + 0x30))();\n    if (cVar1 == '\\0') {\n        cVar1 = (**(*in_EAX + 0x1c))();\n        if (cVar1 == '\\x01') {\n            (**(*in_EAX + 0x24))();\n        }\n        else if (cVar1 == '\\x02') {\n            (**(*in_EAX + 0x24))();\n            fcn.00405fa0();\n        }\n        else {\n            (**(*in_EAX + 0x28))();\n        }\n    }\n    else {\n        (**(*in_EAX + 0x28))();\n    }\n    fcn.0043bdf0();\n    cVar1 = (**(*in_EAX + 0x30))();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00451f9c();\n        if (cVar1 != '\\0') {\n            puVar6 = &fcn.004485bc::var_68h;\n            for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            cVar1 = (**(*in_EAX + 0x14))();\n            fcn.0043cee8();\n            uVar3 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            if (cVar1 == '\\x02') {\n                fcn.00408f5c();\n            }\n            *in_FS_OFFSET = uVar3;\n            fcn.00408c90();\n            return;\n        }\n        cVar1 = (**(*in_EAX + 0x14))();\n        if (cVar1 == '\\x02') {\n            fcn.00408f5c();\n        }\n    }\n    iVar5 = (**(*in_EAX + 0x18))();\n    if (iVar5 == 0) {\n        cVar1 = fcn.00451f9c();\n        if (cVar1 == '\\0') {\n            uVar7 = 0;\n            uVar4 = 0;\n            uVar3 = 0;\n            var_38h = 0x448ca9;\n            (**(*in_EAX + 0x14))();\n            var_38h = 0x448cb9;\n            fcn.00451c38(arg_8h, uVar3, uVar4, uVar7);\n        }\n        else {\n            uVar3 = *(var_94h + -0x48);\n            uVar4 = (**(*in_EAX + 0x30))();\n            uVar7 = 1;\n            var_38h = 0x448c82;\n            (**(*in_EAX + 0x14))();\n            var_38h = 0x448c92;\n            fcn.00451c38(arg_8h, uVar7, uVar4, uVar3);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x18))();\n        uVar3 = fcn.00446cec();\n        uVar4 = (**(*in_EAX + 0x30))();\n        uVar7 = 0;\n        var_38h = 0x448c38;\n        (**(*in_EAX + 0x14))();\n        var_38h = 0x448c48;\n        fcn.00451c38(arg_8h, uVar7, uVar4, uVar3);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00408d08();\n    fcn.00408c90();\n    fcn.00409d24();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 2276
    },
    "00449248": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449248(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + -4) == 0) {\n        fcn.00409d24();\n    }\n    else {\n        uVar1 = fcn.0043fb6c();\n        fcn.00409c00(uVar1);\n        iVar3 = *in_EAX;\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (-1 < iVar3 + -1) {\n            iVar4 = 0;\n            do {\n                fcn.0044682c(arg_8h + -4);\n                uVar2 = fcn.00405f54();\n                *(*in_EAX + iVar4 * 4) = uVar2;\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004492dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004492dc(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + -4) == 0) {\n        fcn.00409d24();\n    }\n    else {\n        uVar1 = fcn.0043fb6c();\n        fcn.00409c00(uVar1);\n        iVar3 = *in_EAX;\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (-1 < iVar3 + -1) {\n            iVar4 = 0;\n            do {\n                fcn.0044682c(arg_8h + -4);\n                uVar2 = fcn.00405f54();\n                *(*in_EAX + iVar4 * 4) = uVar2;\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "004493d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004493d0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4493ec;\n    fcn.004585a8();\n    uStack36 = 0x44947b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004586bc();\n    iVar3 = in_EAX;\n    if (in_EAX != 0) {\n        iVar3 = *(in_EAX + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        iVar2 = 0;\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(**(in_EAX + iVar2 * 4) + 0x30))();\n            cVar1 = fcn.00449370(arg_8h);\n            if (cVar1 == '\\0') {\n                fcn.00431524();\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00458790();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x449482;\n    uStack36 = 0x44947a;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 380
    },
    "0044948c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044948c(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.0043fb6c();\n    fcn.00409c00(uVar1);\n    iVar3 = *in_EAX;\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.0044682c(arg_8h + -4);\n            uVar2 = fcn.00405f54();\n            *(*in_EAX + iVar4 * 4) = uVar2;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "004496cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004496cc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    if (*(arg_8h + -4) == 0) {\n        fcn.00409d24();\n    }\n    else {\n        uVar2 = fcn.0043fb6c();\n        fcn.00409c00(uVar2);\n        iVar5 = *in_EAX;\n        if (iVar5 != 0) {\n            iVar5 = *(iVar5 + -4);\n        }\n        if (-1 < iVar5 + -1) {\n            iVar6 = 0;\n            do {\n                uVar3 = fcn.0043fc74();\n                iVar1 = *(arg_8h + -4);\n                fcn.0044682c(arg_8h + -4);\n                uVar4 = fcn.00405f54();\n                *(*in_EAX + iVar6 * 4) = uVar4;\n                *(arg_8h + -4) = iVar1 + (uVar3 & 0xffff);\n                iVar6 = iVar6 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0044978c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044978c(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + -4) == 0) {\n        fcn.00409d24();\n    }\n    else {\n        uVar1 = fcn.0043fb6c();\n        fcn.00409c00(uVar1);\n        iVar3 = *in_EAX;\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (-1 < iVar3 + -1) {\n            iVar4 = 0;\n            do {\n                fcn.0044682c(arg_8h + -4);\n                uVar2 = fcn.00405f54();\n                *(*in_EAX + iVar4 * 4) = uVar2;\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00449884": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00449884(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x4498a0;\n    fcn.00458a30();\n    uStack36 = 0x44992f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00458b44();\n    iVar3 = in_EAX;\n    if (in_EAX != 0) {\n        iVar3 = *(in_EAX + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        iVar2 = 0;\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(**(in_EAX + iVar2 * 4) + 0x28))();\n            cVar1 = fcn.00449820(arg_8h);\n            if (cVar1 == '\\0') {\n                fcn.00431524();\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00458c18();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x449936;\n    uStack36 = 0x44992e;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 382
    },
    "00449a84": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449a84(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00409c00(**(arg_8h + -4));\n    *(arg_8h + -4) = *(arg_8h + -4) + 6;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            fcn.0044682c(arg_8h + -4);\n            uVar1 = fcn.00405f54();\n            *(*in_EAX + iVar3 * 4) = uVar1;\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "00449b04": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449b04(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.0043fb6c();\n    fcn.00409c00(uVar1);\n    iVar3 = *in_EAX;\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.0044682c(arg_8h + -4);\n            uVar2 = fcn.00405f54();\n            *(*in_EAX + iVar4 * 4) = uVar2;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00449be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00449be0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x449bfc;\n    fcn.00458eb8();\n    uStack36 = 0x449c8b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00458fcc();\n    iVar3 = in_EAX;\n    if (in_EAX != 0) {\n        iVar3 = *(in_EAX + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        iVar2 = 0;\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(**(in_EAX + iVar2 * 4) + 0x14))();\n            cVar1 = fcn.00449b80(arg_8h);\n            if (cVar1 == '\\0') {\n                fcn.00431524();\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.004590a0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x449c92;\n    uStack36 = 0x449c8a;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 385
    },
    "0044e7e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044e84d)\n// WARNING: Removing unreachable block (ram,0x0044e832)\n// WARNING: Removing unreachable block (ram,0x0044e87c)\n// WARNING: Removing unreachable block (ram,0x0044e83b)\n// WARNING: Removing unreachable block (ram,0x0044e857)\n// WARNING: Removing unreachable block (ram,0x0044e85d)\n// WARNING: Removing unreachable block (ram,0x0044e886)\n// WARNING: Removing unreachable block (ram,0x0044e892)\n// WARNING: Removing unreachable block (ram,0x0044e898)\n\nvoid __fastcall fcn.0044e7e0(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x44e908;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    cVar1 = fcn.0044e7cc();\n    if (cVar1 == '\\0') {\n        fcn.00407a20();\n    }\n    else {\n        fcn.00407a20();\n        fcn.0044e98c();\n        fcn.0044e960();\n        piVar2 = fcn.00444458();\n        if (piVar2 != NULL) {\n            (**(*piVar2 + -0x24))(0x44e958, *param_2);\n            uStack44 = 0;\n            fcn.004087c4();\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x44e90f;\n    uStack40 = 0x44e8f9;\n    fcn.00407a80();\n    uStack40 = 0x44e907;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 498
    },
    "0044f018": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f018(uint arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint *in_EDX;\n    uint *puVar10;\n    uint *in_FS_OFFSET;\n    uint uVar11;\n    uint var_45h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puVar10 = &var_20h;\n    for (iVar9 = 6; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *puVar10 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar10 = puVar10 + 1;\n    }\n    fcn.00408e24();\n    fcn.00408bb4();\n    *in_FS_OFFSET = &stack0xffffff9c;\n    cVar2 = fcn.00451f9c();\n    if ((cVar2 != '\\0') &&\n       (((cVar2 = fcn.0043cbc4(),  cVar2 == '\\0' || (cVar2 == '\\x14')) && (cVar2 = fcn.0043cb20(),  cVar2 != '\\0')))) {\n        fcn.00452678();\n        uVar3 = fcn.00446cec();\n        fcn.00408c90(uVar3);\n        fcn.0043d4a8();\n    }\n    bVar1 = false;\n    cVar2 = (**(*in_EAX + 0x30))();\n    if ((cVar2 != '\\0') && (cVar2 = fcn.00451f9c(),  cVar2 == '\\0')) goto code_r0x0044f17c;\n    cVar2 = fcn.0043cbc4();\n    if (cVar2 == '\\x14') {\n        piVar4 = fcn.0043cbd8();\n        if (*piVar4 == 0) {\ncode_r0x0044f108:\n            piVar4 = fcn.0043cbd8();\n            if ((*piVar4 != 0) && (ppiVar5 = fcn.0043cbd8(),  **ppiVar5 != 0)) goto code_r0x0044f137;\n        }\n        else {\n            ppiVar5 = fcn.0043cbd8();\n            iVar9 = **ppiVar5;\n            fcn.00452678();\n            iVar6 = fcn.00446cec();\n            if (iVar9 != iVar6) goto code_r0x0044f108;\n        }\n        fcn.00408f5c();\n    }\n    else {\ncode_r0x0044f137:\n        iVar9 = fcn.0043cbc0();\n        fcn.00452678();\n        iVar6 = fcn.00446cec();\n        if (iVar9 != iVar6) {\n            fcn.0041f338();\n            fcn.0040711c();\n        }\n        fcn.0043d6d8();\n        fcn.00455bc4();\n        bVar1 = true;\n    }\ncode_r0x0044f17c:\n    (**(*in_EAX + 0x38))();\n    iVar9 = var_8h;\n    if (var_8h != 0) {\n        iVar9 = *(var_8h + -4);\n    }\n    if (iVar9 != arg_ch + 1) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    cVar2 = (**(*in_EAX + 0x30))();\n    if ((cVar2 == '\\0') || (cVar2 = fcn.00451f9c(),  cVar2 != '\\0')) {\n        fcn.00409c00(arg_ch + 2);\n    }\n    else {\n        fcn.00409c00(arg_ch + 1);\n    }\n    cVar2 = (**(*in_EAX + 0x30))();\n    if (((cVar2 == '\\0') || (cVar2 = fcn.00451f9c(),  cVar2 != '\\0')) &&\n       (cVar2 = (**(*in_EAX + 0x14))(),  cVar2 != '\\x02')) {\n        fcn.00408f5c();\n    }\n    iVar9 = arg_ch + 1;\n    if (-1 < arg_ch) {\n        do {\n            uVar3 = (**(*in_EAX + 0x14))();\n            fcn.0043c31c(uVar3);\n            iVar9 = iVar9 + -1;\n        } while (iVar9 != 0);\n    }\n    cVar2 = (**(*in_EAX + 0x30))();\n    if (((cVar2 == '\\0') || (cVar2 = fcn.00451f9c(),  cVar2 != '\\0')) &&\n       (cVar2 = (**(*in_EAX + 0x14))(),  cVar2 == '\\x02')) {\n        fcn.00408f5c();\n    }\n    iVar9 = (**(*in_EAX + 0x18))();\n    if (iVar9 == 0) {\n        cVar2 = fcn.00451f9c();\n        if (cVar2 == '\\0') {\n            uVar11 = 0;\n            uVar8 = 0;\n            uVar7 = 0;\n            uVar3 = (**(*in_EAX + 0x14))();\n            (**(*in_EAX + 0x28))(uVar3);\n            fcn.00451c38(arg_8h, uVar7, uVar8, uVar11);\n        }\n        else {\n            uVar3 = fcn.0043cbc0();\n            uVar7 = (**(*in_EAX + 0x30))();\n            uVar11 = 1;\n            uVar8 = (**(*in_EAX + 0x14))();\n            (**(*in_EAX + 0x28))(uVar8);\n            fcn.00451c38(arg_8h, uVar11, uVar7, uVar3);\n            if (bVar1) {\n                uVar3 = fcn.00455f34();\n                uVar3 = fcn.0043cbc0(uVar3);\n                fcn.00408c90(uVar3);\n                fcn.0043d4a8();\n            }\n        }\n    }\n    else {\n        (**(*in_EAX + 0x18))();\n        uVar3 = fcn.00446cec();\n        uVar7 = (**(*in_EAX + 0x30))();\n        uVar11 = 0;\n        uVar8 = (**(*in_EAX + 0x14))();\n        (**(*in_EAX + 0x28))(uVar8);\n        fcn.00451c38(arg_8h, uVar11, uVar7, uVar3);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00408d08(0x44f3d3);\n    fcn.00409d24();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 1683
    },
    "0044fd04": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fd04(uint noname_0, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY144;\n    uint uStackY140;\n    uchar *puStackY136;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_38h;\n    uint var_20h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puStack120 = 0x44fd2b;\n    fcn.00408bb4();\n    uStack124 = 0x44ff70;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStack120 = &stack0xfffffffc;\n    cVar1 = fcn.00459530();\n    if (cVar1 == '\\0') {\n        puVar3 = &fcn.0044fd04::var_20h;\n        puStackY136 = 0x44fd55;\n        fcn.00446cec();\n        puStackY136 = 0x44fd60;\n        fcn.0043d174(puVar3);\n        puStackY136 = 0x44fd6b;\n        fcn.0043d648();\n    }\n    puStackY136 = 0x44fd76;\n    fcn.0044fac8();\n    iVar2 = var_8h;\n    if (var_8h != 0) {\n        iVar2 = *(var_8h + -4);\n    }\n    arg_ch = arg_ch + 1;\n    if (iVar2 != arg_ch) {\n        puStackY136 = 0x44fd9c;\n        fcn.0041f338();\n        puStackY136 = 0x44fda1;\n        fcn.0040711c();\n        arg_ch = extraout_EDX;\n    }\n    puStackY136 = arg_ch + 1;\n    uStackY140 = 0x44fdb8;\n    fcn.00409c00();\n    puVar3 = &fcn.0044fd04::var_38h;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    puStackY136 = 0x44fdd4;\n    cVar1 = fcn.0044faac();\n    puStackY136 = 0x44fde1;\n    fcn.0043cee8();\n    uStackY140 = 0x44fe2d;\n    uStackY144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (cVar1 != '\\x02') {\n        puStackY136 = &stack0xfffffffc;\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStackY144;\n    puStackY136 = 0x44fe34;\n    uStackY140 = 0x44fe2c;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 774
    },
    "0045007c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Removing unreachable block (ram,0x004500ed)\n\nvoid __cdecl fcn.0045007c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint var_74h;\n    uint var_5ch;\n    uint var_44h;\n    uint uVar7;\n    uint arg_10h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = 0xe;\n    do {\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puStack32 = 0x4500ab;\n    fcn.00408bb4();\n    var_20h = 0x4502ce;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0045007c::var_24h;\n    puStack32 = &stack0xfffffffc;\n    fcn.00446cec();\n    fcn.0043d174(&fcn.0045007c::var_20h);\n    fcn.0043d648();\n    fcn.0044fac8();\n    iVar5 = arg_ch + 1;\n    if (iVar5 != 0) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    fcn.00409c00();\n    if (-1 < arg_ch) {\n        iVar6 = 0;\n        do {\n            iVar2 = (**(**(iVar6 * 4) + 0x10))();\n            if (iVar2 == 0) {\n                fcn.0043d6d8();\n                fcn.00455bc4();\n                fcn.00408f5c();\n            }\n            else {\n                uVar1 = (**(**(iVar6 * 4) + 0xc))();\n                if (*0x4502e4 == (uVar1 & *0x4502e0)) {\n                    (**(**(iVar6 * 4) + 0x10))();\n                    fcn.00446cec();\n                    fcn.0043d174(&fcn.0045007c::var_20h);\n                    fcn.00408f5c();\n                }\n                else {\n                    (**(**(iVar6 * 4) + 0x10))();\n                    iVar2 = fcn.00446cec();\n                    iVar3 = fcn.0043cbc0();\n                    if (iVar2 != iVar3) {\n                        fcn.0041f338();\n                        fcn.0040711c();\n                    }\n                    fcn.0043d6d8();\n                    fcn.00455bc4();\n                    fcn.00408f5c();\n                }\n            }\n            iVar6 = iVar6 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = fcn.0044fa98();\n    if (iVar5 == 0) {\n        uVar7 = 0;\n        uVar4 = 0;\n        fcn.0044faac();\n        fcn.00451c38(arg_8h, uVar4, uVar7, 0);\n    }\n    else {\n        fcn.0044fa98();\n        uVar4 = fcn.00446cec();\n        arg_10h = 0;\n        uVar7 = 0;\n        fcn.0044faac();\n        fcn.00451c38(arg_8h, uVar7, arg_10h, uVar4);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00408d08();\n    fcn.00408c90();\n    fcn.00409d24();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 933
    },
    "00451a54": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\ncode * __fastcall fcn.00451a54(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    code *in_EAX;\n    int32_t iVar2;\n    float10 extraout_ST0;\n    ulong uVar3;\n    uint var_4h;\n    \n    iVar2 = param_2[10];\n    if (iVar2 != 0) {\n        do {\n            iVar2 = iVar2 + -0x1000;\n        } while (-1 < iVar2);\n        fcn.004055b4();\n    }\n    uVar3 = (*in_EAX)();\n    *param_2 = uVar3;\n    param_2[1] = uVar3 >> 0x20;\n    cVar1 = *(param_2 + 0x21);\n    if (cVar1 != -1) {\n        if (cVar1 == '\\0') {\n            param_2[4] = extraout_ST0;\n        }\n        else if (cVar1 == '\\x01') {\n            *(param_2 + 4) = extraout_ST0;\n        }\n        else if (cVar1 == '\\x02') {\n            *(param_2 + 4) = extraout_ST0;\n        }\n        else {\n            *(param_2 + 4) = ROUND(extraout_ST0);\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 301
    },
    "00451ad8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00451ad8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    iVar4 = 4;\n    iVar3 = *(arg_8h + -0x3c);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.0043cbc0();\n            cVar1 = fcn.0043c264();\n            if (cVar1 == '\\0') {\n                fcn.0043cbec();\n                iVar2 = fcn.0043c528();\n                iVar4 = iVar4 + iVar2;\n            }\n            else {\n                iVar4 = iVar4 + 4;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return iVar4;\n}\n",
        "token_count": 243
    },
    "00451be8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451be8(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043c508();\n    if (iVar1 == 0) {\n        *(arg_8h + -0x40) = *(arg_8h + -0x40) + -4;\n        **(arg_8h + -0x40) = in_EAX;\n    }\n    else if (iVar1 == 1) {\n        *(arg_8h + -0x38) = in_EAX;\n    }\n    else if (iVar1 == 2) {\n        *(arg_8h + -0x34) = in_EAX;\n    }\n    else if (iVar1 == 4) {\n        *(arg_8h + -0x30) = in_EAX;\n        return;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00451c38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00451c95)\n// WARNING: Removing unreachable block (ram,0x00451e60)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00451c38(uint arg_8h, uint arg_ch, uint arg_10h, char *arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char in_CL;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar *puVar4;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    puVar4 = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    arg_8h_01 = &stack0xfffffffc;\n    uStack104 = 0x451f29;\n    uStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    fcn.00405884();\n    uVar2 = fcn.00451ad8(&stack0xfffffffc);\n    fcn.00409c00(uVar2);\n    if ((in_CL == '\\x04') && (arg_14h != NULL)) {\n        fcn.00408c90();\n        fcn.0043d4a8();\n        fcn.0043d6d8();\n        fcn.00451be8(puVar4);\n    }\n    if (in_EDX != 0) {\n        in_EDX = *(in_EDX + -4);\n    }\n    var_4ch = in_EDX;\n    if ((in_CL == '\\x02') && (arg_10h == '\\0')) {\n        var_4ch = in_EDX + -1;\n    }\n    if ((in_CL == '\\x01') || (in_CL - 3U < 2)) {\n        var_4ch = var_4ch + -1;\n        if (-1 < var_4ch) {\n            do {\n                fcn.0043cbc0();\n                cVar1 = fcn.0043c264();\n                if (cVar1 == '\\0') {\n                    fcn.00451b4c(&stack0xfffffffc);\n                }\n                else {\n                    puVar4 = &stack0xfffffffc;\n                    fcn.0043d6d8();\n                    fcn.00451be8(puVar4);\n                }\n                var_4ch = var_4ch + -1;\n            } while (var_4ch != -1);\n        }\n    }\n    else if (-1 < var_4ch + -1) {\n        var_50h = var_4ch;\n        do {\n            fcn.0043cbc0();\n            cVar1 = fcn.0043c264();\n            if (cVar1 == '\\0') {\n                fcn.00451b4c(&stack0xfffffffc);\n            }\n            else {\n                puVar4 = &stack0xfffffffc;\n                fcn.0043d6d8();\n                fcn.00451be8(puVar4);\n            }\n            var_50h = var_50h + -1;\n        } while (var_50h != 0);\n    }\n    if ((in_CL != '\\x04') && (cVar1 = fcn.0043c1b4(),  cVar1 != '\\0')) {\n        fcn.00408c90();\n        fcn.0043d4a8();\n        fcn.0043d6d8();\n        fcn.00451be8(arg_8h_00);\n    }\n    if ((in_CL == '\\x02') && (arg_10h == '\\0')) {\n        fcn.0043cbc0();\n        cVar1 = fcn.0043c264();\n        if (cVar1 == '\\0') {\n            fcn.00451b4c(&stack0xfffffffc);\n        }\n        else {\n            fcn.0043d6d8();\n            fcn.00451be8(arg_8h_01);\n        }\n    }\n    if ((arg_14h == NULL) || (*arg_14h != '\\x04')) {\n        var_18h._1_1_ = -1;\n    }\n    else {\n        pcVar3 = fcn.00467260();\n        var_18h._1_1_ = *pcVar3;\n    }\n    uVar2 = 0x451e98;\n    fcn.00451a54();\n    if ((in_CL == '\\x04') && (var_38h < 0)) {\n        uVar2 = 0x451eab;\n        fcn.004505b8();\n    }\n    if (arg_14h == NULL) {\n        uVar2 = 0x451eb7;\n        fcn.0043cd60();\n    }\n    else if (in_CL != '\\x04') {\n        uVar2 = 0x451ecb;\n        cVar1 = fcn.0043c1b4();\n        if (cVar1 == '\\0') {\n            if (var_18h._1_1_ == -1) {\n                fcn.00408c90();\n                uVar2 = 0x451f0d;\n                fcn.0043d4a8();\n            }\n            else {\n                uVar2 = 0;\n                fcn.00408c90();\n                fcn.0043d5c4(uVar2);\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack104 = 0x451f30;\n    uStack108 = 0x451f28;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 1377
    },
    "00452118": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.00452118(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t iVar3;\n    uint unaff_EDI;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x45232c;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00452118::var_24h;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = in_EAX;\n    fcn.00407a20();\n    cVar1 = (**(*var_8h + 0x20))();\n    if (cVar1 == '\\0') {\n        (**(*var_8h + 8))();\n        fcn.0040873c();\n    }\n    else {\n        cVar1 = (**(*var_8h + 0x2c))();\n        if (cVar1 != '\\0') {\n            fcn.004086e4();\n        }\n        cVar1 = fcn.00451f9c();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00451fc0();\n            if (cVar1 == '\\0') {\n                cVar1 = (**(*var_8h + 0x10))();\n                if (cVar1 == '\\b') {\n                    (**(*var_8h + 8))(0x4523e4, *param_2);\n                    fcn.004087c4(var_18h);\n                }\n                else {\n                    iVar3 = (**(*var_8h + 0x18))(*param_2);\n                    (**(*var_8h + 8))(*((iVar3 == 0) * 4 + 0x4b9dcc));\n                    fcn.004087c4(var_1ch);\n                }\n            }\n            else {\n                (**(*var_8h + 8))(0x4523c0, *param_2);\n                fcn.004087c4(var_14h);\n            }\n        }\n        else {\n            (**(*var_8h + 8))(0x452398, *param_2);\n            fcn.004087c4(var_10h);\n        }\n        (**(*var_8h + 0x38))();\n        iVar4 = var_4h;\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        if (0 < iVar3) {\n            fcn.004086e4();\n        }\n        if (iVar4 != 0) {\n            iVar4 = *(iVar4 + -4);\n        }\n        if (-1 < iVar4 + -1) {\n            iVar3 = 0;\n            do {\n                if (0 < iVar3) {\n                    fcn.004086e4();\n                }\n                (**(**(var_4h + iVar3 * 4) + -0x24))();\n                fcn.004086e4();\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        if (0 < iVar3) {\n            fcn.004086e4();\n        }\n        iVar3 = (**(*var_8h + 0x18))();\n        if (iVar3 != 0) {\n            piVar2 = (**(*var_8h + 0x18))(0x452438, *param_2);\n            (**(*piVar2 + 8))();\n            fcn.004087c4();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x452333;\n    var_20h = 0x45231d;\n    fcn.00407a80();\n    var_20h = 0x45232b;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 1129
    },
    "00453138": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00453138(char **arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char *pcVar2;\n    uint uVar3;\n    int32_t **ppiVar4;\n    char in_DL;\n    char extraout_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    char **ppcVar6;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x453152;\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack52 = 0x453259;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.00453138::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.00453284();\n    pcVar2 = fcn.004670fc();\n    in_EAX[7] = pcVar2;\n    *arg_8h = pcVar2;\n    *arg_8h = *arg_8h + 3;\n    fcn.00409c00(pcVar2[2] - 1);\n    ppcVar6 = arg_8h;\n    fcn.0044682c(arg_8h);\n    iVar5 = in_EAX[8];\n    if (iVar5 != 0) {\n        iVar5 = *(iVar5 + -4);\n    }\n    if (-1 < iVar5 + -1) {\n        var_8h = 0;\n        do {\n            ppcVar6 = arg_8h;\n            fcn.0044682c(arg_8h);\n            uVar3 = fcn.00405f54();\n            *(in_EAX[8] + var_8h * 4) = uVar3;\n            var_8h = var_8h + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    cVar1 = (**(*in_EAX + 0x10))();\n    if (cVar1 == '\\x01') {\n        if (**arg_8h == '\\0') {\n            *arg_8h = *arg_8h + 1;\n        }\n        else {\n            pcVar2 = fcn.0043fc88();\n            *arg_8h = pcVar2;\n            ppiVar4 = fcn.0043fb58();\n            if (ppiVar4 != NULL) {\n                ppiVar4 = *ppiVar4;\n            }\n            in_EAX[9] = ppiVar4;\n        }\n    }\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = ppcVar6;\n    fcn.0040b47c(0x453260);\n    return;\n}\n",
        "token_count": 726
    },
    "004532e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004532e8(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_EDX;\n    int32_t extraout_EDX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uVar7;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puVar5 = &var_20h;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        puVar5 = puVar5 + 1;\n    }\n    fcn.00408e24();\n    *in_FS_OFFSET = &stack0xffffffb0;\n    (**(*in_EAX + 0x38))();\n    iVar3 = var_8h;\n    if (var_8h != 0) {\n        iVar3 = *(var_8h + -4);\n    }\n    iVar4 = arg_ch + 1;\n    if (iVar3 != iVar4) {\n        fcn.0041f338();\n        fcn.0040711c();\n        iVar4 = extraout_EDX;\n    }\n    fcn.00409c00(iVar4 + 1);\n    fcn.0043d364();\n    cVar1 = (**(*in_EAX + 0x14))();\n    if (cVar1 != '\\x02') {\n        fcn.00408f5c();\n    }\n    iVar3 = arg_ch + 1;\n    if (-1 < arg_ch) {\n        do {\n            uVar2 = (**(*in_EAX + 0x14))();\n            fcn.0043c31c(uVar2);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.0043bdf0();\n    cVar1 = (**(*in_EAX + 0x14))();\n    if (cVar1 == '\\x02') {\n        fcn.00408f5c();\n    }\n    iVar3 = (**(*in_EAX + 0x18))();\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        uVar6 = 0;\n        uVar2 = 0;\n        (**(*in_EAX + 0x14))();\n        fcn.00451c38(arg_8h, uVar2, uVar6, uVar7);\n    }\n    else {\n        (**(*in_EAX + 0x18))();\n        uVar2 = fcn.00446cec();\n        uVar7 = 0;\n        uVar6 = 0;\n        (**(*in_EAX + 0x14))();\n        fcn.00451c38(arg_8h, uVar6, uVar7, uVar2);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040b47c(0x4534cd);\n    fcn.00408c90();\n    fcn.00409d24();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 793
    },
    "00453c04": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00453c39)\n// WARNING: Removing unreachable block (ram,0x00453c5c)\n// WARNING: Removing unreachable block (ram,0x00453c68)\n// WARNING: Removing unreachable block (ram,0x00453c6b)\n\nvoid fcn.00453c04(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x453cb1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00453db0();\n    fcn.00409c00(0);\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x453cb8;\n    uStack36 = 0x453cb0;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 237
    },
    "00453cc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Removing unreachable block (ram,0x00453cff)\n\nvoid __cdecl fcn.00453cc0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *var_28h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    iVar2 = 4;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar2 != 0);\n    uStack36 = 0x453d9f;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_28h = 0x453cf8;\n    fcn.00453db0();\n    if (-1 < iVar1 + -2) {\n        iVar3 = 0;\n        do {\n            if ((*(iVar1 + 3 + iVar3 * 0xc) != '\\0') && (*(iVar1 + 4 + iVar3 * 0xc) == '\\0')) {\n                var_28h = 0x453d39;\n                fcn.00453e80();\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(in_EAX + 0x20) != 0) {\n        var_28h = &fcn.00453cc0::var_28h;\n        fcn.0043d174(var_28h);\n        fcn.00453e80();\n    }\n    *(in_EDX + 10) = *(in_EAX + 5);\n    *in_FS_OFFSET = var_28h;\n    uStack36 = 0x453da6;\n    iStack40 = 0x453d90;\n    fcn.00408c90();\n    iStack40 = 0x453d9e;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 524
    },
    "004543ac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00454438)\n\nvoid fcn.004543ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4544a3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = fcn.00454504();\n    if ((*(iVar2 + 1) != -1) || (iVar2 = fcn.00454504(),  *(iVar2 + 3) != -1)) {\n        piVar3 = fcn.00452678();\n        (**(*piVar3 + 0x44))();\n        var_8h = 0;\n        for (iVar2 = 0; iVar2 < 0; iVar2 = iVar2 + 1) {\n            cVar1 = fcn.00405f30();\n            if (cVar1 != '\\0') {\n                if (iVar2 != var_8h) {\n                    *(var_8h * 4) = *(iVar2 * 4);\n                }\n                var_8h = var_8h + 1;\n            }\n        }\n        iVar2 = fcn.00454504();\n        if (*(iVar2 + 1) != -1) {\n            iVar2 = fcn.00454504();\n            *(in_EAX + 0x18) = *(*(iVar2 + 1) * 4);\n        }\n        iVar2 = fcn.00454504();\n        if (*(iVar2 + 3) != -1) {\n            iVar2 = fcn.00454504();\n            *(in_EAX + 0x1c) = *(*(iVar2 + 3) * 4);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4544aa;\n    uStack32 = 0x4544a2;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 503
    },
    "00454570": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004545b6)\n\nvoid fcn.00454570(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4545e9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.004543ac();\n    if (*(in_EAX + 0x18) == NULL) {\n        if (*(in_EAX + 0x1c) != NULL) {\n            (**(**(in_EAX + 0x1c) + 0x38))();\n            (**(**0xfffffffc + 0x10))();\n        }\n    }\n    else {\n        (**(**(in_EAX + 0x18) + 0x18))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4545f0;\n    uStack24 = 0x4545e8;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 269
    },
    "00454618": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.00454618(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint unaff_EBX;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x4547f8;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_24h;\n    var_18h = unaff_EDI;\n    var_10h = unaff_EBX;\n    (**(*in_EAX + 8))(0x454814);\n    uVar4 = 0x454834;\n    fcn.004087c4(0x454834, var_ch);\n    var_8h = fcn.004544b4();\n    if (var_8h == NULL) {\n        var_8h = fcn.004544dc();\n        if (var_8h == NULL) {\n            fcn.004086e4();\n            goto code_r0x004547cf;\n        }\n        (**(*var_8h + 0x38))();\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        if (-1 < iVar2 + -3) {\n            iVar2 = iVar2 + -2;\n            iVar3 = 0;\n            do {\n                (**(**(var_4h + iVar3 * 4) + -0x24))(*param_2);\n                uVar4 = 0x454844;\n                fcn.004087c4(0x454844, var_18h);\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        (**(**(var_4h + -8 + iVar2 * 4) + -0x24))();\n        fcn.004086e4();\n    }\n    else {\n        (**(*var_8h + 0x38))();\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        if (-1 < iVar2 + -2) {\n            iVar2 = iVar2 + -1;\n            iVar3 = 0;\n            do {\n                (**(**(var_4h + iVar3 * 4) + -0x24))(*param_2);\n                uVar4 = 0x454844;\n                fcn.004087c4(0x454844, var_10h);\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        (**(**(var_4h + -4 + iVar2 * 4) + -0x24))();\n        fcn.004086e4();\n    }\n    fcn.004086e4();\n    iVar2 = (**(*var_8h + 0x18))();\n    if (iVar2 == 0) {\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        (**(**(var_4h + -4 + iVar2 * 4) + -0x24))();\n        fcn.004086e4();\n    }\n    else {\n        piVar1 = (**(*var_8h + 0x18))();\n        (**(*piVar1 + -0x24))();\n        fcn.004086e4();\n    }\ncode_r0x004547cf:\n    *in_FS_OFFSET = uVar4;\n    fcn.00407a80(0x4547ff);\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 1108
    },
    "00454eb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00454f21)\n// WARNING: Removing unreachable block (ram,0x00454f6b)\n// WARNING: Removing unreachable block (ram,0x00454f2d)\n// WARNING: Removing unreachable block (ram,0x00454f30)\n// WARNING: Removing unreachable block (ram,0x00454f77)\n// WARNING: Removing unreachable block (ram,0x00454f7a)\n// WARNING: Removing unreachable block (ram,0x00454f88)\n// WARNING: Removing unreachable block (ram,0x00454fa1)\n\nvoid __fastcall fcn.00454eb0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 384
    },
    "00454fd4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00454fd4(void)\n\n{\n    fcn.00454eb0();\n    return;\n}\n",
        "token_count": 25
    },
    "00454ff4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00454ff4(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x00455073;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x00455073:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 371
    },
    "00455134": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455134(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00454ff4();\n    if (iVar3 < 0) {\n        var_8h = 0;\n    }\n    else {\n        *(in_EAX[1] + iVar3 * 0xc) = 0xffffffff;\n        var_8h = *(in_EAX[1] + 8 + iVar3 * 0xc);\n        iVar4 = iVar3;\n        while( true ) {\n            iVar3 = iVar3 + 1;\n            var_18h = in_EAX[1];\n            if (var_18h != 0) {\n                var_18h = *(var_18h + -4);\n            }\n            if (iVar3 == var_18h) {\n                iVar3 = 0;\n            }\n            uVar5 = *(in_EAX[1] + iVar3 * 0xc);\n            if (uVar5 == 0xffffffff) break;\n            var_20h = in_EAX[1];\n            if (var_20h != 0) {\n                var_20h = *(var_20h + -4);\n            }\n            uVar5 = var_20h - 1U & uVar5;\n            if ((((uVar5 <= iVar4) || (iVar3 < uVar5)) && ((iVar4 <= iVar3 || (uVar5 <= iVar4)))) &&\n               ((iVar4 <= iVar3 || (iVar3 < uVar5)))) {\n                iVar1 = in_EAX[1];\n                iVar2 = in_EAX[1];\n                *(iVar1 + iVar4 * 0xc) = *(iVar2 + iVar3 * 0xc);\n                *(iVar1 + 4 + iVar4 * 0xc) = *(iVar2 + 4 + iVar3 * 0xc);\n                *(iVar1 + 8 + iVar4 * 0xc) = *(iVar2 + 8 + iVar3 * 0xc);\n                *(in_EAX[1] + iVar3 * 0xc) = 0xffffffff;\n                iVar4 = iVar3;\n            }\n        }\n        *(in_EAX[1] + iVar4 * 0xc) = 0xffffffff;\n        *(in_EAX[1] + 4 + iVar4 * 0xc) = 0;\n        *(in_EAX[1] + 8 + iVar4 * 0xc) = 0;\n        in_EAX[2] = in_EAX[2] + -1;\n        (**(*in_EAX + 8))();\n        (**(*in_EAX + 0xc))();\n    }\n    return var_8h;\n}\n",
        "token_count": 686
    },
    "00455464": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004554c0)\n// WARNING: Removing unreachable block (ram,0x004554d3)\n// WARNING: Removing unreachable block (ram,0x004554d9)\n// WARNING: Removing unreachable block (ram,0x004554e5)\n// WARNING: Removing unreachable block (ram,0x0045550b)\n\nvoid fcn.00455464(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45552d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.00454e74();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x455534;\n    uStack36 = 0x45552c;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 292
    },
    "00456460": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004564d1)\n// WARNING: Removing unreachable block (ram,0x0045651b)\n// WARNING: Removing unreachable block (ram,0x004564dd)\n// WARNING: Removing unreachable block (ram,0x004564e0)\n// WARNING: Removing unreachable block (ram,0x00456527)\n// WARNING: Removing unreachable block (ram,0x0045652a)\n// WARNING: Removing unreachable block (ram,0x00456538)\n// WARNING: Removing unreachable block (ram,0x00456551)\n\nvoid __fastcall fcn.00456460(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 376
    },
    "00456584": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00456584(void)\n\n{\n    fcn.00456460();\n    return;\n}\n",
        "token_count": 23
    },
    "004565a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004565a4(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x00456623;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x00456623:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 371
    },
    "004568a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004568fc)\n// WARNING: Removing unreachable block (ram,0x0045690f)\n// WARNING: Removing unreachable block (ram,0x00456915)\n// WARNING: Removing unreachable block (ram,0x00456921)\n// WARNING: Removing unreachable block (ram,0x00456947)\n\nvoid fcn.004568a0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x456969;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.00456424();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x456970;\n    uStack36 = 0x456968;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 286
    },
    "004572e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00457351)\n// WARNING: Removing unreachable block (ram,0x0045739b)\n// WARNING: Removing unreachable block (ram,0x0045735d)\n// WARNING: Removing unreachable block (ram,0x00457360)\n// WARNING: Removing unreachable block (ram,0x004573a7)\n// WARNING: Removing unreachable block (ram,0x004573aa)\n// WARNING: Removing unreachable block (ram,0x004573b8)\n// WARNING: Removing unreachable block (ram,0x004573d1)\n\nvoid __fastcall fcn.004572e0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 378
    },
    "00457404": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00457404(void)\n\n{\n    fcn.004572e0();\n    return;\n}\n",
        "token_count": 24
    },
    "00457424": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457424(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x004574a3;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x004574a3:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 372
    },
    "00457720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045777c)\n// WARNING: Removing unreachable block (ram,0x0045778f)\n// WARNING: Removing unreachable block (ram,0x00457795)\n// WARNING: Removing unreachable block (ram,0x004577a1)\n// WARNING: Removing unreachable block (ram,0x004577c7)\n\nvoid fcn.00457720(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4577e9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.004572a4();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4577f0;\n    uStack36 = 0x4577e8;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 295
    },
    "004580c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004580c4(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    if (-1 < param_2) {\n        iVar4 = param_2 + 1;\n        piVar1 = in_EAX;\n        do {\n            iVar2 = *piVar1;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            iVar3 = iVar3 + iVar2;\n            piVar1 = piVar1 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00409c00(iVar3);\n    iVar3 = 0;\n    if (-1 < param_2) {\n        param_2 = param_2 + 1;\n        do {\n            iVar4 = *in_EAX;\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + -4);\n            }\n            if (-1 < iVar4 + -1) {\n                iVar2 = 0;\n                do {\n                    *(*param_1 + iVar3 * 4) = *(*in_EAX + iVar2 * 4);\n                    iVar3 = iVar3 + 1;\n                    iVar2 = iVar2 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00458148": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458148(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    if (-1 < param_2) {\n        iVar4 = param_2 + 1;\n        piVar1 = in_EAX;\n        do {\n            iVar2 = *piVar1;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            iVar3 = iVar3 + iVar2;\n            piVar1 = piVar1 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00409c00(iVar3);\n    iVar3 = 0;\n    if (-1 < param_2) {\n        param_2 = param_2 + 1;\n        do {\n            iVar4 = *in_EAX;\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + -4);\n            }\n            if (-1 < iVar4 + -1) {\n                iVar2 = 0;\n                do {\n                    *(*param_1 + iVar3 * 4) = *(*in_EAX + iVar2 * 4);\n                    iVar3 = iVar3 + 1;\n                    iVar2 = iVar2 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "004581cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004581cc(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    if (-1 < param_2) {\n        iVar4 = param_2 + 1;\n        piVar1 = in_EAX;\n        do {\n            iVar2 = *piVar1;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            iVar3 = iVar3 + iVar2;\n            piVar1 = piVar1 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00409c00(iVar3);\n    iVar3 = 0;\n    if (-1 < param_2) {\n        param_2 = param_2 + 1;\n        do {\n            iVar4 = *in_EAX;\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + -4);\n            }\n            if (-1 < iVar4 + -1) {\n                iVar2 = 0;\n                do {\n                    *(*param_1 + iVar3 * 4) = *(*in_EAX + iVar2 * 4);\n                    iVar3 = iVar3 + 1;\n                    iVar2 = iVar2 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "00458250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458250(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    if (-1 < param_2) {\n        iVar4 = param_2 + 1;\n        piVar1 = in_EAX;\n        do {\n            iVar2 = *piVar1;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            iVar3 = iVar3 + iVar2;\n            piVar1 = piVar1 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00409c00(iVar3);\n    iVar3 = 0;\n    if (-1 < param_2) {\n        param_2 = param_2 + 1;\n        do {\n            iVar4 = *in_EAX;\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + -4);\n            }\n            if (-1 < iVar4 + -1) {\n                iVar2 = 0;\n                do {\n                    *(*param_1 + iVar3 * 4) = *(*in_EAX + iVar2 * 4);\n                    iVar3 = iVar3 + 1;\n                    iVar2 = iVar2 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "0046729c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004672f4)\n\nvoid fcn.0046729c(void)\n\n{\n    uint8_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x467322;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00407a20();\n    if (*in_EAX != 0) {\n        fcn.00409c00(*in_EAX + 1);\n        fcn.004055b4();\n        fcn.0040c9b8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x467329;\n    uStack28 = 0x467321;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 219
    },
    "004675a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004675a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    piVar4 = NULL;\n    uVar1 = fcn.00467584();\n    iVar2 = 0;\n    while( true ) {\n        iVar3 = *((uVar1 & 0xff) * 4 + 0x4c17f0);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (iVar3 <= iVar2) break;\n        if (((in_EAX == *(*((uVar1 & 0xff) * 4 + 0x4c17f0) + iVar2 * 8)) ||\n            ((param_2 != '\\0' && (*(*((uVar1 & 0xff) * 4 + 0x4c17f0) + iVar2 * 8) == 0)))) &&\n           ((piVar4 = *((uVar1 & 0xff) * 4 + 0x4c17f0) + iVar2 * 8,  param_2 == '\\0' || (*piVar4 != 0))))\n        goto code_r0x00467673;\n        iVar2 = iVar2 + 1;\n    }\n    if (param_2 == '\\0') {\n        piVar4 = NULL;\n    }\n    else {\n        if (piVar4 == NULL) {\n            iVar2 = *((uVar1 & 0xff) * 4 + 0x4c17f0);\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            fcn.00409c00(iVar2 + 1);\n            iVar2 = *((uVar1 & 0xff) * 4 + 0x4c17f0);\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            piVar4 = *((uVar1 & 0xff) * 4 + 0x4c17f0) + (iVar2 + -1) * 8;\n        }\n        *piVar4 = in_EAX;\n    }\ncode_r0x00467673:\n    return CONCAT14(param_2, piVar4);\n}\n",
        "token_count": 534
    },
    "0046767c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046767c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    iVar2 = fcn.004675a4();\n    if (iVar2 != 0) {\n        iStack24 = *(iVar2 + 4);\n        if (iStack24 != 0) {\n            iStack24 = *(iStack24 + -4);\n        }\n        if (-1 < iStack24 + -1) {\n            iVar5 = 0;\n            do {\n                iVar1 = *(*(iVar2 + 4) + iVar5 * 8);\n                if (iVar1 == param_2) {\n                    bVar6 = true;\n                }\n                else if ((iVar1 == 0) || (param_2 == 0)) {\n                    bVar6 = false;\n                }\n                else {\n                    iVar3 = fcn.00419780();\n                    bVar6 = iVar3 == 0;\n                    iStack20 = iVar1;\n                }\n                if (bVar6) {\n                    uVar4 = *(*(iVar2 + 4) + 4 + iVar5 * 8);\n                    goto code_r0x004676ed;\n                }\n                iVar5 = iVar5 + 1;\n                iStack24 = iStack24 + -1;\n            } while (iStack24 != 0);\n        }\n    }\n    uVar4 = 0xffffffff;\ncode_r0x004676ed:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 377
    },
    "00467bfc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00467cbe)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __fastcall fcn.00467bfc(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t **in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x467d12;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    while (*in_EAX != NULL) {\n        (**(**in_EAX + 0x48))();\n        for (iVar5 = 0; iVar5 < 0; iVar5 = iVar5 + 1) {\n            iVar3 = (**(**(iVar5 * 4) + 0x30))();\n            if ((*(iVar3 + 0x1a) == *(param_2 + 0x1a)) && (cVar2 = fcn.004196ec(),  cVar2 != '\\0')) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = false;\n            }\n            if (bVar1) goto code_r0x00467cf6;\n        }\n        fcn.00409d24();\n        piVar4 = (**(**in_EAX + 0x1c))();\n        *in_EAX = piVar4;\n    }\ncode_r0x00467cf6:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x467d19;\n    uStack72 = 0x467d11;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 497
    },
    "00467d24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00467da9)\n\nvoid __cdecl fcn.00467d24(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x467df7;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    for (piVar1 = *(arg_8h + -4); piVar1 != NULL; piVar1 = (**(*piVar1 + 0x1c))()) {\n        (**(*piVar1 + 0x4c))();\n        for (iVar2 = 0; iVar2 < 0; iVar2 = iVar2 + 1) {\n            uVar3 = *(*(iVar2 * 4) + 4) == -9;\n            fcn.00466f58();\n            fcn.00408874();\n            if (uVar3) goto code_r0x00467dd3;\n        }\n        fcn.00409d24();\n    }\ncode_r0x00467dd3:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x467dfe;\n    uStack56 = 0x467de8;\n    fcn.00407a20();\n    uStack56 = 0x467df6;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 409
    },
    "00467e08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00467e75)\n\nvoid __cdecl fcn.00467e08(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x467ecb;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    piVar1 = *(arg_8h + -4);\n    fcn.00407e48();\n    for (; piVar1 != NULL; piVar1 = (**(*piVar1 + 0x1c))()) {\n        (**(*piVar1 + 0x44))();\n        for (iVar2 = 0; uVar3 = iVar2 == 0,  iVar2 < 0; iVar2 = iVar2 + 1) {\n            (**(**(iVar2 * 4) + 8))();\n            fcn.00408874();\n            if (uVar3) goto code_r0x00467e9f;\n        }\n        fcn.00409d24();\n    }\ncode_r0x00467e9f:\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x467ed2;\n    uStack40 = 0x467eb4;\n    fcn.00407a20();\n    uStack40 = 0x467ec2;\n    fcn.00409d24();\n    uStack40 = 0x467eca;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 408
    },
    "00467edc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00467edc(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_28h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack104 = 0x467f03;\n    fcn.00408bb4();\n    puStack104 = 0x467f11;\n    fcn.00408bb4();\n    puStack104 = 0x467f1f;\n    fcn.00408bb4();\n    uStack108 = 0x4680e6;\n    uStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack116 = 0x467f39;\n    puStack104 = &stack0xfffffffc;\n    fcn.004467a8();\n    puStack116 = 0x467f4a;\n    fcn.00408f5c();\n    uStack120 = 0x46808c;\n    uStack124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStack116 = &stack0xfffffffc;\n    var_4h = fcn.004467bc();\n    do {\n        if (var_4h == NULL) {\n            *in_FS_OFFSET = uStack124;\n            puStack116 = 0x468093;\n            uStack120 = 0x46808b;\n            fcn.004467b0();\n            return;\n        }\n        piVar2 = fcn.00467bfc();\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 4))();\n            iVar3 = 0;\n            while( true ) {\n                iVar4 = var_10h;\n                if (var_10h != 0) {\n                    iVar4 = *(var_10h + -4);\n                }\n                if (iVar4 <= iVar3) break;\n                iVar4 = *(var_10h + iVar3 * 4);\n                cVar1 = fcn.00405f30();\n                if (cVar1 != '\\0') {\n                    if (*(iVar4 + 8) != 0) {\n                        fcn.00407e48();\n                        piVar2 = fcn.00467d24(&stack0xfffffffc);\n                        if (piVar2 == NULL) {\n                            iVar3 = fcn.00467e08(&stack0xfffffffc);\n                            if (iVar3 != 0) {\n                                fcn.00451fec(&fcn.00467edc::var_40h, 0xffffffff);\n                                fcn.0043d220();\n                            }\n                        }\n                        else {\n                            (**(*piVar2 + 0x18))();\n                            fcn.0043d220();\n                        }\n                    }\n                    fcn.00407210();\n                    *in_FS_OFFSET = uStack124;\n                    puStack116 = 0x4680ed;\n                    uStack120 = 0x4680ae;\n                    fcn.00408c90();\n                    uStack120 = 0x4680c1;\n                    fcn.00408d08();\n                    uStack120 = 0x4680cf;\n                    fcn.00409d24();\n                    uStack120 = 0x4680d7;\n                    fcn.00407a20();\n                    uStack120 = 0x4680e5;\n                    fcn.00408c90();\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            fcn.00409d24();\n        }\n        if (var_4h != NULL) {\n            var_4h = (**(*var_4h + 0x1c))();\n        }\n    } while( true );\n}\n",
        "token_count": 940
    },
    "00468290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00468290(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x46831f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00467260();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        arg_8h = 0x4682cc;\n        fcn.0041a1a0();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        arg_8h = &fcn.00468290::var_4h;\n        fcn.004088ac(arg_8h);\n        fcn.0041a1a0();\n    }\n    else {\n        arg_8h = 0x468307;\n        fcn.0046784c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x468326;\n    iStack32 = 0x46831e;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 319
    },
    "0046853c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046853c(void)\n\n{\n    uint16_t *puVar1;\n    uint32_t arg_8h;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x4685d0;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    puVar1 = fcn.00467260();\n    if (*puVar1 == 0) {\n        fcn.004082cc();\n    }\n    else {\n        arg_8h = *puVar1;\n        fcn.004084ec();\n        fcn.00408ba0(arg_8h);\n    }\n    fcn.00469ad4(0);\n    *in_FS_OFFSET = var_4h;\n    uStack40 = 0x4685d7;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 248
    },
    "0046b8cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046b8cc(void)\n\n{\n    fcn.004084ec();\n    fcn.00432524();\n    return;\n}\n",
        "token_count": 33
    },
    "0046bd80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046bdc6)\n// WARNING: Removing unreachable block (ram,0x0046bdb6)\n// WARNING: Removing unreachable block (ram,0x0046bde4)\n// WARNING: Removing unreachable block (ram,0x0046bdde)\n\nvoid fcn.0046bd80(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46be29;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00419874();\n    fcn.00419874();\n    uVar1 = fcn.004084ec();\n    fcn.004084ec(uVar1);\n    fcn.0046afe4();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46be30;\n    uStack28 = 0x46be28;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 266
    },
    "0046be38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046be6e)\n// WARNING: Removing unreachable block (ram,0x0046be7c)\n\nvoid fcn.0046be38(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46bec9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00419874();\n    fcn.00419874();\n    uVar1 = fcn.004084ec();\n    fcn.004084ec(uVar1);\n    fcn.004196ec();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46bed0;\n    uStack28 = 0x46bec8;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 233
    },
    "0046bed8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046beff)\n\nvoid fcn.0046bed8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x46bf2f;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.00419874();\n    fcn.004084ec();\n    fcn.00432524();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x46bf36;\n    uStack20 = 0x46bf2e;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 181
    },
    "0048c5b4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048c5b4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uStack16 = 0x48c5c8;\n    iVar1 = fcn.0049a59c();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    var_8h = *(iVar1 + 4);\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x48c608;\n    uStack20 = 0x48c600;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 201
    },
    "00490588": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00490588(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != '\\0') && (0 < param_2)) {\n        fcn.004055b4();\n    }\n    iVar2 = *(in_EAX + 8);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    uVar1 = (**(**(in_EAX + 4) + 0x14))(iVar2 - param_2);\n    *(in_EAX + 0x14) = uVar1;\n    if (*(in_EAX + 0x14) == 0) {\n        fcn.0048d57c();\n    }\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + param_2;\n    *(in_EAX + 0x10) = 0;\n    return;\n}\n",
        "token_count": 229
    },
    "004905ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00490613)\n// WARNING: Removing unreachable block (ram,0x0049061b)\n\nvoid fcn.004905ec(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x49063c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.00491d4c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x490643;\n    uStack20 = 0x49063b;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 178
    },
    "00490738": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00490738(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = *(arg_8h + -4);\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + -4);\n    }\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00431524();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00490780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00490780(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.00498c18();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00498be0();\n            if ((*(iVar2 + 0x30) & 4) != 0) {\n                iVar2 = *(arg_8h + -4);\n                if (iVar2 != 0) {\n                    iVar2 = *(iVar2 + -4);\n                }\n                fcn.00409c00(iVar2 + 1);\n                iVar2 = *(arg_8h + -4);\n                if (iVar2 != 0) {\n                    iVar2 = *(iVar2 + -4);\n                }\n                uVar3 = fcn.00498be0();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00490808": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00490808(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    char in_DL;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_2h;\n    \n    if (in_DL == '\\0') {\n        iVar3 = *(arg_8h + -4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (-1 < iVar3 + -1) {\n            iVar2 = 0;\n            do {\n                puVar1 = *(*(arg_8h + -4) + iVar2 * 4) + 0x1c;\n                *puVar1 = *puVar1 & ~in_AX;\n                iVar2 = iVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    else {\n        iVar3 = *(arg_8h + -4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        if (-1 < iVar3 + -1) {\n            iVar2 = 0;\n            do {\n                puVar1 = *(*(arg_8h + -4) + iVar2 * 4) + 0x1c;\n                *puVar1 = *puVar1 | in_AX;\n                iVar2 = iVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "0049106c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049106c(void)\n\n{\n    uint32_t uVar1;\n    int32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack36 = 0x4911cb;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x491091;\n    uVar1 = fcn.00492038();\n    // switch table (14 cases) at 0x4910b9\n    switch(uVar1 & 0x7f) {\n    case 0:\n        puStack44 = 0x4911a0;\n        fcn.00407e00();\n        break;\n    default:\n        puStack44 = 0x4911a7;\n        fcn.0048fde8();\n        break;\n    case 7:\n        puStack44 = 0x4910e0;\n        fcn.0049043c();\n        puStack44 = NULL;\n        uStack48 = 0x4910f8;\n        fcn.00409c00();\n        puStack44 = 0x491109;\n        fcn.00490530();\n        uStack48 = 0x491163;\n        iStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        fcn.00407a20();\n        fcn.00421be0();\n        arg_ch = var_4h;\n        if (var_4h != 0) {\n            arg_ch = *(var_4h + -4);\n        }\n        arg_8h = &fcn.0049106c::var_8h;\n        fcn.00421a88(arg_8h, arg_ch);\n        fcn.00407e00();\n        *in_FS_OFFSET = arg_8h;\n        iStack52 = 0x4911a7;\n        fcn.00407a20();\n        return;\n    case 8:\n        puStack44 = 0x491176;\n        fcn.00407e00();\n        break;\n    case 9:\n        puStack44 = 0x491184;\n        fcn.00407e00();\n        break;\n    case 0xd:\n        puStack44 = 0x491192;\n        fcn.00407e00();\n    }\n    *in_FS_OFFSET = iStack40;\n    puStack32 = 0x4911d2;\n    uStack36 = 0x4911bc;\n    fcn.00407a20();\n    uStack36 = 0x4911ca;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 685
    },
    "00491414": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00491414(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack64 = &stack0xfffffffc;\n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    var_10h = 0;\n    uStack56 = 0x4916b7;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack68 = 0x491661;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack76 = 0x491452;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.00491c60();\n    uStack80 = 0x49163a;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    var_14h = 1;\n    iVar1 = var_8h;\n    if (var_8h != 0) {\n        iVar1 = *(var_8h + -4);\n    }\n    *(var_ch + 0x88) = 1;\n    for (; (var_14h <= iVar1 && (*(var_8h + -2 + var_14h * 2) != 0x2e)); var_14h = var_14h + 1) {\n    }\n    uStack92 = 0x4914f5;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack76 = &stack0xfffffffc;\n    fcn.00407a20();\n    arg_8h = &fcn.00491414::var_10h;\n    fcn.004088ac(arg_8h);\n    fcn.00407e00();\n    *in_FS_OFFSET = arg_8h;\n    uStack92 = 0x4914fc;\n    iStack96 = 0x4914f4;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 639
    },
    "00491c60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00491c60(void)\n\n{\n    int32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_9h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    stack0xfffffff4 = 0;\n    uStack36 = 0x491d3b;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x491c8d;\n    fcn.0049043c();\n    puStack44 = NULL;\n    uStack48 = 0x491ca5;\n    fcn.00409c00();\n    puStack44 = 0x491cb6;\n    fcn.00490530();\n    uStack48 = 0x491d10;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00407a20();\n    fcn.00421be0();\n    arg_ch = var_4h;\n    if (var_4h != 0) {\n        arg_ch = *(var_4h + -4);\n    }\n    arg_8h = &fcn.00491c60::var_9h + 1;\n    fcn.00421a88(arg_8h, arg_ch);\n    fcn.00407e00();\n    *in_FS_OFFSET = arg_8h;\n    iStack52 = 0x491d17;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 414
    },
    "00491d4c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00491d4c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x492027;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x491d78;\n    cVar1 = fcn.00492038();\n    if (cVar1 == '\\x06') {\n        puStack56 = 0x491eda;\n        fcn.0049043c();\n        puStack56 = NULL;\n        uStack60 = 0x491ef1;\n        fcn.00409c00();\n        puStack56 = 0x491f01;\n        fcn.00490530();\n        uStack60 = 0x491f5b;\n        iStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.0042172c();\n        fcn.00407a20();\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        puVar3 = &fcn.00491d4c::var_10h;\n        fcn.00421a88(puVar3, iVar2);\n        fcn.00407e00();\n        *in_FS_OFFSET = puVar3;\n        iStack64 = 0x491ffe;\n        fcn.00407a20();\n        return;\n    }\n    if (cVar1 == '\\f') {\n        puStack56 = 0x491f71;\n        fcn.0049043c();\n        puStack56 = NULL;\n        uStack60 = 0x491f88;\n        fcn.00409c00();\n        puStack56 = 0x491f98;\n        fcn.00490530();\n        uStack60 = 0x491ff2;\n        iStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.0042172c();\n        fcn.00407a20();\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        puVar3 = &fcn.00491d4c::var_14h;\n        fcn.00421a88(puVar3, iVar2);\n        fcn.00407e00();\n        *in_FS_OFFSET = puVar3;\n        iStack64 = 0x491ffe;\n        fcn.00407a20();\n        return;\n    }\n    if (cVar1 == '\\x12') {\n        puStack56 = 0x491da8;\n        fcn.0049043c();\n        puStack56 = NULL;\n        uStack60 = 0x491dc1;\n        fcn.00409c00();\n        puStack56 = 0x491dd3;\n        fcn.00490530();\n        uStack60 = 0x491e2d;\n        iStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.00407a20();\n        fcn.00421bac();\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        puVar3 = &fcn.00491d4c::var_8h;\n        fcn.00421a88(puVar3, iVar2);\n        fcn.00407e00();\n        *in_FS_OFFSET = puVar3;\n        iStack64 = 0x491ffe;\n        fcn.00407a20();\n        return;\n    }\n    if (cVar1 != '\\x14') {\n        puStack56 = 0x491ffe;\n        fcn.0048fde8();\n        *in_FS_OFFSET = iStack52;\n        puStack44 = 0x49202e;\n        uStack48 = 0x492018;\n        fcn.00407a80();\n        uStack48 = 0x492026;\n        fcn.00409d24();\n        return;\n    }\n    puStack56 = 0x491e43;\n    fcn.0049043c();\n    puStack56 = NULL;\n    uStack60 = 0x491e5a;\n    fcn.00409c00();\n    puStack56 = 0x491e6a;\n    fcn.00490530();\n    uStack60 = 0x491ec4;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.00407a20();\n    fcn.00421be0();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    puVar3 = &fcn.00491d4c::var_ch;\n    fcn.00421a88(puVar3, iVar2);\n    fcn.00407e00();\n    *in_FS_OFFSET = puVar3;\n    iStack64 = 0x491ffe;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 1364
    },
    "00492c0c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492c0c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = 0x492c27;\n    fcn.00409da4();\n    uStack72 = 0x492d96;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < arg_8h + in_ECX) {\n        if (in_EDX != 0) {\n            in_EDX = *(in_EDX + -4);\n        }\n        var_ch = arg_8h - (in_EDX - in_ECX);\n        puStack68 = &stack0xfffffffc;\n        arg_8h = in_EDX - in_ECX;\n    }\n    else {\n        var_ch = 0;\n        puStack68 = &stack0xfffffffc;\n    }\n    for (; 0 < arg_8h; arg_8h = arg_8h - var_18h) {\n        var_18h = *(in_EAX + 8);\n        if (var_18h != 0) {\n            var_18h = *(var_18h + -4);\n        }\n        var_18h = var_18h - *(in_EAX + 0x10);\n        if (var_18h < 1) {\n            fcn.00492bf4();\n            var_18h = *(in_EAX + 8);\n            if (var_18h != 0) {\n                var_18h = *(var_18h + -4);\n            }\n        }\n        if (arg_8h < var_18h) {\n            var_18h = arg_8h;\n        }\n        fcn.004055b4();\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + var_18h;\n    }\n    for (; 0 < var_ch; var_ch = var_ch - var_28h) {\n        var_28h = *(in_EAX + 8);\n        if (var_28h != 0) {\n            var_28h = *(var_28h + -4);\n        }\n        var_28h = var_28h - *(in_EAX + 0x10);\n        if (var_28h < 1) {\n            fcn.00492bf4();\n            var_28h = *(in_EAX + 8);\n            if (var_28h != 0) {\n                var_28h = *(var_28h + -4);\n            }\n        }\n        if (var_ch < var_28h) {\n            var_28h = var_ch;\n        }\n        if (-1 < var_28h + -1) {\n            var_10h = 0;\n            iVar1 = var_28h;\n            do {\n                *(*(in_EAX + 8) + *(in_EAX + 0x10) + var_10h) = 0;\n                var_10h = var_10h + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + var_28h;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x492d9d;\n    uStack72 = 0x492d95;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 945
    },
    "004930d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00493111)\n\nvoid __fastcall fcn.004930d0(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    char cVar6;\n    int32_t in_EAX;\n    uint uVar7;\n    int32_t iVar8;\n    code **in_FS_OFFSET;\n    code *pcVar9;\n    code *pcStack120;\n    uint uStack116;\n    uchar *puStack112;\n    code *pcStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    code *pcStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_25h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    puStack112 = &stack0xfffffffc;\n    uStack80 = 0x493472;\n    pcStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    uStack88 = 0x49310a;\n    fcn.00405be8();\n    iVar8 = *(param_2 + 8);\n    if (iVar8 != 0) {\n        iVar8 = *(iVar8 + -4);\n    }\n    if (*(in_EAX + 0xc) - *(in_EAX + 0x10) < iVar8 + 9) {\n        uStack88 = 0x493141;\n        fcn.00492bf4();\n    }\n    uStack88 = 0x493149;\n    fcn.00492a68();\n    iVar8 = *(in_EAX + 0x30);\n    if ((((iVar8 != 0) && (*(in_EAX + 0x34) < *(iVar8 + 8))) && (*(in_EAX + 0x20) != 0)) &&\n       (*(iVar8 + 8) <= *(in_EAX + 0x34))) {\n        uStack88 = 0x4931c9;\n        fcn.00431010();\n    }\n    uStack88 = 0x4931f2;\n    fcn.00493788();\n    if (*(in_EAX + 0x50) == '\\0') {\n        uStack88 = 0x49324b;\n        fcn.00405be8();\n        uStack88 = 0x493256;\n        fcn.00495570();\n    }\n    else {\n        uStack88 = 0x49320c;\n        fcn.00405eac();\n        uStack88 = 0;\n        uStack92 = 0x493490;\n        uStack96 = 0x493221;\n        fcn.00405be8();\n        uStack96 = 0;\n        puStack100 = 0x493231;\n        fcn.004087c4();\n        puStack100 = 0x49323c;\n        fcn.00495570();\n    }\n    puStack100 = 0x493264;\n    fcn.00495570();\n    puStack100 = 0x49326c;\n    fcn.00492a68();\n    if ((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x34) < *(*(in_EAX + 0x30) + 8))) {\n        if (*(in_EAX + 0x20) != 0) {\n            *(in_EAX + 0x34) = *(in_EAX + 0x34) + 1;\n        }\n        *(in_EAX + 0x38) = *(in_EAX + 0x38) + 1;\n    }\n    puStack100 = 0x4932a4;\n    fcn.004937d0();\n    puStack100 = 0x4932ae;\n    fcn.004955fc();\n    uVar7 = *(in_EAX + 0x30);\n    uVar1 = *(in_EAX + 0x34);\n    uVar2 = *(in_EAX + 0x38);\n    uVar3 = *(in_EAX + 0x18);\n    uVar4 = *(in_EAX + 0x28);\n    uStack104 = 0x493412;\n    pcStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    if (*(in_EAX + 0x24) == '\\0') {\n        uStack116 = 0x4933d0;\n        pcStack120 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff88;\n        puVar5 = &stack0xfffffffc;\n        puStack100 = &stack0xfffffffc;\n        if ((*(in_EAX + 0x20) != 0) &&\n           (puStack100 = &stack0xfffffffc,  cVar6 = fcn.00405f30(),  puVar5 = puStack112,  cVar6 != '\\0')) {\n            iVar8 = *(in_EAX + 0x20);\n            cVar6 = fcn.00405f30();\n            if ((cVar6 != '\\0') && ((*(iVar8 + 0x1d) & 2) != 0)) {\n                *(in_EAX + 0x28) = iVar8;\n            }\n            uVar7 = fcn.0049b468();\n            *(in_EAX + 0x30) = uVar7;\n            fcn.00405fd0(0x492a00, in_EAX);\n            puVar5 = puStack112;\n        }\n        puStack112 = puVar5;\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            *(in_EAX + 0x18) = param_2;\n        }\n        pcVar9 = fcn.00492f7c;\n        fcn.00405fd0(fcn.00492f7c, in_EAX);\n        *in_FS_OFFSET = pcVar9;\n        fcn.00405ce8(0x4933d7);\n        return;\n    }\n    *in_FS_OFFSET = pcStack108;\n    *(in_EAX + 0x30) = uVar7;\n    *(in_EAX + 0x34) = uVar1;\n    *(in_EAX + 0x38) = uVar2;\n    *(in_EAX + 0x18) = uVar3;\n    *(in_EAX + 0x28) = uVar4;\n    return;\n}\n",
        "token_count": 1595
    },
    "004938b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00493912)\n\nvoid __cdecl fcn.004938b0(uint arg_8h)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x49395e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    while (*in_EAX != NULL) {\n        (**(**in_EAX + 0x48))();\n        for (iVar3 = 0; iVar3 < 0; iVar3 = iVar3 + 1) {\n            iVar1 = (**(**(iVar3 * 4) + 0x30))();\n            bVar4 = *(iVar1 + 0x1a) == 0xffffffff;\n            fcn.0040803c();\n            if (bVar4) goto code_r0x00493942;\n        }\n        fcn.00409d24();\n        piVar2 = (**(**in_EAX + 0x1c))();\n        *in_EAX = piVar2;\n    }\ncode_r0x00493942:\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x493965;\n    uStack32 = 0x49395d;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 365
    },
    "00493970": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00493970(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint var_2ch;\n    uchar *var_28h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = 5;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (in_EAX != NULL) {\n        in_EAX[3] = 0;\n        in_EAX[2] = 0;\n        in_EAX[1] = 0;\n        *in_EAX = 0;\n    }\n    puStack32 = 0x4939ab;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.00408bb4();\n    uStack36 = 0x493b1b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_28h = 0x4939c5;\n    puStack32 = &stack0xfffffffc;\n    fcn.00430b74();\n    var_28h = 0x4939d0;\n    fcn.0042977c();\n    var_28h = 0x4939e1;\n    cVar1 = fcn.00467a88();\n    if (cVar1 != '\\0') {\n        var_28h = 0x4939f1;\n        fcn.004467a8();\n        var_28h = 0x493a02;\n        fcn.00408f5c();\n        var_2ch = 0x493ad4;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_28h = &stack0xfffffffc;\n        var_14h = fcn.004467bc();\n        do {\n            if (var_14h == NULL) {\n                *in_FS_OFFSET = uStack52;\n                var_28h = 0x493adb;\n                var_2ch = 0x493ad3;\n                fcn.004467b0();\n                return;\n            }\n            var_18h = fcn.004938b0(arg_8h);\n            if (var_18h != NULL) {\n                (**(*var_18h + 4))();\n                iVar2 = 0;\n                while( true ) {\n                    iVar3 = var_8h;\n                    if (var_8h != 0) {\n                        iVar3 = *(var_8h + -4);\n                    }\n                    if (iVar3 <= iVar2) break;\n                    cVar1 = fcn.00405f30();\n                    if (cVar1 != '\\0') {\n                        fcn.0042977c();\n                        fcn.00407210();\n                        goto code_r0x00493adb;\n                    }\n                    iVar2 = iVar2 + 1;\n                }\n                fcn.00409d24();\n            }\n            if (var_14h != NULL) {\n                var_14h = (**(*var_14h + 0x1c))();\n            }\n        } while( true );\n    }\ncode_r0x00493adb:\n    *in_FS_OFFSET = uStack52;\n    var_28h = 0x493b22;\n    var_2ch = 0x493af6;\n    fcn.00408c90();\n    var_2ch = 0x493afe;\n    fcn.004293d4();\n    var_2ch = 0x493b0c;\n    fcn.00409d24();\n    var_2ch = 0x493b1a;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 954
    },
    "004953e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00495510)\n// WARNING: Removing unreachable block (ram,0x00495442)\n// WARNING: Removing unreachable block (ram,0x00495420)\n// WARNING: Removing unreachable block (ram,0x00495471)\n// WARNING: Removing unreachable block (ram,0x00495535)\n// WARNING: Removing unreachable block (ram,0x004954ca)\n// WARNING: Removing unreachable block (ram,0x0049544c)\n// WARNING: Removing unreachable block (ram,0x00495454)\n// WARNING: Removing unreachable block (ram,0x00495460)\n// WARNING: Removing unreachable block (ram,0x00495464)\n// WARNING: Removing unreachable block (ram,0x00495519)\n// WARNING: Removing unreachable block (ram,0x0049547d)\n\nvoid __fastcall fcn.004953e8(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x495562;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00421be0();\n    fcn.0042176c();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 * -2 < 0) {\n        fcn.004955fc();\n        fcn.00492b1c();\n        fcn.00492da8();\n    }\n    else {\n        fcn.00421bac();\n        fcn.0042176c();\n        fcn.004955fc();\n        fcn.00492b1c();\n        fcn.00492da8();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x495569;\n    uStack32 = 0x495561;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 472
    },
    "00495570": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00495570(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    uint arg_10h;\n    uchar *arg_14h;\n    uchar auStack271 [259];\n    \n    if (param_2 == 0) {\n        fcn.00492b1c(0);\n    }\n    else {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        arg_14h = auStack271;\n        arg_10h = 0xff;\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.004084ec();\n        uVar1 = fcn.0040ca5c(arg_8h, arg_ch, arg_10h, arg_14h, param_2);\n        if (0xff < uVar1) {\n            uVar1 = 0xff;\n        }\n        fcn.00492b1c(uVar1, arg_ch & 0xffffff00 | uVar1 & 0xff);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0049b57c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049b57c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004a0f10(*(in_EAX + 8), 0);\n    return;\n}\n",
        "token_count": 46
    },
    "0049b85c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049b8cd)\n// WARNING: Removing unreachable block (ram,0x0049b917)\n// WARNING: Removing unreachable block (ram,0x0049b8d9)\n// WARNING: Removing unreachable block (ram,0x0049b8dc)\n// WARNING: Removing unreachable block (ram,0x0049b923)\n// WARNING: Removing unreachable block (ram,0x0049b926)\n// WARNING: Removing unreachable block (ram,0x0049b934)\n// WARNING: Removing unreachable block (ram,0x0049b94d)\n\nvoid __fastcall fcn.0049b85c(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 387
    },
    "0049b980": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049b980(void)\n\n{\n    fcn.0049b85c();\n    return;\n}\n",
        "token_count": 26
    },
    "0049b9a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0049b9a0(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x0049ba1f;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x0049ba1f:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 377
    },
    "0049bae8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049bae8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0049b9a0();\n    if (iVar1 < 0) {\n        fcn.0040b47c();\n    }\n    else {\n        *(in_EAX[1] + iVar1 * 0xc) = 0xffffffff;\n        fcn.0040b494();\n        iVar2 = iVar1;\n        while( true ) {\n            iVar1 = iVar1 + 1;\n            var_14h = in_EAX[1];\n            if (var_14h != 0) {\n                var_14h = *(var_14h + -4);\n            }\n            if (iVar1 == var_14h) {\n                iVar1 = 0;\n            }\n            uVar3 = *(in_EAX[1] + iVar1 * 0xc);\n            if (uVar3 == 0xffffffff) break;\n            var_1ch = in_EAX[1];\n            if (var_1ch != 0) {\n                var_1ch = *(var_1ch + -4);\n            }\n            uVar3 = var_1ch - 1U & uVar3;\n            if ((((uVar3 <= iVar2) || (iVar1 < uVar3)) && ((iVar2 <= iVar1 || (uVar3 <= iVar2)))) &&\n               ((iVar2 <= iVar1 || (iVar1 < uVar3)))) {\n                fcn.00408f5c();\n                *(in_EAX[1] + iVar1 * 0xc) = 0xffffffff;\n                iVar2 = iVar1;\n            }\n        }\n        *(in_EAX[1] + iVar2 * 0xc) = 0xffffffff;\n        *(in_EAX[1] + 4 + iVar2 * 0xc) = 0;\n        fcn.0040b47c();\n        in_EAX[2] = in_EAX[2] + -1;\n        (**(*in_EAX + 8))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "0049be5c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049beb8)\n// WARNING: Removing unreachable block (ram,0x0049becb)\n// WARNING: Removing unreachable block (ram,0x0049bed1)\n// WARNING: Removing unreachable block (ram,0x0049bedd)\n// WARNING: Removing unreachable block (ram,0x0049bf03)\n\nvoid fcn.0049be5c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x49bf25;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.0049b820();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x49bf2c;\n    uStack36 = 0x49bf24;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 296
    },
    "0049cc60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049ccd1)\n// WARNING: Removing unreachable block (ram,0x0049cd1b)\n// WARNING: Removing unreachable block (ram,0x0049ccdd)\n// WARNING: Removing unreachable block (ram,0x0049cce0)\n// WARNING: Removing unreachable block (ram,0x0049cd27)\n// WARNING: Removing unreachable block (ram,0x0049cd2a)\n// WARNING: Removing unreachable block (ram,0x0049cd38)\n// WARNING: Removing unreachable block (ram,0x0049cd51)\n\nvoid __fastcall fcn.0049cc60(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 383
    },
    "0049cd84": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049cd84(void)\n\n{\n    fcn.0049cc60();\n    return;\n}\n",
        "token_count": 25
    },
    "0049cda4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0049cda4(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x0049ce23;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x0049ce23:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 374
    },
    "0049d0a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049d0fc)\n// WARNING: Removing unreachable block (ram,0x0049d10f)\n// WARNING: Removing unreachable block (ram,0x0049d115)\n// WARNING: Removing unreachable block (ram,0x0049d121)\n// WARNING: Removing unreachable block (ram,0x0049d147)\n\nvoid fcn.0049d0a0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x49d169;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.0049cc24();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x49d170;\n    uStack36 = 0x49d168;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 298
    },
    "0049d660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0049d660(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = *(*(in_EAX + 4) + 4);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + -4);\n        }\n        if (iVar1 + -1 <= *(in_EAX + 8)) break;\n        *(in_EAX + 8) = *(in_EAX + 8) + 1;\n        if (*(*(*(in_EAX + 4) + 4) + *(in_EAX + 8) * 0xc) != -1) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "0049e5cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049e63d)\n// WARNING: Removing unreachable block (ram,0x0049e687)\n// WARNING: Removing unreachable block (ram,0x0049e649)\n// WARNING: Removing unreachable block (ram,0x0049e64c)\n// WARNING: Removing unreachable block (ram,0x0049e693)\n// WARNING: Removing unreachable block (ram,0x0049e696)\n// WARNING: Removing unreachable block (ram,0x0049e6a4)\n// WARNING: Removing unreachable block (ram,0x0049e6bd)\n\nvoid __fastcall fcn.0049e5cc(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 387
    },
    "0049e6f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049e6f0(void)\n\n{\n    fcn.0049e5cc();\n    return;\n}\n",
        "token_count": 28
    },
    "0049e710": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0049e710(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x0049e78f;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x0049e78f:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 375
    },
    "0049e9a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049ea04)\n// WARNING: Removing unreachable block (ram,0x0049ea17)\n// WARNING: Removing unreachable block (ram,0x0049ea1d)\n// WARNING: Removing unreachable block (ram,0x0049ea29)\n// WARNING: Removing unreachable block (ram,0x0049ea4f)\n\nvoid fcn.0049e9a8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x49ea71;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.0049e590();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x49ea78;\n    uStack36 = 0x49ea70;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 298
    },
    "0049f1b8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049f229)\n// WARNING: Removing unreachable block (ram,0x0049f273)\n// WARNING: Removing unreachable block (ram,0x0049f235)\n// WARNING: Removing unreachable block (ram,0x0049f238)\n// WARNING: Removing unreachable block (ram,0x0049f27f)\n// WARNING: Removing unreachable block (ram,0x0049f282)\n// WARNING: Removing unreachable block (ram,0x0049f290)\n// WARNING: Removing unreachable block (ram,0x0049f2a9)\n\nvoid __fastcall fcn.0049f1b8(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = *(in_EAX + 4);\n    if (uVar1 != 0) {\n        uVar1 = *(uVar1 - 4);\n    }\n    if (uVar1 != param_2) {\n        if (param_2 < 0) {\n            fcn.0041f270();\n        }\n        fcn.00409d68();\n        fcn.00409c00(param_2);\n        fcn.00409d68();\n        *(in_EAX + 0x10) = (param_2 >> 1) + (param_2 >> 2);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 386
    },
    "0049f2dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0049f2dc(void)\n\n{\n    fcn.0049f1b8();\n    return;\n}\n",
        "token_count": 28
    },
    "0049f2fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0049f2fc(uint32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = *(in_EAX + 4);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + -4);\n    }\n    if (iVar3 == 0) {\n        uVar4 = 0x80000000;\n    }\n    else {\n        iVar3 = *(in_EAX + 4);\n        if (iVar3 != 0) {\n            iVar3 = *(iVar3 + -4);\n        }\n        uVar4 = iVar3 - 1U & param_1;\n        while (uVar1 = *(*(in_EAX + 4) + uVar4 * 0xc),  uVar1 != 0xffffffff) {\n            if (uVar1 == param_1) {\n                cVar2 = (**(**(in_EAX + 0xc) + 0xc))(param_2);\n                if (cVar2 != '\\0') goto code_r0x0049f37b;\n            }\n            uVar4 = uVar4 + 1;\n            iVar3 = *(in_EAX + 4);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            if (iVar3 <= uVar4) {\n                uVar4 = 0;\n            }\n        }\n        uVar4 = ~uVar4;\n    }\ncode_r0x0049f37b:\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 376
    },
    "0049f43c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049f43c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.0049f2fc();\n    if (iVar3 < 0) {\n        var_8h = 0;\n    }\n    else {\n        *(in_EAX[1] + iVar3 * 0xc) = 0xffffffff;\n        var_8h = *(in_EAX[1] + 8 + iVar3 * 0xc);\n        iVar4 = iVar3;\n        while( true ) {\n            iVar3 = iVar3 + 1;\n            var_18h = in_EAX[1];\n            if (var_18h != 0) {\n                var_18h = *(var_18h + -4);\n            }\n            if (iVar3 == var_18h) {\n                iVar3 = 0;\n            }\n            uVar5 = *(in_EAX[1] + iVar3 * 0xc);\n            if (uVar5 == 0xffffffff) break;\n            var_20h = in_EAX[1];\n            if (var_20h != 0) {\n                var_20h = *(var_20h + -4);\n            }\n            uVar5 = var_20h - 1U & uVar5;\n            if ((((uVar5 <= iVar4) || (iVar3 < uVar5)) && ((iVar4 <= iVar3 || (uVar5 <= iVar4)))) &&\n               ((iVar4 <= iVar3 || (iVar3 < uVar5)))) {\n                iVar1 = in_EAX[1];\n                iVar2 = in_EAX[1];\n                *(iVar1 + iVar4 * 0xc) = *(iVar2 + iVar3 * 0xc);\n                *(iVar1 + 4 + iVar4 * 0xc) = *(iVar2 + 4 + iVar3 * 0xc);\n                *(iVar1 + 8 + iVar4 * 0xc) = *(iVar2 + 8 + iVar3 * 0xc);\n                *(in_EAX[1] + iVar3 * 0xc) = 0xffffffff;\n                iVar4 = iVar3;\n            }\n        }\n        *(in_EAX[1] + iVar4 * 0xc) = 0xffffffff;\n        *(in_EAX[1] + 4 + iVar4 * 0xc) = 0;\n        *(in_EAX[1] + 8 + iVar4 * 0xc) = 0;\n        in_EAX[2] = in_EAX[2] + -1;\n        (**(*in_EAX + 8))();\n        (**(*in_EAX + 0xc))();\n    }\n    return var_8h;\n}\n",
        "token_count": 689
    },
    "0049f73c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0049f798)\n// WARNING: Removing unreachable block (ram,0x0049f7ab)\n// WARNING: Removing unreachable block (ram,0x0049f7b1)\n// WARNING: Removing unreachable block (ram,0x0049f7bd)\n// WARNING: Removing unreachable block (ram,0x0049f7e3)\n\nvoid fcn.0049f73c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x49f805;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00409d68();\n    *(in_EAX + 8) = 0;\n    fcn.00409d24();\n    fcn.0049f17c();\n    *(in_EAX + 0x10) = 0;\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x49f80c;\n    uStack36 = 0x49f804;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 303
    },
    "0049fe44": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0049fe44(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = *(*(in_EAX + 4) + 4);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + -4);\n        }\n        if (iVar1 + -1 <= *(in_EAX + 8)) break;\n        *(in_EAX + 8) = *(in_EAX + 8) + 1;\n        if (*(*(*(in_EAX + 4) + 4) + *(in_EAX + 8) * 0xc) != -1) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 165
    },
    "004af9d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004af9d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((-1 < in_EAX) && (in_EAX < *0x4c1d7c)) && (in_EAX != *0x4ba444)) {\n        fcn.00407fa8();\n        fcn.00427148();\n        *0x4ba444 = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "004b5114": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004b5114(void)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar4 = 7;\n    do {\n        var_4h = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_1ch = 0x4b5388;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004b5114::var_20h;\n    bVar6 = *0x4be664 == 0;\n    *0x4be664 = *0x4be664 + -1;\n    if (bVar6) {\n        uVar2 = func_0x0040e1a8(0x4b5398);\n        uVar1 = func_0x0040e2b8();\n        cVar5 = '\\0';\n        if (CONCAT11(uVar1, uVar1 >> 8) != 0x600) {\n            pcVar3 = func_0x0040e1b0(uVar2, 0x4b53b4);\n            if (pcVar3 != NULL) {\n                iVar4 = (*pcVar3)(0x800);\n                cVar5 = '\\x01' - (iVar4 == 0);\n            }\n        }\n        if (cVar5 == '\\0') {\n            pcVar3 = func_0x0040e1b0(uVar2, 0x4b53d0);\n            if (pcVar3 != NULL) {\n                (*pcVar3)(0x4b53e4);\n            }\n            fcn.0040e538();\n            fcn.00407e00();\n            if (*0x4be668 != 0) {\n                iVar4 = *0x4be668;\n                if (*0x4be668 != 0) {\n                    iVar4 = *(*0x4be668 + -4);\n                }\n                if (*(*0x4be668 + -2 + iVar4 * 2) != 0x5c) {\n                    fcn.004086e4();\n                }\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n                fcn.0040873c();\n                fcn.0040e564();\n            }\n        }\n        pcVar3 = func_0x0040e1b0(uVar2, 0x4b55d4);\n        if (pcVar3 != NULL) {\n            (*pcVar3)(0x8001);\n        }\n        pcVar3 = func_0x0040e1b0(uVar2, 0x4b55e8);\n        if (pcVar3 != NULL) {\n            (*pcVar3)(1);\n        }\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x4b538f;\n    var_1ch = 0x4b5387;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 1125
    },
    "00403ac0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00403ac0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x12eede >> 8 & 0xff;\n        uVar4 = piVar2 + -0x12eede >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x4bbaf8;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x4bbaf4 = *0x4bbaf4 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 297
    },
    "00403b00": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403b00(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4bbb7c);\n    *in_EAX = uVar3 + 0x4bbb78;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4bbb7c) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4bbb78) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x4bbaf8;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x4bbaf4 = *0x4bbaf4 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 326
    },
    "00403ee8": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.00403ee8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00403c48();\n                ppuVar8 = *0x4bdb80;\n                *ppuVar10 = 0x4bdb7c;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4bdb80;\n                *0x4bdb80 = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4bdb78 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x4bb059 != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x4bbae8 == 0;\n                *0x4bbae8 = *0x4bbae8 ^ bVar19 * (*0x4bbae8 ^ 1);\n                if (bVar19) break;\n                if (*0x4bb989 == '\\0') {\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar19 = *0x4bbae8 == 0;\n                    *0x4bbae8 = *0x4bbae8 ^ bVar19 * (*0x4bbae8 ^ 1);\n                    if (bVar19) break;\n                    sub.kernel32.dll_Sleep();\n                }\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x4bbaf8);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x4bbaf4;\n            if (uVar15 == 0) {\n                if (*0x4bbaf0 < uVar18) {\n                    ppuVar10 = fcn.00403bcc();\n                }\n                else {\n                    ppuVar10 = *0x4bbaec - uVar18;\n                    *0x4bbaec = ppuVar10;\n                    *0x4bbaf0 = *0x4bbaf0 - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x4bbae8 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x4bbaf8);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4bbb7c);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4bbb7c) = piVar1;\n        *piVar1 = iVar13 + 0x4bbb78;\n        if (iVar13 + 0x4bbb78 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x4bbaf8;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x4bbaf4;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.00403b00();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x4bbae8 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4bb990) * 8;\n    puVar3 = iVar13 + 0x4b7080;\n    puVar16 = puVar3;\n    if (*0x4bb059 != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x4b70a0;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x4b70c0;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            if (*0x4bb989 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                uVar7 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n                puVar16 = puVar3;\n                if (uVar7 == 0) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    puVar3 = *(puVar16 + 8);\n    ppuVar10 = *(puVar3 + 0x10);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0x14) = *(puVar3 + 0x14) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 0x10) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 8);\n        *(iVar13 + 0xc) = puVar16;\n        *(puVar16 + 8) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x18);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0x14) || ppuVar10 == *(puVar16 + 0x14)) {\n        piVar1 = puVar3 + 0x14;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 0x10) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x4bb059 != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x4bbae8 == 0;\n            *0x4bbae8 = *0x4bbae8 ^ bVar19 * (*0x4bbae8 ^ 1);\n            if (bVar19) break;\n            if (*0x4bb989 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x4bbae8 == 0;\n                *0x4bbae8 = *0x4bbae8 ^ bVar19 * (*0x4bbae8 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    uVar17 = puVar16[1] & *0x4bbaf4;\n    if (uVar17 == 0) {\n        if (*0x4bbaf0 < *(puVar16 + 4)) {\n            uVar17 = *(puVar16 + 6);\n            ppuVar10 = fcn.00403bcc();\n            if (ppuVar10 == NULL) {\n                *0x4bbae8 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x4bbaf0;\n            if (*(puVar16 + 6) + 0xb30 <= *0x4bbaf0) {\n                uVar17 = *(puVar16 + 6);\n            }\n            ppuVar10 = *0x4bbaec - uVar17;\n            *0x4bbaf0 = *0x4bbaf0 - uVar17;\n            *0x4bbaec = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x4bbaf8);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4bbb7c);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4bbb7c) = piVar1;\n        *piVar1 = iVar2 + 0x4bbb78;\n        if (iVar2 + 0x4bbb78 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x4bbaf8;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x4bbaf4;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 6);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.00403b00();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x4bbae8 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[4] = NULL;\n    ppuVar10[5] = 0x1;\n    *(puVar16 + 0x18) = ppuVar10;\n    *(puVar16 + 0x10) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0x14) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3396
    },
    "00405164": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00405164(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    puVar2 = 0x4b7082;\n    uVar1 = 0;\n    do {\n        if ((*0x4bbad6 == '\\0') || (uVar4 = uVar1,  (*puVar2 & 0xf) == 0)) {\n            uVar4 = *puVar2 >> 3;\n            for (; uVar1 < uVar4; uVar1 = uVar1 + 1) {\n                *(uVar1 + 0x4bb990) = iVar3 * '\\x04';\n            }\n        }\n        iVar3 = iVar3 + 1;\n        puVar2 = puVar2 + 0x10;\n        uVar1 = uVar4;\n    } while (iVar3 != 0x37);\n    return;\n}\n",
        "token_count": 223
    },
    "00403c48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c48(void)\n\n{\n    bool bVar1;\n    \n    if (*0x4bb059 != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar1 = *0x4bdb78 == 0;\n            *0x4bdb78 = *0x4bdb78 ^ bVar1 * (*0x4bdb78 ^ 1);\n            if (!bVar1 * *0x4bdb78 == '\\0') break;\n            if (*0x4bb989 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                bVar1 = *0x4bdb78 == 0;\n                *0x4bdb78 = *0x4bdb78 ^ bVar1 * (*0x4bdb78 ^ 1);\n                if (!bVar1 * *0x4bdb78 == '\\0') {\n                    return;\n                }\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040477c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040477c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = in_EAX - 1U & 0xfffffffc;\n    iVar2 = fcn.00403ee8();\n    puVar1 = uVar3 + iVar2;\n    uVar3 = uVar3 | -(iVar2 == 0);\n    if (uVar3 < 0x40a2c) {\n        iVar4 = -uVar3;\n        do {\n            *(iVar4 + puVar1) = 0;\n            iVar4 = iVar4 + 8;\n        } while (iVar4 < 0);\n        *puVar1 = -(iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004047b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047b0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uchar auStack12 [4];\n    \n    puStack20 = &stack0xfffffff4;\n    if (*0x4bb058 == '\\0') {\n        uStack16 = 0x2010;\n        uStack28 = 0;\n        uStack32 = 0x40482f;\n        puStack20 = param_2;\n        sub.user32.dll_MessageBoxA();\n    }\n    else {\n        uStack16 = 0;\n        uStack24 = 0x4047ce;\n        uStack24 = fcn.00407ef0();\n        uStack32 = 0xfffffff4;\n        uStack36 = 0x4047d7;\n        uStack28 = param_2;\n        uStack36 = sub.kernel32.dll_GetStdHandle();\n        puStack44 = &stack0xffffffdc;\n        uStack40 = 0x4047dd;\n        sub.kernel32.dll_WriteFile();\n        uStack40 = 0;\n        uStack48 = 0x4047ee;\n        uStack48 = fcn.00407ef0();\n        uStack52 = *0x4b7078;\n        uStack56 = 0xfffffff4;\n        uStack60 = 0x4047fc;\n        uStack60 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        fcn.00407ef0(&stack0xffffffc4, 0);\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff4);\n        sub.kernel32.dll_WriteFile(uVar1);\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "00404858": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00404858(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x4bbaf0 != 0) && (in_EAX <= *0x4bbaec)) && (*0x4bbaec <= in_EAX + 0x13fff0)) {\n        uVar1 = *0x4bbaec;\n        if (*0x4bbaf0 == 0x13ffe0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 140
    },
    "00404a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00404a90(void)\n\n{\n    uint32_t in_EAX;\n    bool bVar1;\n    \n    if (*0x4bb059 != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar1 = *0x4bdb90 == 0;\n            *0x4bdb90 = *0x4bdb90 ^ bVar1 * (*0x4bdb90 ^ 1);\n            in_EAX = 0;\n            if (!bVar1 * *0x4bdb90 == '\\0') break;\n            if (*0x4bb989 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar1 = *0x4bdb90 == 0;\n                *0x4bdb90 = *0x4bdb90 ^ bVar1 * (*0x4bdb90 ^ 1);\n                in_EAX = 0;\n                if (!bVar1 * *0x4bdb90 == '\\0') break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if (*0x4bdb8c == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4bdb8c = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4bdb8c != 0;\n}\n",
        "token_count": 313
    },
    "00404b44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404b44(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4bdb8c != NULL) {\n        cVar1 = fcn.00404a90();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4bdb8c;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4bdb8c)[iVar2 + 1]) {\n                        (*0x4bdb8c)[iVar2 + 1] = (*0x4bdb8c)[**0x4bdb8c];\n                        **0x4bdb8c = **0x4bdb8c + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4bdb90 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 267
    },
    "004051a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004051a8(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x37;\n    ppcVar3 = 0x4b709c;\n    do {\n        if (*ppcVar3 == NULL) {\n            *ppcVar3 = fcn.00403a74;\n        }\n        ppcVar3[-4] = ppcVar3 + -7;\n        ppcVar3[-5] = ppcVar3 + -7;\n        ppcVar3[-2] = NULL;\n        ppcVar3[-3] = 0x1;\n        uVar2 = (*(ppcVar3 + -0x1a) * 0xc + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0xb30) {\n            uVar2 = 0xb30;\n        }\n        uVar2 = uVar2 + 0x4d0 >> 0xd;\n        if (7 < uVar2) {\n            uVar2 = 7;\n        }\n        *(ppcVar3 + -0x1b) = 0xff << (uVar2 & 0x1f);\n        *(ppcVar3 + -6) = (uVar2 << 0xd) + 0xb30;\n        uVar1 = *(ppcVar3 + -0x1a);\n        uVar2 = (uVar1 * 0x30 + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0x7330) {\n            uVar2 = 0x7330;\n        }\n        if (0xff30 < uVar2) {\n            uVar2 = 0xff30;\n        }\n        *(ppcVar3 + -0x16) = (uVar1 * ((uVar2 - 0x20) / uVar1) + 0xef & 0xff00) + 0x30;\n        ppcVar3 = ppcVar3 + 8;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00405164();\n    *0x4bbad8 = 0x4bbad8;\n    *0x4bbadc = 0x4bbad8;\n    iVar5 = 0x400;\n    iVar4 = 0x4bbb78;\n    do {\n        *iVar4 = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x4bdb7c = 0x4bdb7c;\n    *0x4bdb80 = 0x4bdb7c;\n    return;\n}\n",
        "token_count": 653
    },
    "00405384": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405384(void)\n\n{\n    if (*0x4bdb94 != 0) {\n        sub.kernel32.dll_CloseHandle(*0x4bdb94);\n        *0x4bdb94 = 0;\n    }\n    if (*0x4bb988 != '\\0') {\n        fcn.00404d58();\n    }\n    if (*0x4bdb8c != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4bdb8c, 0, 0x8000);\n        *0x4bdb8c = 0;\n    }\n    fcn.004052d4();\n    return;\n}\n",
        "token_count": 141
    },
    "00405474": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00405474(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0040cc60();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.0040cc60();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "004054b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004054b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    piVar2 = fcn.0040cc60();\n    iVar1 = *piVar2;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(iVar1 + 8);\n        *(iVar1 + 8) = 0;\n        if (*0x4bb028 != NULL) {\n            (**0x4bb028)();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "00405500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405500(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x4bb010 != NULL) {\n        (**0x4bb010)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.0040cc60();\n    }\n    fcn.004054f4();\n    return;\n}\n",
        "token_count": 82
    },
    "00405564": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405564(uint32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040cc60(param_1, param_2);\n    if (*(iVar1 + 4) == 0) {\n        return;\n    }\n    fcn.00405500(param_1 & 0xffffff);\n    return;\n}\n",
        "token_count": 88
    },
    "00405fd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fd0(uint param_1)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    \n    UNRECOVERED_JUMPTABLE = fcn.00405fa0(param_1);\n    if (UNRECOVERED_JUMPTABLE != NULL) {\n    // WARNING: Could not recover jumptable at 0x00405fe5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x4bb03c != NULL) {\n        (**0x4bb03c)();\n    }\n    fcn.004054f4();\n    return;\n}\n",
        "token_count": 153
    },
    "00405b1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405b1c(uint *param_1)\n\n{\n    if (*0x4b79ca == '\\0') {\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n        param_1[3] = 0;\n    }\n    else {\n        fcn.00405ae0();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00405dbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405dbc(int32_t **param_1)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x405e57;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar2 = fcn.00405e68();\n    if (iVar2 == 0) {\n        cVar1 = fcn.0040caf4();\n        if (cVar1 != '\\0') {\n            *param_1 = in_EAX;\n        }\n    }\n    else if (*(iVar2 + 0x14) == 0) {\n        fcn.00405d80();\n        fcn.0040b494();\n    }\n    else {\n        *param_1 = *(iVar2 + 0x14) + in_EAX;\n        if (*param_1 != NULL) {\n            (**(**param_1 + 4))(*param_1);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x405e5e;\n    uStack32 = 0x405e56;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 333
    },
    "00406368": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406368(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    if ((iVar1 < 0xb) && (1 < *0x4bb060)) {\n        fcn.00406414();\n    }\n    else {\n        if (9 < iVar1) {\n            iVar1 = iVar1 + -10;\n        }\n        if (iVar1 % 0x14 == 0x13) {\n            sub.kernel32.dll_Sleep(1);\n        }\n        else if (iVar1 % 5 == 4) {\n            sub.kernel32.dll_Sleep(0);\n        }\n        else {\n            sub.kernel32.dll_SwitchToThread();\n        }\n    }\n    *in_EAX = *in_EAX + 1;\n    if (*in_EAX < 0) {\n        *in_EAX = 10;\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00406414": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406414(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < in_EAX) {\n        do {\n            in_EAX = in_EAX + -1;\n        } while (0 < in_EAX);\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00406424": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00406424(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t ReturnedLength;\n    int32_t Buffer;\n    uint32_t var_4h;\n    \n    ReturnedLength = 0;\n    uStack20 = 0x4064e8;\n    uStack24 = 0x406508;\n    uStack28 = 0x40643e;\n    uStack28 = sub.kernel32.dll_GetModuleHandleW();\n    puStack32 = 0x406444;\n    iVar1 = sub.kernel32.dll_GetProcAddress();\n    if (iVar1 != 0) {\n        puStack32 = &fcn.00406424::ReturnedLength;\n        uStack36 = 0;\n        puStack40 = 0x406457;\n        iVar1 = sub.kernel32.dll_GetLogicalProcessorInformation();\n        if (iVar1 == 0) {\n            puStack40 = 0x406460;\n            iVar1 = func_0x004036c8();\n            if (iVar1 == 0x7a) {\n                puStack40 = 0x40646d;\n                iVar2 = fcn.004053f0();\n                uStack44 = 0x4064d2;\n                iStack48 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd0;\n                puStack40 = &stack0xfffffffc;\n                Buffer = iVar2;\n                sub.kernel32.dll_GetLogicalProcessorInformation(iVar2, &fcn.00406424::ReturnedLength);\n                iVar1 = Buffer;\n                while( true ) {\n                    if (ReturnedLength == 0) {\n                        *in_FS_OFFSET = iVar2;\n                        iStack48 = 0x4064d9;\n                        uVar3 = fcn.0040540c();\n                        return uVar3;\n                    }\n                    if ((*(iVar1 + 4) == 2) && (*(iVar1 + 8) == '\\x01')) break;\n                    iVar1 = iVar1 + 0x18;\n                    ReturnedLength = ReturnedLength + -0x18;\n                }\n                var_4h = *(iVar1 + 10);\n                fcn.00407210();\n                return var_4h;\n            }\n        }\n    }\n    return 0x40;\n}\n",
        "token_count": 564
    },
    "0040653c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040653c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4bb000 == 0) {\n        *0x4bb000 = fcn.00406424();\n        LOCK();\n    }\n    if ((1 < *0x4bb060) && (*0x4bb004 == 0)) {\n        LOCK();\n        *0x4bb004 = 1000;\n    }\n    if (*0x4bb000 < 0x1d) {\n        iVar1 = fcn.0040477c();\n    }\n    else {\n        iVar1 = fcn.0040477c();\n    }\n    *(iVar1 + 0x10) = *0x4bb004;\n    return;\n}\n",
        "token_count": 163
    },
    "004065b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004065b4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*0x4bb8f8 != 0) && (*(in_EAX + 0xc) != 0)) {\n        (**(*0x4bb8f8 + 4))();\n    }\n    fcn.0040426c();\n    return;\n}\n",
        "token_count": 80
    },
    "004065e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004065e0(void)\n\n{\n    if (*0x4bb8f8 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406688();\n    return;\n}\n",
        "token_count": 59
    },
    "00406608": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00406608(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack16 = 0x40661c;\n    var_4h = in_EAX;\n    fcn.004063e0();\n    uStack20 = 0x40667a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    var_8h = *(var_4h + 0x14);\n    if ((var_8h != NULL) && (*var_8h != var_8h)) {\n        var_8h = **(var_4h + 0x14);\n        **(var_4h + 0x14) = *var_8h;\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x406681;\n        uStack20 = 0x406679;\n        piVar1 = fcn.0040640c();\n        return piVar1;\n    }\n    *(var_4h + 0x14) = 0;\n    puStack16 = &stack0xfffffffc;\n    fcn.00407210();\n    return var_8h;\n}\n",
        "token_count": 317
    },
    "00406820": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406820(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    \n    fcn.00406524();\n    in_EAX[1] = in_EAX[1] - 1;\n    if (in_EAX[1] == 0) {\n        in_EAX[2] = 0;\n        do {\n            uVar1 = *in_EAX;\n            LOCK();\n            if (uVar1 == *in_EAX) {\n                *in_EAX = uVar1 - 1;\n                uVar2 = uVar1;\n            }\n            else {\n                uVar2 = *in_EAX;\n            }\n        } while (uVar1 != uVar2);\n        if ((uVar1 & 0xfffffffe) != 0) {\n            fcn.0040688c();\n            (**(*0x4bb8f8 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00406868": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406868(void)\n\n{\n    if (*0x4bb8f8 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406820();\n    return;\n}\n",
        "token_count": 58
    },
    "00406a68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406a68(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x14) == 0) {\n        return;\n    }\n    uStack20 = 0x406a8b;\n    fcn.004063e0();\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar3 = *(in_EAX + 0x14);\n    if (puVar3 != NULL) {\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != *(in_EAX + 0x14)) {\n            if (puVar2 == param_2) {\n                *puVar3 = *puVar2;\n                break;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n        if ((puVar2 == *(in_EAX + 0x14)) && (puVar2 == param_2)) {\n            puVar1 = *puVar2;\n            if (puVar2 == puVar1) {\n                *(in_EAX + 0x14) = 0;\n            }\n            else {\n                *(in_EAX + 0x14) = puVar1;\n                *puVar3 = puVar1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x406b05;\n    uStack24 = 0x406afd;\n    fcn.0040640c();\n    return;\n}\n",
        "token_count": 411
    },
    "00406b0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406b0c(void)\n\n{\n    if (*0x4bb8f8 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406b30();\n    return;\n}\n",
        "token_count": 61
    },
    "00406b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00406b30(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetCurrentThreadId();\n    if (iVar1 == in_EAX[2]) {\n        in_EAX[1] = in_EAX[1] + 1;\n        return 1;\n    }\n    if (*in_EAX == 0) {\n        iVar1 = 0;\n        LOCK();\n        if (*in_EAX == 0) {\n            *in_EAX = 1;\n        }\n        else {\n            iVar1 = *in_EAX;\n        }\n        if (iVar1 == 0) {\n            iVar1 = sub.kernel32.dll_GetCurrentThreadId();\n            in_EAX[2] = iVar1;\n            in_EAX[1] = 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00406c24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406c24(void)\n\n{\n    if (*0x4bb8f8 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406b70();\n    return;\n}\n",
        "token_count": 60
    },
    "00406c50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406c50(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4bb8f8 == 0) {\n        fcn.0040554c();\n    }\n    uVar1 = fcn.0040690c();\n    fcn.0040690c(uVar1);\n    fcn.00406b70();\n    return;\n}\n",
        "token_count": 83
    },
    "00406ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406ca0(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x4b7030 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x4bb01c)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00406cdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00406cdc(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x4b7030) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x4bb01c)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 121
    },
    "00406cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00406cf0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x4b7030) {\n        uVar1 = 0;\n        (**0x4bb01c)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 91
    },
    "00406d24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406d24(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x4b7030) {\n        uStack16 = 0x406d35;\n        uStack8 = param_2;\n        fcn.00406d04();\n        (**0x4bb01c)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00406d68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00406d68(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x4b7030) {\n        (**0x4bb01c)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 115
    },
    "004073b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004073b0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4bdba4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4bdba0 != 0) {\n        iVar1 = *(*0x4bdba0 + 4);\n        uStack24 = 0x4073fe;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                piVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4bdba4 = iVar3;\n                if ((piVar2 != NULL) && (*piVar2 != 0)) {\n                    (*piVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00407418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407418(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4bdba0 != NULL) {\n        iVar1 = **0x4bdba0;\n        iVar4 = 0;\n        iVar2 = (*0x4bdba0)[1];\n        uStack28 = 0x40746a;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                piVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4bdba4 = iVar4;\n                if ((piVar3 != NULL) && (*piVar3 != 0)) {\n                    (*piVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "004076b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004076b8(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x4bb058 != '\\0') {\n        if ((*0x4bb344 == -0x284e) && (*0x4bb34c != 0)) {\n            uStack8 = 0x4076e1;\n            (**0x4bb35c)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1d;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x4076f6;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        func_0x00403650();\n        uVar1 = fcn.00408240(2, &stack0xffffffe4, 0);\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, uVar1);\n        func_0x00403650(uVar1);\n        return;\n    }\n    if (*0x4b7032 == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x40773b;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00407750": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407750(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if (*0x4b7004 != 0) {\n        fcn.00407630();\n        fcn.004076b8();\n        *0x4b7004 = 0;\n    }\n    if ((*0x4bdbcc != 0) && (iVar2 = sub.kernel32.dll_GetCurrentThreadId(),  iVar2 == *0x4bdbf4)) {\n        fcn.00407388();\n        fcn.0040768c();\n    }\n    pcVar1 = *0x4bb054;\n    if (*0x4bdbc0 == 0) {\n        while (*0x4bb054 = pcVar1,  pcVar1 != NULL) {\n            *0x4bb054 = NULL;\n            (*pcVar1)();\n            pcVar1 = *0x4bb054;\n        }\n    }\n    do {\n        if ((*0x4bdbc0 == 2) && (*0x4b7000 == 0)) {\n            *0x4bdba4 = 0;\n        }\n        if (*0x4bdbc0 == 0) {\n            iVar2 = fcn.004054b4();\n            while (iVar2 != 0) {\n                fcn.00405ce8();\n                iVar2 = fcn.004054b4();\n            }\n        }\n        fcn.004073b0();\n        if (((*0x4bdbc0 < 2) || (*0x4b7000 != 0)) && (*0x4bdba8 != 0)) {\n            fcn.0040b40c();\n            iVar2 = *(*0x4bdba8 + 0x10);\n            if ((iVar2 != *(*0x4bdba8 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.00407388();\n        if (*0x4bdbc0 == 1) {\n            (**0x4bdbbc)();\n        }\n        if (*0x4bdbc0 != 0) {\n            fcn.0040768c();\n        }\n        if (*0x4bdb98 == NULL) {\n            if (*0x4bb038 != NULL) {\n                (**0x4bb038)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x4b7000);\n        }\n        puVar3 = *0x4bdb98;\n        puVar4 = 0x4bdb98;\n        for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 644
    },
    "004078e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004078e0(uint lpThreadId, uint dwCreationFlags, uint arg_10h)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint in_EDX;\n    uint dwStackSize;\n    uint lpThreadAttributes;\n    \n    if (*0x4b7034 == NULL) {\n        puVar1 = fcn.004053f0();\n        *puVar1 = in_ECX;\n        puVar1[1] = arg_10h;\n    }\n    else {\n        puVar1 = (**0x4b7034)();\n    }\n    *0x4bb059 = 1;\n    iVar2 = sub.kernel32.dll_CreateThread(in_EAX, in_EDX, fcn.004078a8, puVar1, dwCreationFlags, lpThreadId);\n    if (iVar2 == 0) {\n        fcn.0040540c();\n    }\n    return iVar2;\n}\n",
        "token_count": 217
    },
    "00407958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407958\n      noreturn \n               (void)\n\n{\n    if (*0x4b7038 != NULL) {\n        (**0x4b7038)();\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 63
    },
    "00407d7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407d7c(int32_t param_1, uint16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1 < 1) {\n        fcn.00407a44();\n    }\n    else {\n        if (param_2 == 0) {\n            param_2 = *0x4bb97c;\n        }\n        iVar1 = fcn.00407b44(param_2, param_1);\n        fcn.00408254();\n        if (iVar1 < 1) {\n            fcn.00407a44();\n        }\n        else {\n            fcn.00407b44(param_2, param_1);\n            *(*in_EAX + -0xc) = param_2;\n        }\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00407ef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00407ef0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (in_EAX != 0) {\n        for (; *(in_EAX + iVar1) != '\\0'; iVar1 = iVar1 + 1) {\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 83
    },
    "00407f04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00407f04(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (in_EAX != 0) {\n        for (; *(in_EAX + iVar1 * 2) != 0; iVar1 = iVar1 + 1) {\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "00408254": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408254(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            iVar1 = iVar1 + -0xc;\n            if (!SCARRY4(param_2, 0xd)) {\n                fcn.00405424();\n                *in_EAX = iVar1 + 0xc;\n                *(iVar1 + 8) = param_2;\n                *(param_2 + iVar1 + 0xc) = 0;\n                return;\n            }\n            fcn.00405500(CONCAT13(5, param_1), param_1);\n            return;\n        }\n        iVar1 = fcn.004079b4(0);\n        if (*in_EAX != 0) {\n            fcn.004055b4();\n        }\n    }\n    fcn.00407a44();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 256
    },
    "00408664": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004086a4)\n\nvoid __fastcall fcn.00408664(unkbyte3 param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            iVar1 = iVar1 + -0xc;\n            if ((!SCARRY4(param_2, param_2)) && (!SCARRY4(param_2 * 2, 0xe))) {\n                fcn.00405424();\n                *in_EAX = iVar1 + 0xc;\n                *(iVar1 + 8) = param_2;\n                *(iVar1 + 0xc + param_2 * 2) = 0;\n                return;\n            }\n            fcn.00405500(CONCAT13(5, param_1));\n            return;\n        }\n        iVar1 = fcn.00407974();\n        if (*in_EAX != 0) {\n            fcn.004055b4();\n        }\n    }\n    fcn.00407a44();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 287
    },
    "00408cf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408cf0(void)\n\n{\n    if (*0x4b7010 != NULL) {\n        (**0x4b7010)();\n        return;\n    }\n    fcn.0040554c();\n    return;\n}\n",
        "token_count": 52
    },
    "00408d08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d08(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00407a44();\n            }\n            else {\n                fcn.00407ab0();\n            }\n        }\n        else if (cVar1 == '\\x12') {\n            if (param_1 < 2) {\n                fcn.00407a20();\n            }\n            else {\n                fcn.00407a80();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00407a68();\n            }\n            else {\n                fcn.00407ae0();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00408cf0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00408d08();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00408c90();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040b47c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                fcn.00405500(CONCAT13(2, param_1));\n                return;\n            }\n            do {\n                fcn.00409d24();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 607
    },
    "00408e5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408e5c(void)\n\n{\n    if (*0x4b7014 != NULL) {\n        (**0x4b7014)();\n        return;\n    }\n    fcn.0040554c();\n    return;\n}\n",
        "token_count": 53
    },
    "00408f38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408f38(uint param_1, uint param_2)\n\n{\n    if (*0x4b7018 != NULL) {\n        (**0x4b7018)();\n        return;\n    }\n    fcn.0040554c(param_2);\n    return;\n}\n",
        "token_count": 65
    },
    "00408f5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408f5c(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EBP;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    \n    piVar10 = NULL;\n    piVar9 = NULL;\n    piVar7 = *(param_1 + 1) + 10 + param_1;\n    iVar6 = piVar7[-1];\n    iVar4 = 0;\n    iVar2 = piVar7[-2];\n    if (iVar6 != 0) {\n        piVar9 = piVar7 + iVar6 * 2;\n        iVar5 = iVar6;\n        do {\n            if (piVar7[iVar5 * 2 + -2] == 0) {\n                iVar6 = iVar6 + -1;\n                piVar10 = piVar7 + iVar5 * 2;\n                break;\n            }\n            iVar5 = iVar5 + -1;\n            piVar10 = piVar9;\n        } while (iVar5 != 0);\n        do {\n            piVar8 = piVar7;\n            if (((piVar10 != piVar9) && (*piVar10 != 0)) &&\n               ((*piVar7 == 0 || (piVar10[1] < piVar7[1] || piVar10[1] == piVar7[1])))) {\n                piVar8 = piVar10;\n                piVar10 = piVar7;\n            }\n            if (iVar4 < piVar8[1]) {\n                fcn.004055b4();\n            }\n            pcVar3 = **piVar8;\n            cVar1 = *pcVar3;\n            if (cVar1 == '\\x0f') {\n                if (piVar8 < piVar10) {\n                    fcn.0040b494();\n                    iVar4 = 4;\n                }\n                else {\n                    fcn.0040c570();\n                    iVar4 = 4;\n                }\n            }\n            else {\n                if (piVar10 < piVar8) {\ncode_r0x0040554c:\n                    fcn.00405500(CONCAT13(2, iVar2), unaff_EBP);\n                    return;\n                }\n                if (cVar1 == '\\n') {\n                    fcn.00407e9c();\n                    iVar4 = 4;\n                }\n                else if (cVar1 == '\\v') {\n                    fcn.00407e74();\n                    iVar4 = 4;\n                }\n                else if (cVar1 == '\\x12') {\n                    fcn.00407e00();\n                    iVar4 = 4;\n                }\n                else if (cVar1 == '\\f') {\n                    fcn.00408f38();\n                    iVar4 = 0x10;\n                }\n                else if (cVar1 == '\\r') {\n                    iVar4 = *(pcVar3 + pcVar3[1] + 6);\n                    fcn.00409338(iVar4, *(pcVar3 + pcVar3[1] + 2));\n                }\n                else if (cVar1 == '\\x0e') {\n                    iVar4 = *(pcVar3 + pcVar3[1] + 2);\n                    fcn.00408f5c();\n                }\n                else {\n                    if (cVar1 != '\\x11') goto code_r0x0040554c;\n                    fcn.00409d68();\n                    iVar4 = 4;\n                }\n            }\n            iVar4 = iVar4 + piVar8[1];\n            piVar7 = piVar8 + 2;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    if (iVar4 < iVar2) {\n        fcn.004055b4(piVar9, piVar10);\n    }\n    return;\n}\n",
        "token_count": 883
    },
    "00409104": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409104(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uStack32;\n    uint32_t uStack20;\n    \n    param_1 = *(param_1 + 1) + param_1;\n    uVar6 = 0;\n    uStack20 = *(param_1 + 6);\n    if (uStack20 != 0) {\n        iVar5 = uStack20 - 1;\n        do {\n            if (*(param_1 + 10 + iVar5 * 8) == 0) {\n                uStack20 = uStack20 - 1;\n                uVar3 = iVar5 + 1;\n                break;\n            }\n            iVar5 = iVar5 + -1;\n            uVar3 = uStack20;\n        } while (iVar5 != -1);\n        uStack32 = 0;\n        do {\n            if ((*(param_1 + 10 + uStack32 * 8) == 0) ||\n               ((uVar3 != *(param_1 + 6) && (*(param_1 + 0xe + uVar3 * 8) <= *(param_1 + 0xe + uStack32 * 8))))) {\n                uVar4 = uVar3 + 1;\n            }\n            else {\n                uVar4 = uVar3;\n                uVar3 = uStack32;\n                uStack32 = uStack32 + 1;\n            }\n            if (uVar6 < *(param_1 + 0xe + uVar3 * 8)) {\n                fcn.004055b4();\n            }\n            uVar6 = *(param_1 + 0xe + uVar3 * 8);\n            puVar2 = **(param_1 + 10 + uVar3 * 8);\n    // switch table (13 cases) at 0x4091d6\n            switch(*puVar2) {\n            case 10:\n                fcn.00407e9c();\n                fcn.00407a44();\n                uVar6 = uVar6 + 4;\n                break;\n            case 0xb:\n                fcn.00407e74();\n                fcn.00407a68();\n                uVar6 = uVar6 + 4;\n                break;\n            case 0xc:\n                fcn.00408f38();\n                fcn.00408cf0();\n                uVar6 = uVar6 + 0x10;\n                break;\n            case 0xd:\n                uVar1 = puVar2[1];\n                fcn.00409450(*(puVar2 + uVar1 + 6));\n                uVar6 = uVar6 + *(puVar2 + uVar1 + 2);\n                break;\n            case 0xe:\n            case 0x16:\n                uVar1 = puVar2[1];\n                fcn.00409104();\n                uVar6 = uVar6 + *(puVar2 + uVar1 + 2);\n                break;\n            case 0xf:\n                if (uStack32 < uVar3) {\n                    fcn.0040c570();\n                    fcn.0040c544();\n                }\n                else {\n                    fcn.0040b494();\n                    fcn.0040b47c();\n                }\n                uVar6 = uVar6 + 4;\n                break;\n            default:\n                fcn.0040554c();\n                break;\n            case 0x11:\n                fcn.00409d68();\n                fcn.00409d24();\n                uVar6 = uVar6 + 4;\n                break;\n            case 0x12:\n                fcn.00407e00();\n                fcn.00407a20();\n                uVar6 = uVar6 + 4;\n            }\n            uStack20 = uStack20 - 1;\n            uVar3 = uVar4;\n        } while (uStack20 != 0);\n    }\n    if (uVar6 < *(param_1 + 2)) {\n        fcn.004055b4();\n    }\n    return;\n}\n",
        "token_count": 929
    },
    "00409578": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409578(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.00409338(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "00409878": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00409878(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    char cVar3;\n    char *in_EAX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if (in_EAX != NULL) {\n        for (; in_EAX != *0x4bdbf8; in_EAX = **(in_EAX + in_EAX[1] + 10)) {\n            if (*in_EAX != '\\r') {\n                if (((*in_EAX != '\\x0e') || (uVar1 = in_EAX[1],  *(in_EAX + uVar1 + 6) == 0)) ||\n                   (iVar4 = *(in_EAX + uVar1 + 6),  iVar4 + -1 < 0)) goto code_r0x00409906;\n                iVar5 = 0;\n                goto code_r0x004098cc;\n            }\n        }\n        uStack20 = param_1 & 0xffffff00 | *0x4bdbfc;\n        goto code_r0x0040990a;\n    }\n    goto code_r0x00409906;\n    while( true ) {\n        iVar5 = iVar5 + 1;\n        iVar4 = iVar4 + -1;\n        if (iVar4 == 0) break;\ncode_r0x004098cc:\n        if (((*(in_EAX + iVar5 * 8 + uVar1 + 10) == 0) ||\n            ((pcVar2 = **(in_EAX + iVar5 * 8 + uVar1 + 10),  *pcVar2 == '\\r' && (cVar3 = fcn.00409878(),  cVar3 != '\\0')\n             ))) || ((*pcVar2 == '\\x0e' && (cVar3 = fcn.00409878(),  cVar3 != '\\0')))) goto code_r0x0040990a;\n    }\ncode_r0x00409906:\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x0040990a:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 543
    },
    "00409958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409958(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t **in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar5;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = *in_EAX;\n    iVar1 = *arg_8h;\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.0040554c();\n        }\n        fcn.00409d24();\n    }\n    else {\n        var_14h = 0;\n        var_20h = piVar5;\n        if (piVar5 != NULL) {\n            var_20h = piVar5 + -2;\n            var_14h = piVar5[-1];\n        }\n        iVar4 = *(in_EDX + 1) + in_EDX;\n        iVar2 = *(iVar4 + 2);\n        piVar5 = *(iVar4 + 6);\n        if (piVar5 == NULL) {\n            var_1ch = 0;\n        }\n        else {\n            var_1ch = *piVar5;\n        }\n        iVar4 = iVar1 * iVar2;\n        if (iVar2 != iVar4 / iVar1) {\n            fcn.0040554c();\n        }\n        if (iVar4 + 8 < 0) {\n            fcn.0040554c();\n        }\n        if ((var_20h == NULL) || (*var_20h == 1)) {\n            var_24h = var_20h;\n            if (var_1ch == 0) {\n                fcn.00405424();\n            }\n            else {\n                cVar3 = fcn.00409914();\n                if (cVar3 == '\\0') {\n                    if (iVar1 < var_14h) {\n                        fcn.00409590();\n                    }\n                    fcn.00405424();\n                }\n                else {\n                    var_18h = iVar1;\n                    if (var_14h <= iVar1) {\n                        var_18h = var_14h;\n                    }\n                    var_24h = fcn.004053f0();\n                    fcn.00405884();\n                    if (var_20h != NULL) {\n                        fcn.00409450(var_18h);\n                        if (iVar1 < var_14h) {\n                            fcn.00409590();\n                        }\n                        fcn.0040540c();\n                    }\n                }\n            }\n            var_20h = var_24h;\n        }\n        else {\n            var_20h = fcn.004053f0();\n            var_18h = var_14h;\n            if (iVar1 < var_14h) {\n                var_18h = iVar1;\n            }\n            if (var_1ch == 0) {\n                fcn.004055b4();\n            }\n            else {\n                fcn.00405884();\n                fcn.00409578(var_18h);\n            }\n            fcn.00409d24();\n        }\n        *var_20h = 1;\n        var_20h[1] = iVar1;\n        if (var_14h < iVar1) {\n            fcn.00405884();\n        }\n        if (1 < in_ECX) {\n            var_10h = 0;\n            piVar5 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            if (0 < iVar1) {\n                do {\n                    piVar5 = arg_8h + 1;\n                    fcn.00409958(arg_8h + 1);\n                    var_10h = var_10h + 1;\n                } while (var_10h < iVar1);\n            }\n            *in_FS_OFFSET = piVar5;\n        }\n        *in_EAX = var_20h + 2;\n    }\n    return;\n}\n",
        "token_count": 961
    },
    "00409c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c30(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *puVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = NULL;\n    if (in_EAX != 0) {\n        if (in_ECX < 0) {\n            arg_ch = arg_ch + in_ECX;\n            in_ECX = 0;\n        }\n        iVar1 = *(in_EAX + -4);\n        if (iVar1 < in_ECX) {\n            in_ECX = iVar1;\n        }\n        if (iVar1 - in_ECX < arg_ch) {\n            arg_ch = iVar1 - in_ECX;\n        }\n        if (arg_ch < 0) {\n            arg_ch = 0;\n        }\n        if (0 < arg_ch) {\n            piVar2 = *(in_EDX + *(in_EDX + 1) + 6);\n            if (piVar2 == NULL) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = *piVar2;\n            }\n            puVar3 = fcn.004053f0();\n            *puVar3 = 1;\n            puVar3[1] = arg_ch;\n            puVar3 = puVar3 + 2;\n            if (0 < arg_ch) {\n                if (var_10h == 0) {\n                    fcn.004055b4();\n                }\n                else {\n                    fcn.00405884();\n                    fcn.00409578(arg_ch);\n                }\n            }\n        }\n    }\n    fcn.00409d24();\n    *arg_8h = puVar3;\n    return;\n}\n",
        "token_count": 428
    },
    "00409d24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d24(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    iVar2 = *in_EAX;\n    if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            if ((*(*(param_2 + 1) + 6 + param_2) != 0) && (*(iVar2 + -4) != 0)) {\n                fcn.00408d08(iVar2);\n            }\n            fcn.0040540c();\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00409d68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d68(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 != 0) {\n        if (*(param_2 + -8) < 0) {\n            if (param_2 != 0) {\n                fcn.00409c30(in_EAX, *(param_2 + -4));\n                return;\n            }\n            fcn.00409d24();\n            return;\n        }\n        LOCK();\n        *(param_2 + -8) = *(param_2 + -8) + 1;\n    }\n    iVar2 = *in_EAX;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            *(iVar2 + -8) = *(iVar2 + -8) + 1;\n            fcn.00409d24();\n        }\n    }\n    *in_EAX = param_2;\n    return;\n}\n",
        "token_count": 269
    },
    "00409da4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409da4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (-1 < *(in_EAX + -8))) {\n        LOCK();\n        *(in_EAX + -8) = *(in_EAX + -8) + 1;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00409db4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409db4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if (param_2 != 0) {\n        if (*in_EAX == 0) {\n            fcn.00409d68();\n        }\n        else {\n            arg_8h = *(*in_EAX + -4);\n            iStack24 = arg_8h + *(param_2 + -4);\n            param_1 = *(param_1 + 1) + param_1;\n            iVar1 = *(param_1 + 2);\n            piVar2 = *(param_1 + 6);\n            if (piVar2 == NULL) {\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = *piVar2;\n            }\n            iVar3 = iStack24 * iVar1;\n            if (iVar1 != iVar3 / iStack24) {\n                fcn.00405be0();\n            }\n            if (iVar3 + 8 < 0) {\n                fcn.00405be0();\n            }\n            iStack20 = *in_EAX;\n            fcn.00409958(&iStack24);\n            if (iVar4 == 0) {\n                fcn.004055b4();\n            }\n            else {\n                fcn.00409578(arg_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "00409eb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409eb8(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((((*in_EAX != 0) && (-1 < in_EDX)) && (in_EDX < *(*in_EAX + -4))) && (0 < in_ECX)) {\n        var_ch = (*(*in_EAX + -4) - in_EDX) - in_ECX;\n        if (var_ch < 0) {\n            var_ch = 0;\n        }\n        arg_8h = *(arg_8h + 1) + arg_8h;\n        if (*(arg_8h + 6) == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = **(arg_8h + 6);\n        }\n        var_4h = in_EDX;\n        if (iVar1 == 0) {\n            fcn.004055b4();\n        }\n        else if (0 < var_ch) {\n            var_1ch = var_ch;\n            do {\n                fcn.00409578(1);\n                var_1ch = var_1ch + -1;\n            } while (var_1ch != 0);\n        }\n        var_10h = var_4h + var_ch;\n        fcn.00409958(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00409fa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409fa8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack532 [524];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameW(*(in_EAX + 4), auStack532, 0x20a);\n        iVar1 = fcn.0040b234();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 154
    },
    "0040a250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a250(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    \n    sub.kernel32.dll_InitializeCriticalSection(0x4bdc10);\n    *0x4bdc28 = 0x7f;\n    uVar1 = sub.kernel32.dll_GetVersion();\n    *0x4bdc0c = 5 < uVar1;\n    if (*0x4bdc0c) {\n        uVar2 = sub.kernel32.dll_GetModuleHandleW(0x40a2f0, 0x40a2d0);\n        *0x4bdc00 = sub.kernel32.dll_GetProcAddress(uVar2);\n        uVar2 = sub.kernel32.dll_GetModuleHandleW(0x40a2f0, 0x40a30c);\n        *0x4bdc04 = sub.kernel32.dll_GetProcAddress(uVar2);\n        uVar2 = sub.kernel32.dll_GetModuleHandleW(0x40a2f0, 0x40a32c);\n        *0x4bdc08 = sub.kernel32.dll_GetProcAddress(uVar2);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0040a4cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a4cc(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY448;\n    uint uStack388;\n    uint uStack384;\n    uchar *puStack380;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint lpLCData;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack380 = &stack0xfffffffc;\n    uStack384 = 0x40a631;\n    uStack388 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack388;\n    var_4h = param_2;\n    fcn.00407a20();\n    if ((*0x4b7a08 <= in_AX) && (in_AX <= *0x4b7c08)) {\n        uVar4 = 0x40;\n        var_8h = 0;\n        do {\n            uVar3 = uVar4 + var_8h >> 1;\n            if (in_AX < *(uVar3 * 8 + 0x4b7a08)) {\n                uVar4 = uVar3 - 1;\n            }\n            else {\n                puVar1 = uVar3 * 8 + 0x4b7a08;\n                if (in_AX < *puVar1 || in_AX == *puVar1) {\n                    fcn.0040a3ec();\n                    break;\n                }\n                var_8h = uVar3 + 1;\n            }\n        } while (var_8h <= uVar4);\n    }\n    if ((*var_4h == 0) && (iVar2 = sub.kernel32.dll_IsValidLocale(in_AX, 2),  iVar2 != 0)) {\n        sub.kernel32.dll_GetLocaleInfoW(in_AX, 0x59, &lpLCData, 0x55);\n        sub.kernel32.dll_GetLocaleInfoW(in_AX, 0x5a, &var_15ch, 0x55);\n        fcn.0040858c();\n        fcn.0040858c(0x40a64c, 0);\n        fcn.0040858c(0x40a65c, 0);\n        uStackY448 = 0;\n        fcn.004087c4();\n    }\n    *in_FS_OFFSET = uStackY448;\n    fcn.00407a80(0x40a638);\n    return;\n}\n",
        "token_count": 600
    },
    "0040a6c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a6c8(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_16h;\n    ushort var_12h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    iVar2 = (**0x4bdc08)();\n    if (in_EAX != iVar2) {\n        var_ch = fcn.0040a684();\n        var_10h = 3;\n        puVar3 = &var_16h;\n        do {\n            *puVar3 = \"0123456789ABCDEF\"[in_EAX & 0xf];\n            in_EAX = (in_EAX & 0xffff) >> 4;\n            var_10h = var_10h + -1;\n            puVar3 = puVar3 + -2;\n        } while (var_10h != -1);\n        var_16h._2_2_ = 0;\n        var_12h = 0;\n        (**0x4bdc04)(4, &var_1ch, &var_10h);\n    }\n    iVar4 = fcn.0040a684();\n    if (iVar4 != 0) {\n        if (-1 < var_8h + -2) {\n            iVar5 = var_8h + -1;\n            var_10h = 0;\n            do {\n                if (*(iVar4 + var_10h * 2) == 0) {\n                    *(iVar4 + var_10h * 2) = 0x2c;\n                }\n                var_10h = var_10h + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        fcn.00408550();\n        fcn.0040540c();\n    }\n    if (var_ch != 0) {\n        (**0x4bdc04)(0, 0, &var_10h);\n        fcn.0040a684();\n        if ((var_4h != var_8h) || (cVar1 = fcn.0040a660(),  cVar1 != '\\0')) {\n            (**0x4bdc04)(8, var_ch, &var_10h);\n        }\n        fcn.0040540c();\n        fcn.0040540c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "0040a7e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a7e4(uint param_1, int32_t *param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40a8e8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.kernel32.dll_EnterCriticalSection(0x4bdc10);\n    if (in_AX == *0x4bdc28) {\n        fcn.0040858c();\n        sub.kernel32.dll_LeaveCriticalSection(0x4bdc10);\n    }\n    else {\n        sub.kernel32.dll_LeaveCriticalSection(0x4bdc10);\n        fcn.00407a20();\n        iVar2 = sub.kernel32.dll_IsValidLocale(in_AX, 2);\n        if (iVar2 != 0) {\n            if (*0x4bdc0c == '\\0') {\n                fcn.0040a4cc();\n                iVar1 = sub.kernel32.dll_GetSystemDefaultUILanguage();\n                if (in_AX != iVar1) {\n                    if (*param_2 != 0) {\n                        fcn.004086e4();\n                    }\n                    sub.kernel32.dll_GetSystemDefaultUILanguage();\n                    fcn.0040a4cc();\n                    fcn.004086e4();\n                }\n            }\n            else {\n                fcn.0040a6c8();\n            }\n        }\n        sub.kernel32.dll_EnterCriticalSection(0x4bdc10);\n        *0x4bdc28 = in_AX;\n        fcn.004084ec();\n        fcn.0040a34c();\n        uStackY52 = 0x4bdc10;\n        sub.kernel32.dll_LeaveCriticalSection();\n    }\n    *in_FS_OFFSET = uStackY52;\n    fcn.00407a20(0x40a8ef);\n    return;\n}\n",
        "token_count": 471
    },
    "0040a928": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl\nfcn.0040a928(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString;\n    int32_t hFindFile;\n    int16_t *var_ch;\n    uint var_8h;\n    int16_t *var_4h;\n    \n    var_ch = in_EAX;\n    var_4h = in_EAX;\n    iVar1 = sub.kernel32.dll_GetModuleHandleW(0x40aae8);\n    if (((iVar1 == 0) || (pcVar2 = sub.kernel32.dll_GetProcAddress(iVar1, 0x40ab04),  pcVar2 == NULL)) ||\n       (iVar1 = (*pcVar2)(var_4h, &lpFileName, 0x105),  iVar1 == 0)) {\n        if (*var_4h == 0x5c) {\n            if (var_4h[1] != 0x5c) {\n                return var_ch;\n            }\n            piVar3 = fcn.0040a904();\n            if (*piVar3 == 0) {\n                return var_ch;\n            }\n            piVar3 = fcn.0040a904();\n            if (*piVar3 == 0) {\n                return var_ch;\n            }\n        }\n        else {\n            piVar3 = var_4h + 2;\n        }\n        iVar1 = piVar3 - var_4h >> 1;\n        if (iVar1 < 0) {\n            iVar1 = iVar1 + ((piVar3 - var_4h & 1U) != 0);\n        }\n        if (iVar1 + 1 < 0x106) {\n            fcn.0040a34c();\n            while (*piVar3 != 0) {\n                piVar4 = fcn.0040a904();\n                iVar5 = piVar4 - piVar3 >> 1;\n                if (iVar5 < 0) {\n                    iVar5 = iVar5 + ((piVar4 - piVar3 & 1U) != 0);\n                }\n                if (0x105 < iVar5 + iVar1 + 1) {\n                    return var_ch;\n                }\n                fcn.0040a34c();\n                hFindFile = sub.kernel32.dll_FindFirstFileW(&lpFileName, &lpFindFileData);\n                if (hFindFile == -1) {\n                    return var_ch;\n                }\n                sub.kernel32.dll_FindClose(hFindFile);\n                iVar5 = sub.kernel32.dll_lstrlenW(&lpString);\n                if (0x105 < iVar5 + iVar1 + 2) {\n                    return var_ch;\n                }\n                *(&lpFileName + iVar1 * 2) = 0x5c;\n                fcn.0040a34c();\n                iVar5 = sub.kernel32.dll_lstrlenW();\n                iVar1 = iVar1 + iVar5 + 1;\n                piVar3 = piVar4;\n            }\n            fcn.0040a34c();\n        }\n    }\n    else {\n        fcn.0040a34c();\n    }\n    return var_ch;\n}\n",
        "token_count": 862
    },
    "0040ab18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040ab18(void)\n\n{\n    uint noname_0;\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffcf8;\n    uint in_stack_fffffd4c;\n    uint in_stack_fffffd50;\n    uint in_stack_fffffd54;\n    uint in_stack_fffffd58;\n    uint *in_stack_fffffd5c;\n    uint in_stack_fffffd60;\n    uint in_stack_fffffd64;\n    uint in_stack_fffffd68;\n    uint in_stack_fffffd6c;\n    uint *in_stack_fffffd70;\n    uint in_stack_fffffd74;\n    uint in_stack_fffffd78;\n    uint in_stack_fffffd7c;\n    uint in_stack_fffffd80;\n    uint *in_stack_fffffd84;\n    uint in_stack_fffffd88;\n    uint in_stack_fffffd8c;\n    uint in_stack_fffffd90;\n    uint in_stack_fffffd94;\n    uint uStack572;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint lpValueName;\n    uint var_10h;\n    uint hKey;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack552 = 0x40ab2f;\n    var_4h = in_EAX;\n    fcn.00407b04();\n    uStack556 = 0x40ad3d;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    if (var_4h == 0) {\n        uStack572 = 0;\n        puStack552 = &stack0xfffffffc;\n        sub.kernel32.dll_GetModuleFileNameW();\n    }\n    else {\n        puStack552 = &stack0xfffffffc;\n        fcn.004084ec();\n        fcn.0040a34c();\n    }\n    if (lpValueName != 0) {\n        var_8h = 0;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExW();\n        if (iVar1 != 0) {\n            iVar1 = sub.advapi32.dll_RegOpenKeyExW();\n            if (iVar1 != 0) {\n                in_stack_fffffd94 = 0xf0019;\n                in_stack_fffffd90 = 0;\n                in_stack_fffffd8c = 0x40ad88;\n                in_stack_fffffd88 = 0x80000001;\n                in_stack_fffffd84 = 0x40abdf;\n                iVar1 = sub.advapi32.dll_RegOpenKeyExW();\n                if (iVar1 != 0) {\n                    in_stack_fffffd84 = &fcn.0040ab18::hKey;\n                    in_stack_fffffd80 = 0xf0019;\n                    in_stack_fffffd7c = 0;\n                    in_stack_fffffd78 = 0x40ad88;\n                    in_stack_fffffd74 = 0x80000002;\n                    in_stack_fffffd70 = 0x40abfd;\n                    iVar1 = sub.advapi32.dll_RegOpenKeyExW();\n                    if (iVar1 != 0) {\n                        in_stack_fffffd70 = &fcn.0040ab18::hKey;\n                        in_stack_fffffd6c = 0xf0019;\n                        in_stack_fffffd68 = 0;\n                        in_stack_fffffd64 = 0x40adbc;\n                        in_stack_fffffd60 = 0x80000001;\n                        in_stack_fffffd5c = 0x40ac1b;\n                        iVar1 = sub.advapi32.dll_RegOpenKeyExW();\n                        if (iVar1 != 0) {\n                            in_stack_fffffd5c = &fcn.0040ab18::hKey;\n                            in_stack_fffffd58 = 0xf0019;\n                            in_stack_fffffd54 = 0;\n                            in_stack_fffffd50 = 0x40adf0;\n                            in_stack_fffffd4c = 0x80000001;\n                            iVar1 = sub.advapi32.dll_RegOpenKeyExW();\n                            if (iVar1 != 0) goto code_r0x0040ad27;\n                        }\n                    }\n                }\n            }\n        }\n        noname_0 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffd40;\n        fcn.0040a928(noname_0, 0x40ad20, &stack0xfffffffc, in_stack_fffffd4c, in_stack_fffffd50, in_stack_fffffd54, \n                     in_stack_fffffd58, in_stack_fffffd5c, in_stack_fffffd60, in_stack_fffffd64, in_stack_fffffd68, \n                     in_stack_fffffd6c, in_stack_fffffd70, in_stack_fffffd74, in_stack_fffffd78, in_stack_fffffd7c, \n                     in_stack_fffffd80, in_stack_fffffd84, in_stack_fffffd88, in_stack_fffffd8c, in_stack_fffffd90, \n                     in_stack_fffffd94);\n        iVar1 = sub.advapi32.dll_RegQueryValueExW(hKey, &fcn.0040ab18::lpValueName, 0, 0, 0, &fcn.0040ab18::var_10h);\n        if (iVar1 == 0) {\n            var_8h = fcn.004053f0();\n            sub.advapi32.dll_RegQueryValueExW(hKey, &fcn.0040ab18::lpValueName, 0, 0, var_8h, &fcn.0040ab18::var_10h);\n            fcn.00408550();\n        }\n        else {\n            iVar1 = sub.advapi32.dll_RegQueryValueExW(hKey, 0x40ae30, 0, 0, 0, &fcn.0040ab18::var_10h);\n            if (iVar1 == 0) {\n                var_8h = fcn.004053f0();\n                in_stack_fffffcf8 = hKey;\n                sub.advapi32.dll_RegQueryValueExW(hKey, 0x40ae30, 0, 0, var_8h, &fcn.0040ab18::var_10h);\n                fcn.00408550();\n            }\n        }\n        *in_FS_OFFSET = in_stack_fffffcf8;\n        if (var_8h != 0) {\n            fcn.0040540c(0x40ad27);\n        }\n        sub.advapi32.dll_RegCloseKey(hKey);\n        return;\n    }\ncode_r0x0040ad27:\n    *in_FS_OFFSET = uStack572;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 1531
    },
    "0040ae34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ae34(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40ae8b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (*0x4b7c10 == 0) {\n        fcn.0040ab18();\n        fcn.0040ae98();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.00408550();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40ae92;\n    uStack24 = 0x40ae8a;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 220
    },
    "0040b234": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b234(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY584;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_218h;\n    uint var_214h;\n    uint var_20eh;\n    int32_t var_4h;\n    \n    puStack552 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack556 = 0x40b2ee;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack560;\n    sub.kernel32.dll_GetModuleFileNameW(0, &var_20eh, 0x105);\n    fcn.00408550();\n    fcn.0040858c(0);\n    fcn.0040b110();\n    if (var_4h != 0) {\n        uStackY584 = fcn.004084ec(0, 2);\n        sub.kernel32.dll_LoadLibraryExW();\n    }\n    *in_FS_OFFSET = uStackY584;\n    fcn.00407a80(0x40b2f5);\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 264
    },
    "0040b38c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b38c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x4b7048;\n    if (*0x4b7048 != NULL) {\n        do {\n            uStack32 = 0x40b3c7;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0040bb14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bb14(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        piVar2 = iVar1 + -8;\n        if (0 < *piVar2) {\n            LOCK();\n            iVar1 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar1 == 1) {\n                fcn.0040426c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0040bb44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bb44(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        puVar3 = fcn.0040477c();\n    }\n    else {\n        iVar2 = *(iVar1 + -4);\n        if (*(iVar1 + -8) == 1) {\n            puVar3 = fcn.00404464();\n        }\n        else {\n            puVar3 = fcn.00403ee8();\n            fcn.004055b4();\n            fcn.0040bb14();\n        }\n        if (iVar2 < param_2) {\n            fcn.00405884();\n        }\n    }\n    *puVar3 = 1;\n    puVar3[1] = param_2;\n    *in_EAX = puVar3 + 2;\n    return;\n}\n",
        "token_count": 228
    },
    "0040bc7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bc7c(void)\n\n{\n    if (*0x4bb8f8 != 0) {\n        fcn.00406688();\n    }\n    return;\n}\n",
        "token_count": 42
    },
    "0040bc94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bc94(void)\n\n{\n    if (*0x4bb8f8 != 0) {\n        fcn.00406820();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "0040bfbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bfbc(void)\n\n{\n    if (*0x4bb8f8 != 0) {\n        fcn.00406688();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "0040c024": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c024(void)\n\n{\n    if (*0x4bb8f8 != 0) {\n        fcn.00406820();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "0040c198": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c198(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x950) != '\\0') {\n        iVar2 = 0xc5;\n        do {\n            fcn.0040bf70();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        do {\n            fcn.0040c0fc();\n            cVar1 = fcn.0040bcb8();\n        } while (cVar1 != '\\0');\n        if (*(in_EAX + 0x10) != 0) {\n            fcn.004065b4();\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0040c1dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c1dc(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x950) == '\\0') {\n        if (*(in_EAX + 0x10) == 0) {\n            puStack20 = 0x40c203;\n            iVar2 = fcn.0040653c();\n            iVar3 = 0;\n            LOCK();\n            piVar1 = in_EAX + 0x10;\n            if (*piVar1 == 0) {\n                *piVar1 = iVar2;\n            }\n            else {\n                iVar3 = *piVar1;\n            }\n            if (iVar3 != 0) {\n                puStack20 = 0x40c21c;\n                fcn.004065b4();\n            }\n        }\n        puStack20 = 0x40c22a;\n        fcn.00406688();\n        uStack24 = 0x40c27f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        if (*(in_EAX + 0x950) == '\\0') {\n            iVar3 = 0xc5;\n            puStack20 = &stack0xfffffffc;\n            do {\n                fcn.0040bfa8();\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(in_EAX + 0x950) = 1;\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x40c286;\n        uStack24 = 0x40c27e;\n        fcn.00406820();\n        return;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "0040c28c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c28c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x950) != '\\0') {\n        puStack28 = 0x40c2d2;\n        fcn.0040bfbc();\n        uStack32 = 0x40c311;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        fcn.0040bfd0();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x40c318;\n        uStack32 = 0x40c310;\n        fcn.0040c024();\n        return;\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0040c338": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c338(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x950) == '\\0') {\n        puStack40 = 0x40c35c;\n        fcn.0040c1dc();\n    }\n    puStack40 = 0x40c385;\n    fcn.0040bfbc();\n    uStack44 = 0x40c3ed;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.0040bf00();\n    if (iVar1 == 0) {\n        fcn.0040c0e4();\n        fcn.0040be78();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x40c3f4;\n    uStack44 = 0x40c3ec;\n    fcn.0040c024();\n    return;\n}\n",
        "token_count": 291
    },
    "0040c414": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c414(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x950) != '\\0') {\n        puStack40 = 0x40c45d;\n        fcn.0040bfbc();\n        uStack44 = 0x40c49f;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        fcn.0040bf00();\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x40c4a6;\n        uStack44 = 0x40c49e;\n        fcn.0040c024();\n        return;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0040c544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c544(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX != 0) {\n        fcn.00405f84();\n        *in_EAX = 0;\n        fcn.0040c510();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040c698": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c698(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_ECX != 0) {\n        if (in_EAX == 0) {\n            uVar1 = fcn.0040ca5c(0, 0, 0, 0, arg_8h);\n        }\n        else {\n            uVar1 = fcn.0040ca5c(0, 0, in_EDX, in_EAX, arg_8h);\n            if (((uVar1 != 0) && (uVar1 <= in_EDX)) && ((arg_8h != -1 || (*(in_EAX + -1 + uVar1) != '\\0')))) {\n                if (uVar1 == in_EDX) {\n                    for (; (((1 < uVar1 && (0x7f < *(in_EAX + -1 + uVar1))) && ((*(in_EAX + -1 + uVar1) & 0x80) != 0))\n                           && ((*(in_EAX + -1 + uVar1) & 0xc0) != 0xc0)); uVar1 = uVar1 - 1) {\n                    }\n                }\n                else {\n                    uVar1 = uVar1 + 1;\n                }\n                *(in_EAX + -1 + uVar1) = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 361
    },
    "0040c738": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c738(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_ECX != 0) {\n        if ((in_EAX == 0) || (in_EDX == 0)) {\n            uVar1 = fcn.0040ca84(0, 0, arg_8h);\n        }\n        else {\n            uVar1 = fcn.0040ca84(in_EDX, in_EAX, arg_8h);\n            if (((uVar1 != 0) && (uVar1 <= in_EDX)) && ((arg_8h != -1 || (*(in_EAX + -2 + uVar1 * 2) != 0)))) {\n                if (in_EDX == uVar1) {\n                    if (((1 < uVar1) && (0xdbff < *(in_EAX + -2 + uVar1 * 2))) && (*(in_EAX + -2 + uVar1 * 2) < 0xe000))\n                    {\n                        uVar1 = uVar1 - 1;\n                    }\n                }\n                else {\n                    uVar1 = uVar1 + 1;\n                }\n                *(in_EAX + -2 + uVar1 * 2) = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 336
    },
    "0040c8dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c8dc(void)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t arg_8h;\n    uint32_t uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    var_4h = 0;\n    iVar1 = *in_EAX + 1;\n    puVar2 = &fcn.0040c8dc::var_104h;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar2 = puVar2 + 1;\n    }\n    uStack284 = 0x40c97e;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    arg_8h = 0x40c912;\n    fcn.00407a20();\n    if (var_104h != 0) {\n        arg_8h = var_104h;\n        fcn.00408664();\n        fcn.004084ec();\n        iVar1 = fcn.0040c738(arg_8h);\n        if (iVar1 < 1) {\n            fcn.00407a20();\n        }\n        else {\n            fcn.00408664();\n        }\n        fcn.00407e00();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x40c985;\n    uStack288 = 0x40c97d;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 404
    },
    "0040cab8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040cab8(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetVersion();\n    if ((((uVar1 & 0xff) != 5) || ((uVar1 & 0xff00) == 0)) && ((uVar1 & 0xff) < 6)) {\n        *0x4bb984 = 0x409;\n        return;\n    }\n    *0x4bb984 = 0x7f;\n    return;\n}\n",
        "token_count": 114
    },
    "0040cb18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040cb18(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40cb94;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4bb98c = *0x4bb98c + 1;\n    if (*0x4bb98c == 0) {\n        fcn.0040582c();\n        fcn.0040582c();\n        fcn.0040582c();\n        fcn.0040a340();\n        if (*0x4b7c10 != 0) {\n            fcn.0040426c();\n        }\n        fcn.0040c198();\n        fcn.00405384();\n        fcn.00408c90();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 221
    },
    "0040d4f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d4f8(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_ch;\n    uint arg_8h_01;\n    uint var_1ch;\n    uint hLibModule;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (arg_8h == 0) {\n        iVar2 = 0;\n        puVar1 = *0x4b7c3c;\n    }\n    else {\n        iVar2 = fcn.0040d718(arg_8h);\n        puVar1 = *0x4b7c3c;\n    }\n    do {\n        do {\n            arg_8h_00 = puVar1;\n            if (arg_8h_00 == NULL) {\n                return var_4h;\n            }\n            uVar3 = fcn.0040d6c8(*(arg_8h_00[1] + 4));\n            iVar4 = fcn.0040d718(uVar3);\n            puVar1 = *arg_8h_00;\n        } while ((arg_8h != 0) && ((iVar4 != iVar2 || (iVar4 = fcn.0040d72c(arg_8h, uVar3, iVar4),  iVar4 != 0))));\n        if ((arg_8h_00 != NULL) && (*(arg_8h_00[1] + 0x18) != 0)) {\n            iVar4 = arg_8h_00[1];\n            puVar5 = fcn.0040d6d8(*(iVar4 + 8));\n            uVar3 = *puVar5;\n            arg_ch = fcn.0040d6f8(*(iVar4 + 0x18));\n            arg_8h_01 = fcn.0040d6e8(*(iVar4 + 0xc));\n            iVar4 = fcn.0040d75c(arg_8h_01);\n            fcn.0040d774(arg_8h_01, arg_ch, iVar4 << 2);\n            func_0x0040cbb0(uVar3);\n            *puVar5 = 0;\n            if (arg_8h_00 != NULL) {\n                puVar5 = arg_8h_00;\n                fcn.0040d79c(arg_8h_00);\n                sub.kernel32.dll_LocalFree(puVar5, arg_8h_00);\n            }\n            var_4h = 1;\n        }\n    } while (arg_8h == 0);\n    return var_4h;\n}\n",
        "token_count": 639
    },
    "0040d608": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d608(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar1;\n    uint32_t arg_8h_02;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    var_4h = 0x8007007e;\n    if (*(*0x40003c + 0x4000e4) != 0) {\n        for (arg_8h_00 = fcn.0040d7c0(*(*0x40003c + 0x4000e0)); *(arg_8h_00 + 4) != 0; arg_8h_00 = arg_8h_00 + 0x20) {\n            arg_8h_01 = fcn.0040d6c8(*(arg_8h_00 + 4));\n            iVar2 = fcn.0040d718(arg_8h_01);\n            iVar1 = fcn.0040d718(arg_8h);\n            if ((iVar2 == iVar1) && (iVar2 = fcn.0040d72c(arg_8h, arg_8h_01, iVar2),  iVar2 == 0)) break;\n        }\n        if (*(arg_8h_00 + 4) != 0) {\n            arg_8h_02 = fcn.0040d7d0(*(arg_8h_00 + 0xc));\n            iVar2 = fcn.0040d75c(arg_8h_02);\n            uVar3 = iVar2 * 4 + arg_8h_02;\n            for (; arg_8h_02 < uVar3; arg_8h_02 = arg_8h_02 + 4) {\n                fcn.0040d218(arg_8h_00, arg_8h_02);\n            }\n            var_4h = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 457
    },
    "0040d75c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d75c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 83
    },
    "00419e30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419e42)\n\nvoid __cdecl fcn.00419e30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_ch == 0) || (-1 < arg_ch)) {\n        fcn.00419af8(arg_8h, arg_ch);\n    }\n    else {\n        fcn.00419af8(-arg_8h, -(arg_ch + (arg_8h != 0)));\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041a104": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a104(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint in_EDX;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = arg_8h >> 4 | arg_ch << 0x1c;\n    for (var_4h = arg_ch >> 4; var_4h != 0 || var_8h != 0; var_4h = var_4h >> 4) {\n        var_8h = var_8h >> 4 | var_4h << 0x1c;\n    }\n    fcn.00419fac(in_EDX, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 168
    },
    "0041a1a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041a1a0(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00405920();\n    if (iStack20 != 0) {\n        fcn.004195e8();\n    }\n    return uVar1;\n}\n",
        "token_count": 70
    },
    "0041a1dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041a1dc(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405920();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "0041a1f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041a1f4(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00405920();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 85
    },
    "0041a214": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041a214(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00409618();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "0041a568": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.0041a568(void)\n\n{\n    int16_t *piVar1;\n    int16_t *in_EAX;\n    int16_t *piVar2;\n    \n    if (*in_EAX != 0) {\n        piVar1 = in_EAX + 1;\n        do {\n            piVar2 = piVar1;\n            piVar1 = piVar2 + 1;\n        } while (*piVar2 != 0);\n        return piVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 116
    },
    "0041a71c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a71c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((in_ECX != 0) && (arg_8h != 0)) && (-1 < in_ECX - arg_8h)) {\n        iVar3 = (in_ECX - arg_8h) + 1;\n        iVar2 = 0;\n        do {\n            if ((*(in_EAX + iVar2 * 2) != 0) && (iVar1 = fcn.0041a5d0(),  iVar1 == 0)) {\n                return iVar2 * 2 + in_EAX;\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 230
    },
    "0041a790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a790(uint32_t param_1)\n\n{\n    char cVar1;\n    ushort auStack86 [33];\n    ushort *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack86 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.004200c4();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.0041a584();\n    auStack86[param_1 + 1] = 0;\n    uStack16 = 10;\n    fcn.004195e8();\n    return;\n}\n",
        "token_count": 169
    },
    "0041a9cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a9cc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    if ((in_EAX < *(arg_8h + -4)) && (*(arg_8h + -6) != 0x53)) {\n        in_EAX = *(arg_8h + -4);\n    }\n    if (((*(arg_8h + -0xc) != -1) && (in_EDX + in_EAX < *(arg_8h + -0xc))) &&\n       (iVar1 = in_EDX + 1 + in_EAX,  iVar1 <= *(arg_8h + -0xc))) {\n        iVar1 = (*(arg_8h + -0xc) - iVar1) + 1;\n        do {\n            if (*(arg_8h + -0x10) == 0) {\n                return 1;\n            }\n            **(arg_8h + -0x14) = 0x20;\n            *(arg_8h + -0x14) = *(arg_8h + -0x14) + 2;\n            *(arg_8h + -0x10) = *(arg_8h + -0x10) + -2;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "0041aa40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0041aa40(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if (in_EAX == NULL) {\n        in_ECX = 0;\n    }\n    else if (in_ECX == -1) {\n        in_ECX = fcn.00407f04();\n    }\n    if ((-1 < in_EDX) && (in_EDX < in_ECX)) {\n        in_ECX = in_EDX;\n    }\n    var_8h = in_ECX * 2;\n    if (((in_EAX == NULL) || (*in_EAX != 0x2d)) || (*(arg_8h + -6) == 0x53)) {\n        bVar1 = false;\n    }\n    else {\n        var_8h = var_8h - 2;\n        in_ECX = in_ECX + -1;\n        bVar1 = true;\n    }\n    if ((*(arg_8h + -0x15) != '\\0') || (cVar2 = fcn.0041a9cc(arg_8h),  cVar2 == '\\0')) {\n        if (bVar1) {\n            if (*(arg_8h + -0x10) == 0) {\n                return '\\x01';\n            }\n            **(arg_8h + -0x14) = 0x2d;\n            *(arg_8h + -0x14) = *(arg_8h + -0x14) + 2;\n            *(arg_8h + -0x10) = *(arg_8h + -0x10) + -2;\n        }\n        if (((*(arg_8h + -4) != -1) && (in_ECX < *(arg_8h + -4))) &&\n           ((*(arg_8h + -6) != 0x53 && (in_ECX + 1 <= *(arg_8h + -4))))) {\n            iVar3 = (*(arg_8h + -4) - (in_ECX + 1)) + 1;\n            do {\n                if (*(arg_8h + -0x10) == 0) {\n                    return '\\x01';\n                }\n                **(arg_8h + -0x14) = 0x30;\n                *(arg_8h + -0x14) = *(arg_8h + -0x14) + 2;\n                *(arg_8h + -0x10) = *(arg_8h + -0x10) + -2;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        if (in_EAX == NULL) {\n            cVar2 = false;\n        }\n        else {\n            cVar2 = *(arg_8h + -0x10) < var_8h;\n            if (cVar2) {\n                var_8h = *(arg_8h + -0x10);\n            }\n            fcn.004055b4();\n            *(arg_8h + -0x14) = *(arg_8h + -0x14) + var_8h;\n            *(arg_8h + -0x10) = *(arg_8h + -0x10) - var_8h;\n        }\n        if (*(arg_8h + -0x15) != '\\0') {\n            cVar2 = fcn.0041a9cc(arg_8h);\n        }\n    }\n    return cVar2;\n}\n",
        "token_count": 837
    },
    "0041abc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041abc0(void)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    uint var_10h;\n    \n    uVar1 = *in_EAX;\n    fcn.00407a20();\n    var_10h._0_2_ = uVar1;\n    if (var_10h != 1) {\n        if (**0x4ba4b4 == NULL) {\n            fcn.0040554c();\n        }\n        else {\n            (***0x4ba4b4)();\n        }\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0041b6c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041b6c4(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    ushort *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    ushort *puVar4;\n    ushort *puVar5;\n    uint var_2ah;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_10h;\n        if (arg_10h < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_14h) {\n        uVar2 = arg_ch;\n    }\n    fcn.0041b9e4(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ah - 0x7fff < 2) {\n        fcn.0041b7e1();\n        puVar4 = extraout_ECX * 6 + 0x41b7ca;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_14h;\n        if ((arg_14h != 1) && ((4 < arg_14h || (iVar1 < var_2ah)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x41b7b6))();\n    }\n    return puVar5 - in_EAX >> 1;\n}\n",
        "token_count": 465
    },
    "0041b7e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041b7e1(void)\n\n{\n    int32_t unaff_EBP;\n    ushort *unaff_EDI;\n    uint var_28h;\n    \n    if (*(unaff_EBP + -0x28) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0041b9e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b9e4(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0041ba11(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0041bb33(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0041ba11": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ba11(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0041ba3c:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00405a24();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x4b9190);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x4b919c);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x14) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x15 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0041ba3c;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0041bafe;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0041bafe:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0041bb11;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0041bb11:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0041bb14;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0041ba3c;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0041bb14:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1185
    },
    "0041bc10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041bc10(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    ushort extraout_var;\n    char in_CL;\n    uint16_t *extraout_ECX;\n    uint16_t *extraout_ECX_00;\n    uint16_t *puVar2;\n    float10 *in_EDX;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar4;\n    float10 fVar5;\n    uint16_t uVar6;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 0xc2);\n    uVar4 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0041bce2();\n    uVar6 = *in_EAX;\n    if ((uVar6 == 0x2b) || (uVar6 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0041bcf3();\n    iVar3 = 0;\n    puVar2 = extraout_ECX;\n    if (*in_EAX == uVar1) {\n        in_EAX = in_EAX + 1;\n        fcn.0041bcf3();\n        iVar3 = -extraout_EDX;\n        puVar2 = extraout_ECX_00;\n    }\n    if (puVar2 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0041bd16(iVar3);\n        }\n        fcn.0041bce2();\n        if (*in_EAX == 0) {\n            fVar5 = fcn.00405a24();\n            if (uVar6 == 0x2d) {\n                fVar5 = -fVar5;\n            }\n            if (in_CL == '\\0') {\n                *in_EDX = fVar5;\n            }\n            else {\n                *in_EDX = ROUND(fVar5);\n            }\n            if ((uVar4 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar4) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 556
    },
    "0041bf3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041bf3c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    iVar1 = *in_EAX;\n    if (((iVar1 < 0) || (in_EAX[1] < 1)) || (*0x4b91a8 <= iVar1)) {\n        fcn.004195e8(in_EAX[1], 0, iVar1, 0);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0041c110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0041c110(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0041c0d4();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x4b7dda + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x4b7dda + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 445
    },
    "0041c5b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c5b4(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0041c358(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0041c5ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c5ec(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1e) == '\\0') {\n        fcn.0041c078(arg_8h + -0xe, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1e) = 1;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0041c8c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c8c4(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t uVar3;\n    uint16_t *in_EAX;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_28h;\n    int32_t var_1ch;\n    uint16_t *var_14h;\n    int16_t var_eh;\n    int16_t var_ch;\n    int16_t var_ah;\n    uint var_8h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x41d12e;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x2d8) < 2)) {\n        *(arg_8h + -0x2d8) = *(arg_8h + -0x2d8) + 1;\n        var_20h._0_2_ = 0x20;\n        var_14h = in_EAX;\n        while (uVar1 = *var_14h,  uVar1 != 0) {\n            if ((uVar1 < 0xd800) || (0xdfff < uVar1)) {\n                var_14h = fcn.00420338();\n                uVar6 = uVar1;\n                if (uVar1 - 0x61 < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_20h;\n                if (((uVar6 - 0x41 < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_20h == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_20h._0_2_ = uVar3;\n    // switch table (57 cases) at 0x41c9fc\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_14h != 0 && (*var_14h != uVar1))) {\n                        if ((*var_14h < 0xd800) || (0xdfff < *var_14h)) {\n                            var_14h = var_14h + 1;\n                        }\n                        else {\n                            var_14h = fcn.00420338();\n                        }\n                    }\n                    fcn.0041c434(arg_8h);\n                    if (*var_14h != 0) {\n                        var_14h = var_14h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0041c434(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*(*(arg_8h + -0x2d0) + 6) != 0) {\n                        fcn.0041c434(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*(*(arg_8h + -0x2d0) + 8) != 0) {\n                        fcn.0041c434(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0041c5ec(&stack0xfffffffc);\n                    iVar5 = fcn.0041a60c();\n                    if (iVar5 == 0) {\n                        fcn.0041c434(arg_8h);\n                        var_14h = var_14h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0041a60c();\n                        if (iVar5 == 0) {\n                            fcn.0041c434(arg_8h);\n                            var_14h = var_14h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0041a60c();\n                            if (iVar5 == 0) {\n                                if (var_8h < 0xc) {\n                                    fcn.0041c518(arg_8h);\n                                }\n                                else {\n                                    fcn.0041c518(arg_8h);\n                                }\n                                var_14h = var_14h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0041a60c();\n                                if (iVar5 == 0) {\n                                    fcn.0041c5b4(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0041c378(uVar7, *(arg_8h + 0xc));\n                                    fcn.0041c518(uVar7);\n                                    var_14h = var_14h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0041a60c();\n                                    if (iVar5 == 0) {\n                                        fcn.0041c5b4(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0041c378(uVar7, *(arg_8h + 0xc));\n                                        fcn.0041c518(uVar7);\n                                        var_14h = var_14h + 2;\n                                    }\n                                    else {\n                                        fcn.0041c434(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c8c4(arg_8h);\n                    fcn.0041c5ec(&stack0xfffffffc);\n                    if ((((var_8h != 0) || (var_ah != 0)) || (var_ch != 0)) || (var_eh != 0)) {\n                        fcn.0041c434(arg_8h);\n                        fcn.0041c8c4(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0041c580(&stack0xfffffffc);\n                    if (var_1ch - 1U < 2) {\n                        fcn.0041c5b4(&stack0xfffffffc);\n                        fcn.0041c534(arg_8h);\n                    }\n                    else if (var_1ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0041c378(uVar7, *(arg_8h + 0xc));\n                        fcn.0041c518(uVar7);\n                    }\n                    else if (var_1ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0041c378(uVar7, *(arg_8h + 0xc));\n                        fcn.0041c518(uVar7);\n                    }\n                    else if (var_1ch == 5) {\n                        fcn.0041c8c4(arg_8h);\n                    }\n                    else {\n                        fcn.0041c8c4(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5b4(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0041c7a8(&stack0xfffffffc);\n                    fcn.0041c518(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5b4(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0041c62c(&stack0xfffffffc);\n                    fcn.0041c518(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5ec(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_14h;\n                    while (*puVar4 != 0) {\n                        if ((*puVar4 < 0xd800) || (0xdfff < *puVar4)) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0041cc8d;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0041cc8d:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0041a60c();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0041a60c(),  iVar5 != 0)) {\n                                        fcn.0041a60c();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.00420338();\n                        }\n                    }\n                    if (2 < var_1ch) {\n                        var_1ch = 2;\n                    }\n                    fcn.0041c534(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5b4(&stack0xfffffffc);\n                    if (var_1ch - 1U < 2) {\n                        fcn.0041c534(arg_8h);\n                    }\n                    else if (var_1ch - 1U == 2) {\n                        fcn.0041c518(arg_8h);\n                    }\n                    else {\n                        fcn.0041c518(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5ec(&stack0xfffffffc);\n                    if (2 < var_1ch) {\n                        var_1ch = 2;\n                    }\n                    fcn.0041c534(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5ec(&stack0xfffffffc);\n                    if (2 < var_1ch) {\n                        var_1ch = 2;\n                    }\n                    fcn.0041c534(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0041c580(&stack0xfffffffc);\n                    if (var_1ch == 1) {\n                        fcn.0041c8c4(arg_8h);\n                    }\n                    else {\n                        fcn.0041c8c4(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5b4(&stack0xfffffffc);\n                    if (var_1ch < 3) {\n                        fcn.0041c534(arg_8h);\n                    }\n                    else {\n                        fcn.0041c534(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0041c580(&stack0xfffffffc);\n                    fcn.0041c5ec(&stack0xfffffffc);\n                    if (3 < var_1ch) {\n                        var_1ch = 3;\n                    }\n                    fcn.0041c534(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.00420308();\n                fcn.0041c434(iVar5);\n                var_14h = fcn.00420338();\n                var_20h._0_2_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x2d8) = *(arg_8h + -0x2d8) + -1;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x41d135;\n    uStack72 = 0x41d12d;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 2820
    },
    "0041d5dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d5dc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4be6b4 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0041c3f0();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 247
    },
    "0041dae4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0041dae4(uint arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint var_fh;\n    ushort var_ah;\n    uint16_t var_8h;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0041d418();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0041d418(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0041d418();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0041d418(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0041d35c();\n    }\n    cVar1 = fcn.0041d380(&var_fh);\n    if (cVar1 == '\\0') {\n        return var_5h;\n    }\n    var_ah = 0;\n    stack0xfffffff0 = 0;\n    var_fh._1_2_ = 0;\n    cVar1 = fcn.0041d4fc();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0041d380(&var_fh);\n        if (cVar1 == '\\0') {\n            return var_5h;\n        }\n        cVar1 = fcn.0041d4fc();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0041d380(&var_fh);\n            if (cVar1 == '\\0') {\n                return var_5h;\n            }\n            cVar1 = fcn.0041d4fc();\n            if ((cVar1 != '\\0') && (cVar1 = fcn.0041d380(&var_fh),  cVar1 == '\\0')) {\n                return var_5h;\n            }\n        }\n    }\n    if (iVar3 < 0) {\n        cVar1 = fcn.0041d418();\n        if ((cVar1 == '\\0') && (cVar1 = fcn.0041d418(),  cVar1 == '\\0')) {\n            cVar1 = fcn.0041d418();\n            if ((cVar1 != '\\0') || (cVar1 = fcn.0041d418(),  cVar1 != '\\0')) {\n                iVar3 = 0xc;\n            }\n        }\n        else {\n            iVar3 = 0;\n        }\n    }\n    if (-1 < iVar3) {\n        if (var_8h == 0) {\n            return var_5h;\n        }\n        if (0xc < var_8h) {\n            return var_5h;\n        }\n        if (var_8h == 0xc) {\n            var_8h = 0;\n        }\n        var_8h = var_8h + iVar3;\n    }\n    fcn.0041d35c();\n    uVar2 = fcn.0041bfc0(var_4h, var_fh._1_2_);\n    return uVar2;\n}\n",
        "token_count": 737
    },
    "0041eab0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eab0(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0041e04c(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.0040c9f0();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0041f10c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f10c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack2208;\n    uint uStack2204;\n    uchar *puStack2200;\n    uint var_888h;\n    uint var_88h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack2200 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack2204 = 0x41f231;\n    uStack2208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack2208;\n    uVar1 = fcn.0041ef14(0x400);\n    if (**0x4ba6c0 == '\\0') {\n        uVar1 = fcn.00409ff0(*(*0x4ba4f8 + 4), &var_88h, 0x40);\n        func_0x0040e438(uVar1);\n        uVar1 = 0;\n        sub.user32.dll_MessageBoxW(0, &var_888h, &var_88h, 0x2010);\n    }\n    else {\n        fcn.00405820();\n        fcn.00405564();\n        uVar2 = func_0x0040e3d0(1, 0, &var_888h, uVar1, 0, 0, 0, 0);\n        fcn.00409c00(uVar2);\n        func_0x0040e3d0(1, 0, &var_888h, uVar1, var_4h, uVar2, 0, 0);\n        uVar1 = func_0x0040e268(0xfffffff4, var_4h, uVar2, &var_8h, 0);\n        func_0x0040e3d8(uVar1);\n        uVar1 = func_0x0040e268(0xfffffff4, 0x41f24c, 2, &var_8h, 0);\n        func_0x0040e3d8();\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00409d24(0x41f238);\n    return;\n}\n",
        "token_count": 510
    },
    "0041fd74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fd74(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        do {\n            piVar1 = *in_EAX;\n            if (in_EAX[1] != 0) {\n                func_0x0040e0a0(in_EAX[1]);\n            }\n            fcn.0040540c();\n            in_EAX = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0041fef4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041fef4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x41ff04;\n    fcn.004065e0();\n    uStack12 = 0x41ff38;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (*0x4b9298 == '\\0') {\n        puStack8 = &stack0xfffffffc;\n        fcn.0041fe94();\n    }\n    *in_FS_OFFSET = uStack16;\n    puStack8 = 0x41ff3f;\n    uStack12 = 0x41ff37;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 178
    },
    "0041ff44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041ff44(void)\n\n{\n    if (*0x4b9298 == '\\0') {\n        fcn.0041fef4();\n    }\n    return *0x4be8fc;\n}\n",
        "token_count": 48
    },
    "0041ff58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041ff58(void)\n\n{\n    if (*0x4b9298 == '\\0') {\n        fcn.0041fef4();\n    }\n    return *0x4be900;\n}\n",
        "token_count": 47
    },
    "0041ff6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041ff6c(void)\n\n{\n    if (*0x4b9298 == '\\0') {\n        fcn.0041fef4();\n    }\n    return *0x4be904;\n}\n",
        "token_count": 48
    },
    "00420440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00420440(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((arg_8h == 0) || (arg_10h == 0)) || ((arg_18h != 0 && (arg_18h != 1)))) {\n        sub.kernel32.dll_SetLastError(0x57);\n        iVar2 = 0;\n    }\n    else {\n        if (0x7fffffff < arg_ch) {\n            arg_ch = fcn.00407f04();\n        }\n        if (0x7fffffff < arg_14h) {\n            arg_14h = fcn.00407f04();\n        }\n        if (arg_10h == arg_8h) {\n            iVar2 = arg_ch - arg_14h;\ncode_r0x00420513:\n            if (iVar2 == 0) {\n                iVar2 = 2;\n            }\n            else if (iVar2 < 0) {\n                iVar2 = 1;\n            }\n            else {\n                iVar2 = 3;\n            }\n        }\n        else {\n            var_4h = arg_8h;\n            var_ch = arg_10h;\n            while( true ) {\n                uVar1 = arg_ch;\n                if (arg_14h < arg_ch) {\n                    uVar1 = arg_14h;\n                }\n                if (uVar1 < 1) {\n                    iVar2 = arg_ch - arg_14h;\n                    goto code_r0x00420513;\n                }\n                if (0x7ff0 < uVar1) {\n                    uVar1 = 0x7ff0;\n                }\n                var_10h._0_2_ = uVar1 * 2;\n                var_10h._2_2_ = var_10h;\n                var_8h._0_2_ = var_10h;\n                var_8h._2_2_ = var_10h;\n                iVar2 = (**0x4be914)(&var_8h, &var_10h, var_10h & 0xff00 | arg_18h != 0);\n                if (iVar2 != 0) break;\n                arg_ch = arg_ch - uVar1;\n                arg_14h = arg_14h - uVar1;\n                var_4h = var_4h + uVar1 * 2;\n                var_ch = var_ch + uVar1 * 2;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 627
    },
    "00420990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420990(void)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = **0x4ba700; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[6] != 0) {\n            fcn.00409568();\n            puVar1[6] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00420bd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420bd0(void)\n\n{\n    while( true ) {\n        if (*0x4b929c == NULL) break;\n        *0x4b929c = **0x4b929c;\n        fcn.0040540c();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00420bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420bf0(void)\n\n{\n    int32_t arg_8h;\n    \n    arg_8h = func_0x0040e1a8(0x420c28);\n    if (arg_8h != 0) {\n        *0x4b7e30 = fcn.0040e1b8(arg_8h, 0x420c44);\n    }\n    if (*0x4b7e30 == NULL) {\n        *0x4b7e30 = fcn.0041a4f4;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004212f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004212f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    if (arg_ch == '\\0') {\n        fcn.004213a4(arg_8h, *0x421340, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        fcn.004213a4(arg_8h, *0x42133c, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0042172c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042172c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint arg_ch;\n    \n    if (*0x4be794 == 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        func_0x0040e110();\n        iVar1 = fcn.00421ca0(arg_8h, arg_ch);\n        iVar2 = 0;\n        LOCK();\n        if (*0x4be794 != 0) {\n            iVar2 = *0x4be794;\n            iVar1 = *0x4be794;\n        }\n        *0x4be794 = iVar1;\n        if (iVar2 != 0) {\n            fcn.00405ce8();\n        }\n    }\n    return *0x4be794;\n}\n",
        "token_count": 190
    },
    "00421bac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00421bac(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x4be7a0 == 0) {\n        iVar1 = fcn.004220a0();\n        iVar2 = 0;\n        LOCK();\n        if (*0x4be7a0 != 0) {\n            iVar2 = *0x4be7a0;\n            iVar1 = *0x4be7a0;\n        }\n        *0x4be7a0 = iVar1;\n        if (iVar2 != 0) {\n            fcn.00405ce8();\n        }\n    }\n    return *0x4be7a0;\n}\n",
        "token_count": 156
    },
    "00421be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00421be0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x4be7a8 == 0) {\n        iVar1 = fcn.00421fb8();\n        iVar2 = 0;\n        LOCK();\n        if (*0x4be7a8 != 0) {\n            iVar2 = *0x4be7a8;\n            iVar1 = *0x4be7a8;\n        }\n        *0x4be7a8 = iVar1;\n        if (iVar2 != 0) {\n            fcn.00405ce8();\n        }\n    }\n    return *0x4be7a8;\n}\n",
        "token_count": 157
    },
    "00421c58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00421c58(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    in_EAX[3] = param_1;\n    uVar1 = 0;\n    (**(*in_EAX + 0x34))(0, 0);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "00422220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00422220(void)\n\n{\n    int32_t iVar1;\n    uint lpVersionInformation;\n    uint var_ah;\n    uint var_4h;\n    \n    fcn.00405884();\n    var_ah._0_1_ = 1;\n    join{0x00000008,0x00000000} = sub.kernel32.dll_VerSetConditionMask(0, 0, 0x80, 1);\n    iVar1 = sub.kernel32.dll_VerifyVersionInfoW(&lpVersionInformation, 0x80, join{0x00000008,0x00000000});\n    return iVar1 == 0;\n}\n",
        "token_count": 155
    },
    "00422b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422b10(int32_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    uint16_t *in_EAX;\n    uint var_4h;\n    \n    *param_1 = 0;\n    uVar2 = 0;\n    for (; (uVar1 = *in_EAX,  uVar1 != 0 && (0x20 < uVar1 | uVar2)); in_EAX = in_EAX + 1) {\n        if (uVar1 == 0x22) {\n            uVar2 = uVar2 ^ 1;\n        }\n        else {\n            if (param_2 != 0) {\n                *(param_2 + *param_1 * 2) = uVar1;\n            }\n            *param_1 = *param_1 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00422c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422c40(void)\n\n{\n    int16_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x422c91;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    func_0x0040e128();\n    piVar1 = fcn.00422b60();\n    while (*piVar1 != 0) {\n        piVar1 = fcn.00422b60();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x422c98;\n    uStack24 = 0x422c90;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 197
    },
    "00422ca0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422ca0(void)\n\n{\n    int32_t in_EAX;\n    int16_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffdcc;\n    uint uStack552;\n    uint uStack548;\n    uchar *puStack544;\n    uint var_20ch;\n    uint var_4h;\n    \n    puStack544 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack548 = 0x422d35;\n    uStack552 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack552;\n    if (in_EAX == 0) {\n        in_stack_fffffdcc = 0;\n        puStack544 = &stack0xfffffffc;\n        func_0x0040e1a0(0, &var_20ch, 0x104);\n        fcn.00407ba8();\n    }\n    else {\n        piVar1 = func_0x0040e128();\n        while (*piVar1 != 0) {\n            piVar1 = fcn.00422b60();\n            if (in_EAX == 0) goto code_r0x00422d15;\n            in_EAX = in_EAX + -1;\n        }\n        fcn.00407a20();\ncode_r0x00422d15:\n        fcn.00407e00();\n    }\n    *in_FS_OFFSET = in_stack_fffffdcc;\n    fcn.00407a20(0x422d3c);\n    return;\n}\n",
        "token_count": 338
    },
    "00422dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422dd0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x422e87;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00422abc();\n    if (*in_EAX != 0) {\n        cVar1 = fcn.00422a98();\n        if (cVar1 != '\\0') goto code_r0x00422e4d;\n    }\n    fcn.00422abc();\n    if (*in_EAX != 0) {\n        cVar1 = fcn.00422a98();\n        if (cVar1 != '\\0') goto code_r0x00422e4d;\n    }\n    iVar2 = fcn.0041ff44();\n    if (iVar2 == 2) {\n        fcn.00422abc();\n        if (*in_EAX != 0) {\n            cVar1 = fcn.00422a98();\n            if (cVar1 != '\\0') goto code_r0x00422e4d;\n        }\n    }\n    fcn.00422d44();\ncode_r0x00422e4d:\n    fcn.004228bc();\n    fcn.00422678();\n    fcn.00407e00();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x422e8e;\n    uStack24 = 0x422e86;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 402
    },
    "00422f00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422f00(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint lpValueName;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x423036;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    while( true ) {\n        var_14h = 0;\n        iVar1 = func_0x0040e098();\n        if ((iVar1 != 0) || ((var_10h != arg_ch && (var_10h != arg_8h)))) goto code_r0x00423020;\n        if (var_14h == 0) break;\n        if (0x6fffffff < var_14h) {\n            fcn.0041f270();\n        }\n        fcn.00407ba8();\n        fcn.00407fa0(&fcn.00422f00::var_14h);\n        iVar1 = func_0x0040e098();\n        if (iVar1 != 0xea) {\n            if ((iVar1 == 0) && ((var_10h == arg_ch || (var_10h == arg_8h)))) {\n                for (uVar2 = var_14h >> 1; (uVar2 != 0 && (*(var_4h + -2 + uVar2 * 2) == 0)); uVar2 = uVar2 - 1) {\n                }\n                if ((var_10h == 7) && (uVar2 != 0)) {\n                    uVar2 = uVar2 + 1;\n                }\n                fcn.00408664();\n                if ((var_10h == 7) && (uVar2 != 0)) {\n                    iVar1 = fcn.00407fa0();\n                    *(iVar1 + -2 + uVar2 * 2) = 0;\n                }\n                fcn.00407e00();\n            }\ncode_r0x00423020:\n            *in_FS_OFFSET = uStack48;\n            puStack40 = 0x42303d;\n            uStack44 = 0x423035;\n            fcn.00407a20();\n            return;\n        }\n    }\n    fcn.00407a20();\n    goto code_r0x00423020;\n}\n",
        "token_count": 592
    },
    "00423164": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423164(void)\n\n{\n    uint arg_8h;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_ffffffc4;\n    uint arg_ch;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x42325e;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    arg_ch = 0x4232a0;\n    arg_8h = func_0x0040e1a8(0x4232a0, 0x42326c);\n    pcVar1 = fcn.0040e1b8(arg_8h, arg_ch);\n    if (pcVar1 == NULL) {\n        iVar2 = fcn.0041ff44();\n        if (iVar2 == 2) {\n            in_stack_ffffffc4 = &hKey;\n            iVar2 = fcn.00423054(in_stack_ffffffc4, 1, 0);\n            if (iVar2 == 0) {\n                fcn.00423048();\n                func_0x0040e088(hKey);\n            }\n        }\n        else {\n            in_stack_ffffffc4 = &hKey;\n            iVar2 = fcn.00423054(in_stack_ffffffc4, 1, 0);\n            if (iVar2 == 0) {\n                fcn.00423048();\n                func_0x0040e088(hKey);\n            }\n        }\n        fcn.0040873c();\n        fcn.00405920();\n    }\n    else {\n        (*pcVar1)();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00407a20(0x423265);\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 463
    },
    "00423378": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423378(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    \n    fcn.00407e00();\n    if (*param_2 != 0) {\n        puVar1 = fcn.00422994();\n        if (0x2e < *puVar1) {\n            fcn.004086e4();\n        }\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00423d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423d40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x423db7;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    arg_8h = 0x423d66;\n    fcn.00423434();\n    if (var_4h == 0) {\n        arg_8h = &fcn.00423d40::var_4h;\n        fcn.0041a894(arg_8h);\n    }\n    iVar1 = fcn.0041f27c();\n    *(iVar1 + 0x18) = param_2;\n    fcn.0040711c();\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x423dbe;\n    iStack32 = 0x423db6;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 295
    },
    "00423e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __cdecl fcn.00423e48(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    uint32_t *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    fcn.00405cb8();\n    arg_8h = arg_8h & 0xff;\n    iVar1 = (**(*in_EAX + 0x14))(arg_8h, arg_ch);\n    in_EAX[1] = iVar1;\n    if ((in_EAX[1] == 0) || (in_EAX[1] == -1)) {\n        fcn.00423df4();\n    }\n    *(in_EAX + 2) = 1;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 272
    },
    "00424718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00424718(int32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iStack16;\n    \n    iStack16 = param_1;\n    if (*0x4c0908 == 0) {\n        fcn.004246e4();\n        iStack16 = 0x4c0908;\n        LOCK();\n        *0x4c0908 = 1;\n    }\n    if (param_1 != 0) {\n        do {\n            in_EAX = *((in_EAX & 0xff ^ *param_2) * 4 + 0x4c090c) ^ in_EAX >> 8;\n            param_1 = param_1 + -1;\n            param_2 = param_2 + 1;\n        } while (param_1 != 0);\n    }\n    return CONCAT44(iStack16, in_EAX);\n}\n",
        "token_count": 208
    },
    "00424890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00424890(code **arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint var_20h;\n    uint var_18h;\n    uint var_dh;\n    char var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 8) = in_ECX;\n    iVar1 = (**(*in_ECX + 8))();\n    if (iVar1 == 4) {\n        iVar1 = (**(*in_ECX + 8))();\n        if (iVar1 == 5) goto code_r0x004248f6;\n    }\n    fcn.0041f27c();\n    fcn.0040711c();\ncode_r0x004248f6:\n    iVar1 = fcn.00424774();\n    if (iVar1 != var_8h) {\n        fcn.0041f27c();\n        fcn.0040711c();\n    }\n    (***in_ECX)();\n    fcn.0042266c();\n    (**(*in_ECX + 4))();\n    iVar1 = fcn.0042264c();\n    if (0 < iVar1) {\n        fcn.0041f27c();\n        fcn.0040711c();\n    }\n    if (var_9h != '\\0') {\n        uVar2 = (**arg_8h)(fcn.00424b10, in_EAX);\n        *(in_EAX + 4) = uVar2;\n    }\n    *(in_EAX + 0xc) = var_dh;\n    *(in_EAX + 0x10) = 1;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack64;\n    }\n    return in_EAX;\n}\n",
        "token_count": 527
    },
    "00424b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00424b10(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iStack20;\n    \n    iStack20 = 0;\n    if (0 < param_1) {\n        do {\n            if (*(in_EAX + 0x18) == 0) {\n                if (*(in_EAX + 0xc) == 0) break;\n                fcn.00424a40();\n            }\n            uVar1 = param_1;\n            if (*(in_EAX + 0x18) <= param_1 && param_1 != *(in_EAX + 0x18)) {\n                uVar1 = *(in_EAX + 0x18);\n            }\n            fcn.004055b4();\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + uVar1;\n            *(in_EAX + 0x18) = *(in_EAX + 0x18) - uVar1;\n            param_1 = param_1 - uVar1;\n            iStack20 = iStack20 + uVar1;\n        } while (0 < param_1);\n    }\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 282
    },
    "004251d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004251d8(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    *param_2 = in_EAX + 0x6c;\n    *param_1 = 0;\n    if (*(in_EAX + 0x10) == '\\0') {\n        iVar1 = (**(in_EAX + 8))();\n        *param_1 = iVar1;\n        if (*param_1 == 0) {\n            *(in_EAX + 0x10) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042539c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042539c(int32_t param_1)\n\n{\n    uint8_t *puVar1;\n    uint8_t **in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    puVar2 = *in_EAX;\n    if (puVar2 == in_EAX[1]) {\n        puVar2 = (**in_EAX[4])();\n        in_EAX[5] = puVar2;\n        in_EAX[1] = *in_EAX + param_1;\n        if (param_1 == 0) {\n            in_EAX[6] = 0x1;\n            uVar3 = CONCAT31(puVar2 >> 8, 0xff);\n            goto code_r0x004253d5;\n        }\n    }\n    puVar1 = *in_EAX;\n    *in_EAX = *in_EAX + 1;\n    uVar3 = puVar2 & 0xffffff00 | *puVar1;\ncode_r0x004253d5:\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 244
    },
    "004256a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004256a4(int32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t *in_EAX;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_1 < 5) {\n        return 1;\n    }\n    uVar1 = *param_2;\n    if (uVar1 < 0xe1) {\n        in_EAX[2] = 0;\n        for (; 0x2c < uVar1; uVar1 = uVar1 - 0x2d) {\n            in_EAX[2] = in_EAX[2] + 1;\n        }\n        in_EAX[1] = 0;\n        for (; 8 < uVar1; uVar1 = uVar1 - 9) {\n            in_EAX[1] = in_EAX[1] + 1;\n        }\n        *in_EAX = uVar1;\n        param_2 = param_2 + 1;\n        in_EAX[3] = 0;\n        iVar2 = 0;\n        do {\n            uVar1 = *param_2;\n            iVar3 = iVar2 + 1;\n            param_2 = param_2 + 1;\n            in_EAX[3] = in_EAX[3] + (uVar1 << (iVar2 << 3 & 0x1f));\n            iVar2 = iVar3;\n        } while (iVar3 < 4);\n        if (in_EAX[3] == 0) {\n            in_EAX[3] = 1;\n        }\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 377
    },
    "00425e20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425e20(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x425f1f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar1 = &stack0xfffffffc;\n    if (0 < arg_ch) {\n        do {\n            fcn.00424b6c();\n            fcn.00408664();\n            if (var_14h != 0) {\n                fcn.00407fa0();\n                fcn.00424b6c();\n            }\n            fcn.00407e00();\n            arg_ch = arg_ch + -1;\n            puVar1 = puStack40;\n        } while (arg_ch != 0);\n    }\n    puStack40 = puVar1;\n    if (0 < arg_8h) {\n        do {\n            fcn.00424b6c();\n            fcn.00408254();\n            if (var_14h != 0) {\n                fcn.00407fa8();\n                fcn.00424b6c();\n            }\n            fcn.00407e9c();\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.00424b6c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x425f26;\n    uStack44 = 0x425f16;\n    fcn.00407a44();\n    uStack44 = 0x425f1e;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 447
    },
    "00427148": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427148(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    bVar5 = param_2 == 0x50;\n    if ((param_2 < 0x51) || (fcn.0040803c(param_1),  !bVar5)) {\n        fcn.00427094();\n    }\n    if (((*(in_EAX + 0x44) != ~*(in_EAX + 0x48)) || (param_2 != *(in_EAX + 0x44))) || (*(in_EAX + 0x40) != 0x105)) {\n        fcn.00427094();\n    }\n    uVar2 = in_EAX + 0x50;\n    uVar4 = in_EAX + *(in_EAX + 0x44);\n    iVar1 = fcn.00424774();\n    if ((iVar1 != *(in_EAX + 0x4c)) || (*(uVar4 - 2) != 0)) {\n        fcn.00427094();\n    }\n    iVar3 = 0x105;\n    do {\n        if (uVar4 <= uVar2) {\n            fcn.00427094();\n        }\n        iVar1 = fcn.00407f04();\n        fcn.00407ba8();\n        uVar2 = uVar2 + (iVar1 + 1) * 2;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 376
    },
    "00427250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00427250(uint param_1, uchar *param_2)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_2 = 0;\n    if (in_AL == '\\0') {\n        return true;\n    }\n    if (*0x4c1130 == '\\0') {\n        sub.kernel32.dll_SetLastError(1);\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (**0x4c1128)(param_2 + 4);\n        bVar2 = iVar1 != 0;\n        if (bVar2) {\n            *param_2 = 1;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 160
    },
    "0042728c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042728c(void)\n\n{\n    char *in_EAX;\n    \n    if (*in_EAX != '\\0') {\n        (**0x4c112c)(*(in_EAX + 4));\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00427644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427644(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.00427644::var_1h + 1;\n    uStack24 = 0x4276b1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.00408550();\n        fcn.0041a32c();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4276b8;\n    uStack24 = 0x4276b0;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 258
    },
    "0042776c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042776c(uint arg_8h, uint arg_ch, int32_t arg_10h, uint noname_3, uint *arg_18h)\n\n{\n    uint *in_FS_OFFSET;\n    int64_t iVar1;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    puStack36 = &stack0xfffffffc;\n    if (arg_18h != NULL) {\n        *arg_18h = 0;\n    }\n    uStack28 = 0x4278e9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (arg_10h == 0x400) {\n        uStack40 = 0x4278ca;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack48 = 0x4277b8;\n        fcn.00407a20();\n        uStack52 = 0x4278a2;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack60 = 0x4277d8;\n        puStack48 = &stack0xfffffffc;\n        iVar1 = fcn.00405790();\n        if (iVar1 != 0) {\n            uStack64 = 0x42787d;\n            uStack68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            puStack60 = &stack0xfffffffc;\n            fcn.00407a20();\n            fcn.0041d33c(arg_8h, arg_ch);\n            fcn.00407e48();\n            *in_FS_OFFSET = arg_8h;\n            uStack68 = 0x427884;\n            fcn.00407a20();\n            return;\n        }\n        uStack64 = 0x42782c;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00407a20();\n        fcn.0041d318(arg_8h, arg_ch);\n        fcn.00407e48();\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x427884;\n        fcn.00407a20();\n        return;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4278f0;\n    uStack28 = 0x4278e8;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 666
    },
    "004278fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004278fc(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x427960;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0041a3e0();\n        fcn.004085dc();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x427967;\n    uStack20 = 0x42795f;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 217
    },
    "00427990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427990(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = func_0x0040e1b0(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 112
    },
    "0042928c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042928c(uint param_1)\n\n{\n    uint16_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.00429124(param_1);\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            puVar3 = *(in_EAX + 4);\n        }\n        else {\n            puVar3 = **(in_EAX + 4);\n        }\n        iVar4 = 0;\n        if (*puVar3 != 0) {\n            iVar4 = fcn.00429250();\n            if (1 < *puVar3) {\n                iVar2 = *puVar3 - 1;\n                do {\n                    iVar1 = fcn.00429250();\n                    iVar4 = iVar1 * iVar4;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n        }\n        if (0 < iVar4) {\n            do {\n                fcn.004293c0();\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    sub.oleaut32.dll_VariantClear();\n    fcn.00429124();\n    return;\n}\n",
        "token_count": 329
    },
    "00429aec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429aec(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 == *param_2) {\n        fcn.0042977c();\n        return;\n    }\n    if (*param_2 == 0x400c) {\n        fcn.00429aec();\n        return;\n    }\n    if (param_1 < 0xc) {\n    // switch table (10 cases) at 0x429b44\n        switch(param_1) {\n        case 0:\n            if ((*param_2 == 1) && (*0x4b939a != '\\0')) {\n                fcn.00428c94();\n            }\n            else {\n                fcn.004293c0();\n            }\n            break;\n        case 1:\n            fcn.0042923c();\n            break;\n        case 2:\n            fcn.0042a5a0();\n            fcn.0042eff8();\n            break;\n        case 3:\n            fcn.00429f70();\n            fcn.0042ef2c();\n            break;\n        case 4:\n            fVar1 = fcn.0042bf9c();\n            fcn.0042f044(fVar1);\n            break;\n        case 5:\n            fVar1 = fcn.0042bad4();\n            fcn.0042f068(SUB84(fVar1, 0), fVar1 >> 0x20);\n            break;\n        case 6:\n            fVar1 = fcn.0042caa8();\n            fcn.0042f094(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n            break;\n        case 7:\n            fVar1 = fcn.0042c3d0();\n            fcn.0042f0c0(SUB84(fVar1, 0), fVar1 >> 0x20);\n            break;\n        case 8:\n            fcn.0042982c();\n            break;\n        case 9:\n            fcn.00429934();\n            break;\n        default:\n            fcn.0042b468();\n            fcn.0042f0ec();\n            break;\n        case 0xbad1abe1:\n            goto code_r0x00429d78;\n        }\n    }\n    else {\n        if (param_1 < 0x15) {\n            if (param_1 == 0x14) {\n                uVar2 = fcn.0042ab24();\n                fcn.0042f018(uVar2, uVar2 >> 0x20);\n                return;\n            }\n    // switch table (7 cases) at 0x429b8a\n            switch(param_1) {\n            case 0xd:\n                fcn.0042998c();\n                return;\n            case 0x10:\n                fcn.0042a444();\n                fcn.0042efd8();\n                return;\n            case 0x11:\n                fcn.0042a4f8();\n                fcn.0042ef4c();\n                return;\n            case 0x12:\n                fcn.0042a698();\n                fcn.0042ef6c();\n                return;\n            case 0x13:\n                fcn.0042a774();\n                fcn.0042ef8c();\n                return;\n            }\n        }\n        else {\n            if (param_1 == 0x15) {\n                uVar2 = fcn.0042afdc();\n                fcn.0042efac(uVar2, uVar2 >> 0x20);\n                return;\n            }\n            if (param_1 == 0x100) {\n                fcn.00429884();\n                return;\n            }\n            if (param_1 == 0x101) {\n                fcn.00428c94();\n                return;\n            }\n            if (param_1 == 0x102) {\n                fcn.004298dc();\n                return;\n            }\n        }\ncode_r0x00429d78:\n        fcn.00429a70();\n    }\n    return;\n}\n",
        "token_count": 911
    },
    "00429f70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00429f70(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42a418;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x429fae\n        switch(uVar1) {\n        case 0:\n            var_4h = 0;\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                puStack28 = &stack0xfffffffc;\n                fcn.00428c94();\n            }\n            var_4h = 0;\n            break;\n        case 2:\n            var_4h = in_EAX[4];\n            break;\n        case 3:\n            var_4h = *(in_EAX + 4);\n            break;\n        case 4:\n            puStack28 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            var_4h = uVar3;\n            if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                var_4h = fcn.00405bd8();\n            }\n            break;\n        case 5:\n            puStack28 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            var_4h = uVar3;\n            if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                var_4h = fcn.00405bd8();\n            }\n            break;\n        case 6:\n            puStack28 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            var_4h = uVar3;\n            if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                var_4h = fcn.00405bd8();\n            }\n            break;\n        case 7:\n            puStack28 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            var_4h = uVar3;\n            if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                var_4h = fcn.00405bd8();\n            }\n            break;\n        case 8:\n            puStack28 = &stack0xfffffffc;\n            var_4h = fcn.00429d88();\n            break;\n        case 9:\ncode_r0x0042a1c5:\n            puStack28 = &stack0xfffffffc;\n            var_4h = fcn.00429e7c();\n            break;\n        case 10:\n            goto code_r0x0042a205;\n        case 0xb:\n            var_4h = in_EAX[4];\n            break;\n        default:\n            puStack28 = &stack0xfffffffc;\n            var_4h = fcn.00429f70();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                var_4h = *(in_EAX + 4);\n                if (var_4h >> 0x1f != *(in_EAX + 6)) {\n                    puStack28 = &stack0xfffffffc;\n                    var_4h = fcn.00405bd8();\n                }\n                goto code_r0x0042a40e;\n            }\n    // switch table (7 cases) at 0x429ffc\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042a1c5;\n            default:\n                goto code_r0x0042a205;\n            case 0x10:\n                var_4h = *(in_EAX + 4);\n                break;\n            case 0x11:\n                var_4h = *(in_EAX + 4);\n                break;\n            case 0x12:\n                var_4h = in_EAX[4];\n                break;\n            case 0x13:\n                var_4h = *(in_EAX + 4);\n                if (var_4h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_4h = fcn.00405bd8();\n                }\n            }\n            goto code_r0x0042a40e;\n        }\n        if (uVar1 == 0x15) {\n            var_4h = *(in_EAX + 4);\n            if (var_4h >> 0x1f != *(in_EAX + 6)) {\n                var_4h = fcn.00405bd8();\n            }\n            goto code_r0x0042a40e;\n        }\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_4h = fcn.00429d88();\n            goto code_r0x0042a40e;\n        }\n        if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_4h = fcn.00429ec0();\n            goto code_r0x0042a40e;\n        }\n        if (uVar1 == 0x102) {\n            puStack28 = &stack0xfffffffc;\n            var_4h = fcn.00429d88();\n            goto code_r0x0042a40e;\n        }\ncode_r0x0042a205:\n        if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.00429f24();\n            if (cVar2 == '\\0') {\n                var_4h = fcn.00429e7c();\n            }\n        }\n        else {\n    // switch table (22 cases) at 0x42a226\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_4h = fcn.00429e7c();\n                break;\n            case 2:\n                var_4h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_4h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                var_4h = uVar3;\n                if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                    var_4h = fcn.00405bd8();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                var_4h = uVar3;\n                if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                    var_4h = fcn.00405bd8();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                var_4h = uVar3;\n                if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                    var_4h = fcn.00405bd8();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                var_4h = uVar3;\n                if (var_4h >> 0x1f != uVar3 >> 0x20) {\n                    var_4h = fcn.00405bd8();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_4h = fcn.00429d88();\n                break;\n            case 0xb:\n                var_4h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_4h = fcn.00429f70();\n                break;\n            case 0x10:\n                var_4h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_4h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_4h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_4h = **(in_EAX + 4);\n                if (var_4h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_4h = fcn.00405bd8();\n                }\n                break;\n            case 0x14:\n                var_4h = **(in_EAX + 4);\n                if (var_4h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_4h = fcn.00405bd8();\n                }\n                break;\n            case 0x15:\n                var_4h = **(in_EAX + 4);\n                if (var_4h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_4h = fcn.00405bd8();\n                }\n            }\n        }\n    }\ncode_r0x0042a40e:\n    *in_FS_OFFSET = uStack36;\n    return var_4h;\n}\n",
        "token_count": 2231
    },
    "0042a444": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042a444(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x4b939a != '\\0') {\n            puStack24 = 0x42a484;\n            fcn.00428c94();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x42a4d2;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00429f70();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00405bd8();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 324
    },
    "0042a4f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042a4f8(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x4b939a != '\\0') {\n            puStack24 = 0x42a538;\n            fcn.00428c94();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x42a57d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00429f70();\n        if (0xff < uVar2) {\n            fcn.00405bd8();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "0042a5a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042a5a0(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (18 cases) at 0x42a5d9\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x4b939a != '\\0') {\n            puStack24 = 0x42a612;\n            fcn.00428c94();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x42a675;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.00429f70();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00405bd8();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 354
    },
    "0042a698": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042a698(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x42a6ce\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x4b939a != '\\0') {\n            puStack24 = 0x42a700;\n            fcn.00428c94();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x42a74e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.00429f70();\n        if (0xffff < uVar1) {\n            fcn.00405bd8();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 325
    },
    "0042a774": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042a774(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (20 cases) at 0x42a7af\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x4b939a != '\\0') {\n            puStack24 = 0x42a7e8;\n            fcn.00428c94();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x42a83a;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.0042ab24();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00405bd8();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 374
    },
    "0042ab24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0042ab24(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_4h, var_8h);\n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42afa1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uVar1 = *in_EAX;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42ab62\n        switch(uVar1) {\n        case 0:\n            uVar3 = 0;\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                puStack32 = &stack0xfffffffc;\n                fcn.00428c94();\n            }\n            uVar3 = 0;\n            break;\n        case 2:\n            uVar3 = in_EAX[4];\n            break;\n        case 3:\n            uVar3 = *(in_EAX + 4);\n            break;\n        case 4:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            break;\n        case 5:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            break;\n        case 6:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            break;\n        case 7:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.00405784();\n            break;\n        case 8:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.0042a91c();\n            break;\n        case 9:\ncode_r0x0042ad65:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.0042a860();\n            break;\n        case 10:\n            goto code_r0x0042adb1;\n        case 0xb:\n            uVar3 = in_EAX[4];\n            break;\n        default:\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.0042ab24();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                uVar3 = *(in_EAX + 4);\n                goto code_r0x0042af97;\n            }\n    // switch table (7 cases) at 0x42abb0\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042ad65;\n            default:\n                goto code_r0x0042adb1;\n            case 0x10:\n                uVar3 = *(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = *(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = in_EAX[4];\n                break;\n            case 0x13:\n                uVar3 = *(in_EAX + 4);\n            }\n            goto code_r0x0042af97;\n        }\n        if (uVar1 == 0x15) {\n            uVar3 = *(in_EAX + 4);\n            goto code_r0x0042af97;\n        }\n        if (uVar1 == 0x100) {\n            uVar3 = fcn.0042a91c();\n            goto code_r0x0042af97;\n        }\n        if (uVar1 == 0x101) {\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.0042aa64();\n            goto code_r0x0042af97;\n        }\n        if (uVar1 == 0x102) {\n            puStack32 = &stack0xfffffffc;\n            uVar3 = fcn.0042a91c();\n            goto code_r0x0042af97;\n        }\ncode_r0x0042adb1:\n        if ((uVar1 & 0x4000) == 0) {\n            puStack32 = &stack0xfffffffc;\n            cVar2 = fcn.0042aad0();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.0042a860();\n            }\n        }\n        else {\n    // switch table (22 cases) at 0x42add2\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.0042a860();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                break;\n            case 5:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                break;\n            case 6:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                break;\n            case 7:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.00405784();\n                break;\n            case 8:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.0042a91c();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack32 = &stack0xfffffffc;\n                uVar3 = fcn.0042ab24();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x15:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n    }\ncode_r0x0042af97:\n    *in_FS_OFFSET = uStack40;\n    return uVar3;\n}\n",
        "token_count": 1531
    },
    "0042afdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0042afdc(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint64_t uVar4;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uVar1 = *in_EAX;\n    if (uVar1 < 0x13) {\n        if (uVar1 == 0x12) {\n            return in_EAX[4];\n        }\n        if (uVar1 == 0) {\n            return 0;\n        }\n        if (uVar1 == 1) {\n            if (*0x4b939a != '\\0') {\n                puStack32 = 0x42b05a;\n                fcn.00428c94();\n            }\n            return 0;\n        }\n        if (uVar1 == 0xb) {\n            return in_EAX[4];\n        }\n        if (uVar1 == 0x11) {\n            return *(in_EAX + 4);\n        }\n    }\n    else {\n        if (uVar1 == 0x13) {\n            return *(in_EAX + 4);\n        }\n        if (uVar1 == 0x15) {\n            return *(in_EAX + 4);\n        }\n        if (uVar1 == 0x4015) {\n            return **(in_EAX + 4);\n        }\n    }\n    uStack36 = 0x42b117;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar4 = fcn.0042ab24();\n    uVar2 = uVar4 >> 0x20;\n    bVar3 = uVar2 < 0x7fffffff;\n    if (uVar2 == 0x7fffffff) {\n        bVar3 = uVar4 != -1;\n    }\n    if (!bVar3 && (uVar2 != 0x7fffffff || uVar4 != -1)) {\n        uVar4 = fcn.00405bd8();\n    }\n    *in_FS_OFFSET = uStack40;\n    return uVar4;\n}\n",
        "token_count": 524
    },
    "0042b14c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042b14c(void)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int16_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x42b314;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *in_EAX;\n    if (iVar1 == 8) {\n        iVar4 = (***0x4ba5d0)(*(in_EAX + 4), 0x400, 0, &fcn.0042b14c::var_8h);\n    }\n    else {\n        bVar5 = iVar1 == 0x100;\n        if (bVar5) {\n            puStack24 = &stack0xfffffffc;\n            fcn.004081c0();\n            if (bVar5) {\n                var_8h._3_1_ = '\\0';\n                goto code_r0x0042b2f6;\n            }\n            fcn.004081c0();\n            if (bVar5) {\n                var_8h._3_1_ = '\\x01';\n                goto code_r0x0042b2f6;\n            }\n            fcn.00408388();\n            uVar3 = fcn.004083a8(0x400, 0, &fcn.0042b14c::var_8h);\n            iVar4 = (***0x4ba5d0)(uVar3);\n        }\n        else {\n            bVar5 = iVar1 == 0x102;\n            if (bVar5) {\n                puStack24 = &stack0xfffffffc;\n                var_ch = in_EAX;\n                fcn.00408874();\n                if (bVar5) {\n                    var_8h._3_1_ = '\\0';\n                    goto code_r0x0042b2f6;\n                }\n                fcn.00408874();\n                if (bVar5) {\n                    var_8h._3_1_ = '\\x01';\n                    goto code_r0x0042b2f6;\n                }\n                fcn.004085dc();\n                iVar4 = (***0x4ba5d0)(*(var_ch + 4), 0x400, 0, &fcn.0042b14c::var_8h);\n            }\n            else {\n                puStack24 = &stack0xfffffffc;\n                fcn.0042e08c();\n                uVar3 = fcn.004083a8(0x400, 0, &fcn.0042b14c::var_8h);\n                iVar4 = (***0x4ba5d0)(uVar3);\n            }\n        }\n    }\n    if (iVar4 == -0x7ffdfffb) {\n        fcn.004085c8();\n        cVar2 = fcn.0041a32c();\n        if (cVar2 == '\\0') {\n            fcn.00429130();\n        }\n    }\n    else if (iVar4 == 0) {\n        var_8h._3_1_ = '\\x01' - (var_8h == 0);\n    }\n    else {\n        fcn.00429130();\n    }\ncode_r0x0042b2f6:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42b31b;\n    uStack28 = 0x42b30b;\n    fcn.00407a20();\n    uStack28 = 0x42b313;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 901
    },
    "0042b368": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0042b368(void)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    uchar auStack20 [4];\n    uchar auStack16 [16];\n    \n    puVar2 = auStack16;\n    sub.oleaut32.dll_VariantInit(puVar2);\n    iVar1 = 0;\n    (***0x4ba6ec)(auStack20, puVar2, 0x400, 0, 0xb);\n    fcn.00429130();\n    return iVar1 != 0;\n}\n",
        "token_count": 121
    },
    "0042b414": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0042b414(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.004309a8();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "0042b468": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0042b468(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    bool bVar3;\n    uint8_t uStack8;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42b494\n        switch(uVar1) {\n        case 0:\n            uStack8 = 0;\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            uStack8 = 0;\n            break;\n        case 2:\n            uStack8 = in_EAX[4] != 0;\n            break;\n        case 3:\n            uStack8 = *(in_EAX + 4) != 0;\n            break;\n        case 4:\n            uStack8 = *(in_EAX + 4) != 0.0;\n            break;\n        case 5:\n            uStack8 = *(in_EAX + 4) != 0.0;\n            break;\n        case 6:\n            uStack8 = *(in_EAX + 4) != 0;\n            break;\n        case 7:\n            uStack8 = *(in_EAX + 4) != 0.0;\n            break;\n        case 8:\n            uStack8 = fcn.0042b14c();\n            break;\n        case 9:\ncode_r0x0042b69d:\n            uStack8 = fcn.0042b368();\n            break;\n        case 10:\n            goto code_r0x0042b6e1;\n        case 0xb:\n            uStack8 = 1 - (in_EAX[4] == 0);\n            break;\n        default:\n            uStack8 = fcn.0042b468();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                bVar3 = *(in_EAX + 6) == 0;\n                if (bVar3) {\n                    bVar3 = *(in_EAX + 4) == 0;\n                }\n                uStack8 = !bVar3;\n                goto code_r0x0042b8dd;\n            }\n    // switch table (7 cases) at 0x42b4e2\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042b69d;\n            default:\n                goto code_r0x0042b6e1;\n            case 0x10:\n                uStack8 = *(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = *(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = in_EAX[4] != 0;\n                break;\n            case 0x13:\n                uStack8 = *(in_EAX + 4) != 0;\n            }\n            goto code_r0x0042b8dd;\n        }\n        if (uVar1 == 0x15) {\n            bVar3 = *(in_EAX + 6) == 0;\n            if (bVar3) {\n                bVar3 = *(in_EAX + 4) == 0;\n            }\n            uStack8 = !bVar3;\n            goto code_r0x0042b8dd;\n        }\n        if (uVar1 == 0x100) {\n            uStack8 = fcn.0042b14c();\n            goto code_r0x0042b8dd;\n        }\n        if (uVar1 == 0x101) {\n            uStack8 = fcn.0042b3b0();\n            goto code_r0x0042b8dd;\n        }\n        if (uVar1 == 0x102) {\n            uStack8 = fcn.0042b14c();\n            goto code_r0x0042b8dd;\n        }\ncode_r0x0042b6e1:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042b414();\n            if (cVar2 == '\\0') {\n                uStack8 = fcn.0042b368();\n            }\n        }\n        else {\n    // switch table (22 cases) at 0x42b702\n            switch(uVar1 & 0xbfff) {\n            default:\n                uStack8 = fcn.0042b368();\n                break;\n            case 2:\n                uStack8 = **(in_EAX + 4) != 0;\n                break;\n            case 3:\n                uStack8 = **(in_EAX + 4) != 0;\n                break;\n            case 4:\n                uStack8 = **(in_EAX + 4) != 0.0;\n                break;\n            case 5:\n                uStack8 = **(in_EAX + 4) != 0.0;\n                break;\n            case 6:\n                uStack8 = **(in_EAX + 4) != 0;\n                break;\n            case 7:\n                uStack8 = **(in_EAX + 4) != 0.0;\n                break;\n            case 8:\n                uStack8 = fcn.0042b14c();\n                break;\n            case 0xb:\n                uStack8 = 1 - (**(in_EAX + 4) == 0);\n                break;\n            case 0xc:\n                uStack8 = fcn.0042b468();\n                break;\n            case 0x10:\n                uStack8 = **(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = **(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = **(in_EAX + 4) != 0;\n                break;\n            case 0x13:\n                uStack8 = **(in_EAX + 4) != 0;\n                break;\n            case 0x14:\n                bVar3 = (*(in_EAX + 4))[1] == 0;\n                if (bVar3) {\n                    bVar3 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = !bVar3;\n                break;\n            case 0x15:\n                bVar3 = (*(in_EAX + 4))[1] == 0;\n                if (bVar3) {\n                    bVar3 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = !bVar3;\n            }\n        }\n    }\ncode_r0x0042b8dd:\n    return CONCAT44(in_EAX, uStack8);\n}\n",
        "token_count": 1533
    },
    "0042bad4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042bad4(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42bb00\n        switch(uVar1) {\n        case 0:\n            dStack24 = 0.0;\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            dStack24 = 0.0;\n            break;\n        case 2:\n            dStack24 = in_EAX[4];\n            break;\n        case 3:\n            dStack24 = *(in_EAX + 4);\n            break;\n        case 4:\n            dStack24 = *(in_EAX + 4);\n            break;\n        case 5:\n            dStack24 = *(in_EAX + 4);\n            break;\n        case 6:\n            dStack24 = *(in_EAX + 4) / *0x42bf74;\n            break;\n        case 7:\n            dStack24 = *(in_EAX + 4);\n            break;\n        case 8:\n            fVar3 = fcn.0042b8f0();\n            dStack24 = fVar3;\n            break;\n        case 9:\ncode_r0x0042bd1a:\n            fVar3 = fcn.0042b9c8();\n            dStack24 = fVar3;\n            break;\n        case 10:\n            goto code_r0x0042bd62;\n        case 0xb:\n            dStack24 = in_EAX[4];\n            break;\n        default:\n            fVar3 = fcn.0042bad4();\n            dStack24 = fVar3;\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                dStack24 = *(in_EAX + 4);\n                goto code_r0x0042bf6a;\n            }\n    // switch table (7 cases) at 0x42bb4e\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042bd1a;\n            default:\n                goto code_r0x0042bd62;\n            case 0x10:\n                dStack24 = *(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = *(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = in_EAX[4];\n                break;\n            case 0x13:\n                dStack24 = *(in_EAX + 4);\n            }\n            goto code_r0x0042bf6a;\n        }\n        if (uVar1 == 0x15) {\n            dStack24 = CONCAT44(*(in_EAX + 6) + -0x80000000, *(in_EAX + 4)) + *0x42bf78;\n            goto code_r0x0042bf6a;\n        }\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.0042b8f0();\n            dStack24 = fVar3;\n            goto code_r0x0042bf6a;\n        }\n        if (uVar1 == 0x101) {\n            fVar3 = fcn.0042ba1c();\n            dStack24 = fVar3;\n            goto code_r0x0042bf6a;\n        }\n        if (uVar1 == 0x102) {\n            fVar3 = fcn.0042b8f0();\n            dStack24 = fVar3;\n            goto code_r0x0042bf6a;\n        }\ncode_r0x0042bd62:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042ba80();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.0042b9c8();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (22 cases) at 0x42bd83\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.0042b9c8();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x42bf74;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.0042b8f0();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.0042bad4();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x15:\n                dStack24 = CONCAT44((*(in_EAX + 4))[1] + -0x80000000, **(in_EAX + 4)) + *0x42bf78;\n            }\n        }\n    }\ncode_r0x0042bf6a:\n    return dStack24;\n}\n",
        "token_count": 1419
    },
    "0042bf9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042bf9c(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    float var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (22 cases) at 0x42bfbe\n    switch(*in_EAX) {\n    case 0:\n        var_4h = 0.0;\n        break;\n    case 1:\n        if (*0x4b939a != '\\0') {\n            puStack40 = 0x42c036;\n            fcn.00428c94();\n        }\n        var_4h = 0.0;\n        break;\n    case 2:\n        var_4h = in_EAX[4];\n        break;\n    case 3:\n        var_4h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_4h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x42c12f;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.0042bad4();\n        var_4h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_4h = in_EAX[4];\n        break;\n    case 0x10:\n        var_4h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_4h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_4h = in_EAX[4];\n        break;\n    case 0x13:\n        var_4h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_4h = *(in_EAX + 4);\n        break;\n    case 0x15:\n        var_4h = CONCAT44(*(in_EAX + 6) + -0x80000000, *(in_EAX + 4)) + *0x42c158;\n    }\n    return var_4h;\n}\n",
        "token_count": 533
    },
    "0042c3d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042c3d0(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack32;\n    uint64_t uStack16;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 < 0xe) {\n    // switch table (13 cases) at 0x42c3fc\n        switch(uVar1) {\n        case 0:\n            dStack32 = 0.0;\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            dStack32 = 0.0;\n            break;\n        case 2:\n            dStack32 = in_EAX[4];\n            break;\n        case 3:\n            dStack32 = *(in_EAX + 4);\n            break;\n        case 4:\n        case 5:\n        case 6:\n            fVar3 = fcn.0042c2c4();\n            dStack32 = fVar3;\n            break;\n        case 7:\n            dStack32 = *(in_EAX + 4);\n            break;\n        case 8:\n            fVar3 = fcn.0042c160();\n            dStack32 = fVar3;\n            break;\n        default:\n            fVar3 = fcn.0042c2c4();\n            dStack32 = fVar3;\n            break;\n        case 10:\n            goto code_r0x0042c658;\n        case 0xb:\n            dStack32 = in_EAX[4];\n            break;\n        case 0xc:\n            fVar3 = fcn.0042c3d0();\n            dStack32 = fVar3;\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042c264(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x10) {\n                dStack32 = *(in_EAX + 4);\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x11) {\n                dStack32 = *(in_EAX + 4);\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x12) {\n                dStack32 = in_EAX[4];\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x13) {\n                uStack16 = *(in_EAX + 4);\n                dStack32 = uStack16;\n                goto code_r0x0042c85f;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                uStack16 = CONCAT44(*(in_EAX + 6) + -0x80000000, *(in_EAX + 4));\n                fcn.0042c264(SUB84(uStack16 + *0x42c868, 0), uStack16 + *0x42c868 >> 0x20);\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x100) {\n                fVar3 = fcn.0042c160();\n                dStack32 = fVar3;\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x101) {\n                fVar3 = fcn.0042c318();\n                dStack32 = fVar3;\n                goto code_r0x0042c85f;\n            }\n            if (uVar1 == 0x102) {\n                fVar3 = fcn.0042c160();\n                dStack32 = fVar3;\n                goto code_r0x0042c85f;\n            }\n        }\ncode_r0x0042c658:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042c37c();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.0042c2c4();\n                dStack32 = fVar3;\n            }\n        }\n        else {\n    // switch table (22 cases) at 0x42c679\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.0042c2c4();\n                dStack32 = fVar3;\n                break;\n            case 2:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 4:\n            case 5:\n            case 6:\n                fVar3 = fcn.0042c2c4();\n                dStack32 = fVar3;\n                break;\n            case 7:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.0042c160();\n                dStack32 = fVar3;\n                break;\n            case 0xb:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.0042c3d0();\n                dStack32 = fVar3;\n                break;\n            case 0x10:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack32 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uStack16 = **(in_EAX + 4);\n                dStack32 = uStack16;\n                break;\n            case 0x14:\n                fcn.0042c264(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                break;\n            case 0x15:\n                uStack16 = CONCAT44((*(in_EAX + 4))[1] + -0x80000000, **(in_EAX + 4));\n                fcn.0042c264(SUB84(uStack16 + *0x42c868, 0), uStack16 + *0x42c868 >> 0x20);\n            }\n        }\n    }\ncode_r0x0042c85f:\n    return dStack32;\n}\n",
        "token_count": 1493
    },
    "0042caa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0042caa8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    int64_t iStack32;\n    uint64_t uStack16;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42cad4\n        switch(uVar1) {\n        case 0:\n            iStack32 = 0;\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            iStack32 = 0;\n            break;\n        case 2:\n            iStack32 = ROUND(in_EAX[4] * *0x42cfc0);\n            break;\n        case 3:\n            iStack32 = ROUND(*(in_EAX + 4) * *0x42cfc0);\n            break;\n        case 4:\n        case 5:\n            fVar3 = fcn.0042c99c();\n            iStack32 = ROUND(fVar3);\n            break;\n        case 6:\n            iStack32 = *(in_EAX + 4);\n            break;\n        case 7:\n            fVar3 = fcn.0042c99c();\n            iStack32 = ROUND(fVar3);\n            break;\n        case 8:\n            fVar3 = fcn.0042c870();\n            iStack32 = ROUND(fVar3);\n            break;\n        case 9:\ncode_r0x0042cd2c:\n            fVar3 = fcn.0042c99c();\n            iStack32 = ROUND(fVar3);\n            break;\n        case 10:\n            goto code_r0x0042cd74;\n        case 0xb:\n            iStack32 = ROUND(in_EAX[4] * *0x42cfc0);\n            break;\n        default:\n            fVar3 = fcn.0042caa8();\n            iStack32 = ROUND(fVar3);\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042c93c(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n                goto code_r0x0042cfb7;\n            }\n    // switch table (7 cases) at 0x42cb22\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042cd2c;\n            default:\n                goto code_r0x0042cd74;\n            case 0x10:\n                iStack32 = ROUND(*(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 0x11:\n                iStack32 = ROUND(*(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 0x12:\n                iStack32 = ROUND(in_EAX[4] * *0x42cfc0);\n                break;\n            case 0x13:\n                uStack16 = *(in_EAX + 4);\n                iStack32 = ROUND(uStack16 * *0x42cfc0);\n            }\n            goto code_r0x0042cfb7;\n        }\n        if (uVar1 == 0x15) {\n            uStack16 = CONCAT44(*(in_EAX + 6) + -0x80000000, *(in_EAX + 4));\n            fcn.0042c93c(SUB84(uStack16 + *0x42cfc4, 0), uStack16 + *0x42cfc4 >> 0x20);\n            goto code_r0x0042cfb7;\n        }\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.0042c870();\n            iStack32 = ROUND(fVar3);\n            goto code_r0x0042cfb7;\n        }\n        if (uVar1 == 0x101) {\n            fVar3 = fcn.0042c9f0();\n            iStack32 = ROUND(fVar3);\n            goto code_r0x0042cfb7;\n        }\n        if (uVar1 == 0x102) {\n            fVar3 = fcn.0042c870();\n            iStack32 = ROUND(fVar3);\n            goto code_r0x0042cfb7;\n        }\ncode_r0x0042cd74:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042ca54();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.0042c99c();\n                iStack32 = ROUND(fVar3);\n            }\n        }\n        else {\n    // switch table (22 cases) at 0x42cd95\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.0042c99c();\n                iStack32 = ROUND(fVar3);\n                break;\n            case 2:\n                iStack32 = ROUND(**(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 3:\n                iStack32 = ROUND(**(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 4:\n            case 5:\n                fVar3 = fcn.0042c99c();\n                iStack32 = ROUND(fVar3);\n                break;\n            case 6:\n                iStack32 = **(in_EAX + 4);\n                break;\n            case 7:\n                fVar3 = fcn.0042c99c();\n                iStack32 = ROUND(fVar3);\n                break;\n            case 8:\n                fVar3 = fcn.0042c870();\n                iStack32 = ROUND(fVar3);\n                break;\n            case 0xb:\n                iStack32 = ROUND(**(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 0xc:\n                fVar3 = fcn.0042caa8();\n                iStack32 = ROUND(fVar3);\n                break;\n            case 0x10:\n                iStack32 = ROUND(**(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 0x11:\n                iStack32 = ROUND(**(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 0x12:\n                iStack32 = ROUND(**(in_EAX + 4) * *0x42cfc0);\n                break;\n            case 0x13:\n                uStack16 = **(in_EAX + 4);\n                iStack32 = ROUND(uStack16 * *0x42cfc0);\n                break;\n            case 0x14:\n                fcn.0042c93c(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                break;\n            case 0x15:\n                uStack16 = CONCAT44((*(in_EAX + 4))[1] + -0x80000000, **(in_EAX + 4));\n                fcn.0042c93c(SUB84(uStack16 + *0x42cfc4, 0), uStack16 + *0x42cfc4 >> 0x20);\n            }\n        }\n    }\ncode_r0x0042cfb7:\n    return iStack32;\n}\n",
        "token_count": 1694
    },
    "0042d3ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042d3ac(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint pvarg;\n    uint var_14h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStack44 = 0x42d3c7;\n    var_ch = param_2;\n    var_1h._0_1_ = fcn.004309a8();\n    if (var_1h != '\\0') {\n        puStack44 = &fcn.0042d3ac::pvarg;\n        puStack48 = 0x42d3d9;\n        sub.oleaut32.dll_VariantInit();\n        uStack52 = 0x42d41a;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack48 = &fcn.0042d3ac::var_1h + 1;\n        (**(*var_8h + 0x1c))();\n        fcn.00407e9c();\n        *in_FS_OFFSET = 0x100;\n        uStack52 = 0x42d421;\n        uStack56 = 0x42d419;\n        uVar1 = fcn.004293c0();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 363
    },
    "0042dd74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042dd74(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint pvarg;\n    uint var_14h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStack44 = 0x42dd8f;\n    var_ch = param_2;\n    var_1h._0_1_ = fcn.004309a8();\n    if (var_1h != '\\0') {\n        puStack44 = &fcn.0042dd74::pvarg;\n        puStack48 = 0x42dda1;\n        sub.oleaut32.dll_VariantInit();\n        uStack52 = 0x42dddf;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack48 = &fcn.0042dd74::var_1h + 1;\n        (**(*var_8h + 0x1c))();\n        fcn.00407e74();\n        *in_FS_OFFSET = 8;\n        uStack52 = 0x42dde6;\n        uStack56 = 0x42ddde;\n        uVar1 = fcn.004293c0();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "0042de54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042de54(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    float10 fVar2;\n    ushort in_stack_fffffff2;\n    uint var_4h;\n    \n    uVar1 = *param_2 & 0xbfff;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42de84\n        switch(uVar1) {\n        case 0:\n        case 1:\n        case 9:\n        case 10:\n            goto code_r0x0042e07d;\n        case 2:\n            fcn.0042da9c();\n            break;\n        case 3:\n            fcn.0042da9c();\n            break;\n        case 4:\n            fVar2 = **(param_2 + 4);\n            fcn.0042dbe4(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_fffffff2, fVar2 >> 0x40));\n            break;\n        case 5:\n            fVar2 = **(param_2 + 4);\n            fcn.0042dbe4(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_fffffff2, fVar2 >> 0x40));\n            break;\n        case 6:\n            fcn.0042dc74(**(param_2 + 4), (*(param_2 + 4))[1]);\n            break;\n        case 7:\n            fcn.0042dcc8(**(param_2 + 4), (*(param_2 + 4))[1]);\n            break;\n        case 8:\n            fcn.0040834c();\n            break;\n        case 0xb:\n            fcn.004085dc();\n            break;\n        default:\n            fcn.0042e08c();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042db3c(**(param_2 + 4), (*(param_2 + 4))[1]);\n                return;\n            }\n            if (uVar1 == 0x10) {\n                fcn.0042da9c();\n                return;\n            }\n            if (uVar1 == 0x11) {\n                fcn.0042daec();\n                return;\n            }\n            if (uVar1 == 0x12) {\n                fcn.0042daec();\n                return;\n            }\n            if (uVar1 == 0x13) {\n                fcn.0042daec();\n                return;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                fcn.0042db90(**(param_2 + 4), (*(param_2 + 4))[1]);\n                return;\n            }\n            if (uVar1 == 0x100) {\n                fcn.0040831c();\n                return;\n            }\n            if (uVar1 == 0x102) {\n                fcn.0040834c();\n                return;\n            }\n        }\ncode_r0x0042e07d:\n        fcn.0042dd1c();\n    }\n    return;\n}\n",
        "token_count": 730
    },
    "0042e08c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e08c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    float10 fVar3;\n    ushort in_stack_fffffff2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42e0b8\n        switch(uVar1) {\n        case 0:\n            fcn.00407a68();\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            fcn.004085dc();\n            break;\n        case 2:\n            if ((param_2[4] < -0x80) || (0xff < param_2[4])) {\n                fcn.0042da9c();\n            }\n            else {\n                fcn.004085dc();\n            }\n            break;\n        case 3:\n            if ((*(param_2 + 4) < -0x80) || (0xff < *(param_2 + 4))) {\n                fcn.0042da9c();\n            }\n            else {\n                fcn.004085dc();\n            }\n            break;\n        case 4:\n            fVar3 = *(param_2 + 4);\n            fcn.0042dbe4(SUB104(fVar3, 0), fVar3 >> 0x20, CONCAT22(in_stack_fffffff2, fVar3 >> 0x40));\n            break;\n        case 5:\n            fVar3 = *(param_2 + 4);\n            fcn.0042dbe4(SUB104(fVar3, 0), fVar3 >> 0x20, CONCAT22(in_stack_fffffff2, fVar3 >> 0x40));\n            break;\n        case 6:\n            fcn.0042dc74(*(param_2 + 4), *(param_2 + 6));\n            break;\n        case 7:\n            fcn.0042dcc8(*(param_2 + 4), *(param_2 + 6));\n            break;\n        case 8:\n            fcn.00407e74();\n            break;\n        case 9:\ncode_r0x0042e355:\n            fcn.0042dd1c();\n            break;\n        case 10:\n            goto code_r0x0042e38b;\n        case 0xb:\n            fcn.004085dc();\n            break;\n        default:\n            fcn.0042e08c();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042db3c(*(param_2 + 4), *(param_2 + 6));\n                return;\n            }\n    // switch table (7 cases) at 0x42e106\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042e355;\n            case 0x10:\n                fcn.004085dc();\n                return;\n            case 0x11:\n                fcn.004085dc();\n                return;\n            case 0x12:\n                if (param_2[4] < 0x100) {\n                    fcn.004085dc();\n                    return;\n                }\n                fcn.0042daec();\n                return;\n            case 0x13:\n                if (*(param_2 + 4) < 0x100) {\n                    fcn.004085dc();\n                    return;\n                }\n                fcn.0042daec();\n                return;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                fcn.0042db90(*(param_2 + 4), *(param_2 + 6));\n                return;\n            }\n            if (uVar1 == 0x100) {\n                fcn.00408388();\n                return;\n            }\n            if (uVar1 == 0x101) {\n                fcn.0042ddf0();\n                return;\n            }\n            if (uVar1 == 0x102) {\n                fcn.004085dc();\n                return;\n            }\n        }\ncode_r0x0042e38b:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042dd74();\n            if (cVar2 == '\\0') {\n                fcn.0042dd1c();\n            }\n        }\n        else {\n            fcn.0042de54();\n        }\n    }\n    return;\n}\n",
        "token_count": 1022
    },
    "0042e690": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042e690(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint pvarg;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStack44 = 0x42e6ab;\n    var_ch = param_2;\n    var_1h._0_1_ = fcn.004309a8();\n    if (var_1h != '\\0') {\n        puStack44 = &fcn.0042e690::pvarg;\n        puStack48 = 0x42e6bd;\n        sub.oleaut32.dll_VariantInit();\n        uStack52 = 0x42e6fe;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack48 = &fcn.0042e690::var_1h + 1;\n        (**(*var_8h + 0x1c))();\n        fcn.0042e9b0();\n        *in_FS_OFFSET = 0x102;\n        uStack52 = 0x42e705;\n        uStack56 = 0x42e6fd;\n        uVar1 = fcn.004293c0();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 353
    },
    "0042e774": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e774(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    float10 fVar2;\n    ushort in_stack_fffffff2;\n    uint var_4h;\n    \n    uVar1 = *param_2 & 0xbfff;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42e7a4\n        switch(uVar1) {\n        case 0:\n        case 1:\n        case 9:\n        case 10:\n            goto code_r0x0042e9a0;\n        case 2:\n            fcn.0042e3b8();\n            break;\n        case 3:\n            fcn.0042e3b8();\n            break;\n        case 4:\n            fVar2 = **(param_2 + 4);\n            fcn.0042e500(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_fffffff2, fVar2 >> 0x40));\n            break;\n        case 5:\n            fVar2 = **(param_2 + 4);\n            fcn.0042e500(SUB104(fVar2, 0), fVar2 >> 0x20, CONCAT22(in_stack_fffffff2, fVar2 >> 0x40));\n            break;\n        case 6:\n            fcn.0042e590(**(param_2 + 4), (*(param_2 + 4))[1]);\n            break;\n        case 7:\n            fcn.0042e5e4(**(param_2 + 4), (*(param_2 + 4))[1]);\n            break;\n        case 8:\n            fcn.00408550();\n            break;\n        case 0xb:\n            fcn.00407e00();\n            break;\n        default:\n            fcn.0042e9b0();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042e458(**(param_2 + 4), (*(param_2 + 4))[1]);\n                return;\n            }\n            if (uVar1 == 0x10) {\n                fcn.0042e3b8();\n                return;\n            }\n            if (uVar1 == 0x11) {\n                fcn.0042e408();\n                return;\n            }\n            if (uVar1 == 0x12) {\n                fcn.0042e408();\n                return;\n            }\n            if (uVar1 == 0x13) {\n                fcn.0042e408();\n                return;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                fcn.0042e4ac(**(param_2 + 4), (*(param_2 + 4))[1]);\n                return;\n            }\n            if (uVar1 == 0x100) {\n                fcn.00407e00();\n                return;\n            }\n            if (uVar1 == 0x102) {\n                fcn.00408550();\n                return;\n            }\n        }\ncode_r0x0042e9a0:\n        fcn.0042e638();\n    }\n    return;\n}\n",
        "token_count": 738
    },
    "0042e9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e9b0(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    float10 fVar3;\n    ushort in_stack_fffffff2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xd) {\n    // switch table (12 cases) at 0x42e9dc\n        switch(uVar1) {\n        case 0:\n            fcn.00407a20();\n            break;\n        case 1:\n            if (*0x4b939a != '\\0') {\n                fcn.00428c94();\n            }\n            fcn.00407e00();\n            break;\n        case 2:\n            if ((param_2[4] < -0x80) || (0xff < param_2[4])) {\n                fcn.0042e3b8();\n            }\n            else {\n                fcn.00407e00();\n            }\n            break;\n        case 3:\n            if ((*(param_2 + 4) < -0x80) || (0xff < *(param_2 + 4))) {\n                fcn.0042e3b8();\n            }\n            else {\n                fcn.00407e00();\n            }\n            break;\n        case 4:\n            fVar3 = *(param_2 + 4);\n            fcn.0042e500(SUB104(fVar3, 0), fVar3 >> 0x20, CONCAT22(in_stack_fffffff2, fVar3 >> 0x40));\n            break;\n        case 5:\n            fVar3 = *(param_2 + 4);\n            fcn.0042e500(SUB104(fVar3, 0), fVar3 >> 0x20, CONCAT22(in_stack_fffffff2, fVar3 >> 0x40));\n            break;\n        case 6:\n            fcn.0042e590(*(param_2 + 4), *(param_2 + 6));\n            break;\n        case 7:\n            fcn.0042e5e4(*(param_2 + 4), *(param_2 + 6));\n            break;\n        case 8:\n            fcn.004085c8();\n            break;\n        case 9:\ncode_r0x0042ec7c:\n            fcn.0042e638();\n            break;\n        case 10:\n            goto code_r0x0042ecb2;\n        case 0xb:\n            fcn.00407e00();\n            break;\n        default:\n            fcn.0042e9b0();\n        }\n    }\n    else {\n        if (uVar1 < 0x15) {\n            if (uVar1 == 0x14) {\n                fcn.0042e458(*(param_2 + 4), *(param_2 + 6));\n                return;\n            }\n    // switch table (7 cases) at 0x42ea2a\n            switch(uVar1) {\n            case 0xd:\n                goto code_r0x0042ec7c;\n            case 0x10:\n                fcn.00407e00();\n                return;\n            case 0x11:\n                fcn.00407e00();\n                return;\n            case 0x12:\n                if (param_2[4] < 0x100) {\n                    fcn.00407e00();\n                    return;\n                }\n                fcn.0042e408();\n                return;\n            case 0x13:\n                if (*(param_2 + 4) < 0x100) {\n                    fcn.00407e00();\n                    return;\n                }\n                fcn.0042e408();\n                return;\n            }\n        }\n        else {\n            if (uVar1 == 0x15) {\n                fcn.0042e4ac(*(param_2 + 4), *(param_2 + 6));\n                return;\n            }\n            if (uVar1 == 0x100) {\n                fcn.004085a8();\n                return;\n            }\n            if (uVar1 == 0x101) {\n                fcn.0042e710();\n                return;\n            }\n            if (uVar1 == 0x102) {\n                fcn.00407e00();\n                return;\n            }\n        }\ncode_r0x0042ecb2:\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0042e690();\n            if (cVar2 == '\\0') {\n                fcn.0042e638();\n            }\n        }\n        else {\n            fcn.0042e774();\n        }\n    }\n    return;\n}\n",
        "token_count": 1038
    },
    "0042ee40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ee40(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.0040b47c(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x4b939a != '\\0') {\n            fcn.00428c94();\n        }\n        fcn.0040b47c(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.0040b494();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.0040b494();\n    }\n    else {\n        cVar2 = fcn.004309a8();\n        if (cVar2 != '\\0') {\n            fcn.0040b47c(param_1);\n            cVar2 = fcn.00405dbc();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00428c94();\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0042eef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eef0(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.00429328();\n    }\n    if (*0x4b93a0 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x4b93c8);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 133
    },
    "0042f0ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f0ec(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.00429328();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "0042f390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f390(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42f56e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*param_2 == 0x400c) {\n        puStack28 = &stack0xfffffffc;\n        fcn.0042f390();\n        goto code_r0x0042f558;\n    }\n    puVar2 = &stack0xfffffffc;\n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.00429328();\n        puVar2 = puStack28;\n    }\n    puStack28 = puVar2;\n    uVar1 = *param_2;\n    uVar4 = uVar1;\n    if (0x100 < uVar4) {\n        if (uVar4 == 0x101) {\n            fcn.0042f31c();\n            goto code_r0x0042f558;\n        }\n        if (uVar4 == 0x102) {\n            fcn.004085dc();\n            fcn.0042f21c();\n            goto code_r0x0042f558;\n        }\ncode_r0x0042f506:\n        if ((uVar1 & 0x2000) == 0) {\n            if ((uVar1 & 0xfff) < 0x10f) {\n                fcn.0042977c();\n            }\n            else {\n                cVar3 = fcn.004309a8();\n                if (cVar3 == '\\0') {\n                    fcn.00428c40();\n                }\n                else {\n                    (**(*var_4h + 0x20))();\n                }\n            }\n        }\n        else {\n            fcn.00429464();\n        }\n        goto code_r0x0042f558;\n    }\n    if (uVar4 == 0x100) {\n        fcn.0042f2cc();\n        goto code_r0x0042f558;\n    }\n    if (uVar4 - 0x10 < 3) {\n        fcn.00429aec();\n        goto code_r0x0042f558;\n    }\n    if (uVar4 == 0x13) {\n        if ((*(param_2 + 0xb) & 0x80) == 0) {\n            fcn.00429aec();\n        }\n        else {\n            fcn.00429aec();\n        }\n        goto code_r0x0042f558;\n    }\n    if (uVar4 - 0x10 != 4) goto code_r0x0042f506;\n    if (*(param_2 + 6) == 0) {\n        if (*(param_2 + 4) < 0x80000000) {\ncode_r0x0042f476:\n            if (*(param_2 + 6) == -1) {\n                if (0x7fffffff < *(param_2 + 4)) {\ncode_r0x0042f48c:\n                    fcn.00429aec();\n                    goto code_r0x0042f558;\n                }\n            }\n            else if (-2 < *(param_2 + 6)) goto code_r0x0042f48c;\n        }\n    }\n    else if (*(param_2 + 6) < 1) goto code_r0x0042f476;\n    if (*0x4b93a2 == '\\0') {\n        fcn.00429aec();\n    }\n    else {\n        fcn.00429aec();\n    }\ncode_r0x0042f558:\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42f575;\n    uStack32 = 0x42f56d;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 944
    },
    "0042f684": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042f684(uint param_1, char param_2)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        if (param_2 != '\\x01') {\n            return 0;\n        }\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0042fb00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0042fb00(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint pvarg;\n    uint16_t *var_1ch;\n    uint16_t *var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ah;\n    uint8_t var_5h;\n    int32_t var_4h;\n    \n    var_5h = 1;\n    uVar1 = *in_EAX;\n    var_1ch = param_2;\n    var_18h = in_EAX;\n    if ((uVar1 & 0xfff) < 0x10f) {\n        if (uVar1 == 0) {\n            puStack56 = 0x42fb38;\n            var_5h = fcn.0042f684();\n        }\n        else if (uVar1 == 1) {\n            puStack56 = 0x42fb52;\n            var_5h = fcn.0042f698();\n        }\n        else {\n            puStack56 = 0x42fb68;\n            cVar3 = fcn.004309a8();\n            if (cVar3 == '\\0') {\n                puStack56 = 0x42fb71;\n                fcn.00428d38();\n            }\n            else {\n                puStack56 = &fcn.0042fb00::var_ah + 2;\n                puStack60 = 0x42fb8a;\n                cVar3 = (**(*var_14h + 4))();\n                if (cVar3 == '\\0') {\n                    puStack60 = &fcn.0042fb00::pvarg;\n                    puStack64 = 0x42fc50;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x42fcab;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x42fc6f;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00429aec();\n                    if ((pvarg & 0xfff) != *var_18h) {\n                        iStack76 = 0x42fc84;\n                        fcn.00428c40();\n                    }\n                    iStack76 = 0x42fc92;\n                    var_5h = fcn.0042f918();\n                    *in_FS_OFFSET = iStack72;\n                    puStack64 = 0x42ff2d;\n                    puStack68 = 0x42fcaa;\n                    uVar4 = fcn.004293c0();\n                    return uVar4;\n                }\n                if (*var_18h != var_ah._2_2_) {\n                    puStack60 = &fcn.0042fb00::pvarg;\n                    puStack64 = 0x42fba7;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x42fc14;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x42fbc4;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00429aec();\n                    if ((pvarg & 0xfff) != var_ah._2_2_) {\n                        iStack76 = 0x42fbd7;\n                        fcn.00428c40();\n                    }\n                    iStack76 = var_4h;\n                    uVar4 = (**(*var_14h + 0x34))();\n                    var_5h = *(var_4h * 2 + 0x4b93b6 + (uVar4 & 0x7f));\n                    *in_FS_OFFSET = iStack76;\n                    puStack68 = 0x42ff2d;\n                    iStack72 = 0x42fc13;\n                    uVar4 = fcn.004293c0();\n                    return uVar4;\n                }\n                puStack60 = var_4h;\n                puStack64 = 0x42fc2d;\n                uVar4 = (**(*var_14h + 0x34))();\n                var_5h = *(var_4h * 2 + 0x4b93b6 + (uVar4 & 0x7f));\n            }\n        }\n    }\n    else if (*param_2 == 0) {\n        puStack56 = 0x42fcc6;\n        var_5h = fcn.0042f684();\n    }\n    else if (*param_2 == 1) {\n        puStack56 = 0x42fce0;\n        var_5h = fcn.0042f698();\n    }\n    else {\n        puStack56 = 0x42fcf2;\n        cVar3 = fcn.004309a8();\n        if (cVar3 == '\\0') {\n            puStack56 = 0x42fcfb;\n            fcn.00428d38();\n        }\n        else {\n            puStack56 = &fcn.0042fb00::var_ah;\n            puStack60 = 0x42fd14;\n            cVar3 = (**(*var_10h + 8))();\n            if (cVar3 == '\\0') {\n                if ((*var_1ch & 0xfff) < 0x10f) {\n                    puStack60 = &fcn.0042fb00::pvarg;\n                    puStack64 = 0x42fde8;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x42fe3f;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x42fe07;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00429aec();\n                    if (*var_1ch != pvarg) {\n                        iStack76 = 0x42fe18;\n                        fcn.00428c40();\n                    }\n                    iStack76 = 0x42fe26;\n                    var_5h = fcn.0042f918();\n                    *in_FS_OFFSET = iStack72;\n                    puStack64 = 0x42ff2d;\n                    puStack68 = 0x42fe3e;\n                    uVar4 = fcn.004293c0();\n                    return uVar4;\n                }\n                puStack60 = 0x42fe50;\n                cVar3 = fcn.004309a8();\n                if (cVar3 == '\\0') {\n                    puStack60 = 0x42fe59;\n                    fcn.00428d38();\n                }\n                else {\n                    puStack60 = &fcn.0042fb00::var_ah + 2;\n                    puStack64 = 0x42fe72;\n                    cVar3 = (**(*var_14h + 4))();\n                    if (cVar3 == '\\0') {\n                        puStack64 = 0x42ff2d;\n                        fcn.00428d38();\n                    }\n                    else {\n                        if (*var_18h != var_ah._2_2_) {\n                            puStack64 = &fcn.0042fb00::pvarg;\n                            puStack68 = 0x42fe8f;\n                            sub.oleaut32.dll_VariantInit();\n                            iStack72 = 0x42fef8;\n                            iStack76 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffffb4;\n                            puStack68 = &stack0xfffffffc;\n                            fcn.00429aec();\n                            if (pvarg != var_ah._2_2_) {\n                                fcn.00428c40();\n                            }\n                            iVar2 = var_4h;\n                            uVar4 = (**(*var_14h + 0x34))();\n                            var_5h = *(var_4h * 2 + 0x4b93b6 + (uVar4 & 0x7f));\n                            *in_FS_OFFSET = iVar2;\n                            iStack72 = 0x42ff2d;\n                            iStack76 = 0x42fef7;\n                            uVar4 = fcn.004293c0();\n                            return uVar4;\n                        }\n                        puStack64 = var_4h;\n                        puStack68 = 0x42ff11;\n                        uVar4 = (**(*var_14h + 0x34))();\n                        var_5h = *(var_4h * 2 + 0x4b93b6 + (uVar4 & 0x7f));\n                    }\n                }\n            }\n            else {\n                if (*var_1ch != var_ah) {\n                    puStack60 = &fcn.0042fb00::pvarg;\n                    puStack64 = 0x42fd31;\n                    sub.oleaut32.dll_VariantInit();\n                    puStack68 = 0x42fd9a;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x42fd4e;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.00429aec();\n                    if (pvarg != var_ah) {\n                        iStack76 = 0x42fd5d;\n                        fcn.00428c40();\n                    }\n                    iStack76 = var_4h;\n                    uVar4 = (**(*var_10h + 0x34))();\n                    var_5h = *(var_4h * 2 + 0x4b93b6 + (uVar4 & 0x7f));\n                    *in_FS_OFFSET = iStack76;\n                    puStack68 = 0x42ff2d;\n                    iStack72 = 0x42fd99;\n                    uVar4 = fcn.004293c0();\n                    return uVar4;\n                }\n                puStack60 = var_4h;\n                puStack64 = 0x42fdb3;\n                uVar4 = (**(*var_10h + 0x34))();\n                var_5h = *(var_4h * 2 + 0x4b93b6 + (uVar4 & 0x7f));\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 2354
    },
    "00430428": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00430428(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t *piStack36;\n    uint16_t uStack28;\n    \n    puVar2 = fcn.0043040c();\n    uStack28 = *puVar2;\n    if (uStack28 < 0x10f) {\n        if ((uStack28 != 0) && (((uStack28 != 9 && (uStack28 != 0xd)) || (puVar2[2] != 0)))) {\n            return 0;\n        }\n        uVar3 = 1;\n    }\n    else {\n        cVar1 = fcn.004309a8();\n        if (cVar1 == '\\0') {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = (**(*piStack36 + 0x14))();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 211
    },
    "004304a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004304a0(void)\n\n{\n    uint in_EAX;\n    int16_t *piVar1;\n    \n    piVar1 = fcn.0043040c();\n    return CONCAT44(in_EAX, piVar1 & 0xffffff00 | *piVar1 == 0);\n}\n",
        "token_count": 67
    },
    "004304b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.004304b8(void)\n\n{\n    uint in_EAX;\n    int16_t *piVar1;\n    \n    piVar1 = fcn.0043040c();\n    return CONCAT44(in_EAX, piVar1 & 0xffffff00 | *piVar1 == 1);\n}\n",
        "token_count": 67
    },
    "004304d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004304d0(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int16_t iStack40;\n    uint16_t uStack24;\n    \n    puVar2 = fcn.0043040c();\n    uVar1 = *puVar2;\n    puVar2 = fcn.0043040c();\n    iStack40 = uVar1;\n    uStack24 = *puVar2;\n    if (iStack40 == 0) {\n        uVar3 = uStack24 == 0;\n    }\n    else if (iStack40 == 1) {\n        uVar3 = uStack24 == 1;\n    }\n    else {\n        uVar4 = uStack24 == 2;\n        if (uStack24 < 2) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00430b7c();\n            uVar3 = uVar3 & 0xffffff00 | uVar4;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "0043054c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0043054c(void)\n\n{\n    uint uVar1;\n    uchar uVar2;\n    uint *puVar3;\n    bool bVar4;\n    char cVar5;\n    char cVar6;\n    int16_t iStack40;\n    uint16_t uStack24;\n    \n    puVar3 = fcn.0043040c();\n    uVar1 = *puVar3;\n    puVar3 = fcn.0043040c();\n    iStack40 = uVar1;\n    uStack24 = *puVar3;\n    if (iStack40 == 0) {\n        uVar2 = *((uStack24 == 0) + 0x4b94c8);\n    }\n    else if (iStack40 == 1) {\n        uVar2 = *((uStack24 == 1) + 0x4b94c8);\n    }\n    else {\n        cVar6 = SBORROW2(uStack24, 2);\n        cVar5 = uStack24 - 2 < 0;\n        bVar4 = uStack24 == 2;\n        if (uStack24 < 2) {\n            uVar2 = 3;\n        }\n        else {\n            fcn.00430b7c();\n            if (bVar4) {\n                uVar2 = 0;\n            }\n            else {\n                fcn.00430b8c();\n                if (cVar6 == cVar5) {\n                    uVar2 = 2;\n                }\n                else {\n                    uVar2 = 1;\n                }\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 353
    },
    "00430b7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430b7c(void)\n\n{\n    fcn.0042ff38();\n    return;\n}\n",
        "token_count": 26
    },
    "00430b8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430b8c(void)\n\n{\n    fcn.0042ff38();\n    return;\n}\n",
        "token_count": 26
    },
    "00430b9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00430b9c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 5;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x430d05;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00430b9c::var_20h;\n    if (**0x4ba6d0 != NULL) {\n        uVar1 = fcn.00407a68();\n        (***0x4ba6d0)(0, 0x400, 0, uVar1);\n        fcn.00429130();\n        fcn.004085c8();\n        fcn.004085c8();\n        fcn.00419874();\n        fcn.00407e00();\n        fcn.004085c8();\n        fcn.00419830();\n        fcn.00407e00();\n        uVar1 = fcn.00407a68();\n        (***0x4ba6d0)(0xffffffff, 0x400, 0, uVar1);\n        fcn.00429130();\n        fcn.004085c8();\n        fcn.004085c8();\n        fcn.00419874();\n        fcn.00407e00();\n        fcn.004085c8();\n        fcn.00419830();\n        fcn.00407e00();\n        iVar2 = -0x80;\n        do {\n            fcn.00419e08();\n            fcn.00407e00();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x430d0c;\n    var_1ch = 0x430cfc;\n    fcn.00407a80();\n    var_1ch = 0x430d04;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 632
    },
    "004310bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004310bc(uint32_t param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[1] <= param_1) {\n        fcn.00431010();\n    }\n    if (in_EAX[4] == 0) {\n        *(*in_EAX + param_1 * 4) = *param_2;\n    }\n    else {\n        *(*in_EAX + param_1 * 4) = *param_2;\n        (*in_EAX[4])();\n        (*in_EAX[4])();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004312bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004312bc(uint param_1, int32_t *param_2)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if (in_EAX[5] == NULL) {\n        piVar3 = *in_EAX;\n        piVar2 = in_EAX[1];\n        if (-1 < piVar2 + -1) {\n            iVar1 = 0;\n            do {\n                if (*piVar3 == *param_2) {\n                    return iVar1;\n                }\n                piVar3 = piVar3 + 1;\n                iVar1 = iVar1 + 1;\n                piVar2 = piVar2 + -1;\n            } while (piVar2 != NULL);\n        }\n        iVar1 = -1;\n    }\n    else {\n        iVar1 = fcn.0043125c(&stack0xfffffffc);\n    }\n    return iVar1;\n}\n",
        "token_count": 228
    },
    "00431368": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431368(uint param_1, int32_t *param_2)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if (in_EAX[5] == NULL) {\n        piVar3 = *in_EAX;\n        piVar2 = in_EAX[1];\n        if (-1 < piVar2 + -1) {\n            iVar1 = 0;\n            do {\n                if (*piVar3 == *param_2) {\n                    return iVar1;\n                }\n                piVar3 = piVar3 + 1;\n                iVar1 = iVar1 + 1;\n                piVar2 = piVar2 + -1;\n            } while (piVar2 != NULL);\n        }\n        iVar1 = -1;\n    }\n    else {\n        iVar1 = fcn.00431308(&stack0xfffffffc);\n    }\n    return iVar1;\n}\n",
        "token_count": 227
    },
    "00431724": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431724(int32_t param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack1068;\n    uint uStack1064;\n    uchar *puStack1060;\n    uint var_410h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    puStack1060 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack1064 = 0x431854;\n    uStack1068 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbd4;\n    var_8h = in_EAX;\n    if ((((param_2 < 0) || (param_1 < 0)) || (*(in_EAX + 4) < param_1 + param_2)) ||\n       (puVar1 = &stack0xfffffffc,  param_1 + param_2 < 0)) {\n        fcn.00431010();\n        puVar1 = puStack1060;\n    }\n    puStack1060 = puVar1;\n    if (0 < param_1) {\n        var_10h = param_1 * 4;\n        var_ch = NULL;\n        if (*(var_8h + 0x10) != 0) {\n            if (param_1 < 0x101) {\n                var_ch = &fcn.00431724::var_410h;\n            }\n            else {\n                fcn.00409c00(param_1);\n                var_ch = var_4h;\n            }\n            fcn.004055b4();\n        }\n        if (*(var_8h + 4) != param_1 + param_2 && -1 < *(var_8h + 4) - (param_1 + param_2)) {\n            fcn.004055b4();\n        }\n        fcn.00405884();\n        *(var_8h + 4) = *(var_8h + 4) - param_1;\n        if ((*(var_8h + 0x10) != 0) && (-1 < param_1 + -1)) {\n            do {\n                (**(var_8h + 0x10))();\n                param_1 = param_1 + -1;\n            } while (param_1 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack1068;\n    puStack1060 = 0x43185b;\n    uStack1064 = 0x431853;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 594
    },
    "004318ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004318ac(int32_t param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack1068;\n    uint uStack1064;\n    uchar *puStack1060;\n    uint var_410h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    puStack1060 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack1064 = 0x4319e0;\n    uStack1068 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbd4;\n    var_8h = in_EAX;\n    if ((((param_2 < 0) || (param_1 < 0)) || (*(in_EAX + 4) < param_1 + param_2)) ||\n       (puVar1 = &stack0xfffffffc,  param_1 + param_2 < 0)) {\n        fcn.00431010();\n        puVar1 = puStack1060;\n    }\n    puStack1060 = puVar1;\n    if (0 < param_1) {\n        var_10h = param_1 * 8;\n        var_ch = NULL;\n        if (*(var_8h + 0x10) != 0) {\n            if (param_1 < 0x81) {\n                var_ch = &fcn.004318ac::var_410h;\n            }\n            else {\n                fcn.00409c00(param_1);\n                var_ch = var_4h;\n            }\n            fcn.004055b4();\n        }\n        if (*(var_8h + 4) != param_1 + param_2 && -1 < *(var_8h + 4) - (param_1 + param_2)) {\n            fcn.004055b4();\n        }\n        fcn.00405884();\n        *(var_8h + 4) = *(var_8h + 4) - param_1;\n        if ((*(var_8h + 0x10) != 0) && (-1 < param_1 + -1)) {\n            do {\n                (**(var_8h + 0x10))();\n                param_1 = param_1 + -1;\n            } while (param_1 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack1068;\n    puStack1060 = 0x4319e7;\n    uStack1064 = 0x4319df;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 598
    },
    "004319f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004319f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack1072;\n    uint uStack1068;\n    uchar *puStack1064;\n    uint var_414h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_1;\n    var_4h = in_EAX;\n    if ((((param_2 < 0) || (param_1 < 0)) || (*(in_EAX + 4) < param_2 + param_1)) || (param_2 + param_1 < 0)) {\n        puStack1064 = 0x431a29;\n        fcn.00431010();\n    }\n    if (0 < var_8h) {\n        iVar1 = *(*(var_4h + 8) + *(*(var_4h + 8) + 1) + 2);\n        var_ch = NULL;\n        var_10h = &fcn.004319f0::var_414h;\n        uStack1068 = 0x431bce;\n        uStack1072 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffbd0;\n        if (*(var_4h + 0x10) == 0) {\n            puStack1064 = &stack0xfffffffc;\n            fcn.00409590();\n        }\n        else {\n            puStack1064 = &stack0xfffffffc;\n            if (0x400 < var_8h * iVar1) {\n                puStack1064 = &stack0xfffffffc;\n                var_10h = fcn.004053f0();\n                var_ch = var_10h;\n            }\n            fcn.004055b4();\n        }\n        if ((*(var_4h + 4) - (param_2 + var_8h)) * iVar1 < 1) {\n            fcn.00405884();\n        }\n        else {\n            fcn.004055b4();\n            fcn.00405884();\n        }\n        *(var_4h + 4) = *(var_4h + 4) - var_8h;\n        if ((*(var_4h + 0x10) != 0) && (-1 < var_8h + -1)) {\n            var_14h = 0;\n            iVar1 = var_8h;\n            do {\n                (**(var_4h + 0x10))();\n                var_14h = var_14h + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        *in_FS_OFFSET = uStack1072;\n        puStack1064 = 0x431bd5;\n        if (*(var_4h + 0x10) != 0) {\n            if (var_ch == NULL) {\n                uStack1068 = 0x431bcd;\n                fcn.00409590();\n            }\n            else {\n                uStack1068 = 0x431ba5;\n                fcn.00409590();\n                uStack1068 = 0x431bad;\n                fcn.0040540c();\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 761
    },
    "00431bdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431bdc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffbd0;\n    int32_t iStack1068;\n    uint uStack1064;\n    uchar *puStack1060;\n    uint var_410h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if ((((param_2 < 0) || (param_1 < 0)) || (*(in_EAX + 4) < param_1 + param_2)) || (param_1 + param_2 < 0)) {\n        puStack1060 = 0x431c0e;\n        fcn.00431010();\n    }\n    if (param_1 < 1) {\n        return;\n    }\n    var_8h = NULL;\n    var_ch = &fcn.00431bdc::var_410h;\n    uStack1064 = 0x431d79;\n    iStack1068 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbd4;\n    var_10h = param_1;\n    if (*(var_4h + 0x10) == 0) {\n        in_stack_fffffbd0 = 0x431c9f;\n        puStack1060 = &stack0xfffffffc;\n        fcn.00409590();\n    }\n    else {\n        puStack1060 = &stack0xfffffffc;\n        if (0x100 < param_1) {\n            in_stack_fffffbd0 = &fcn.00431bdc::var_10h;\n            puStack1060 = &stack0xfffffffc;\n            fcn.00409958(in_stack_fffffbd0);\n            var_ch = var_8h;\n        }\n        fcn.004055b4();\n    }\n    if (*(var_4h + 4) == param_1 + param_2 || *(var_4h + 4) - (param_1 + param_2) < 0) {\n        fcn.00405884();\n    }\n    else {\n        fcn.004055b4();\n        fcn.00405884();\n    }\n    *(var_4h + 4) = *(var_4h + 4) - param_1;\n    if ((*(var_4h + 0x10) != 0) && (-1 < param_1 + -1)) {\n        do {\n            (**(var_4h + 0x10))();\n            param_1 = param_1 + -1;\n        } while (param_1 != 0);\n    }\n    *in_FS_OFFSET = in_stack_fffffbd0;\n    uStack1064 = 0x431d80;\n    if (*(var_4h + 0x10) != 0) {\n        if (var_8h == NULL) {\n            iStack1068 = 0x431d67;\n            fcn.00409590();\n        }\n        else {\n            iStack1068 = 0x431d78;\n            fcn.00409d24();\n        }\n    }\n    return;\n}\n",
        "token_count": 732
    },
    "00431d88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431d88(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack1072;\n    uint uStack1068;\n    uchar *puStack1064;\n    uint var_414h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if ((((param_2 < 0) || (param_1 < 0)) || (*(in_EAX + 4) < param_1 + param_2)) || (param_1 + param_2 < 0)) {\n        puStack1064 = 0x431dba;\n        fcn.00431010();\n    }\n    if (param_1 < 1) {\n        return;\n    }\n    var_14h = *(*(var_4h + 8) + *(*(var_4h + 8) + 1) + 2);\n    var_ch = NULL;\n    var_8h = NULL;\n    uStack1068 = 0x431edb;\n    uStack1072 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbd0;\n    puStack1064 = &stack0xfffffffc;\n    if (*(var_4h + 0x10) != 0) {\n        if (param_1 * var_14h < 0x401) {\n            var_ch = &fcn.00431d88::var_414h;\n            puStack1064 = &stack0xfffffffc;\n        }\n        else {\n            puStack1064 = &stack0xfffffffc;\n            var_ch = fcn.004053f0();\n            var_8h = var_ch;\n        }\n        fcn.004055b4();\n    }\n    var_10h = *(var_4h + 4) - (param_1 + param_2);\n    if (0 < var_10h) {\n        fcn.004055b4();\n    }\n    fcn.00405884();\n    *(var_4h + 4) = *(var_4h + 4) - param_1;\n    if ((*(var_4h + 0x10) != 0) && (-1 < param_1 + -1)) {\n        do {\n            (**(var_4h + 0x10))();\n            param_1 = param_1 + -1;\n        } while (param_1 != 0);\n    }\n    *in_FS_OFFSET = uStack1072;\n    puStack1064 = 0x431ee2;\n    if (*(var_4h + 0x10) != 0) {\n        uStack1068 = 0x431eda;\n        fcn.0040540c();\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "00431eec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431eec(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[1] <= param_2) {\n        fcn.00431010();\n    }\n    in_EAX[1] = in_EAX[1] + -1;\n    if (param_2 != in_EAX[1]) {\n        fcn.004055b4();\n    }\n    *(*in_EAX + in_EAX[1] * 4) = 0;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00431f74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431f74(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX[1] <= param_2) {\n        puStack24 = 0x431f92;\n        fcn.00431010();\n    }\n    uStack28 = 0x432030;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    in_EAX[1] = in_EAX[1] + -1;\n    puStack24 = &stack0xfffffffc;\n    if (param_2 != in_EAX[1]) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004055b4();\n    }\n    *(*in_EAX + in_EAX[1] * 4) = 0;\n    if (in_EAX[4] != 0) {\n        (*in_EAX[4])();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x432037;\n    uStack28 = 0x43202f;\n    fcn.00409590();\n    return;\n}\n",
        "token_count": 300
    },
    "004320d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004320d0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) < in_EDX) {\n        fcn.00431010();\n    }\n    fcn.0043109c();\n    if (in_EDX != *(in_EAX + 4)) {\n        fcn.004055b4();\n    }\n    fcn.004055b4();\n    *(in_EAX + 4) = *(in_EAX + 4) + arg_8h;\n    if ((*(in_EAX + 0x10) != 0) && (-1 < arg_8h + -1)) {\n        do {\n            (**(in_EAX + 0x10))();\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00432208": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432208(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack20;\n    \n    if (*(in_EAX + 4) != 0) {\n        iStack20 = 0;\n        iVar2 = 0;\n        do {\n            while ((iVar2 < *(in_EAX + 4) && (cVar1 = (**(*param_2 + 0xc))(),  cVar1 != '\\0'))) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar2;\n            if (iVar2 < *(in_EAX + 4)) {\n                while ((iVar3 < *(in_EAX + 4) && (cVar1 = (**(*param_2 + 0xc))(),  cVar1 == '\\0'))) {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iStack20 < iVar2) {\n                    fcn.004055b4();\n                }\n                iStack20 = iStack20 + (iVar3 - iVar2);\n            }\n            iVar2 = iVar3;\n        } while (iVar3 < *(in_EAX + 4));\n        if (iStack20 < *(in_EAX + 4)) {\n            fcn.00405884();\n            *(in_EAX + 4) = iStack20;\n        }\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "0043bdf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bdf0(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX == NULL) || (*in_EAX == 0)) {\n        fcn.0043bddc();\n        fcn.0040711c();\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0043bea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * fcn.0043bea0(void)\n\n{\n    char **ppcVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    \n    if ((in_EAX == NULL) || (*in_EAX != '\\x03')) {\n        in_EAX = NULL;\n    }\n    else {\n        while( true ) {\n            iVar2 = fcn.00467260();\n            ppcVar1 = *(iVar2 + 9);\n            if (((ppcVar1 == NULL) || (*ppcVar1 == NULL)) || (in_EAX == *ppcVar1)) break;\n            in_EAX = *ppcVar1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 154
    },
    "0043bed4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bed4(void)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43bf7b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    pcVar2 = fcn.0043bea0();\n    if ((((pcVar2 == *0x401000) || (pcVar2 == *0x401228)) || (pcVar2 == *0x401258)) || (pcVar2 == *0x401288)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (((!bVar1) && (pcVar2 != NULL)) && (*pcVar2 == '\\x03')) {\n        iVar3 = fcn.00467260();\n        if ((*(iVar3 + 1) == 0) && (*(iVar3 + 5) == 1)) {\n            fcn.00466fb8();\n            fcn.00466f58();\n            fcn.00408874();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43bf82;\n    uStack28 = 0x43bf7a;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 348
    },
    "0043bfc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0043bfc0(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    uchar *in_EAX;\n    int32_t iVar3;\n    \n    if (in_EAX != NULL) {\n    // switch table (15 cases) at 0x43bff3\n        switch(*in_EAX) {\n        case 8:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xf:\n        case 0x11:\n        case 0x12:\n        case 0x16:\n            bVar2 = true;\n            break;\n        default:\n            bVar2 = false;\n            break;\n        case 0xd:\n            iVar3 = fcn.00467260();\n            if ((*(iVar3 + 8) == 0) || (cVar1 = fcn.0043bfc0(),  cVar1 == '\\0')) {\n                bVar2 = false;\n            }\n            else {\n                bVar2 = true;\n            }\n            break;\n        case 0xe:\n            iVar3 = fcn.00467260();\n            bVar2 = 0 < *(iVar3 + 4);\n        }\n        return bVar2;\n    }\n    return false;\n}\n",
        "token_count": 272
    },
    "0043c508": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043c508(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*in_EAX == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar2 = *in_EAX & *in_EAX - 1;\n        uVar1 = *in_EAX & ~uVar2;\n        *in_EAX = uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "0043c910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043c910(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    uVar2 = 0x43c93a;\n    fcn.0043c988(arg_8h);\n    if (in_ECX != 0) {\n        cVar1 = fcn.0043bfc0();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x43c966;\n            fcn.004055b4();\n        }\n        else {\n            uVar2 = 1;\n            fcn.00409578(1);\n        }\n    }\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 289
    },
    "0043c9e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0043c9e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0043c988(arg_ch);\n    *(in_EAX + 0x14) = arg_8h;\n    if (in_ECX != 0) {\n        fcn.004055b4();\n    }\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_ch;\n    }\n    return in_EAX;\n}\n",
        "token_count": 228
    },
    "0043cb20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043cb20(void)\n\n{\n    uchar *puVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    puVar1 = *in_EAX;\n    if ((puVar1 != NULL) && (in_EAX[1] != 0)) {\n    // switch table (15 cases) at 0x43cb5b\n        switch(*puVar1) {\n        case 7:\n            uVar3 = in_EAX[2] == 0;\n            break;\n        case 8:\n            uVar3 = in_EAX[2] == 0;\n            break;\n        default:\n            uVar3 = 0;\n            break;\n        case 0xf:\n            piVar2 = (**(*in_EAX[1] + 0x18))();\n            uVar3 = piVar2 & 0xffffff00 | *piVar2 == 0;\n            break;\n        case 0x11:\n            uVar3 = fcn.0043d430();\n            uVar3 = uVar3 & 0xffffff00 | uVar3 == 0;\n            break;\n        case 0x13:\n            uVar3 = in_EAX[2] == 0;\n            break;\n        case 0x14:\n        case 0x15:\n            uVar3 = in_EAX[2] == 0;\n        }\n        return uVar3;\n    }\n    return CONCAT31(puVar1 >> 8, 1);\n}\n",
        "token_count": 338
    },
    "0043cbc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0043cbc4(void)\n\n{\n    uint *in_EAX;\n    \n    if ((*in_EAX != NULL) && (in_EAX[1] != 0)) {\n        return **in_EAX;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0043cbec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043cbec(void)\n\n{\n    uint8_t uVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint8_t *puVar3;\n    uchar *puVar4;\n    \n    if (*in_EAX != NULL) {\n        if (in_EAX[1] != 0) {\n            switch(**in_EAX) {\n            default:\n                return 0;\n            case 1:\n            case 2:\n            case 3:\n            case 9:\n                goto code_r0x0043cc7b;\n            case 4:\n                puVar4 = fcn.00467260();\n                switch(*puVar4) {\n                case 0:\n                    return 4;\n                case 1:\n                    return 8;\n                case 2:\n                    return 10;\n                case 3:\n                    return 8;\n                case 4:\n                    return 8;\n                default:\n                    return 0;\n                }\n            case 5:\n            case 0xd:\n            case 0xe:\n            case 0x16:\n                uVar2 = (**(*in_EAX[1] + 0xc))();\n                return uVar2;\n            case 6:\n                uVar2 = fcn.00468330();\n                return uVar2;\n            case 7:\n            case 10:\n            case 0xb:\n            case 0xf:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n                return 4;\n            case 8:\n                return 8;\n            case 0xc:\n                return 0x10;\n            case 0x10:\n                return 8;\n            case 0x15:\n                return 4;\n            }\n        }\n        return 0;\n    }\n    if ((in_EAX[1] != 0) && (in_EAX[1] != *0x4b94fc)) {\n        uVar2 = (**(*in_EAX[1] + 0xc))();\n        return uVar2;\n    }\n    return 0;\ncode_r0x0043cc7b:\n    puVar3 = fcn.00467260();\n    uVar1 = *puVar3;\n    if (uVar1 < 2) {\n        return 1;\n    }\n    if (uVar1 - 2 < 2) {\n        return 2;\n    }\n    if (uVar1 - 4 < 2) {\n        return 4;\n    }\n    return 0;\n}\n",
        "token_count": 553
    },
    "0043ce98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ce98(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX == NULL) {\n        fcn.0043cd60();\n    }\n    else if (*(*in_EAX + -0x48) == 0) {\n        fcn.00455c1c();\n    }\n    else {\n        fcn.00408c90();\n        fcn.0043d4a8();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0043d1bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nchar * fcn.0043d1bc(void)\n\n{\n    char cVar1;\n    char **in_EAX;\n    char *pcVar2;\n    \n    cVar1 = fcn.0043cb20();\n    if (cVar1 == '\\0') {\n        if (*in_EAX == *0x40109c) {\n            return in_EAX[2];\n        }\n        if (**in_EAX == '\\x01') {\n            pcVar2 = fcn.00467260();\n            cVar1 = *pcVar2;\n            if (cVar1 == '\\0') {\n                return *(in_EAX + 2);\n            }\n            if (cVar1 != '\\x02') {\n                if (cVar1 != '\\x04') {\n                    return in_EAX[2];\n                }\n                return in_EAX[2];\n            }\n            return *(in_EAX + 2);\n        }\n    }\n    pcVar2 = fcn.00455d34();\n    return pcVar2;\n}\n",
        "token_count": 219
    },
    "0043d220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043d220(void)\n\n{\n    char cVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0043cb20();\n    if ((cVar1 == '\\0') && (*in_EAX == *0x401000)) {\n        return *in_EAX & 0xffffff00 | *(in_EAX + 2) != '\\0';\n    }\n    uVar2 = fcn.00455d70();\n    return uVar2;\n}\n",
        "token_count": 120
    },
    "0043d2dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint64_t fcn.0043d2dc(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char **in_EAX;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    cVar2 = fcn.0043cb20();\n    if (cVar2 == '\\0') {\n        pcVar1 = *in_EAX;\n        if (pcVar1 == *0x401114) {\n            return *(in_EAX + 2);\n        }\n        if (pcVar1 == *0x401134) {\n            return *(in_EAX + 2);\n        }\n        if (pcVar1 == *0x4010e4) {\n            return ZEXT48(in_EAX[2]);\n        }\n        if (*pcVar1 == '\\x01') {\n            iVar3 = fcn.0043d1bc();\n            return iVar3;\n        }\n    }\n    uVar4 = fcn.00455de8();\n    return uVar4;\n}\n",
        "token_count": 220
    },
    "0043d4a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d4a8(char **param_1, char *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    *param_1 = param_2;\n    fcn.0040b494();\n    iVar1 = fcn.0043c03c();\n    if (iVar1 != 0) {\n        if (iVar1 < 1) {\n            fcn.0043c910(param_2, -iVar1);\n            fcn.0040b494();\n        }\n        else {\n            param_1[2] = NULL;\n            param_1[3] = NULL;\n            *(param_1 + 4) = 0;\n            if (in_EAX != 0) {\n                fcn.004055b4();\n            }\n            if (((param_2 != NULL) && (*param_2 == '\\a')) && (param_1[2] != NULL)) {\n                pcVar2 = fcn.0043d490(&stack0xfffffffc);\n                *param_1 = pcVar2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0043ddfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0043ddfc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool var_5h;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    cVar1 = fcn.0043bed4();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.0043bed4(),  cVar1 == '\\0')) {\n        iVar2 = fcn.0043bea0();\n        iVar3 = fcn.0043bea0();\n        var_5h = iVar2 == iVar3;\n        if (var_5h) {\n            fcn.00408c90();\n            fcn.0043d55c();\n        }\n    }\n    else {\n        var_5h = true;\n        fcn.0043bea0();\n        fcn.00408c90();\n        fcn.0043d55c();\n    }\n    return var_5h;\n}\n",
        "token_count": 222
    },
    "0043e804": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043e804(int32_t param_1)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    fcn.0043d648();\n    fcn.00467260();\n    fcn.00467260();\n    if (param_1 != 0) {\n        cVar1 = fcn.00405ff0();\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x0043e854;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x0043e854:\n    if (cVar1 != '\\0') {\n        fcn.00408c90();\n        fcn.0043d55c();\n    }\n    return cVar1;\n}\n",
        "token_count": 182
    },
    "0043e8f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043e8f8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    char cVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    if (param_2 != *0x4026b0) {\n        iVar1 = fcn.0043cbc0();\n        if (param_2 != iVar1) {\n            cVar3 = '\\0';\n            goto code_r0x0043e931;\n        }\n    }\n    cVar3 = '\\x01';\ncode_r0x0043e931:\n    if (cVar3 == '\\0') {\n        fcn.0043cbc0();\n        ppiVar2 = fcn.00467260();\n        while( true ) {\n            if ((ppiVar2 == NULL) || (*ppiVar2 == NULL)) goto code_r0x0043e964;\n            if (param_2 == **ppiVar2) break;\n            ppiVar2 = fcn.00467260();\n        }\n        cVar3 = '\\x01';\n    }\ncode_r0x0043e964:\n    if (cVar3 != '\\0') {\n        fcn.0043d690();\n        fcn.00408c90();\n        fcn.0043d4a8();\n        cVar3 = '\\x01';\n    }\n    return cVar3;\n}\n",
        "token_count": 330
    },
    "0043f110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043f110(uint param_1, char *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t unaff_EBX;\n    unkbyte3 Var7;\n    uint32_t uVar6;\n    bool bVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    pcVar2 = fcn.0043cbd8();\n    if (*pcVar2 != '\\x03') {\n        return unaff_EBX & 0xffffff00 | *pcVar2 == '\\x03';\n    }\n    uVar6 = *(in_EAX + 8);\n    uVar1 = *(in_EAX + 0xc);\n    Var7 = (unaff_EBX & 0xffffff00) >> 8;\n    if (*param_2 == '\\x01') {\n        iVar3 = fcn.00467260();\n        if (*(iVar3 + 1) <= *(iVar3 + 5)) {\n            uVar5 = *(iVar3 + 1) >> 0x1f;\n            if (uVar5 == uVar1) {\n                if (*(iVar3 + 1) <= uVar6) {\ncode_r0x0043f1ab:\n                    uVar5 = *(iVar3 + 5) >> 0x1f;\n                    if (uVar5 == uVar1) {\n                        if (uVar6 <= *(iVar3 + 5)) {\ncode_r0x0043f1c4:\n                            uVar6 = CONCAT31(Var7, 1);\n                            goto code_r0x0043f24b;\n                        }\n                    }\n                    else if (uVar1 <= uVar5) goto code_r0x0043f1c4;\n                }\n            }\n            else if (uVar5 <= uVar1) goto code_r0x0043f1ab;\n            uVar6 = 0;\n            goto code_r0x0043f24b;\n        }\n        if (uVar1 == 0) {\n            if (*(iVar3 + 1) <= uVar6) {\ncode_r0x0043f178:\n                if (uVar1 == 0) {\n                    if (uVar6 <= *(iVar3 + 5)) {\ncode_r0x0043f192:\n                        uVar6 = CONCAT31(Var7, 1);\n                        goto code_r0x0043f24b;\n                    }\n                }\n                else if (uVar1 < 1) goto code_r0x0043f192;\n            }\n        }\n        else if (-1 < uVar1) goto code_r0x0043f178;\n        uVar6 = 0;\n        goto code_r0x0043f24b;\n    }\n    puVar4 = fcn.00467260();\n    if (puVar4[1] == puVar4[3]) {\n        if (*puVar4 < puVar4[2] || *puVar4 == puVar4[2]) {\ncode_r0x0043f21e:\n            if (puVar4[1] == uVar1) {\n                if (*puVar4 <= uVar6) {\ncode_r0x0043f231:\n                    if (puVar4[3] == uVar1) {\n                        if (uVar6 <= puVar4[2]) {\ncode_r0x0043f249:\n                            uVar6 = CONCAT31(Var7, 1);\n                            goto code_r0x0043f24b;\n                        }\n                    }\n                    else if (uVar1 <= puVar4[3]) goto code_r0x0043f249;\n                }\n            }\n            else if (puVar4[1] <= uVar1) goto code_r0x0043f231;\n            uVar6 = 0;\n            goto code_r0x0043f24b;\n        }\n    }\n    else if (puVar4[1] <= puVar4[3]) goto code_r0x0043f21e;\n    if ((uVar1 == 0) || (-1 < uVar1)) {\n        uVar5 = puVar4[1];\n        bVar8 = uVar5 < uVar1;\n        if (uVar5 == uVar1) {\n            bVar8 = *puVar4 < uVar6;\n        }\n        if (bVar8 || uVar5 == uVar1 && *puVar4 == uVar6) {\n            bVar8 = puVar4[3] < uVar1;\n            if (puVar4[3] == uVar1) {\n                bVar8 = puVar4[2] < uVar6;\n            }\n            if (!bVar8) {\n                uVar6 = CONCAT31(Var7, 1);\n                goto code_r0x0043f24b;\n            }\n        }\n    }\n    uVar6 = 0;\ncode_r0x0043f24b:\n    if (uVar6 != '\\0') {\n        fcn.00408c90();\n        fcn.0043d4a8();\n    }\n    return uVar6;\n}\n",
        "token_count": 1166
    },
    "0043f274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f496)\n// WARNING: Removing unreachable block (ram,0x0043f342)\n// WARNING: Removing unreachable block (ram,0x0043f34b)\n// WARNING: Removing unreachable block (ram,0x0043f486)\n// WARNING: Removing unreachable block (ram,0x0043f352)\n// WARNING: Removing unreachable block (ram,0x0043f35d)\n// WARNING: Removing unreachable block (ram,0x0043f366)\n// WARNING: Removing unreachable block (ram,0x0043f4ae)\n// WARNING: Removing unreachable block (ram,0x0043f38d)\n// WARNING: Removing unreachable block (ram,0x0043f316)\n// WARNING: Removing unreachable block (ram,0x0043f31b)\n// WARNING: Removing unreachable block (ram,0x0043f469)\n// WARNING: Removing unreachable block (ram,0x0043f321)\n// WARNING: Removing unreachable block (ram,0x0043f32a)\n// WARNING: Removing unreachable block (ram,0x0043f32f)\n// WARNING: Removing unreachable block (ram,0x0043f336)\n// WARNING: Removing unreachable block (ram,0x0043f33d)\n// WARNING: Removing unreachable block (ram,0x0043f4bb)\n// WARNING: Removing unreachable block (ram,0x0043f44d)\n// WARNING: Removing unreachable block (ram,0x0043f45b)\n// WARNING: Removing unreachable block (ram,0x0043f440)\n// WARNING: Removing unreachable block (ram,0x0043f378)\n// WARNING: Removing unreachable block (ram,0x0043f476)\n\nvoid fcn.0043f274(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = 0x43f2a5;\n    fcn.00408bb4();\n    puStack68 = 0x43f2b3;\n    fcn.00408bb4();\n    uStack72 = 0x43f50e;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &stack0xfffffffc;\n    fcn.0043d41c();\n    // switch table (11 cases) at 0x43f2ea\n    switch(*0x43f2ea) {\n    default:\n        fcn.0043cd60();\n        break;\n    case 0x43f39e:\n        fcn.0043cdb0();\n        break;\n    case 0x43f3af:\n        fcn.0043cdb0();\n        break;\n    case 0x43f3bf:\n        fcn.0043cde8(0);\n        break;\n    case 0x43f3cf:\n        fcn.0043ce08(0, 0);\n        break;\n    case 0x43f3e2:\n        fcn.0043ce2c(0, 0);\n        break;\n    case 0x43f3f5:\n        fcn.00455c48(0);\n        break;\n    case 0x43f408:\n        fcn.00408550();\n        fcn.0043cd70();\n        break;\n    case 0x43f423:\n        fcn.00455c74();\n        break;\n    case 0x43f433:\n        fcn.00455ca0();\n    }\n    arg_8h = 1;\n    fcn.00408c90();\n    fcn.0043f9cc(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    fcn.00407a80(0x43f515);\n    fcn.00408c90();\n    fcn.004293d4();\n    return;\n}\n",
        "token_count": 925
    },
    "0043f9cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f9cc(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t **in_EAX;\n    int32_t iVar2;\n    uint8_t *in_EDX;\n    uint8_t **in_FS_OFFSET;\n    uint var_34h;\n    uint8_t *in_stack_ffffffd4;\n    uint8_t *puStack40;\n    uint uStack36;\n    uchar *var_1ch;\n    uint var_4h;\n    \n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x43f9fa;\n    fcn.00408bb4();\n    uStack36 = 0x43fb14;\n    puStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_1ch = &stack0xfffffffc;\n    if (arg_8h != '\\0') {\n        in_stack_ffffffd4 = 0x43fa13;\n        var_1ch = &stack0xfffffffc;\n        cVar1 = fcn.0043cb20();\n        if (cVar1 != '\\0') {\n            fcn.0043cd60();\n            in_stack_ffffffd4 = 0x43fa30;\n            fcn.00408f5c();\n            if (in_EDX != NULL) {\n                in_stack_ffffffd4 = 0x43fa3b;\n                iVar2 = fcn.0043c03c();\n                _pe_dos_header = in_EDX;\n                if (iVar2 < 0) {\n                    in_stack_ffffffd4 = in_EDX;\n                    fcn.0043c988(in_EDX);\n                    fcn.0040b494();\n                }\n            }\n            goto code_r0x0043faf3;\n        }\n    }\n    if ((arg_8h != '\\0') || (*in_EAX != NULL)) {\n        if (in_EDX == *in_EAX) {\n            in_stack_ffffffd4 = 0x43fa93;\n            fcn.00408f5c();\n        }\n        else if (in_EDX != NULL) {\n            if (in_EDX == *0x432e94) {\n                fcn.00455bf0();\n                in_stack_ffffffd4 = 0x43fac2;\n                fcn.00408f5c();\n            }\n            else {\n                fcn.00408c90();\n                in_stack_ffffffd4 = 0x43faf1;\n                (**(**in_EAX * 0x5c + 0x4b9500 + *in_EDX * 4))();\n            }\n        }\n    }\ncode_r0x0043faf3:\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43fb1b;\n    puStack40 = 0x43fb13;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 663
    },
    "00444560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00444560(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack32 = 0x444572;\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    var_5h._0_1_ = param_2;\n    unique0x10000087 = in_EAX;\n    if (*0x4c17e8 == 0) {\n        puStack32 = 0x44458d;\n        *0x4c17e8 = fcn.00405cb8();\n    }\n    if (**0x4ba590 == 0) {\n        puStack32 = 0x4445a3;\n        fcn.0040554c();\n    }\n    puStack32 = 0x4445ad;\n    fcn.0040690c();\n    puStack32 = 0x4445b5;\n    fcn.00406688();\n    uStack36 = 0x444621;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*0x4c17e0 == 0) {\n        puStack32 = &stack0xfffffffc;\n        *0x4c17e0 = fcn.00443a08();\n        *0x4c17e4 = 1;\n    }\n    else {\n        *0x4c17e4 = *0x4c17e4 + 1;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x444628;\n    if (*0x4c17e8 == 0) {\n        uStack36 = 0x444611;\n        *0x4c17e8 = fcn.00405cb8();\n    }\n    uStack36 = 0x444620;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 486
    },
    "00444648": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00444648(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_5h;\n    \n    puStack16 = 0x444653;\n    *NULL = fcn.00406358();\n    var_5h._0_1_ = extraout_DL;\n    if (*0x4c17e8 == 0) {\n        puStack16 = 0x44466e;\n        *0x4c17e8 = fcn.00405cb8();\n    }\n    if (**0x4ba590 == 0) {\n        puStack16 = 0x444684;\n        fcn.0040554c();\n    }\n    puStack16 = 0x44468e;\n    fcn.0040690c();\n    puStack16 = 0x444696;\n    fcn.00406688();\n    uStack20 = 0x4446f6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x4c17e4 = *0x4c17e4 + -1;\n    if (*0x4c17e4 == 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00405ce8();\n        *0x4c17e0 = 0;\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4446fd;\n    if (*0x4c17e8 == 0) {\n        uStack20 = 0x4446e6;\n        *0x4c17e8 = fcn.00405cb8();\n    }\n    uStack20 = 0x4446f5;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 423
    },
    "00444720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444720(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x44479c;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.0040b494();\n    if (var_4h == 0) {\n        fcn.00444560();\n        fcn.0040b494();\n    }\n    iVar2 = *(arg_8h + -8);\n    piVar1 = *(arg_8h + -4);\n    LOCK();\n    if (iVar2 == *piVar1) {\n        *piVar1 = var_4h;\n    }\n    else {\n        iVar2 = *piVar1;\n    }\n    if (iVar2 == *(arg_8h + -8)) {\n        var_4h = 0;\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x4447a3;\n    uStack16 = 0x44479b;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 310
    },
    "004447a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004447a8(void)\n\n{\n    int32_t *in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*in_EAX == 0) {\n        fcn.00444720(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0044682c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044682c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    code **in_EDX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar4;\n    int32_t *piStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x4ba590 == 0) {\n        puStack32 = 0x446857;\n        fcn.0040554c();\n    }\n    puStack32 = 0x44685e;\n    fcn.0040690c();\n    puStack32 = 0x446866;\n    fcn.00406688();\n    uStack36 = 0x4468de;\n    piStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    cVar1 = fcn.0045553c();\n    if (cVar1 != '\\0') {\n        *arg_8h = *arg_8h + *(var_ch + 8);\n        fcn.00407210();\n        return var_ch;\n    }\n    if (in_EDX == *0x4339c8) {\n        in_EDX = fcn.0043fcac();\n    }\n    iVar3 = *arg_8h;\n    piVar4 = arg_8h;\n    iVar2 = (**in_EDX)(arg_8h, in_ECX);\n    *(iVar2 + 8) = *arg_8h - iVar3;\n    *in_FS_OFFSET = piVar4;\n    piStack40 = 0x4468e5;\n    iVar3 = fcn.00406868();\n    return iVar3;\n}\n",
        "token_count": 425
    },
    "00446910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00446910(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 0x10) = arg_ch;\n    *(in_EAX + 4) = *arg_8h;\n    *(in_EAX + 0xc) = in_ECX;\n    if (in_ECX != 0) {\n        fcn.004553b0();\n    }\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 245
    },
    "00446968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446968(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_5h;\n    \n    puStack28 = 0x446974;\n    iVar1 = fcn.00406358();\n    if ((*(iVar1 + 0xc) != 0) && (*(*(iVar1 + 0xc) + 0x1c) != 0)) {\n        if (**0x4ba590 == 0) {\n            puStack28 = 0x44699e;\n            fcn.0040554c();\n        }\n        puStack28 = 0x4469a5;\n        fcn.0040690c();\n        puStack28 = 0x4469ad;\n        fcn.00406688();\n        uStack32 = 0x4469ee;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        fcn.00455414();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x4469f5;\n        uStack32 = 0x4469ed;\n        fcn.00406868();\n        return;\n    }\n    puStack28 = 0x446a04;\n    fcn.00405cd8();\n    if ('\\0' < extraout_DL) {\n        puStack28 = 0x446a12;\n        fcn.00406300();\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00446a18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446a18(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) == 0) {\n        fcn.00409d24();\n        return;\n    }\n    (**(**(in_EAX + 0x14) + 0xc))();\n    return;\n}\n",
        "token_count": 75
    },
    "0044750c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044750c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    (**(*in_EAX[3] + 0xc))();\n    if (*param_2 == 0) {\n        (**(*in_EAX + 8))();\n        var_8h = 0;\n        var_4h._0_1_ = 0x11;\n        uVar1 = 0;\n        fcn.0041f374(0, &var_8h);\n        fcn.0040711c();\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 221
    },
    "00447598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447598(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4475da;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    (**(**(in_EAX + 0xc) + 0xc))();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4475e1;\n    uStack20 = 0x4475d9;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 166
    },
    "004483a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004483a0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    fcn.00446910(arg_8h, arg_ch);\n    puVar1 = fcn.004485b8();\n    arg_8h_00 = *puVar1;\n    fcn.004468f4(arg_8h_00);\n    uVar2 = fcn.00405f54();\n    *(in_EAX + 0x1c) = uVar2;\n    *arg_8h = *arg_8h + 8;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_8h_00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 274
    },
    "00449190": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00449190(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.00449238();\n    if (*(iVar1 + -0x44) != 0) {\n        *(in_EAX + 0x28) = *(*(iVar1 + -0x44) + 2);\n    }\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 222
    },
    "00449508": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00449508(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint var_24h;\n    uchar *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x449670;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00449508::var_1ch;\n    if (*(in_EAX + 0x2c) == '\\0') {\n        var_20h = 0x44953f;\n        var_8h = in_EAX;\n        fcn.004474cc();\n        var_20h = 0x449544;\n        var_4h = fcn.0046717c();\n        if (**0x4ba590 == 0) {\n            var_20h = 0x449561;\n            fcn.0040554c();\n        }\n        var_20h = 0x449568;\n        fcn.0040690c();\n        var_20h = 0x449570;\n        fcn.00406688();\n        var_24h = 0x449632;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        var_20h = &stack0xfffffffc;\n        fcn.00449248(&stack0xfffffffc);\n        fcn.00409d68();\n        fcn.004492dc(&stack0xfffffffc);\n        fcn.00409d68();\n        fcn.004493d0(&stack0xfffffffc);\n        fcn.00409d68();\n        fcn.00446780();\n        fcn.0040b494();\n        fcn.0044948c(&stack0xfffffffc);\n        fcn.00409d68();\n        *(var_8h + 0x2c) = 1;\n        *in_FS_OFFSET = uStack44;\n        var_20h = 0x449639;\n        var_24h = 0x449631;\n        fcn.00406868();\n        return;\n    }\n    *in_FS_OFFSET = var_1ch;\n    var_14h = 0x449677;\n    var_18h = 0x449654;\n    fcn.00409d24();\n    var_18h = 0x44965c;\n    fcn.0040b47c();\n    var_18h = 0x44966f;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 671
    },
    "00449940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449940(void)\n\n{\n    uchar *puVar1;\n    ushort uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x449a76;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d) == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4ba590 == 0) {\n            puStack52 = 0x449985;\n            fcn.0040554c();\n            puVar1 = puStack40;\n        }\n        puStack40 = puVar1;\n        puStack52 = 0x44998c;\n        fcn.0040690c();\n        puStack52 = 0x449994;\n        fcn.00406688();\n        uStack56 = 0x449a4e;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        iVar3 = fcn.00449238();\n        if (*(iVar3 + -0x40) != 0) {\n            fcn.004496cc(&stack0xfffffffc);\n            fcn.00409d68();\n            fcn.0044978c(&stack0xfffffffc);\n            fcn.00409d68();\n            uVar2 = fcn.0043fb6c();\n            *(in_EAX + 0x20) = uVar2;\n            fcn.00449884(&stack0xfffffffc);\n            fcn.00409d68();\n            *(in_EAX + 0x2d) = 1;\n            *in_FS_OFFSET = uStack60;\n            puStack52 = 0x449a55;\n            uStack56 = 0x449a4d;\n            fcn.00406868();\n            return;\n        }\n        fcn.00407210();\n        puVar1 = puStack40;\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x449a7d;\n    uStack56 = 0x449a75;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 622
    },
    "00449c9c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00449c9c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x449d58;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = fcn.00449238();\n    if (*(iVar1 + -0x44) == 0) {\n        fcn.00409d24();\n    }\n    else {\n        fcn.00449a84(&stack0xfffffffc);\n        fcn.00409d68();\n        fcn.00449b04(&stack0xfffffffc);\n        fcn.00409d68();\n        fcn.00449be0(&stack0xfffffffc);\n        fcn.00409d68();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x449d5f;\n    uStack44 = 0x449d57;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 300
    },
    "0044a2dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0044a2dc(uint *arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    puVar2 = arg_8h;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.0044a334();\n    uVar1 = fcn.00467214();\n    *arg_8h = uVar1;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = puVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 212
    },
    "0044a6e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044a6e8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    bool bVar5;\n    \n    iVar2 = fcn.004474cc();\n    if (*(iVar2 + 9) == 0) {\n        bVar5 = true;\n    }\n    else {\n        iVar2 = fcn.004474cc();\n        puVar4 = *(iVar2 + 9);\n        if (puVar4 != NULL) {\n            puVar4 = *puVar4;\n        }\n        puVar3 = fcn.00446cec();\n        bVar5 = puVar4 == puVar3;\n    }\n    if (!bVar5) {\n        fcn.00446cec();\n        cVar1 = fcn.0043bed4();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 212
    },
    "0044e730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0044e730(uint16_t **arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char in_DL;\n    char extraout_DL;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint16_t **ppuVar5;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    ppuVar5 = arg_8h;\n    fcn.00446910(arg_8h, arg_ch);\n    cVar1 = fcn.0044e7cc();\n    if (cVar1 == '\\0') {\n        puVar2 = fcn.0044e960();\n        *arg_8h = puVar2;\n        *arg_8h = *arg_8h + 1;\n    }\n    else {\n        iVar3 = fcn.0044e960();\n        *arg_8h = iVar3 + 6;\n        *arg_8h = *arg_8h + 1;\n        iVar3 = fcn.0044e960();\n        for (uVar4 = *(iVar3 + 6); uVar4 != 0; uVar4 = uVar4 - 1) {\n            puVar2 = fcn.004670c8();\n            *arg_8h = puVar2;\n            *arg_8h = *arg_8h + **arg_8h;\n        }\n    }\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = ppuVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 420
    },
    "0044eb18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0044eb18(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    piVar1 = arg_8h;\n    fcn.00446910(arg_8h, arg_ch);\n    *arg_8h = *arg_8h + 8;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = piVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "0044f51c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f51c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY52;\n    uint uStackY48;\n    uchar *puStackY44;\n    uint *arg_8h;\n    uint var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStackY44 = 0x44f545;\n    var_4h = in_EAX;\n    iVar1 = fcn.004474cc();\n    var_8h = iVar1 + 4;\n    puStackY44 = 0x44f553;\n    iVar1 = fcn.0043fb44();\n    var_8h = var_8h + iVar1 * 8;\n    puStackY44 = 0x44f568;\n    uVar2 = fcn.0043fb80();\n    var_8h = var_8h + (uVar2 & 0xff) * 4;\n    puStackY44 = 0x44f57a;\n    iVar1 = fcn.0043fb44();\n    uStackY48 = 0x44f58f;\n    puStackY44 = iVar1;\n    fcn.00409c00();\n    if (-1 < iVar1 + -1) {\n        iVar4 = 0;\n        do {\n            arg_8h = &fcn.0044f51c::var_8h;\n            uStackY48 = 0x44f5b2;\n            fcn.0044682c(arg_8h);\n            uStackY48 = 0x44f5bd;\n            uVar3 = fcn.00405f54();\n            *(*param_2 + iVar4 * 4) = uVar3;\n            iVar4 = iVar4 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    if (*(var_4h + 0x14) == 0) {\n        if (**0x4ba590 == 0) {\n            puStackY44 = 0x44f5e9;\n            fcn.0040554c();\n        }\n        puStackY44 = 0x44f5f0;\n        fcn.0040690c();\n        puStackY44 = 0x44f5f8;\n        fcn.00406688();\n        uStackY48 = 0x44f63b;\n        iStackY52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStackY44 = &stack0xfffffffc;\n        fcn.00446780();\n        fcn.0040b494();\n        *in_FS_OFFSET = iStackY52;\n        puStackY44 = 0x44f64b;\n        uStackY48 = 0x44f63a;\n        fcn.00406868();\n        return;\n    }\n    var_8h = var_8h + *var_8h;\n    *(var_4h + 0x18) = var_8h;\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 776
    },
    "0044f678": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f678(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_8h = in_EAX[6];\n    var_4h = param_2;\n    if (var_8h == 0) {\n        (**(*in_EAX + 0x24))();\n        var_8h = in_EAX[6];\n    }\n    uVar1 = fcn.0043fb6c();\n    uVar1 = uVar1 & 0xffff;\n    fcn.00409c00(uVar1);\n    if (-1 < uVar1 - 1) {\n        iVar3 = 0;\n        do {\n            arg_8h = &var_8h;\n            fcn.0044682c(arg_8h);\n            uVar2 = fcn.00405f54();\n            *(*var_4h + iVar3 * 4) = uVar2;\n            iVar3 = iVar3 + 1;\n            uVar1 = uVar1 - 1;\n        } while (uVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 359
    },
    "0044f734": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f734(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44f782;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX[5] == 0) {\n        (**(*in_EAX + 0x24))();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.00446a18();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44f789;\n    uStack24 = 0x44f781;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 222
    },
    "0044f9b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f9b4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44fa8c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 0x14) == 0) {\n        puStack28 = &stack0xfffffffc;\n        if (**0x4ba590 == 0) {\n            puStack40 = 0x44f9fb;\n            puStack28 = &stack0xfffffffc;\n            fcn.0040554c();\n        }\n        puStack40 = 0x44fa02;\n        fcn.0040690c();\n        puStack40 = 0x44fa0a;\n        fcn.00406688();\n        uStack44 = 0x44fa64;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        if (*(in_EAX + 0x14) == 0) {\n            puStack40 = &stack0xfffffffc;\n            fcn.004474cc();\n            fcn.00446780();\n            fcn.0040b494();\n        }\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x44fa6b;\n        uStack44 = 0x44fa63;\n        fcn.00406868();\n        return;\n    }\n    puStack40 = 0x44fa76;\n    fcn.00446a18();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44fa93;\n    uStack32 = 0x44fa8b;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 466
    },
    "0044fa98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044fa98(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0044e964();\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0044faac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0044faac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        return 0;\n    }\n    iVar1 = fcn.0044e960();\n    return *(iVar1 + 1);\n}\n",
        "token_count": 74
    },
    "0044fac8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fac8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == 0) {\n        fcn.00409d24();\n        return;\n    }\n    fcn.0044e98c();\n    return;\n}\n",
        "token_count": 66
    },
    "0044faf4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044faf4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44fb96;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if (in_EAX[6] == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00407a20();\n    }\n    else {\n        (**(*in_EAX[6] + -0x24))();\n    }\n    iVar1 = fcn.0044fa98();\n    if (iVar1 == 0) {\n        (**(*in_EAX + 8))();\n        uVar2 = 0;\n        fcn.004087c4(0, 0x44fbb0, 0);\n    }\n    else {\n        (**(*in_EAX + 8))();\n        uVar2 = 0;\n        fcn.004087c4(0, 0x44fbd8, 0);\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00407a80(0x44fb9d);\n    return;\n}\n",
        "token_count": 322
    },
    "0044fbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044fbf0(int32_t **arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    char in_DL;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar6;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x44fc0a;\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack52 = 0x44fcd8;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0044fbf0::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar2 = fcn.004474cc();\n    *arg_8h = iVar2 + 1;\n    uVar3 = fcn.0043fb80();\n    uVar3 = uVar3 & 0xff;\n    if (uVar3 != 0) {\n        do {\n            *arg_8h = *arg_8h + 1;\n            piVar4 = fcn.0043fc88();\n            *arg_8h = piVar4;\n            piVar4 = fcn.0043fc88();\n            *arg_8h = piVar4;\n            uVar3 = uVar3 - 1;\n        } while (0 < uVar3);\n    }\n    cVar1 = fcn.0044fff8();\n    if (cVar1 == '\\x01') {\n        piVar4 = fcn.0043fc88();\n        *arg_8h = piVar4;\n        *arg_8h = *arg_8h + 1;\n    }\n    iVar6 = 0x44fc83;\n    iVar2 = fcn.004474cc();\n    *arg_8h = *arg_8h + *(iVar2 + 1) * 4 + 1;\n    iVar2 = **arg_8h;\n    if (iVar2 != 0) {\n        uVar5 = fcn.004468f4(iVar2);\n        *(in_EAX + 0x18) = uVar5;\n        iVar6 = iVar2;\n    }\n    *arg_8h = *arg_8h + 1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = iVar6;\n    fcn.0040b47c(0x44fcdf);\n    return;\n}\n",
        "token_count": 689
    },
    "00450010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00450010(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    fcn.00446a44(arg_8h, arg_ch);\n    arg_8h_00 = 0x45003d;\n    piVar1 = fcn.004474cc();\n    if (*piVar1 != 0) {\n        puVar2 = fcn.004474cc();\n        arg_8h_00 = *puVar2;\n        uVar3 = fcn.004468f4(arg_8h_00);\n        *(in_EAX + 0x18) = uVar3;\n    }\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = arg_8h_00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 270
    },
    "004502e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004502e8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4503c0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 0x14) == 0) {\n        puStack28 = &stack0xfffffffc;\n        if (**0x4ba590 == 0) {\n            puStack40 = 0x45032f;\n            puStack28 = &stack0xfffffffc;\n            fcn.0040554c();\n        }\n        puStack40 = 0x450336;\n        fcn.0040690c();\n        puStack40 = 0x45033e;\n        fcn.00406688();\n        uStack44 = 0x450398;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        if (*(in_EAX + 0x14) == 0) {\n            puStack40 = &stack0xfffffffc;\n            fcn.004474cc();\n            fcn.00446780();\n            fcn.0040b494();\n        }\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x45039f;\n        uStack44 = 0x450397;\n        fcn.00406868();\n        return;\n    }\n    puStack40 = 0x4503aa;\n    fcn.00446a18();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4503c7;\n    uStack32 = 0x4503bf;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 458
    },
    "004505b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004505b8(void)\n\n{\n    uint var_4h;\n    \n    if (**0x4ba6c8 != NULL) {\n        (***0x4ba6c8)();\n    }\n    fcn.0040554c();\n    return;\n}\n",
        "token_count": 60
    },
    "00452874": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00452874(uint *arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    puVar2 = arg_8h;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.004528f0();\n    uVar1 = fcn.0046702c();\n    *arg_8h = uVar1;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = puVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "004535b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004535b8(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    iVar1 = *arg_8h;\n    *arg_8h = *(iVar1 + 4);\n    fcn.00446910(arg_8h, arg_ch);\n    uVar2 = fcn.00405cb8();\n    *(in_EAX + 0x18) = uVar2;\n    iVar4 = *(iVar1 + 0x14);\n    *(in_EAX + 0x24) = iVar4;\n    if (iVar4 == 0) {\n        pcVar3 = fcn.0040e1b8(*(iVar1 + 4), 0x453658);\n        iVar4 = (*pcVar3)();\n        *(in_EAX + 0x24) = iVar4 + 8;\n    }\n    *(in_EAX + 0x20) = *(iVar1 + 4);\n    uVar5 = 0;\n    uVar2 = fcn.0045969c(0);\n    *(in_EAX + 0x1c) = uVar2;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 401
    },
    "004536bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004536bc(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4536d0;\n    fcn.00453bb8();\n    puStack28 = 0x4536e0;\n    cVar1 = fcn.004577f8();\n    if (cVar1 == '\\0') {\n        var_8h = 0;\n    }\n    else {\n        if (**0x4ba590 == 0) {\n            puStack28 = 0x453705;\n            fcn.0040554c();\n        }\n        puStack28 = 0x45370c;\n        fcn.0040690c();\n        puStack28 = 0x453714;\n        fcn.00406688();\n        uStack32 = 0x453768;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        cVar1 = fcn.0045553c();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x45376f;\n            uStack32 = 0x453767;\n            uVar2 = fcn.00406868();\n            return uVar2;\n        }\n        var_8h = fcn.00405f54();\n        fcn.00407210();\n    }\n    return var_8h;\n}\n",
        "token_count": 377
    },
    "004537dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004537dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = **(in_EAX + 0x24);\n    if (-1 < iVar3 + -1) {\n        iVar2 = 0;\n        do {\n            if (((*(*(*(in_EAX + 0x24) + 4) + iVar2 * 4) != 0) && (*(*(*(in_EAX + 0x24) + 4) + iVar2 * 4) != 1)) &&\n               (**(*(*(in_EAX + 0x24) + 4) + iVar2 * 4) != 0)) {\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00409c00(iVar4);\n    iVar4 = 0;\n    iVar3 = **(in_EAX + 0x24);\n    if (-1 < iVar3 + -1) {\n        iVar2 = 0;\n        do {\n            if (((*(*(*(in_EAX + 0x24) + 4) + iVar2 * 4) != 0) && (*(*(*(in_EAX + 0x24) + 4) + iVar2 * 4) != 1)) &&\n               (**(*(*(in_EAX + 0x24) + 4) + iVar2 * 4) != 0)) {\n                uVar1 = fcn.004537b4(&stack0xfffffffc);\n                *(*param_2 + iVar4 * 4) = uVar1;\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = iVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "00453988": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453988(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x453b98;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puVar2 = &stack0xfffffffc;\n    if (**0x4ba590 == 0) {\n        puStack60 = 0x4539c4;\n        fcn.0040554c();\n        puVar2 = puStack48;\n    }\n    puStack48 = puVar2;\n    puStack60 = 0x4539cb;\n    fcn.0040690c();\n    puStack60 = 0x4539d3;\n    fcn.00406688();\n    uStack64 = 0x453b65;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    if (*(*(arg_8h + -4) + 0x2c) != 0) {\n        puStack60 = &stack0xfffffffc;\n        fcn.00407210();\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x453b9f;\n        uStack64 = 0x453b81;\n        fcn.00407a20();\n        uStack64 = 0x453b89;\n        fcn.00407a20();\n        uStack64 = 0x453b97;\n        fcn.00409d24();\n        return;\n    }\n    uStack76 = 0x453a03;\n    puStack60 = &stack0xfffffffc;\n    fcn.004538e4(arg_8h);\n    var_ch = 0;\n    uStack76 = 0x453b09;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    uVar4 = fcn.004575a4();\n    uVar5 = fcn.00456724();\n    *(*(arg_8h + -4) + 0x28) = uVar5;\n    iVar6 = **(*(arg_8h + -4) + 0x24);\n    if (-1 < iVar6 + -1) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(*(arg_8h + -4) + 0x24) + 4) + iVar7 * 4);\n            if (piVar1 != NULL) {\n                if (piVar1 == 0x1) {\n                    var_ch = var_ch + 1;\n                }\n                else if (*piVar1 != 0) {\n                    fcn.00466fb8(0x453bb4, *(var_ch * 4));\n                    fcn.00466f58();\n                    uStack80 = 0;\n                    fcn.004087c4();\n                    cVar3 = fcn.00457838();\n                    if (cVar3 == '\\0') {\n                        fcn.004576bc();\n                    }\n                    cVar3 = fcn.004569d4();\n                    if (cVar3 == '\\0') {\n                        fcn.0045683c();\n                    }\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    *(*(arg_8h + -4) + 0x2c) = uVar4;\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x453b6c;\n    uStack64 = 0x453b64;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 968
    },
    "00453bb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453bb8(void)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c) == 0) {\n        fcn.00453988(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00453e4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00453e4c(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 8);\n    if (iVar1 != -4) {\n        if (iVar1 == -3) {\n            param_2 = param_2 + 6;\n        }\n        else if (iVar1 == -2) {\n            param_2 = param_2 + 5;\n        }\n        else if (iVar1 == -1) {\n            param_2 = param_2 + 4;\n        }\n        else {\n            param_2 = param_2 + iVar1 + 0x28;\n        }\n    }\n    if (*(in_EAX + 4) != '\\0') {\n        param_2 = *param_2;\n    }\n    return param_2;\n}\n",
        "token_count": 195
    },
    "00453e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453e80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    \n    puStack44 = 0x453e9d;\n    fcn.00408bb4();\n    uStack48 = 0x453f04;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*in_EAX == 0) {\n        puStack44 = &stack0xfffffffc;\n        fcn.00453e4c();\n        arg_8h = 0x453ee8;\n        fcn.0043d648();\n    }\n    else {\n        arg_8h = &fcn.00453e80::var_18h;\n        puStack44 = &stack0xfffffffc;\n        fcn.0043d174(arg_8h);\n        fcn.00453e4c(&fcn.00453e80::var_18h);\n        fcn.0043d648();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x453f0b;\n    iStack52 = 0x453f03;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 307
    },
    "004541b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004541b8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack64 = 0x4541da;\n    fcn.00408bb4();\n    uStack68 = 0x4542fb;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.00453c04();\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    uStack92 = 0x454250;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        uVar2 = fcn.00408c90();\n        (**(**(in_EAX + 0xc) + 0xc))(uVar2);\n        puVar1 = puStack88;\n    }\n    puStack88 = puVar1;\n    *in_FS_OFFSET = uStack96;\n    *in_FS_OFFSET = uStack84;\n    uStack84 = 0x4542b4;\n    fcn.00453cc0(&fcn.004541b8::var_20h);\n    if (*(*(in_EAX + 0x10) + 0x24) == '\\x04') {\n        *(param_2 + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "004544b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004544b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00454504();\n    if (*(iVar1 + 1) == -1) {\n        return 0;\n    }\n    if (*(in_EAX + 0x18) == 0) {\n        fcn.004543ac();\n    }\n    return *(in_EAX + 0x18);\n}\n",
        "token_count": 100
    },
    "004544dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004544dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00454504();\n    if (*(iVar1 + 3) == -1) {\n        return 0;\n    }\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004543ac();\n    }\n    return *(in_EAX + 0x1c);\n}\n",
        "token_count": 101
    },
    "004548ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004548ec(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = 0x454908;\n    fcn.00454b0c();\n    uStack44 = 0x454999;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x45491f;\n    puStack40 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack56 = 0x454971;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00454c10();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x454978;\n    if (piVar2 != NULL) {\n        uStack56 = 0x454970;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00454a0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454a0c(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x454aec;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x454a04;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "00454a70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454a70(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x454acf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045978c();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x454a64;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x454ad6;\n    uStack24 = 0x454ace;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 212
    },
    "00454cf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454cf8(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack40 = 0x454d1f;\n    puStack36 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack36 = 0x454d2a;\n    piVar3 = (***in_EAX)();\n    uStack40 = 0x454d84;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    while( true ) {\n        cVar2 = (**(*piVar3 + 4))();\n        if (cVar2 == '\\0') break;\n        (***piVar3)();\n        iVar1 = *param_1;\n        *(iVar1 + iVar4 * 8) = var_ch;\n        *(iVar1 + 4 + iVar4 * 8) = uStack12;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x454d8b;\n    if (piVar3 != NULL) {\n        uStack40 = 0x454d83;\n        (**(*piVar3 + -4))();\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00454db8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454db8(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x454dd4;\n    fcn.00459910();\n    uStack40 = 0x454e65;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x454deb;\n    puStack36 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack52 = 0x454e3d;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00459a14();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x454e44;\n    if (piVar2 != NULL) {\n        uStack52 = 0x454e3c;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "004552d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552d0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x4552e4;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x45534d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.00459ad4();\n        fcn.0040b494();\n    }\n    fcn.00454e74();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x455354;\n    uStack44 = 0x45534c;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 307
    },
    "004555e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004555e4(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x455608;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x455613;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x455664;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45566b;\n    if (piVar2 != NULL) {\n        uStack32 = 0x455663;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00455698": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455698(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4556b1;\n    fcn.00459c64();\n    uStack32 = 0x455742;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x4556c8;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x45571a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00459d68();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x455721;\n    if (piVar2 != NULL) {\n        uStack44 = 0x455719;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00455864": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455864(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x455888;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x455893;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x4558e4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4558eb;\n    if (piVar2 != NULL) {\n        uStack32 = 0x4558e3;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 339
    },
    "00455918": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455918(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x455931;\n    fcn.00459f70();\n    uStack32 = 0x4559c2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x455948;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x45599a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0045a074();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4559a1;\n    if (piVar2 != NULL) {\n        uStack44 = 0x455999;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "0045622c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045622c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x456249;\n    fcn.00408bb4();\n    uStack36 = 0x4562f9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x45626b;\n    puStack44 = param_2;\n    puStack32 = &stack0xfffffffc;\n    fcn.00409c00();\n    puStack44 = 0x456276;\n    piVar2 = (***in_EAX)();\n    uStack48 = 0x4562d6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4562dd;\n    if (piVar2 != NULL) {\n        uStack48 = 0x4562d5;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "0045632c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045632c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x456346;\n    fcn.00408bb4();\n    uStack36 = 0x456416;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x456360;\n    puStack32 = &stack0xfffffffc;\n    fcn.0045a8a0();\n    uStack48 = 0x4563f3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x456377;\n    puStack44 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack60 = 0x4563cb;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0045a9a4();\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x4563d2;\n    if (piVar2 != NULL) {\n        uStack60 = 0x4563ca;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "0045675c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045675c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x456770;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x4567d9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.0045aac4();\n        fcn.0040b494();\n    }\n    fcn.00456424();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4567e0;\n    uStack44 = 0x4567d8;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 308
    },
    "00456978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __fastcall fcn.00456978(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    if (param_1 != NULL) {\n        *param_1 = 0;\n    }\n    fcn.0045662c();\n    iVar1 = fcn.004565a4();\n    if (-1 < iVar1) {\n        fcn.00407e00();\n    }\n    else {\n        fcn.00407a20();\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 133
    },
    "00456a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456a60(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x456a84;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x456a8f;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x456ae0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x456ae7;\n    if (piVar2 != NULL) {\n        uStack32 = 0x456adf;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "00456b14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456b14(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x456b2d;\n    fcn.0045ac54();\n    uStack32 = 0x456bbe;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x456b44;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x456b96;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0045ad58();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x456b9d;\n    if (piVar2 != NULL) {\n        uStack44 = 0x456b95;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "00456ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456ce0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456d98;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x456d16;\n    puStack40 = param_2;\n    fcn.00409c00();\n    puStack40 = 0x456d21;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x456d7b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00407e00();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x456d82;\n    if (piVar2 != NULL) {\n        uStack44 = 0x456d7a;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "00456dcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456dcc(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456ea7;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x456df7;\n    fcn.0045af60();\n    uStack44 = 0x456e8a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x456e0e;\n    puStack40 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack56 = 0x456e62;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0045b064();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x456e69;\n    if (piVar2 != NULL) {\n        uStack56 = 0x456e61;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 419
    },
    "004570ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004570ac(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x4570c9;\n    fcn.00408bb4();\n    uStack36 = 0x457179;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x4570eb;\n    puStack44 = param_2;\n    puStack32 = &stack0xfffffffc;\n    fcn.00409c00();\n    puStack44 = 0x4570f6;\n    piVar2 = (***in_EAX)();\n    uStack48 = 0x457156;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x45715d;\n    if (piVar2 != NULL) {\n        uStack48 = 0x457155;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "004571ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004571ac(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x4571c6;\n    fcn.00408bb4();\n    uStack36 = 0x457296;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x4571e0;\n    puStack32 = &stack0xfffffffc;\n    fcn.0045b2c8();\n    uStack48 = 0x457273;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4571f7;\n    puStack44 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack60 = 0x45724b;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0045b3cc();\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x457252;\n    if (piVar2 != NULL) {\n        uStack60 = 0x45724a;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "004575dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004575dc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x4575f0;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x457659;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.00455ba4();\n        fcn.0040b494();\n    }\n    fcn.004572a4();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x457660;\n    uStack44 = 0x457658;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 304
    },
    "00457cac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457cac(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x457cc5;\n    fcn.00457ed4();\n    uStack32 = 0x457d56;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x457cdc;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x457d2e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00457fd8();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x457d35;\n    if (piVar2 != NULL) {\n        uStack44 = 0x457d2d;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "00457dcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457dcc(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x457ebc;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x457dc0;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 120
    },
    "00457e34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457e34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x457e9e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b6f8();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x457e24;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x457ea5;\n    uStack24 = 0x457e9d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 263
    },
    "00458380": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458380(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x458399;\n    fcn.004585a8();\n    uStack32 = 0x45842a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x4583b0;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x458402;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004586ac();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458409;\n    if (piVar2 != NULL) {\n        uStack44 = 0x458401;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "004584a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004584a0(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x458590;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x458494;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 119
    },
    "00458508": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458508(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x458572;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b74c();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4584f8;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x458579;\n    uStack24 = 0x458571;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 257
    },
    "00458808": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458808(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x458821;\n    fcn.00458a30();\n    uStack32 = 0x4588b2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x458838;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x45888a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00458b34();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458891;\n    if (piVar2 != NULL) {\n        uStack44 = 0x458889;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00458928": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458928(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x458a18;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x45891c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 120
    },
    "00458990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458990(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4589fa;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b76c();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x458980;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x458a01;\n    uStack24 = 0x4589f9;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 259
    },
    "00458c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458c90(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x458ca9;\n    fcn.00458eb8();\n    uStack32 = 0x458d3a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x458cc0;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x458d12;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00458fbc();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458d19;\n    if (piVar2 != NULL) {\n        uStack44 = 0x458d11;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "00458db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458db0(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x458ea0;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x458da4;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "00458e18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458e18(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x458e82;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b78c();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x458e08;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x458e89;\n    uStack24 = 0x458e81;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 260
    },
    "00459118": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459118(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x459131;\n    fcn.00459340();\n    uStack32 = 0x4591c2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x459148;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x45919a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00459444();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4591a1;\n    if (piVar2 != NULL) {\n        uStack44 = 0x459199;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00459238": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459238(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x459328;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x45922c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 119
    },
    "004592a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004592a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45930a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b7ac();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x459290;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459311;\n    uStack24 = 0x459309;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 257
    },
    "00459810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459810(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4598f0;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x459808;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 120
    },
    "00459874": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459874(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4598d3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b800();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x459868;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4598da;\n    uStack24 = 0x4598d2;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 214
    },
    "00459b5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459b5c(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x459c4c;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x459b50;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "00459bc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459bc4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x459c2e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b820();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x459bb4;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459c35;\n    uStack24 = 0x459c2d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 261
    },
    "00459e68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459e68(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x459f58;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x459e5c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "00459ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459ed0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x459f3a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045b840();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x459ec0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459f41;\n    uStack24 = 0x459f39;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 260
    },
    "0045a7a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a7a0(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x45a880;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x45a798;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "0045a804": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a804(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45a863;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045bae4();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x45a7f8;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45a86a;\n    uStack24 = 0x45a862;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 218
    },
    "0045ab4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ab4c(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x45ac3c;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x45ab40;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "0045abb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045abb4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45ac1e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045bb04();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x45aba4;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45ac25;\n    uStack24 = 0x45ac1d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 261
    },
    "0045ae58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ae58(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x45af48;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x45ae4c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0045aec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045aec0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45af2a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045bb24();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x45aeb0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45af31;\n    uStack24 = 0x45af29;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 261
    },
    "0045b1c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b1c8(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x45b2a8;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x45b1c0;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "0045b22c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b22c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45b28b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.0045bb44();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x45b220;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45b292;\n    uStack24 = 0x45b28a;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 217
    },
    "0045b4ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b4ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < arg_8h) {\n        do {\n            iVar3 = arg_ch;\n            arg_8h_00 = arg_8h;\n            if (arg_8h - arg_ch == 1) {\n                iVar3 = (**(*in_ECX + 0xc))();\n                if (iVar3 < 1) {\n                    return;\n                }\n                uVar1 = *(in_EAX + arg_ch * 4);\n                *(in_EAX + arg_ch * 4) = *(in_EAX + arg_8h * 4);\n                *(in_EAX + arg_8h * 4) = uVar1;\n                return;\n            }\n            do {\n                while (iVar4 = (**(*in_ECX + 0xc))(),  iVar4 < 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                while (iVar4 = (**(*in_ECX + 0xc))(),  0 < iVar4) {\n                    arg_8h_00 = arg_8h_00 + -1;\n                }\n                if (iVar3 <= arg_8h_00) {\n                    if (arg_8h_00 != iVar3) {\n                        uVar1 = *(in_EAX + iVar3 * 4);\n                        *(in_EAX + iVar3 * 4) = *(in_EAX + arg_8h_00 * 4);\n                        *(in_EAX + arg_8h_00 * 4) = uVar1;\n                    }\n                    iVar3 = iVar3 + 1;\n                    arg_8h_00 = arg_8h_00 + -1;\n                }\n            } while (iVar3 <= arg_8h_00);\n            if (arg_8h - iVar3 < arg_8h_00 - arg_ch) {\n                iVar4 = arg_8h_00;\n                iVar2 = arg_ch;\n                if (iVar3 < arg_8h) {\n                    fcn.0045b4ec(arg_8h, iVar3);\n                }\n            }\n            else {\n                iVar4 = arg_8h;\n                iVar2 = iVar3;\n                if (arg_ch < arg_8h_00) {\n                    fcn.0045b4ec(arg_8h_00, arg_ch);\n                }\n            }\n            arg_ch = iVar2;\n            arg_8h = iVar4;\n        } while (arg_ch < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 642
    },
    "0045b718": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b718(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "0045b7cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b7cc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 60
    },
    "0045b860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b860(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "0045b894": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b894(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "0045b8c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b8c8(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 61
    },
    "0045b8fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b8fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 60
    },
    "0045b930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b930(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "0045b964": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b964(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    if (*in_EAX == 0) {\n        fcn.00405884();\n    }\n    else {\n        fcn.0043d648();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0045b9a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b9a4(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    if (*in_EAX == 0) {\n        fcn.00405884();\n    }\n    else {\n        fcn.0043d648();\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0045b9e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b9e4(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != NULL) {\n        param_2[3] = 0;\n        param_2[2] = 0;\n        param_2[1] = 0;\n        *param_2 = 0;\n    }\n    if (*in_EAX == 0) {\n        fcn.00405884();\n    }\n    else {\n        fcn.0043d648();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0045ba30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ba30(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "0045ba64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045ba64(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "0045ba98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ba98(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != NULL) {\n        param_2[3] = 0;\n        param_2[2] = 0;\n        param_2[1] = 0;\n        *param_2 = 0;\n    }\n    if (*in_EAX == 0) {\n        fcn.00405884();\n    }\n    else {\n        fcn.0043d648();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0045bb64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bb64(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*in_EAX == 0) {\n        fcn.00405884();\n        return;\n    }\n    fcn.0043d648();\n    return;\n}\n",
        "token_count": 59
    },
    "00467330": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467330(uint param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x467424;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*in_EAX == '\\x01') {\n        puStack24 = &stack0xfffffffc;\n        fcn.00419e08();\n    }\n    else {\n        fcn.00467260();\n        iVar1 = fcn.00467260();\n        if ((in_EAX == *0x401000) || (*(iVar1 + 1) < 0)) {\n            fcn.00407e00();\n            if (**0x4ba74c == 0x467440) {\n                bVar2 = true;\n            }\n            else if (**0x4ba74c == 0) {\n                bVar2 = false;\n            }\n            else {\n                iVar1 = fcn.00419780();\n                bVar2 = iVar1 == 0;\n            }\n            if (bVar2) {\n                fcn.00419630();\n                fcn.00407e00();\n            }\n        }\n        else {\n            if (param_2 != 0) {\n                do {\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n            }\n            fcn.0046729c();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46742b;\n    uStack28 = 0x467423;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 420
    },
    "0046784c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046784c(int32_t param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iStack12;\n    \n    iStack12 = param_1;\n    if (*in_EAX == '\\x01') {\n        uVar1 = fcn.0041a1a0();\n    }\n    else {\n        iVar2 = fcn.00467260();\n        if (*(iVar2 + 1) < 0) {\n            if (param_2 == *0x4b9dd4) {\n                bVar3 = true;\n            }\n            else if ((param_2 == 0) || (*0x4b9dd4 == 0)) {\n                bVar3 = false;\n            }\n            else {\n                iVar2 = fcn.00419780();\n                bVar3 = iVar2 == 0;\n            }\n            if (bVar3) {\n                uVar1 = 0;\n            }\n            else {\n                if (param_2 == *0x4b9dd8) {\n                    bVar3 = true;\n                }\n                else if ((param_2 == 0) || (*0x4b9dd8 == 0)) {\n                    bVar3 = false;\n                }\n                else {\n                    iStack12 = *0x4b9dd8;\n                    iVar2 = fcn.00419780();\n                    bVar3 = iVar2 == 0;\n                }\n                if (bVar3) {\n                    uVar1 = 0xffffffff;\n                }\n                else {\n                    uVar1 = fcn.0041a1a0();\n                }\n            }\n        }\n        else {\n            uVar1 = fcn.004677e4();\n        }\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 412
    },
    "00467a04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00467a04(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = param_2;\n    for (uVar2 = *(in_EAX + 10 + *(in_EAX + 1)); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    while( true ) {\n        iVar1 = in_EAX + 2 + (uVar2 & 0xffffff00 | *(in_EAX + 1));\n        uVar3 = uVar2 & 0xffffff00 | *(iVar1 + 10);\n        uVar2 = *(iVar1 + 0xb + uVar3);\n        if (uVar2 != 0) {\n            iVar5 = iVar1 + 0xd + uVar3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(iVar5 + 0x1a);\n                if (param_2[*(iVar5 + 0x18)] == 0) {\n                    param_2[*(iVar5 + 0x18)] = iVar5;\n                }\n                iVar5 = iVar5 + 0x1b + uVar3;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar2 = 0;\n        if (*(iVar1 + 4) == NULL) break;\n        in_EAX = **(iVar1 + 4);\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00467a88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00467a88(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int16_t iVar8;\n    uint16_t uStack76;\n    char *pcStack48;\n    char *pcStack44;\n    int32_t iStack40;\n    char *pcStack36;\n    char *pcStack32;\n    char **ppcStack28;\n    char **ppcStack24;\n    char cStack20;\n    \n    iVar2 = *(*in_EAX + -0x48);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        puVar4 = iVar2 + 1;\n        uVar1 = *puVar4;\n        puVar5 = puVar4 + uVar1 + 0xb;\n        piVar6 = puVar5 + *puVar5 + 3;\n        for (iVar8 = *(puVar5 + *puVar5 + 1); iVar8 != 0; iVar8 = iVar8 + -1) {\n            piVar6 = piVar6 + 0xd + *(piVar6 + 0xd) + 1;\n        }\n        piVar7 = piVar6 + 1;\n        for (iVar8 = *piVar6; iVar8 != 0; iVar8 = iVar8 + -1) {\n            pcStack48 = *(piVar7 + 1) + 0x1a;\n            pcStack36 = param_2 + 0x1a;\n            ppcStack28 = &pcStack48;\n            ppcStack24 = &pcStack36;\n            if ((*pcStack48 == *pcStack36) &&\n               (pcStack44 = pcStack48,  iStack40 = param_2,  pcStack32 = pcStack36,  cVar3 = fcn.004196ec(), \n               cVar3 != '\\0')) {\n                cStack20 = '\\x01';\n            }\n            else {\n                cStack20 = '\\0';\n            }\n            if (cStack20 == '\\0') {\n                uStack76 = *(piVar7 + 5);\n            }\n            else {\n                uStack76 = *(piVar7 + 5);\n                if (uStack76 != 2) {\n                    return CONCAT31(uStack76 >> 8, 1);\n                }\n            }\n            piVar7 = piVar7 + uStack76 + 5;\n        }\n        if (*(puVar4 + uVar1 + 5) == 0) break;\n        iVar2 = **(puVar4 + uVar1 + 5);\n    }\n    return 0;\n}\n",
        "token_count": 651
    },
    "0046812c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046812c(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "00484664": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00484664(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.0049d808();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00431524();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack40;\n    }\n    return in_EAX;\n}\n",
        "token_count": 205
    },
    "00484708": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00484708(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.0049d178();\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0049d178();\n    }\n    return 0;\n}\n",
        "token_count": 78
    },
    "00484744": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00484744(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint32_t uStack112;\n    uint *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint lpBuffer;\n    uint32_t var_44h;\n    int32_t var_3ch;\n    uint var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint32_t lpAddress;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puStack92 = 0x484760;\n    var_ch = in_EAX;\n    fcn.00408bb4();\n    uStack96 = 0x4849e2;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    if (param_2 == 0) {\n        uStack104 = 0x4849a8;\n        puStack92 = &stack0xfffffffc;\n        fcn.00431630();\n        if (*(var_ch + 4) != 0) {\n            uStack104 = 0x4849b7;\n            fcn.0049d0a0();\n        }\n        if (*(var_ch + 8) != 0) {\n            uStack104 = 0x4849c6;\n            fcn.0049d0a0();\n        }\n    }\n    else {\n        uStack104 = 0x484784;\n        puStack92 = &stack0xfffffffc;\n        lpAddress = param_2;\n        var_14h = param_2;\n        uVar5 = sub.kernel32.dll_GetCurrentProcess();\n        while( true ) {\n            uStack104 = 0x1c;\n            puStack108 = &fcn.00484744::lpBuffer;\n            uStack112 = lpAddress;\n            puStack120 = 0x4847a1;\n            uStack100 = uVar5;\n            iVar6 = sub.kernel32.dll_VirtualQueryEx();\n            if ((iVar6 != 0x1c) || (var_44h != var_14h)) break;\n            lpAddress = lpAddress + var_3ch;\n        }\n        bVar2 = false;\n        uVar7 = *(*(var_ch + 0xc) + 8) - 1;\n        bVar3 = false;\n        if (-1 < uVar7) {\n            do {\n                bVar2 = bVar3;\n                iVar6 = *(var_ch + 0xc);\n                if (*(iVar6 + 8) <= uVar7) {\n                    puStack120 = 0x4847d1;\n                    fcn.00431010();\n                }\n                uVar1 = *(*(iVar6 + 4) + uVar7 * 4);\n                if ((var_14h <= uVar1) && (uVar1 < lpAddress)) {\n                    var_24h = 0;\n                    puStack120 = 0x4847fb;\n                    fcn.004310bc();\n                    bVar2 = true;\n                }\n                uVar7 = uVar7 - 1;\n                bVar3 = bVar2;\n            } while (uVar7 != 0xffffffff);\n        }\n        if (bVar2) {\n            puStack120 = 0x484812;\n            fcn.0049d91c();\n        }\n        if (*(var_ch + 4) != 0) {\n            puStack120 = 0x484838;\n            var_10h = fcn.0049cf24();\n            puStack120 = 0x484846;\n            var_1ch = fcn.0049d210();\n            uStack124 = 0x4848ab;\n            uStack128 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            puStack120 = &stack0xfffffffc;\n            while (cVar4 = fcn.0049d660(),  cVar4 != '\\0') {\n                fcn.0049d5cc();\n                if ((var_4h < var_14h) || (lpAddress <= var_4h)) {\n                    fcn.0049d03c();\n                }\n            }\n            *in_FS_OFFSET = uStack128;\n            puStack120 = 0x4848b2;\n            if (var_1ch != NULL) {\n                uStack124 = 0x4848aa;\n                (**(*var_1ch + -4))();\n            }\n            return;\n        }\n        if (*(var_ch + 8) != 0) {\n            puStack120 = 0x4848fb;\n            var_10h = fcn.0049cf24();\n            puStack120 = 0x484909;\n            var_20h = fcn.0049d210();\n            uStack124 = 0x48496e;\n            uStack128 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            puStack120 = &stack0xfffffffc;\n            while (cVar4 = fcn.0049d660(),  cVar4 != '\\0') {\n                fcn.0049d5cc();\n                if ((var_4h < var_14h) || (lpAddress <= var_4h)) {\n                    fcn.0049d03c();\n                }\n            }\n            *in_FS_OFFSET = uStack128;\n            puStack120 = 0x484975;\n            if (var_20h != NULL) {\n                uStack124 = 0x48496d;\n                (**(*var_20h + -4))();\n            }\n            return;\n        }\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x4849e9;\n    uStack96 = 0x4849e1;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 1398
    },
    "004849f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.004849f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.0049de40();\n    *(in_EAX + 4) = uVar1;\n    iVar2 = fcn.00484664();\n    fcn.00431524();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 237
    },
    "00484a98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00484a98(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iStack20;\n    \n    iStack20 = 0;\n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        uVar2 = 0;\n        do {\n            iVar1 = *(in_EAX + 4);\n            if (*(iVar1 + 8) <= uVar2) {\n                fcn.00431010(param_2);\n            }\n            if (*(*(*(iVar1 + 4) + uVar2 * 4) + 0x10) != '\\0') {\n                if (*(*(in_EAX + 4) + 8) <= uVar2) {\n                    fcn.00431010(param_2);\n                }\n                iStack20 = fcn.00484708();\n            }\n            if (iStack20 != 0) break;\n            uVar2 = uVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 286
    },
    "00484b0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484b0c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*(in_EAX + 4) + 8) - 1;\n    if (-1 < uVar2) {\n        do {\n            iVar1 = *(in_EAX + 4);\n            if (*(iVar1 + 8) <= uVar2) {\n                fcn.00431010();\n            }\n            iVar1 = *(*(iVar1 + 4) + uVar2 * 4);\n            fcn.00484744();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00431eec();\n            }\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00484b90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00484b90(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x484bb1;\n    fcn.004065e0();\n    uStack36 = 0x484c1c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        uVar2 = 0;\n        puStack32 = &stack0xfffffffc;\n        do {\n            if (*(*(in_EAX + 4) + 8) <= uVar2) {\n                fcn.00431010();\n            }\n            iVar1 = fcn.00484708();\n            if (iVar1 != 0) {\n                fcn.00407210();\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x484c23;\n    uStack36 = 0x484c1b;\n    iVar3 = fcn.00406868();\n    return iVar3;\n}\n",
        "token_count": 351
    },
    "00486610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00486610(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x486628;\n    iVar2 = fcn.0049df80();\n    uStack28 = 0x486686;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uVar4 = *(iVar2 + 8) - 1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < uVar4) {\n        do {\n            if (*(iVar2 + 8) <= uVar4) {\n                fcn.00431010();\n            }\n            iVar1 = *(*(iVar2 + 4) + uVar4 * 4);\n            if (in_EAX == *(iVar1 + 4)) {\n                uVar3 = *(iVar1 + 0xc);\n                fcn.00407210();\n                return uVar3;\n            }\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0xffffffff);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x48668d;\n    uStack28 = 0x486685;\n    uVar3 = fcn.00406868();\n    return uVar3;\n}\n",
        "token_count": 345
    },
    "00486698": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00486698(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4866b0;\n    iVar2 = fcn.0049df80();\n    uStack28 = 0x48670e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uVar4 = *(iVar2 + 8) - 1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < uVar4) {\n        do {\n            if (*(iVar2 + 8) <= uVar4) {\n                fcn.00431010();\n            }\n            iVar1 = *(*(iVar2 + 4) + uVar4 * 4);\n            if (in_EAX == *(iVar1 + 4)) {\n                uVar3 = *(iVar1 + 8);\n                fcn.00407210();\n                return uVar3;\n            }\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0xffffffff);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x486715;\n    uStack28 = 0x48670d;\n    uVar3 = fcn.00406868();\n    return uVar3;\n}\n",
        "token_count": 347
    },
    "00486720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00486720(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = 0;\n    if ((*0x4c1c24 != 0) && (uVar2 = *(*0x4c1c24 + 8) - 1,  -1 < uVar2)) {\n        do {\n            if (*(*0x4c1c24 + 8) <= uVar2) {\n                fcn.00431010();\n            }\n            iVar1 = (**(*(*0x4c1c24 + 4) + uVar2 * 4))();\n        } while ((iVar1 == 0) && (uVar2 = uVar2 - 1,  uVar2 != 0xffffffff));\n    }\n    return iVar1;\n}\n",
        "token_count": 182
    },
    "0048a8c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048a8c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x4c1c28 == 0) {\n        iVar1 = fcn.0048a924();\n        iVar2 = 0;\n        LOCK();\n        if (*0x4c1c28 != 0) {\n            iVar2 = *0x4c1c28;\n            iVar1 = *0x4c1c28;\n        }\n        *0x4c1c28 = iVar1;\n        if (iVar2 == 0) {\n            fcn.0040b300();\n        }\n        else {\n            fcn.00405ce8();\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0048a9b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048a9b0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    if (**0x4ba590 == 0) {\n        puStack12 = 0x48a9c8;\n        fcn.0040554c();\n    }\n    puStack12 = 0x48a9d0;\n    fcn.0040690c();\n    puStack12 = 0x48a9d8;\n    fcn.00406688();\n    uStack16 = 0x48aa07;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    fcn.0049f73c();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x48aa0e;\n    uStack16 = 0x48aa06;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 233
    },
    "0048aa14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048aa14(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x48aadb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0048a82c();\n    fcn.0049f6b8();\n    while ((param_2 != 0 && (param_2 != *0x475c50))) {\n        if ((*(param_2 + -0x44) != NULL) && (uVar1 = **(param_2 + -0x44),  -1 < uVar1 - 1)) {\n            do {\n                fcn.00467020();\n                fcn.00466f58();\n                fcn.0049eac0();\n                fcn.00467020();\n                fcn.00466fa8();\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n        }\n        param_2 = fcn.00405c7c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x48aae2;\n    uStack48 = 0x48aada;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 364
    },
    "0048aaec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048aaec(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0xffffffff;\n    puStack64 = 0x48ab0a;\n    piVar2 = fcn.0049f8ac();\n    uStack68 = 0x48ab60;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.0049fe44();\n        if (cVar1 == '\\0') break;\n        fcn.0049fdbc();\n        if (*(var_8h + 4) < var_10h) {\n            var_10h = *(var_8h + 4);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x48ab67;\n    if (piVar2 != NULL) {\n        uStack68 = 0x48ab5f;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0048acec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048acec(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x48ae23;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (*(in_EAX + 8) == 0) {\n        puStack48 = 0x48ad23;\n        puStack36 = &stack0xfffffffc;\n        fcn.00406288();\n    }\n    else {\n        uVar2 = param_1 == 0;\n        if (!uVar2) {\n            puStack48 = 0x48ad43;\n            fcn.00405be8();\n            puStack48 = 0x48ad50;\n            fcn.00408874();\n            if (!uVar2) {\n                if (**0x4ba590 == 0) {\n                    puStack48 = 0x48ad6a;\n                    fcn.0040554c();\n                }\n                puStack48 = 0x48ad72;\n                fcn.0040690c();\n                puStack48 = 0x48ad7a;\n                fcn.00406688();\n                uStack52 = 0x48ade7;\n                uStack56 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc8;\n                puStack48 = &stack0xfffffffc;\n                cVar1 = fcn.0049f814();\n                if (cVar1 == '\\0') {\n                    if (*(in_EAX + 8) <= *(*(in_EAX + 4) + 8)) {\n                        fcn.0048aaec();\n                    }\n                    var_10h = fcn.0048aa14();\n                }\n                if (*(var_10h + 4) != -1) {\n                    *(var_10h + 4) = *(var_10h + 4) + 1;\n                }\n                *in_FS_OFFSET = uStack56;\n                puStack48 = 0x48adee;\n                uStack52 = 0x48ade6;\n                fcn.00406868();\n                return;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48ae2a;\n    uStack40 = 0x48ae22;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 628
    },
    "0048cbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048cc3f)\n\nvoid fcn.0048cbf0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48cc6b;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00405be8();\n    iVar1 = fcn.00405fd0();\n    if (iVar1 != 0) {\n        fcn.00405fd0();\n        fcn.00405fd0();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    fcn.00407a20(0x48cc72);\n    return;\n}\n",
        "token_count": 208
    },
    "0048cd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048cda3)\n\nvoid fcn.0048cd70(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48cdc5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0040b47c();\n    fcn.0048cc8c();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x48cdcc;\n    uStack28 = 0x48cdc4;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 177
    },
    "0048cea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048cea8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x48cf29;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*(in_EAX + 4) == 0) {\n        param_2 = 0x48cf13;\n        fcn.00405be8();\n    }\n    else {\n        puStack40 = &stack0xfffffffc;\n        fcn.00405fd0();\n        fcn.0048ce68();\n        fcn.0041a894(param_2);\n    }\n    *in_FS_OFFSET = param_2;\n    uStack44 = 0x48cf30;\n    uStack48 = 0x48cf28;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 267
    },
    "0048d038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d038(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48d055;\n    cVar1 = fcn.00405f30();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x48d065;\n        (**(*in_EAX + 0x20))();\n        uStack36 = 0x48d0ed;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00405ce8();\n        }\n        var_ch = *(*(param_2 + 8) + 8);\n        if (-1 < var_ch + -1) {\n            uVar3 = 0;\n            do {\n                piVar2 = fcn.0048d018();\n                if (*(*(param_2 + 8) + 8) <= uVar3) {\n                    fcn.00431010();\n                }\n                (**(*piVar2 + 8))();\n                uVar3 = uVar3 + 1;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x48d0ff;\n        uStack36 = 0x48d0ec;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    puStack32 = 0x48d0ff;\n    fcn.0048cb14();\n    return;\n}\n",
        "token_count": 449
    },
    "0048d11c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048d11c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack24 = 0x48d13a;\n        (**(*in_EAX + 0x20))();\n        uStack28 = 0x48d17f;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00405ce8();\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x48d186;\n        uStack28 = 0x48d17e;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0048d1fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048d24d)\n// WARNING: Removing unreachable block (ram,0x0048d25d)\n\nvoid fcn.0048d1fc(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x48d28f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.00405be8();\n    iVar1 = fcn.00405fd0();\n    if (iVar1 != 0) {\n        fcn.00405fd0();\n        fcn.00405fd0();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00407a80(0x48d296);\n    return;\n}\n",
        "token_count": 232
    },
    "0048d2b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d2b0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    bool bVar6;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x48d3ed;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x48d2e0;\n    fcn.00407e00();\n    puStack48 = 0x48d2ec;\n    piVar1 = fcn.00405fd0();\n    if ((*param_2 == 0) && (piVar1 != NULL)) {\n        bVar6 = *(*piVar1 + -0x48) == 0;\n    }\n    else {\n        bVar6 = true;\n    }\n    if (!bVar6) {\n        puStack48 = 0x48d31d;\n        iVar2 = fcn.00467260();\n        if ((iVar2 != 0) && (*(iVar2 + 8) != 0)) {\n            puStack48 = 0x48d33f;\n            iVar3 = fcn.004053f0();\n            uStack52 = 0x48d3c2;\n            uStack56 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc8;\n            puStack48 = &stack0xfffffffc;\n            fcn.00467a04();\n            iVar2 = *(iVar2 + 8);\n            if (-1 < iVar2 + -1) {\n                iVar5 = 0;\n                do {\n                    if (****(iVar3 + iVar5 * 4) == '\\a') {\n                        iVar4 = fcn.0046812c();\n                        if (iVar4 == in_EAX) {\n                            fcn.0046723c();\n                            fcn.00407e00();\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            *in_FS_OFFSET = uStack56;\n            puStack48 = 0x48d3c9;\n            uStack52 = 0x48d3c1;\n            fcn.0040540c();\n            return;\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48d3f4;\n    uStack40 = 0x48d3ec;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 667
    },
    "0048d634": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048d634(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0048d64c:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0048d676;\n            }\n            else if (arg_ch < 1) goto code_r0x0048d676;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0048d64c;\n    fcn.0041f338();\n    fcn.0040711c();\n    in_EAX = extraout_ECX;\ncode_r0x0048d676:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 213
    },
    "0048d6fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d6fc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = &var_20h;\n    var_8h = *(*in_EAX + 0x28);\n    var_20h = *in_EAX;\n    unique0x10000065 = param_2;\n    var_14h = in_EAX;\n    while ((var_20h != 0 && (var_20h != *0x46e368))) {\n        var_20h = fcn.00405c7c();\n    }\n    if (var_20h == 0) {\n        fcn.0048d688(&stack0xfffffffc);\n    }\n    var_10h = *(var_20h + 0x28);\n    if (var_8h == var_10h) {\n        fcn.0048d688(&stack0xfffffffc);\n    }\n    (**(*var_14h + 0x28))(stack0xffffffe4, stack0xffffffe4 >> 0x1f);\n    return;\n}\n",
        "token_count": 305
    },
    "0048d780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0048d780(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0048d79f:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0048d7c9;\n            }\n            else if (arg_ch < 1) goto code_r0x0048d7c9;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0048d79f;\n    fcn.0041f338();\n    fcn.0040711c();\ncode_r0x0048d7c9:\n    iVar1 = (**(*in_EAX + 0x24))();\n    return iVar1;\n}\n",
        "token_count": 229
    },
    "0048d870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048d870(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = 0x48d885;\n    fcn.00409da4();\n    uStack36 = 0x48d938;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    do {\n        if (arg_ch == 0) {\n            if (arg_8h < 0x20000000) break;\n        }\n        else if (arg_ch < 0) break;\n        (**(*in_EAX + 0xc))();\n        bVar1 = arg_8h < 0x20000000;\n        arg_8h = arg_8h + 0xe0000000;\n        arg_ch = arg_ch - bVar1;\n    } while( true );\n    if (arg_ch == 0) {\n        if (arg_8h == 0) goto code_r0x0048d91c;\n    }\n    else if (arg_ch < 1) goto code_r0x0048d91c;\n    (**(*in_EAX + 0xc))();\ncode_r0x0048d91c:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48d93f;\n    uStack36 = 0x48d937;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 399
    },
    "0048d950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0048d950(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    do {\n        if (arg_ch == 0) {\n            if (arg_8h < 0x20000000) break;\n        }\n        else if (arg_ch < 0) break;\n        uVar1 = (**(*in_EAX + 0x10))();\n        bVar2 = CARRY4(uVar1, var_8h);\n        var_8h = uVar1 + var_8h;\n        var_4h = (uVar1 >> 0x1f) + var_4h + bVar2;\n        bVar2 = arg_8h < 0x20000000;\n        arg_8h = arg_8h + 0xe0000000;\n        arg_ch = arg_ch - bVar2;\n    } while( true );\n    if (arg_ch == 0) {\n        if (arg_8h == 0) goto code_r0x0048d9e2;\n    }\n    else if (arg_ch < 1) goto code_r0x0048d9e2;\n    uVar1 = (**(*in_EAX + 0x10))();\n    bVar2 = CARRY4(uVar1, var_8h);\n    var_8h = uVar1 + var_8h;\n    var_4h = (uVar1 >> 0x1f) + var_4h + bVar2;\ncode_r0x0048d9e2:\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 429
    },
    "0048de18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0048de18(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if ((in_EAX[3] < 0) || (arg_8h < 0)) {\n        return 0;\n    }\n    uVar1 = in_EAX[3] + arg_8h;\n    iVar2 = uVar1 >> 0x1f;\n    if (uVar1 < 0) {\n        if (iVar2 < 1) {\n            return 0;\n        }\n    }\n    else if (uVar1 == 0) {\n        return 0;\n    }\n    iVar3 = in_EAX[2] >> 0x1f;\n    if (iVar3 == iVar2) {\n        if (uVar1 <= in_EAX[2]) goto code_r0x0048de85;\n    }\n    else if (iVar2 <= iVar3) goto code_r0x0048de85;\n    iVar3 = in_EAX[4] >> 0x1f;\n    if (iVar3 == iVar2) {\n        if (in_EAX[4] < uVar1) {\ncode_r0x0048de75:\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    else if (iVar3 < iVar2) goto code_r0x0048de75;\n    in_EAX[2] = uVar1;\ncode_r0x0048de85:\n    fcn.004055b4();\n    in_EAX[3] = uVar1;\n    return arg_8h;\n}\n",
        "token_count": 394
    },
    "0048deb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0048deb0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0xc) = arg_8h;\n    fcn.00409c00(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 221
    },
    "0048fa40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0048fa40(void)\n\n{\n    int16_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    uVar2 = 0;\n    piVar1 = fcn.004084ec();\n    for (piVar4 = piVar1; (*piVar4 != 0 && (*piVar4 != 0x2e)); piVar4 = piVar4 + 1) {\n    }\n    if (*piVar4 != 0) {\n        iVar3 = piVar4 - piVar1 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((piVar4 - piVar1 & 1U) != 0);\n        }\n        fcn.00407ba8();\n        fcn.004088f4();\n        uVar2 = CONCAT31(iVar3 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "0048fb40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048fbc6)\n// WARNING: Removing unreachable block (ram,0x0048fbd2)\n// WARNING: Removing unreachable block (ram,0x0048fbfa)\n\nvoid __fastcall fcn.0048fb40(uint param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x48fc45;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (param_2 != 0) {\n        piVar1 = fcn.004084ec();\n        while (*piVar1 != 0) {\n            for (; (*piVar1 != 0 && (1 < *piVar1 - 0x2dU)); piVar1 = piVar1 + 1) {\n            }\n            fcn.00407ba8();\n            iVar2 = fcn.00498958();\n            if (iVar2 == 0) break;\n            if (*piVar1 == 0x2e) {\n                piVar1 = piVar1 + 1;\n            }\n            if (*piVar1 == 0x2d) {\n                piVar1 = piVar1 + 1;\n            }\n            if (*piVar1 == 0x3e) {\n                piVar1 = piVar1 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48fc4c;\n    uStack40 = 0x48fc44;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 423
    },
    "0048fc70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048fc70(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    bool bVar4;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4c1c30 != 0) {\n        puStack32 = 0x48fc96;\n        iVar1 = fcn.004a04b0();\n        uStack36 = 0x48fd43;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        uVar3 = *(iVar1 + 8) - 1;\n        puStack32 = &stack0xfffffffc;\n        if (-1 < uVar3) {\n            do {\n                if (*(iVar1 + 8) <= uVar3) {\n                    fcn.00431010();\n                }\n                iVar2 = *(*(iVar1 + 4) + uVar3 * 4);\n                if ((in_EAX == 0) || (*(iVar2 + 8) == in_EAX)) {\n                    if (param_2 == 0) {\n                        bVar4 = true;\n                    }\n                    else {\n                        iVar2 = *(iVar2 + 0x10);\n                        if (param_2 == iVar2) {\n                            bVar4 = true;\n                        }\n                        else if ((param_2 == 0) || (iVar2 == 0)) {\n                            bVar4 = false;\n                        }\n                        else {\n                            iVar2 = fcn.00419780();\n                            bVar4 = iVar2 == 0;\n                        }\n                    }\n                    if (bVar4) {\n                        fcn.00431eec();\n                        fcn.00405ce8();\n                    }\n                }\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0xffffffff);\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x48fd4a;\n        uStack36 = 0x48fd42;\n        fcn.00406868();\n        return;\n    }\n    return;\n}\n",
        "token_count": 511
    },
    "0048fd54": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048fd54(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4c1c30 != 0) {\n        puStack24 = 0x48fd71;\n        iVar1 = fcn.004a04b0();\n        uStack28 = 0x48fdd8;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = *(iVar1 + 8) - 1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < uVar2) {\n            do {\n                if (*(iVar1 + 8) <= uVar2) {\n                    fcn.00431010();\n                }\n                if (*(*(*(iVar1 + 4) + uVar2 * 4) + 4) == in_EAX) {\n                    fcn.00431eec();\n                    fcn.00405ce8();\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0xffffffff);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x48fddf;\n        uStack28 = 0x48fdd7;\n        fcn.00406868();\n        return;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0048fe94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048fe94(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    bool bVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX == *(in_EAX + 0x80)) {\n        bVar2 = true;\n    }\n    else if ((in_EDX == 0) || (*(in_EAX + 0x80) == 0)) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = fcn.00419780();\n        bVar2 = iVar1 == 0;\n    }\n    if ((bVar2) && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00407a20();\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0048fefc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048fefc(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX == *(in_EAX + 0x80)) {\n        bVar3 = true;\n    }\n    else if ((in_EDX == 0) || (*(in_EAX + 0x80) == 0)) {\n        bVar3 = false;\n    }\n    else {\n        puStack32 = 0x48ff33;\n        iVar2 = fcn.00419780();\n        bVar3 = iVar2 == 0;\n    }\n    if ((bVar3) && (arg_10h._2_2_ != 0)) {\n        puStack32 = 0x48ff53;\n        cVar1 = fcn.00492038();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack32 = 0x48ff65;\n            fcn.00492174();\n            *(in_EAX + 0x88) = 1;\n            puStack32 = 0x48ff74;\n            fcn.0048fde8();\n        }\n        puStack32 = 0x48ff80;\n        fcn.00405cb8();\n        uStack36 = 0x48ffea;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0049043c();\n        fcn.0048d620(var_ch, 0);\n        fcn.0049043c();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = var_ch;\n        uStack40 = 0x48fff1;\n        fcn.00405ce8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "00490040": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00490040(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        iVar1 = fcn.004061a0();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00490100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00490100(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x490113;\n    iVar2 = fcn.004a04b0();\n    uStack24 = 0x490186;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uVar3 = *(iVar2 + 8) - 1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < uVar3) {\n        do {\n            if (*(iVar2 + 8) <= uVar3) {\n                fcn.00431010();\n            }\n            iVar1 = *(*(iVar2 + 4) + uVar3 * 4);\n            if ((*(iVar1 + 4) == *(in_EAX + 4)) && (*(iVar1 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00405ce8();\n                fcn.00431eec();\n            }\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0xffffffff);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49018d;\n    uStack24 = 0x490185;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 347
    },
    "00490194": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00490194(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x4902f0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x4902f7;\n        uStack44 = 0x4902ef;\n        fcn.00407a20();\n        return;\n    }\n    uStack56 = 0x4902d3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_10h = *(iVar1 + 8);\n    if (-1 < var_10h + -1) {\n        uVar4 = 0;\n        puStack40 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        do {\n            iVar1 = var_8h[0xc];\n            if (*(iVar1 + 8) <= uVar4) {\n                fcn.00431010();\n            }\n            puVar2 = *(*(iVar1 + 4) + uVar4 * 4);\n            fcn.00407e48();\n            (**(*var_8h + 0x24))();\n            var_ch = fcn.0048fb40();\n            if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                (*var_8h[0x1e])(&fcn.00490194::var_ch);\n            }\n            if (*(var_8h[0xc] + 8) <= uVar4) {\n                fcn.00431010();\n            }\n            fcn.00490100();\n            if (var_ch == 0) {\n                cVar3 = fcn.0048fa40();\n                if (cVar3 == '\\0') goto code_r0x004902aa;\n                if (*(var_8h[0xc] + 8) <= uVar4) {\n                    fcn.00431010();\n                }\n                fcn.004a03b0();\n                fcn.004310bc();\n            }\n            else {\ncode_r0x004902aa:\n                (***puVar2)();\n            }\n            uVar4 = uVar4 + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x4902da;\n    uStack56 = 0x4902d2;\n    fcn.00490324();\n    return;\n}\n",
        "token_count": 749
    },
    "00490900": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00490900(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4909e6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x490925;\n    iVar2 = fcn.00492510();\n    *(arg_8h + -8) = 0;\n    if (*(*(arg_8h + -0x10) + 0x72) != 0) {\n        puStack32 = arg_8h + -8;\n        uStack36 = 0x490957;\n        (**(*(arg_8h + -0x10) + 0x70))();\n    }\n    if (*(arg_8h + -8) == 0) {\n        puStack32 = 0x490965;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -8) = uVar3;\n        if ((*(arg_8h + -0x11) & 4) != 0) {\n            puVar1 = *(arg_8h + -8) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -8) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x4909ba;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -8) + 0x3c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -8) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 522
    },
    "00490db4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00490db4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x490dd3;\n        uVar1 = fcn.0049b080();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x490e0f;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.00490e24();\n        fcn.00490194();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x490e20;\n        uStack20 = 0x490e0e;\n        fcn.00490324();\n        return;\n    }\n    puStack16 = 0x490e20;\n    fcn.00490e24();\n    return;\n}\n",
        "token_count": 255
    },
    "00491328": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00491328(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x4913ea;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00407a20();\n    cVar1 = fcn.00405f30();\n    if (cVar1 != '\\0') {\n        fcn.00407e48();\n    }\n    if (var_4h == 0) {\n        fcn.00405be8();\n    }\n    var_24h = var_4h;\n    var_20h._0_1_ = 0x11;\n    var_1ch = **0x4ba544;\n    var_18h._0_1_ = 0x11;\n    var_14h = *(arg_8h + -8);\n    var_10h._0_1_ = 0x11;\n    var_ch = *(in_EAX + 4);\n    var_8h._0_1_ = 0x11;\n    uVar2 = 3;\n    fcn.0041f374(3, &var_24h);\n    fcn.0040711c();\n    *in_FS_OFFSET = uVar2;\n    uStack56 = 0x4913f1;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 446
    },
    "00491884": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00491884(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t iStack20;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iStack20 = 5;\n    do {\n        iStack20 = iStack20 + -1;\n    } while (iStack20 != 0);\n    var_ch = NULL;\n    var_1ch = 0x491b96;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00491884::var_20h;\n    puVar1 = &stack0xfffffffc;\n    var_14h = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.0046812c();\n            cVar2 = fcn.00405f30();\n            puVar1 = var_18h;\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.0046812c();\n                puVar1 = var_18h;\n                if ((*(iVar3 + 0x30) & 4) != 0) goto code_r0x004918fa;\n            }\n        }\n        var_18h = puVar1;\n        fcn.0048d558();\n        puVar1 = var_18h;\n    }\ncode_r0x004918fa:\n    var_18h = puVar1;\n    if (***var_ch < 0x13) {\n    // switch table (19 cases) at 0x491914\n        switch(*(***var_ch * 4 + 0x491914)) {\n        case 0x491960:\n            cVar2 = fcn.00490418();\n            if (cVar2 == '\\a') {\n                fcn.0049106c();\n                fcn.004916c8();\n            }\n            else {\n                fcn.00491238();\n                fcn.004681a0();\n            }\n            break;\n        case 0x4919a4:\n            fcn.004905ec();\n            fcn.004681a0();\n            break;\n        case 0x4919bf:\n            fcn.0049106c();\n            iVar3 = fcn.0046784c();\n            if (iVar3 == -1) {\n                fcn.0048fde8();\n            }\n            else {\n                fcn.004681a0();\n            }\n            break;\n        case 0x4919f5:\n            Var4 = fcn.00490ef8();\n            var_2ch = Var4;\n            var_28h = Var4 >> 0x20;\n            fcn.004689b0(var_2ch, var_28h, CONCAT22(0x49, Var4 >> 0x40));\n            break;\n        case 0x491a14:\n            fcn.00491d4c();\n            fcn.004686b4();\n            break;\n        case 0x491a32:\n            fcn.00491d4c();\n            fcn.004686b4();\n            break;\n        case 0x491a50:\n            fcn.00491d4c();\n            fcn.004686b4();\n            break;\n        case 0x491a6e:\n            fcn.00491ba4();\n            fcn.004681a0();\n            break;\n        case 0x491a8a:\n            cVar2 = fcn.00490418();\n            if (cVar2 == '\\r') {\n                fcn.00492038();\n                fcn.004681a0();\n            }\n            else if (cVar2 == '\\x0e') {\n                fcn.00492038();\n                fcn.0046812c();\n                fcn.0049064c();\n            }\n            else {\n                fcn.0049106c();\n                var_28h = 0x491af2;\n                fcn.00491710(&stack0xfffffffc);\n            }\n            break;\n        case 0x491af8:\n            cVar2 = fcn.00490418();\n            if (cVar2 == '\\r') {\n                fcn.00492038();\n                fcn.004696fc();\n            }\n            else {\n                fcn.0049106c(0xe8);\n                var_28h = 0x491b3e;\n                (**(*var_4h + 0x18))();\n                if (var_14h != 0) {\n                    fcn.004696fc();\n                }\n            }\n            break;\n        case 0x491b54:\n            var_28h = 0x491b5a;\n            fcn.00491760(&stack0xfffffffc);\n            break;\n        case 0x491b5d:\n            uVar5 = fcn.004912a4();\n            var_28h = uVar5;\n            fcn.0046975c(var_28h, uVar5 >> 0x20);\n            break;\n        case 0x491b74:\n            var_28h = 0x491b7a;\n            fcn.004917bc(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x491b9d;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 1410
    },
    "00491ba4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00491c03)\n// WARNING: Removing unreachable block (ram,0x00491c12)\n\nvoid fcn.00491ba4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x491c4e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x491c21;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.00492038();\n    if (cVar1 != '\\v') {\n        fcn.0048fde8();\n    }\n    fcn.00467260();\n    fcn.00491c60();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x491c55;\n    uStack32 = 0x491c4d;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 312
    },
    "0049206c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049206c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x4920a8;\n    fcn.00491c60();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4920af;\n    uStack20 = 0x4920a7;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 150
    },
    "00492418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00492418(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00407e48();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.00498958();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0x11;\n            uVar1 = 0;\n            fcn.0041f374(0, &var_10h);\n            fcn.0040711c();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 311
    },
    "00492510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00492510(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0049036c();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0049036c();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00405ff0();\n        if (cVar1 != '\\0') goto code_r0x0049257a;\n    }\n    fcn.00484c3c();\ncode_r0x0049257a:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 227
    },
    "00492a14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492a14(code *arg_8h, uint arg_ch)\n\n{\n    char in_CL;\n    \n    if ((in_CL != '\\0') && (arg_8h._2_2_ != 0)) {\n        fcn.00495394();\n        (*arg_8h)();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00492a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492a3c(uint arg_8h, uint arg_ch)\n\n{\n    char in_CL;\n    \n    if ((in_CL != '\\0') && (arg_8h._2_2_ != 0)) {\n        fcn.00495394();\n        fcn.00492b6c(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00492f7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00492f7c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_ch = *(in_EAX + 0x20);\n    var_10h = *(in_EAX + 0x28);\n    uStack40 = 0x4930c3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    *(param_2 + 7) = *(param_2 + 7) | 4;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    iVar2 = fcn.00498c18();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00498be0();\n            if ((*(iVar3 + 0x30) & 4) != 0) {\n                iVar3 = fcn.00498be0();\n                *(iVar3 + 0x1c) = *(iVar3 + 0x1c) | 4;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(var_4h + 0x30) != 0) {\n        uVar4 = fcn.00492ef4(&stack0xfffffffc);\n        *(var_4h + 0x20) = uVar4;\n    }\n    if ((*(var_4h + 0x42) != 0) && ((*(var_4h + 0x20) == 0 || (cVar1 = fcn.00405f30(),  cVar1 != '\\0')))) {\n        var_14h = *(var_4h + 0x20);\n        (**(var_4h + 0x40))(var_4h + 0x28, &var_14h, var_8h[2]);\n        *(var_4h + 0x20) = var_14h;\n    }\n    (**(*var_8h + 0x34))();\n    *(var_8h + 7) = *(var_8h + 7) & 0xfffb;\n    iVar2 = fcn.00498c18();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00498be0();\n            if ((*(iVar3 + 0x30) & 4) != 0) {\n                iVar3 = fcn.00498be0();\n                *(iVar3 + 0x1c) = *(iVar3 + 0x1c) & 0xfffb;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    *(var_4h + 0x20) = var_ch;\n    *(var_4h + 0x28) = var_10h;\n    return;\n}\n",
        "token_count": 762
    },
    "00493730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493730(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == -1) {\n        if (arg_8h < 0x80000000) goto code_r0x0049376a;\n    }\n    else if (arg_ch < -1) goto code_r0x0049376a;\n    if (arg_ch == 0) {\n        if (arg_8h < 0x80000000) {\ncode_r0x0049375c:\n            fcn.004936bc();\n            return;\n        }\n    }\n    else if (arg_ch < 1) goto code_r0x0049375c;\ncode_r0x0049376a:\n    fcn.004955fc();\n    fcn.00492b1c();\n    return;\n}\n",
        "token_count": 183
    },
    "004937d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004937d0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x4937ee;\n    iVar2 = fcn.00467260();\n    iVar2 = *(iVar2 + 8);\n    if (iVar2 < 1) {\n        puStack36 = 0x493891;\n        (**(*param_2 + 4))();\n        return;\n    }\n    puStack36 = 0x49380b;\n    iVar3 = fcn.004053f0();\n    uStack40 = 0x49387f;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00467a04();\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            if (*(iVar3 + iVar4 * 4) == 0) break;\n            cVar1 = fcn.004680f8();\n            if (cVar1 != '\\0') {\n                fcn.00494e44();\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x493886;\n    uStack40 = 0x49387e;\n    fcn.0040540c();\n    return;\n}\n",
        "token_count": 408
    },
    "00493b30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493b30(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_10h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x493c04;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0046812c();\n    if (*(arg_8h + -9) == '\\0') {\n        fcn.004293d4();\n        cVar1 = fcn.00493970(arg_8h);\n        if ((cVar1 != '\\0') && (cVar1 = fcn.004304b8(),  cVar1 == '\\0')) {\n            fcn.0042eef0();\n            fcn.00430b7c();\n        }\n    }\n    else {\n        fcn.0046812c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x493c0b;\n    uStack48 = 0x493c03;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 281
    },
    "00493c14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493c14(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var3;\n    uint var_30h;\n    ushort uStack28;\n    ushort uStack26;\n    uint uStack24;\n    uchar *var_10h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack24 = 0x493cf8;\n    uStack28 = *in_FS_OFFSET;\n    uStack26 = *in_FS_OFFSET >> 0x10;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    Var3 = fcn.004688f0();\n    uStack28 = Var3 >> 0x40;\n    if (*(arg_8h + -9) == '\\0') {\n        fcn.004293d4();\n        cVar1 = fcn.00493970(arg_8h);\n        if ((cVar1 != '\\0') && (cVar1 = fcn.004304b8(),  cVar1 == '\\0')) {\n            fcn.0042f114();\n            fcn.00430b7c();\n        }\n    }\n    else {\n        fcn.004688f0();\n    }\n    *in_FS_OFFSET = CONCAT22(uStack26, uStack28);\n    var_10h = 0x493cff;\n    uStack24 = 0x493cef;\n    fcn.004293d4();\n    uStack24 = 0x493cf7;\n    fcn.004293d4();\n    return;\n}\n",
        "token_count": 382
    },
    "00493d08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493d08(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint in_stack_ffffffdc;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar2 = 5;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0x493ded;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00493d08::var_18h;\n    _var_18h = fcn.00469734();\n    if (*(arg_8h + -9) == '\\0') {\n        fcn.004293d4();\n        in_stack_ffffffdc = 0x493d75;\n        cVar1 = fcn.00493970(arg_8h);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.004304b8();\n            if (cVar1 == '\\0') {\n                in_stack_ffffffdc = var_18h;\n                fcn.0042f018(var_18h, var_14h);\n                fcn.00430b7c();\n            }\n        }\n    }\n    else {\n        fcn.00469734();\n    }\n    *in_FS_OFFSET = in_stack_ffffffdc;\n    var_18h = 0x493df4;\n    fcn.004293d4();\n    fcn.004293d4();\n    return;\n}\n",
        "token_count": 372
    },
    "00493dfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493dfc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = 5;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x493ee7;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00493dfc::var_1ch;\n    fcn.004685e0();\n    if (*(arg_8h + -9) == '\\0') {\n        fcn.004293d4();\n        cVar1 = fcn.00493970(arg_8h);\n        if ((cVar1 != '\\0') && (cVar1 = fcn.004304b8(),  cVar1 == '\\0')) {\n            fcn.0042f248();\n            fcn.00430b7c();\n        }\n    }\n    else {\n        fcn.004685e0();\n        fcn.00408874();\n    }\n    *in_FS_OFFSET = var_1ch;\n    puStack24 = 0x493eee;\n    var_18h = 0x493ece;\n    fcn.004293d4();\n    var_18h = 0x493ed6;\n    fcn.00407a20();\n    var_18h = 0x493ede;\n    fcn.004293d4();\n    var_18h = 0x493ee6;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 400
    },
    "00493f58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00493f58(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(*(arg_8h + 8) + -9) != '\\0') {\n        iVar2 = fcn.0046812c();\n        cVar1 = fcn.00493ef8(*(arg_8h + 8));\n        if (cVar1 != '\\0') {\n            iVar2 = *(arg_8h - 4);\n        }\n    }\n    return arg_8h & 0xffffff00 | iVar2 == *(arg_8h - 4);\n}\n",
        "token_count": 150
    },
    "00493fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00493fb0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    uVar3 = 1;\n    iVar2 = fcn.0046812c();\n    if ((iVar2 == 0) && (cVar1 = fcn.00493f58(&stack0xfffffffc),  cVar1 == '\\0')) {\n        return 0;\n    }\n    cVar1 = fcn.00405f30();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00405f30();\n        if ((cVar1 == '\\0') || ((*(iVar2 + 0x30) & 4) != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            cVar1 = fcn.00493f58(&stack0xfffffffc);\n            if ((cVar1 == '\\0') && (*(iVar2 + 8) != 0)) {\n                uVar3 = 0;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "00494030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494030(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4940dc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(*(arg_8h + 8) + -9) != '\\0') {\n        fcn.00469798();\n        if (*(arg_8h + -4) != 0) {\n            fcn.0040b47c();\n            cVar1 = fcn.00421124();\n            if (cVar1 != '\\0') {\n                arg_8h_00 = *(arg_8h + 8);\n                (**(_pe_dos_header + 0xc))();\n                fcn.00493ef8(arg_8h_00);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4940e3;\n    uStack24 = 0x4940d3;\n    fcn.0040b47c();\n    uStack24 = 0x4940db;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 322
    },
    "004940fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00494130)\n// WARNING: Removing unreachable block (ram,0x00494172)\n// WARNING: Removing unreachable block (ram,0x00494188)\n// WARNING: Removing unreachable block (ram,0x00494191)\n// WARNING: Removing unreachable block (ram,0x0049416e)\n\nvoid __cdecl fcn.004940fc(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4941b9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00469798();\n    if (*(arg_8h + -9) != '\\0') {\n        fcn.00469798();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4941c0;\n    uStack32 = 0x4941a8;\n    fcn.0040b47c();\n    uStack32 = 0x4941b0;\n    fcn.0040b47c();\n    uStack32 = 0x4941b8;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 324
    },
    "004941d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004941d8(int32_t arg_8h)\n\n{\n    int32_t *in_EDX;\n    uint var_8h;\n    \n    fcn.00407a20();\n    if (*(arg_8h + 10) != 0) {\n        (**(arg_8h + 8))();\n    }\n    if (*in_EDX == 0) {\n        fcn.004061c8();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00494230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494230(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4942bf;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004696bc();\n    iVar1 = 0;\n    if (*(arg_8h + -9) != '\\0') {\n        fcn.004696bc();\n        iVar1 = var_10h;\n    }\n    if ((iVar1 != var_8h) && (var_8h != 0)) {\n        fcn.004941d8(arg_8h);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4942c6;\n    uStack36 = 0x4942be;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 259
    },
    "004942d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004942d0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_20h;\n    uint uStack28;\n    uint uStack24;\n    uchar *var_10h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack24 = 0x4943a6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00468a9c();\n    if (*(arg_8h + -9) == '\\0') {\n        iVar2 = arg_8h;\n        fcn.004293d4();\n        cVar1 = fcn.00493970(iVar2);\n        if (cVar1 == '\\0') {\n            if (*(*(arg_8h + -4) + 0x14) != -0x80000000) {\n                fcn.00430428();\n            }\n        }\n        else {\n            cVar1 = fcn.004304b8();\n            if (cVar1 == '\\0') {\n                fcn.00430428();\n            }\n        }\n    }\n    else {\n        fcn.00468a9c();\n        fcn.004304d0();\n    }\n    *in_FS_OFFSET = uStack28;\n    var_10h = 0x4943ad;\n    uStack24 = 0x4943a5;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 376
    },
    "004943b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004943b4(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uchar var_9h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_10h = 0;\n    var_18h = 0;\n    var_20h = 0;\n    var_14h = 0;\n    var_4h = in_EDX;\n    if (arg_10h._2_2_ != 0) {\n        (*arg_10h)(&var_14h, &var_20h);\n    }\n    var_9h = fcn.00493898();\n    uVar3 = 1;\n    if (var_4h[1] == 0) {\n        return 1;\n    }\n    if (var_4h[2] == 0) {\n        if (***var_4h != '\\a') {\n            return 1;\n        }\n        fcn.0046812c();\n        cVar1 = fcn.00405f30();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        iVar2 = fcn.0046812c();\n        if ((*(iVar2 + 0x30) & 4) == 0) {\n            return 1;\n        }\n    }\n    if (***var_4h < 0x13) {\n    // switch table (19 cases) at 0x494493\n        switch(*(*(***var_4h + 0x494480) * 4 + 0x494493)) {\n        case 0x4944b7:\n            uVar3 = fcn.00493b30(&stack0xfffffffc);\n            break;\n        case 0x4944c2:\n            uVar3 = fcn.00493c14(&stack0xfffffffc);\n            break;\n        case 0x4944cd:\n            uVar3 = fcn.00493dfc(&stack0xfffffffc);\n            break;\n        case 0x4944d8:\n            uVar3 = fcn.00493fb0(&stack0xfffffffc);\n            break;\n        case 0x4944e3:\n            uVar3 = fcn.00494230(&stack0xfffffffc);\n            break;\n        case 0x4944ee:\n            uVar3 = fcn.004942d0(&stack0xfffffffc);\n            break;\n        case 0x4944f9:\n            uVar3 = fcn.00493d08(&stack0xfffffffc);\n            break;\n        case 0x494504:\n            uVar3 = fcn.004940fc(&stack0xfffffffc);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 672
    },
    "0049490c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049490c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4949fb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    iVar1 = *(*(arg_8h + -4) + 0x1c);\n    if (iVar1 == *(in_EAX + 4)) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    else if (iVar1 == in_EAX) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    else if (((*(in_EAX + 4) == 0) || (*(*(in_EAX + 4) + 8) == 0)) || (*(in_EAX + 8) == 0)) {\n        if (*(in_EAX + 8) == 0) {\n            fcn.00407a20();\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.0040873c();\n        }\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        cVar2 = fcn.004948f4();\n        if (cVar2 == '\\0') {\n            in_stack_ffffffd4 = *(in_EAX + 8);\n            fcn.004087c4(in_stack_ffffffd4, 0x494a2c, *(*(in_EAX + 4) + 8));\n        }\n        else {\n            fcn.0049490c(arg_8h);\n            in_stack_ffffffd4 = *(in_EAX + 8);\n            fcn.004087c4(in_stack_ffffffd4, 0x494a2c, 0);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    fcn.00407a20(0x494a02);\n    return;\n}\n",
        "token_count": 507
    },
    "00494a4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494a4c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_18h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    uStack36 = 0x494c57;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_ch = fcn.0046812c();\n    if (var_ch == 0) {\n        uStack48 = 0x494a8e;\n        fcn.00494518(arg_8h);\n        fcn.004955fc();\n    }\n    else {\n        cVar1 = fcn.00405f30();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00405f30();\n            if ((cVar1 == '\\0') || ((*(var_ch + 0x30) & 4) != 0)) {\n                var_10h = *(*(arg_8h + -4) + 0x20);\n                fcn.00407e48();\n                uStack48 = 0x494bd0;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                var_14h = fcn.00467208(*(*(arg_8h + -4) + 0x2c));\n                fcn.00466f58();\n                uVar3 = 0x494c70;\n                fcn.004087c4(0x494c70, var_18h);\n                if (*(arg_8h + -0x11) != '\\0') {\n                    uVar2 = fcn.0046812c();\n                    *(*(arg_8h + -4) + 0x20) = uVar2;\n                }\n                fcn.004937d0();\n                *in_FS_OFFSET = uVar3;\n                *(*(arg_8h + -4) + 0x20) = var_10h;\n                fcn.00407e00(0x494bd7);\n                return;\n            }\n            uStack48 = 0x494ae1;\n            fcn.0049490c(arg_8h);\n            if (var_8h != 0) {\n                uStack48 = 0x494af5;\n                fcn.00494518(arg_8h);\n                fcn.0049354c();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x494c5e;\n    uStack36 = 0x494c49;\n    fcn.00407a20();\n    uStack36 = 0x494c56;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 719
    },
    "00494c74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00494cbf)\n// WARNING: Removing unreachable block (ram,0x00494cda)\n\nvoid __cdecl fcn.00494c74(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x494d31;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00469798();\n    fcn.00494518(arg_8h);\n    fcn.004955fc();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x494d38;\n    uStack28 = 0x494d20;\n    fcn.00407a20();\n    uStack28 = 0x494d28;\n    fcn.0040b47c();\n    uStack28 = 0x494d30;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 261
    },
    "00494d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494d50(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x494dd2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004696bc();\n    fcn.00494518(arg_8h);\n    if (var_8h == 0) {\n        fcn.004955fc();\n    }\n    else {\n        (**(**(arg_8h + -4) + 0x14))();\n        fcn.0049354c();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x494dd9;\n    uStack28 = 0x494dd1;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 229
    },
    "00494e44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00494e44(uint *param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1[1] == 0) {\n        return;\n    }\n    if (param_1[2] == 0) {\n        if (***param_1 != '\\a') {\n            return;\n        }\n        fcn.0046812c();\n        cVar1 = fcn.00405f30();\n        if (cVar1 == '\\0') {\n            return;\n        }\n        iVar2 = fcn.0046812c();\n        if ((*(iVar2 + 0x30) & 4) == 0) {\n            return;\n        }\n    }\n    cVar1 = fcn.004943b4(*(in_EAX + 0x48), *(in_EAX + 0x4c), fcn.00495610, in_EAX);\n    if (cVar1 == '\\0') {\n        fcn.00493898();\n    // switch table (19 cases) at 0x494f28\n        switch(***param_1) {\n        case 1:\n        case 2:\n        case 3:\n        case 6:\n        case 9:\n            fcn.00494720(&stack0xfffffffc);\n            break;\n        case 4:\n            fcn.00494818(&stack0xfffffffc);\n            break;\n        case 5:\n        case 10:\n        case 0xb:\n        case 0x12:\n            fcn.00494894(&stack0xfffffffc);\n            break;\n        case 7:\n            fcn.00494a4c(&stack0xfffffffc);\n            break;\n        case 8:\n            fcn.00494d50(&stack0xfffffffc);\n            break;\n        case 0xc:\n            fcn.00494de0(&stack0xfffffffc);\n            break;\n        case 0xf:\n            fcn.00494c74(&stack0xfffffffc);\n            break;\n        case 0x10:\n            fcn.00494858(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "00496eec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00496eec(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    iVar3 = *0x4c1c38;\n    LOCK();\n    *0x4c1c38 = 0;\n    if (iVar3 != 0) {\n        puStack24 = 0x496f0d;\n        iVar1 = fcn.004a0acc();\n        uStack28 = 0x496f5c;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar3 = *(iVar1 + 8);\n        if (-1 < iVar3 + -1) {\n            uVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n            do {\n                if (*(iVar1 + 8) <= uVar2) {\n                    fcn.00431010();\n                }\n                fcn.00405ce8();\n                uVar2 = uVar2 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x496f63;\n        uStack28 = 0x496f5b;\n        fcn.00406868();\n        return;\n    }\n    puStack24 = 0x496f6b;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 354
    },
    "00496fa8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00496fa8(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY92;\n    uint uStackY88;\n    uchar *puStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint uStackY56;\n    uint uStackY52;\n    uchar *puStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY60 = &fcn.00496fa8::var_1h + 1;\n    puStackY84 = &fcn.00496fa8::var_1h + 1;\n    if (*0x4c1c10 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.004975a4();\n    if (*(iVar2 + 4) != **0x4ba790) {\n        iVar2 = fcn.004975a4();\n        var_14h = *(iVar2 + 4);\n        var_10h._0_1_ = 0;\n        puStackY48 = 0x496ffe;\n        fcn.0041f374(0, &fcn.00496fa8::var_14h);\n        puStackY48 = 0x497003;\n        fcn.0040711c();\n    }\n    if (in_EAX < 1) {\n        puStackY48 = 0x497015;\n        fcn.00496f74();\n    }\n    else {\n        puStackY48 = 0x49700e;\n        fcn.00496f80();\n    }\n    var_ch = 0;\n    if (**0x4ba590 == 0) {\n        puStackY48 = 0x49702b;\n        fcn.0040554c();\n    }\n    puStackY48 = 0x497035;\n    fcn.0040690c();\n    puStackY48 = 0x49703d;\n    fcn.00406688();\n    uStackY52 = 0x4971eb;\n    uStackY56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar2 = *0x4ba3e0;\n    LOCK();\n    *0x4ba3e0 = var_ch;\n    var_ch = iVar2;\n    uStackY64 = 0x4971cc;\n    uStackY68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    if ((iVar2 == 0) || (*(iVar2 + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(iVar2 + 8))) {\n        puStackY72 = 0x497097;\n        puStackY48 = &fcn.00496fa8::var_1h + 1;\n        var_8h = fcn.0048c1c8();\n        puStackY72 = 0x4970a4;\n        fcn.0048c0b4();\n        puStackY72 = 0x4970ae;\n        fcn.00406868();\n        uStackY76 = 0x497174;\n        uStackY80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        uStackY88 = 0x4970fb;\n        uStackY92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        iVar2 = *var_8h;\n        if (*(iVar2 + 10) == 0) {\n            puVar1 = &fcn.00496fa8::var_1h + 1;\n            if (*(iVar2 + 0x10) != 0) {\n                puStackY72 = &fcn.00496fa8::var_1h + 1;\n                (**(**(*var_8h + 0x10) + 0xc))();\n                puVar1 = puStackY84;\n            }\n        }\n        else {\n            puStackY84 = &fcn.00496fa8::var_1h + 1;\n            puStackY72 = &fcn.00496fa8::var_1h + 1;\n            (**(iVar2 + 8))();\n            puVar1 = puStackY84;\n        }\n        puStackY84 = puVar1;\n        *in_FS_OFFSET = uStackY92;\n        *in_FS_OFFSET = uStackY80;\n        puStackY72 = 0x49717b;\n        **var_8h = 0;\n        if (**0x4ba590 == 0) {\n            uStackY76 = 0x497161;\n            fcn.0040554c();\n        }\n        uStackY76 = 0x49716b;\n        fcn.0040690c();\n        uStackY76 = 0x497173;\n        uVar3 = fcn.00406688();\n        return uVar3;\n    }\n    *in_FS_OFFSET = uStackY68;\n    puStackY60 = 0x4971d3;\n    uStackY64 = 0x4971cb;\n    puStackY48 = &fcn.00496fa8::var_1h + 1;\n    uVar3 = fcn.00405ce8();\n    return uVar3;\n}\n",
        "token_count": 1311
    },
    "00497200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00497200\n      noreturn \n               (void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x49720f;\n    iVar2 = fcn.0040cc60();\n    *(iVar2 + 0x10) = in_EAX;\n    uStack28 = 0x4972ac;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 3) = 1;\n    if (*(in_EAX + 0xe) == '\\0') {\n        uStack40 = 0x497256;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        puStack24 = &stack0xfffffffc;\n        (**(*in_EAX + 8))();\n        *in_FS_OFFSET = uStack44;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4972b3;\n    cVar1 = *(in_EAX + 4);\n    uStack28 = 0x49728c;\n    (***in_EAX)();\n    *(in_EAX + 0x11) = 1;\n    uStack28 = 0x497298;\n    fcn.00496f9c();\n    if (cVar1 != '\\0') {\n        uStack28 = 0x4972a4;\n        fcn.00405ce8();\n    }\n    // WARNING: Subroutine does not return\n    uStack28 = 0x4972ab;\n    fcn.00407958();\n}\n",
        "token_count": 433
    },
    "004972f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004972f4(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    char in_CL;\n    char extraout_CL;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x49730d;\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n        in_CL = extraout_CL;\n    }\n    uStack52 = 0x4973ed;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.004972f4::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00405cb8();\n    *(in_EAX + 0xf) = *(in_EAX + 0x2c) ^ 1;\n    if ((in_CL == '\\0') || (*(in_EAX + 0x2c) != '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    if (*(in_EAX + 0x2c) == '\\0') {\n        if (arg_8h == 0) {\n            uVar2 = fcn.004078e0(in_EAX + 4, 4, in_EAX);\n            *(in_EAX + 8) = uVar2;\n        }\n        else {\n            uVar2 = fcn.004078e0(in_EAX + 4, 0x10004, in_EAX);\n            *(in_EAX + 8) = uVar2;\n        }\n        if (*(in_EAX + 8) == 0) {\n            sub.kernel32.dll_GetLastError();\n            fcn.0041dfc8();\n            var_ch = 0;\n            var_8h._0_1_ = 0x11;\n            in_stack_ffffffb4 = 0;\n            fcn.0041f374(0, &fcn.004972f4::var_ch);\n            fcn.0040711c();\n        }\n    }\n    else {\n        uVar2 = sub.kernel32.dll_GetCurrentThread();\n        *(in_EAX + 8) = uVar2;\n        uVar2 = func_0x0040e140();\n        *(in_EAX + 4) = uVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00407a20(0x4973f4);\n    return;\n}\n",
        "token_count": 687
    },
    "004975a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004975a4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0040cc60();\n    if (*(iVar1 + 0x10) == 0) {\n        uVar2 = fcn.00495718();\n        if (*0x4c1c38 == 0) {\n            iVar3 = fcn.004a08f4();\n            iVar1 = 0;\n            LOCK();\n            if (*0x4c1c38 != 0) {\n                iVar1 = *0x4c1c38;\n                iVar3 = *0x4c1c38;\n            }\n            *0x4c1c38 = iVar3;\n            if (iVar1 != 0) {\n                fcn.00405ce8();\n            }\n        }\n        fcn.004a09cc();\n        iVar1 = fcn.0040cc60();\n        *(iVar1 + 0x10) = uVar2;\n    }\n    iVar1 = fcn.0040cc60();\n    return *(iVar1 + 0x10);\n}\n",
        "token_count": 252
    },
    "0049777c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049777c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint8_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    puStack36 = 0x49778e;\n    unique0x100000fe = in_EDX;\n    iVar1 = fcn.004975a4();\n    if ((*(iVar1 + 4) == **0x4ba790) && ((var_5h & arg_8h) == 0)) {\n        if (*(stack0xfffffff8 + 10) == 0) {\n            if (*(stack0xfffffff8 + 0x10) != 0) {\n                puStack36 = 0x4977d4;\n                (**(**(stack0xfffffff8 + 0x10) + 0xc))();\n            }\n        }\n        else {\n            puStack36 = 0x4977b7;\n            (**(stack0xfffffff8 + 8))();\n        }\n        return;\n    }\n    if (var_5h == 0) {\n        var_ch = &fcn.0049777c::var_18h;\n    }\n    else {\n        puStack36 = 0x4977e9;\n        var_ch = fcn.004053f0();\n    }\n    uVar2 = var_5h ^ 1;\n    if (uVar2 == 0) {\n        var_ch[2] = 0;\n    }\n    else {\n        puStack36 = 0x49780b;\n        iVar1 = fcn.00405cb8();\n        var_ch[2] = iVar1;\n    }\n    uStack40 = 0x49790b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    if (**0x4ba590 == 0) {\n        puStack48 = 0x49783a;\n        puStack36 = &stack0xfffffffc;\n        fcn.0040554c();\n    }\n    puStack48 = 0x497844;\n    fcn.0040690c();\n    puStack48 = 0x49784c;\n    fcn.00406688();\n    uStack52 = 0x4978e5;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    *(var_ch + 1) = var_5h;\n    puStack48 = &stack0xfffffffc;\n    if (*0x4ba3e0 == 0) {\n        puStack48 = &stack0xfffffffc;\n        *0x4ba3e0 = fcn.00405cb8();\n    }\n    *var_ch = stack0xfffffff8;\n    fcn.0048c05c();\n    fcn.00496f9c();\n    if (*0x4ba3d2 != 0) {\n        (**0x4ba3d0)();\n    }\n    if (uVar2 != 0) {\n        fcn.00406c50();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4978ec;\n    uStack52 = 0x4978e4;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 805
    },
    "004979c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004979c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    if (**0x4ba590 == 0) {\n        puStack20 = 0x4979dd;\n        fcn.0040554c();\n    }\n    puStack20 = 0x4979e7;\n    fcn.0040690c();\n    puStack20 = 0x4979ef;\n    fcn.00406688();\n    uStack24 = 0x497a70;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if ((*0x4ba3e0 != 0) && (iVar2 = *(*0x4ba3e0 + 8) + -1,  puStack20 = &stack0xfffffffc,  -1 < iVar2)) {\n        do {\n            ppiVar1 = fcn.0048c1c8();\n            if ((ppiVar1[2] == NULL) && ((in_EAX != 0 && (in_EAX == **ppiVar1)))) {\n                fcn.0048c0b4();\n                fcn.00409568();\n                fcn.0040540c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x497a77;\n    uStack24 = 0x497a6f;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 380
    },
    "00497e28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00497e28(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.0049b468(param_1);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00431524(param_2);\n    if (*(in_EAX + 0x34) != 0) {\n        fcn.00498a94();\n    }\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 147
    },
    "00497e6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00497e6c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    iVar1 = *(in_EAX + 0x10);\n    iVar2 = *(iVar1 + 8);\n    if (0 < iVar2) {\n        if (*(iVar1 + 8) <= iVar2 - 1U) {\n            fcn.00431010();\n        }\n        if (param_2 == *(*(iVar1 + 4) + -4 + iVar2 * 4)) {\n            fcn.00431eec();\n        }\n        else {\n            fcn.00431500(param_2, *(in_EAX + 0x10) + 4);\n        }\n        if (*(in_EAX + 0x34) != 0) {\n            fcn.00431500();\n        }\n    }\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        *(in_EAX + 0x34) = 0;\n        fcn.00405ce8();\n        *(in_EAX + 0x10) = 0;\n        fcn.00405ce8();\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00497f2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00497f5d)\n\nvoid __fastcall fcn.00497f2c(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x497fd5;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0040b47c();\n    fcn.0048cd24();\n    fcn.00405fd0();\n    if (*(param_2 + 4) != 0) {\n        fcn.00497fe4();\n    }\n    uVar1 = *(param_2 + 8);\n    (**(*in_EAX + 0x30))();\n    fcn.00497e28();\n    fcn.00498fe4();\n    if ((*(in_EAX + 7) & 0x10) != 0) {\n        fcn.00498f94();\n    }\n    (**(*in_EAX + 0x14))();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x497fdc;\n    uStack32 = 0x497fd4;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 328
    },
    "00498310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00498310(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    bool bVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (in_EDX == 0) {\n        bVar2 = false;\n    }\n    else {\n        if (in_ECX == arg_8h) {\n            bVar2 = true;\n        }\n        else if ((in_ECX == 0) || (arg_8h == 0)) {\n            bVar2 = false;\n        }\n        else {\n            iVar1 = fcn.00419780();\n            bVar2 = iVar1 == 0;\n        }\n        bVar2 = bVar2 ^ 1;\n    }\n    if ((bVar2) && (in_EAX == *(var_4h + 4))) {\n        iVar1 = fcn.00498958();\n        if (iVar1 != 0) {\n            var_ch = arg_8h;\n            var_8h._0_1_ = 0x11;\n            fcn.0041f374(0, &var_ch);\n            fcn.0040711c();\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "00498958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00498958(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uStack24;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if ((param_2 != 0) && (*(in_EAX + 0x10) != 0)) {\n        if (*(in_EAX + 0x34) == 0) {\n            uVar2 = fcn.0049b468();\n            *(in_EAX + 0x34) = uVar2;\n            fcn.00432324();\n            iVar3 = *(*(in_EAX + 0x10) + 8);\n            if (-1 < iVar3 + -1) {\n                uStack24 = 0;\n                do {\n                    iVar1 = *(in_EAX + 0x10);\n                    if (*(iVar1 + 8) <= uStack24) {\n                        fcn.00431010();\n                    }\n                    uStack20 = *(*(iVar1 + 4) + uStack24 * 4);\n                    fcn.004310bc();\n                    uStack24 = uStack24 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            fcn.0049b57c();\n        }\n        uVar2 = fcn.00498a0c();\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 339
    },
    "00498be0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00498be0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.0048c154();\n    }\n    iVar1 = *(in_EAX + 0x10);\n    if (*(iVar1 + 8) <= param_2) {\n        fcn.00431010();\n    }\n    return *(*(iVar1 + 4) + param_2 * 4);\n}\n",
        "token_count": 126
    },
    "00498eec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00498eec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x498f85;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = fcn.00405cb8();\n    fcn.0040b494();\n    *(iVar1 + 0xc) = in_EAX;\n    if (*(in_EAX + 0x24) == 0) {\n        uVar2 = fcn.004996ac();\n        *(*(iVar1 + 0xc) + 0x24) = uVar2;\n        fcn.0040b494();\n        fcn.0040b494();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x498f8c;\n    uStack24 = 0x498f84;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 266
    },
    "00498f94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498f94(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.00498c18(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00498be0();\n            fcn.00498f94();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00498fe4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498fe4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*0x4c1c28 == 0) {\n            fcn.0048a8c0();\n        }\n        piVar1 = fcn.0048acec();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004990a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004990a4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 0x20) == 0) {\n        if (*0x4ba3c8 != NULL) {\n            (**0x4ba3c8)();\n        }\n        if (*(in_EAX + 0x20) == 0) {\n            fcn.00405be8();\n            var_8h = 0;\n            var_4h._0_1_ = 0x11;\n            fcn.0041f374(0, &var_8h);\n            fcn.0040711c();\n        }\n    }\n    uVar1 = fcn.0040b47c();\n    puVar2 = *(in_EAX + 0x20);\n    (***puVar2)(puVar2, 0x49914c, uVar1);\n    *in_FS_OFFSET = puVar2;\n    fcn.00407a20(0x499143);\n    return;\n}\n",
        "token_count": 285
    },
    "0049917c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049917c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00405dbc();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "004991bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004991bc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "004991dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004991dc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00499744": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499744(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x499967;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.0040b47c();\n    cVar1 = fcn.00421124();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    var_14h = in_ECX + 1;\n    if (-1 < in_ECX) {\n        do {\n            cVar1 = (***in_EAX)();\n            if (cVar1 == '\\0') {\n                fcn.0041f338();\n                fcn.0040711c();\n            }\n            fcn.0040b47c();\n            cVar1 = fcn.0049bf34();\n            if (cVar1 == '\\0') {\n                fcn.0048c388();\n                fcn.0040b494();\n                fcn.0049bda0();\n            }\n            else {\n                cVar1 = fcn.004211ec();\n                if (cVar1 != '\\0') {\n                    fcn.0040b47c();\n                    cVar1 = fcn.00421124();\n                    if ((cVar1 == '\\0') || (cVar1 = (**(_pe_dos_header + 0x3c))(),  cVar1 == '\\0')) {\n                        fcn.0040b47c();\n                        cVar1 = fcn.00421124();\n                        if ((cVar1 == '\\0') || (cVar1 = (**(_pe_dos_header + 0x3c))(),  cVar1 != '\\0')) {\n                            fcn.0041f338();\n                            fcn.0040711c();\n                        }\n                        else {\n                            var_18h = (**(_pe_dos_header + 0x14))();\n                            if (-1 < var_18h + -1) {\n                                do {\n                                    (**(_pe_dos_header + 0xc))();\n                                    fcn.0040b47c(0);\n                                    cVar1 = fcn.00421124();\n                                    if ((cVar1 != '\\0') && (cVar1 = (**(_pe_dos_header + 0x3c))(),  cVar1 == '\\0')) {\n                                        fcn.0041f338();\n                                        fcn.0040711c();\n                                    }\n                                    var_18h = var_18h + -1;\n                                } while (var_18h != 0);\n                            }\n                        }\n                    }\n                }\n            }\n            (**(_pe_dos_header + 0x38))();\n            if (in_EAX[3] != 0) {\n                (**(*in_EAX[3] + 0xc))();\n            }\n            var_14h = var_14h + -1;\n        } while (var_14h != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x49996e;\n    uStack52 = 0x49994e;\n    fcn.0040b47c();\n    uStack52 = 0x499956;\n    fcn.0040b47c();\n    uStack52 = 0x49995e;\n    fcn.0040b47c();\n    uStack52 = 0x499966;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 870
    },
    "00499b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00499b10(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    var_10h = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    uStack56 = 0x499c5c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    fcn.0040b47c();\n    fcn.0040b47c();\n    fcn.0040b47c();\n    cVar1 = fcn.0049bf34();\n    if ((cVar1 != '\\0') && (iVar2 = (**(*var_4h + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(*var_4h + 0xc))();\n            fcn.0040b47c(var_18h);\n            cVar1 = fcn.00421124();\n            if (cVar1 != '\\0') {\n                fcn.0040b494();\n                cVar1 = (**(*var_8h + 0x10))();\n                if (cVar1 != '\\0') {\n                    fcn.0040b47c();\n                    cVar1 = fcn.00421124();\n                    if ((cVar1 != '\\0') && (cVar1 = (**(*var_ch + 0x3c))(),  cVar1 == '\\0')) {\n                        fcn.0040b494();\n                        goto code_r0x00499c26;\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (var_10h == 0) {\n        var_1ch = var_1ch & 0xffffff00;\n        var_20h = param_2;\n        fcn.0041f374(0, &fcn.00499b10::var_20h);\n        fcn.0040711c();\n    }\n    else {\n        fcn.0040b494();\n    }\ncode_r0x00499c26:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x499c63;\n    uStack56 = 0x499c3b;\n    fcn.0040b47c();\n    uStack56 = 0x499c43;\n    fcn.0040b47c();\n    uStack56 = 0x499c4b;\n    fcn.0040b47c();\n    uStack56 = 0x499c53;\n    fcn.0040b47c();\n    uStack56 = 0x499c5b;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 749
    },
    "0049a3a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049a3a8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x49a4b9;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    *0x4c1c14 = *0x4c1c14 + 1;\n    if (*0x4c1c14 == 0) {\n        fcn.00484d00();\n        (**(**0x4c1c0c + 0x14))();\n        fcn.00499558();\n        fcn.0048fc70();\n        *0x4c1c30 = 0;\n        fcn.00405ce8();\n        fcn.0040cc60();\n        iVar1 = fcn.0040cc60();\n        *(iVar1 + 0x14) = 0;\n        fcn.00405ce8();\n        *0x4c1c18 = 0;\n        fcn.00405ce8();\n        if (*0x4c1c28 == 0) {\n            fcn.0048a8c0();\n        }\n        if (*0x4c1c28 != 0) {\n            if (*0x4c1c28 == 0) {\n                fcn.0048a8c0();\n            }\n            fcn.0048a9b0();\n            fcn.0040b308();\n        }\n        *0x4c1c1c = 0;\n        fcn.00405ce8();\n        fcn.0040b47c();\n        fcn.0040b308();\n        *0x4c1c24 = 0;\n        fcn.00405ce8();\n        fcn.00499648();\n        fcn.0040b47c();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 454
    },
    "0049a59c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0049a59c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**0x4ba590 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406688();\n    return *(in_EAX + 4);\n}\n",
        "token_count": 74
    },
    "0049a5f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049a5f0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x49a6cb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49a61b;\n    fcn.0049a848();\n    uStack44 = 0x49a6ae;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x49a632;\n    puStack40 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack56 = 0x49a686;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049a94c();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x49a68d;\n    if (piVar2 != NULL) {\n        uStack56 = 0x49a685;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0049a740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049a740(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49a830;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49a734;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "0049a7a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a7a8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49a812;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aed18();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49a798;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49a819;\n    uStack24 = 0x49a811;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 260
    },
    "0049aa70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049aa70(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49aa89;\n    fcn.0049ac98();\n    uStack32 = 0x49ab1a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49aaa0;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49aaf2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049ad9c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49aaf9;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49aaf1;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0049ab90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049ab90(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49ac80;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49ab84;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "0049abf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049abf8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49ac62;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aed38();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49abe8;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49ac69;\n    uStack24 = 0x49ac61;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 259
    },
    "0049ae58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049ae58(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49ae71;\n    fcn.0049b080();\n    uStack32 = 0x49af02;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49ae88;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49aeda;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049b184();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49aee1;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49aed9;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0049af78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049af78(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49b068;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49af6c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0049afe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049afe0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49b04a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aed58();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49afd0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49b051;\n    uStack24 = 0x49b049;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 259
    },
    "0049b240": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049b240(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49b259;\n    fcn.0049b468();\n    uStack32 = 0x49b2ea;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49b270;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49b2c2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049b56c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49b2c9;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49b2c1;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "0049b360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049b360(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49b450;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49b354;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "0049b3c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049b3c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49b432;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aecb0();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49b3b8;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49b439;\n    uStack24 = 0x49b431;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 263
    },
    "0049b628": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049b628(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x49b645;\n    fcn.00408bb4();\n    uStack36 = 0x49b6f5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x49b667;\n    puStack44 = param_2;\n    puStack32 = &stack0xfffffffc;\n    fcn.00409c00();\n    puStack44 = 0x49b672;\n    piVar2 = (***in_EAX)();\n    uStack48 = 0x49b6d2;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x49b6d9;\n    if (piVar2 != NULL) {\n        uStack48 = 0x49b6d1;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "0049b728": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049b728(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x49b742;\n    fcn.00408bb4();\n    uStack36 = 0x49b812;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x49b75c;\n    puStack32 = &stack0xfffffffc;\n    fcn.004a10d8();\n    uStack48 = 0x49b7ef;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x49b773;\n    puStack44 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack60 = 0x49b7c7;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a11dc();\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x49b7ce;\n    if (piVar2 != NULL) {\n        uStack60 = 0x49b7c6;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "0049bcc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049bcc0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x49bcd4;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x49bd3d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.004aed78();\n        fcn.0040b494();\n    }\n    fcn.0049b820();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49bd44;\n    uStack44 = 0x49bd3c;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 308
    },
    "0049bf34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __fastcall fcn.0049bf34(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    if (param_1 != NULL) {\n        *param_1 = 0;\n    }\n    fcn.0049ba28();\n    iVar1 = fcn.0049b9a0();\n    if (-1 < iVar1) {\n        fcn.0040b494();\n    }\n    else {\n        fcn.0040b47c();\n    }\n    return -1 < iVar1;\n}\n",
        "token_count": 137
    },
    "0049bff8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049bff8(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x49c01c;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x49c027;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x49c078;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49c07f;\n    if (piVar2 != NULL) {\n        uStack32 = 0x49c077;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0049c0ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049c0ac(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49c0c5;\n    fcn.004a146c();\n    uStack32 = 0x49c156;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49c0dc;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49c12e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a1570();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49c135;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49c12d;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0049c278": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049c278(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x49c330;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x49c2ae;\n    puStack40 = param_2;\n    fcn.00409c00();\n    puStack40 = 0x49c2b9;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49c313;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0040b494();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49c31a;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49c312;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "0049c364": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049c364(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x49c43f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49c38f;\n    fcn.004a1778();\n    uStack44 = 0x49c422;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x49c3a6;\n    puStack40 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack56 = 0x49c3fa;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a187c();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x49c401;\n    if (piVar2 != NULL) {\n        uStack56 = 0x49c3f9;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "0049c668": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049c668(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49c681;\n    fcn.0049c890();\n    uStack32 = 0x49c712;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49c698;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49c6ea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049c994();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49c6f1;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49c6e9;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 351
    },
    "0049c788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049c788(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49c878;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49c77c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0049c7f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049c7f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49c85a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aed98();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49c7e0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49c861;\n    uStack24 = 0x49c859;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 263
    },
    "0049ca2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049ca2c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x49ca49;\n    fcn.00408bb4();\n    uStack36 = 0x49caf9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x49ca6b;\n    puStack44 = param_2;\n    puStack32 = &stack0xfffffffc;\n    fcn.00409c00();\n    puStack44 = 0x49ca76;\n    piVar2 = (***in_EAX)();\n    uStack48 = 0x49cad6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x49cadd;\n    if (piVar2 != NULL) {\n        uStack48 = 0x49cad5;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "0049cb2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049cb2c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x49cb46;\n    fcn.00408bb4();\n    uStack36 = 0x49cc16;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x49cb60;\n    puStack32 = &stack0xfffffffc;\n    fcn.004a1ae0();\n    uStack48 = 0x49cbf3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x49cb77;\n    puStack44 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack60 = 0x49cbcb;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a1be4();\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x49cbd2;\n    if (piVar2 != NULL) {\n        uStack60 = 0x49cbca;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "0049cf5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049cf5c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x49cf70;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x49cfd9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.00455ba4();\n        fcn.0040b494();\n    }\n    fcn.0049cc24();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49cfe0;\n    uStack44 = 0x49cfd8;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 311
    },
    "0049d34c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049d34c(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x49d370;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x49d37b;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x49d3cc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49d3d3;\n    if (piVar2 != NULL) {\n        uStack32 = 0x49d3cb;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0049d400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049d400(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49d419;\n    fcn.0049d808();\n    uStack32 = 0x49d4aa;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49d430;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49d482;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049d90c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49d489;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49d481;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "0049d700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049d700(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49d7f0;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49d6f4;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0049d768": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049d768(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49d7d2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aedb8();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49d758;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49d7d9;\n    uStack24 = 0x49d7d1;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 265
    },
    "0049da50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049da50(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49da69;\n    fcn.0049dc78();\n    uStack32 = 0x49dafa;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49da80;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49dad2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049dd7c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49dad9;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49dad1;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "0049db70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049db70(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != fcn.0049dc60;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49db64;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0049dbd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049dbd8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49dc42;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aedd8();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49dbc8;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49dc49;\n    uStack24 = 0x49dc41;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 260
    },
    "0049de40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0049de40(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    fcn.0049dc78();\n    *(in_EAX + 0x28) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0049df80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0049df80(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**0x4ba590 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406688();\n    return *(in_EAX + 4);\n}\n",
        "token_count": 73
    },
    "0049dfd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049dfd4(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49dfed;\n    fcn.0049e1fc();\n    uStack32 = 0x49e07e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49e004;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49e056;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.0049e300();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49e05d;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49e055;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0049e0f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049e0f4(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x49e1e4;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x49e0e8;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "0049e15c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049e15c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49e1c6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aedf8();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x49e14c;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49e1cd;\n    uStack24 = 0x49e1c5;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 266
    },
    "0049e398": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049e398(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x49e3b5;\n    fcn.00408bb4();\n    uStack36 = 0x49e465;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x49e3d7;\n    puStack44 = param_2;\n    puStack32 = &stack0xfffffffc;\n    fcn.00409c00();\n    puStack44 = 0x49e3e2;\n    piVar2 = (***in_EAX)();\n    uStack48 = 0x49e442;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x49e449;\n    if (piVar2 != NULL) {\n        uStack48 = 0x49e441;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "0049e498": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049e498(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = 0x49e4b2;\n    fcn.00408bb4();\n    uStack36 = 0x49e582;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x49e4cc;\n    puStack32 = &stack0xfffffffc;\n    fcn.004a1e88();\n    uStack48 = 0x49e55f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x49e4e3;\n    puStack44 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack60 = 0x49e537;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a1f8c();\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x49e53e;\n    if (piVar2 != NULL) {\n        uStack60 = 0x49e536;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0049e8c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049e8c8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x49e8dc;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x49e945;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.00455ba4();\n        fcn.0040b494();\n    }\n    fcn.0049e590();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49e94c;\n    uStack44 = 0x49e944;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 311
    },
    "0049ecb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049ecb4(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x49ecd8;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x49ece3;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x49ed34;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49ed3b;\n    if (piVar2 != NULL) {\n        uStack32 = 0x49ed33;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "0049ed68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049ed68(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49ed81;\n    fcn.004a221c();\n    uStack32 = 0x49ee12;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49ed98;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49edea;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a2320();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49edf1;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49ede9;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "0049f000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049f000(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack40 = 0x49f027;\n    puStack36 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack36 = 0x49f032;\n    piVar3 = (***in_EAX)();\n    uStack40 = 0x49f08c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    while( true ) {\n        cVar2 = (**(*piVar3 + 4))();\n        if (cVar2 == '\\0') break;\n        (***piVar3)();\n        iVar1 = *param_1;\n        *(iVar1 + iVar4 * 8) = var_ch;\n        *(iVar1 + 4 + iVar4 * 8) = uStack12;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x49f093;\n    if (piVar3 != NULL) {\n        uStack40 = 0x49f08b;\n        (**(*piVar3 + -4))();\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0049f0ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049f0ff(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_8h;\n    uint uStack4;\n    \n    uStack4 = *in_EAX;\n    *(in_FS_OFFSET + in_EAX) = &uStack4;\n    while( true ) {\n        cVar1 = (**(**(unaff_EBP + -0x14) + 4))();\n        if (cVar1 == '\\0') break;\n        (****(unaff_EBP + -0x14))();\n        fcn.004a2620();\n    }\n    *in_FS_OFFSET = uStack4;\n    if (*(unaff_EBP + -0x14) != 0) {\n        (**(**(unaff_EBP + -0x14) + -4))();\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0049f5d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049f5d8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x49f5ec;\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n    }\n    uStack44 = 0x49f655;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00405cb8();\n    if (in_ECX < 0) {\n        fcn.00431010();\n    }\n    fcn.0040b494();\n    if (*(in_EAX + 0xc) == 0) {\n        fcn.004aee18();\n        fcn.0040b494();\n    }\n    fcn.0049f17c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49f65c;\n    uStack44 = 0x49f654;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 312
    },
    "0049f8bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049f8bc(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x49f8e0;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x49f8eb;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x49f93c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49f943;\n    if (piVar2 != NULL) {\n        uStack32 = 0x49f93b;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0049f970": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049f970(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49f989;\n    fcn.004a013c();\n    uStack32 = 0x49fa1a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49f9a0;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49f9f2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a0240();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49f9f9;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49f9f1;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "0049fb3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049fb3c(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack32 = 0x49fb60;\n    puStack28 = param_2;\n    fcn.00409c00();\n    iVar4 = 0;\n    puStack28 = 0x49fb6b;\n    piVar2 = (***in_EAX)();\n    uStack32 = 0x49fbbc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        uVar3 = (***piVar2)();\n        *(*param_1 + iVar4 * 4) = uVar3;\n        iVar4 = iVar4 + 1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x49fbc3;\n    if (piVar2 != NULL) {\n        uStack32 = 0x49fbbb;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0049fbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0049fbf0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x49fc09;\n    fcn.004a2850();\n    uStack32 = 0x49fc9a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x49fc20;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x49fc72;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a2954();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x49fc79;\n    if (piVar2 != NULL) {\n        uStack44 = 0x49fc71;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "004a0034": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a0034(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a0124;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a0028;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a009c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a009c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a0106;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aee38();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a008c;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a010d;\n    uStack24 = 0x4a0105;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 263
    },
    "004a03b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a03b0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint in_stack_ffffffbc;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4a04a4;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x4a03d7;\n    var_4h = in_EAX;\n    fcn.004a04b0();\n    uStack56 = 0x4a0487;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if (*(var_4h + 0xc) == '\\x01') {\n        bVar2 = true;\n        puStack52 = &stack0xfffffffc;\n    }\n    else {\n        var_ch = *(var_4h + 4) + 4;\n        puStack52 = &stack0xfffffffc;\n        var_8h = param_2;\n        iVar1 = fcn.004312bc();\n        bVar2 = iVar1 == -1;\n    }\n    if (bVar2) {\n        var_10h = param_2;\n        fcn.00431524();\n    }\n    else if (*(var_4h + 0xc) == '\\x02') {\n        var_18h = fcn.004a0704();\n        var_14h._0_1_ = 0;\n        arg_ch = &fcn.004a03b0::var_18h;\n        in_stack_ffffffbc = 0;\n        fcn.0040c9f0();\n        fcn.0041f2b8(in_stack_ffffffbc, arg_ch);\n        fcn.0040711c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    uStack60 = 0x4a048e;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 567
    },
    "004a04b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004a04b0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**0x4ba590 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406688();\n    return *(in_EAX + 4);\n}\n",
        "token_count": 74
    },
    "004a0504": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a0504(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4a051d;\n    fcn.004a0758();\n    uStack32 = 0x4a05ae;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x4a0534;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x4a0586;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a085c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4a058d;\n    if (piVar2 != NULL) {\n        uStack44 = 0x4a0585;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "004a0624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a0624(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a0740;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a0618;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a068c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a068c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a06f6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aee58();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a067c;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a06fd;\n    uStack24 = 0x4a06f5;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 265
    },
    "004a09cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a09cc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint in_stack_ffffffbc;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4a0ac0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x4a09f3;\n    var_4h = in_EAX;\n    fcn.004a0acc();\n    uStack56 = 0x4a0aa3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    if (*(var_4h + 0xc) == '\\x01') {\n        bVar2 = true;\n        puStack52 = &stack0xfffffffc;\n    }\n    else {\n        var_ch = *(var_4h + 4) + 4;\n        puStack52 = &stack0xfffffffc;\n        var_8h = param_2;\n        iVar1 = fcn.004312bc();\n        bVar2 = iVar1 == -1;\n    }\n    if (bVar2) {\n        var_10h = param_2;\n        fcn.00431524();\n    }\n    else if (*(var_4h + 0xc) == '\\x02') {\n        var_18h = fcn.004a0d20();\n        var_14h._0_1_ = 0;\n        arg_ch = &fcn.004a09cc::var_18h;\n        in_stack_ffffffbc = 0;\n        fcn.0040c9f0();\n        fcn.0041f2b8(in_stack_ffffffbc, arg_ch);\n        fcn.0040711c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    uStack60 = 0x4a0aaa;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 566
    },
    "004a0acc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004a0acc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**0x4ba590 == 0) {\n        fcn.0040554c();\n    }\n    fcn.0040690c();\n    fcn.00406688();\n    return *(in_EAX + 4);\n}\n",
        "token_count": 73
    },
    "004a0b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a0b20(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4a0b39;\n    fcn.004a0d74();\n    uStack32 = 0x4a0bca;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x4a0b50;\n    puStack28 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack44 = 0x4a0ba2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a0e78();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4a0ba9;\n    if (piVar2 != NULL) {\n        uStack44 = 0x4a0ba1;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "004a0c40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a0c40(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a0d5c;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a0c34;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "004a0ca8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a0ca8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a0d12;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aee78();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a0c98;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a0d19;\n    uStack24 = 0x4a0d11;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 268
    },
    "004a0f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004a0f10(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch < 0) ||\n       ((((in_EDX < arg_ch && (0 < arg_8h)) || (in_EDX < arg_8h + arg_ch + -1)) ||\n        ((arg_8h < 0 || (arg_8h + arg_ch < 0)))))) {\n        fcn.00431010();\n    }\n    if ((in_EDX != -1) && (1 < arg_8h)) {\n        fcn.004a29ec(arg_8h + arg_ch + -1, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "004a0fd8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a0fd8(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a10b8;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a0fd0;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 126
    },
    "004a103c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a103c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a109b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aee98();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x4a1030;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a10a2;\n    uStack24 = 0x4a109a;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 219
    },
    "004a1364": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a1364(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a1454;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a1358;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a13cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a13cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a1436;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aeeb8();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a13bc;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a143d;\n    uStack24 = 0x4a1435;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 264
    },
    "004a1670": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a1670(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a1760;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a1664;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a16d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a16d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a1742;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aeed8();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a16c8;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a1749;\n    uStack24 = 0x4a1741;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 265
    },
    "004a19e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a19e0(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a1ac0;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a19d8;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 126
    },
    "004a1a44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a1a44(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a1aa3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aeef8();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x4a1a38;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a1aaa;\n    uStack24 = 0x4a1aa2;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 222
    },
    "004a1d88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a1d88(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a1e68;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a1d80;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 126
    },
    "004a1dec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a1dec(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a1e4b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aef18();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x4a1de0;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a1e52;\n    uStack24 = 0x4a1e4a;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 224
    },
    "004a2114": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a2114(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a2204;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a2108;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a217c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a217c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a21e6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aef38();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a216c;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a21ed;\n    uStack24 = 0x4a21e5;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 265
    },
    "004a241c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a241c(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a24fc;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a2414;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a2480": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a2480(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a24df;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aef58();\n        fcn.0040b494();\n    }\n    *(in_EAX + 0x18) = 0x4a2474;\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a24e6;\n    uStack24 = 0x4a24de;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 219
    },
    "004a2748": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004a2748(void)\n\n{\n    int32_t *in_EAX;\n    bool bVar1;\n    \n    bVar1 = *(in_EAX + 0x22) != 0;\n    if (!bVar1) {\n        bVar1 = *(*in_EAX + 8) != 0x4a2838;\n    }\n    if (bVar1) {\n        in_EAX[5] = 0x4a273c;\n        return;\n    }\n    in_EAX[5] = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "004a27b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a27b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4a281a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b494();\n    if (*(in_EAX + 0x1c) == 0) {\n        fcn.004aef78();\n        fcn.0040b494();\n    }\n    if (param_2 == 0) {\n        *(in_EAX + 0x18) = 0;\n    }\n    else {\n        *(in_EAX + 0x18) = 0x4a27a0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4a2821;\n    uStack24 = 0x4a2819;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 265
    },
    "004a29ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004a29ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < arg_8h) {\n        do {\n            iVar3 = arg_ch;\n            arg_8h_00 = arg_8h;\n            if (arg_8h - arg_ch == 1) {\n                iVar3 = (**(*in_ECX + 0xc))();\n                if (iVar3 < 1) {\n                    return;\n                }\n                uVar1 = *(in_EAX + arg_ch * 4);\n                *(in_EAX + arg_ch * 4) = *(in_EAX + arg_8h * 4);\n                *(in_EAX + arg_8h * 4) = uVar1;\n                return;\n            }\n            do {\n                while (iVar4 = (**(*in_ECX + 0xc))(),  iVar4 < 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                while (iVar4 = (**(*in_ECX + 0xc))(),  0 < iVar4) {\n                    arg_8h_00 = arg_8h_00 + -1;\n                }\n                if (iVar3 <= arg_8h_00) {\n                    if (arg_8h_00 != iVar3) {\n                        uVar1 = *(in_EAX + iVar3 * 4);\n                        *(in_EAX + iVar3 * 4) = *(in_EAX + arg_8h_00 * 4);\n                        *(in_EAX + arg_8h_00 * 4) = uVar1;\n                    }\n                    iVar3 = iVar3 + 1;\n                    arg_8h_00 = arg_8h_00 + -1;\n                }\n            } while (iVar3 <= arg_8h_00);\n            if (arg_8h - iVar3 < arg_8h_00 - arg_ch) {\n                iVar4 = arg_8h_00;\n                iVar2 = arg_ch;\n                if (iVar3 < arg_8h) {\n                    fcn.004a29ec(arg_8h, iVar3);\n                }\n            }\n            else {\n                iVar4 = arg_8h;\n                iVar2 = iVar3;\n                if (arg_ch < arg_8h_00) {\n                    fcn.004a29ec(arg_8h_00, arg_ch);\n                }\n            }\n            arg_ch = iVar2;\n            arg_8h = iVar4;\n        } while (arg_ch < arg_8h);\n    }\n    return;\n}\n",
        "token_count": 639
    },
    "004aefa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.004aefa0(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar *unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint lpSecurityAttributes;\n    uchar *var_14h;\n    uint var_10h;\n    uchar *hMem;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    lpSecurityAttributes = 0x4af10b;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    var_10h = unaff_ESI;\n    hMem = unaff_EBX;\n    fcn.00408550();\n    fcn.004228bc();\n    fcn.004229b8();\n    fcn.00422d78(var_1ch);\n    fcn.00422678();\n    fcn.004086e4();\n    fcn.004229b8();\n    iVar2 = fcn.00408abc();\n    if (iVar2 == 1) {\n        fcn.0042307c();\n        if (var_4h == 0) {\n            fcn.00407e48();\n        }\n        fcn.004087c4(0x4af1e4, 0x4af1a4, 0x4af194, var_4h, 0x4af154);\n        uStack68 = fcn.004084ec(1, &hMem, 0);\n        iVar2 = sub.advapi32.dll_ConvertStringSecurityDescriptorToSecurityDescriptorW();\n        if (iVar2 == 0) {\n            uVar1 = sub.kernel32.dll_GetLastError();\n            *param_2 = uVar1;\n        }\n        else {\n            lpSecurityAttributes = 0xc;\n            var_10h = 0;\n            var_14h = hMem;\n            iVar2 = sub.kernel32.dll_CreateDirectoryW();\n            if (iVar2 == 0) {\n                uVar1 = sub.kernel32.dll_GetLastError();\n                *param_2 = uVar1;\n            }\n            func_0x0040e318(hMem);\n        }\n    }\n    else {\n        iVar2 = sub.kernel32.dll_CreateDirectoryW();\n        if (iVar2 == 0) {\n            uVar1 = sub.kernel32.dll_GetLastError();\n            *param_2 = uVar1;\n        }\n    }\n    *in_FS_OFFSET = uStack68;\n    fcn.00407a80(0x4af112);\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 784
    },
    "004af4d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.004af4d8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uchar auStack20 [20];\n    \n    puStack24 = 0x4af4e0;\n    iVar1 = fcn.0041ff44();\n    if (iVar1 == 2) {\n        uStack28 = 0x28;\n        uStack32 = 0x4af4ed;\n        puStack24 = &stack0xffffffec;\n        uStack32 = sub.kernel32.dll_GetCurrentProcess();\n        puStack36 = 0x4af4f3;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 == 0) {\n            return false;\n        }\n        puStack36 = &stack0xffffffe8;\n        uStack40 = 0x4af554;\n        uVar2 = 0;\n        sub.advapi32.dll_LookupPrivilegeValueW(0);\n        uStack40 = 1;\n        uStack28 = 2;\n        sub.advapi32.dll_AdjustTokenPrivileges(uVar2, 0, &stack0xffffffd8, 0, 0, 0);\n        iVar1 = sub.kernel32.dll_GetLastError();\n        if (iVar1 != 0) {\n            return false;\n        }\n    }\n    iVar1 = sub.user32.dll_ExitWindowsEx(2, 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 346
    },
    "004af57c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004af57c(uint arg_8h, uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < in_ECX + -1) {\n        iVar2 = 0;\n        do {\n            if (iVar2 == 1) {\n                func_0x00420ad8(dwMilliseconds);\n            }\n            else if (1 < iVar2) {\n                func_0x00420ad8(arg_8h);\n            }\n            iVar1 = fcn.0042729c();\n            if (iVar1 != 0) {\n                return;\n            }\n            iVar1 = sub.kernel32.dll_GetLastError();\n            if (iVar1 == 2) {\n                return;\n            }\n            iVar1 = sub.kernel32.dll_GetLastError();\n            if (iVar1 == 3) {\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            in_ECX = in_ECX + -1;\n        } while (in_ECX != 0);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "004afaf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004afaf0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint hProcess;\n    uint hObject;\n    uint var_48h;\n    uint var_4h;\n    \n    puStack108 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack112 = 0x4afbc7;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack116;\n    fcn.004087c4(param_2, 0x4afbf4);\n    fcn.00405884();\n    var_48h = 0x44;\n    uVar1 = fcn.004084ec(0, 0, 0, 0, 0, 0, &var_48h, &hProcess);\n    iVar2 = sub.kernel32.dll_CreateProcessW(0, uVar1);\n    if (iVar2 == 0) {\n        fcn.004af714();\n    }\n    func_0x0040e0a0(hObject);\n    do {\n        fcn.004afac4();\n        iVar2 = sub.user32.dll_MsgWaitForMultipleObjects();\n    } while (iVar2 == 1);\n    fcn.004afac4();\n    sub.kernel32.dll_GetExitCodeProcess(hProcess, param_1);\n    func_0x0040e0a0();\n    *in_FS_OFFSET = hProcess;\n    fcn.00407a20(0x4afbce);\n    return;\n}\n",
        "token_count": 369
    },
    "004afbfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004afbfc(void)\n\n{\n    if (*(*0x4ba674 + 0x2fc) != 0) {\n        fcn.0041f27c();\n        fcn.0040711c();\n        return;\n    }\n    fcn.0041f27c();\n    fcn.0040711c();\n    return;\n}\n",
        "token_count": 79
    },
    "004b5980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004b5980(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4b5a41;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x4be7d4 == 0;\n    *0x4be7d4 = *0x4be7d4 + -1;\n    if (bVar1) {\n        fcn.00407588();\n        fcn.004075d0();\n        if (*0x4be631 != '\\0') {\n            fcn.00407e00();\n        }\n        fcn.0041fd68();\n        fcn.0040b310();\n        *0x4be8f8 = fcn.00405cb8();\n        *0x4c0900 = fcn.00405cb8();\n        *0x4b7e30 = fcn.00420c6c;\n        fcn.0040ae34();\n        *0x4be7d8 = 0;\n        *0x4be7e4 = fcn.00405cb8();\n        fcn.0042053c();\n        fcn.004206f0();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 325
    },
    "004b5a90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004b5a90(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint arg_ch;\n    uint arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = 0x4b5b5a;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    bVar2 = *0x4c1124 == 0;\n    *0x4c1124 = *0x4c1124 + -1;\n    if (bVar2) {\n        arg_ch = 0x4b5ba8;\n        uVar1 = func_0x0040e1a8(0x4b5ba8, 0x4b5b68);\n        *0x4c1128 = fcn.0040e1b8(uVar1, arg_ch);\n        uVar1 = func_0x0040e1a8(0x4b5ba8, 0x4b5bc4);\n        *0x4c112c = fcn.0040e1b8(uVar1, arg_ch_00);\n        if ((*0x4c1128 == 0) || (*0x4c112c == 0)) {\n            *0x4c1130 = 0;\n        }\n        else {\n            *0x4c1130 = 1;\n        }\n        fcn.00422da4();\n        fcn.00422678();\n        fcn.004086e4();\n        fcn.00421248();\n        fcn.00423434();\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 402
    },
    "004b5d0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004b5d0c(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4b5d66;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x4c17d0 == 0;\n    *0x4c17d0 = *0x4c17d0 + -1;\n    if (bVar1) {\n        fcn.00409868();\n        fcn.0040b310();\n        if (*0x4c17e8 == 0) {\n            *0x4c17e8 = fcn.00405cb8();\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 208
    },
    "00405c00": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00405c00(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x405c6e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00405be8();\n    uVar1 = fcn.00407ee4();\n    uVar1 = fcn.004084ec(uVar1);\n    uVar1 = fcn.00407ee4(uVar1);\n    uVar2 = fcn.004084ec(uVar1);\n    uVar1 = *0x4bb984;\n    sub.kernel32.dll_CompareStringW(*0x4bb984, 1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00407a20(0x405c75);\n    return;\n}\n",
        "token_count": 235
    },
    "00406060": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406060(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint8_t auStack1548 [232];\n    uchar uStack1316;\n    uchar auStack1315 [23];\n    uint8_t auStack1292 [208];\n    uchar auStack1084 [48];\n    uchar auStack1036 [464];\n    uchar auStack572 [24];\n    uchar auStack548 [536];\n    \n    iVar4 = *param_2 + 1;\n    puVar5 = auStack1292;\n    for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *param_2;\n        param_2 = param_2 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = *in_EAX + 1;\n    puVar5 = auStack1548;\n    for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar1 = sub.kernel32.dll_MultiByteToWideChar(0xfde9, 0, auStack1548 + 1, auStack1548[0], auStack1036, 0x100);\n    uVar2 = sub.kernel32.dll_MultiByteToWideChar(0xfde9, 0, auStack1315, uStack1316, auStack548, 0x100);\n    uVar3 = sub.kernel32.dll_CompareStringW(*0x4bb984, 1, auStack1084, uVar1, auStack572, uVar2);\n    return uVar3 & 0xffffff00 | uVar3 == 2;\n}\n",
        "token_count": 451
    },
    "00423054": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423054(uint phkResult, uint arg_ch, uint ulOptions)\n\n{\n    func_0x0040e090();\n    return;\n}\n",
        "token_count": 38
    },
    "00446780": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00446780(void)\n\n{\n    uint16_t uVar1;\n    uint16_t **in_EAX;\n    \n    uVar1 = **in_EAX;\n    *in_EAX = *in_EAX + uVar1;\n    if (uVar1 == 2) {\n        fcn.0040b47c();\n        return;\n    }\n    fcn.00446708();\n    return;\n}\n",
        "token_count": 92
    },
    "00451f9c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00451f9c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = (**(*in_EAX + 0x20))();\n    if (cVar1 != '\\0') {\n        cVar1 = (**(*in_EAX + 0x10))();\n        if (cVar1 == '\\x02') {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "004681a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004681a0(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00451fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00451fc0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = (**(*in_EAX + 0x20))();\n    if (cVar1 != '\\0') {\n        cVar1 = (**(*in_EAX + 0x10))();\n        if (cVar1 == '\\x03') {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "004048d4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004048d4(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    char acStack19 [3];\n    \n    iVar2 = 0;\n    do {\n        uVar1 = in_EAX / 10;\n        iVar2 = iVar2 + 1;\n        (&stack0xfffffff0)[-iVar2] = in_EAX + uVar1 * -10 + '0';\n        in_EAX = uVar1;\n    } while (uVar1 != 0);\n    fcn.004055b4();\n    return iVar2 + param_2;\n}\n",
        "token_count": 155
    },
    "00407630": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00407630(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x4b7000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x4b7004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = \"0123456789ABCDEF\"[uVar2 & 0xf];\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 223
    },
    "0041bb33": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bb33(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x41bb1f + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x14) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0041bbca;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x15 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0041bbd3;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0041bbda;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0041bc00:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0041bbda:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0041bbca:\n        uVar9 = *(iVar8 + -0x15 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0041bbd3:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0041bc00;\n}\n",
        "token_count": 1152
    },
    "0044a008": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.0044a008(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint uStackY48;\n    uint *arg_8h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    iVar1 = 0x19;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_24h = 0;\n    fcn.00408bb4();\n    var_20h = 0x44a220;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0044a008::var_24h;\n    iVar1 = (**(*in_EAX + 0x30))();\n    if ((*(iVar1 + 8) & 0xff000000) == 0xff000000) {\n        arg_8h = &fcn.0044a008::var_20h;\n        uStackY48 = 0x44a064;\n        (**(*in_EAX + 0x10))();\n        uStackY48 = 0x44a069;\n        fcn.00446cec();\n        uStackY48 = 0x44a075;\n        fcn.0043d174(arg_8h);\n        uStackY48 = 0x44a087;\n        fcn.0043d648();\n    }\n    else {\n        fcn.0043bdf0();\n        iVar1 = (**(*in_EAX + 0x28))();\n        if (iVar1 == -0x80000000) {\n            uStackY48 = 0x44a0c6;\n            fcn.00409c00();\n            fcn.0043ce98();\n            fcn.00408f5c();\n            uStackY48 = 0x44a0ef;\n            (**(*in_EAX + 0x10))();\n            fcn.00446cec();\n            fcn.0043d174(unaff_EDI);\n            fcn.00408f5c();\n            var_20h = 0;\n            var_24h = 0;\n            arg_8h = &fcn.0044a008::var_6ch;\n            uStackY48 = 0x44a12a;\n            fcn.00451c38(arg_8h, 0, 0, 0);\n        }\n        else {\n            uStackY48 = 0x44a144;\n            fcn.00409c00();\n            fcn.0043ce98();\n            fcn.00408f5c();\n            (**(*in_EAX + 0x28))();\n            fcn.0043cdb0();\n            fcn.00408f5c();\n            uStackY48 = 0x44a19f;\n            (**(*in_EAX + 0x10))();\n            fcn.00446cec();\n            fcn.0043d174(unaff_EDI);\n            fcn.00408f5c();\n            var_20h = 0;\n            var_24h = 0;\n            arg_8h = &fcn.0044a008::var_cch;\n            uStackY48 = 0x44a1e0;\n            fcn.00451c38(arg_8h, 0, 0, 0);\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    var_20h = 0x44a227;\n    var_24h = 0x44a203;\n    fcn.00408d08();\n    var_24h = 0x44a211;\n    fcn.00408c90();\n    var_24h = 0x44a21f;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 938
    },
    "00432524": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00432524(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t *in_EAX;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t *var_4h;\n    \n    var_18h = param_2 + -0x21524111 + param_1;\n    var_14h = var_18h;\n    var_10h = var_18h;\n    var_4h = in_EAX;\n    if ((in_EAX & 3) == 0) {\n        if (0xc < param_2) {\n            do {\n                var_18h = var_18h + var_4h[2];\n                uVar1 = (var_10h + *var_4h) - var_18h ^ (var_18h * 0x10 | var_18h >> 0x1c);\n                iVar2 = var_18h + var_14h + var_4h[1];\n                uVar3 = (var_14h + var_4h[1]) - uVar1 ^ (uVar1 << 6 | uVar1 >> 0x1a);\n                iVar4 = uVar1 + iVar2;\n                uVar1 = iVar2 - uVar3 ^ (uVar3 << 8 | uVar3 >> 0x18);\n                iVar2 = uVar3 + iVar4;\n                var_10h = iVar4 - uVar1 ^ (uVar1 << 0x10 | uVar1 >> 0x10);\n                iVar4 = uVar1 + iVar2;\n                var_14h = iVar2 - var_10h ^ (var_10h << 0x13 | var_10h >> 0xd);\n                var_10h = var_10h + iVar4;\n                var_18h = iVar4 - var_14h ^ (var_14h << 4 | var_14h >> 0x1c);\n                var_14h = var_14h + var_10h;\n                param_2 = param_2 + -0xc;\n                var_4h = var_4h + 3;\n            } while (0xc < param_2);\n        }\n    // switch table (13 cases) at 0x432625\n        switch(param_2) {\n        case 0:\n            return var_18h;\n        case 1:\n            var_10h = var_10h + (*var_4h & 0xff);\n            break;\n        case 2:\n            var_10h = var_10h + (*var_4h & 0xffff);\n            break;\n        case 3:\n            var_10h = var_10h + (*var_4h & 0xffffff);\n            break;\n        case 4:\n            var_10h = var_10h + *var_4h;\n            break;\n        case 5:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + (var_4h[1] & 0xff);\n            break;\n        case 6:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + (var_4h[1] & 0xffff);\n            break;\n        case 7:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + (var_4h[1] & 0xffffff);\n            break;\n        case 8:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + var_4h[1];\n            break;\n        case 9:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + var_4h[1];\n            var_18h = var_18h + (var_4h[2] & 0xff);\n            break;\n        case 10:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + var_4h[1];\n            var_18h = var_18h + (var_4h[2] & 0xffff);\n            break;\n        case 0xb:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + var_4h[1];\n            var_18h = var_18h + (var_4h[2] & 0xffffff);\n            break;\n        case 0xc:\n            var_10h = var_10h + *var_4h;\n            var_14h = var_14h + var_4h[1];\n            var_18h = var_18h + var_4h[2];\n        }\n    }\n    else {\n        if (0xc < param_2) {\n            do {\n                var_18h = var_18h + var_4h[2];\n                uVar1 = (var_10h + *var_4h) - var_18h ^ (var_18h * 0x10 | var_18h >> 0x1c);\n                iVar2 = var_18h + var_14h + var_4h[1];\n                uVar3 = (var_14h + var_4h[1]) - uVar1 ^ (uVar1 << 6 | uVar1 >> 0x1a);\n                iVar4 = uVar1 + iVar2;\n                uVar1 = iVar2 - uVar3 ^ (uVar3 << 8 | uVar3 >> 0x18);\n                iVar2 = uVar3 + iVar4;\n                var_10h = iVar4 - uVar1 ^ (uVar1 << 0x10 | uVar1 >> 0x10);\n                iVar4 = uVar1 + iVar2;\n                var_14h = iVar2 - var_10h ^ (var_10h << 0x13 | var_10h >> 0xd);\n                var_10h = var_10h + iVar4;\n                var_18h = iVar4 - var_14h ^ (var_14h << 4 | var_14h >> 0x1c);\n                var_14h = var_14h + var_10h;\n                param_2 = param_2 + -0xc;\n                var_4h = var_4h + 3;\n            } while (0xc < param_2);\n        }\n    // switch table (13 cases) at 0x432891\n        switch(param_2) {\n        case 0:\n            return var_18h;\n        default:\n            var_18h = var_18h + *(var_4h + 0xb) * 0x1000000;\n        case 0xb:\n            var_18h = var_18h + *(var_4h + 10) * 0x10000;\n        case 10:\n            var_18h = var_18h + *(var_4h + 9) * 0x100;\n        case 9:\n            var_18h = var_18h + *(var_4h + 2);\n        case 8:\n            var_14h = var_14h + *(var_4h + 7) * 0x1000000;\n        case 7:\n            var_14h = var_14h + *(var_4h + 6) * 0x10000;\n        case 6:\n            var_14h = var_14h + *(var_4h + 5) * 0x100;\n        case 5:\n            var_14h = var_14h + *(var_4h + 1);\n        case 4:\n            var_10h = var_10h + *(var_4h + 3) * 0x1000000;\n        case 3:\n            var_10h = var_10h + *(var_4h + 2) * 0x10000;\n        case 2:\n            var_10h = var_10h + *(var_4h + 1) * 0x100;\n        case 1:\n            var_10h = var_10h + *var_4h;\n        }\n    }\n    uVar1 = (var_18h ^ var_14h) - (var_14h << 0xe | var_14h >> 0x12);\n    uVar3 = (var_10h ^ uVar1) - (uVar1 * 0x800 | uVar1 >> 0x15);\n    uVar5 = (var_14h ^ uVar3) - (uVar3 * 0x2000000 | uVar3 >> 7);\n    uVar1 = (uVar1 ^ uVar5) - (uVar5 * 0x10000 | uVar5 >> 0x10);\n    uVar3 = (uVar3 ^ uVar1) - (uVar1 * 0x10 | uVar1 >> 0x1c);\n    uVar3 = (uVar5 ^ uVar3) - (uVar3 * 0x4000 | uVar3 >> 0x12);\n    return (uVar1 ^ uVar3) - (uVar3 * 0x1000000 | uVar3 >> 8);\n}\n",
        "token_count": 2180
    },
    "0040803c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040803c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x0040806c:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x0040806c;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 325
    },
    "004083bc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004083bc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00405920": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405920(uint param_1, uint32_t *param_2)\n\n{\n    bool bVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x004059b1:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x004059c3:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x004059c3;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x004059cb:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 - 0x41) goto code_r0x004059bc;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x004059bc;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00405a17:\n                uVar2 = 0;\n                goto code_r0x00405a1a;\n            }\n            goto code_r0x004059b1;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00405987;\n            goto code_r0x004059bc;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x004059cb;\n        while (uVar3 != 0) {\ncode_r0x00405987:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x004059bc;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00405a17;\n        }\n        else if (-1 < uVar2) goto code_r0x00405a17;\n    }\ncode_r0x004059bc:\n    uVar2 = puVar6 - in_EAX;\ncode_r0x00405a1a:\n    *param_2 = uVar2 >> 1;\n    return;\n}\n",
        "token_count": 857
    },
    "00407b24": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00407b24(void)\n\n{\n    int32_t **in_EAX;\n    int32_t iVar1;\n    uint extraout_ECX;\n    int32_t *piVar2;\n    \n    piVar2 = *in_EAX;\n    if (piVar2 != NULL) {\n        iVar1 = sub.oleaut32.dll_SysAllocStringLen(piVar2, piVar2[-1] >> 1);\n        if (iVar1 == 0) {\n            fcn.00405500(CONCAT13(1, extraout_ECX));\n            return;\n        }\n        *piVar2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00407e74": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e74(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint extraout_ECX;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            fcn.00405500(CONCAT13(1, extraout_ECX));\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00408130": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408130(uint16_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t arg_ch;\n    int16_t *piVar2;\n    \n    arg_ch = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00408160:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x0040815d:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00408160;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x0040815d;\n            }\n        }\n        arg_ch = piVar2 - param_2 >> 1;\n    }\n    if (arg_ch == 0) {\n        fcn.00407a44();\n    }\n    else {\n        if (param_1 == 0) {\n            param_1 = *0x4bb97c;\n        }\n        iVar1 = fcn.00407b44(param_1, arg_ch);\n        fcn.00408254();\n        if (iVar1 < 1) {\n            fcn.00407a44();\n        }\n        else {\n            fcn.00407b44(param_1, arg_ch);\n            *(*in_EAX + -0xc) = param_1;\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "00408184": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408184(uint16_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t arg_ch;\n    \n    arg_ch = 0;\n    if (param_2 != 0) {\n        arg_ch = *(param_2 + -4) >> 1;\n    }\n    if (arg_ch == 0) {\n        fcn.00407a44();\n    }\n    else {\n        if (param_1 == 0) {\n            param_1 = *0x4bb97c;\n        }\n        iVar1 = fcn.00407b44(param_1, arg_ch);\n        fcn.00408254();\n        if (iVar1 < 1) {\n            fcn.00407a44();\n        }\n        else {\n            fcn.00407b44(param_1, arg_ch);\n            *(*in_EAX + -0xc) = param_1;\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0040834c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040834c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint extraout_ECX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00408375:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00408372:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00408375;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00408372;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 == 0) {\n        fcn.00405500(CONCAT13(1, extraout_ECX));\n        return;\n    }\n    iVar1 = *param_2;\n    *param_2 = iVar2;\n    sub.oleaut32.dll_SysFreeString(iVar1);\n    return;\n}\n",
        "token_count": 423
    },
    "00408550": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408550(uint param_1, int16_t *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    int16_t *piVar2;\n    \n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*piVar2 != 0 && (piVar2[1] != 0)) && (piVar2[2] != 0)) && (piVar2[3] != 0)); piVar2 = piVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00407974();\n    if (param_2 != NULL) {\n        fcn.004055b4();\n    }\n    fcn.00407a44();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 185
    },
    "004085c8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004085c8(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    \n    uVar1 = fcn.00407974();\n    if (param_2 != 0) {\n        fcn.004055b4();\n    }\n    fcn.00407a44();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 95
    },
    "00408abc": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408abc(int32_t param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    bool bVar9;\n    \n    if (((in_EAX != 0) && (param_2 != 0)) && (0 < param_1)) {\n        iVar6 = *(in_EAX + -4);\n        iVar7 = *(param_2 + -4) - (param_1 + -1);\n        iVar3 = (param_1 + -1) * 2;\n        param_2 = param_2 + iVar3;\n        if ((iVar6 <= iVar7) && (0 < iVar6)) {\n            piVar8 = iVar7 * 2 + param_2;\n            iVar7 = (iVar6 + -1) * 2;\n            piVar4 = param_2 + iVar7;\n            piVar2 = in_EAX + iVar7;\n            iVar3 = iVar3 - piVar4;\n            iVar6 = (iVar6 + -1) * -2;\n            iVar1 = *piVar2;\ncode_r0x00408aff:\n            do {\n                if (iVar1 == *piVar4) goto code_r0x00408b3d;\n                piVar5 = piVar4;\n                if (iVar1 == piVar4[1]) goto code_r0x00408b40;\ncode_r0x00408b0a:\n                piVar4 = piVar5 + 4;\n                if (piVar4 < piVar8) {\n                    if (iVar1 != piVar5[2]) {\n                        if (iVar1 != piVar5[3]) goto code_r0x00408aff;\n                        piVar4 = piVar5 + 5;\n                    }\n                    piVar4 = piVar4 + -2;\ncode_r0x00408b3d:\n                    piVar4 = piVar4 + -1;\ncode_r0x00408b40:\n                    iVar7 = iVar6;\n                    if (iVar6 == 0) {\ncode_r0x00408b64:\n                        if (piVar8 < piVar4 + 2) {\n                            return 0;\n                        }\n                        return iVar3 + piVar4 + 2 >> 1;\n                    }\n                    while (piVar5 = piVar4,  *(piVar2 + iVar7) == *(piVar4 + iVar7 + 2)) {\n                        if (-5 < iVar7) goto code_r0x00408b64;\n                        if (*(piVar2 + iVar7 + 4) != *(piVar4 + iVar7 + 6)) break;\n                        bVar9 = SCARRY4(iVar7, 8);\n                        iVar7 = iVar7 + 8;\n                        if (bVar9 == iVar7 < 0) goto code_r0x00408b64;\n                    }\n                    goto code_r0x00408b0a;\n                }\n                piVar4 = piVar5 + 2;\n            } while (piVar4 < piVar8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 731
    },
    "0040bf00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bf00(uint32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uStack20;\n    \n    uStack20 = 0;\n    if (*(in_EAX + 4) < 1) {\n        *param_1 = 0;\n    }\n    else {\n        uVar3 = 0;\n        iVar4 = *(in_EAX + 4) + -1;\n        if (-1 < iVar4) {\n            do {\n                uVar2 = iVar4 + uVar3 >> 1;\n                iVar1 = **(*(in_EAX + 8) + uVar2 * 4);\n                if (iVar1 - param_2 < 0) {\n                    uVar3 = uVar2 + 1;\n                }\n                else {\n                    iVar4 = uVar2 - 1;\n                    if (iVar1 == param_2) {\n                        uStack20 = *(*(in_EAX + 8) + uVar2 * 4);\n                        uVar3 = uVar2;\n                    }\n                }\n            } while (uVar3 <= iVar4);\n        }\n        *param_1 = uVar3;\n    }\n    return uStack20;\n}\n",
        "token_count": 301
    },
    "0042541c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042541c(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar2 = *(in_EAX + 8);\n    uVar4 = *(in_EAX + 0xc);\n    if (param_2 != 0) {\n        do {\n            uVar2 = uVar2 >> 1;\n            uVar3 = uVar3 * 2;\n            if (uVar2 <= uVar4) {\n                uVar4 = uVar4 - uVar2;\n                uVar3 = uVar3 | 1;\n            }\n            if (uVar2 < 0x1000000) {\n                uVar2 = uVar2 << 8;\n                uVar1 = fcn.0042539c();\n                uVar4 = uVar1 | uVar4 << 8;\n            }\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    *(in_EAX + 8) = uVar2;\n    *(in_EAX + 0xc) = uVar4;\n    return CONCAT44(in_EAX, uVar3);\n}\n",
        "token_count": 302
    },
    "00498a0c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00498a0c(uint32_t *param_1)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar4 = 0;\n    iVar5 = *(*(in_EAX + 0x34) + 8) + -1;\n    if (-1 < iVar5) {\n        do {\n            uVar3 = iVar5 + uVar4 >> 1;\n            uVar1 = *(*(*(in_EAX + 0x34) + 4) + uVar3 * 4);\n            iVar2 = fcn.00419780();\n            if (iVar2 < 0) {\n                uVar4 = uVar3 + 1;\n            }\n            else {\n                iVar5 = uVar3 - 1;\n                if (iVar2 == 0) {\n                    *param_1 = uVar3;\n                    return uVar1;\n                }\n            }\n        } while (uVar4 <= iVar5);\n    }\n    *param_1 = uVar4;\n    return 0;\n}\n",
        "token_count": 260
    },
    "0043c528": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043c528(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 3U & 0xfffffffc;\n}\n",
        "token_count": 39
    },
    "004447cc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004447cc(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0043fb6c();\n    fcn.00407bfc(0xfde9);\n    *(arg_8h + -4) = *(arg_8h + -4) + (uVar1 & 0xffff);\n    *(arg_8h + -8) = *(arg_8h + -8) - ((uVar1 & 0xffff) + 2);\n    return;\n}\n",
        "token_count": 124
    },
    "00444808": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444808(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = fcn.0043fb80();\n    *in_EAX = uVar1;\n    fcn.004055b4();\n    *(arg_8h + -4) = *(arg_8h + -4) + *in_EAX;\n    *(arg_8h + -8) = *(arg_8h + -8) - (*in_EAX + 1);\n    return;\n}\n",
        "token_count": 128
    },
    "00451b4c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451b4c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = fcn.0043cbec();\n    iVar3 = fcn.0043cd4c();\n    if ((((iVar2 - 1U < 2) || (iVar2 - 1U == 3)) && (cVar1 = fcn.0043cbc4(),  cVar1 != '\\x04')) &&\n       (iVar2 = fcn.0043c508(),  iVar2 != 0)) {\n        if (iVar2 == 1) {\n            fcn.0043d690();\n        }\n        else if (iVar2 == 2) {\n            fcn.0043d690();\n        }\n        else if (iVar2 == 4) {\n            fcn.0043d690();\n        }\n    }\n    else {\n        *(arg_8h + -0x40) = *(arg_8h + -0x40) - iVar3;\n        fcn.0043d690();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004920b4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004920b4(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00490008();\n        if (cVar1 != '\\0') break;\n        fcn.00492174();\n    }\n    fcn.0048fe70();\n    return;\n}\n",
        "token_count": 78
    },
    "00492110": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492110(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00490008();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00490418();\n        if (cVar1 - 2U < 3) {\n            fcn.00492174();\n        }\n        fcn.00492584();\n        while( true ) {\n            cVar1 = fcn.00490008();\n            if (cVar1 != '\\0') break;\n            fcn.00492324();\n        }\n        fcn.0048fe70();\n    }\n    fcn.0048fe70();\n    return;\n}\n",
        "token_count": 163
    },
    "00405a24": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00405a24(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004af218": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.004af218(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4af280;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00407a20();\n    iVar1 = 5;\n    do {\n        fcn.00408510();\n        fcn.00408950();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4af287;\n    uStack28 = 0x4af27f;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 201
    },
    "004253dc": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.004253dc(void)\n\n{\n    uint8_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    in_EAX[1] = 0;\n    *in_EAX = 0;\n    in_EAX[6] = 0;\n    in_EAX[3] = 0;\n    in_EAX[2] = 0xffffffff;\n    iVar2 = 0;\n    do {\n        uVar1 = fcn.0042539c();\n        iVar2 = iVar2 + 1;\n        in_EAX[3] = uVar1 | in_EAX[3] << 8;\n    } while (iVar2 < 5);\n    return;\n}\n",
        "token_count": 157
    },
    "0042547c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042547c(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (*(param_2 + 8) >> 0xb) * *in_EAX;\n    if (*(param_2 + 0xc) <= uVar2 && uVar2 - *(param_2 + 0xc) != 0) {\n        *(param_2 + 8) = uVar2;\n        *in_EAX = *in_EAX + (0x800 - *in_EAX >> 5);\n        if (*(param_2 + 8) < 0x1000000) {\n            uVar2 = fcn.0042539c();\n            *(param_2 + 0xc) = uVar2 & 0xff | *(param_2 + 0xc) << 8;\n            *(param_2 + 8) = *(param_2 + 8) << 8;\n        }\n        return 0;\n    }\n    *(param_2 + 8) = *(param_2 + 8) - uVar2;\n    *(param_2 + 0xc) = *(param_2 + 0xc) - uVar2;\n    *in_EAX = *in_EAX - (*in_EAX >> 5);\n    if (*(param_2 + 8) < 0x1000000) {\n        uVar1 = fcn.0042539c();\n        *(param_2 + 0xc) = uVar1 | *(param_2 + 0xc) << 8;\n        *(param_2 + 8) = *(param_2 + 8) << 8;\n    }\n    return 1;\n}\n",
        "token_count": 398
    },
    "004a0704": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004a0704(uint param_1, uint param_2)\n\n{\n    return CONCAT44(param_2, param_2);\n}\n",
        "token_count": 35
    },
    "004a0d20": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004a0d20(uint param_1, uint param_2)\n\n{\n    return CONCAT44(param_2, param_2);\n}\n",
        "token_count": 36
    },
    "00407388": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00407388(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_EAX;\n    int32_t **ppiVar2;\n    int32_t *in_FS_OFFSET;\n    \n    ppiVar1 = *(in_EAX + 4);\n    if (ppiVar1 != NULL) {\n        ppiVar2 = *in_FS_OFFSET;\n        if (ppiVar1 == ppiVar2) {\n            *in_FS_OFFSET = *ppiVar1;\n            return;\n        }\n        for (; ppiVar2 != 0xffffffff; ppiVar2 = *ppiVar2) {\n            if (*ppiVar2 == ppiVar1) {\n                *ppiVar2 = *ppiVar1;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0040aef4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040aef4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY628;\n    int32_t iStack616;\n    uint uStack612;\n    uchar *puStack608;\n    uint var_254h;\n    uint var_4h;\n    \n    puStack608 = 0x40af09;\n    fcn.00407b04();\n    uStack612 = 0x40af52;\n    iStack616 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd98;\n    puStack608 = &stack0xfffffffc;\n    uVar1 = fcn.004084ec(&fcn.0040aef4::var_254h);\n    iStackY628 = 0x40af2c;\n    iVar2 = sub.kernel32.dll_FindFirstFileW(uVar1);\n    if (iVar2 != -1) {\n        sub.kernel32.dll_FindClose();\n        iStackY628 = iVar2;\n    }\n    *in_FS_OFFSET = iStackY628;\n    fcn.00407a20(0x40af59);\n    return;\n}\n",
        "token_count": 261
    },
    "0040cc1c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040cc1c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040cc14();\n    if (iVar1 != 0) {\n        if (*0x4b7c14 == -1) {\n            fcn.0040788c();\n        }\n        iVar1 = fcn.0040cc08();\n        if (iVar1 == 0) {\n            fcn.0040788c();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x4b7c14, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00422a98": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00422a98(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00422a44();\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "004677e4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004677e4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x46783a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0040c7c8();\n    iVar1 = fcn.0046776c();\n    if (iVar1 == -1) {\n        fcn.0046767c();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x467841;\n    uStack28 = 0x467839;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 188
    },
    "0048c90c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c90c(char param_1)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x48c927;\n    fcn.0049a59c();\n    uStack40 = 0x48c99c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if (param_1 == '\\0') {\n        puStack36 = &stack0xfffffffc;\n        uVar1 = fcn.00431368();\n    }\n    else {\n        puStack36 = &stack0xfffffffc;\n        uVar1 = fcn.00431414();\n    }\n    if (uVar1 < 0x80000000) {\n        fcn.0040b47c();\n        fcn.00431f74();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48c9a3;\n    uStack40 = 0x48c99b;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 286
    },
    "0048fe20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0048fe20(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00468290();\n    if (iVar1 == -1) {\n        fcn.0048fde8();\n    }\n    return iVar1;\n}\n",
        "token_count": 61
    },
    "00499618": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00499618(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX != 0) {\n        do {\n            iVar1 = 0x139;\n            do {\n                if (in_EAX == param_2 + 10 + iVar1 * 0xd) {\n                    iVar2 = iVar2 + 1;\n                    break;\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n            in_EAX = *(in_EAX + 5);\n        } while (in_EAX != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 170
    },
    "00406214": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00406214(uint param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    \n    uVar5 = 0;\n    uVar7 = 0;\n    uVar6 = *param_2;\n    piVar4 = in_EAX;\n    do {\n        iVar1 = *piVar4;\n        puVar2 = *(iVar1 + -0x44);\n        if ((puVar2 != NULL) && (uVar7 = uVar7 & 0xffff0000 | *puVar2,  uVar7 != 0)) {\n            piVar4 = puVar2 + 3;\n            do {\n                uVar5 = uVar5 & 0xffffff00 | *(piVar4 + 6);\n                if (*(piVar4 + 6) == uVar6) {\n                    while ((uVar6 = *(uVar5 + 6 + piVar4),  (uVar6 & 0x80) == 0 &&\n                           (uVar6 = uVar6 ^ param_2[uVar5],  (uVar6 & 0x80) == 0))) {\n                        if ((uVar6 & 0xdf) != 0) goto code_r0x00406249;\n                        uVar5 = uVar5 - 1;\n                        if (uVar5 == 0) goto code_r0x0040627d;\n                    }\n                    cVar3 = fcn.00406060();\n                    uVar5 = 0;\n                    if (cVar3 != '\\0') {\ncode_r0x0040627d:\n                        piVar4 = *piVar4 + in_EAX;\n                        goto code_r0x00406282;\n                    }\ncode_r0x00406249:\n                    uVar6 = *param_2;\n                    uVar5 = uVar5 & 0xffffff00 | *(piVar4 + 6);\n                }\n                piVar4 = uVar5 + 7 + piVar4;\n                uVar7 = uVar7 - 1;\n            } while (uVar7 != 0);\n        }\n        piVar4 = *(iVar1 + -0x30);\n        if (piVar4 == NULL) {\ncode_r0x00406282:\n            return CONCAT44(in_EAX, piVar4);\n        }\n    } while( true );\n}\n",
        "token_count": 569
    },
    "004196ec": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004196ec(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 607
    },
    "0043cf2c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.0043cf2c(void)\n\n{\n    char cVar1;\n    char **in_EAX;\n    \n    cVar1 = fcn.0043cb20();\n    if ((cVar1 == '\\0') && (**in_EAX != '\\a')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "00494f98": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00494f98(uint param_1, uint16_t *param_2)\n\n{\n    double dVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint uStackY144;\n    uint uStackY140;\n    uchar *puStackY136;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack96 = &stack0xfffffffc;\n    uStack100 = 0x495376;\n    uStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    cVar2 = fcn.00430638();\n    if (cVar2 != '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    uVar3 = *param_2 & 0xfff;\n    if (uVar3 < 8) {\n    // switch table (7 cases) at 0x49501a\n        switch(uVar3) {\n        case 0:\n            fcn.004955fc();\n            break;\n        case 1:\n            fcn.004955fc();\n            break;\n        case 2:\n        case 3:\ncode_r0x004950bf:\n            uVar7 = fcn.0042ab24();\n            fcn.00493730(uVar7, uVar7 >> 0x20);\n            break;\n        case 4:\n            fVar6 = fcn.0042bf80();\n            fcn.004934bc(fVar6);\n            break;\n        case 5:\n            uVar5 = fcn.0042bf80();\n            puStack120 = 0x495109;\n            fcn.00493498(uVar5);\n            break;\n        case 6:\n            fVar6 = fcn.0042caa8();\n            fcn.004934e0(ROUND(fVar6));\n            break;\n        default:\n            fVar6 = fcn.0042bf80();\n            dVar1 = fVar6;\n            var_3ch = dVar1 >> 0x20;\n            var_40h = SUB84(dVar1, 0);\n            fcn.00493518(var_40h, var_3ch & 0xffff0000 | dVar1 >> 0x20);\n            break;\n        case 0xbad1abe1:\n            goto code_r0x00495194;\n        }\n    }\n    else {\n        if (uVar3 < 0x10) {\n            if (uVar3 == 8) {\n                fcn.0042e9b0();\n                fcn.004953e8();\n                goto code_r0x0049533e;\n            }\n            if (uVar3 == 0xb) {\n                cVar2 = fcn.0042b8e4();\n                if (cVar2 == '\\0') {\n                    fcn.004955fc();\n                }\n                else {\n                    fcn.004955fc();\n                }\n                goto code_r0x0049533e;\n            }\n        }\n        else {\n            if (uVar3 - 0x10 < 3) goto code_r0x004950bf;\n            if (uVar3 - 0x13 < 2) {\n                uVar7 = fcn.0042ab24();\n                fcn.00493730(uVar7, uVar7 >> 0x20);\n                goto code_r0x0049533e;\n            }\n            if (uVar3 == 0x100) {\n                fcn.0042e9b0();\n                fcn.004953e8();\n                goto code_r0x0049533e;\n            }\n        }\ncode_r0x00495194:\n        uVar5 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff8c;\n        puStack120 = 0x4951b0;\n        cVar2 = fcn.004309a8();\n        if (cVar2 != '\\0') {\n            puStack120 = 0x4951bc;\n            puStack120 = fcn.0040b47c();\n            uStack124 = 0x4951c8;\n            fcn.0042ed58();\n            puStack120 = 0x4951d6;\n            cVar2 = fcn.00421124();\n            if (cVar2 != '\\0') {\n                puStack120 = 0x495206;\n                fcn.00405cb8();\n                uStack124 = 0x49530c;\n                uStack128 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff80;\n                puStack120 = &stack0xfffffffc;\n                puVar4 = fcn.00405cb8();\n                puStackY136 = 0x49523a;\n                fcn.0048deb0(0x400);\n                uStackY140 = 0x4952b2;\n                uStackY144 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff70;\n                puStackY136 = &stack0xfffffffc;\n                (**(_pe_dos_header + 0x10))();\n                (***puVar4)();\n                fcn.00405be8();\n                fcn.004953e8();\n                fcn.00492b1c();\n                fcn.00492b1c();\n                *in_FS_OFFSET = uStackY144;\n                puStackY136 = 0x4952b9;\n                uStackY140 = 0x4952b1;\n                fcn.00405ce8();\n                return;\n            }\n        }\n        puStack120 = 0x4951e5;\n        fcn.0042e9b0();\n        puStack120 = 0x4951f0;\n        fcn.004953e8();\n        *in_FS_OFFSET = uVar5;\n    }\ncode_r0x0049533e:\n    *in_FS_OFFSET = uStack104;\n    puStack96 = 0x49537d;\n    uStack100 = 0x495358;\n    fcn.00407a80();\n    uStack100 = 0x495360;\n    fcn.0040b47c();\n    uStack100 = 0x49536d;\n    fcn.00407a80();\n    uStack100 = 0x495375;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 1585
    },
    "0041a3e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a3e0(uint param_1, char param_2)\n\n{\n    char in_AL;\n    \n    if (param_2 == '\\0') {\n        fcn.00407e00();\n    }\n    else {\n        fcn.0041a234();\n        if (in_AL == '\\0') {\n            fcn.00407e00();\n            return;\n        }\n        fcn.00407e00();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00421344": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00421344(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint16_t in_AX;\n    uint16_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint8_t auStack4112 [4096];\n    uint32_t uStack16;\n    \n    uStack16 = in_AX;\n    uVar5 = 0;\n    uVar3 = 0;\n    puVar4 = 0x4b92a0;\n    do {\n        uVar1 = uVar3;\n        bVar6 = uVar1 < 0xf;\n        if (uVar1 < 0x10) {\n            bVar6 = (*(&uStack16 + ((uVar3 & 0x7f) >> 3)) >> (uVar3 & 7) & 1) != 0;\n        }\n        if (bVar6) {\n            if (uVar1 == 0) {\n                cVar2 = fcn.0042227c();\n                if (cVar2 == '\\0') goto code_r0x00421393;\n            }\n            if (uVar1 == 8) {\n                cVar2 = fcn.0042227c();\n                if (cVar2 == '\\0') goto code_r0x00421393;\n            }\n            uVar5 = uVar5 | *puVar4;\n        }\ncode_r0x00421393:\n        uVar3 = uVar3 + 1;\n        puVar4 = puVar4 + 1;\n        if (uVar3 == '\\n') {\n            return CONCAT44(uStack16, uVar5);\n        }\n    } while( true );\n}\n",
        "token_count": 383
    },
    "00427418": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427418(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x427472;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408550();\n        fcn.0041a1f4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x427479;\n    uStack20 = 0x427471;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 192
    },
    "00427484": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427484(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4274e4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408550();\n        fcn.0041be94();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4274eb;\n    uStack20 = 0x4274e3;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 195
    },
    "004274f4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004274f4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x427554;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408550();\n        fcn.0041be40();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x42755b;\n    uStack20 = 0x427553;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 192
    },
    "00427564": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427564(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4275c4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408550();\n        fcn.0041dd6c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4275cb;\n    uStack20 = 0x4275c3;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 196
    },
    "004275d4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004275d4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x427634;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00408550();\n        fcn.0041bee8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x42763b;\n    uStack20 = 0x427633;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 192
    },
    "0042a860": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a860(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uVar4;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack24;\n    uchar auStack20 [4];\n    uchar auStack16 [16];\n    \n    puStack32 = &stack0xfffffff0;\n    uStack36 = 0x42a871;\n    sub.oleaut32.dll_VariantInit();\n    uStack36 = 3;\n    uStack40 = 0;\n    uVar4 = 0x400;\n    iVar1 = (***0x4ba6ec)(&stack0xffffffec, uStack24, 0x400);\n    if (iVar1 == 0) {\n        uVar3 = puStack32;\n    }\n    else {\n        iVar1 = (***0x4ba6ec)(&stack0xffffffd8, uVar4, 0x400, 0, 5);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00405784();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.0042b468();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.00429130();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 333
    },
    "0043f520": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043f520(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    float10 fVar9;\n    ulong uVar10;\n    uint var_6ch;\n    uint var_54h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xd;\n    do {\n        uStack12 = 0;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    var_14h = 0;\n    var_18h = 0x43f54a;\n    fcn.00408bb4();\n    uStack36 = CONCAT44(0x43f7f8, *in_FS_OFFSET);\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_18h = &stack0xfffffffc;\n    uVar5 = fcn.0043cbc4();\n    // switch table (19 cases) at 0x43f572\n    switch(uVar5 & 0x7f) {\n    default:\n        goto code_r0x0043f7a9;\n    case 1:\n        uVar10 = fcn.0043d2dc();\n        var_28h = uVar10;\n        fcn.0042f018(var_28h, uVar10 >> 0x20);\n        break;\n    case 2:\n        uVar3 = fcn.00455f88();\n        var_18h = CONCAT31(CONCAT21(var_18h._2_2_, uVar3), 1);\n        fcn.0042f1a0();\n        break;\n    case 3:\n        cVar4 = fcn.00455f70();\n        if (cVar4 == '\\0') {\n            uVar10 = fcn.0043cfe4();\n            var_28h = uVar10;\n            fcn.0042f018(var_28h, uVar10 >> 0x20);\n        }\n        else {\n            fcn.0043d220();\n            fcn.0042f0ec();\n        }\n        break;\n    case 4:\n        iVar8 = fcn.0043cbc0();\n        if (iVar8 == *0x4029f8) {\n            fVar9 = fcn.0043d24c();\n            uStack36 = fVar9;\n            fcn.0042f134();\n        }\n        else {\n            puVar6 = fcn.0043cbd8();\n            uVar1 = *puVar6;\n            if (uVar1 < 3) {\n                fcn.0043d24c();\n                fcn.0042f114();\n            }\n            else if (uVar1 == 3) {\n                fcn.0042f114();\n            }\n            else if (uVar1 == 4) {\n                fcn.0042f154();\n            }\n        }\n        break;\n    case 5:\n    case 10:\n    case 0xb:\n    case 0x12:\n        fcn.0043d398();\n        fcn.0042f248();\n        break;\n    case 7:\n        fcn.0043cf4c();\n        fcn.0042eef0();\n        break;\n    case 9:\n        fcn.00408510();\n        fcn.0042f248();\n        break;\n    case 0xf:\n        fcn.0043d364();\n        fcn.0042f274();\n        break;\n    case 0x10:\n        puVar7 = fcn.0043cbd8();\n        uVar5 = puVar7[1];\n        uVar2 = *puVar7;\n        iVar8 = fcn.0043cbd8();\n        if (*(iVar8 + 0xc) == uVar5) {\n            if (uVar2 <= *(iVar8 + 8)) {\ncode_r0x0043f6e4:\n                uVar10 = fcn.0043d2dc();\n                var_28h = uVar10;\n                fcn.0042f018(var_28h, uVar10 >> 0x20);\n                break;\n            }\n        }\n        else if (uVar5 <= *(iVar8 + 0xc)) goto code_r0x0043f6e4;\n        uVar10 = fcn.00455e28();\n        var_28h = uVar10;\n        fcn.0042efac(var_28h, uVar10 >> 0x20);\n    }\n    if (param_2 == *0x401300) {\n        fcn.0042f390();\n        fcn.00456190();\n        fcn.00408f5c();\n    }\n    else {\n        fcn.004561bc();\n        fcn.00408f5c();\n    }\ncode_r0x0043f7a9:\n    *in_FS_OFFSET = var_28h;\n    uStack36 = CONCAT44(uStack36._4_4_, 0x43f7ff);\n    fcn.00408c90();\n    fcn.004293d4();\n    fcn.00408c90();\n    fcn.0040b47c();\n    fcn.00407a80();\n    fcn.004293d4();\n    return;\n}\n",
        "token_count": 1355
    },
    "00468330": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint32_t fcn.00468330(void)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint8_t *puVar2;\n    \n    if (*in_EAX != '\\x06') {\n        return 0;\n    }\n    puVar2 = fcn.00467260();\n    uVar1 = *puVar2;\n    if ((uVar1 & 0x80) == 0) {\n        return *((uVar1 & 0x7f) * 4 + 0x4b9de0);\n    }\n    return uVar1 & 0xff7f;\n}\n",
        "token_count": 137
    },
    "00492174": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00492174(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x492319;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00492038();\n    // switch table (22 cases) at 0x4921ab\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.004920b4(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.00492584();\n        break;\n    case 3:\n        fcn.00492584();\n        break;\n    case 4:\n        fcn.00492584();\n        break;\n    case 5:\n        fcn.00492584();\n        break;\n    case 6:\n    case 7:\n        fcn.00491c60();\n        break;\n    case 10:\n        fcn.004920e0(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0049206c();\n        break;\n    case 0xc:\n        fcn.004920e0(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.00492110(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.00492584();\n        break;\n    case 0x10:\n        fcn.00492584();\n        break;\n    case 0x11:\n        fcn.00492584();\n        break;\n    case 0x12:\n        fcn.004920e0(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.00492584();\n        break;\n    case 0x14:\n        fcn.004920e0(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.00492584();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x492320;\n    uStack20 = 0x492318;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 529
    },
    "004927cc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004927cc(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4929c6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004293c0();\n    uVar2 = fcn.00490418();\n    // switch table (22 cases) at 0x49280e\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.00492038();\n        if (cVar1 != '\\r') {\n            fcn.00430b74();\n        }\n        break;\n    default:\n        fcn.0048d57c();\n        break;\n    case 2:\n        fcn.00491238();\n        fcn.0042eef0();\n        break;\n    case 3:\n        fcn.00491238();\n        fcn.0042eef0();\n        break;\n    case 4:\n        fcn.00491238();\n        fcn.0042eef0();\n        break;\n    case 5:\n        fcn.00490ef8();\n        fcn.0042f114();\n        break;\n    case 6:\n    case 0xc:\n        fcn.00491d4c();\n        fcn.0042f248();\n        break;\n    case 8:\n    case 9:\n        fcn.00492038();\n        fcn.0042f0ec();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x49297e;\n        fcn.00492618(&stack0xfffffffc);\n        fcn.0042977c();\n        break;\n    case 0xf:\n        fcn.00490f74();\n        fcn.0042f114();\n        break;\n    case 0x10:\n        fcn.00490fb8();\n        fcn.0042f154();\n        break;\n    case 0x11:\n        fcn.00491018();\n        fcn.0042f134();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.00491d4c();\n        fcn.0042f248();\n        break;\n    case 0x13:\n        uVar3 = fcn.004912a4();\n        in_stack_ffffffc8 = uVar3;\n        fcn.0042f018(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.00490f30();\n        fcn.0042f114();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x4929cd;\n    fcn.004293d4();\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 718
    },
    "00494720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494720(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x49480a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0046812c();\n    fcn.00494518(arg_8h);\n    if (**(arg_8h + -0xc) < 10) {\n    // switch table (10 cases) at 0x49476a\n        switch(*(**(arg_8h + -0xc) * 4 + 0x49476a)) {\n        case 0x494792:\n            fcn.00494610(arg_8h);\n            break;\n        case 0x4947aa:\n            fcn.00492e00();\n            break;\n        case 0x4947b9:\n            fcn.00492e00();\n            break;\n        case 0x4947c8:\n            fcn.0049457c(arg_8h);\n            break;\n        case 0x4947d6:\n            fcn.00467330();\n            fcn.0049354c();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x494811;\n    uStack20 = 0x494809;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 348
    },
    "0043d01c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043d01c(uint param_1, uint32_t *param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    \n    uVar4 = fcn.0043cfac();\n    if (uVar4 != '\\0') {\n        *param_2 = 0;\n        param_2[1] = 0;\n        cVar3 = fcn.0043cb20();\n        if (cVar3 == '\\0') {\n            pcVar5 = fcn.0043cbc0();\n            cVar3 = *pcVar5;\n            if ((cVar3 - 1U < 3) || (cVar3 == '\\t')) {\n                fcn.0043cbc0();\n                puVar6 = fcn.00467260();\n    // switch table (6 cases) at 0x43d08b\n                switch(*puVar6) {\n                case 0:\n                    cVar3 = *(in_EAX + 8);\n                    *param_2 = cVar3;\n                    param_2[1] = cVar3 >> 0x1f;\n                    break;\n                case 1:\n                    *param_2 = *(in_EAX + 8);\n                    param_2[1] = 0;\n                    break;\n                case 2:\n                    iVar1 = *(in_EAX + 8);\n                    *param_2 = iVar1;\n                    param_2[1] = iVar1 >> 0x1f;\n                    break;\n                case 3:\n                    *param_2 = *(in_EAX + 8);\n                    param_2[1] = 0;\n                    break;\n                case 4:\n                    uVar2 = *(in_EAX + 8);\n                    *param_2 = uVar2;\n                    param_2[1] = uVar2 >> 0x1f;\n                    break;\n                case 5:\n                    *param_2 = *(in_EAX + 8);\n                    param_2[1] = 0;\n                }\n            }\n            else if (cVar3 == '\\x10') {\n                *param_2 = *(in_EAX + 8);\n                param_2[1] = *(in_EAX + 0xc);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 538
    },
    "0043e998": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.0043e998(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    puVar3 = fcn.00467260();\n    uVar1 = puVar3[1];\n    uVar2 = *puVar3;\n    iVar4 = fcn.00467260();\n    if (*(iVar4 + 0xc) == uVar1) {\n        if (uVar2 <= *(iVar4 + 8)) {\ncode_r0x0043eaf2:\n            puVar5 = fcn.00467260();\n    // switch table (6 cases) at 0x43eb18\n            switch(*puVar5) {\n            case 0:\n                fcn.00408c90();\n                fcn.0043d55c();\n                return 1;\n            case 1:\n                fcn.00408c90();\n                fcn.0043d55c();\n                return 1;\n            case 2:\n                fcn.00408c90();\n                fcn.0043d55c();\n                return 1;\n            case 3:\n                fcn.00408c90();\n                fcn.0043d55c();\n                return 1;\n            case 4:\n                fcn.00408c90();\n                fcn.0043d55c();\n                return 1;\n            case 5:\n                fcn.00408c90();\n                fcn.0043d55c();\n                return 1;\n            default:\n                return 1;\n            }\n        }\n    }\n    else if (uVar1 <= *(iVar4 + 0xc)) goto code_r0x0043eaf2;\n    puVar5 = fcn.00467260();\n    // switch table (6 cases) at 0x43ea14\n    switch(*puVar5) {\n    case 0:\n        fcn.00408c90();\n        fcn.0043d55c();\n        break;\n    case 1:\n        fcn.00408c90();\n        fcn.0043d55c();\n        break;\n    case 2:\n        fcn.00408c90();\n        fcn.0043d55c();\n        break;\n    case 3:\n        fcn.00408c90();\n        fcn.0043d55c();\n        break;\n    case 4:\n        fcn.00408c90();\n        fcn.0043d55c();\n        break;\n    case 5:\n        fcn.00408c90();\n        fcn.0043d55c();\n    }\n    return 1;\n}\n",
        "token_count": 633
    },
    "00490ef8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.00490ef8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.00492038();\n    if (cVar1 == '\\x05') {\n        fcn.0049043c();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.00490f30();\n    }\n    return Stack16;\n}\n",
        "token_count": 120
    },
    "00406d04": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406d04(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00407210": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00407210(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 53
    },
    "0044a340": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044a340(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44a359;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44a3b4;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.0044a340::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    iVar1 = fcn.0044a3ec();\n    *arg_8h = iVar1 + 5;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x44a3bb;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 342
    },
    "0044a40c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044a40c(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44a425;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44a483;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.0044a40c::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 9;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x44a48a;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 341
    },
    "0044eed8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044eed8(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44eef1;\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44ef6b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.0044eed8::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    uVar1 = fcn.0043fc88();\n    *arg_8h = uVar1;\n    fcn.0044682c(arg_8h);\n    uVar1 = fcn.00405f54();\n    *(in_EAX + 0x1c) = uVar1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040b47c(0x44ef72);\n    return;\n}\n",
        "token_count": 362
    },
    "00467094": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint8_t * fcn.00467094(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 5 + *(in_EAX + 5) + 1;\n}\n",
        "token_count": 45
    },
    "004670c8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint8_t * fcn.004670c8(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 5 + *(in_EAX + 5) + 1;\n}\n",
        "token_count": 46
    },
    "00408bec": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bec(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00408bec();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00408bb4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (((cVar1 != '\\x0f') && (cVar1 != '\\x11')) && (cVar1 != '\\x12')) {\n            fcn.00405500(0x2000000);\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 489
    },
    "00408e74": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408e74(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if (cVar1 != '\\n') {\n        if (cVar1 == '\\v') {\n            do {\n                fcn.00407b24();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 != '\\x12') {\n            if (cVar1 == '\\f') {\n                do {\n                    fcn.00408e5c();\n                    iVar3 = param_1 + -1;\n                    bVar2 = 0 < param_1;\n                    param_1 = iVar3;\n                } while (iVar3 != 0 && bVar2);\n                return;\n            }\n            if (cVar1 == '\\r') {\n                do {\n                    fcn.00408e74();\n                    iVar3 = param_1 + -1;\n                    bVar2 = 0 < param_1;\n                    param_1 = iVar3;\n                } while (iVar3 != 0 && bVar2);\n                return;\n            }\n            if (cVar1 == '\\x0e') {\n                do {\n                    fcn.00408e24();\n                    iVar3 = param_1 + -1;\n                    bVar2 = 0 < param_1;\n                    param_1 = iVar3;\n                } while (iVar3 != 0 && bVar2);\n                return;\n            }\n            if (cVar1 != '\\x0f') {\n                if (cVar1 == '\\x11') {\n                    do {\n                        fcn.00409da4();\n                        iVar3 = param_1 + -1;\n                        bVar2 = 0 < param_1;\n                        param_1 = iVar3;\n                    } while (iVar3 != 0 && bVar2);\n                    return;\n                }\n                fcn.00405500(CONCAT13(2, param_1));\n                return;\n            }\n            do {\n                fcn.0040b4f0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n    }\n    do {\n        fcn.00407b14();\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 625
    },
    "00409338": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409338(uint8_t *param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *param_1;\n    if (uVar1 == 10) {\n        do {\n            fcn.00407e9c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (uVar1 == 0xb) {\n        do {\n            fcn.00407e74();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (uVar1 == 0x12) {\n        do {\n            fcn.00407e00();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (uVar1 == 0xc) {\n        do {\n            fcn.00408f38();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (uVar1 == 0xd) {\n        do {\n            fcn.00409338();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (uVar1 == 0xe) {\n        do {\n            fcn.00408f5c();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (uVar1 == 0xf) {\n        do {\n            fcn.0040b494();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (uVar1 != 0x11) {\n            fcn.00405500(CONCAT13(2, param_1 & 0xffff00 | uVar1));\n            return;\n        }\n        do {\n            fcn.00409d68();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "0043c03c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.0043c03c(void)\n\n{\n    uint8_t uVar1;\n    uchar *in_EAX;\n    uint8_t *puVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    if (in_EAX == NULL) {\n        return 0;\n    }\n    // switch table (23 cases) at 0x43c05a\n    switch(*in_EAX) {\n    default:\n        iVar5 = 0;\n        break;\n    case 1:\n    case 2:\n    case 3:\n    case 9:\n        puVar2 = fcn.00467260();\n        uVar1 = *puVar2;\n        if (uVar1 < 2) {\n            return 1;\n        }\n        if (uVar1 - 2 < 2) {\n            return 2;\n        }\n        if (uVar1 - 4 < 2) {\n            return 4;\n        }\n        return 0;\n    case 4:\n        puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43c111\n        switch(*puVar3) {\n        case 0:\n            return 4;\n        case 1:\n            return 8;\n        case 2:\n            return 10;\n        case 3:\n            return 8;\n        case 4:\n            return 8;\n        default:\n            return 0;\n        }\n    case 5:\n        puVar2 = fcn.00467260();\n        return -1 - *puVar2;\n    case 6:\n        iVar5 = fcn.00468330();\n        if (10 < iVar5) {\n            return -iVar5;\n        }\n        break;\n    case 7:\n        return 4;\n    case 8:\n        return 8;\n    case 10:\n    case 0xb:\n    case 0xf:\n    case 0x11:\n    case 0x12:\n        return -4;\n    case 0xc:\n        return -0x10;\n    case 0xd:\n        piVar4 = fcn.00467260();\n        return -*piVar4;\n    case 0xe:\n    case 0x16:\n        piVar4 = fcn.00467260();\n        return -*piVar4;\n    case 0x10:\n        return 8;\n    case 0x13:\n        return 4;\n    case 0x14:\n        return 4;\n    case 0x15:\n        return 4;\n    }\n    return iVar5;\n}\n",
        "token_count": 571
    },
    "00407588": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00407588(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar4 = *in_EAX;\n    piVar3 = in_EAX + 1;\n    do {\n        iVar1 = piVar3[2];\n        if (iVar1 == 0) {\n            fcn.004074cc();\n        }\n        else if (iVar1 == 1) {\n            fcn.00407524();\n        }\n        else {\n            if (iVar1 != 2) {\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.00407574();\n        }\n        piVar3 = piVar3 + 3;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 206
    },
    "0040e1b8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e1b8(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    puStack36 = &stack0xfffffffc;\n    uStack28 = 0x40e256;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (arg_ch >> 0x10 == 0) {\n        puStack36 = arg_ch;\n        uStack40 = arg_8h;\n        uStack44 = 0x40e1e7;\n        puStack24 = &stack0xfffffffc;\n        func_0x0040e1b0();\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x40e25d;\n        puStack36 = 0x40e255;\n        fcn.00407a44();\n        return;\n    }\n    uStack40 = 0x40e239;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00407a44();\n    fcn.00408130();\n    uVar1 = fcn.00408240();\n    func_0x0040e1b0(arg_8h, uVar1);\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40e240;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 388
    },
    "004195b4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195b4(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 87
    },
    "00419780": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00419780(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar2 = *(param_2 + -4);\n    uVar5 = *(in_EAX - 4) - uVar2;\n    iVar3 = (-(*(in_EAX - 4) < uVar2) & uVar5) + uVar2;\n    iVar1 = in_EAX + iVar3 * 2;\n    param_2 = param_2 + iVar3 * 2;\n    iVar3 = -iVar3;\n    if (iVar3 != 0) {\n        do {\n            uVar2 = *(iVar1 + iVar3 * 2);\n            uVar4 = *(param_2 + iVar3 * 2);\n            if (uVar2 != uVar4) {\n                if (uVar2 != uVar4) {\n                    uVar2 = uVar2 & 0xffff;\n                    uVar4 = uVar4 & 0xffff;\n                    if ((0x60 < uVar2) && (uVar2 < 0x7b)) {\n                        uVar2 = uVar2 - 0x20;\n                    }\n                    if ((0x60 < uVar4) && (uVar4 < 0x7b)) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    if (uVar2 - uVar4 != 0) {\n                        return uVar2 - uVar4;\n                    }\n                    uVar2 = *(iVar1 + iVar3 * 2) & 0xffff0000;\n                    uVar4 = *(param_2 + iVar3 * 2) & 0xffff0000;\n                    if (uVar2 == uVar4) goto code_r0x00419823;\n                }\n                uVar2 = uVar2 >> 0x10;\n                uVar4 = uVar4 >> 0x10;\n                if ((0x60 < uVar2) && (uVar2 < 0x7b)) {\n                    uVar2 = uVar2 - 0x20;\n                }\n                if ((0x60 < uVar4) && (uVar4 < 0x7b)) {\n                    uVar4 = uVar4 - 0x20;\n                }\n                if (uVar2 - uVar4 != 0) {\n                    return uVar2 - uVar4;\n                }\n            }\ncode_r0x00419823:\n            bVar6 = SCARRY4(iVar3, 2);\n            iVar3 = iVar3 + 2;\n        } while (bVar6 != iVar3 < 0);\n    }\n    return uVar5;\n}\n",
        "token_count": 704
    },
    "0041ffac": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ffac(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff98;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x4200ac;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_5h = 0;\n    puStack56 = 0x41ffdc;\n    fcn.00407e48();\n    puStack56 = 0x41ffe4;\n    fcn.00407fb0();\n    puStack56 = &fcn.0041ffac::var_ch;\n    uStack60 = 0x41fff0;\n    uStack60 = fcn.004084ec();\n    puStack64 = 0x41fff6;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeW();\n    if (iVar1 != 0) {\n        puStack64 = 0x420007;\n        pBlock = fcn.004053f0();\n        uStack68 = 0x42008f;\n        uStack72 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb8;\n        puStack64 = &stack0xfffffffc;\n        uVar2 = fcn.004084ec(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoW(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffff98 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueW(pBlock, 0x4200c0, &fcn.0041ffac::lplpBuffer, &fcn.0041ffac::puLen);\n            if (iVar1 != 0) {\n                *in_EDX = *(lplpBuffer + 0x10) >> 0x10;\n                *in_ECX = *(lplpBuffer + 0x10);\n                *arg_8h = *(lplpBuffer + 0x14) >> 0x10;\n                var_5h = 1;\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff98;\n        fcn.0040540c(0x420096);\n        return;\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x4200b3;\n    puStack56 = 0x4200ab;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 674
    },
    "00407ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ba8(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00407974();\n    if (param_2 != 0) {\n        fcn.004055b4();\n    }\n    fcn.00407a44();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 95
    },
    "00407e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e00(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00407974(param_2);\n            fcn.004055b4();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0040540c();\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00407f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nint32_t fcn.00407f18(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *in_EAX;\n    if ((iVar3 != 0) && (*(iVar3 + -8) != 1)) {\n        iVar2 = fcn.00407974();\n        iVar3 = *in_EAX;\n        *in_EAX = iVar2;\n        fcn.004055b4();\n        if (0 < *(iVar3 + -8)) {\n            LOCK();\n            piVar1 = iVar3 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.0040540c();\n            }\n        }\n        iVar3 = *in_EAX;\n    }\n    return iVar3;\n}\n",
        "token_count": 198
    },
    "004086e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004086e4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        if ((*(param_2 + -4) + *(iVar2 + -4) & 0xc0000000U) == 0) {\n            if (param_2 == iVar2) {\n                fcn.00408664();\n            }\n            else {\n                fcn.00408664();\n            }\n            fcn.004055b4();\n            return;\n        }\n        fcn.00405500(CONCAT13(5, iVar2));\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00407974(param_2);\n            fcn.004055b4();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0040540c();\n        }\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "0040873c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040873c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        iVar3 = param_1;\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                if ((*(param_2 + -4) + *(param_1 + -4) & 0xc0000000U) == 0) {\n                    iVar3 = fcn.00407974();\n                    fcn.004055b4();\n                    fcn.004055b4();\n                    if (iVar3 != 0) {\n                        *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                    }\n                    fcn.00407e00();\n                    return;\n                }\n                goto code_r0x00405be0;\n            }\n            fcn.00407e00();\n            iVar3 = param_1;\n        }\n        if (iVar3 == 0) {\n            return;\n        }\n        param_1 = *in_EAX;\n        if (param_1 != 0) {\n            if ((*(iVar3 + -4) + *(param_1 + -4) & 0xc0000000U) == 0) {\n                if (iVar3 == param_1) {\n                    fcn.00408664();\n                }\n                else {\n                    fcn.00408664();\n                }\n                fcn.004055b4();\n                return;\n            }\ncode_r0x00405be0:\n            fcn.00405500(CONCAT13(5, param_1));\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.00407974(iVar3);\n            fcn.004055b4();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0040540c();\n        }\n    }\n    return;\n}\n",
        "token_count": 621
    },
    "004095cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004095cc(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 391
    },
    "00419680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00419680(uint param_1, uint16_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    if (in_EAX == param_2) {\n        return 0;\n    }\n    if ((in_EAX & param_2) == 0) {\n        if (in_EAX == NULL) {\n            return -*(param_2 + -2);\n        }\n        if (param_2 == NULL) {\n            return *(in_EAX + -2);\n        }\n    }\n    if (*param_2 == *in_EAX) {\n        uVar2 = *(in_EAX + -2) - *(param_2 + -2);\n        iVar3 = ((*(in_EAX + -2) < *(param_2 + -2)) - 1 & uVar2) - *(in_EAX + -2);\n        iVar4 = iVar3 * 2;\n        do {\n            uVar5 = *(in_EAX + iVar4 + iVar3 * -2) ^ *(param_2 + iVar4 + iVar3 * -2);\n            if (uVar5 != 0) {\n                uVar1 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                    }\n                }\n                iVar4 = iVar4 + (uVar1 >> 4) * 2;\n                if (-1 < iVar4) {\n                    return uVar2;\n                }\n                return *(in_EAX + iVar4 + iVar3 * -2) - *(param_2 + iVar4 + iVar3 * -2);\n            }\n            iVar4 = iVar4 + 4;\n        } while (iVar4 < 0);\n    }\n    else {\n        uVar2 = *in_EAX - *param_2;\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "00467584": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00467584(uint param_1, uint param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = CONCAT31(param_2 >> 8, 0xb5);\n    iVar1 = 0;\n    do {\n        uVar2 = uVar2 & 0xffffff00 | uVar2 ^ in_EAX >> (iVar1 & 0x1f);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    return uVar2;\n}\n",
        "token_count": 135
    },
    "00414a7c": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nbool fcn.00414a7c(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar2 = *in_EAX;\n    if (uVar2 < 0x80) {\n        if ((0x60 < (uVar2 | 0x20)) && ((uVar2 | 0x20) < 0x7b)) {\n            return true;\n        }\n        bVar3 = false;\n    }\n    else if (uVar2 < 0x100) {\n        bVar3 = *(*0x4be688 + uVar2) - 5U < 5;\n    }\n    else {\n        cVar1 = fcn.00414a3c();\n        bVar3 = cVar1 - 5U < 5;\n    }\n    return bVar3;\n}\n",
        "token_count": 199
    },
    "00414b0c": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00414b0c(void)\n\n{\n    uint16_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 < 0x80) {\n        return in_EAX & 0xffffff00 | uVar1 - 0x30 < 10;\n    }\n    if (uVar1 < 0x100) {\n        uVar1 = *(*0x4be688 + uVar1) - 0xdU < 3;\n    }\n    else {\n        uVar1 = fcn.00414a3c();\n        uVar1 = uVar1 & 0xffffff00 | uVar1 - 0xdU < 3;\n    }\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "004936bc": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004936bc(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.004955fc();\n        fcn.00492b1c();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.004955fc();\n        fcn.00492b1c();\n    }\n    else {\n        fcn.004955fc();\n        fcn.00492b1c();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00426ef8": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426ef8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x426fff;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00407a20();\n    if (in_EAX != 0) {\n        while (iVar1 = fcn.0041a678(),  iVar1 != 0) {\n            iVar3 = in_EAX;\n            if (in_EAX != iVar1) {\n                fcn.00407ba8();\n                fcn.004086e4();\n                iVar3 = iVar1;\n            }\n            puVar2 = iVar1 + 2;\n            if ((*puVar2 - 0x31 < 9) && (*puVar2 - 0x31 <= in_ECX)) {\n                fcn.004086e4();\n                in_EAX = iVar3 + 4;\n            }\n            else {\n                fcn.004086e4();\n                in_EAX = iVar3 + 2;\n                if (*puVar2 == 0x25) {\n                    in_EAX = iVar3 + 4;\n                }\n            }\n        }\n        fcn.00408550();\n        fcn.004086e4();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x427006;\n    uStack44 = 0x426ff6;\n    fcn.00407a20();\n    uStack44 = 0x426ffe;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 445
    },
    "00420684": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nvoid fcn.00420684(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    *0x4be6b0 = 0x409;\n    *0x4be6b4 = 9;\n    *0x4be6b8 = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale();\n    if (uVar1 != 0) {\n        *0x4be6b0 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4be6b4 = uVar1 & 0x3ff;\n        *0x4be6b8 = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x4b7e0c;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *0x4be6bd = 1;\n    *0x4be6bc = 1;\n    fcn.00420628(&stack0xfffffffc);\n    return;\n}\n",
        "token_count": 275
    },
    "00403a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a74(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 235
    },
    "00404924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404924(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004055b4();\n    return param_2 + param_1;\n}\n",
        "token_count": 47
    },
    "0040493c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040493c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00404924();\n        return;\n    }\n    fcn.00407ef0();\n    fcn.00404924();\n    return;\n}\n",
        "token_count": 66
    },
    "004049e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004049e8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if (((999 < in_EDX) || (cVar1 = fcn.00404970(arg_8h),  cVar1 == '\\0')) ||\n       (cVar1 = fcn.00404970(arg_8h),  cVar1 == '\\0')) {\n        return 0;\n    }\n    if ((in_EAX == *(in_EAX + -0x58)) &&\n       ((*(in_EAX + -0x30) == 0 ||\n        ((cVar1 = fcn.00404970(arg_8h),  cVar1 != '\\0' && (cVar1 = fcn.004049e8(arg_8h),  cVar1 != '\\0')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "00404a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404a68(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = *in_EAX;\n    cVar1 = fcn.004049e8(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "004052d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004052d4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *0x4bbadc;\n    while (iVar1 != 0x4bbad8) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x4b7080;\n    do {\n        *(iVar1 + 0xc) = iVar1;\n        *(iVar1 + 8) = iVar1;\n        *(iVar1 + 0x10) = 1;\n        *(iVar1 + 0x14) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x4bbad8 = 0x4bbad8;\n    *0x4bbadc = 0x4bbad8;\n    iVar2 = 0x400;\n    iVar1 = 0x4bbb78;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x4bbaf4 = 0;\n    fcn.00405884();\n    *0x4bbaf0 = 0;\n    iVar1 = *0x4bdb80;\n    while (iVar1 != 0x4bdb7c) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4bdb7c = 0x4bdb7c;\n    *0x4bdb80 = 0x4bdb7c;\n    return;\n}\n",
        "token_count": 407
    },
    "004055b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004055b4(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x004055e9;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x004055e9:\n    return;\n}\n",
        "token_count": 1539
    },
    "004056d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004056d0(void)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t auStack8 [2];\n    \n    puVar2 = auStack8;\n    iVar1 = sub.kernel32.dll_QueryPerformanceCounter(auStack8);\n    if (iVar1 == 0) {\n        puVar2 = sub.kernel32.dll_GetTickCount();\n        auStack8[0] = 0;\n    }\n    uVar3 = fcn.00405720(puVar2);\n    (**0x4b7040)(puVar2, uVar3 ^ auStack8[0]);\n    return;\n}\n",
        "token_count": 150
    },
    "0040575c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040575c(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (param_2 != '\\0') {\n        fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00405884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405884(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 780
    },
    "00405b74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b74(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.00405af8();\n    iVar2 = 0;\n    puVar1 = 0x4bb8fc;\n    do {\n        fcn.00405b1c();\n        *puVar1 = uStack28;\n        puVar1[1] = uStack24;\n        puVar1[2] = uStack20;\n        puVar1[3] = uStack16;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 4;\n    } while (iVar2 != 8);\n    return;\n}\n",
        "token_count": 175
    },
    "00405be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405be8(void)\n\n{\n    fcn.0040c98c();\n    return;\n}\n",
        "token_count": 26
    },
    "00405cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405cb8(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00405d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d80(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x00405d97. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00405d99. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 361
    },
    "00405e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00405e68(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x54);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x30) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x30);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "00405eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405eac(void)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    uchar auStack264 [256];\n    \n    arg_8h = auStack264;\n    iVar1 = fcn.00406004();\n    if (iVar1 == 0) {\n        fcn.00407a20();\n    }\n    else if (*(iVar1 + *(iVar1 + 1) + 0xd) == '@') {\n        fcn.00408490();\n        fcn.00408a08();\n        fcn.004080b8(arg_8h);\n        fcn.0040c98c();\n    }\n    else {\n        fcn.0040c98c();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00405fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405fa0(uint param_1, uint16_t param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    bool bVar5;\n    \n    do {\n        puVar1 = *(in_EAX + -0x3c);\n        if (puVar1 != NULL) {\n            bVar5 = puVar1 + 1 == NULL;\n            uVar2 = *puVar1;\n            puVar3 = puVar1 + 1;\n            do {\n                puVar4 = puVar3;\n                if (uVar2 == 0) break;\n                uVar2 = uVar2 - 1;\n                puVar4 = puVar3 + 1;\n                bVar5 = param_2 == *puVar3;\n                puVar3 = puVar4;\n            } while (!bVar5);\n            if (bVar5) {\n                return *(puVar4 + (*puVar1 * 2 - uVar2) + -2);\n            }\n        }\n        if (*(in_EAX + -0x30) == NULL) {\n            return 0;\n        }\n        in_EAX = **(in_EAX + -0x30);\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00406004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406004(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x48);\n}\n",
        "token_count": 33
    },
    "00406104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406104(uint param_1, uint8_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    \n    uVar2 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    do {\n        puVar5 = *(in_EAX + -0x40);\n        if ((puVar5 != NULL) && (uVar6 = uVar6 & 0xffff0000 | *puVar5,  uVar6 != 0)) {\n            puVar5 = puVar5 + 1;\n            do {\n                uVar3 = uVar2 & 0xffffff00;\n                if (*(puVar5 + 3) == uVar4) {\n                    uVar3 = uVar2 & 0xffff0000 | *(puVar5 + 3);\n                    while ((uVar4 = *(uVar3 + 6 + puVar5),  (uVar4 & 0x80) == 0 &&\n                           (uVar4 = uVar4 ^ param_2[uVar3],  (uVar4 & 0x80) == 0))) {\n                        if ((uVar4 & 0xdf) != 0) goto code_r0x0040613a;\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) goto code_r0x0040616d;\n                    }\n                    cVar1 = fcn.00406060();\n                    uVar3 = 0;\n                    if (cVar1 != '\\0') {\ncode_r0x0040616d:\n                        return *(puVar5 + 1);\n                    }\ncode_r0x0040613a:\n                    uVar4 = *param_2;\n                }\n                uVar2 = uVar3 & 0xffff0000 | *puVar5;\n                puVar5 = puVar5 + uVar2;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        if (*(in_EAX + -0x30) == NULL) {\n            return 0;\n        }\n        in_EAX = **(in_EAX + -0x30);\n    } while( true );\n}\n",
        "token_count": 534
    },
    "004061a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004061a0(void)\n\n{\n    fcn.0040c8a4();\n    fcn.00406104();\n    return;\n}\n",
        "token_count": 35
    },
    "004061c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004061c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t auStack268 [256];\n    \n    uVar2 = 0;\n    while( true ) {\n        puVar3 = *(in_EAX + -0x40);\n        if ((puVar3 != NULL) && (uVar2 = uVar2 & 0xffff0000 | *puVar3,  uVar2 != 0)) {\n            puVar3 = puVar3 + 1;\n            do {\n                if (param_2 == *(puVar3 + 1)) {\n                    puVar3 = puVar3 + 3;\n                    goto code_r0x00406206;\n                }\n                puVar3 = puVar3 + *puVar3;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        if (*(in_EAX + -0x30) == NULL) break;\n        in_EAX = **(in_EAX + -0x30);\n    }\n    puVar3 = 0x406202;\ncode_r0x00406206:\n    iVar1 = *puVar3 + 1;\n    puVar4 = auStack268;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040c98c();\n    return;\n}\n",
        "token_count": 383
    },
    "00406288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406288(void)\n\n{\n    fcn.0040c8a4();\n    fcn.00406214();\n    return;\n}\n",
        "token_count": 34
    },
    "00406308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00406308(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x406337;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0040688c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040688c(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    iVar4 = 1;\n    iVar2 = *(in_EAX + 0xc);\n    if (iVar2 == 0) {\n        while( true ) {\n            iVar2 = (***0x4bb8f8)();\n            iVar3 = 0;\n            LOCK();\n            piVar1 = in_EAX + 0xc;\n            if (*piVar1 == 0) {\n                *piVar1 = iVar2;\n            }\n            else {\n                iVar3 = *piVar1;\n            }\n            if ((iVar3 != 0) && (bVar5 = iVar2 != 0,  iVar2 = iVar3,  bVar5)) {\n                (*(*0x4bb8f8)[1])();\n            }\n            if (iVar2 != 0) break;\n            sub.kernel32.dll_Sleep(iVar4);\n            if (iVar4 < 0x201) {\n                iVar4 = iVar4 * 2;\n            }\n            else {\n                iVar4 = 1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 286
    },
    "004069f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004069f8(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    uStack16 = 0x406a0d;\n    fcn.004063e0();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x14) == NULL) {\n        *(in_EAX + 0x14) = param_2;\n        *param_2 = param_2;\n    }\n    else {\n        *param_2 = **(in_EAX + 0x14);\n        **(in_EAX + 0x14) = param_2;\n        *(in_EAX + 0x14) = param_2;\n    }\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x406a61;\n    uStack20 = 0x406a59;\n    fcn.0040640c();\n    return;\n}\n",
        "token_count": 255
    },
    "00406b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406b70(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = 0x406b8c;\n    fcn.00406524();\n    puStack44 = 0x406b98;\n    (**(*0x4bb8f8 + 8))();\n    uStack48 = 0x406c12;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *(param_2 + 4);\n    puStack44 = &stack0xfffffffc;\n    fcn.004069f8();\n    *(param_2 + 4) = 1;\n    fcn.00406820();\n    (**(*0x4bb8f8 + 0x10))();\n    fcn.00406688();\n    fcn.00406a68();\n    *(param_2 + 4) = uVar1;\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x406c19;\n    uStack48 = 0x406c11;\n    (**(*0x4bb8f8 + 0xc))();\n    return;\n}\n",
        "token_count": 328
    },
    "0040711c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040711c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar auStack24 [4];\n    int32_t iStack20;\n    \n    if (in_EAX == 0) {\n        in_EAX = fcn.0040788c();\n    }\n    puVar6 = auStack24;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = auStack24;\n    iStack20 = in_EAX;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, auStack24, unaff_retaddr, 7, unaff_retaddr, in_EAX);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 347
    },
    "00407228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407228(int32_t *arg_8h)\n\n{\n    fcn.004054f4();\n    return;\n}\n",
        "token_count": 33
    },
    "004075d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004075d0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 122
    },
    "004075f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004075f4(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar4 = *in_EAX;\n    piVar3 = in_EAX + 1;\n    do {\n        iVar1 = piVar3[2];\n        if (iVar1 == 0) {\n            fcn.00407a44();\n        }\n        else if (iVar1 == 1) {\n            fcn.00407a68();\n        }\n        else {\n            if (iVar1 != 2) {\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.00407a20();\n        }\n        piVar3 = piVar3 + 3;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    return;\n}\n",
        "token_count": 210
    },
    "00407974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.00407974(unkbyte3 param_1)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    \n    if (in_EAX < 1) {\n        return NULL;\n    }\n    if ((!SCARRY4(in_EAX, in_EAX)) && (!SCARRY4(in_EAX * 2, 0xe))) {\n        puVar1 = fcn.004053f0();\n        *(puVar1 + 2) = 1;\n        *(puVar1 + 4) = in_EAX;\n        (puVar1 + 6)[in_EAX] = 0;\n        puVar1[1] = 2;\n        *puVar1 = *0x4bb980;\n        return puVar1 + 6;\n    }\n    puVar1 = fcn.00405500(CONCAT13(5, param_1));\n    return puVar1;\n}\n",
        "token_count": 204
    },
    "004079b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __fastcall fcn.004079b4(unkbyte3 param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    ushort *puVar2;\n    \n    if (in_EAX < 1) {\n        return NULL;\n    }\n    if (!SCARRY4(in_EAX, 0xe)) {\n        uVar1 = in_EAX + 0xeU & 0xfffffffe;\n        puVar2 = fcn.004053f0();\n        *((uVar1 - 2) + puVar2) = 0;\n        *(puVar2 + 4) = in_EAX;\n        *(puVar2 + 2) = 1;\n        if (param_2 == 0) {\n            param_2 = *0x4bb97c;\n        }\n        *puVar2 = param_2;\n        puVar2[1] = 1;\n        return puVar2 + 6;\n    }\n    puVar2 = fcn.00405500(CONCAT13(5, param_1));\n    return puVar2;\n}\n",
        "token_count": 247
    },
    "00407a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407a80(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.0040540c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00407ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ab0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.0040540c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "00407ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ae0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00407c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c34(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1004h;\n    uint var_4h;\n    \n    if (in_ECX < 1) {\n        fcn.00407a20();\n    }\n    else if ((in_ECX + 1 < 0x7ff) && (iVar1 = fcn.00407b8c(arg_8h, in_ECX),  0 < iVar1)) {\n        fcn.00407ba8();\n    }\n    else {\n        fcn.00408664();\n        fcn.00407b8c(arg_8h, in_ECX);\n        fcn.00408664();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00407cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407cd8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1004h;\n    uint var_4h;\n    \n    if (in_ECX < 1) {\n        fcn.00407a68();\n    }\n    else if ((in_ECX + 1 < 0x7ff) && (iVar1 = fcn.00407b8c(arg_8h, in_ECX),  0 < iVar1)) {\n        fcn.00407bd8();\n    }\n    else {\n        fcn.00408448();\n        fcn.00407b8c(arg_8h, in_ECX);\n        fcn.00408448();\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004080b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004080b8(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *arg_8h = 0;\n        return;\n    }\n    if (in_EDX < 1) {\n        in_EDX = 1;\ncode_r0x004080d0:\n        iVar2 = (uVar1 - in_EDX) + 1;\n        if (-1 < in_ECX) {\n            if (iVar2 < in_ECX) {\n                in_ECX = iVar2;\n            }\n            goto code_r0x004080db;\n        }\n    }\n    else if (in_EDX <= uVar1) goto code_r0x004080d0;\n    in_ECX = 0;\ncode_r0x004080db:\n    *arg_8h = in_ECX;\n    puVar3 = in_EAX + in_EDX;\n    for (; arg_8h = arg_8h + 1,  in_ECX != 0; in_ECX = in_ECX + -1) {\n        *arg_8h = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "004080fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004080fc(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.004079b4();\n    if (param_2 != NULL) {\n        fcn.004055b4();\n    }\n    fcn.00407a44();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 184
    },
    "004081c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004081c0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    \n    if (in_EAX != param_2) {\n        if ((in_EAX & param_2) == 0) {\n            if (in_EAX == 0) {\n                return 0;\n            }\n            if (param_2 == 0) {\n                return in_EAX;\n            }\n        }\n        iVar3 = *(in_EAX - 4);\n        if (iVar3 == *(param_2 - 4)) {\n            puVar1 = iVar3 + -4 + param_2;\n            puVar2 = iVar3 + -4 + in_EAX;\n            iVar3 = -iVar3;\n            in_EAX = *puVar2;\n            if (in_EAX == *puVar1) {\n                do {\n                    iVar3 = iVar3 + 4;\n                    if (-1 < iVar3) {\n                        return 0;\n                    }\n                    in_EAX = *(iVar3 + puVar2);\n                } while (in_EAX == *(iVar3 + puVar1));\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 286
    },
    "00408240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00408240(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        return *0x4b7a00 + 0xc;\n    }\n    return in_EAX;\n}\n",
        "token_count": 57
    },
    "0040831c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040831c(uint param_1, char *param_2)\n\n{\n    if (param_2 != NULL) {\n        for (; (((*param_2 != '\\0' && (param_2[1] != '\\0')) && (param_2[2] != '\\0')) && (param_2[3] != '\\0'));\n            param_2 = param_2 + 4) {\n        }\n    }\n    fcn.00407cd8(*0x4bb97c);\n    return;\n}\n",
        "token_count": 118
    },
    "00408490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408490(int32_t param_1, ushort param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    uVar2 = 1;\n    iVar1 = fcn.00407b70(1);\n    if (iVar1 < 0) {\n        iVar1 = 0;\n    }\n    else if (param_1 < iVar1) {\n        iVar1 = param_1;\n    }\n    *in_EAX = iVar1;\n    if (0 < iVar1) {\n        fcn.004055b4(uVar2, param_2);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004084ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004084ec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        return *0x4b7a04 + 0xc;\n    }\n    return in_EAX;\n}\n",
        "token_count": 57
    },
    "00408520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408520(uint param_1, char *param_2)\n\n{\n    if (param_2 != NULL) {\n        for (; (((*param_2 != '\\0' && (param_2[1] != '\\0')) && (param_2[2] != '\\0')) && (param_2[3] != '\\0'));\n            param_2 = param_2 + 4) {\n        }\n    }\n    fcn.00407c34(*0x4bb97c);\n    return;\n}\n",
        "token_count": 117
    },
    "0040858c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040858c(int32_t param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint *in_EAX;\n    int16_t *piVar3;\n    \n    piVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    uVar2 = fcn.00407974();\n    if (param_2 != NULL) {\n        fcn.004055b4();\n    }\n    fcn.00407a44();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 180
    },
    "00408874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408874(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((in_EAX != param_2) &&\n       ((((in_EAX & param_2) != 0 || ((in_EAX != 0 && (param_2 != 0)))) &&\n        (iVar1 = *(in_EAX - 4),  iVar1 == *(param_2 - 4))))) {\n        uVar2 = in_EAX + iVar1 * 2;\n        iVar3 = iVar1 * -2;\n        do {\n            if (*(iVar3 + uVar2) != *(iVar3 + param_2 + iVar1 * 2)) {\n                return uVar2;\n            }\n            iVar3 = iVar3 + 4;\n        } while (iVar3 < 0);\n        return 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 222
    },
    "00408a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00408a08(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    bool bVar9;\n    \n    if (((in_EAX != NULL) && (param_2 != NULL)) && (0 < param_1)) {\n        uVar4 = *in_EAX;\n        iVar6 = *param_2 - (param_1 + -1);\n        if ((uVar4 <= iVar6) && (uVar4 != 0)) {\n            puVar7 = param_2 + iVar6 + param_1;\n            param_2 = param_2 + (uVar4 - 1) + param_1;\n            puVar2 = in_EAX + uVar4;\n            iVar6 = (param_1 + -1) - param_2;\n            iVar5 = -(uVar4 - 1);\n            uVar1 = *puVar2;\ncode_r0x00408a47:\n            do {\n                if (uVar1 == *param_2) goto code_r0x00408a7a;\n                puVar3 = param_2;\n                if (uVar1 == param_2[1]) goto code_r0x00408a7d;\ncode_r0x00408a50:\n                param_2 = puVar3 + 4;\n                if (param_2 < puVar7) {\n                    if (uVar1 != puVar3[2]) {\n                        if (uVar1 != puVar3[3]) goto code_r0x00408a47;\n                        param_2 = puVar3 + 5;\n                    }\n                    param_2 = param_2 + -2;\ncode_r0x00408a7a:\n                    param_2 = param_2 + -1;\ncode_r0x00408a7d:\n                    iVar8 = iVar5;\n                    if (iVar5 == 0) {\ncode_r0x00408aa5:\n                        if (puVar7 < param_2 + 2) {\n                            return NULL;\n                        }\n                        return param_2 + 2 + iVar6;\n                    }\n                    while (puVar3 = param_2,  *(puVar2 + iVar8) == *(param_2 + iVar8 + 1)) {\n                        if (-3 < iVar8) goto code_r0x00408aa5;\n                        if (*(puVar2 + iVar8 + 2) != *(param_2 + iVar8 + 3)) break;\n                        bVar9 = SCARRY4(iVar8, 4);\n                        iVar8 = iVar8 + 4;\n                        if (bVar9 == iVar8 < 0) goto code_r0x00408aa5;\n                    }\n                    goto code_r0x00408a50;\n                }\n                param_2 = puVar3 + 2;\n            } while (param_2 < puVar7);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 704
    },
    "00408bb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bb4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = *(param_2 + 1) + 10 + param_2;\n    iVar3 = *(*(param_2 + 1) + 6 + param_2);\n    if (iVar3 != 0) {\n        do {\n            if (*piVar2 != 0) {\n                fcn.00408bec();\n            }\n            piVar2 = piVar2 + 2;\n            iVar4 = iVar3 + -1;\n            bVar1 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar1);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00408c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c90(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar2 = *(param_2 + 1);\n    piVar3 = uVar2 + 10 + param_2;\n    iVar5 = *(uVar2 + 6 + param_2);\n    if (iVar5 != 0) {\n        do {\n            if (*piVar3 == 0) {\n                iVar5 = iVar5 + -1;\n                do {\n                    piVar3 = piVar3 + 2;\n                    if (***piVar3 != '\\x0f') {\n                        fcn.00405500(CONCAT13(2, uVar2));\n                        return;\n                    }\n                    fcn.0040c544();\n                    iVar4 = iVar5 + -1;\n                    bVar1 = 0 < iVar5;\n                    uVar2 = extraout_ECX_00;\n                    iVar5 = iVar4;\n                } while (iVar4 != 0 && bVar1);\n                return;\n            }\n            fcn.00408d08();\n            piVar3 = piVar3 + 2;\n            iVar4 = iVar5 + -1;\n            bVar1 = 0 < iVar5;\n            uVar2 = extraout_ECX;\n            iVar5 = iVar4;\n        } while (iVar4 != 0 && bVar1);\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00408e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408e24(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = *(param_2 + 1) + 10 + param_2;\n    iVar3 = *(*(param_2 + 1) + 6 + param_2);\n    if (iVar3 != 0) {\n        do {\n            if (*piVar2 == 0) {\n                return;\n            }\n            fcn.00408e74();\n            piVar2 = piVar2 + 2;\n            iVar4 = iVar3 + -1;\n            bVar1 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar1);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00409450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409450(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uchar *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != 0) {\n    // switch table (12 cases) at 0x409498\n        switch(*in_ECX) {\n        case 7:\n        case 10:\n        case 0xb:\n        case 0xf:\n        case 0x11:\n        case 0x12:\n            fcn.004055b4();\n            break;\n        case 8:\n            fcn.004055b4();\n            break;\n        default:\n            fcn.0040554c();\n            break;\n        case 0xc:\n            fcn.004055b4();\n            break;\n        case 0xd:\n            uVar1 = in_ECX[1];\n            if (0 < arg_8h) {\n                do {\n                    fcn.00409450(*(in_ECX + uVar1 + 6));\n                    arg_8h = arg_8h + -1;\n                } while (0 < arg_8h);\n            }\n            break;\n        case 0xe:\n            if (0 < arg_8h) {\n                do {\n                    fcn.00409104();\n                    arg_8h = arg_8h + -1;\n                } while (0 < arg_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "004095a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004095a8(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00409c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409c00(void)\n\n{\n    fcn.00409958(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "0040a34c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a34c(int16_t *param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    \n    if (param_2 == 0) {\n        *in_EAX = 0;\n    }\n    else {\n        if (0 < param_2) {\n            do {\n                iVar1 = *param_1;\n                *in_EAX = iVar1;\n                if (iVar1 == 0) {\n                    return;\n                }\n                in_EAX = in_EAX + 1;\n                param_1 = param_1 + 1;\n                param_2 = param_2 + -1;\n            } while (0 < param_2);\n        }\n        if (param_2 == 0) {\n            in_EAX[-1] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0040a660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a660(int32_t param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    \n    if (0 < param_1) {\n        do {\n            if (*in_EAX != *param_2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            param_1 = param_1 + -1;\n        } while (0 < param_1);\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "0040a684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a684(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    *in_EAX = 0;\n    cVar1 = (**0x4bdc00)(0x38, &var_4h, 0);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.004053f0();\n        (**0x4bdc00)(0x38, &var_4h, uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0040b044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location",
            "identify system language via API"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040b044(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x40b060;\n    fcn.00407b04();\n    uStack36 = 0x40b104;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = sub.kernel32.dll_GetUserDefaultUILanguage(3, &fcn.0040b044::var_ch, 4);\n    sub.kernel32.dll_GetLocaleInfoW();\n    fcn.0040858c();\n    fcn.0040873c();\n    cVar1 = fcn.0040aef4();\n    if (cVar1 == '\\0') {\n        var_8h._0_2_ = 0;\n        fcn.0040858c();\n        fcn.0040873c();\n        cVar1 = fcn.0040aef4();\n        if (cVar1 == '\\0') {\n            fcn.00407a20();\n        }\n    }\n    *in_FS_OFFSET = uVar2 & 0xffff;\n    fcn.00407a80(0x40b10b);\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 364
    },
    "0040bcb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bcb8(void)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        fcn.0040bbf8();\n        iVar1 = 0x1f;\n        do {\n            fcn.0040bb14();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        iVar1 = 0x1f;\n        do {\n            fcn.0040bb14();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        fcn.004065b4();\n        fcn.00409568();\n    }\n    return unaff_EBX & 0xffffff00 | in_EAX != 0;\n}\n",
        "token_count": 184
    },
    "0040bfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040bfd0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040bf00();\n    if ((iVar1 != 0) && (param_1 < *(in_EAX + 4))) {\n        if (param_1 < *(in_EAX + 4) + -1) {\n            fcn.004055b4();\n        }\n        *(in_EAX + 4) = *(in_EAX + 4) + -1;\n    }\n    return CONCAT44(param_1, iVar1);\n}\n",
        "token_count": 138
    },
    "0040c0fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040c0fc(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t *in_EAX;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    LOCK();\n    piVar1 = in_EAX + 1;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    do {\n        puVar3 = *in_EAX;\n        if (puVar3 == NULL) break;\n        LOCK();\n        if (*in_EAX == *in_EAX) {\n            *in_EAX = CONCAT44(iVar2 + 1, *puVar3);\n            puVar4 = puVar3;\n            iVar5 = *(in_EAX + 4);\n        }\n        else {\n            puVar4 = *in_EAX;\n            iVar5 = *in_EAX >> 0x20;\n        }\n    } while ((iVar5 != *(in_EAX + 4)) || (puVar4 != puVar3));\n    if (puVar3 != NULL) {\n        LOCK();\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n    }\n    return puVar3;\n}\n",
        "token_count": 282
    },
    "0048e922": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004aeccd) overlaps instruction at (ram,0x004aecc9)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x004aea9d)\n// WARNING: Removing unreachable block (ram,0x004aea93)\n// WARNING: Removing unreachable block (ram,0x0048ea80)\n// WARNING: Removing unreachable block (ram,0x0048ea85)\n// WARNING: Removing unreachable block (ram,0x004aebcf)\n// WARNING: Removing unreachable block (ram,0x004aec46)\n// WARNING: Removing unreachable block (ram,0x004aebd1)\n// WARNING: Removing unreachable block (ram,0x004aebf7)\n// WARNING: Removing unreachable block (ram,0x004aec62)\n// WARNING: Removing unreachable block (ram,0x004aecd8)\n// WARNING: Removing unreachable block (ram,0x004aec64)\n// WARNING: Removing unreachable block (ram,0x004aebf9)\n// WARNING: Removing unreachable block (ram,0x004aebfb)\n// WARNING: Removing unreachable block (ram,0x004aea2c)\n// WARNING: Removing unreachable block (ram,0x0040c638)\n// WARNING: Removing unreachable block (ram,0x004aea31)\n// WARNING: Removing unreachable block (ram,0x004aea98)\n// WARNING: Removing unreachable block (ram,0x0040c610)\n// WARNING: Removing unreachable block (ram,0x0040c62c)\n// WARNING: Removing unreachable block (ram,0x0040c628)\n// WARNING: Removing unreachable block (ram,0x0040c631)\n// WARNING: Removing unreachable block (ram,0x004aea33)\n// WARNING: Removing unreachable block (ram,0x0048ea7a)\n// WARNING: Removing unreachable block (ram,0x0048ea7d)\n// WARNING: Type propagation algorithm not settling\n\nuint32_t __cdecl\nfcn.0048e922(uint *arg_8h, char *arg_ch, uint arg_10h, uchar *noname_3, uint *noname_4, char *noname_5, \n            int32_t *noname_6, uchar *noname_7, uint *noname_8, char *noname_9, int32_t *noname_10, uint *noname_11, \n            uint *noname_12, char *noname_13, uint noname_14, uchar *noname_15, uint *noname_16, char *noname_17, \n            int32_t *arg_6ch, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, \n            uint noname_24, uint arg_6ch_2)\n\n{\n    uint16_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    uchar *puVar7;\n    int32_t *piVar8;\n    char cVar9;\n    char cVar10;\n    uint8_t uVar11;\n    uchar uVar12;\n    uint8_t uVar13;\n    uint8_t uVar14;\n    uint16_t uVar15;\n    int32_t *in_EAX;\n    uint32_t uVar16;\n    char *pcVar17;\n    int32_t *piVar18;\n    char *pcVar20;\n    uint32_t *puVar21;\n    char cVar22;\n    char cVar23;\n    char *in_ECX;\n    char *extraout_ECX;\n    uint8_t uVar24;\n    ushort uVar25;\n    uint16_t uVar26;\n    uint *in_EDX;\n    ushort uVar29;\n    uint8_t **ppuVar27;\n    char *pcVar28;\n    uint16_t uVar30;\n    int32_t unaff_EBX;\n    uchar *puVar31;\n    uint32_t uVar32;\n    char *pcVar33;\n    int32_t iVar34;\n    int32_t iVar35;\n    uchar *puVar36;\n    uchar *puVar37;\n    uchar *puVar38;\n    uchar *puVar39;\n    uchar *puVar40;\n    uint *puVar41;\n    uchar *puVar42;\n    uint *puVar43;\n    uint *puVar44;\n    char *unaff_EBP;\n    uint32_t uVar45;\n    uint *unaff_ESI;\n    uint *puVar46;\n    uint *puVar47;\n    uint *unaff_EDI;\n    uint *puVar48;\n    uint *puVar49;\n    ushort in_CS;\n    uint *in_FS_OFFSET;\n    int32_t in_GS_OFFSET;\n    bool in_CF;\n    bool bVar50;\n    uint8_t in_AF;\n    bool in_ZF;\n    bool bVar51;\n    bool bVar52;\n    bool in_SF;\n    bool bVar53;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar54;\n    uchar unaff_retaddr;\n    ushort unaff_retaddr_00;\n    uchar unaff_retaddr_01;\n    uchar uVar55;\n    uchar uVar56;\n    uchar uVar57;\n    uint *puStack32;\n    uint *puStack28;\n    char *pcStack24;\n    uchar *puStack16;\n    uint *in_stack_fffffff4;\n    char *pcStack8;\n    uint16_t uStack2;\n    uint8_t *puVar19;\n    \n    uVar24 = in_EDX;\n    uVar13 = in_EAX;\n    cVar10 = unaff_EBX;\n    puVar46 = unaff_ESI;\n    puVar48 = unaff_EDI;\n    if (!in_SF) {\ncode_r0x0048e997:\n        uVar16 = in_EAX & 0xffffff00 | uVar13 + (unaff_EBX >> 8);\n        cVar22 = in_ECX;\n        cVar23 = in_ECX >> 8;\n        if (in_ECX != NULL) {\n            cVar9 = in_EDX >> 8;\n            *(uVar16 + 0xb800405d) = *(uVar16 + 0xb800405d) + cVar9;\n            *(uVar16 + 1) = *(uVar16 + 1) + uVar24;\n            *(uVar16 + 2) = *(uVar16 + 2) + cVar22;\n            *(uVar16 + 3) = *(uVar16 + 3) + cVar23;\n            *(uVar16 + 4) = *(uVar16 + 4) + cVar9;\n            *(uVar16 + 5) = *(uVar16 + 5) + cVar9;\n            *(uVar16 + 6) = *(uVar16 + 6) + cVar23;\n            *(uVar16 + 0xa4004063) = *(uVar16 + 0xa4004063) + cVar22;\n            uVar16 = uVar16 + 8;\n            cVar9 = uVar16;\n            uVar32 = CONCAT11((uVar16 >> 8) * '\\x02', cVar9);\n            pcVar17 = uVar16 & 0xffff0000 | uVar32;\n            *pcVar17 = *pcVar17 + (in_EDX + -1 >> 8);\n            (pcVar17 + 0x4a)[in_ECX] = (pcVar17 + 0x4a)[in_ECX] + cVar23;\n            pcVar17[7] = pcVar17[7] + cVar9;\n            pcVar17[in_ECX] = pcVar17[in_ECX] + (uVar32 >> 8);\n            in_EDX = in_EDX + -1;\n            *puVar46 = *puVar46 + cVar22;\n            *pcVar17 = *pcVar17 + cVar9;\n            *pcVar17 = *pcVar17 + cVar9;\n            *in_ECX = *in_ECX + cVar9;\n            *pcVar17 = *pcVar17 + cVar9;\n        }\n        piVar18 = in(0x48);\n        *(piVar18 * 2) = *(piVar18 * 2) + cVar10;\n        cVar9 = piVar18;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        *piVar18 = *piVar18 + cVar9;\n        uVar13 = piVar18 + *piVar18 + cVar10;\n        pcVar17 = piVar18 + *piVar18 & 0xffffff00 | uVar13;\n        *(pcVar17 * 2) = *(pcVar17 * 2) + uVar13;\n        *pcVar17 = *pcVar17 + uVar13;\n        pcVar17 = pcVar17 | puVar46[0x13];\n        iVar5 = *(unaff_EBX + 0x75) * 0x706c6548;\n        puVar46 = iVar5;\n        if (puVar46 == iVar5) {\n            *pcVar17 = *pcVar17 + pcVar17;\n        }\n        uVar13 = in(0xe5);\n        pcVar17 = (pcVar17 & 0xffffff00 | uVar13) - 1;\n        *(pcVar17 * 2) = *(pcVar17 * 2) + cVar10 + '\\x01';\n        cVar10 = pcVar17;\n        *pcVar17 = *pcVar17 + cVar10;\n        *(puVar46 + 0x43) = *(puVar46 + 0x43) | pcVar17;\n        uVar25 = SUB42(in_EDX, 0);\n        out(*puVar46, uVar25);\n        uVar2 = in(uVar25);\n        *puVar48 = uVar2;\n        *pcVar17 = *pcVar17 + cVar10;\n        out(0x48, cVar10);\n        cVar9 = pcVar17 >> 8;\n        *pcVar17 = *pcVar17 + cVar9;\n        *pcVar17 = *pcVar17 + cVar10;\n        *in_ECX = *in_ECX + cVar22;\n        out(*(puVar46 + 5), uVar25);\n        puVar46 = puVar46 + 5;\n        out(*puVar46, uVar25);\n        if (puVar46 == NULL) {\n            out(uVar25, cVar10);\n            *in_EDX = *in_EDX + cVar10 + -1;\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        if (puVar46 < 0) {\n            *pcVar17 = *pcVar17 + cVar10;\n        }\n        *(pcVar17 * 2) = *(pcVar17 * 2) + cVar23;\n    // WARNING: Could not recover jumptable at 0x0048ea3e. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar16 = (*(pcVar17 & 0xffff0000 | CONCAT11(cVar9 + 'H', cVar10)))();\n        return uVar16;\n    }\n    if (in_ZF) {\n        *in_EAX = *in_EAX + uVar13;\n        *in_EAX = *in_EAX + uVar13;\n        in_ECX[0x2c0048eb] = in_ECX[0x2c0048eb] + cVar10;\n        *in_EAX = *in_EAX + uVar13;\n        goto code_r0x0048e997;\n    }\n    uVar25 = SUB42(in_EDX, 0);\n    uVar2 = in(uVar25);\n    *unaff_EDI = uVar2;\n    puVar46 = unaff_ESI + 1;\n    out(*unaff_ESI, uVar25);\n    puVar48 = unaff_EDI + 5;\n    if (in_CF) goto code_r0x0048e997;\n    puVar1 = unaff_EBX + 0x2e;\n    *puVar1 = *puVar1 + in_CF * ((puVar46 & 3) - (*puVar1 & 3));\n    puVar31 = unaff_EBX + 1;\n    out(*puVar46, uVar25);\n    uVar12 = in(uVar25);\n    *(unaff_EDI + 5) = uVar12;\n    puVar19 = unaff_EDI + 7;\n    uVar12 = in(uVar25);\n    *(unaff_EDI + 6) = uVar12;\n    puVar1 = in_ECX + in_GS_OFFSET + unaff_EBP * 2 + 0x6f;\n    *puVar1 = *puVar1 + in_CF * ((unaff_ESI + 5 & 3) - (*puVar1 & 3));\n    out(*(unaff_ESI + 5), uVar25);\n    *in_ECX = *in_ECX + uVar13;\n    *in_EDX = *in_EDX + uVar13;\n    bVar50 = CARRY1(*puVar19, uVar13);\n    *puVar19 = *puVar19 + uVar13;\n    puVar49 = CONCAT13(unaff_retaddr_01, CONCAT21(unaff_retaddr_00, unaff_retaddr));\n    uVar15 = &fcn.0048e922::arg_8h >> 8;\n    bVar51 = puVar31 == NULL;\n    puVar46 = unaff_ESI + 10;\n    out(*(unaff_ESI + 6), uVar25);\n    puVar48 = puVar49 + 1;\n    uVar2 = in(uVar25);\n    *puVar49 = uVar2;\n    if (SCARRY4(unaff_EBX, 1)) {\n        bVar51 = CARRY1(*in_EAX, uVar13);\n        *in_EAX = *in_EAX + uVar13;\n        puVar19 = unaff_EBX + 0x7a;\n        uVar13 = *puVar19;\n        uVar14 = *puVar19 - uVar24;\n        bVar50 = uVar13 < uVar24 || uVar14 < bVar51;\n        *puVar19 = uVar14 - bVar51;\n        if (uVar13 >= uVar24 && uVar14 >= bVar51) {\n            in_EAX = uStack2 << 0x10;\n            unaff_EBP = pcStack24;\n            goto code_r0x004aea78;\n        }\n        uVar2 = in(uVar25);\n        *puVar48 = uVar2;\ncode_r0x004aea02:\n        puVar48 = puVar48 + 5;\n        out(*puVar46, in_EDX);\n        pcStack8 = in_ECX;\n        puVar46 = puVar46 + 1;\ncode_r0x004aea06:\n        uVar29 = in_EDX >> 0x10;\n        uVar25 = pcStack8 >> 0x10;\n        if (bVar50) goto code_r0x004aea72;\ncode_r0x004aea09:\n        puVar1 = puVar31 + 0x2e;\n        *puVar1 = *puVar1 + bVar50 * ((puVar46 & 3) - (*puVar1 & 3));\n        bVar51 = *0x10 == 0xffffffff;\n        puVar48 = puVar48 & 0xffff0000 | uVar15;\n        puStack28 = puVar46 & 0xffff0000;\n        unaff_EBP = unaff_EBP & 0xffff0000 | arg_8h._1_2_;\n        puStack16 = puVar31 & 0xffff0000 | arg_ch._1_2_;\n        in_EDX = CONCAT22(uVar29, CONCAT11(arg_10h, arg_ch._3_1_));\n        pcStack8 = CONCAT22(uVar25, arg_10h._1_2_);\n        in_EAX = in_EAX & 0xffff0000 | CONCAT11(uVar55, arg_10h._3_1_);\n        if (bVar51) goto code_r0x004aea12;\n    }\n    else {\n        if (bVar50) {\ncode_r0x004ae9ff:\n            if (!bVar51) {\n                uVar2 = in(in_EDX);\n                *puVar48 = uVar2;\n                goto code_r0x004aea02;\n            }\ncode_r0x004aea66:\n            bVar50 = CARRY1(*in_EAX, puVar31);\n            *in_EAX = *in_EAX + puVar31;\n            bVar51 = *in_EAX == '\\0';\n            uVar15 = puVar31 >> 8;\n            pcStack8 = in_ECX;\n            puVar7 = puVar31;\n            arg_8h = puVar46;\n            if (-1 < *in_EAX) goto code_r0x004aeade;\n        }\n        else {\n            if (bVar50) {\ncode_r0x004ae9d8:\n                uVar29 = in_EDX >> 0x10;\n                uVar25 = in_ECX >> 0x10;\n                if (bVar50) {\n                    puVar46 = puVar46 + 1;\n                    iVar34 = *(unaff_EBP + 0x6c) * 0x61437364;\n                    puVar1 = in_EAX + 0x65;\n                    *puVar1 = *puVar1 + (iVar34 != *(unaff_EBP + 0x6c) * 0x61437364) * ((unaff_EBP & 3) - (*puVar1 & 3))\n                    ;\n                    *(iVar34 + -4) = iVar34;\ncode_r0x004ae9e9:\n                    puVar46 = puVar46 + 1;\n                    uVar54 = func_0x2922ea41();\n                    in_EDX = uVar54 >> 0x20;\n                    in_EAX = uVar54 + 1;\n                    *in_EAX = *in_EAX + in_EAX;\n                    bVar50 = CARRY1(*in_EAX, puVar31);\n                    *in_EAX = *in_EAX + puVar31;\n                    bVar51 = *in_EAX == '\\0';\n                    uVar15 = puVar31 >> 8;\n                    pcStack8 = extraout_ECX;\n                    in_ECX = extraout_ECX;\n                    if (*in_EAX < '\\0') goto code_r0x004ae9ff;\n                    goto code_r0x004aea72;\n                }\n                goto code_r0x004aea09;\n            }\n            pcStack8 = in_ECX;\n            puStack16 = puVar31;\n            puStack28 = puVar46;\n            if (-1 < puVar31) {\ncode_r0x004aea12:\n                cVar10 = in_EAX;\n                if (bVar51) {\n                    return (in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + pcStack8, cVar10)) - 0xc;\n                }\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                cVar22 = *in_EAX;\n                in_EAX = in_EAX & 0xffffff00 | cVar10 + cVar22;\n                *in_EAX = *in_EAX + cVar10 + cVar22;\n                in_stack_fffffff4 = (in_EDX & 0xffffff00 | in_EDX & pcStack8 >> 8) - 1;\n                *puVar48 = *puVar48 + pcStack8;\n                puStack16[in_EAX * 2 + 0x6f] = puStack16[in_EAX * 2 + 0x6f] ^ in_stack_fffffff4;\n                puStack32 = puVar48 + 1;\n                uVar2 = in(in_stack_fffffff4);\n                *puVar48 = uVar2;\n                goto code_r0x004aea78;\n            }\n            if (bVar51) goto code_r0x004aea06;\n            uVar2 = in(uVar25);\n            *puVar48 = uVar2;\n            puVar48 = puVar49 + 9;\n            bVar51 = puVar48 == NULL;\n            puStack28 = unaff_ESI + 0xb;\n            out(*puVar46, uVar25);\n            if (bVar50) goto code_r0x004aea12;\n            puVar1 = unaff_EBX + 0x2f;\n            *puVar1 = *puVar1 + bVar50 * ((puStack28 & 3) - (*puVar1 & 3));\n            puVar31 = unaff_EBX + 2;\n            out(*puStack28, uVar25);\n            uVar12 = in(uVar25);\n            *puVar48 = uVar12;\n            puVar48 = puVar49 + 0xb;\n            uVar12 = in(uVar25);\n            *(puVar49 + 10) = uVar12;\n            puVar1 = in_ECX + in_GS_OFFSET + unaff_EBP * 2 + 0x6f;\n            *puVar1 = *puVar1 + bVar50 * ((unaff_ESI + 0xf & 3) - (*puVar1 & 3));\n            puVar46 = unaff_ESI + 4;\n            out(*(unaff_ESI + 0xf), uVar25);\n            if (!bVar50) goto code_r0x004ae9e9;\n            noname_3 = &stack0x00000014;\n            iVar4 = *(arg_ch + 0x3c);\n            iVar3 = in(arg_ch);\n            *in_EAX = iVar3;\n            uVar12 = in(arg_ch);\n            *(in_EAX + 1) = uVar12;\n            piVar18 = noname_10;\n            in_ECX = noname_9;\n            in_EDX = noname_8;\n            puVar31 = noname_7;\n            unaff_EBP = noname_5;\n            puVar46 = noname_4;\n            puVar48 = &stack0x00000014;\n            piVar8 = noname_6;\n            if (iVar4 * 0x74737953 == iVar4 * 0x74737953) {\ncode_r0x004aea3e:\n                noname_6 = piVar8;\n                puVar46 = puVar46 + 1;\n                iVar35 = *(unaff_EBP + 0x6c) * 0x61437364;\n                puVar1 = piVar18 + 0x65;\n                *puVar1 = *puVar1 + (iVar35 != *(unaff_EBP + 0x6c) * 0x61437364) * ((unaff_EBP & 3) - (*puVar1 & 3));\n                *(iVar35 + -4) = iVar35;\ncode_r0x004aea4b:\n                noname_3 = &stack0x00000014;\n                puVar46 = puVar46 + 1;\n                in_EAX = piVar18 + 1;\n                cVar10 = in_EAX;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                *in_EAX = *in_EAX + cVar10;\n                goto code_r0x004aea66;\n            }\n            uVar13 = noname_10;\n            bVar50 = uVar13 < 0x53;\n            bVar51 = uVar13 == 0x53;\n            piVar18 = arg_6ch;\n            in_ECX = noname_17;\n            in_EDX = noname_16;\n            unaff_EBP = noname_13;\n            puVar48 = noname_11;\n            if (-1 < uVar13 + 0xad) {\n                puVar31 = noname_15;\n                puVar46 = noname_12;\n                if (!bVar50) {\n                    pcVar6 = swi(3);\n                    uVar16 = (*pcVar6)();\n                    return uVar16;\n                }\n                goto code_r0x004aea3e;\n            }\n            uVar25 = SUB42(noname_8, 0);\n            if (!bVar51) {\n                noname_4 = in(uVar25);\n    // WARNING (jumptable): Ignoring partial resolution of indirect\n    // WARNING: Ignoring partial resolution of indirect\n                uVar57 = in(uVar25);\n                in_EAX = arg_6ch;\n                puVar31 = noname_15;\n                puVar46 = noname_12;\n                noname_3 = &stack0x00000014;\n                if (bVar50) goto code_r0x004ae9d8;\n                goto code_r0x004aea4b;\n            }\n    // WARNING: Ignoring partial resolution of indirect\n            uVar56 = in(uVar25);\n            puVar48 = &fcn.0048e922::arg_8h & 0xff000000 | CONCAT21(uVar15, 4);\n            if (!bVar50) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            piVar18 = noname_6;\n            in_EAX = noname_6;\n            in_ECX = noname_5;\n            pcStack8 = noname_5;\n            in_EDX = noname_4;\n            puVar31 = &stack0x00000014;\n            puVar7 = &stack0x00000014;\n            unaff_EBP = arg_ch;\n            puVar46 = arg_8h;\n            noname_3 = &stack0x00000014;\n            piVar8 = &stack0x00000020;\n            if (bVar50) goto code_r0x004aea3e;\n        }\n        puVar31 = puVar7;\n        if (bVar51) {\n            cVar10 = in_EAX;\n            *in_EAX = *in_EAX + cVar10;\n            *in_EAX = *in_EAX + cVar10;\n            *in_EAX = *in_EAX + cVar10;\n            in_EAX = in_EAX & 0xffff0000 | CONCAT11(0xea, cVar10);\n            *(in_EAX * 2) = *(in_EAX * 2) + pcStack8;\n            goto code_r0x004aeade;\n        }\n        uVar2 = in(in_EDX);\n        *puVar48 = uVar2;\n        puVar48 = puVar48 + 5;\n        puVar46 = arg_8h + 1;\n        out(*arg_8h, in_EDX);\ncode_r0x004aea72:\n        if (bVar50) {\ncode_r0x004aeade:\n            cVar10 = in_EAX;\n            *in_EAX = *in_EAX + cVar10;\n            *in_EAX = *in_EAX + cVar10;\n            *in_EAX = *in_EAX + cVar10;\n            uVar13 = in(0xbe);\n            pcVar17 = (in_EAX & 0xffffff00 | uVar13) - 0x15;\n            *pcVar17 = *pcVar17 + uVar13;\n            return;\n        }\n        puVar1 = puVar31 + 0x2e;\n        *puVar1 = *puVar1 + bVar50 * ((puVar46 & 3) - (*puVar1 & 3));\n        in_stack_fffffff4 = in_EDX;\n        puStack16 = puVar31;\n        puStack28 = puVar46;\n        puStack32 = puVar48;\ncode_r0x004aea78:\n        puVar48 = puStack32 & 0xffff0000 | uVar15;\n        puStack28 = puStack28 & 0xffff0000;\n        unaff_EBP = unaff_EBP & 0xffff0000 | arg_8h._1_2_;\n        puStack16 = puStack16 & 0xffff0000 | arg_ch._1_2_;\n        in_EDX = in_stack_fffffff4 & 0xffff0000 | CONCAT11(arg_10h, arg_ch._3_1_);\n        pcStack8 = pcStack8 & 0xffff0000 | arg_10h._1_2_;\n        in_EAX = in_EAX & 0xffff0000 | CONCAT11(uVar55, arg_10h._3_1_);\n        if (*0x10 != 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    if (*0x10 != 0xffffffff) {\n        *in_EAX = *in_EAX + in_EAX;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar14 = in_EAX;\n    *in_EAX = *in_EAX + uVar14;\n    *in_EAX = *in_EAX + uVar14;\n    pcVar17 = unaff_EBP * 8 + 0x5a;\n    *pcVar17 = *pcVar17 + in_EDX;\n    *in_EAX = *in_EAX + uVar14;\n    *in_EAX = *in_EAX + uVar14;\n    puStack16[unaff_EBP * 8 + 0x4a] = puStack16[unaff_EBP * 8 + 0x4a] + uVar14;\n    *in_EAX = *in_EAX + uVar14;\n    *in_EAX = *in_EAX + uVar14;\n    *(in_EDX + -0x15) = *(in_EDX + -0x15) + (in_EAX >> 8);\n    puVar31 = in_EDX + -1;\n    *(in_EAX * 2) = *(in_EAX * 2) + puVar31;\n    uVar13 = *in_EAX;\n    *in_EAX = *in_EAX + uVar14;\n    bVar50 = 9 < (uVar14 & 0xf);\n    uVar24 = bVar50 | in_AF;\n    uVar11 = uVar14 + uVar24 * '\\x06';\n    uVar16 = in_EAX & 0xffffff00 |\n             uVar11 + (0x90 < (uVar11 & 0xf0) | CARRY1(uVar13, uVar14) | uVar24 * (0xf9 < uVar11)) * '`';\n    cVar10 = puVar31 >> 8;\n    *(uVar16 + 0xb800405e) = *(uVar16 + 0xb800405e) + cVar10;\n    *(uVar16 + 2) = *(uVar16 + 2) + puVar31;\n    *(uVar16 + 3) = *(uVar16 + 3) + pcStack8;\n    uVar16 = uVar16 + 4;\n    arg_8h._1_2_ = puVar31;\n    uVar12 = in(arg_8h._1_2_);\n    uVar16 = *CONCAT31(*(uVar16 & 0xffffff00 | uVar16 + (uVar16 >> 8)) >> 8, uVar12) ^ 0x60;\n    pcVar17 = uVar16 + 1;\n    *pcVar17 = *pcVar17 + (pcStack8 >> 8);\n    arg_10h._1_2_ = pcVar17;\n    arg_10h._3_1_ = pcVar17 >> 0x10;\n    noname_3 = noname_3 & 0xffffff00 | pcVar17 >> 0x18;\n    arg_ch._1_2_ = pcStack8;\n    arg_ch._3_1_ = pcStack8 >> 0x10;\n    arg_10h._0_1_ = pcStack8 >> 0x18;\n    arg_8h._3_1_ = puVar31 >> 0x10;\n    arg_ch._0_1_ = puVar31 >> 0x18;\n    arg_8h._0_1_ = puStack16 >> 0x18;\n    pcVar17 = uVar16 + 2;\n    *pcVar17 = *pcVar17 + pcVar17;\n    *pcVar17 = -0x5c;\n    puVar36 = puVar48[1];\n    piVar18 = (uVar16 + 3 & 0xffffff00 | uVar16 + 3 + puStack16) + 1;\n    pcVar17 = puVar48 + puVar31 * 2 + 0x40;\n    *pcVar17 = *pcVar17 + cVar10;\n    iVar3 = *piVar18;\n    *puVar48 = *puVar48 + pcStack8;\n    puVar48 = puVar48 & 0xffff0000 | *(puVar36 + 5);\n    puVar46 = puStack28 | *(puVar36 + 7);\n    uVar45 = (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000 |\n             *(puVar36 + 9);\n    uVar30 = *(puVar36 + 0xd);\n    uVar32 = puStack16 & 0xffff0000 | uVar30;\n    uVar26 = *(puVar36 + 0xf);\n    pcVar28 = in_EDX + -2 & 0xffff0000 | uVar26;\n    pcVar17 = piVar18 + iVar3 & 0xffff0000U | *(puVar36 + 0x11);\n    uVar15 = *(puVar36 + 0x13);\n    uVar16 = pcStack8 & 0xffff0000;\n    puVar21 = uVar16 | uVar15;\n    puVar37 = puVar36 + 0x15;\n    puVar38 = puVar36 + 0x15;\n    uVar13 = uVar15;\n    if (puVar36 == 0xfffffffb) {\n        uVar24 = *(puVar36 + 0x11);\n        if (puVar36 == 0xfffffffb) {\n            pcVar28 = pcVar28 + -1;\n            *puVar21 = *puVar21 + uVar24;\n            *pcVar28 = *pcVar28 + uVar13;\n            *puVar21 = *puVar21 + uVar13;\n            *puVar21 = *puVar21 + uVar13;\n            *puVar21 = *puVar21 + uVar13;\n            pcVar33 = uVar32 + pcVar28 * 2;\n            *pcVar33 = *pcVar33 + uVar13;\n        }\n        else {\n            uVar45 = uVar15 & 0xff | (uVar15 >> 8) * '\\x02' << 8;\n            puVar46 = 0x8004a;\n            uVar13 = (uVar15 & 0xff) + *(uVar16 | uVar45);\n            uVar16 = uVar16 | uVar45 & 0xffffff00;\n            pcVar33 = uVar16 | uVar13;\n            *pcVar33 = *pcVar33 + uVar13;\n            *pcVar33 = *pcVar33 + uVar13;\n            *pcVar33 = *pcVar33 + uVar13;\n            puVar21 = uVar16 | uVar13 + 0x53;\n        }\n        puVar41 = puVar48 + 1;\n        uVar12 = in(pcVar28);\n        *puVar48 = uVar12;\n        uVar14 = in(0xbe);\n        uVar16 = (puVar21 & 0xffffff00 | puVar21 + *puVar21) - 1 & 0xffffff00;\n        puVar19 = uVar16 | uVar14;\n        ppuVar27 = pcVar28 + -1;\n        *pcVar17 = *pcVar17 + uVar14;\n        *pcVar17 = *pcVar17 + uVar14;\n        *ppuVar27 = *ppuVar27 + puVar19;\n        *ppuVar27 = *ppuVar27 + uVar14;\n        uVar13 = *puVar19;\n        *puVar19 = *puVar19 + uVar24;\n        pcVar17 = uVar32 + pcVar17 * 2;\n        *pcVar17 = (*pcVar17 - (uVar30 >> 8)) - CARRY1(uVar13, uVar24);\n        *(uVar32 + 0x6f) = *(uVar32 + 0x6f) | puVar19;\n        puVar47 = puVar46 + 1;\n        out(*puVar46, ppuVar27);\n        pcVar28 = (uVar16 | uVar14 + *puVar19) + 0x68676952;\n        bVar50 = pcVar28 == NULL;\ncode_r0x004aec4a:\n        if (!bVar50) {\n            *ppuVar27 = *ppuVar27 + pcVar28;\n        }\n        *pcVar28 = *pcVar28 + pcVar28;\n        *(puVar37 + -4) = puVar37;\n        uVar13 = in(ppuVar27);\n        puVar21 = pcVar28 & 0xffffff00 | uVar13;\n        pcVar17 = ppuVar27 + -1;\n        bVar51 = CARRY1(*puVar41, uVar13);\n        *puVar41 = *puVar41 + uVar13;\n        puVar48 = puVar37 + -8;\n        *(puVar37 + -8) = puVar37 + -4;\n        pcVar33 = uVar32 + 1;\n        bVar53 = pcVar33 < 0;\n        bVar52 = pcVar33 == NULL;\n        puVar46 = puVar47 + 1;\n        out(*puVar47, pcVar17);\n        puVar49 = puVar41 + 1;\n        uVar2 = in(pcVar17);\n        *puVar41 = uVar2;\n        if (SCARRY4(uVar32, 1)) {\n            *pcVar33 = *pcVar33 + (pcVar17 >> 8);\n            return pcVar28 & 0xffffff00;\n        }\ncode_r0x004aec5c:\n        uVar54 = CONCAT44(pcVar17, puVar21);\n        if (bVar51) {\n            *(pcVar33 + -0x173c7430) = *(pcVar33 + -0x173c7430) + -1;\n            puVar41 = puVar48;\ncode_r0x004aecca:\n            pcVar33 = pcVar33 & 0xffff0000 | CONCAT11(0xf5, pcVar33);\n            puVar47 = puVar46;\ncode_r0x004aeccd:\n            *(puVar41 + -2) = in_CS;\n            puVar42 = puVar41 + -6;\n            *(puVar41 + -6) = fcn.004aecd0;\n            uVar54 = (*(pcVar33 + -0x3d))();\n            puVar39 = puVar42 + -4;\n            *(puVar42 + -4) = pcVar33;\n            goto code_r0x004aecd1;\n        }\n        if (bVar51) {\n            puVar1 = pcVar33 + 0x2e;\n            *puVar1 = *puVar1 + bVar51 * ((puVar46 & 3) - (*puVar1 & 3));\ncode_r0x004aec9f:\n            uVar32 = pcVar33 & 0xffff0000 | *(puVar48 + 9);\n            pcVar20 = puVar21 & 0xffff0000 | *(puVar48 + 0xf);\n            puVar40 = puVar48 + 0x11;\n            if (puVar48 != 0xffffffff) {\n                *(puVar48 + 0xd) = pcVar33 & 0xffff0000 | *(puVar48 + 9) & 0xff | -bVar51 << 8;\n                return pcVar20 | 0x5b;\n            }\n            if (puVar48 == 0xffffffff) {\n                *0xc = 0x4aed2d;\n                fcn.0046bcb8();\n                *0xc = 0x4aed36;\n                uVar16 = fcn.0040b494();\n                return uVar16;\n            }\n            *pcVar20 = *pcVar20 + *(puVar48 + 0xf);\ncode_r0x004aeca9:\n            *pcVar20 = *pcVar20 + pcVar20;\n            uVar13 = pcVar20 + *pcVar20;\n            pcVar17 = pcVar20 & 0xffffff00 | uVar13;\n            *pcVar17 = *pcVar17 + uVar13;\n            *(puVar40 + -4) = uVar32;\n            *(puVar40 + -8) = 0x4aecc5;\n            fcn.0046bcb8();\n            *(puVar40 + -8) = 0x4aecce;\n            uVar16 = fcn.0040b494();\n            return uVar16;\n        }\n        puVar43 = puVar48 + -1;\n        puVar44 = puVar48 + -1;\n        puVar48[-1] = pcVar33;\n        if (bVar53) {\n            puVar41 = puVar48 + -1;\n            if (bVar52) goto code_r0x004aecca;\n            uVar2 = in(pcVar17);\n            *puVar49 = uVar2;\n            uVar12 = in(pcVar17);\n            *(puVar49 + 1) = uVar12;\n            puVar49 = puVar48[-1];\n            puVar47 = *puVar48;\n            uVar45 = puVar48[1];\n            pcVar33 = puVar48[3];\n            pcVar28 = puVar48[4];\n            puVar21 = puVar48[6];\n            uVar54 = CONCAT44(pcVar28, puVar21);\n            puVar41 = puVar48 + 7;\n            puVar44 = puVar48 + 7;\n            if (!bVar51) goto code_r0x004aecdf;\n            if (bVar51) {\n                puVar48[6] = puVar48 + 7;\n                puVar47 = puVar47 + 1;\n                iVar5 = *(uVar45 + 0x6c) * 0x61437364;\n                puVar38 = iVar5;\n                bVar51 = puVar38 != iVar5;\n                goto code_r0x004aec78;\n            }\n            puVar48 = puVar48 + 7;\n            if (bVar51) goto code_r0x004aec9f;\n            goto code_r0x004aeccd;\n        }\n        puVar19 = pcVar33 + -0x2e170f3c;\n        *puVar19 = *puVar19 | puVar21;\n        if (*puVar19 == 0) {\n            *(pcVar33 + -0x7425740f) = *(pcVar33 + -0x7425740f) + -1;\n            goto code_r0x004aecdf;\n        }\n    }\n    else {\n        puVar19 = puVar21 * 2 + 0x18;\n        bVar51 = CARRY1(*puVar19, uVar13);\n        uVar24 = *puVar19;\n        *puVar19 = *puVar19 + uVar13;\n        bVar53 = *puVar19 < '\\0';\n        bVar52 = *puVar19 == 0;\n        if (SCARRY1(uVar24, uVar13) != bVar53) {\n            puVar49 = *(puVar36 + 0x15);\n            puVar46 = *(puVar36 + 0x19);\n            pcVar33 = *(puVar36 + 0x25);\n            pcVar17 = *(puVar36 + 0x29);\n            puVar21 = *(puVar36 + 0x31);\n            puVar48 = puVar36 + 0x35;\n            goto code_r0x004aec5c;\n        }\n        bVar51 = CARRY1(*puVar48, uVar13);\n        *puVar48 = *puVar48 + uVar13;\n        bVar52 = SCARRY4(uVar32, 1);\n        uVar32 = uVar32 + 1;\n        puVar47 = puVar46 + 1;\n        out(*puVar46, uVar26);\n        puVar49 = puVar48 + 1;\n        uVar2 = in(uVar26);\n        *puVar48 = uVar2;\n        if (bVar52) {\ncode_r0x004aec78:\n            puVar1 = puVar21 + 0x65;\n            *puVar1 = *puVar1 + bVar51 * ((uVar45 & 3) - (*puVar1 & 3));\n            *(puVar38 + -4) = puVar38;\n            puVar47 = puVar47 + 1;\n        }\n        else if (!bVar51) {\n            uVar16 = *puVar21;\n            piVar18 = puVar21 + *puVar21;\n            *(puVar36 + 0x11) =\n                 (in_NT & 1) * 0x4000 | SCARRY4(puVar21, *puVar21) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                 (piVar18 < 0) * 0x80 | (piVar18 == NULL) * 0x40 | (bVar50 | in_AF & 1) * 0x10 |\n                 ((POPCOUNT(piVar18 & 0xff) & 1U) == 0) * 4 | CARRY4(puVar21, uVar16) | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n            *piVar18 = *piVar18 + piVar18 + CARRY4(puVar21, uVar16);\n            *piVar18 = *piVar18 | piVar18;\n            pcVar17 = pcVar17 + *piVar18;\n            puVar40 = puVar36 + 0xd;\n            puVar37 = puVar36 + 0xd;\n            *(puVar36 + 0xd) = piVar18;\n            uVar13 = in(uVar26);\n            pcVar20 = piVar18 & 0xffffff00 | uVar13;\n            pcVar28 = pcVar28 + -1;\n            *pcVar20 = *pcVar20 + uVar13;\n            pcVar33 = uVar32 + pcVar28 * 2;\n            *pcVar33 = *pcVar33 + uVar13;\n            puVar41 = puVar48 + 5;\n            uVar12 = in(pcVar28);\n            *puVar49 = uVar12;\n            uVar16 = piVar18 & 0xffffff00 | uVar13 + *pcVar20;\n            ppuVar27 = pcVar28 & 0xffff0000 | CONCAT11(pcVar28 >> 8 | *(uVar16 + 0x68), pcVar28);\n            pcVar20 = uVar16 - 1;\n            cVar10 = pcVar20;\n            *pcVar17 = *pcVar17 + cVar10;\n            pcVar28 = puVar36 + pcVar17 * 2 + 0xd;\n            bVar50 = SCARRY1(*pcVar28, cVar10);\n            *pcVar28 = *pcVar28 + cVar10;\n            if (*pcVar28 != '\\0') {\n                bVar50 = SCARRY1(*ppuVar27, pcVar17);\n                *ppuVar27 = *ppuVar27 + pcVar17;\n            }\n            if (bVar50) goto code_r0x004aeca9;\n            pcVar28 = uVar16 - 2;\n            *ppuVar27 = *ppuVar27 + pcVar28;\n            *0x68676952 = *0x68676952 + pcVar28;\n            bVar50 = *0x68676952 == '\\0';\n            goto code_r0x004aec4a;\n        }\n        uVar54 = CONCAT44(pcVar28, puVar21);\n        puVar39 = *(uVar45 + 0x6c) * 0x403e7364;\ncode_r0x004aecd1:\n        *(puVar39 + -4) = puVar47;\n        puVar43 = puVar39 + -8;\n        *(puVar39 + -8) = puVar49;\n    }\n    puVar44 = puVar43;\n    if (uVar54 >> 0x20 != '\\0') {\n        puVar44 = puVar43 + -0x10;\n    // WARNING: Bad instruction - Truncating control flow here\n        *(puVar43 + -0x14) = 0x4aecdf;\n        uVar54 = fcn.004062b0();\n    }\ncode_r0x004aecdf:\n    puVar44[-1] = 0x4aecef;\n    fcn.0040b494();\n    if (uVar54 >> 0x20 != '\\0') {\n        puVar44[-1] = 0x4aecfa;\n        fcn.00406308();\n        *in_FS_OFFSET = *puVar44;\n    }\n    return uVar54;\n}\n",
        "token_count": 11343
    },
    "0040c654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c654(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    LOCK();\n    piVar1 = arg_8h + 1;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 == 0) {\n        do {\n            uVar4 = arg_8h[1];\n            LOCK();\n            puVar2 = arg_8h + 1;\n            if (uVar4 == *puVar2) {\n                *puVar2 = uVar4 | 0x80000000;\n                uVar5 = uVar4;\n            }\n            else {\n                uVar5 = *puVar2;\n            }\n        } while (uVar4 != uVar5);\n        (**(*arg_8h + -4))();\n    }\n    return iVar3 + -1;\n}\n",
        "token_count": 239
    },
    "0040c98c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c98c(void)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t auStack268 [256];\n    \n    iVar1 = *in_EAX + 1;\n    puVar2 = auStack268;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040c8dc();\n    return;\n}\n",
        "token_count": 140
    },
    "0040c9b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c9b8(void)\n\n{\n    uint8_t *in_EAX;\n    \n    fcn.0040c738(*in_EAX);\n    fcn.00407ba8();\n    return;\n}\n",
        "token_count": 50
    },
    "0040c9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c9f0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_stack_00000ff4;\n    uchar auStack4104 [4092];\n    int32_t iStack12;\n    \n    iVar1 = 2;\n    do {\n        iStack12 = iVar1;\n        iVar1 = iStack12 + -1;\n    } while (iStack12 + -1 != 0);\n    if (in_stack_00000ff4 != 0) {\n        if (*(in_stack_00000ff4 + 4) < 0x10000) {\n            uVar2 = fcn.00409ff0(*(in_stack_00000ff4 + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringW(uVar2);\n            fcn.00407ba8();\n        }\n        else {\n            fcn.00408550();\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040caa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get system information on Windows"
        ],
        "decompiled_code": "\nuint fcn.0040caa4(void)\n\n{\n    uchar auStack36 [16];\n    uint uStack20;\n    \n    sub.kernel32.dll_GetSystemInfo(auStack36);\n    return uStack20;\n}\n",
        "token_count": 47
    },
    "0040d6c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d6c8(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 38
    },
    "0040d6d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d6d8(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 38
    },
    "0040d6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d6e8(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 38
    },
    "0040d6f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d6f8(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 38
    },
    "0040d708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d708(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 36
    },
    "0040d774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040d774(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = arg_8h;\n    while (arg_10h != 0) {\n        *puVar1 = *arg_ch;\n        puVar1 = puVar1 + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 120
    },
    "0040d7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d7c0(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 38
    },
    "0040d7d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d7d0(int32_t arg_8h)\n\n{\n    return arg_8h + 0x400000;\n}\n",
        "token_count": 38
    },
    "0040e538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0040e538(void)\n\n{\n    uchar auStack524 [520];\n    \n    sub.kernel32.dll_GetSystemDirectoryW(auStack524, 0x104);\n    fcn.0040e524();\n    return;\n}\n",
        "token_count": 53
    },
    "0040e564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e564(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack24 = 0x8000;\n    puStack28 = 0x40e577;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40e5e4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x40e58d;\n    puStack28 = &stack0xfffffffc;\n    fcn.00405740();\n    uStack44 = 0x40e5c6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    uVar1 = fcn.004084ec();\n    sub.kernel32.dll_LoadLibraryW();\n    *in_FS_OFFSET = uVar1;\n    uStack44 = 0x40e5cd;\n    uStack48 = 0x40e5c5;\n    fcn.00405730();\n    return;\n}\n",
        "token_count": 302
    },
    "00414a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00414a3c(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x10ffff < in_EAX) {\n        return 2;\n    }\n    return *(*0x4be688 + *(*0x4be684 + (*(*0x4be680 + (in_EAX >> 8)) * 0x10 + (in_EAX >> 4 & 0xf)) * 2) + (in_EAX & 0xf)\n            );\n}\n",
        "token_count": 109
    },
    "0041a2dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0041a2dc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        iVar2 = in_EDX + 1;\n        do {\n            iVar1 = fcn.004198b0();\n            if (iVar1 == 0) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0041a4f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a4f4(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceW(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.004095a8(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.004095a8(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 250
    },
    "0041a584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a584(void)\n\n{\n    fcn.004055b4();\n    return;\n}\n",
        "token_count": 25
    },
    "0041a594": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041a594(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00407f04();\n    if (param_1 < uVar1) {\n        uVar1 = param_1;\n    }\n    fcn.004055b4();\n    *(in_EAX + uVar1 * 2) = 0;\n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 111
    },
    "0041a5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041a5d0(uint32_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        do {\n            uVar1 = *in_EAX;\n            if ((*param_2 != uVar1) || (uVar1 == 0)) {\n                iVar2 = uVar1 - *param_2;\n                goto code_r0x0041a605;\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < param_1);\n    }\n    iVar2 = 0;\ncode_r0x0041a605:\n    return CONCAT44(param_1, iVar2);\n}\n",
        "token_count": 219
    },
    "0041a60c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041a60c(uint32_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    \n    uVar3 = 0;\n    if (param_1 != 0) {\n        do {\n            if (*in_EAX - 0x61 < 0x1a) {\n                uVar1 = *in_EAX ^ 0x20;\n            }\n            else {\n                uVar1 = *in_EAX;\n            }\n            if (*param_2 - 0x61 < 0x1a) {\n                uVar4 = *param_2 ^ 0x20;\n            }\n            else {\n                uVar4 = *param_2;\n            }\n            if ((uVar4 != uVar1) || (uVar1 == 0)) {\n                iVar2 = uVar1 - uVar4;\n                goto code_r0x0041a670;\n            }\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < param_1);\n    }\n    iVar2 = 0;\ncode_r0x0041a670:\n    return CONCAT44(param_1, iVar2);\n}\n",
        "token_count": 317
    },
    "0041a678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a678(uint param_1, int16_t param_2)\n\n{\n    int16_t *in_EAX;\n    \n    for (; (*in_EAX != 0 && (param_2 != *in_EAX)); in_EAX = in_EAX + 1) {\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0041a694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __fastcall fcn.0041a694(uint param_1, int16_t param_2)\n\n{\n    int16_t *in_EAX;\n    int16_t *piVar1;\n    int16_t *piVar2;\n    \n    if (param_2 == 0) {\n        piVar1 = fcn.0041a568();\n    }\n    else {\n        piVar1 = NULL;\n        while( true ) {\n            while (piVar2 = in_EAX,  param_2 == *piVar2) {\n                piVar1 = piVar2;\n                in_EAX = piVar2 + 1;\n            }\n            if (*piVar2 == 0) break;\n            in_EAX = piVar2 + 1;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 177
    },
    "0041bcf3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bcf3(void)\n\n{\n    int32_t unaff_EBP;\n    int16_t *unaff_ESI;\n    uint var_10h;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xfff6) break;\n        *(unaff_EBP + -0x10) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041bd16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bd16(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int16_t *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == 0x2b) || (*unaff_ESI == 0x2d)) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        iVar1 = *unaff_ESI;\n        if (iVar1 - 0x3aU < 0xfff6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (iVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 177
    },
    "0041bda4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bda4(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint var_84h;\n    uint var_4h;\n    \n    fcn.0041b6c4(in_EAX, 0, 0xf, 0);\n    fcn.00407ba8();\n    return;\n}\n",
        "token_count": 77
    },
    "0041bde4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bde4(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint var_84h;\n    uint var_4h;\n    \n    fcn.0041b6c4(in_EAX, 0, 0, 0);\n    fcn.00407ba8();\n    return;\n}\n",
        "token_count": 76
    },
    "0041be40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041be40(uint param_1, double *param_2)\n\n{\n    uint uVar1;\n    float10 fStack20;\n    \n    uVar1 = fcn.0041bd5c();\n    if ((uVar1 != '\\0') && ((fStack20 < *0x4b7e48 || (*0x4b7e40 < fStack20)))) {\n        uVar1 = 0;\n    }\n    if (uVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "0041be94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041be94(uint param_1, float *param_2)\n\n{\n    uint uVar1;\n    float10 fStack20;\n    \n    uVar1 = fcn.0041bd5c();\n    if ((uVar1 != '\\0') && ((fStack20 < *0x4b7e3c || (*0x4b7e38 < fStack20)))) {\n        uVar1 = 0;\n    }\n    if (uVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0041bef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bef8(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x4b91a4);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x4b91a8;\n        iVar2 = -(uVar1 / *0x4b91a8);\n    }\n    else {\n        iVar2 = uVar1 / *0x4b91a8;\n        uVar3 = uVar1 % *0x4b91a8;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 247
    },
    "0041bf84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041bf84(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t *in_EAX;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    fcn.0041bf3c();\n    uVar1 = *in_EAX;\n    iVar3 = (in_EAX[1] - 0xa955a) * *0x4b91a8;\n    uVar4 = iVar3;\n    if (iVar3 < 0) {\n        bVar5 = uVar4 < uVar1;\n        uVar1 = -uVar1;\n        uVar2 = -bVar5;\n    }\n    else {\n        uVar2 = CARRY4(uVar4, uVar1);\n    }\n    return CONCAT44((iVar3 >> 0x20) + uVar2, uVar4 + uVar1) / *0x4b91a4;\n}\n",
        "token_count": 219
    },
    "0041bfc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0041bfc0(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    float10 fVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        fVar1 = fcn.0041bf84();\n        *arg_8h = fVar1;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 205
    },
    "0041c038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0041c038(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_8h;\n    \n    cVar1 = fcn.0041bfc0(&var_8h, arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.004195d0();\n    }\n    return _var_8h;\n}\n",
        "token_count": 94
    },
    "0041c078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c078(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0041bef8(arg_ch, arg_10h, &var_4h);\n    fcn.004195b4(arg_ch);\n    fcn.004195b4(in_EDX);\n    fcn.004195b4(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "0041c1dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041c1dc(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0041c110(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.004195d0();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 100
    },
    "0041c20c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041c20c(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0041bef8(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.004195b4(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.004195b4(&var_eh);\n        fcn.004195b4(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0041c0d4();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4b7dda + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 609
    },
    "0041c378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c378(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041bef8(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 71
    },
    "0041c3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0041c3a0(void)\n\n{\n    float10 fVar1;\n    ushort uStack16;\n    uint16_t uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0041c1dc();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.0041c038(uStack14);\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 119
    },
    "0041c3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041c3f0(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 45
    },
    "0041c534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c534(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    var_2ch._0_1_ = 0;\n    var_24h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.0041a7ec(1, &var_30h, 4);\n    fcn.0041c434(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0041c580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c580(int32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t **ppiVar2;\n    int32_t iVar3;\n    \n    ppiVar2 = arg_8h + -0x14;\n    piVar1 = *ppiVar2;\n    while (**ppiVar2 == *(arg_8h + -0x16)) {\n        *ppiVar2 = *ppiVar2 + 1;\n    }\n    iVar3 = *ppiVar2 - piVar1 >> 1;\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + ((*ppiVar2 - piVar1 & 1U) != 0);\n    }\n    *(arg_8h + -0x1c) = iVar3 + 1;\n    return;\n}\n",
        "token_count": 183
    },
    "0041e04c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e04c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = func_0x0040e198();\n    if (iVar1 < 1) {\n        fcn.00407e00();\n    }\n    else {\n        fcn.00407ba8();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0041e4b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e4b8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = 1;\n    var_8h = param_2;\n    do {\n        fcn.0041eab0(&var_ch, 6, 0x4b9214);\n        fcn.00407e00();\n        arg_8h = &var_10h;\n        fcn.0041eab0(arg_8h, 6, 0x4b9230);\n        fcn.00407e00();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = arg_8h;\n    fcn.00407a80(0x41e56a);\n    return;\n}\n",
        "token_count": 254
    },
    "0041e574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e574(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = 1;\n    var_4h = param_2;\n    do {\n        fcn.0041eab0(&var_8h, 0xb, 0x4b91b4);\n        fcn.00407e00();\n        arg_8h = &var_ch;\n        fcn.0041eab0(arg_8h, 0xb, 0x4b91e4);\n        fcn.00407e00();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    *in_FS_OFFSET = arg_8h;\n    fcn.00407a80(0x41e610);\n    return;\n}\n",
        "token_count": 249
    },
    "0041eaec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eaec(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int16_t *piVar2;\n    \n    bVar1 = false;\n    piVar2 = fcn.004084ec();\n    if (piVar2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 1) {\n            if (*piVar2 == 0x27) {\n                bVar1 = bVar1 ^ 1;\n            }\n            if ((*piVar2 == *(arg_8h + 0xc)) && (!bVar1)) {\n                *piVar2 = 0x2f;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0041ef14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ef14(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack1664;\n    uint uStack1660;\n    uchar *puStack1656;\n    uint var_664h;\n    uint var_660h;\n    uint var_65ch;\n    uint *var_658h;\n    uint var_654h;\n    int32_t var_650h;\n    uint var_64ch;\n    int32_t var_648h;\n    uint var_644h;\n    uint var_640h;\n    uint var_63ch;\n    uint lpBuffer;\n    int32_t hModule;\n    int32_t var_628h;\n    uint var_61ch;\n    uint lpFilename;\n    uint var_212h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack1656 = &stack0xfffffffc;\n    uStack1660 = 0x41f0c0;\n    uStack1664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1664;\n    func_0x0040e3b8();\n    if (var_628h == 0x1000) {\n        iVar2 = func_0x0040e1a0(hModule, &lpFilename, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - hModule;\n            goto code_r0x0041efa0;\n        }\n    }\n    func_0x0040e1a0(*0x4be634, &lpFilename, 0x105);\n    var_8h = fcn.0041ef08();\ncode_r0x0041efa0:\n    fcn.00420620();\n    fcn.0041a594();\n    var_648h = 0x41f0d4;\n    var_640h = 0x41f0d4;\n    cVar1 = fcn.00405f30();\n    if (cVar1 != '\\0') {\n        var_648h = fcn.004084ec();\n        iVar2 = fcn.00407f04();\n        if ((iVar2 != 0) && (*(var_648h + -2 + iVar2 * 2) != 0x2e)) {\n            var_640h = 0x41f0d8;\n        }\n    }\n    uVar3 = fcn.00409ff0(*(*0x4ba774 + 4), &var_61ch, 0x100);\n    func_0x0040e438(uVar3);\n    fcn.00405be8();\n    var_660h = 0;\n    var_65ch._0_1_ = 0x11;\n    var_658h = &var_212h;\n    var_654h._0_1_ = 10;\n    var_650h = var_8h;\n    var_64ch._0_1_ = 5;\n    var_644h._0_1_ = 10;\n    var_63ch._0_1_ = 10;\n    uVar3 = 4;\n    fcn.0041a82c(4, &var_660h);\n    fcn.00407f04();\n    *in_FS_OFFSET = uVar3;\n    fcn.00407a20(0x41f0c7);\n    return;\n}\n",
        "token_count": 788
    },
    "0041f27c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f27c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00407e00();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0041f2b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f2b8(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x41f2cc;\n        fcn.004062b0();\n    }\n    uStack44 = 0x41f312;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0041f2b8::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041a894(arg_8h_00);\n    fcn.00407e00();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x41f319;\n    iStack48 = 0x41f311;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 263
    },
    "0041f338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f338(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0040c9f0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0041f374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f374(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x41f38a;\n        fcn.004062b0();\n    }\n    uStack48 = 0x41f3e0;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0041f374::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.0040c9f0();\n    fcn.0041a894(arg_8h_00);\n    fcn.00407e00();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x41f3e7;\n    iStack52 = 0x41f3df;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 281
    },
    "0041f614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041f614(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uint uStack100;\n    int32_t iStack96;\n    uchar *puStack80;\n    uint *puVar8;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x41f6eb;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if (in_EAX == 0) {\n        fcn.0040c9f0();\n        var_18h = 0;\n        var_14h._0_1_ = 0x11;\n        var_ch._0_1_ = 0x11;\n        var_4h._0_1_ = 0;\n        puVar8 = &fcn.0041f614::var_18h;\n        uStack100 = 2;\n        puStack80 = 0x41f6bc;\n        fcn.0040c9f0();\n        puStack80 = 0x41f6cb;\n        iStack96 = fcn.0041f2b8(uStack100, puVar8);\n    }\n    else {\n        var_14h._0_1_ = 0x11;\n        var_ch._0_1_ = 0x11;\n        var_4h._0_1_ = 0;\n        puVar8 = &fcn.0041f614::var_18h;\n        uStack100 = 2;\n        puStack80 = 0x41f66b;\n        puStack56 = &stack0xfffffffc;\n        var_18h = in_EAX;\n        fcn.0040c9f0();\n        puStack80 = 0x41f67a;\n        iStack96 = fcn.0041f2b8(uStack100, puVar8);\n    }\n    if (iStack96 == 0) {\n        puStack80 = 0x40712a;\n        iStack96 = fcn.0040788c();\n    }\n    puVar6 = &stack0xffffff9c;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        puStack80 = &stack0xfffffffc;\n        iVar1 = fcn.004054e8(*0x4bb024, &stack0xffffff9c, uStack100, 7, uStack100, iStack96);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 853
    },
    "0041f714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041f714(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0041f778:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0041f781;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0041f778;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0041f781:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 550
    },
    "0041f7b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041f7b8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint uStack652;\n    uint uStack648;\n    uchar *puStack644;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack644 = &stack0xfffffffc;\n    var_250h = 0;\n    var_258h = 0;\n    var_254h = 0;\n    var_4h = 0;\n    uStack648 = 0x41f9be;\n    uStack652 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack652;\n    iVar2 = *(*(arg_8h + -4) + 0x14);\n    if (iVar2 == 0) {\n        fcn.0040c9f0();\n    }\n    else if (iVar2 == 1) {\n        puStack644 = &stack0xfffffffc;\n        fcn.0040c9f0();\n    }\n    else if (iVar2 == 8) {\n        puStack644 = &stack0xfffffffc;\n        fcn.0040c9f0();\n    }\n    else {\n        puStack644 = &stack0xfffffffc;\n        fcn.0040c9f0();\n    }\n    uVar1 = *(*(arg_8h + -4) + 0x18);\n    func_0x0040e3b8(*(*(arg_8h + -4) + 0xc), &lpBuffer, 0x1c);\n    if ((var_10h == 0x1000) || (var_10h == 0x10000)) {\n        iVar2 = func_0x0040e1a0(hModule, &lpFilename, 0x105);\n        if (iVar2 != 0) {\n            var_24ch = *(*(arg_8h + -4) + 0xc);\n            var_248h._0_1_ = 5;\n            fcn.0040858c();\n            fcn.0041a430();\n            var_244h = var_250h;\n            var_240h._0_1_ = 0x11;\n            var_23ch = var_4h;\n            var_238h._0_1_ = 0x11;\n            var_230h._0_1_ = 5;\n            puVar3 = &var_24ch;\n            arg_8h_00 = 3;\n            var_234h = uVar1;\n            fcn.0040c9f0();\n            fcn.0041f2b8(arg_8h_00, puVar3);\n            goto code_r0x0041f98d;\n        }\n    }\n    var_270h = *(*(arg_8h + -4) + 0xc);\n    var_26ch._0_1_ = 5;\n    var_268h = var_4h;\n    var_264h._0_1_ = 0x11;\n    var_25ch._0_1_ = 5;\n    puVar3 = &var_270h;\n    arg_8h_00 = 2;\n    var_260h = uVar1;\n    fcn.0040c9f0();\n    fcn.0041f2b8(arg_8h_00, puVar3);\ncode_r0x0041f98d:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00407a20(0x41f9c5);\n    fcn.00407a80();\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 990
    },
    "0041f9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f9d0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41faa5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0041f714();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x41fa3a;\n            puVar3 = fcn.0041f7b8(&stack0xfffffffc);\n            goto code_r0x0041fa6f;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            puVar3 = &fcn.0041f9d0::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.0040c9f0();\n            puVar3 = fcn.0041f2b8(in_stack_ffffffd4, puVar3);\n            goto code_r0x0041fa6f;\n        }\n    }\n    puVar3 = fcn.0041f27c();\ncode_r0x0041fa6f:\n    cVar1 = fcn.00405f30();\n    if (cVar1 != '\\0') {\n        puVar3[6] = var_4h;\n    }\n    (***puVar3)();\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x41faac;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 499
    },
    "0041fda4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fda4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    float10 fVar2;\n    float10 fVar3;\n    \n    if (-1 < param_2) {\n        param_2 = param_2 + 1;\n        do {\n            fVar2 = fcn.0041c3a0();\n            do {\n                fVar3 = fcn.0041c3a0();\n                if (*0x41fdfc < fVar3 - fVar2) break;\n                iVar1 = 0;\n                LOCK();\n                if (*in_EAX == 0) {\n                    *in_EAX = 1;\n                }\n                else {\n                    iVar1 = *in_EAX;\n                }\n            } while (iVar1 != 0);\n            if (in_EAX[1] != 0) {\n                func_0x0040e0a0(in_EAX[1]);\n            }\n            in_EAX = in_EAX + 2;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "0041fe94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version"
        ],
        "decompiled_code": "\nvoid fcn.0041fe94(void)\n\n{\n    int32_t iVar1;\n    uint auStack276 [3];\n    uint uStack264;\n    \n    *0x4be900 = *0x4be7b8;\n    *0x4be904 = *0x4be7bc;\n    *0x4be908 = *0x4be7b4;\n    auStack276[0] = 0x114;\n    iVar1 = sub.kernel32.dll_GetVersionExW(auStack276);\n    if (iVar1 != 0) {\n        *0x4be8fc = uStack264;\n        fcn.0040858c();\n    }\n    *0x4b9298 = 1;\n    return;\n}\n",
        "token_count": 164
    },
    "00420338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.00420338(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if ((((0xd7ff < uVar1) && (uVar1 < 0xdc00)) && (0xdbff < in_EAX[1])) && (in_EAX[1] < 0xe000)) {\n        return in_EAX + 2;\n    }\n    if (uVar1 != 0) {\n        in_EAX = in_EAX + 1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 135
    },
    "00420368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420368(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    uVar2 = 2;\n    uVar1 = *(in_EAX + -2 + param_2 * 2);\n    if ((0xd7ff < uVar1) && (uVar1 < 0xe000)) {\n        fcn.004084ec();\n        uVar2 = fcn.00420308();\n    }\n    return uVar2;\n}\n",
        "token_count": 127
    },
    "004203a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004203a0(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2 + 1;\n    uVar1 = *(in_EAX + -2 + param_2 * 2);\n    if ((0xd7ff < uVar1) && (uVar1 < 0xe000)) {\n        fcn.004084ec();\n        uVar2 = fcn.00420308();\n        iVar3 = uVar2 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar2 & 1) != 0);\n        }\n        iVar3 = iVar3 + param_2;\n    }\n    return iVar3;\n}\n",
        "token_count": 194
    },
    "00420628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00420628(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x4b7e0c;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00420b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00420b20(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar auStack92 [4];\n    int32_t iStack88;\n    uint uStack80;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x420bc0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    if (in_EAX == 0) {\n        var_4h = fcn.0041f338();\n    }\n    else {\n        var_18h._0_1_ = 0;\n        puStack48 = &stack0xfffffffc;\n        fcn.0041dfc8();\n        var_14h = 0;\n        var_10h._0_1_ = 0x11;\n        var_8h._0_1_ = 0x11;\n        var_ch = param_2;\n        var_4h = fcn.0041f374(2, &var_1ch);\n    }\n    *(var_4h + 0x18) = in_EAX;\n    iStack88 = var_4h;\n    if (var_4h == 0) {\n        iStack88 = fcn.0040788c();\n    }\n    puVar6 = auStack92;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = auStack92;\n    uStack80 = param_2;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, auStack92, unaff_retaddr, 7, unaff_retaddr, iStack88);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 665
    },
    "00420e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420e18(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventW(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventW(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00405cb8();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 290
    },
    "0042114c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042114c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4211cb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != 0) {\n        fcn.0040b47c();\n        cVar1 = fcn.00405dbc();\n        if ((cVar1 == '\\0') || (cVar1 = fcn.00421124(),  cVar1 == '\\0')) {\n            fcn.00405dbc();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4211d2;\n    uStack28 = 0x4211ca;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 239
    },
    "004211ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004211ec(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x421237;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040b47c();\n    fcn.00421124();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42123e;\n    uStack24 = 0x421236;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 162
    },
    "00421248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421248(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x421257;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x4212ba;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x42129c;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004084ec();\n    sub.kernel32.dll_LoadLibraryW();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 246
    },
    "00421488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421488(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.00408664();\n    fcn.004084ec();\n    fcn.004055b4();\n    return;\n}\n",
        "token_count": 58
    },
    "004214c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004214c4(void)\n\n{\n    fcn.00408664();\n    fcn.004084ec();\n    fcn.004055b4();\n    return;\n}\n",
        "token_count": 41
    },
    "00421ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421ca0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    int32_t lpCPInfo;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    if (in_ECX == 0) {\n        uVar1 = func_0x0040e110();\n        *(in_EAX + 0xc) = uVar1;\n    }\n    else {\n        *(in_EAX + 0xc) = in_ECX;\n    }\n    *(in_EAX + 0x10) = arg_ch;\n    *(in_EAX + 0x14) = arg_8h;\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = sub.kernel32.dll_GetCPInfo(uVar1, &lpCPInfo);\n    if (iVar2 == 0) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    *(in_EAX + 8) = lpCPInfo;\n    *(in_EAX + 4) = lpCPInfo == 1;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 358
    },
    "00421e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421e10(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x421f50;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = (**(*in_EAX + 0x10))();\n    if (iVar1 == 0x4b0) {\n        fcn.00409d24();\n        fcn.00409c00(2);\n        pe_dos_header = 0xff;\n        *0x1 = 0xfe;\n        fcn.00409d68();\n    }\n    else if (iVar1 == 0x4b1) {\n        fcn.00409d24();\n        fcn.00409c00(2);\n        pe_dos_header = 0xfe;\n        *0x1 = 0xff;\n        fcn.00409d68();\n    }\n    else if (iVar1 == 0xfde9) {\n        fcn.00409d24();\n        fcn.00409c00(3);\n        pe_dos_header = 0xef;\n        *0x1 = 0xbb;\n        *0x2 = 0xbf;\n        fcn.00409d68();\n    }\n    else {\n        fcn.00409d24();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x421f57;\n    uStack28 = 0x421f4f;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 404
    },
    "00421fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421fb8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.00421ca0(0, 8);\n    *(in_EAX + 4) = 0;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 160
    },
    "00422018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422018(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x422094;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.00409d24();\n    fcn.00409c00(3);\n    pe_dos_header = 0xef;\n    *0x1 = 0xbb;\n    *0x2 = 0xbf;\n    fcn.00409d68();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x42209b;\n    uStack20 = 0x422093;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 195
    },
    "004220a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004220a0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 8) = 4;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 160
    },
    "004220f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004220f8(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.004055b4();\n    return in_ECX * 2;\n}\n",
        "token_count": 52
    },
    "00422120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422120(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004055b4();\n    return arg_8h;\n}\n",
        "token_count": 38
    },
    "004221a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004221a0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x422215;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.00409d24();\n    fcn.00409c00(2);\n    pe_dos_header = 0xff;\n    *0x1 = 0xfe;\n    fcn.00409d68();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x42221c;\n    uStack20 = 0x422214;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 186
    },
    "0042266c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042266c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    *in_EAX = *in_EAX + param_2;\n    uVar2 = in_EAX[1];\n    in_EAX[1] = uVar2 + CARRY4(uVar1, param_2);\n    return in_EAX & 0xffffff00 | !CARRY4(uVar2, CARRY4(uVar1, param_2));\n}\n",
        "token_count": 142
    },
    "004226e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004226e0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack32 = 0x422754;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00422924();\n    if (iVar1 == 0) {\n        arg_8h = 0x42271c;\n        fcn.0040873c();\n    }\n    else {\n        arg_8h = &fcn.004226e0::var_8h;\n        fcn.004088ac(arg_8h);\n        fcn.0040873c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x42275b;\n    iStack36 = 0x422753;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 262
    },
    "004228bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004228bc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar auStack4108 [4092];\n    int32_t iStack16;\n    \n    iVar2 = 2;\n    do {\n        iStack16 = iVar2;\n        iVar2 = iStack16 + -1;\n    } while (iStack16 + -1 != 0);\n    uVar1 = fcn.004084ec(0x1000, auStack4108, &iStack16);\n    iVar2 = sub.kernel32.dll_GetFullPathNameW(uVar1);\n    if ((iVar2 < 1) || (0xfff < iVar2)) {\n        fcn.00407e00();\n    }\n    else {\n        fcn.00407ba8();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00422b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00422b60(void)\n\n{\n    uint16_t *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x422be1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00422b10();\n    fcn.00407ba8();\n    fcn.00407fa0();\n    puVar1 = fcn.00422b10();\n    fcn.00407e00();\n    for (; (*puVar1 != 0 && (*puVar1 < 0x21)); puVar1 = puVar1 + 1) {\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x422be8;\n    uStack28 = 0x422be0;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 239
    },
    "00422d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00422d44(void)\n\n{\n    uchar auStack524 [520];\n    \n    sub.kernel32.dll_GetWindowsDirectoryW(auStack524, 0x104);\n    fcn.0041a77c();\n    return;\n}\n",
        "token_count": 54
    },
    "00422d78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422d78(void)\n\n{\n    uchar auStack524 [520];\n    \n    sub.kernel32.dll_GetSystemWindowsDirectoryW(auStack524, 0x104);\n    fcn.0041a77c();\n    return;\n}\n",
        "token_count": 55
    },
    "00422da4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00422da4(void)\n\n{\n    uchar auStack524 [520];\n    \n    sub.kernel32.dll_GetSystemDirectoryW(auStack524, 0x104);\n    fcn.0041a77c();\n    return;\n}\n",
        "token_count": 54
    },
    "0042307c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042307c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint StringSid;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uint TokenHandle;\n    \n    puStack28 = 0x42308c;\n    fcn.00407a20();\n    puStack28 = &fcn.0042307c::TokenHandle;\n    uStack32 = 8;\n    uStack36 = 0x423097;\n    uStack36 = sub.kernel32.dll_GetCurrentProcess();\n    puStack40 = 0x42309d;\n    iVar1 = sub.advapi32.dll_OpenProcessToken();\n    if (iVar1 != 0) {\n        TokenInformation = NULL;\n        uStack44 = 0x423157;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        TokenInformationLength = 0;\n        puStack40 = &stack0xfffffffc;\n        iVar1 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 1, 0, 0, &fcn.0042307c::TokenInformationLength);\n        if ((iVar1 == 0) && (iVar1 = sub.kernel32.dll_GetLastError(),  iVar1 != 0x7a)) {\n            fcn.00407210();\n            return;\n        }\n        TokenInformation = fcn.004053f0();\n        iVar1 = sub.advapi32.dll_GetTokenInformation\n                          (TokenHandle, 1, TokenInformation, TokenInformationLength, \n                           &fcn.0042307c::TokenInformationLength);\n        if (iVar1 != 0) {\n            uVar2 = *TokenInformation;\n            iVar1 = sub.advapi32.dll_ConvertSidToStringSidW(uVar2, &fcn.0042307c::StringSid);\n            if (iVar1 != 0) {\n                fcn.00408550();\n                func_0x0040e318(StringSid);\n            }\n            *in_FS_OFFSET = uVar2;\n            fcn.0040540c(0x42315e);\n            func_0x0040e0a0(TokenHandle);\n            return;\n        }\n        fcn.00407210();\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "00423434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423434(void)\n\n{\n    int32_t iVar1;\n    uint uStack2084;\n    uint uStack2080;\n    uint uStack2076;\n    uint uStack2068;\n    uchar *puStack2064;\n    uint uStack2060;\n    uint uStack2056;\n    uchar auStack2052 [2048];\n    \n    uStack2056 = 0;\n    uStack2060 = 0x400;\n    puStack2064 = &stack0xfffff7fc;\n    uStack2068 = 0;\n    uStack2076 = 0;\n    uStack2080 = 0x3200;\n    uStack2084 = 0x423458;\n    for (iVar1 = sub.kernel32.dll_FormatMessageW();\n        (0 < iVar1 && ((*(&stack0xfffff7de + iVar1 * 2) < 0x21 || (*(&stack0xfffff7de + iVar1 * 2) == 0x2e))));\n        iVar1 = iVar1 + -1) {\n    }\n    uStack2084 = 0x42347a;\n    fcn.00407ba8();\n    return;\n}\n",
        "token_count": 258
    },
    "00423e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423e30(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0xc))(param_2, 0);\n    return;\n}\n",
        "token_count": 54
    },
    "00424848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424848(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 8) = arg_8h;\n    *(in_EAX + 0xc) = arg_ch;\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "004250c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004250c4(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0x11;\n    fcn.0041f2b8(0, auStack12);\n    fcn.0040711c();\n    return;\n}\n",
        "token_count": 67
    },
    "00425504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00425504(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 1;\n    iVar3 = param_2;\n    if (param_2 != 0) {\n        do {\n            iVar1 = fcn.0042547c();\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar1 + iVar2 * 2;\n        } while (iVar3 != 0);\n    }\n    return CONCAT44(param_2, iVar2 - (1 << (param_2 & 0x1f)));\n}\n",
        "token_count": 147
    },
    "00425548": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00425548(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    iVar2 = 0;\n    if (0 < param_2) {\n        do {\n            iVar1 = fcn.0042547c();\n            uVar3 = uVar3 | iVar1 << (iVar2 & 0x1f);\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < param_2);\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 144
    },
    "0042558c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nuint32_t fcn.0042558c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 1;\n    do {\n        uVar1 = fcn.0042547c();\n        uVar2 = uVar1 | uVar2 * 2;\n    } while (uVar2 < 0x100);\n    return uVar2;\n}\n",
        "token_count": 91
    },
    "0042562c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0042562c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042547c();\n    if (iVar1 == 0) {\n        iVar1 = fcn.00425504();\n    }\n    else {\n        iVar1 = fcn.0042547c();\n        if (iVar1 == 0) {\n            iVar1 = fcn.00425504();\n            iVar1 = iVar1 + 8;\n        }\n        else {\n            iVar1 = fcn.00425504();\n            iVar1 = iVar1 + 0x10;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 141
    },
    "00425dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425dc0(uint *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0x50) {\n        iVar1 = fcn.004256a4();\n        if (iVar1 == 0) {\n            *arg_ch = ((0x300 << (*in_EAX + in_EAX[1] & 0x1fU)) + 0x736) * 2;\n            *arg_8h = in_EAX[3];\n        }\n    }\n    else {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "00427074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427074(void)\n\n{\n    int16_t iVar1;\n    \n    iVar1 = 0x105;\n    do {\n        fcn.00407a20();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0042729c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.0042729c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = 0x4272b2;\n    cVar1 = fcn.00427250();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    uStack36 = 0x4272f9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = fcn.004084ec();\n    sub.kernel32.dll_DeleteFileW();\n    sub.kernel32.dll_GetLastError();\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x427300;\n    uStack40 = 0x4272f8;\n    uVar2 = fcn.0042728c();\n    return uVar2;\n}\n",
        "token_count": 243
    },
    "00427314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00427314(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_1h;\n    \n    puStack32 = 0x42732a;\n    cVar1 = fcn.00427250();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    uStack36 = 0x42736a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &fcn.00427314::var_1h + 1;\n    var_1h._0_1_ = fcn.00422aac();\n    sub.kernel32.dll_GetLastError();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x427371;\n    uStack36 = 0x427369;\n    uVar2 = fcn.0042728c();\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "00428c94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00428c94(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x428d23;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00430258();\n    var_10h = 0;\n    var_ch._0_1_ = 0x11;\n    fcn.00430258();\n    var_8h = 0;\n    var_4h._0_1_ = 0x11;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.0040c9f0();\n    fcn.0041f2b8(arg_8h, arg_ch);\n    fcn.0040711c();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x428d2a;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 311
    },
    "00428de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00428de0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x428e6f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00430258();\n    var_10h = 0;\n    var_ch._0_1_ = 0x11;\n    fcn.00430258();\n    var_8h = 0;\n    var_4h._0_1_ = 0x11;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.0040c9f0();\n    fcn.0041f2b8(arg_8h, arg_ch);\n    fcn.0040711c();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x428e76;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 311
    },
    "00429250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00429250(void)\n\n{\n    int32_t plUbound;\n    int32_t plLbound;\n    \n    sub.oleaut32.dll_SafeArrayGetLBound();\n    fcn.00429124();\n    sub.oleaut32.dll_SafeArrayGetUBound();\n    fcn.00429124();\n    return (plUbound - plLbound) + 1;\n}\n",
        "token_count": 90
    },
    "004293dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004293dc(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "0042940c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042940c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0042940c(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00429464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429464(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint pvargSrc;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.00429124();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.00429124();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.00429124();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.00428e7c();\n        }\n        fcn.004293c0();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.004293dc(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.00429124();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.00429124();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0042940c(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.00429124();\n    }\n    return;\n}\n",
        "token_count": 817
    },
    "00429660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429660(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    int32_t *piStack16;\n    \n    if ((*in_EAX & 0xbfe8) == 0) {\n        *(in_EAX + 4) = 0;\n    }\n    else {\n        fcn.00429328();\n    }\n    uVar1 = *param_2;\n    if (uVar1 < 0x14) {\n        sub.oleaut32.dll_VariantCopy();\n        fcn.00429124();\n    }\n    else if (uVar1 == 0x100) {\n        *in_EAX = 0x100;\n        *(in_EAX + 4) = 0;\n        fcn.00407e9c();\n    }\n    else if (uVar1 == 0x102) {\n        *in_EAX = 0x102;\n        *(in_EAX + 4) = 0;\n        fcn.00407e00();\n    }\n    else {\n        uVar1 = *param_2;\n        if ((uVar1 == 0x4102) || (uVar1 == 0x4100)) {\n            *in_EAX = uVar1;\n            *(in_EAX + 4) = *(param_2 + 4);\n        }\n        else if (uVar1 == 0x101) {\n            *in_EAX = 0x101;\n            *(in_EAX + 4) = *(param_2 + 4);\n            (**0x4c119c)();\n        }\n        else if ((uVar1 & 0x2000) == 0) {\n            cVar2 = fcn.004309a8();\n            if (cVar2 == '\\0') {\n                sub.oleaut32.dll_VariantCopy();\n                fcn.00429124();\n            }\n            else {\n                (**(*piStack16 + 0x28))(0);\n            }\n        }\n        else {\n            fcn.00429464();\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "004297c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004297c0(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack36 = &fcn.004297c0::pvarg;\n    puStack40 = 0x4297d8;\n    var_4h = param_2;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x42981d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fcn.00429aec();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x429824;\n    uStack44 = 0x42981c;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 236
    },
    "0042982c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042982c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x429876;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042e08c();\n    fcn.0042f21c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42987d;\n    uStack24 = 0x429875;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 164
    },
    "00429884": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429884(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4298d0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042d6fc();\n    fcn.0042f174();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4298d7;\n    uStack24 = 0x4298cf;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 166
    },
    "004298dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004298dc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x429926;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042e9b0();\n    fcn.0042f248();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42992d;\n    uStack24 = 0x429925;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 163
    },
    "00429934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429934(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42997e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042ee40();\n    fcn.0042f2a0();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x429985;\n    uStack24 = 0x42997d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 165
    },
    "0042998c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042998c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4299d6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042ed58();\n    fcn.0042f274();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4299dd;\n    uStack24 = 0x4299d5;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 167
    },
    "00429a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429a70(uint param_1, int16_t *param_2)\n\n{\n    char cVar1;\n    int32_t *piStack20;\n    \n    if (*param_2 == 0x101) {\n        fcn.004297c0();\n    }\n    else {\n        cVar1 = fcn.004309a8();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004309a8();\n            if (cVar1 == '\\0') {\n                fcn.004299e4();\n            }\n            else {\n                (**(*piStack20 + 0x18))();\n            }\n        }\n        else {\n            (**(*piStack20 + 0x1c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00429d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429d88(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x429e6b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.0042e08c();\n    uVar2 = fcn.004083a8(0x400, 0, &var_8h);\n    iVar3 = (***0x4ba76c)();\n    if (iVar3 == -0x7ffdfffb) {\n        fcn.004085c8();\n        cVar1 = fcn.0041a1f4();\n        if (cVar1 == '\\0') {\n            fcn.004085c8();\n            cVar1 = fcn.0041a32c();\n            if (cVar1 == '\\0') {\n                fcn.00429130();\n            }\n            else {\n                var_8h = var_9h;\n            }\n        }\n    }\n    else if (iVar3 != 0) {\n        fcn.00429130();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00407a80(0x429e72);\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 380
    },
    "00429e7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00429e7c(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uchar auStack20 [4];\n    uchar auStack16 [16];\n    \n    puVar2 = auStack16;\n    sub.oleaut32.dll_VariantInit(puVar2);\n    uVar1 = 0;\n    (***0x4ba6ec)(auStack20, puVar2, 0x400, 0, 3);\n    fcn.00429130();\n    return uVar1;\n}\n",
        "token_count": 119
    },
    "00429ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429ec0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &fcn.00429ec0::pvarg;\n    puStack36 = 0x429ed2;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x429f15;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    var_4h = fcn.00429f70();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x429f1c;\n    uStack40 = 0x429f14;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 230
    },
    "00429f24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00429f24(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.004309a8();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "0042a91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042a91c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack60 = 0x42aa52;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    fcn.0042e08c();\n    fcn.004085c8();\n    cVar1 = fcn.0041a214();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.004083a8(0x400, 0, &fcn.0042a91c::var_18h);\n        iVar3 = (***0x4ba76c)(uVar2);\n        if (iVar3 == 0) {\n            _var_10h = var_18h;\n        }\n        else {\n            uVar2 = fcn.004083a8(0x400, 0, &fcn.0042a91c::var_20h);\n            iVar3 = (***0x4ba620)(uVar2);\n            if (iVar3 == 0) {\n                _var_10h = fcn.00405784();\n            }\n            else if (iVar3 == -0x7ffdfffb) {\n                fcn.004085c8();\n                cVar1 = fcn.0041a32c();\n                if (cVar1 == '\\0') {\n                    fcn.00429130();\n                }\n                else {\n                    _var_10h = var_11h;\n                }\n            }\n            else {\n                fcn.00429130();\n                _var_10h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x42aa59;\n    uStack60 = 0x42aa49;\n    fcn.00407a80();\n    uStack60 = 0x42aa51;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 560
    },
    "0042aa64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042aa64(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.0042aa64::pvarg;\n    puStack40 = 0x42aa76;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x42aabc;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    _var_8h = fcn.0042ab24();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42aac3;\n    uStack44 = 0x42aabb;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 245
    },
    "0042aad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0042aad0(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.004309a8();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "0042b3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042b3b0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0042b3b0::pvarg;\n    puStack36 = 0x42b3c2;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42b405;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.0042b3b0::var_1h + 1;\n    fcn.0042977c();\n    (**0x4c1198)();\n    var_1h._0_1_ = fcn.0042b468();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42b40c;\n    uStack40 = 0x42b404;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 279
    },
    "0042b8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042b8f0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_28h = 0;\n    var_4h = 0;\n    uStack52 = 0x42b9b7;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.0042e08c();\n    uVar2 = fcn.004083a8(0x400, 0, &var_10h);\n    iVar3 = (***0x4ba620)();\n    if (iVar3 == -0x7ffdfffb) {\n        fcn.004085c8();\n        cVar1 = fcn.0041be30();\n        if (cVar1 == '\\0') {\n            fcn.00429130();\n        }\n        else {\n            _var_10h = _var_20h;\n        }\n    }\n    else if (iVar3 != 0) {\n        fcn.00429130();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00407a20(0x42b9be);\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 355
    },
    "0042b9c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0042b9c8(void)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [4];\n    uchar auStack16 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4ba6ec)(auStack20, uStack24, 0x400, 0, 5);\n    fcn.00429130();\n    return CONCAT44(uStack28, auStack16);\n}\n",
        "token_count": 105
    },
    "0042ba1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ba1c(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_ch;\n    double dStack12;\n    \n    puStack36 = &fcn.0042ba1c::pvarg;\n    puStack40 = 0x42ba2e;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x42ba72;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fVar1 = fcn.0042bad4();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42ba79;\n    uStack44 = 0x42ba71;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 244
    },
    "0042ba80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0042ba80(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.004309a8();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "0042bf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0042bf80(void)\n\n{\n    unkbyte10 Var1;\n    \n    Var1 = fcn.0042bad4();\n    return Var1;\n}\n",
        "token_count": 40
    },
    "0042c160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c160(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_24h = 0;\n    var_20h = 0;\n    var_4h = 0;\n    uStack48 = 0x42c254;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0042e08c();\n    uVar2 = fcn.004083a8(0x400, 0, &var_10h);\n    iVar3 = (***0x4ba50c)();\n    if (iVar3 == -0x7ffdfffb) {\n        fcn.004085c8();\n        cVar1 = fcn.0041dce4();\n        if (cVar1 == '\\0') {\n            fcn.004085c8();\n            cVar1 = fcn.0041be40();\n            if (cVar1 == '\\0') {\n                fcn.00429130();\n            }\n            else {\n                var_10h = var_18h;\n                var_ch = var_14h;\n            }\n        }\n    }\n    else if (iVar3 != 0) {\n        fcn.00429130();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00407a80(0x42c25b);\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 413
    },
    "0042c264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0042c264(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x4ba6ec)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.00429130();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "0042c2c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0042c2c4(void)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [4];\n    uchar auStack16 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4ba6ec)(auStack20, uStack24, 0x400, 0, 7);\n    fcn.00429130();\n    return CONCAT44(uStack28, auStack16);\n}\n",
        "token_count": 105
    },
    "0042c318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c318(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_ch;\n    double dStack12;\n    \n    puStack36 = &fcn.0042c318::pvarg;\n    puStack40 = 0x42c32a;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x42c36e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fVar1 = fcn.0042c3d0();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42c375;\n    uStack44 = 0x42c36d;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 246
    },
    "0042c37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0042c37c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.004309a8();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "0042c870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c870(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_18h = 0;\n    var_4h = 0;\n    uStack36 = 0x42c92e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.0042e08c();\n    uVar2 = fcn.004083a8(0x400, 0, &var_10h);\n    iVar3 = (***0x4ba750)();\n    if (iVar3 == -0x7ffdfffb) {\n        fcn.004085c8();\n        cVar1 = fcn.0041bee8();\n        if (cVar1 == '\\0') {\n            fcn.00429130();\n        }\n    }\n    else if (iVar3 != 0) {\n        fcn.00429130();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00407a20(0x42c935);\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 316
    },
    "0042c93c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0042c93c(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x4ba6ec)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.00429130();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 160
    },
    "0042c99c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0042c99c(void)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [4];\n    uchar auStack16 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x4ba6ec)(auStack20, uStack24, 0x400, 0, 6);\n    fcn.00429130();\n    return CONCAT44(uStack28, auStack16);\n}\n",
        "token_count": 104
    },
    "0042c9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c9f0(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_ch;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.0042c9f0::pvarg;\n    puStack40 = 0x42ca02;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x42ca46;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fVar1 = fcn.0042caa8();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42ca4d;\n    uStack44 = 0x42ca45;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 249
    },
    "0042ca54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0042ca54(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.004309a8();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "0042d03c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d03c(void)\n\n{\n    uint in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puVar1;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &fcn.0042d03c::pvarg;\n    puStack36 = 0x42d051;\n    var_4h = in_EAX;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42d0a8;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &fcn.0042d03c::pvarg;\n    puStack36 = &stack0xfffffffc;\n    (***0x4ba6ec)(puVar1, var_4h, 0x400, 0, 8);\n    fcn.00429130();\n    fcn.00407e74();\n    *in_FS_OFFSET = puVar1;\n    fcn.004293c0(0x42d0af);\n    return;\n}\n",
        "token_count": 273
    },
    "0042d350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d350(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42d39f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042d03c();\n    fcn.00408184();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42d3a6;\n    uStack24 = 0x42d39e;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 168
    },
    "0042d42c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d42c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.0042d42c::pvarg;\n    puStack36 = 0x42d441;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42d48a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fcn.0042d6fc();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42d491;\n    uStack40 = 0x42d489;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 227
    },
    "0042dd1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dd1c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42dd66;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042d03c();\n    fcn.00407e74();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42dd6d;\n    uStack24 = 0x42dd65;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 167
    },
    "0042ddf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ddf0(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.0042ddf0::pvarg;\n    puStack36 = 0x42de05;\n    var_4h = param_2;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42de47;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fcn.0042e08c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42de4e;\n    uStack40 = 0x42de46;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 239
    },
    "0042e638": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e638(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42e682;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042d03c();\n    fcn.004085c8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42e689;\n    uStack24 = 0x42e681;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 165
    },
    "0042e710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e710(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.0042e710::pvarg;\n    puStack36 = 0x42e725;\n    var_4h = param_2;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42e767;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fcn.0042e9b0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42e76e;\n    uStack40 = 0x42e766;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 240
    },
    "0042ece0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042ece0(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &fcn.0042ece0::pvarg;\n    puStack36 = 0x42ecf5;\n    var_4h = param_2;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42ed4b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    if (pvarg != 0xd) {\n        fcn.00428c94();\n    }\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42ed52;\n    uStack40 = 0x42ed4a;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 277
    },
    "0042f114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f114(void)\n\n{\n    ushort *in_EAX;\n    float10 in_ST0;\n    \n    fcn.004293c0();\n    *in_EAX = 5;\n    *(in_EAX + 4) = in_ST0;\n    return;\n}\n",
        "token_count": 63
    },
    "0042f134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f134(void)\n\n{\n    ushort *in_EAX;\n    float10 in_ST0;\n    \n    fcn.004293c0();\n    *in_EAX = 7;\n    *(in_EAX + 4) = in_ST0;\n    return;\n}\n",
        "token_count": 63
    },
    "0042f154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f154(void)\n\n{\n    ushort *in_EAX;\n    float10 in_ST0;\n    \n    fcn.004293c0();\n    *in_EAX = 6;\n    *(in_EAX + 4) = ROUND(ROUND(in_ST0));\n    return;\n}\n",
        "token_count": 66
    },
    "0042f1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f1a0(uint param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack280 = &stack0xfffffffc;\n    iVar1 = *param_2 + 1;\n    puVar2 = &fcn.0042f1a0::var_100h;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *param_2;\n        param_2 = param_2 + 1;\n        puVar2 = puVar2 + 1;\n    }\n    uStack284 = 0x42f20e;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00408170();\n    fcn.0042f174();\n    *in_FS_OFFSET = uStack288;\n    puStack280 = 0x42f215;\n    uStack284 = 0x42f20d;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 282
    },
    "0042f31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f31c(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.0042f31c::pvarg;\n    puStack36 = 0x42f331;\n    var_4h = param_2;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x42f373;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0042977c();\n    (**0x4c1198)();\n    fcn.0042977c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42f37a;\n    uStack40 = 0x42f372;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 240
    },
    "0042f5a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042f5a8(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint var_2ch;\n    uint pvarg;\n    int16_t *var_ch;\n    int16_t *var_8h;\n    uint var_1h;\n    \n    puStack56 = &fcn.0042f5a8::pvarg;\n    puStack60 = 0x42f5c0;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    sub.oleaut32.dll_VariantInit();\n    uStack64 = 0x42f674;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x42f5d9;\n    puStack60 = &fcn.0042f5a8::var_1h + 1;\n    fcn.0042977c();\n    if (*var_8h == 0x101) {\n        puStack72 = 0x42f5ec;\n        (**0x4c1198)();\n    }\n    if (*var_ch == 0x101) {\n        puStack72 = &fcn.0042f5a8::var_2ch;\n        puStack76 = 0x42f5ff;\n        sub.oleaut32.dll_VariantInit();\n        uStack80 = 0x42f647;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &fcn.0042f5a8::var_1h + 1;\n        fcn.0042977c();\n        (**0x4c1198)();\n        var_1h._0_1_ = fcn.0042ff38();\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x42f65e;\n        uStack80 = 0x42f646;\n        fcn.004293c0();\n        return;\n    }\n    puStack72 = 0x42f65b;\n    var_1h._0_1_ = fcn.0042ff38();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x42f67b;\n    uStack64 = 0x42f673;\n    fcn.004293c0();\n    return;\n}\n",
        "token_count": 617
    },
    "0042f8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f8a0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42f908;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.0042e9b0();\n    fcn.0042e9b0();\n    fcn.00419680();\n    fcn.0042f78c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42f90f;\n    uStack32 = 0x42f907;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 200
    },
    "0042f918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.0042f918(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    float10 fVar4;\n    ulong uVar5;\n    ulong uVar6;\n    \n    uVar2 = fcn.0042f57c();\n    uVar1 = *((uVar2 & 0xffff) + 0x4b93a3);\n    uVar2 = fcn.0042f57c();\n    // switch table (12 cases) at 0x42f97b\n    switch(*(uVar1 * 0xc + 0x4b93de + *((uVar2 & 0xffff) + 0x4b93a3))) {\n    case 0:\n        fcn.00428d38();\n        uVar3 = 1;\n        break;\n    case 1:\n        uVar3 = fcn.0042f684();\n        break;\n    case 2:\n        uVar3 = fcn.0042f698();\n        break;\n    case 3:\n        fcn.00429f70();\n        fcn.00429f70();\n        uVar3 = fcn.0042f78c();\n        break;\n    case 4:\n        fVar4 = fcn.0042bad4();\n        fVar4 = fcn.0042bad4(fVar4);\n        uVar3 = fcn.0042f810(fVar4);\n        break;\n    case 5:\n        fVar4 = fcn.0042caa8();\n        fVar4 = fcn.0042caa8(ROUND(fVar4));\n        uVar3 = fcn.0042f870(ROUND(fVar4));\n        break;\n    case 6:\n        uVar3 = fcn.0042f8a0();\n        break;\n    case 7:\n        fcn.0042b468();\n        fcn.0042b468();\n        uVar3 = fcn.0042f78c();\n        break;\n    case 8:\n        fVar4 = fcn.0042c3d0();\n        fVar4 = fcn.0042c3d0(fVar4);\n        uVar3 = fcn.0042f840(fVar4);\n        break;\n    case 9:\n        uVar5 = fcn.0042ab24();\n        uVar6 = fcn.0042ab24();\n        uVar3 = fcn.0042f7a0(uVar6, uVar6 >> 0x20, uVar5, uVar5 >> 0x20);\n        break;\n    case 10:\n        uVar5 = fcn.0042afdc();\n        uVar6 = fcn.0042afdc();\n        uVar3 = fcn.0042f7dc(uVar6, uVar6 >> 0x20, uVar5, uVar5 >> 0x20);\n        break;\n    case 0xb:\n        uVar3 = fcn.0042f5a8();\n        break;\n    default:\n        fcn.00428d38();\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 699
    },
    "0042ff38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ff38(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    uVar2 = *param_2;\n    if ((uVar1 < 0x10f) && (uVar2 < 0x10f)) {\n        fcn.0042f918();\n    }\n    else if (uVar1 == 0x400c) {\n        fcn.0042ff38();\n    }\n    else if (uVar2 == 0x400c) {\n        fcn.0042ff38();\n    }\n    else if (((uVar1 & 0xfff) < 0x10f) && ((uVar2 & 0xfff) < 0x10f)) {\n        fcn.0042f918();\n    }\n    else {\n        fcn.0042fb00();\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "00430648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00430648(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    if (param_2 == '\\0') {\n        uVar1 = *in_EAX & 0x2000 | (*in_EAX & 0x2000) == 0x2000;\n    }\n    else {\n        uVar1 = fcn.004305f4();\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "00430744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00430744(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x43074f;\n    *NULL = fcn.00406358();\n    uStack16 = 0x430762;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004065e0();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x4c17bc + -0x400 + *(stack0xfffffff8 + 4) * 4) = 0;\n        *(*0x4c17bc + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x4b93bc;\n    }\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x4307c7;\n    uStack20 = 0x4307bf;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 278
    },
    "00430838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430838(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.004309a8(),  cVar1 != '\\0')) {\n        (**(*var_4h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.00430928();\n    return;\n}\n",
        "token_count": 124
    },
    "00430890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00430890(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x4b94a0 + var_1h);\n}\n",
        "token_count": 118
    },
    "004311bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004311bc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x43124d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x431238;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0040b494();\n    fcn.0040b494();\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x43123f;\n    uStack44 = 0x431237;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 235
    },
    "0043125c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043125c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = *(*(arg_8h + -4) + 4);\n    if (-1 < iVar2 + -1) {\n        var_8h = 0;\n        do {\n            iVar1 = (**(*(arg_8h + -4) + 0x14))();\n            if (iVar1 == 0) {\n                return var_8h;\n            }\n            var_8h = var_8h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return -1;\n}\n",
        "token_count": 177
    },
    "00431308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431308(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = *(*(arg_8h + -4) + 4);\n    if (-1 < iVar2 + -1) {\n        var_8h = 0;\n        do {\n            iVar1 = (**(*(arg_8h + -4) + 0x14))();\n            if (iVar1 == 0) {\n                return var_8h;\n            }\n            var_8h = var_8h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return -1;\n}\n",
        "token_count": 176
    },
    "0043c1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0043c1b4(void)\n\n{\n    uchar uVar1;\n    uchar *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    unkbyte3 Var6;\n    uint32_t uVar5;\n    \n    if (in_EAX != NULL) {\n    // switch table (18 cases) at 0x43c1ee\n        switch(*in_EAX) {\n        case 5:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xf:\n        case 0x11:\n        case 0x12:\n            return 1;\n        case 6:\n            uVar5 = fcn.00468330();\n            uVar5 = uVar5 & 0xffffff00 | 4 < uVar5;\n            break;\n        default:\n            uVar5 = 0;\n            break;\n        case 8:\n            return 1;\n        case 0xd:\n            piVar2 = fcn.00467260();\n            iVar3 = *piVar2;\n            iVar4 = iVar3 + -3;\n            if ((iVar3 - 1U < 2) || (iVar4 = iVar3 + -4,  iVar4 == 0)) {\n                Var6 = iVar4 >> 8;\n                uVar1 = 1;\n            }\n            else {\n                uVar1 = 0;\n                Var6 = 0;\n            }\n            uVar5 = CONCAT31(Var6, uVar1) ^ 1;\n            break;\n        case 0xe:\n        case 0x16:\n            piVar2 = fcn.00467260();\n            if (*piVar2 - 1U < 2) {\n                uVar5 = 0;\n            }\n            else {\n                iVar3 = *piVar2 + -4;\n                if (iVar3 == 0) {\n                    uVar5 = fcn.0043bfc0();\n                }\n                else {\n                    uVar5 = CONCAT31(iVar3 >> 8, 1);\n                }\n            }\n        }\n        return uVar5;\n    }\n    return 0;\n}\n",
        "token_count": 477
    },
    "0043c264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043c264(char param_1, char param_2)\n\n{\n    uchar *in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    if (in_EAX != NULL) {\n    // switch table (18 cases) at 0x43c29e\n        switch(*in_EAX) {\n        case 5:\n            uVar2 = 1;\n            break;\n        case 6:\n            uVar2 = fcn.00468330();\n            uVar2 = uVar2 & 0xffffff00 | 4 < uVar2;\n            break;\n        default:\n            uVar2 = 0;\n            break;\n        case 0xc:\n            if (((param_2 == '\\x01') || (param_2 - 3U < 2)) && (param_1 == '\\0')) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 1;\n            }\n            break;\n        case 0xd:\n            piVar1 = fcn.00467260();\n            uVar2 = piVar1 & 0xffffff00 | 4 < *piVar1;\n            break;\n        case 0xe:\n        case 0x16:\n            if (((param_2 == '\\x01') || (param_2 - 3U < 2)) && (param_1 == '\\0')) {\n                uVar2 = 0;\n            }\n            else {\n                piVar1 = fcn.00467260();\n                uVar2 = piVar1 & 0xffffff00 | 4 < *piVar1;\n            }\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "0043c988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c988(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 0xc) = arg_8h;\n    *(in_EAX + 0x14) = 0;\n    fcn.00409c00(in_ECX);\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0043cfe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043cfe4(void)\n\n{\n    char cVar1;\n    ulong uStack12;\n    \n    cVar1 = fcn.0043d01c();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return uStack12;\n}\n",
        "token_count": 78
    },
    "0043d100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d100(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar1;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    \n    puStack44 = 0x43d11d;\n    fcn.00408bb4();\n    uStack48 = 0x43d163;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar1 = arg_8h;\n    fcn.0043f9cc(arg_8h);\n    *in_FS_OFFSET = uVar1;\n    uStack48 = 0x43d16a;\n    uStack52 = 0x43d162;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 207
    },
    "0043d24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0043d24c(void)\n\n{\n    char cVar1;\n    char **in_EAX;\n    char *pcVar2;\n    float10 fVar3;\n    \n    cVar1 = fcn.0043cb20();\n    if (cVar1 == '\\0') {\n        if (*in_EAX == *0x40119c) {\n            return *(in_EAX + 2);\n        }\n        if (**in_EAX == '\\x04') {\n            pcVar2 = fcn.00467260();\n            cVar1 = *pcVar2;\n            if (cVar1 == '\\0') {\n                return in_EAX[2];\n            }\n            if (cVar1 == '\\x01') {\n                return *(in_EAX + 2);\n            }\n            if (cVar1 == '\\x02') {\n                return *(in_EAX + 2);\n            }\n        }\n    }\n    fVar3 = fcn.00455dac();\n    return fVar3;\n}\n",
        "token_count": 219
    },
    "0043d490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d490(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        return *(arg_8h + -4);\n    }\n    return *(in_EAX + -0x48);\n}\n",
        "token_count": 66
    },
    "0043d7c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0043d7c4(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    char *pcVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    float10 fVar6;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uchar uVar7;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    iVar5 = 0x12;\n    do {\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    puStack28 = 0x43d7ee;\n    fcn.00408bb4();\n    uStack32 = 0x43d981;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    pcVar3 = fcn.00467260();\n    cVar2 = *pcVar3;\n    if (cVar2 == '\\0') {\n        var_10h = *(in_EAX + 8);\n        var_ch = var_10h >> 0x1f;\n    }\n    else if (cVar2 == '\\x02') {\n        var_10h = *(in_EAX + 8);\n        var_ch = var_10h >> 0x1f;\n    }\n    else if (cVar2 == '\\x04') {\n        var_10h = *(in_EAX + 8);\n        var_ch = var_10h >> 0x1f;\n    }\n    else {\n        var_10h = *(in_EAX + 8);\n        var_ch = 0;\n    }\n    puVar4 = fcn.00467260();\n    // switch table (5 cases) at 0x43d85f\n    switch(*puVar4) {\n    case 0:\n        fcn.00455fc4(CONCAT44(var_ch, var_10h));\n        var_28h = 0x43d896;\n        fcn.00408f5c();\n        break;\n    case 1:\n        uVar7 = CONCAT44(var_ch, var_10h) >> 0x20;\n        var_4ch = SUB84(CONCAT44(var_ch, var_10h), 0);\n        var_28h = var_4ch;\n        fcn.00455ff0(var_4ch);\n        fcn.00408f5c(var_4ch, uVar7);\n        break;\n    case 2:\n        fVar6 = CONCAT44(var_ch, var_10h);\n        var_2ch = SUB104(fVar6, 0);\n        var_28h = fVar6 >> 0x20;\n        uVar7 = fVar6 >> 0x40;\n        fcn.0045601c(var_2ch);\n        fcn.00408f5c(var_2ch, var_28h, uVar7);\n        break;\n    case 3:\n        uVar7 = ROUND(CONCAT44(var_ch, var_10h)) >> 0x20;\n        var_4ch = ROUND(CONCAT44(var_ch, var_10h));\n        var_28h = var_4ch;\n        fcn.00456074(var_4ch);\n        fcn.00408f5c(var_4ch, uVar7);\n        break;\n    case 4:\n        iVar1 = ROUND(CONCAT44(var_ch, var_10h) * *0x43d990);\n        var_28h = iVar1;\n        uVar7 = iVar1 >> 0x20;\n        fcn.00456048(var_28h);\n        fcn.00408f5c(var_28h, uVar7);\n    }\n    *in_FS_OFFSET = var_28h;\n    uStack36 = 0x43d988;\n    fcn.00408d08();\n    fcn.00408c90();\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 1010
    },
    "0043d994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043d994(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    fcn.00467260();\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return 1;\n}\n",
        "token_count": 70
    },
    "0043dbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043dbe0(uint param_1, uchar *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint32_t *in_FS_OFFSET;\n    uint var_160h;\n    uint var_15ch;\n    uint var_144h;\n    uint var_140h;\n    uint var_128h;\n    uint var_124h;\n    uint32_t in_stack_ffffffd4;\n    uint32_t var_24h;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0x2b;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack32 = 0x43dc0b;\n    fcn.00408bb4();\n    uStack36 = 0x43ddeb;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0043dbe0::var_24h;\n    puStack32 = &stack0xfffffffc;\n    // switch table (14 cases) at 0x43dc48\n    switch(*param_2) {\n    case 5:\n        puStack32 = &stack0xfffffffc;\n        fcn.00408510();\n        fcn.004085ec();\n        fcn.004560a0();\n        in_stack_ffffffd4 = 0x43dd0c;\n        fcn.00408f5c();\n        break;\n    case 9:\n        puStack32 = &stack0xfffffffc;\n        fcn.00408c90();\n        in_stack_ffffffd4 = 0x43dc7a;\n        fcn.0043d55c();\n        break;\n    case 10:\n        puStack32 = &stack0xfffffffc;\n        puVar1 = fcn.00466fc4();\n        in_stack_ffffffd4 = *puVar1;\n        fcn.00408510();\n        fcn.004084ec();\n        fcn.00408ba0(in_stack_ffffffd4);\n        fcn.00408c90();\n        fcn.0043d4a8();\n        break;\n    case 0xb:\n        puStack32 = &stack0xfffffffc;\n        fcn.0040830c();\n        fcn.004560e0();\n        in_stack_ffffffd4 = 0x43dd40;\n        fcn.00408f5c();\n        break;\n    case 0x12:\n        puStack32 = &stack0xfffffffc;\n        fcn.00408510();\n        fcn.0045610c();\n        in_stack_ffffffd4 = 0x43dd74;\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43ddf2;\n    var_24h = 0x43dd94;\n    fcn.00407a20();\n    var_24h = 0x43dda5;\n    fcn.00408c90();\n    var_24h = 0x43ddb0;\n    fcn.00407a68();\n    var_24h = 0x43ddc1;\n    fcn.00408c90();\n    var_24h = 0x43ddcc;\n    fcn.00407a20();\n    var_24h = 0x43ddda;\n    fcn.00408c90();\n    var_24h = 0x43dde2;\n    fcn.00407a20();\n    var_24h = 0x43ddea;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 826
    },
    "0043dec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043dec4(void)\n\n{\n    int64_t iVar1;\n    double dVar2;\n    int32_t in_EAX;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    float10 fVar5;\n    uint var_268h;\n    uint var_250h;\n    uint var_238h;\n    uint var_220h;\n    uint var_208h;\n    uint var_1f0h;\n    uint var_1d8h;\n    uint var_1c0h;\n    uint var_1a8h;\n    uint var_190h;\n    uint var_178h;\n    uint var_160h;\n    uint var_148h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_110h;\n    uint var_f8h;\n    uint var_e0h;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_34h;\n    uint uVar6;\n    uint in_stack_ffffffd0;\n    uchar uVar7;\n    uint uStack40;\n    uint uStack36;\n    uchar *var_1ch;\n    uint var_4h;\n    \n    iVar4 = 0x4c;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_1ch = 0x43deef;\n    fcn.00408bb4();\n    uStack36 = 0x43e500;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_1ch = &stack0xfffffffc;\n    puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43df17\n    switch(*puVar3) {\n    case 0:\n        puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43df45\n        switch(*puVar3) {\n        case 0:\n            fcn.00455fc4(*(in_EAX + 8));\n            in_stack_ffffffd0 = 0x43df75;\n            fcn.00408f5c();\n            break;\n        case 1:\n            in_stack_ffffffd0 = SUB84(*(in_EAX + 8), 0);\n            uVar7 = *(in_EAX + 8) >> 0x20;\n            fcn.00455ff0(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 2:\n            fVar5 = *(in_EAX + 8);\n            uVar6 = SUB104(fVar5, 0);\n            in_stack_ffffffd0 = fVar5 >> 0x20;\n            uVar7 = fVar5 >> 0x40;\n            fcn.0045601c(uVar6);\n            fcn.00408f5c(uVar6, in_stack_ffffffd0, uVar7);\n            break;\n        case 3:\n            in_stack_ffffffd0 = ROUND(*(in_EAX + 8));\n            uVar7 = ROUND(*(in_EAX + 8)) >> 0x20;\n            fcn.00456074(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 4:\n            iVar1 = ROUND(*(in_EAX + 8) * *0x43e510);\n            in_stack_ffffffd0 = iVar1;\n            uVar7 = iVar1 >> 0x20;\n            fcn.00456048(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n        }\n        break;\n    case 1:\n        puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43e03a\n        switch(*puVar3) {\n        case 0:\n            fcn.00455fc4(*(in_EAX + 8));\n            in_stack_ffffffd0 = 0x43e07d;\n            fcn.00408f5c();\n            break;\n        case 1:\n            uVar7 = *(in_EAX + 0xc);\n            in_stack_ffffffd0 = *(in_EAX + 8);\n            fcn.00455ff0(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 2:\n            fVar5 = *(in_EAX + 8);\n            uVar6 = SUB104(fVar5, 0);\n            in_stack_ffffffd0 = fVar5 >> 0x20;\n            uVar7 = fVar5 >> 0x40;\n            fcn.0045601c(uVar6);\n            fcn.00408f5c(uVar6, in_stack_ffffffd0, uVar7);\n            break;\n        case 3:\n            in_stack_ffffffd0 = ROUND(*(in_EAX + 8));\n            uVar7 = ROUND(*(in_EAX + 8)) >> 0x20;\n            fcn.00456074(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 4:\n            iVar1 = ROUND(*(in_EAX + 8) * *0x43e510);\n            in_stack_ffffffd0 = iVar1;\n            uVar7 = iVar1 >> 0x20;\n            fcn.00456048(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n        }\n        break;\n    case 2:\n        puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43e156\n        switch(*puVar3) {\n        case 0:\n            fcn.00455fc4(*(in_EAX + 8));\n            in_stack_ffffffd0 = 0x43e199;\n            fcn.00408f5c();\n            break;\n        case 1:\n            uVar7 = *(in_EAX + 8) >> 0x20;\n            var_130h = SUB84(*(in_EAX + 8), 0);\n            fcn.00455ff0(var_130h);\n            fcn.00408f5c(var_130h, uVar7);\n            in_stack_ffffffd0 = var_130h;\n            break;\n        case 2:\n            uVar7 = *(in_EAX + 0x10);\n            in_stack_ffffffd0 = *(in_EAX + 0xc);\n            uVar6 = *(in_EAX + 8);\n            fcn.0045601c(uVar6);\n            fcn.00408f5c(uVar6, in_stack_ffffffd0, uVar7);\n            break;\n        case 3:\n            uVar7 = ROUND(*(in_EAX + 8)) >> 0x20;\n            var_130h = ROUND(*(in_EAX + 8));\n            fcn.00456074(var_130h);\n            fcn.00408f5c(var_130h, uVar7);\n            in_stack_ffffffd0 = var_130h;\n            break;\n        case 4:\n            iVar1 = ROUND(*(in_EAX + 8) * *0x43e510);\n            in_stack_ffffffd0 = iVar1;\n            uVar7 = iVar1 >> 0x20;\n            fcn.00456048(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n        }\n        break;\n    case 3:\n        puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43e28f\n        switch(*puVar3) {\n        case 0:\n            fcn.00455fc4(*(in_EAX + 8));\n            in_stack_ffffffd0 = 0x43e2d2;\n            fcn.00408f5c();\n            break;\n        case 1:\n            in_stack_ffffffd0 = SUB84(*(in_EAX + 8), 0);\n            uVar7 = *(in_EAX + 8) >> 0x20;\n            fcn.00455ff0(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 2:\n            fVar5 = *(in_EAX + 8);\n            uVar6 = SUB104(fVar5, 0);\n            in_stack_ffffffd0 = fVar5 >> 0x20;\n            uVar7 = fVar5 >> 0x40;\n            fcn.0045601c(uVar6);\n            fcn.00408f5c(uVar6, in_stack_ffffffd0, uVar7);\n            break;\n        case 3:\n            uVar7 = *(in_EAX + 0xc);\n            in_stack_ffffffd0 = *(in_EAX + 8);\n            fcn.00456074(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 4:\n            iVar1 = ROUND(*(in_EAX + 8) * *0x43e510);\n            in_stack_ffffffd0 = iVar1;\n            uVar7 = iVar1 >> 0x20;\n            fcn.00456048(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n        }\n        break;\n    case 4:\n        puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x43e3ab\n        switch(*puVar3) {\n        case 0:\n            fcn.00455fc4(*(in_EAX + 8) / *0x43e510);\n            in_stack_ffffffd0 = 0x43e3ee;\n            fcn.00408f5c();\n            break;\n        case 1:\n            dVar2 = *(in_EAX + 8) / *0x43e510;\n            in_stack_ffffffd0 = SUB84(dVar2, 0);\n            uVar7 = dVar2 >> 0x20;\n            fcn.00455ff0(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 2:\n            fVar5 = *(in_EAX + 8) / *0x43e510;\n            uVar6 = SUB104(fVar5, 0);\n            in_stack_ffffffd0 = fVar5 >> 0x20;\n            uVar7 = fVar5 >> 0x40;\n            fcn.0045601c(uVar6);\n            fcn.00408f5c(uVar6, in_stack_ffffffd0, uVar7);\n            break;\n        case 3:\n            iVar1 = ROUND(*(in_EAX + 8) / *0x43e510);\n            in_stack_ffffffd0 = iVar1;\n            uVar7 = iVar1 >> 0x20;\n            fcn.00456074(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n            break;\n        case 4:\n            uVar7 = *(in_EAX + 0xc);\n            in_stack_ffffffd0 = *(in_EAX + 8);\n            fcn.00456048(in_stack_ffffffd0);\n            fcn.00408f5c(in_stack_ffffffd0, uVar7);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x43e507;\n    fcn.00408d08();\n    fcn.00408d08();\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 2727
    },
    "0043e87c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043e87c(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    fcn.00467260();\n    fcn.004671a4();\n    cVar1 = fcn.0041960c();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00405dbc();\n        if (uVar2 != '\\0') {\n            arg_8h = 0;\n            fcn.00408c90();\n            fcn.0043d5c4(arg_8h);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 177
    },
    "0043ed8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043ed8c(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint32_t *in_FS_OFFSET;\n    float10 fVar7;\n    uint var_11ch;\n    uint var_104h;\n    uint var_ech;\n    uint var_d4h;\n    uint var_bch;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_74h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uchar uVar8;\n    uchar uVar9;\n    ushort uVar10;\n    uint32_t uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    iVar6 = 0x23;\n    do {\n        uStack12 = 0;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    var_4h = 0;\n    puStack32 = 0x43edb7;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    fcn.00408bb4();\n    uStack36 = 0x43f0f2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    puVar3 = fcn.00467260();\n    uVar2 = puVar3[1];\n    var_38h = *puVar3;\n    uVar8 = uVar2;\n    uVar9 = uVar2 >> 8;\n    uVar10 = uVar2 >> 0x10;\n    iVar4 = fcn.00467260();\n    iVar6 = CONCAT22(uVar10, CONCAT11(uVar9, uVar8));\n    if (*(iVar4 + 0xc) == iVar6) {\n        if (var_38h <= *(iVar4 + 8)) {\ncode_r0x0043ef8f:\n            var_10h = *(in_EAX + 8);\n            var_ch = *(in_EAX + 0xc);\n            puVar5 = fcn.00467260();\n    // switch table (5 cases) at 0x43efb5\n            switch(*puVar5) {\n            case 0:\n                fcn.00455fc4(CONCAT44(var_ch, var_10h));\n                var_38h = 0x43eff2;\n                fcn.00408f5c();\n                break;\n            case 1:\n                uVar8 = CONCAT44(var_ch, var_10h) >> 0x20;\n                var_38h = SUB84(CONCAT44(var_ch, var_10h), 0);\n                fcn.00455ff0(var_38h);\n                fcn.00408f5c(var_38h, uVar8);\n                break;\n            case 2:\n                fVar7 = CONCAT44(var_ch, var_10h);\n                var_30h = SUB104(fVar7, 0);\n                var_38h = fVar7 >> 0x20;\n                uVar8 = fVar7 >> 0x40;\n                fcn.0045601c(var_30h);\n                fcn.00408f5c(var_30h, var_38h, uVar8);\n                break;\n            case 3:\n                uVar8 = ROUND(CONCAT44(var_ch, var_10h)) >> 0x20;\n                var_38h = ROUND(CONCAT44(var_ch, var_10h));\n                fcn.00456074(var_38h);\n                fcn.00408f5c(var_38h, uVar8);\n                break;\n            case 4:\n                iVar1 = ROUND(CONCAT44(var_ch, var_10h) * *0x43f10c);\n                var_38h = iVar1;\n                uVar8 = iVar1 >> 0x20;\n                fcn.00456048(var_38h);\n                fcn.00408f5c(var_38h, uVar8);\n            }\n            goto code_r0x0043f0b0;\n        }\n    }\n    else if (iVar6 <= *(iVar4 + 0xc)) goto code_r0x0043ef8f;\n    var_18h = *(in_EAX + 8);\n    var_14h = *(in_EAX + 0xc);\n    puVar5 = fcn.00467260();\n    // switch table (5 cases) at 0x43ee23\n    switch(*puVar5) {\n    case 0:\n        _var_38h = CONCAT44(var_14h + -0x80000000, var_18h);\n        fcn.00455fc4(_var_38h + *0x43f104);\n        var_38h = 0x43ee72;\n        fcn.00408f5c();\n        break;\n    case 1:\n        _var_38h = CONCAT44(var_14h + -0x80000000, var_18h);\n        uVar8 = _var_38h + *0x43f104 >> 0x20;\n        var_5ch = SUB84(_var_38h + *0x43f104, 0);\n        fcn.00455ff0(var_5ch);\n        fcn.00408f5c(var_5ch, uVar8);\n        var_38h = var_5ch;\n        break;\n    case 2:\n        _var_38h = CONCAT44(var_14h + -0x80000000, var_18h);\n        fVar7 = _var_38h + *0x43f104;\n        var_30h = SUB104(fVar7, 0);\n        var_38h = fVar7 >> 0x20;\n        uVar8 = fVar7 >> 0x40;\n        fcn.0045601c(var_30h);\n        fcn.00408f5c(var_30h, var_38h, uVar8);\n        break;\n    case 3:\n        _var_38h = CONCAT44(var_14h + -0x80000000, var_18h);\n        uVar8 = ROUND(_var_38h + *0x43f104) >> 0x20;\n        var_5ch = ROUND(_var_38h + *0x43f104);\n        fcn.00456074(var_5ch);\n        fcn.00408f5c(var_5ch, uVar8);\n        var_38h = var_5ch;\n        break;\n    case 4:\n        _var_38h = CONCAT44(var_14h + -0x80000000, var_18h);\n        iVar1 = ROUND((_var_38h + *0x43f104) * *0x43f10c);\n        var_38h = iVar1;\n        uVar8 = iVar1 >> 0x20;\n        fcn.00456048(var_38h);\n        fcn.00408f5c(var_38h, uVar8);\n    }\ncode_r0x0043f0b0:\n    *in_FS_OFFSET = var_38h;\n    uStack40 = 0x43f0f9;\n    fcn.00408d08();\n    fcn.00408c90();\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 1861
    },
    "0043f918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0043f918(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_10h;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    fcn.00408bb4();\n    var_5h = 0;\n    fcn.0043cbd8();\n    iVar1 = fcn.00466fc4();\n    iVar1 = *(iVar1 + 1);\n    fcn.0043cbd8();\n    iVar2 = fcn.00466fc4();\n    iVar2 = *(iVar2 + 5);\n    fcn.00466fc4();\n    iVar3 = fcn.00466fc4();\n    iVar3 = *(iVar3 + 1);\n    fcn.00466fc4();\n    iVar4 = fcn.00466fc4();\n    if ((iVar1 == iVar3) && (*(iVar4 + 5) == iVar2)) {\n        uVar5 = fcn.0043d6d8();\n        fcn.00408c90(uVar5);\n        fcn.0043d4a8();\n        var_5h = 1;\n    }\n    return var_5h;\n}\n",
        "token_count": 287
    },
    "0043fb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fb30(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0043fb28();\n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 57
    },
    "0043fc54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043fc54(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    fcn.0043fbc0();\n    uVar1 = fcn.0043fb80();\n    *in_EAX = *in_EAX + (uVar1 & 0xff);\n    return;\n}\n",
        "token_count": 77
    },
    "0043fc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.0043fc88(void)\n\n{\n    uint8_t *in_EAX;\n    \n    return in_EAX + *in_EAX + 1;\n}\n",
        "token_count": 40
    },
    "00443a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00443a08(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004534f4();\n    *(in_EAX + 8) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 158
    },
    "004442a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004442a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x444315;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00409d68();\n    iVar1 = fcn.0043bb3c();\n    if (iVar1 != *(in_EAX + 0xc)) {\n        fcn.00444020(&stack0xfffffffc);\n        fcn.00409d68();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44431c;\n    uStack24 = 0x444314;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 221
    },
    "00444e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00444e78(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x444e8f;\n    uVar1 = fcn.0043fb6c();\n    iVar2 = (uVar1 & 0xffff) - 2;\n    if (iVar2 == 0) {\n        puStack36 = 0x444ea7;\n        fcn.00409d24();\n        return;\n    }\n    puStack36 = 0x444eba;\n    fcn.00457ed4();\n    uStack40 = 0x444f1e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    while (in_EAX < in_EAX + iVar2) {\n        iVar3 = fcn.00444d44(&stack0xfffffffc);\n        if (iVar3 != 0) {\n            fcn.00431524();\n        }\n    }\n    fcn.00458070();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x444f25;\n    uStack40 = 0x444f1d;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 352
    },
    "00446708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446708(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x446770;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00405cb8();\n    fcn.0040b494();\n    *(iVar1 + 0x14) = in_EAX;\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x446777;\n    uStack32 = 0x44676f;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 194
    },
    "00446a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00446a44(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x446a5d;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x446ac0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar3 = arg_8h;\n    puStack40 = &fcn.00446a44::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    cVar1 = fcn.004474e0();\n    if (cVar1 == '\\f') {\n        uVar2 = fcn.004474cc();\n        *arg_8h = uVar2;\n        fcn.00446780();\n        fcn.0040b494();\n    }\n    *in_FS_OFFSET = puVar3;\n    uStack48 = 0x446ac7;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 359
    },
    "00449e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid fcn.00449e64(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_50h;\n    uint var_38h;\n    uint uVar3;\n    uint var_20h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 9;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar2 = (**(*in_EAX + 0x30))();\n    if ((*(iVar2 + 4) & 0xff000000) == 0xff000000) {\n        (**(*in_EAX + 0x10))();\n        uVar1 = fcn.00446cec();\n        fcn.00408c90(uVar1);\n        fcn.0043d4a8();\n    }\n    else {\n        fcn.0043bdf0();\n        iVar2 = (**(*in_EAX + 0x28))();\n        if (iVar2 == -0x80000000) {\n            fcn.00409c00(1);\n            fcn.0043ce98();\n            fcn.00408f5c();\n            (**(*in_EAX + 0x10))();\n            uVar1 = fcn.00446cec();\n            uVar3 = 0;\n            fcn.00451c38(0, 0, 0, uVar1);\n        }\n        else {\n            fcn.00409c00(2);\n            fcn.0043ce98();\n            fcn.00408f5c();\n            (**(*in_EAX + 0x28))();\n            fcn.0043cdb0();\n            fcn.00408f5c();\n            (**(*in_EAX + 0x10))();\n            uVar1 = fcn.00446cec();\n            uVar3 = 0;\n            fcn.00451c38(0, 0, 0, uVar1);\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00408d08();\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 527
    },
    "0044a4f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044a4f4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44a50d;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44a568;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.0044a4f4::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 0x10;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x44a56f;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 346
    },
    "0044a5e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044a5e4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44a5fd;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44a658;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.0044a5e4::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 4;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x44a65f;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 344
    },
    "0044a73c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044a73c(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar4;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44a755;\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44a7e0;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar4 = arg_8h;\n    puStack40 = &fcn.0044a73c::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.0044a40c(arg_8h, arg_ch);\n    iVar2 = fcn.004474cc();\n    *arg_8h = iVar2 + 0xd;\n    cVar1 = fcn.0044a6e8();\n    if (cVar1 != '\\0') {\n        uVar3 = (**(*in_EAX + 0x54))();\n        (**(*in_EAX + 0x58))(uVar3);\n        iVar2 = fcn.0044a6c8();\n        *arg_8h = iVar2;\n    }\n    iVar2 = fcn.0043fc88();\n    *arg_8h = iVar2;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar4;\n    piStack48 = 0x44a7e7;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 478
    },
    "0044e98c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e98c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    cVar1 = fcn.0044e7cc();\n    if (cVar1 == '\\0') {\n        fcn.00409d24();\n    }\n    else {\n        iVar2 = fcn.0044e960();\n        fcn.00409c00(*(iVar2 + 6));\n        fcn.0044e960();\n        iVar2 = fcn.0044e960();\n        uVar4 = *(iVar2 + 6);\n        if (-1 < uVar4 - 1) {\n            iVar2 = 0;\n            do {\n                fcn.0044682c(&stack0xffffffec);\n                uVar3 = fcn.00405f54();\n                *(*param_2 + iVar2 * 4) = uVar3;\n                iVar2 = iVar2 + 1;\n                uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0044ea20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044ea20(uint *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44ea39;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44ea96;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar2 = arg_8h;\n    puStack40 = &fcn.0044ea20::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.0044eac0();\n    uVar1 = fcn.004670c8();\n    *arg_8h = uVar1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = puVar2;\n    uStack48 = 0x44ea9d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 338
    },
    "0044ec68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044ec68(uint *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44ec81;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44ecde;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar2 = arg_8h;\n    puStack40 = &fcn.0044ec68::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.0044ed24();\n    uVar1 = fcn.00467130();\n    *arg_8h = uVar1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = puVar2;\n    uStack48 = 0x44ece5;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 335
    },
    "0044f468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f468(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = param_2;\n    fcn.00459340();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = fcn.004474cc();\n    var_8h = var_8h + 4;\n    for (iVar1 = fcn.0043fb44(); 0 < iVar1; iVar1 = iVar1 + -1) {\n        arg_8h = &var_8h;\n        fcn.0044682c(arg_8h);\n        fcn.00405f54();\n        fcn.00431524();\n    }\n    fcn.004594dc();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 250
    },
    "0044f7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044f7a0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44f7b9;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44f821;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.0044f7a0::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 0xd;\n    iVar1 = fcn.0044f888();\n    *arg_8h = *arg_8h + iVar1 * 4;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x44f828;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 376
    },
    "0044f898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044f898(uint *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x44f8b1;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x44f90e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar2 = arg_8h;\n    puStack40 = &fcn.0044f898::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    fcn.004474cc();\n    uVar1 = fcn.004671dc();\n    *arg_8h = uVar1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = puVar2;\n    uStack48 = 0x44f915;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 338
    },
    "004503dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004503dc(int32_t *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar3;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x4503f5;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x450480;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar3 = arg_8h;\n    puStack40 = &fcn.004503dc::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    cVar1 = fcn.004474e0();\n    if (cVar1 == '\\x05') {\n        iVar2 = fcn.004474cc();\n        *arg_8h = iVar2 + 1;\n    }\n    else if (cVar1 == '\\n') {\n        iVar2 = fcn.004474cc();\n        *arg_8h = iVar2 + 2;\n    }\n    else if ((cVar1 == '\\v') || (cVar1 == '\\x12')) {\n        iVar2 = fcn.004474cc();\n        *arg_8h = iVar2;\n    }\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar3;\n    piStack48 = 0x450487;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 451
    },
    "004504f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004504f4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x45050d;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x450566;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.004504f4::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x45056d;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 337
    },
    "0045257c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045257c(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack44 = 0x452593;\n        in_EAX = fcn.004062b0();\n    }\n    uStack48 = 0x452624;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &fcn.0045257c::var_1h + 1;\n    fcn.00446910(arg_8h, arg_ch);\n    uVar1 = fcn.0043fb80();\n    *(in_EAX + 0x1c) = uVar1;\n    puVar3 = fcn.0043fb58();\n    if (puVar3 != NULL) {\n        puVar3 = *puVar3;\n    }\n    *(in_EAX + 0x20) = puVar3;\n    uVar2 = fcn.0043fb6c();\n    *(in_EAX + 0x24) = uVar2;\n    fcn.0043fc54();\n    fcn.00407e00();\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x45262b;\n    fcn.0040b47c();\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 413
    },
    "004526dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004526dc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack48 = 0x4526fa;\n    fcn.00408bb4();\n    uStack52 = 0x452767;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = (**(*in_EAX + 0x10))();\n    if (iVar1 == 0) {\n        fcn.0043bddc();\n        fcn.0040711c();\n    }\n    arg_8h = &fcn.004526dc::var_18h;\n    fcn.00446cec();\n    fcn.0043d174(arg_8h);\n    (**(*in_EAX + 0x14))(&fcn.004526dc::var_18h);\n    fcn.0043d648();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x45276e;\n    iStack56 = 0x452766;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 311
    },
    "0045293c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045293c(uint *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x452955;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x4529b2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar2 = arg_8h;\n    puStack40 = &fcn.0045293c::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.00452a00();\n    uVar1 = fcn.00466ff8();\n    *arg_8h = uVar1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = puVar2;\n    uStack48 = 0x4529b9;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 337
    },
    "00452a4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00452a4c(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    char extraout_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x452a65;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x452ac1;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &fcn.00452a4c::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 5;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x452ac8;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 340
    },
    "00452e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452e2c(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar2 = fcn.00452fec();\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00452fec();\n        iVar2 = *(iVar2 + 0x1c);\n    }\n    uVar3 = fcn.0043fb6c();\n    uVar3 = uVar3 & 0xffff;\n    *(*(arg_8h + -4) + 0x1c) = uVar3 + iVar2;\n    iVar1 = fcn.0043fb6c();\n    if (iVar1 != -1) {\n        fcn.00409c00(uVar3);\n        if (-1 < uVar3 - 1) {\n            iVar5 = 0;\n            do {\n                fcn.0044682c(in_EAX);\n                uVar4 = fcn.00405f54();\n                *(*(*(arg_8h + -4) + 0x18) + iVar5 * 4) = uVar4;\n                *(*(*(*(arg_8h + -4) + 0x18) + iVar5 * 4) + 0x28) = iVar2;\n                iVar2 = iVar2 + 1;\n                iVar5 = iVar5 + 1;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00452ef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452ef8(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_DL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x452f11;\n        fcn.004062b0();\n    }\n    uStack44 = 0x452f83;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar2 = arg_8h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00446a44(arg_8h, arg_ch);\n    iVar1 = fcn.004474cc();\n    *arg_8h = iVar1 + 0x15;\n    iVar1 = fcn.0043fc88();\n    *arg_8h = iVar1;\n    fcn.00452e2c(&stack0xfffffffc);\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = piVar2;\n    piStack48 = 0x452f8a;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 314
    },
    "00453044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00453044(uint *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack44 = 0x45305b;\n        in_EAX = fcn.004062b0();\n    }\n    uStack48 = 0x4530e4;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar3 = arg_8h;\n    puStack44 = &fcn.00453044::var_1h + 1;\n    fcn.00446910(arg_8h, arg_ch);\n    uVar1 = fcn.0043fb80();\n    *(in_EAX + 0x1c) = uVar1;\n    fcn.0043fc54();\n    fcn.00407e00();\n    uVar2 = fcn.0043fc88();\n    *arg_8h = uVar2;\n    uVar2 = fcn.0043fb58();\n    *(in_EAX + 0x20) = uVar2;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = puVar3;\n    uStack52 = 0x4530eb;\n    fcn.0040b47c();\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 396
    },
    "004534f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004534f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 4) = 0xffffffff;\n    uVar1 = fcn.00405cb8();\n    *(in_EAX + 0x18) = uVar1;\n    uVar2 = 0;\n    uVar1 = fcn.0045969c(0);\n    *(in_EAX + 0x1c) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 243
    },
    "004538e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004538e4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x453979;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00409c00(*(*(*(arg_8h + -4) + 0x24) + 8));\n    iVar1 = *(*(*(arg_8h + -4) + 0x24) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0043fc54();\n            fcn.00407e00();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x453980;\n    uStack32 = 0x453978;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 265
    },
    "0045430c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045430c(uint *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x454325;\n        fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uStack44 = 0x454382;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puVar2 = arg_8h;\n    puStack40 = &fcn.0045430c::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00446910(arg_8h, arg_ch);\n    fcn.00454504();\n    uVar1 = fcn.00467094();\n    *arg_8h = uVar1;\n    fcn.00446780();\n    fcn.0040b494();\n    *in_FS_OFFSET = puVar2;\n    uStack48 = 0x454389;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 331
    },
    "00454b0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454b0c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00454b44();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "00454b44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00454b44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x438504;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00454a0c();\n    fcn.00454a70();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "00454bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00454bd8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "00454c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454c10(uint param_1, uint param_2)\n\n{\n    fcn.00431660(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "00454e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454e74(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.00454eb0();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.00454eb0();\n    return;\n}\n",
        "token_count": 200
    },
    "0045509c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045509c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00454ff4();\n    uVar1 = ~uVar1;\n    *(*(in_EAX + 4) + uVar1 * 0xc) = in_EDX;\n    *(*(in_EAX + 4) + 4 + uVar1 * 0xc) = in_ECX;\n    *(*(in_EAX + 4) + 8 + uVar1 * 0xc) = arg_8h;\n    return;\n}\n",
        "token_count": 167
    },
    "00455bc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455bc4(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 36
    },
    "00455bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455bf0(uint param_1, uint param_2)\n\n{\n    fcn.00408c90(param_2);\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 49
    },
    "00455c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455c1c(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 37
    },
    "00455c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455c74(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 36
    },
    "00455ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455ca0(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 36
    },
    "00455ccc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455ccc(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 35
    },
    "00455cf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455cf8(void)\n\n{\n    char cVar1;\n    uint uStack8;\n    \n    cVar1 = fcn.004582d4();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 82
    },
    "00455d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455d34(void)\n\n{\n    char cVar1;\n    uint uStack8;\n    \n    cVar1 = fcn.0045a10c();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 83
    },
    "00455d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00455d70(void)\n\n{\n    char cVar1;\n    uint uStack8;\n    \n    cVar1 = fcn.0045a194();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 92
    },
    "00455dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.00455dac(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0045a21c();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return Stack16;\n}\n",
        "token_count": 78
    },
    "00455de8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455de8(void)\n\n{\n    char cVar1;\n    ulong uStack12;\n    \n    cVar1 = fcn.0045a2a4();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return uStack12;\n}\n",
        "token_count": 78
    },
    "00455e28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455e28(void)\n\n{\n    char cVar1;\n    ulong uStack12;\n    \n    cVar1 = fcn.0045a32c();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return uStack12;\n}\n",
        "token_count": 77
    },
    "00455e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455e68(void)\n\n{\n    char cVar1;\n    \n    fcn.0040b47c();\n    cVar1 = fcn.0045a3b4();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00455eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455eac(void)\n\n{\n    char cVar1;\n    \n    fcn.00407a20();\n    cVar1 = fcn.0045a44c();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00455ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455ef0(void)\n\n{\n    char cVar1;\n    \n    fcn.004293d4();\n    cVar1 = fcn.0045a4e4();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00455f34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455f34(void)\n\n{\n    char cVar1;\n    uint uStack8;\n    \n    cVar1 = fcn.0045a588();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 82
    },
    "00455f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00455f88(void)\n\n{\n    char cVar1;\n    uint uStack8;\n    \n    cVar1 = fcn.0045a610();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 92
    },
    "004560a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004560a0(uint param_1, uint param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t auStack264 [256];\n    \n    iVar1 = *in_EAX + 1;\n    puVar2 = auStack264;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00408c90(param_2);\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 162
    },
    "004560e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004560e0(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 36
    },
    "0045610c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045610c(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 36
    },
    "00456190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456190(uint param_1, uint param_2)\n\n{\n    fcn.00408c90(param_2);\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 48
    },
    "004561bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004561bc(uint param_1, uint param_2)\n\n{\n    fcn.00408c90(param_2);\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 48
    },
    "004561e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004561e8(void)\n\n{\n    char cVar1;\n    \n    fcn.004293d4();\n    cVar1 = fcn.0045a698();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00456424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456424(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.00456460();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.00456460();\n    return;\n}\n",
        "token_count": 197
    },
    "0045664c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045664c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004565a4();\n    *(*(in_EAX + 4) + ~uVar1 * 0xc) = in_EDX;\n    *(*(in_EAX + 4) + 4 + ~uVar1 * 0xc) = in_ECX;\n    fcn.00407e00();\n    return;\n}\n",
        "token_count": 140
    },
    "00456724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00456724(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0045675c(0);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 139
    },
    "004572a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004572a4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.004572e0();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.004572e0();\n    return;\n}\n",
        "token_count": 200
    },
    "004574cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004574cc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00457424();\n    *(*(in_EAX + 4) + ~uVar1 * 0xc) = in_EDX;\n    fcn.00407e00();\n    *(*(in_EAX + 4) + 8 + ~uVar1 * 0xc) = arg_8h;\n    return;\n}\n",
        "token_count": 133
    },
    "004575a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004575a4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.004575dc(0);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 139
    },
    "00457c1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457c1c(void)\n\n{\n    fcn.00408c90();\n    fcn.0043d4a8();\n    return;\n}\n",
        "token_count": 37
    },
    "00457c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00457c4c(void)\n\n{\n    char cVar1;\n    uint uStack8;\n    \n    cVar1 = fcn.0045b670();\n    if (cVar1 == '\\0') {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 83
    },
    "00457ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00457ed4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00457f0c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "00457f0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00457f0c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x445244;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00457dcc();\n    fcn.00457e34();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00457fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00457fa0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "00457fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457fd8(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "00458070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458070(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.00409c00(*(param_2 + 8));\n    iVar2 = *(param_2 + 8);\n    if (-1 < iVar2 + -1) {\n        uVar1 = 0;\n        do {\n            if (*(param_2 + 8) <= uVar1) {\n                fcn.00431010();\n            }\n            *(*param_1 + uVar1 * 4) = *(*(param_2 + 4) + uVar1 * 4);\n            uVar1 = uVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004582d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004582d4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x4582f1;\n    fcn.00408bb4();\n    uStack48 = 0x45834b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b718();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x458352;\n    uStack52 = 0x45834a;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 251
    },
    "004585a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004585a8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004585e0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004585e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004585e0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x44ab30;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004584a0();\n    fcn.00458508();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00458674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00458674(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 420
    },
    "004586ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004586ac(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 36
    },
    "004586d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004586d0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004320d0(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "00458790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458790(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.00409c00(*(param_2 + 8));\n    iVar2 = *(param_2 + 8);\n    if (-1 < iVar2 + -1) {\n        uVar1 = 0;\n        do {\n            if (*(param_2 + 8) <= uVar1) {\n                fcn.00431010();\n            }\n            *(*param_1 + uVar1 * 4) = *(*(param_2 + 4) + uVar1 * 4);\n            uVar1 = uVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00458a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00458a30(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00458a68();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00458a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00458a68(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x44bf5c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00458928();\n    fcn.00458990();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00458afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00458afc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 420
    },
    "00458b34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458b34(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "00458b58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458b58(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004320d0(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "00458c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458c18(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.00409c00(*(param_2 + 8));\n    iVar2 = *(param_2 + 8);\n    if (-1 < iVar2 + -1) {\n        uVar1 = 0;\n        do {\n            if (*(param_2 + 8) <= uVar1) {\n                fcn.00431010();\n            }\n            *(*param_1 + uVar1 * 4) = *(*(param_2 + 4) + uVar1 * 4);\n            uVar1 = uVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00458eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00458eb8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00458ef0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00458ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00458ef0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x44d36c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00458db0();\n    fcn.00458e18();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00458f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00458f84(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "00458fbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458fbc(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "00458fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458fe0(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.004320d0(arg_8h);\n    return;\n}\n",
        "token_count": 43
    },
    "004590a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004590a0(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.00409c00(*(param_2 + 8));\n    iVar2 = *(param_2 + 8);\n    if (-1 < iVar2 + -1) {\n        uVar1 = 0;\n        do {\n            if (*(param_2 + 8) <= uVar1) {\n                fcn.00431010();\n            }\n            *(*param_1 + uVar1 * 4) = *(*(param_2 + 4) + uVar1 * 4);\n            uVar1 = uVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00459340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00459340(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00459378();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00459378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00459378(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4508c4;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00459238();\n    fcn.004592a0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "0045940c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045940c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "00459444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459444(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 36
    },
    "004594dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004594dc(int32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.00409c00(*(param_2 + 8));\n    iVar2 = *(param_2 + 8);\n    if (-1 < iVar2 + -1) {\n        uVar1 = 0;\n        do {\n            if (*(param_2 + 8) <= uVar1) {\n                fcn.00431010();\n            }\n            *(*param_1 + uVar1 * 4) = *(*(param_2 + 4) + uVar1 * 4);\n            uVar1 = uVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00459530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459530(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45954d;\n    fcn.00408bb4();\n    uStack48 = 0x4595a7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b7cc();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x4595ae;\n    uStack52 = 0x4595a6;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 253
    },
    "0045969c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0045969c(uint arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.004596e8(0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00459910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00459910(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00459948();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00459948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00459948(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x45be44;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00459810();\n    fcn.00459874();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 183
    },
    "004599dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004599dc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 420
    },
    "00459a14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459a14(uint param_1, uint param_2)\n\n{\n    fcn.00431568(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "00459c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00459c64(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00459c9c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "00459c9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00459c9c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x45d1c0;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00459b5c();\n    fcn.00459bc4();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "00459d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00459d30(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "00459d68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459d68(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "00459f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00459f70(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00459fa8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00459fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00459fa8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x45e210;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.00459e68();\n    fcn.00459ed0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "0045a03c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045a03c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "0045a074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a074(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "0045a10c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a10c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a129;\n    fcn.00408bb4();\n    uStack48 = 0x45a183;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b860();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a18a;\n    uStack52 = 0x45a182;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 253
    },
    "0045a194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a194(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a1b1;\n    fcn.00408bb4();\n    uStack48 = 0x45a20b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b894();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a212;\n    uStack52 = 0x45a20a;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 255
    },
    "0045a21c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a21c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a239;\n    fcn.00408bb4();\n    uStack48 = 0x45a293;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b8c8();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a29a;\n    uStack52 = 0x45a292;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 255
    },
    "0045a2a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a2a4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a2c1;\n    fcn.00408bb4();\n    uStack48 = 0x45a31b;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b8fc();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a322;\n    uStack52 = 0x45a31a;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 258
    },
    "0045a32c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a32c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a349;\n    fcn.00408bb4();\n    uStack48 = 0x45a3a3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045b930();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a3aa;\n    uStack52 = 0x45a3a2;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 257
    },
    "0045a3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a3b4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack44 = 0x45a3dc;\n    fcn.00408bb4();\n    uStack48 = 0x45a43d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0040b47c();\n        fcn.0045b964();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a444;\n    uStack52 = 0x45a43c;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 298
    },
    "0045a44c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a44c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack44 = 0x45a474;\n    fcn.00408bb4();\n    uStack48 = 0x45a4d5;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.00407a20();\n        fcn.0045b9a4();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a4dc;\n    uStack52 = 0x45a4d4;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 300
    },
    "0045a4e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a4e4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if (param_2 != NULL) {\n        param_2[3] = 0;\n        param_2[2] = 0;\n        param_2[1] = 0;\n        *param_2 = 0;\n    }\n    puStack44 = 0x45a518;\n    fcn.00408bb4();\n    uStack48 = 0x45a579;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.004293d4();\n        fcn.0045b9e4();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a580;\n    uStack52 = 0x45a578;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 329
    },
    "0045a588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a588(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a5a5;\n    fcn.00408bb4();\n    uStack48 = 0x45a5ff;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045ba30();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a606;\n    uStack52 = 0x45a5fe;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 255
    },
    "0045a610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a610(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45a62d;\n    fcn.00408bb4();\n    uStack48 = 0x45a687;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045ba64();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a68e;\n    uStack52 = 0x45a686;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 253
    },
    "0045a698": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a698(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    if (param_2 != NULL) {\n        param_2[3] = 0;\n        param_2[2] = 0;\n        param_2[1] = 0;\n        *param_2 = 0;\n    }\n    puStack44 = 0x45a6cc;\n    fcn.00408bb4();\n    uStack48 = 0x45a72d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.004293d4();\n        fcn.0045ba98();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45a734;\n    uStack52 = 0x45a72c;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 328
    },
    "0045a8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045a8a0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0045a8d8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 134
    },
    "0045a8d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045a8d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x45f2a8;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0045a7a0();\n    fcn.0045a804();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 192
    },
    "0045a96c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045a96c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "0045a9a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a9a4(uint param_1, uint param_2)\n\n{\n    fcn.004315b4(param_2);\n    return;\n}\n",
        "token_count": 40
    },
    "0045a9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a9f0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    puStack28 = 0x45aa0b;\n    fcn.00408bb4();\n    uStack32 = 0x45aa5f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00408f5c();\n    fcn.00408f5c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45aa66;\n    uStack32 = 0x45aa5e;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 184
    },
    "0045ac54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ac54(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0045ac8c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0045ac8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045ac8c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x460624;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0045ab4c();\n    fcn.0045abb4();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0045ad20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045ad20(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "0045ad58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ad58(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "0045af60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045af60(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0045af98();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0045af98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045af98(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4616c4;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0045ae58();\n    fcn.0045aec0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0045b02c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045b02c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "0045b064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b064(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00431174(param_2, in_EAX + 4);\n    return;\n}\n",
        "token_count": 53
    },
    "0045b2c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045b2c8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0045b300();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0045b300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b300(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4626b8;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0045b1c8();\n    fcn.0045b22c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0045b394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045b394(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "0045b3cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b3cc(uint param_1, uint param_2)\n\n{\n    fcn.004315b4(param_2);\n    return;\n}\n",
        "token_count": 39
    },
    "0045b418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b418(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    puStack28 = 0x45b433;\n    fcn.00408bb4();\n    uStack32 = 0x45b487;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00408f5c();\n    fcn.00408f5c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45b48e;\n    uStack32 = 0x45b486;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 180
    },
    "0045b628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045b628(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0040b494();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0045b670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b670(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    puStack44 = 0x45b68d;\n    fcn.00408bb4();\n    uStack48 = 0x45b6e7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408c90();\n    uVar2 = arg_8h;\n    cVar1 = fcn.0043f9cc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.0045bb64();\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack48 = 0x45b6ee;\n    uStack52 = 0x45b6e6;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 257
    },
    "00466f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466f58(void)\n\n{\n    uint8_t **in_EAX;\n    \n    if (**in_EAX == 0) {\n        fcn.00407a20();\n    }\n    else {\n        fcn.0040c738(**in_EAX);\n        fcn.00407ba8();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00466fa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.00466fa8(void)\n\n{\n    uint8_t **in_EAX;\n    \n    return *in_EAX + **in_EAX + 1;\n}\n",
        "token_count": 41
    },
    "00466fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.00466fc4(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 1 + *(in_EAX + 1) + 1;\n}\n",
        "token_count": 46
    },
    "00466ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.00466ff8(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 9 + *(in_EAX + 9) + 1;\n}\n",
        "token_count": 46
    },
    "00467020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467020(void)\n\n{\n    int32_t in_EAX;\n    \n    return CONCAT44(in_EAX + 6, in_EAX + 6);\n}\n",
        "token_count": 39
    },
    "0046702c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.0046702c(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 6 + *(in_EAX + 6) + 1;\n}\n",
        "token_count": 46
    },
    "00467060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.00467060(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 6 + *(in_EAX + 6) + 1;\n}\n",
        "token_count": 45
    },
    "004670fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.004670fc(void)\n\n{\n    uint8_t *in_EAX;\n    \n    return in_EAX + *in_EAX + 1;\n}\n",
        "token_count": 39
    },
    "00467130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.00467130(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 9 + *(in_EAX + 9) + 1;\n}\n",
        "token_count": 45
    },
    "0046717c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.0046717c(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 10 + *(in_EAX + 10) + 1;\n}\n",
        "token_count": 46
    },
    "004671dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.004671dc(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 0x10 + *(in_EAX + 0x10) + 5;\n}\n",
        "token_count": 49
    },
    "00467208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467208(void)\n\n{\n    int32_t in_EAX;\n    \n    return CONCAT44(in_EAX + 0x1a, in_EAX + 0x1a);\n}\n",
        "token_count": 45
    },
    "00467214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * fcn.00467214(void)\n\n{\n    int32_t in_EAX;\n    \n    return in_EAX + 0x1a + *(in_EAX + 0x1a) + 1;\n}\n",
        "token_count": 51
    },
    "0046723c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046723c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00466f58(in_EAX + 0x1a);\n    return;\n}\n",
        "token_count": 43
    },
    "004676f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t fcn.004676f4(void)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t auStack2316 [248];\n    uchar auStack2068 [1024];\n    uchar auStack1044 [1032];\n    \n    iVar1 = *in_EAX + 1;\n    puVar2 = auStack2316;\n    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040c738(auStack2316[0]);\n    fcn.0040c738(0xffffffff);\n    iVar1 = func_0x0040e0b0(0x400, 1, auStack2068, 0xffffffff, auStack1044, 0xffffffff);\n    return iVar1 - 2U & 0xffffff00 | iVar1 - 2U == 0;\n}\n",
        "token_count": 242
    },
    "00467a58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00467a58(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    code *pcVar2;\n    \n    pcVar2 = *(param_2 + 0xc);\n    if ((pcVar2 & 0xffffff00) != 0) {\n        if (*(param_2 + 0xf) < 0xfe) {\n            uVar1 = (*pcVar2)();\n            return uVar1;\n        }\n        if (*(param_2 + 0xf) != 0xff) {\n            uVar1 = (**(pcVar2 + *in_EAX))();\n            return uVar1;\n        }\n        pcVar2 = *((pcVar2 & 0xffffff) + in_EAX);\n    }\n    return in_EAX & 0xffffff00 | pcVar2 & 0xff;\n}\n",
        "token_count": 200
    },
    "0046837c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046837c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.004080ac();\n    }\n    else if (*(param_2 + 7) < 0xfe) {\n        (**(param_2 + 4))();\n    }\n    else {\n        (**(*(param_2 + 4) + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004683c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004683c0(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 331
    },
    "00468414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468414(void)\n\n{\n    fcn.0046837c(0xff);\n    fcn.00408170();\n    return;\n}\n",
        "token_count": 35
    },
    "00468444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468444(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.00407e9c();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 116
    },
    "004686b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004686b4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffedc;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x46876b;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    cVar1 = ***param_2;\n    if (cVar1 == '\\x05') {\n        fcn.004085ec();\n        in_stack_fffffedc = 0x468716;\n        fcn.004683c0();\n    }\n    else if (cVar1 == '\\n') {\n        in_stack_fffffedc = 0x468741;\n        puStack280 = &stack0xfffffffc;\n        fcn.0046853c();\n    }\n    else if (cVar1 == '\\v') {\n        puStack280 = &stack0xfffffffc;\n        fcn.004085dc();\n        in_stack_fffffedc = 0x468734;\n        fcn.00468870();\n    }\n    else {\n        puStack280 = &stack0xfffffffc;\n        if (cVar1 == '\\x12') {\n            puStack280 = &stack0xfffffffc;\n            fcn.00469bd8(param_1);\n            in_stack_fffffedc = param_1;\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffedc;\n    uStack284 = 0x468772;\n    uStack288 = 0x46876a;\n    fcn.00407a68();\n    return;\n}\n",
        "token_count": 397
    },
    "004688f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.004688f0(void)\n\n{\n    uchar *puVar1;\n    float10 fVar2;\n    float10 fStack20;\n    \n    puVar1 = fcn.00467260();\n    // switch table (5 cases) at 0x468915\n    switch(*puVar1) {\n    case 0:\n        fStack20 = fcn.00469d5c();\n        break;\n    case 1:\n        fStack20 = fcn.00469e54();\n        break;\n    case 2:\n        fStack20 = fcn.00469f5c();\n        break;\n    case 3:\n        fStack20 = fcn.0046a084();\n        break;\n    case 4:\n        fVar2 = fcn.0046a18c();\n        fStack20 = fVar2 / *0x4689ac;\n        break;\n    default:\n        fStack20 = fStack20 & 0;\n    }\n    return fStack20;\n}\n",
        "token_count": 218
    },
    "004689b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004689b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    double dVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = fcn.00467260();\n    // switch table (5 cases) at 0x4689d8\n    switch(*puVar3) {\n    case 0:\n        fcn.00469ddc(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n        break;\n    case 1:\n        dVar1 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n        fcn.00469ed8(SUB84(dVar1, 0), dVar1 >> 0x20);\n        break;\n    case 2:\n        fcn.00469fec(arg_8h, arg_ch, arg_10h);\n        break;\n    case 3:\n        iVar2 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n        fcn.0046a108(iVar2, iVar2 >> 0x20);\n        break;\n    case 4:\n        iVar2 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x468a84);\n        fcn.0046a210(iVar2, iVar2 >> 0x20);\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00468a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468a9c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.00468a88();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 117
    },
    "00468adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468adc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00468a88();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "004696bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004696bc(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = puVar3[1];\n        *param_1 = *puVar3;\n        param_1[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 183
    },
    "004696fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004696fc(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 195
    },
    "00469734": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00469734(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        return *(in_EAX + (pcVar1 & 0xffffff));\n    }\n    if (0xfd < *(param_2 + 7)) {\n        uVar2 = (**(pcVar1 + *in_EAX))();\n        return uVar2;\n    }\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "0046975c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046975c(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00469a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469a50(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.00407e9c();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00469ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469ad4(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 8);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.00407e9c();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00469b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469b54(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.00407e00();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00469bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469bd8(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 8);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.00407e00();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00469c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469c58(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.00407e74();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "00469cdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469cdc(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 8);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.00407e74();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00469d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00469d5c(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    float10 fVar2;\n    float fStack20;\n    \n    pcVar1 = *(param_1 + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fStack20 = *((pcVar1 & 0xffffff) + param_2);\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*param_2 + (pcVar1 & 0xffff));\n        }\n        if (*(param_1 + 0x10) == -0x80000000) {\n            fVar2 = (*pcVar1)();\n            fStack20 = fVar2;\n        }\n        else {\n            fVar2 = (*pcVar1)();\n            fStack20 = fVar2;\n        }\n    }\n    return fStack20;\n}\n",
        "token_count": 225
    },
    "00469ddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469ddc(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 8);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        *((pcVar1 & 0xffffff) + in_EDX) = arg_8h;\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)(arg_8h);\n        }\n        else {\n            (*pcVar1)(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00469e54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00469e54(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    float10 fVar2;\n    double dStack24;\n    \n    pcVar1 = *(param_1 + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        dStack24 = *((pcVar1 & 0xffffff) + param_2);\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*param_2 + (pcVar1 & 0xffff));\n        }\n        if (*(param_1 + 0x10) == -0x80000000) {\n            fVar2 = (*pcVar1)();\n            dStack24 = fVar2;\n        }\n        else {\n            fVar2 = (*pcVar1)();\n            dStack24 = fVar2;\n        }\n    }\n    return dStack24;\n}\n",
        "token_count": 224
    },
    "00469ed8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469ed8(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = *(in_ECX + 8);\n    if ((pcVar2 & 0xff000000) == 0xff000000) {\n        puVar1 = (pcVar2 & 0xffffff) + in_EDX;\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n    }\n    else {\n        if ((pcVar2 & 0xff000000) == 0xfe000000) {\n            pcVar2 = *(*in_EDX + (pcVar2 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar2)(arg_8h, arg_ch);\n        }\n        else {\n            (*pcVar2)(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00469f5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 __fastcall fcn.00469f5c(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    unkbyte10 Stack28;\n    \n    pcVar1 = *(param_1 + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        Stack28 = *((pcVar1 & 0xffffff) + param_2);\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*param_2 + (pcVar1 & 0xffff));\n        }\n        if (*(param_1 + 0x10) == -0x80000000) {\n            Stack28 = (*pcVar1)();\n        }\n        else {\n            Stack28 = (*pcVar1)();\n        }\n    }\n    return Stack28;\n}\n",
        "token_count": 198
    },
    "00469fec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469fec(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = *(in_ECX + 8);\n    if ((pcVar2 & 0xff000000) == 0xff000000) {\n        puVar1 = (pcVar2 & 0xffffff) + in_EDX;\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        *(puVar1 + 2) = arg_10h;\n    }\n    else {\n        if ((pcVar2 & 0xff000000) == 0xfe000000) {\n            pcVar2 = *(*in_EDX + (pcVar2 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar2)(arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            (*pcVar2)(arg_8h, arg_ch, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0046a084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.0046a084(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    float10 fVar2;\n    int64_t iStack24;\n    \n    pcVar1 = *(param_1 + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        iStack24 = *((pcVar1 & 0xffffff) + param_2);\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*param_2 + (pcVar1 & 0xffff));\n        }\n        if (*(param_1 + 0x10) == -0x80000000) {\n            fVar2 = (*pcVar1)();\n            iStack24 = ROUND(fVar2);\n        }\n        else {\n            fVar2 = (*pcVar1)();\n            iStack24 = ROUND(fVar2);\n        }\n    }\n    return iStack24;\n}\n",
        "token_count": 228
    },
    "0046a108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a108(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = *(in_ECX + 8);\n    if ((pcVar2 & 0xff000000) == 0xff000000) {\n        puVar1 = (pcVar2 & 0xffffff) + in_EDX;\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n    }\n    else {\n        if ((pcVar2 & 0xff000000) == 0xfe000000) {\n            pcVar2 = *(*in_EDX + (pcVar2 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar2)(arg_8h, arg_ch);\n        }\n        else {\n            (*pcVar2)(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0046a210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a210(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = *(in_ECX + 8);\n    if ((pcVar2 & 0xff000000) == 0xff000000) {\n        puVar1 = (pcVar2 & 0xffffff) + in_EDX;\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n    }\n    else {\n        if ((pcVar2 & 0xff000000) == 0xfe000000) {\n            pcVar2 = *(*in_EDX + (pcVar2 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar2)(arg_8h, arg_ch);\n        }\n        else {\n            (*pcVar2)(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0046a294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a294(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 4);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.0040b494();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0046a318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a318(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *(in_ECX + 8);\n    if ((pcVar1 & 0xff000000) == 0xff000000) {\n        fcn.0040b494();\n    }\n    else {\n        if ((pcVar1 & 0xff000000) == 0xfe000000) {\n            pcVar1 = *(*in_EDX + (pcVar1 & 0xffff));\n        }\n        if (*(in_ECX + 0x10) == -0x80000000) {\n            (*pcVar1)();\n        }\n        else {\n            (*pcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0046a9dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046a9dc(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    LOCK();\n    piVar1 = arg_8h + 8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    return iVar2 + 1;\n}\n",
        "token_count": 88
    },
    "0046a9f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046a9f4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    LOCK();\n    piVar1 = arg_8h + 8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 == 0) {\n        fcn.0040540c();\n    }\n    return iVar2 + -1;\n}\n",
        "token_count": 113
    },
    "0046acac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046acac(float param_1)\n\n{\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004329dc(param_1);\n    fcn.00432524();\n    fcn.00432524();\n    return;\n}\n",
        "token_count": 61
    },
    "0046ad54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046ad54(double param_1)\n\n{\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004329dc(param_1);\n    fcn.00432524();\n    fcn.00432524();\n    return;\n}\n",
        "token_count": 61
    },
    "0046ae00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ae00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004329dc(arg_8h, arg_ch, arg_10h);\n    fcn.00432524();\n    fcn.00432524();\n    return;\n}\n",
        "token_count": 83
    },
    "0046b8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b8f0(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_14h < arg_ch) || ((arg_14h == arg_ch && (arg_10h < arg_8h)))) {\n        uVar1 = 0xffffffff;\n    }\n    else if ((arg_ch < arg_14h) || ((arg_14h == arg_ch && (arg_8h < arg_10h)))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 185
    },
    "0046bbf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046bbf4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x46bc73;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x46bc42;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0042e9b0();\n    fcn.0046b8cc();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46bc7a;\n    uStack32 = 0x46bc72;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 243
    },
    "00484c3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00484c3c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x484c9c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0x11;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.0040c9f0();\n    fcn.0041f2b8(arg_8h, arg_ch);\n    fcn.0040711c();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x484ca3;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 236
    },
    "0048a82c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0048a82c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.0049e890();\n    *(in_EAX + 8) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "0048a924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0048a924(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar2 = 0;\n    uVar1 = fcn.0049fedc(0);\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 8) = 100;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0048bf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0048bf10(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *in_EDX;\n    uint *in_FS_OFFSET;\n    ulong uVar6;\n    ulong uVar7;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*in_EDX != *in_EAX) {\ncode_r0x0048c01c:\n        return var_1h;\n    }\n    puStack32 = 0x48bf3a;\n    puStack32 = fcn.0048d1d8();\n    uStack36 = 0x48bf42;\n    iVar2 = fcn.0048d1d8();\n    if (puStack32 != iVar2) goto code_r0x0048c01c;\n    puStack32 = 0x48bf57;\n    puVar3 = fcn.00405cb8();\n    uStack36 = 0x48c015;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x48bf74;\n    puStack32 = &fcn.0048bf10::var_1h + 1;\n    fcn.0048bea4();\n    puStack44 = 0x48bf80;\n    puVar4 = fcn.00405cb8();\n    uStack48 = 0x48bff8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &fcn.0048bf10::var_1h + 1;\n    fcn.0048bea4();\n    uVar6 = (***puVar3)();\n    uVar7 = (***puVar4)();\n    if (uVar7 >> 0x20 == uVar6 >> 0x20 && uVar7 == uVar6) {\n        (***puVar3)();\n        cVar1 = fcn.004196ec();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x0048bfdf;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0048bfdf:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x48bfff;\n    uStack48 = 0x48bff7;\n    uVar5 = fcn.00405ce8();\n    return uVar5;\n}\n",
        "token_count": 678
    },
    "0048c0b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c0b4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.0048c154();\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004055b4();\n    }\n    if ((iVar1 != 0) && (*in_EAX != *0x46c734)) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0048c11c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0048c11c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "0048c154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0048c154(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x48c1bc;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    var_ch._0_1_ = 0;\n    puVar7 = &var_10h;\n    uStack76 = 0;\n    var_4h = param_2;\n    fcn.0040c9f0();\n    iStack72 = fcn.0041f2b8(uStack76, puVar7);\n    if (iStack72 == 0) {\n        iStack72 = fcn.0040788c();\n    }\n    uStack68 = 0;\n    puVar6 = &uStack76;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack76;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack76, uStack76, 7, uStack76, iStack72, 0);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 537
    },
    "0048c388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0048c388(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.0049a4c4();\n    *(in_EAX + 0xc) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0048c500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c500(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x48c5a4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48c52e;\n    piVar1 = fcn.0049a59c();\n    uStack44 = 0x48c587;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((param_2 < 0) || (puStack40 = &stack0xfffffffc,  piVar1[2] <= param_2)) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040c9f0();\n        (**(*piVar1 + 0xc))();\n    }\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x48c58e;\n    uStack44 = 0x48c586;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 329
    },
    "0048c610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c610(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack16 = 0x48c624;\n    iVar1 = fcn.0049a59c();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    var_8h = *(iVar1 + 8);\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x48c65b;\n    uStack20 = 0x48c653;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 167
    },
    "0048c67c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c67c(char param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c696;\n    fcn.0049a59c();\n    uStack36 = 0x48c6e8;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (param_1 == '\\0') {\n        puStack32 = &stack0xfffffffc;\n        fcn.00431368();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        fcn.00431414();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c6ef;\n    uStack36 = 0x48c6e7;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 235
    },
    "0048c6f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c6f8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c710;\n    fcn.0049a59c();\n    uStack36 = 0x48c765;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0043112c();\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c76c;\n    uStack36 = 0x48c764;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 200
    },
    "0048c778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048c778(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c793;\n    fcn.0049a59c();\n    uStack36 = 0x48c7e4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00431464();\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c7eb;\n    uStack36 = 0x48c7e3;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 194
    },
    "0048c850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c850(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x48c8f4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48c87e;\n    piVar1 = fcn.0049a59c();\n    uStack44 = 0x48c8d7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((param_2 < 0) || (puStack40 = &stack0xfffffffc,  piVar1[2] <= param_2)) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040c9f0();\n        (**(*piVar1 + 0xc))();\n    }\n    fcn.0040b494();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x48c8de;\n    uStack44 = 0x48c8d6;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 333
    },
    "0048ca18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048ca18(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x48ca2d;\n    fcn.0049a59c();\n    uStack20 = 0x48ca61;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.004323f0();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x48ca68;\n    uStack20 = 0x48ca60;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 170
    },
    "0048ca6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048ca6c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x48ca86;\n    fcn.0049a59c();\n    uStack28 = 0x48cac2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.004311bc();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x48cac9;\n    uStack28 = 0x48cac1;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 176
    },
    "0048cb28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0048cb28(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x48cbc0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    if (param_2 == 0) {\n        fcn.00407e48();\n    }\n    else {\n        puStack40 = &stack0xfffffffc;\n        fcn.00405be8();\n    }\n    var_14h = var_4h;\n    var_10h._0_1_ = 0x11;\n    fcn.00405be8();\n    var_ch = 0;\n    var_8h._0_1_ = 0x11;\n    uVar1 = 1;\n    fcn.0041f374(1, &var_14h);\n    fcn.0040711c();\n    *in_FS_OFFSET = uVar1;\n    uStack48 = 0x48cbc7;\n    fcn.00407a20();\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 344
    },
    "0048ce68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0048ce68(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uStack4;\n    \n    if (*(in_EAX + 4) != 0) {\n        iVar1 = *(*(in_EAX + 4) + 8);\n        uVar2 = fcn.004312bc();\n        return CONCAT44(iVar1 + 4, uVar2);\n    }\n    return CONCAT44(uStack4, 0xffffffff);\n}\n",
        "token_count": 114
    },
    "0048d59c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nulong fcn.0048d59c(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x28))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 57
    },
    "0048d688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048d688(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x48d6ee;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00405be8();\n    var_8h = var_ch;\n    var_4h._0_1_ = 0x11;\n    uVar1 = 0;\n    fcn.0041f374(0, &var_8h);\n    fcn.0040711c();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x48d6f5;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 237
    },
    "0048d85c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048d85c(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 46
    },
    "0048da7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048da7c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (**(*in_EAX + 0x18))(arg_8h);\n    if (iVar1 < 0) {\n        fcn.0041f338();\n        fcn.0040711c();\n    }\n    while (iVar1 < arg_8h) {\n        iVar2 = (**(*in_EAX + 0x18))(arg_8h - iVar1);\n        if (iVar2 < 1) {\n            fcn.0041f338();\n            fcn.0040711c();\n        }\n        else {\n            iVar1 = iVar1 + iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0048db5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048db5c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x48db77;\n    fcn.00409da4();\n    uStack28 = 0x48dbdc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(in_EAX + 0xc);\n    if (((-1 < iVar1) && (-1 < arg_8h)) && (iVar2 = *(in_EAX + 8),  iVar1 < iVar2)) {\n        if (iVar2 <= iVar1 + arg_8h) {\n            arg_8h = iVar2 - iVar1;\n        }\n        puStack24 = &stack0xfffffffc;\n        fcn.004055b4();\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_8h;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x48dbe3;\n    uStack28 = 0x48dbdb;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 316
    },
    "0048dbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0048dbf0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_DL == '\\0') {\n        *(in_EAX + 0xc) = arg_8h;\n    }\n    else if (in_DL == '\\x01') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_8h;\n    }\n    else if (in_DL == '\\x02') {\n        *(in_EAX + 0xc) = *(in_EAX + 8) + arg_8h;\n    }\n    return *(in_EAX + 0xc);\n}\n",
        "token_count": 170
    },
    "0048f1a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0048fab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048fab0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x48fb33;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040b47c();\n    if (param_2 != 0) {\n        fcn.00467260();\n        fcn.004671a4();\n        fcn.0040b47c();\n        cVar1 = fcn.0042114c();\n        if (cVar1 == '\\0') {\n            fcn.0040b47c();\n        }\n    }\n    fcn.004697b4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48fb3a;\n    uStack40 = 0x48fb32;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 261
    },
    "0049036c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049036c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iVar4 = *param_2;\n    do {\n        if (iVar4 == *0x46d810) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar3 = fcn.00484ca8();\n            }\n            else {\n                uVar3 = fcn.00484b90();\n            }\n            return uVar3;\n        }\n        piVar2 = fcn.00484c30();\n        if ((piVar2 != NULL) && (iVar4 = *piVar2,  -1 < iVar4 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar3 = **(piVar2 + iStack20 * 2 + 1);\n                cVar1 = fcn.00405c00();\n                if (cVar1 != '\\0') {\n                    return uVar3;\n                }\n                iStack20 = iStack20 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        iVar4 = fcn.00405c7c();\n    } while( true );\n}\n",
        "token_count": 315
    },
    "0049043c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049043c(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (0 < param_1) {\n        do {\n            iVar1 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n            if (iVar1 == 0) {\n                fcn.00490588(param_2);\n                iVar1 = *(in_EAX + 0x14);\n            }\n            if (param_1 <= iVar1) {\n                iVar1 = param_1;\n            }\n            fcn.004055b4();\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + iVar1;\n            param_1 = param_1 - iVar1;\n        } while (0 < param_1);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00490490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00490490(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4904ac;\n    fcn.00409da4();\n    uStack32 = 0x49051d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (0 < arg_8h) {\n        do {\n            iVar1 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n            if (iVar1 == 0) {\n                fcn.00490588();\n                iVar1 = *(in_EAX + 0x14);\n            }\n            if (arg_8h <= iVar1) {\n                iVar1 = arg_8h;\n            }\n            fcn.004055b4();\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + iVar1;\n            arg_8h = arg_8h - iVar1;\n        } while (0 < arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x490524;\n    uStack32 = 0x49051c;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 345
    },
    "0049064c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049064c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x49065f;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x4906f2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.00490008();\n    if (cVar1 == '\\0') {\n        fcn.0048d11c();\n    }\n    while( true ) {\n        cVar1 = fcn.00490008();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.00490418();\n        if (cVar1 - 2U < 3) {\n            fcn.00491238();\n        }\n        fcn.0048d018();\n        fcn.0048fe70();\n        while( true ) {\n            cVar1 = fcn.00490008();\n            if (cVar1 != '\\0') break;\n            fcn.00491414();\n        }\n        fcn.0048fe70();\n    }\n    fcn.0048fe70();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4906f9;\n    uStack24 = 0x4906f1;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 370
    },
    "00490e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00490e24(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x490e46;\n        cVar3 = fcn.00490008();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x490e3e;\n        fcn.00491414();\n    }\n    puStack32 = 0x490e54;\n    fcn.0048fe70();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x490e71;\n    uVar4 = fcn.00405fd0();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x490eea;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.00405fd0();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.00490008();\n        if (cVar3 != '\\0') break;\n        fcn.00490b50();\n    }\n    fcn.0048fe70();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 459
    },
    "00490f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00490f30(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.00492038();\n    if (cVar2 == '\\x15') {\n        fcn.0049043c();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004912a4();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 134
    },
    "00490f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00490f74(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.00492038();\n    if (cVar2 == '\\x0f') {\n        fcn.0049043c();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004912a4();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 135
    },
    "00490fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00490fb8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack28;\n    uint uStack20;\n    uint uStack16;\n    \n    cVar2 = fcn.00492038();\n    if (cVar2 == '\\x10') {\n        fcn.0049043c();\n        iStack28 = CONCAT44(uStack16, uStack20);\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004912a4();\n        iStack28 = ROUND(iVar1 * *0x491014);\n    }\n    return iStack28;\n}\n",
        "token_count": 171
    },
    "00491018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00491018(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack28;\n    uint uStack20;\n    uint uStack16;\n    \n    cVar2 = fcn.00492038();\n    if (cVar2 == '\\x11') {\n        fcn.0049043c();\n        dStack28 = CONCAT44(uStack16, uStack20);\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.004912a4();\n        dStack28 = iVar1;\n    }\n    return dStack28;\n}\n",
        "token_count": 160
    },
    "00491238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00491238(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.00492038();\n    if (cVar1 == '\\x02') {\n        fcn.0049043c();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0049043c();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0049043c();\n    }\n    else {\n        fcn.0048fde8();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 187
    },
    "004912a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004912a4(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.00490418();\n    if (cVar1 == '\\x13') {\n        fcn.00492038();\n        fcn.0049043c();\n    }\n    else {\n        iStack12 = fcn.00491238();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 123
    },
    "004916c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004916c8(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.00486698();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.004681a0();\n        return;\n    }\n    fcn.0048fde8();\n    return;\n}\n",
        "token_count": 110
    },
    "00491710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00491710(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0048f9e8();\n    fcn.00431524();\n    return;\n}\n",
        "token_count": 55
    },
    "0049236c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0049236c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0049236c::var_1h + 1;\n    uStack36 = 0x492408;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0049236c::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.00491c60();\n        fcn.00491c60();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.00490008();\n        if (cVar2 != '\\0') break;\n        fcn.00492324();\n        puVar1 = puStack32;\n    }\n    fcn.0048fe70();\n    while( true ) {\n        cVar2 = fcn.00490008();\n        if (cVar2 != '\\0') break;\n        fcn.0049236c();\n    }\n    fcn.0048fe70();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x49240f;\n    uStack36 = 0x492407;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 405
    },
    "00492584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00492584(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x492609;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00409c00(0x100);\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.00490530();\n                param_2 = 0;\n            }\n            else {\n                fcn.00490530();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x492610;\n    uStack24 = 0x492608;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 243
    },
    "00492618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492618(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4927af;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x492644;\n    fcn.0048fe70();\n    puStack52 = 0x492655;\n    fcn.00405cb8();\n    uStack56 = 0x49278a;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405cb8();\n    fcn.0049043c();\n    fcn.0048d620(var_18h, var_18h >> 0x1f);\n    fcn.0049043c();\n    puStack76 = 0x4926be;\n    fcn.0048deb0(0x400);\n    uStack80 = 0x492765;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.00491d4c();\n    fcn.0049043c();\n    fcn.0048d620(var_18h, var_18h >> 0x1f);\n    fcn.0049043c();\n    cVar1 = fcn.00430a6c();\n    if (cVar1 != '\\0') {\n        fcn.0040b47c();\n        cVar1 = fcn.0042114c();\n        if (cVar1 != '\\0') goto code_r0x00492738;\n    }\n    fcn.0048d57c();\ncode_r0x00492738:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x49276c;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 609
    },
    "00492a68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00492a68(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.0048d59c();\n    return iVar1 + *(in_EAX + 0x10);\n}\n",
        "token_count": 59
    },
    "00492b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00492b1c(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (0 < param_1) {\n        do {\n            iVar1 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n            if (iVar1 == 0) {\n                fcn.00492bf4(param_2);\n                iVar1 = *(in_EAX + 0xc);\n            }\n            if (param_1 <= iVar1) {\n                iVar1 = param_1;\n            }\n            fcn.004055b4();\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + iVar1;\n            param_1 = param_1 - iVar1;\n        } while (0 < param_1);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00492b6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492b6c(code *arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x492b81;\n    puVar1 = fcn.00405cb8();\n    uStack24 = 0x492be3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (*arg_8h)();\n    fcn.004955fc();\n    (***puVar1)();\n    fcn.00492b1c();\n    fcn.00492b1c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x492bea;\n    uStack24 = 0x492be2;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 232
    },
    "00492e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00492e50(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x20);\n    *(in_EAX + 0x20) = 0;\n    uStack32 = 0x492ee5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.004955fc();\n    if ((param_2 != 0) && (iVar2 = *(*(param_2 + 8) + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.004955fc();\n            fcn.0048d1e0();\n            fcn.004937d0();\n            fcn.004955fc();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004955fc();\n    *in_FS_OFFSET = uStack36;\n    *(in_EAX + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 306
    },
    "00492ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00492ef4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *(*(*(arg_8h + -4) + 0x30) + 8);\n    if (-1 < var_8h + -1) {\n        uVar3 = 0;\n        do {\n            iVar1 = *(*(arg_8h + -4) + 0x30);\n            if (*(iVar1 + 8) <= uVar3) {\n                fcn.00431010();\n            }\n            iVar1 = *(*(iVar1 + 4) + uVar3 * 4);\n            iVar2 = *(iVar1 + 8);\n            if (iVar2 == in_EAX) {\n                bVar4 = true;\n            }\n            else if ((iVar2 == 0) || (in_EAX == 0)) {\n                bVar4 = false;\n            }\n            else {\n                iVar2 = fcn.00419780();\n                bVar4 = iVar2 == 0;\n            }\n            if (bVar4) {\n                return iVar1;\n            }\n            uVar3 = uVar3 + 1;\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "004934e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004934e0(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004955fc();\n    fcn.00492b1c();\n    return;\n}\n",
        "token_count": 55
    },
    "00493518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00493518(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004955fc();\n    fcn.00492b1c();\n    return;\n}\n",
        "token_count": 58
    },
    "00493ef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00493ef8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    bool bVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + 4) != *(arg_8h + -0x14))) || (in_EDX == 0)) ||\n       (*(in_EDX + 4) != *(arg_8h + -0x18))) {\n        bVar2 = false;\n    }\n    else if (*(in_EAX + 8) == *(in_EDX + 8)) {\n        bVar2 = true;\n    }\n    else if ((*(in_EAX + 8) == 0) || (*(in_EDX + 8) == 0)) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = fcn.00419780();\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 239
    },
    "00494518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494518(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x49456e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    var_4h = fcn.00467208();\n    fcn.00466f58();\n    fcn.00495394();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x494575;\n    uStack20 = 0x49456d;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 189
    },
    "0049467c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049467c(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x494712;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStackY32 = 0x49469b;\n    fcn.00494518(arg_8h);\n    fcn.00407e48();\n    uStackY32 = 0x4946f5;\n    uStackY36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00407a20();\n    fcn.00492e50();\n    *in_FS_OFFSET = uStackY36;\n    uStackY32 = 0x4946f4;\n    fcn.00407e00();\n    return;\n}\n",
        "token_count": 238
    },
    "00494818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494818(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.004688f0();\n    fcn.00494518(arg_8h);\n    fcn.00493498(arg_8h_00);\n    return;\n}\n",
        "token_count": 92
    },
    "00494858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00494858(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00469734();\n    fcn.00494518(arg_8h);\n    fcn.00493730(uVar1, uVar1 >> 0x20);\n    return;\n}\n",
        "token_count": 86
    },
    "00495718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00495718(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0xc) = 1;\n    fcn.004972bc();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 162
    },
    "004972bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004972bc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.004972f4(0);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 139
    },
    "004974e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004974e4(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x497554;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        fcn.0041dfc8();\n        var_10h = 0;\n        var_ch._0_1_ = 0x11;\n        var_4h._0_1_ = 0;\n        in_stack_ffffffd0 = 1;\n        var_8h = param_2;\n        fcn.0041f374(1, &var_10h);\n        fcn.0040711c();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x49755b;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 329
    },
    "00497948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00497948(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x49795f;\n    fcn.00408bb4();\n    uStack40 = 0x4979b6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040b47c();\n    uVar1 = 0;\n    fcn.0049777c(0);\n    *in_FS_OFFSET = uVar1;\n    uStack40 = 0x4979bd;\n    uStack44 = 0x4979b5;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 232
    },
    "00497a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "suspend thread"
        ],
        "decompiled_code": "\nvoid fcn.00497a9c(void)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x497aea;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    *(in_EAX + 0xf) = 1;\n    uVar1 = *(in_EAX + 8);\n    sub.kernel32.dll_SuspendThread();\n    fcn.00497560();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 162
    },
    "00498a94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00498a94(void)\n\n{\n    fcn.00498a0c();\n    fcn.00432040();\n    return;\n}\n",
        "token_count": 34
    },
    "00499648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00499648(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    \n    ppiVar4 = *0x4c1c3c;\n    ppiVar6 = NULL;\n    if (*0x4c1c3c != NULL) {\n        do {\n            ppiVar1 = *ppiVar4;\n            iVar3 = fcn.00499618();\n            ppiVar5 = ppiVar4;\n            ppiVar2 = *0x4c1c3c;\n            if (iVar3 == 0x13a) {\n                fcn.004995d8();\n                func_0x0040e3a8(ppiVar4, 0, 0x8000);\n                ppiVar5 = ppiVar6;\n                ppiVar2 = ppiVar1;\n                if (ppiVar6 != NULL) {\n                    *ppiVar6 = ppiVar1;\n                    ppiVar2 = *0x4c1c3c;\n                }\n            }\n            *0x4c1c3c = ppiVar2;\n            ppiVar4 = ppiVar1;\n            ppiVar6 = ppiVar5;\n        } while (ppiVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "004996ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004996ac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.0049bc88();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "004999c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004999c0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t **var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = NULL;\n    var_8h = NULL;\n    uStack56 = 0x499aef;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_ch = param_2;\n    fcn.0048c388();\n    fcn.0040b494();\n    fcn.0040b47c();\n    cVar1 = fcn.0049bf34();\n    if ((cVar1 != '\\0') && (iVar2 = (**(*var_4h + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(*var_4h + 0xc))();\n            fcn.0040b47c(var_14h);\n            cVar1 = fcn.00421124();\n            if ((cVar1 != '\\0') && (cVar1 = (**(*var_8h + 0x10))(),  cVar1 != '\\0')) {\n                (**(*var_4h + 0xc))();\n                (**(**var_10h + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(**var_10h + 0x14))();\n    if (iVar2 == 0) {\n        var_20h = var_ch;\n        var_1ch._0_1_ = 0;\n        fcn.0041f374(0, &fcn.004999c0::var_20h);\n        fcn.0040711c();\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x499af6;\n    uStack56 = 0x499ade;\n    fcn.00408d08();\n    uStack56 = 0x499ae6;\n    fcn.0040b47c();\n    uStack56 = 0x499aee;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 609
    },
    "00499e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499e60(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x499eef;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = in_ECX + 1;\n    if (-1 < in_ECX) {\n        do {\n            fcn.0040b47c();\n            cVar1 = fcn.0049bf34();\n            if (cVar1 != '\\0') {\n                (**(_pe_dos_header + 0x44))();\n                iVar2 = (**(_pe_dos_header + 0x14))();\n                if (iVar2 == 0) {\n                    fcn.0049be04();\n                    fcn.0040b47c();\n                }\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x499ef6;\n    uStack32 = 0x499eee;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 323
    },
    "0049a12c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a12c(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0049a1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a1b4(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x49a22d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00409d24();\n    fcn.00409c00(1);\n    _pe_dos_header = *param_2;\n    *0x4 = param_2[1];\n    fcn.00409db4();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49a234;\n    uStack24 = 0x49a22c;\n    fcn.00409d24();\n    return;\n}\n",
        "token_count": 207
    },
    "0049a254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0049a254(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x49a268;\n    (**(*in_EAX + 0xc))();\n    uStack24 = 0x49a2a4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00406c24();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x49a2ab;\n    uStack24 = 0x49a2a3;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 190
    },
    "0049a378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a378(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    do {\n        uVar2 = *(in_EAX + 0x10);\n        LOCK();\n        puVar1 = in_EAX + 0x10;\n        if (uVar2 == *puVar1) {\n            *puVar1 = ~param_1 & uVar2 | param_2;\n            uVar3 = uVar2;\n        }\n        else {\n            uVar3 = *puVar1;\n        }\n    } while (uVar3 != uVar2);\n    return;\n}\n",
        "token_count": 169
    },
    "0049a4c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049a4c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.00405cb8();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.0049a848();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0xc) = 0;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "0049a51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0049a51c(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_5h;\n    \n    puStack16 = 0x49a527;\n    *NULL = fcn.00406358();\n    puStack16 = 0x49a535;\n    var_5h._0_1_ = extraout_DL;\n    fcn.0049a59c();\n    uStack20 = 0x49a581;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405ce8();\n    fcn.00405cd8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x49a588;\n    uStack20 = 0x49a575;\n    fcn.00406868();\n    uStack20 = 0x49a580;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 254
    },
    "0049a848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049a848(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049a880();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0049a880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049a880(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x477270;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049a740();\n    fcn.0049a7a8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0049a914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049a914(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "0049a94c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049a94c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0043112c(param_2, in_EAX + 4);\n    return;\n}\n",
        "token_count": 55
    },
    "0049ac98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049ac98(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049acd0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0049acd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049acd0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4789ec;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049ab90();\n    fcn.0049abf8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0049ad64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049ad64(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "0049ad9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049ad9c(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 38
    },
    "0049b080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049b080(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049b0b8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0049b0b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049b0b8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x479e5c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049af78();\n    fcn.0049afe0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0049b14c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049b14c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "0049b184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049b184(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "0049b468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049b468(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049b4a0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0049b4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049b4a0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x47b26c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049b360();\n    fcn.0049b3c8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "0049b534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049b534(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "0049b56c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049b56c(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 38
    },
    "0049b820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049b820(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.0049b85c();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.0049b85c();\n    return;\n}\n",
        "token_count": 202
    },
    "0049ba48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049ba48(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0049b9a0();\n    *(*(in_EAX + 4) + ~uVar1 * 0xc) = in_EDX;\n    *(*(in_EAX + 4) + 4 + ~uVar1 * 0xc) = in_ECX;\n    fcn.0040b494();\n    return;\n}\n",
        "token_count": 142
    },
    "0049bc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049bc88(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0049bcc0(0);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "0049c890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049c890(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049c8c8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0049c8c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049c8c8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x47e704;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049c788();\n    fcn.0049c7f0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0049c95c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049c95c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "0049c994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049c994(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "0049cc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049cc24(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.0049cc60();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.0049cc60();\n    return;\n}\n",
        "token_count": 200
    },
    "0049ce4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049ce4c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0049cda4();\n    *(*(in_EAX + 4) + ~uVar1 * 0xc) = in_EDX;\n    fcn.00407e00();\n    *(*(in_EAX + 4) + 8 + ~uVar1 * 0xc) = arg_8h;\n    return;\n}\n",
        "token_count": 137
    },
    "0049cf24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049cf24(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0049cf5c(param_1);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = param_1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 145
    },
    "0049d61c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049d61c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 8) = 0xffffffff;\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 180
    },
    "0049d808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049d808(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049d840();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0049d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049d840(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x481ec4;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049d700();\n    fcn.0049d768();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "0049d8d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049d8d4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 423
    },
    "0049d90c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049d90c(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 38
    },
    "0049dc78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049dc78(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049dcb0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0049dcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049dcb0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4832a8;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049db70();\n    fcn.0049dbd8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0049dd44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049dd44(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "0049dd7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049dd7c(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 38
    },
    "0049dea8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049dea8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.00405cb8();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.0049e1fc();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0xc) = 0;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "0049df00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0049df00(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_5h;\n    \n    puStack16 = 0x49df0b;\n    *NULL = fcn.00406358();\n    puStack16 = 0x49df19;\n    var_5h._0_1_ = extraout_DL;\n    fcn.0049df80();\n    uStack20 = 0x49df65;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405ce8();\n    fcn.00405cd8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x49df6c;\n    uStack20 = 0x49df59;\n    fcn.00406868();\n    uStack20 = 0x49df64;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 254
    },
    "0049e1fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049e1fc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0049e234();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "0049e234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049e234(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4851b0;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.0049e0f4();\n    fcn.0049e15c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 190
    },
    "0049e2c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0049e2c8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 423
    },
    "0049e300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049e300(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "0049e590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049e590(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.0049e5cc();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.0049e5cc();\n    return;\n}\n",
        "token_count": 202
    },
    "0049e7b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049e7b8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0049e710();\n    *(*(in_EAX + 4) + ~uVar1 * 0xc) = in_EDX;\n    fcn.00407e00();\n    *(*(in_EAX + 4) + 8 + ~uVar1 * 0xc) = arg_8h;\n    return;\n}\n",
        "token_count": 137
    },
    "0049e890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049e890(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.0049e8c8(param_1);\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = param_1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 146
    },
    "0049f0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0049f0c0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x49f0dc;\n    fcn.004a251c();\n    uStack40 = 0x49f16d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x49f0f3;\n    puStack36 = &stack0xfffffffc;\n    piVar2 = (***in_EAX)();\n    uStack52 = 0x49f145;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = (**(*piVar2 + 4))();\n        if (cVar1 == '\\0') break;\n        (***piVar2)();\n        fcn.004a2620();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x49f14c;\n    if (piVar2 != NULL) {\n        uStack52 = 0x49f144;\n        (**(*piVar2 + -4))();\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0049f17c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0049f17c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    if (param_2 < *(in_EAX + 8)) {\n        fcn.00431010();\n    }\n    if (param_2 == 0) {\n        fcn.0049f1b8();\n        return;\n    }\n    iVar3 = 4;\n    if (4 < param_2) {\n        do {\n            iVar1 = iVar3 * 2;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (param_2 != iVar1 && SBORROW4(param_2, iVar1) == param_2 + iVar2 < 0);\n    }\n    fcn.0049f1b8();\n    return;\n}\n",
        "token_count": 205
    },
    "0049f3a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049f3a4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0049f2fc();\n    uVar1 = ~uVar1;\n    *(*(in_EAX + 4) + uVar1 * 0xc) = in_EDX;\n    *(*(in_EAX + 4) + 4 + uVar1 * 0xc) = in_ECX;\n    *(*(in_EAX + 4) + 8 + uVar1 * 0xc) = arg_8h;\n    return;\n}\n",
        "token_count": 170
    },
    "0049fe00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049fe00(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 8) = 0xffffffff;\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 179
    },
    "0049fedc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0049fedc(uint arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.004062b0();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0049ff28(0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "004a013c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a013c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a0174();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004a0174": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a0174(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x48ae5c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a0034();\n    fcn.004a009c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "004a0208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a0208(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "004a0240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a0240(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "004a02d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a02d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.00405cb8();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.004a0758();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0xc) = 0;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "004a0330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004a0330(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_5h;\n    \n    puStack16 = 0x4a033b;\n    *NULL = fcn.00406358();\n    puStack16 = 0x4a0349;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004a04b0();\n    uStack20 = 0x4a0395;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405ce8();\n    fcn.00405cd8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4a039c;\n    uStack20 = 0x4a0389;\n    fcn.00406868();\n    uStack20 = 0x4a0394;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 259
    },
    "004a0758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a0758(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a0790();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004a0790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a0790(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x48e580;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a0624();\n    fcn.004a068c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "004a0824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a0824(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "004a085c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a085c(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "004a08f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a08f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    uVar1 = fcn.00405cb8();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.004a0d74();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0xc) = 0;\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 210
    },
    "004a094c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004a094c(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_5h;\n    \n    puStack16 = 0x4a0957;\n    *NULL = fcn.00406358();\n    puStack16 = 0x4a0965;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004a0acc();\n    uStack20 = 0x4a09b1;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405ce8();\n    fcn.00405cd8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4a09b8;\n    uStack20 = 0x4a09a5;\n    fcn.00406868();\n    uStack20 = 0x4a09b0;\n    fcn.00405ce8();\n    return;\n}\n",
        "token_count": 262
    },
    "004a0d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a0d74(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a0dac();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004a0dac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a0dac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x495a5c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a0c40();\n    fcn.004a0ca8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "004a0e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a0e40(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "004a0e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a0e78(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 38
    },
    "004a10d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a10d8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a1110();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004a1110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a1110(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4a3268;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a0fd8();\n    fcn.004a103c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 188
    },
    "004a11a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a11a4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "004a11dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a11dc(uint param_1, uint param_2)\n\n{\n    fcn.004315b4(param_2);\n    return;\n}\n",
        "token_count": 38
    },
    "004a1228": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a1228(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    puStack28 = 0x4a1243;\n    fcn.00408bb4();\n    uStack32 = 0x4a1297;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00408f5c();\n    fcn.00408f5c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4a129e;\n    uStack32 = 0x4a1296;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 183
    },
    "004a146c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a146c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a14a4();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004a14a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a14a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4a461c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a1364();\n    fcn.004a13cc();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 188
    },
    "004a1538": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a1538(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "004a1570": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a1570(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "004a1778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a1778(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a17b0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004a17b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a17b0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4a566c;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a1670();\n    fcn.004a16d8();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "004a1844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a1844(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "004a187c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a187c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0043112c(param_2, in_EAX + 4);\n    return;\n}\n",
        "token_count": 54
    },
    "004a1ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a1ae0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a1b18();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "004a1b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a1b18(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4a6a00;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a19e0();\n    fcn.004a1a44();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "004a1bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a1bac(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "004a1be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a1be4(uint param_1, uint param_2)\n\n{\n    fcn.004315b4(param_2);\n    return;\n}\n",
        "token_count": 39
    },
    "004a1c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a1c30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    puStack28 = 0x4a1c4b;\n    fcn.00408bb4();\n    uStack32 = 0x4a1c9f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00408f5c();\n    fcn.00408f5c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4a1ca6;\n    uStack32 = 0x4a1c9e;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 191
    },
    "004a1e88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a1e88(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a1ec0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "004a1ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a1ec0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4a8718;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a1d88();\n    fcn.004a1dec();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "004a1f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a1f54(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "004a1f8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a1f8c(uint param_1, uint param_2)\n\n{\n    fcn.004315b4(param_2);\n    return;\n}\n",
        "token_count": 40
    },
    "004a1fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004a1fd8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    puStack28 = 0x4a1ff3;\n    fcn.00408bb4();\n    uStack32 = 0x4a2047;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00408f5c();\n    fcn.00408f5c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4a204e;\n    uStack32 = 0x4a2046;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 185
    },
    "004a221c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a221c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a2254();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004a2254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a2254(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4a9a38;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a2114();\n    fcn.004a217c();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 188
    },
    "004a22e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a22e8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "004a2320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a2320(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "004a251c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a251c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a2554();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004a2554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a2554(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4aaa90;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a241c();\n    fcn.004a2480();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "004a25e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a25e8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 422
    },
    "004a2620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a2620(uint param_1, uint param_2)\n\n{\n    fcn.00431568(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "004a2850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004a2850(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.004a2888();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004a2888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004a2888(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.00405cb8();\n    *(in_EAX + 0xc) = *0x4abe78;\n    *(in_EAX + 0x10) = in_EAX;\n    fcn.004a2748();\n    fcn.004a27b0();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "004a291c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004a291c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uStack56;\n    int32_t iStack52;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch._0_1_ = 0;\n    uStack56 = 0;\n    var_4h = param_2;\n    iStack52 = fcn.0041f2b8(0, &var_10h);\n    if (iStack52 == 0) {\n        iStack52 = fcn.0040788c();\n    }\n    puVar6 = &uStack56;\n    uVar5 = 7;\n    uVar4 = 1;\n    uVar3 = 0xeedfade;\n    puVar7 = &uStack56;\n    if (*0x4bb024 != NULL) {\n        pcVar2 = *0x4bb024;\n        iVar1 = fcn.004054e8(*0x4bb024, &uStack56, uStack56, 7, uStack56, iStack52);\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 0xc);\n        }\n        (*pcVar2)(0xeedfade, 1, iVar1);\n        puVar7 = puVar6;\n    }\n    // WARNING: Could not recover jumptable at 0x00407182. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4bb01c)(uVar3, uVar4, uVar5, puVar7);\n    return;\n}\n",
        "token_count": 421
    },
    "004a2954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a2954(uint param_1, uint param_2)\n\n{\n    fcn.00431524(param_2);\n    return;\n}\n",
        "token_count": 37
    },
    "004aecd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004aecd0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.004062b0();\n        param_2 = extraout_DL;\n    }\n    fcn.0040b494();\n    if (param_2 != '\\0') {\n        fcn.00406308();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004af60c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "identify system language via API"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.004af60c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    code *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    char in_DL;\n    int32_t iVar5;\n    int32_t var_8h;\n    uint var_1h;\n    \n    *arg_8h = 0;\n    if (in_ECX != 0) {\n        iVar5 = 0;\n        while (cVar1 = (*in_EAX)(),  cVar1 != '\\0') {\n            iVar3 = fcn.00419780();\n            if (iVar3 == 0) {\n                *arg_8h = iVar5;\n                return 2;\n            }\n            iVar5 = iVar5 + 1;\n        }\n    }\n    if (in_DL == '\\0') {\n        uVar2 = fcn.00423164();\n    }\n    else if (in_DL == '\\x01') {\n        uVar2 = sub.kernel32.dll_GetUserDefaultLangID();\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (uVar2 != 0) {\n        iVar5 = 0;\n        while (cVar1 = (*in_EAX)(),  cVar1 != '\\0') {\n            if (*(var_8h + 0x28) == uVar2) {\n                *arg_8h = iVar5;\n                return 1;\n            }\n            iVar5 = iVar5 + 1;\n        }\n        iVar5 = 0;\n        while (cVar1 = (*in_EAX)(),  cVar1 != '\\0') {\n            if ((*(var_8h + 0x28) & 0x3ff) == (uVar2 & 0x3ff)) {\n                if ((uVar2 & 0x3ff) != 4) {\ncode_r0x004af6ed:\n                    *arg_8h = iVar5;\n                    return 1;\n                }\n                iVar3 = fcn.004af5e0();\n                iVar4 = fcn.004af5e0();\n                if (iVar3 == iVar4) goto code_r0x004af6ed;\n            }\n            iVar5 = iVar5 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 539
    },
    "004af714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004af714(void)\n\n{\n    uint arg_8h;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint *puVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x4af7bd;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    arg_8h = sub.kernel32.dll_GetLastError();\n    puVar2 = &var_4h;\n    uVar1 = 0;\n    fcn.00419e30(arg_8h, 0);\n    fcn.00423434(arg_8h, uVar1, puVar2);\n    fcn.00427020(arg_8h);\n    fcn.0041f27c();\n    fcn.0040711c();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00407a80(0x4af7c4);\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 292
    },
    "004afac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004afac4(void)\n\n{\n    int32_t iVar1;\n    uchar *apuStack32 [7];\n    \n    while( true ) {\n        iVar1 = sub.user32.dll_PeekMessageW(apuStack32, 0, 0, 0, 1);\n        if (iVar1 == 0) break;\n        sub.user32.dll_TranslateMessage(apuStack32);\n        apuStack32[0] = apuStack32;\n        sub.user32.dll_DispatchMessageW();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00496f80": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00496f80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x4c1c10);\n    if (iVar1 == 0) {\n        fcn.00496f74();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040768c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nbool fcn.0040768c(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    \n    puVar2 = *in_EAX;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *in_EAX = *puVar2;\n        puVar2 = puVar2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    bVar3 = *0x4b7000 == 0;\n    *0x4b7000 = 0;\n    return bVar3;\n}\n",
        "token_count": 148
    },
    "0041e0c4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0041e0c4(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *puVar6;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar5 = 7;\n    do {\n        var_4h = 0;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    var_1ch = 0x41e3a9;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e0c4::var_20h;\n    var_24h = 1;\n    var_2ch = 0x41e0f0;\n    var_ch = unaff_EBX;\n    iVar5 = func_0x0040e2f8();\n    if (iVar5 == 0) {\n        var_2ch = 0x41e0f9;\n        sub.kernel32.dll_GetThreadLocale();\n    }\n    var_2ch = 0x41e10c;\n    fcn.00409d24();\n    var_2ch = 0x41e115;\n    fcn.0041e7e4();\n    var_2ch = 0x41e11e;\n    fcn.0041e4b8();\n    var_2ch = 0x41e127;\n    fcn.0041e574();\n    var_2ch = &fcn.0041e0c4::var_10h;\n    var_30h = 0x41e139;\n    fcn.0041e04c(var_2ch);\n    var_30h = 0x41e143;\n    fcn.00407e00();\n    var_30h = &fcn.0041e0c4::var_14h;\n    var_34h = 0x41e158;\n    fcn.0041e04c(var_30h);\n    var_34h = 0x41e162;\n    uVar1 = fcn.0041a1dc();\n    *(param_2 + 4) = uVar1;\n    var_34h = &fcn.0041e0c4::var_18h;\n    var_38h = 0x41e17a;\n    fcn.0041e04c(var_34h);\n    var_38h = 0x41e184;\n    uVar1 = fcn.0041a1dc();\n    *(param_2 + 0xc6) = uVar1;\n    var_38h = 0x41e19a;\n    uVar2 = fcn.0041e098();\n    *(param_2 + 0xc0) = uVar2;\n    var_38h = 0x41e1b1;\n    uVar2 = fcn.0041e098();\n    *(param_2 + 0xc2) = uVar2;\n    var_38h = &fcn.0041e0c4::var_1ch;\n    fcn.0041e04c(var_38h);\n    uVar1 = fcn.0041a1dc();\n    *(param_2 + 5) = uVar1;\n    uVar3 = fcn.0041e098();\n    *(param_2 + 6) = uVar3;\n    puVar6 = &fcn.0041e0c4::var_20h;\n    fcn.0041eb30(puVar6);\n    fcn.00407e00(puVar6, uVar3);\n    uVar4 = *(param_2 + 6);\n    puVar6 = &fcn.0041e0c4::var_24h;\n    fcn.0041eb30(puVar6);\n    fcn.00407e00(puVar6, uVar4);\n    uVar2 = fcn.0041e098();\n    *(param_2 + 8) = uVar2;\n    fcn.0041e04c(&fcn.0041e0c4::var_28h);\n    fcn.00407e00();\n    fcn.0041e04c(&fcn.0041e0c4::var_2ch);\n    fcn.00407e00();\n    fcn.00407a20();\n    fcn.00407a20();\n    fcn.0041e04c(&fcn.0041e0c4::var_30h);\n    iVar5 = fcn.0041a1dc();\n    if (iVar5 == 0) {\n        fcn.00407e48();\n    }\n    else {\n        fcn.00407e48();\n    }\n    fcn.0041e04c(&fcn.0041e0c4::var_34h);\n    iVar5 = fcn.0041a1dc();\n    if (iVar5 == 0) {\n        fcn.0041e04c(&fcn.0041e0c4::var_38h);\n        iVar5 = fcn.0041a1dc();\n        if (iVar5 == 0) {\n            fcn.00407e48();\n        }\n        else {\n            fcn.00407e48();\n        }\n    }\n    fcn.004087c4(var_ch, 0x41e494, var_4h, var_8h);\n    fcn.004087c4(var_ch, 0x41e4a8, var_4h, var_8h);\n    uVar2 = fcn.0041e098();\n    *(param_2 + 10) = uVar2;\n    *(param_2 + 0xc4) = 0x32;\n    *in_FS_OFFSET = var_ch;\n    fcn.00407a80(0x41e3b0);\n    return;\n}\n",
        "token_count": 1545
    },
    "0040d72c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d72c(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h == 0) {\n        return 0;\n    }\n    for (; (arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1) {\n        arg_ch = arg_ch + 1;\n    }\n    return *arg_8h - *arg_ch;\n}\n",
        "token_count": 133
    },
    "00423ef0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423ef0(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t in_ECX;\n    \n    uVar1 = fcn.004084ec(*((arg_ch & 0xff) * 4 + 0x4b92e0), *((arg_8h & 0xff) * 4 + 0x4b92ec), 0, \n                         *((in_ECX & 0xff) * 4 + 0x4b92fc), 0x80, 0);\n    sub.kernel32.dll_CreateFileW(uVar1);\n    return;\n}\n",
        "token_count": 146
    },
    "0043da1c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __fastcall fcn.0043da1c(uint param_1, uchar *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint32_t *in_FS_OFFSET;\n    uint var_60h;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0xb;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack32 = 0x43da47;\n    fcn.00408bb4();\n    uStack36 = 0x43dbd0;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0043da1c::var_24h;\n    puStack32 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x43da89\n    switch(*param_2) {\n    case 2:\n        puStack32 = &stack0xfffffffc;\n        fcn.00408c90();\n        var_28h = 0x43dabc;\n        fcn.0043d55c();\n        break;\n    case 5:\n        puStack32 = &stack0xfffffffc;\n        fcn.004560a0();\n        var_28h = 0x43db24;\n        fcn.00408f5c();\n        break;\n    case 10:\n        puStack32 = &stack0xfffffffc;\n        puVar1 = fcn.00466fc4();\n        var_28h = *puVar1;\n        fcn.00408b8c(var_28h);\n        fcn.00408c90();\n        fcn.0043d4a8();\n        break;\n    case 0xb:\n        puStack32 = &stack0xfffffffc;\n        fcn.004082f4();\n        fcn.004560e0();\n        var_28h = 0x43db4e;\n        fcn.00408f5c();\n        break;\n    case 0x12:\n        puStack32 = &stack0xfffffffc;\n        fcn.00408500();\n        fcn.0045610c();\n        var_28h = 0x43db78;\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = var_28h;\n    uStack36 = 0x43dbd7;\n    var_24h = 0x43db95;\n    fcn.00407a20();\n    var_24h = 0x43dba3;\n    fcn.00408c90();\n    var_24h = 0x43dbab;\n    fcn.00407a68();\n    var_24h = 0x43dbb9;\n    fcn.00408c90();\n    var_24h = 0x43dbc7;\n    fcn.00408c90();\n    var_24h = 0x43dbcf;\n    fcn.00407a44();\n    return;\n}\n",
        "token_count": 732
    },
    "0046afe4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046afe4(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (0 < param_1) {\n        do {\n            if (*in_EAX - *param_2 != 0) {\n                return *in_EAX - *param_2;\n            }\n            param_1 = param_1 + -1;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        } while (0 < param_1);\n    }\n    return 0;\n}\n",
        "token_count": 136
    },
    "0046b010": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046b010(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (arg_ch & 0xff) - (arg_8h & 0xff);\n    if ((iVar1 == 0) && (iVar1 = (arg_ch >> 8 & 0xff) - (arg_8h >> 8 & 0xff),  iVar1 == 0)) {\n        iVar1 = (arg_ch >> 0x10 & 0xff) - (arg_8h >> 0x10 & 0xff);\n    }\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "00498208": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498208(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x497e10);\n    (**(*param_2 + 4))(0x497e1c);\n    return;\n}\n",
        "token_count": 69
    },
    "00422a44": {
        "rules": [
            "get file attributes"
        ],
        "decompiled_code": "\nvoid fcn.00422a44(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x422a8a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.004229d8();\n    uVar1 = fcn.004084ec();\n    sub.kernel32.dll_GetFileAttributesW();\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x422a91;\n    uStack24 = 0x422a89;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 177
    },
    "004299e4": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004299e4(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x4ba6ec)();\n            fcn.00429130();\n        }\n        else {\n            fcn.00428c94();\n        }\n    }\n    else {\n        fcn.00429aec();\n        (***0x4ba6ec)();\n        fcn.00429130();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "0042f57c": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nuint32_t fcn.0042f57c(void)\n\n{\n    uint16_t in_AX;\n    uint16_t uVar1;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar1 = in_AX & 0xfff;\n    uVar2 = unaff_EBX & 0xffff0000 | uVar1;\n    if (0x15 < uVar1) {\n        if ((uVar1 == 0x100) || (uVar1 == 0x102)) {\n            uVar2 = CONCAT22((unaff_EBX & 0xffff0000) >> 0x10, 8);\n        }\n        else {\n            fcn.00428d38();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 169
    },
    "00430258": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430258(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x43036b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if ((in_AX & 0xfff) < 0x16) {\n        param_2 = 0x430294;\n        puStack32 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    else if (in_AX == 0x100) {\n        param_2 = 0x4302ac;\n        puStack32 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    else if (in_AX == 0x102) {\n        param_2 = 0x4302c1;\n        puStack32 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    else if (in_AX == 0x101) {\n        param_2 = 0x4302d6;\n        puStack32 = &stack0xfffffffc;\n        fcn.00407e00();\n    }\n    else {\n        cVar1 = fcn.004309a8();\n        if (cVar1 == '\\0') {\n            fcn.0041a168();\n            param_2 = 0x43032a;\n            fcn.0040873c();\n        }\n        else {\n            fcn.00405be8();\n            fcn.004088ac(param_2);\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.0040873c();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.0040873c();\n    }\n    *in_FS_OFFSET = param_2;\n    uStack36 = 0x430372;\n    uStack40 = 0x43036a;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 507
    },
    "0049943c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049943c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t var_4h;\n    \n    if ((in_EAX[0x14] != arg_8h) || (arg_ch != in_EAX[0x15])) {\n        var_4h = *(in_EAX[0x10] + 8);\n        if (-1 < var_4h + -1) {\n            uVar2 = 0;\n            do {\n                iVar1 = in_EAX[0x10];\n                if (*(iVar1 + 8) <= uVar2) {\n                    fcn.00431010();\n                }\n                (**(**(*(iVar1 + 4) + uVar2 * 4) + 0x10))(arg_8h, arg_ch);\n                uVar2 = uVar2 + 1;\n                var_4h = var_4h + -1;\n            } while (var_4h != 0);\n        }\n        in_EAX[0x14] = arg_8h;\n        in_EAX[0x15] = arg_ch;\n        (**(*in_EAX + 0x44))();\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00405ff0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00405ff0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x30);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "004063e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004063e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 == 0) {\n            LOCK();\n            if (*in_EAX == 0) {\n                *in_EAX = 1;\n            }\n            else {\n                iVar1 = *in_EAX;\n            }\n            if (iVar1 == 0) {\n                return;\n            }\n        }\n        fcn.00406368(uVar2);\n    } while( true );\n}\n",
        "token_count": 139
    },
    "00408440": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408440(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00408c84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408c84(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00408bec();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00408bb4();\n                iVar4 = iVar3 + -1;\n                bVar2 = 0 < iVar3;\n                iVar3 = iVar4;\n            } while (iVar4 != 0 && bVar2);\n            return;\n        }\n        if (((cVar1 != '\\x0f') && (cVar1 != '\\x11')) && (cVar1 != '\\x12')) {\n            fcn.00405500(0x2000000);\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar4 = iVar3 + -1;\n        bVar2 = 0 < iVar3;\n        iVar3 = iVar4;\n    } while (iVar4 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 474
    },
    "00408e18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408d9b)\n// WARNING: Removing unreachable block (ram,0x00408d81)\n// WARNING: Removing unreachable block (ram,0x00408d64)\n\nvoid __fastcall fcn.00408e18(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00407a44();\n    }\n    else if (cVar1 == '\\x12') {\n        fcn.00407a20();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00407a68();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00408cf0();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00408d08();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00408c90();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.0040b47c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            fcn.00405500(0x2000001);\n            return;\n        }\n        do {\n            fcn.00409d24();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 556
    },
    "00409590": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409590(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00407a44();\n            }\n            else {\n                fcn.00407ab0();\n            }\n        }\n        else if (cVar1 == '\\x12') {\n            if (param_1 < 2) {\n                fcn.00407a20();\n            }\n            else {\n                fcn.00407a80();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00407a68();\n            }\n            else {\n                fcn.00407ae0();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00408cf0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00408d08();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.00408c90();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040b47c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                fcn.00405500(CONCAT13(2, param_1));\n                return;\n            }\n            do {\n                fcn.00409d24();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 606
    },
    "00409ff0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409ff0(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = *0x4b7044;\n    if (*0x4b7044 != NULL) {\n        do {\n            if (((in_EAX == piVar1[1]) || (in_EAX == piVar1[2])) || (in_EAX == piVar1[3])) {\n                fcn.00409fa8();\n                return;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040a904": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.0040a904(void)\n\n{\n    int16_t *in_EAX;\n    \n    while ((*in_EAX != 0 && (*in_EAX != 0x5c))) {\n        in_EAX = sub.user32.dll_CharNextW();\n    }\n    return in_EAX;\n}\n",
        "token_count": 69
    },
    "0040b330": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b330(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x4b7048 == NULL) || ((*0x4b7048)[1] != in_EAX)) {\n        ppiVar2 = *0x4b7048;\n        if (*0x4b7048 != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.0040540c();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x4b7048 = **0x4b7048;\n        fcn.0040540c();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0040b3e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b3e8(void)\n\n{\n    int32_t **in_EAX;\n    int32_t **ppiVar1;\n    \n    ppiVar1 = *0x4b7044;\n    if (*0x4b7044 != NULL) {\n        do {\n            if (in_EAX == ppiVar1) {\n                return;\n            }\n            ppiVar1 = *ppiVar1;\n        } while (ppiVar1 != NULL);\n    }\n    *in_EAX = *0x4b7044;\n    *0x4b7044 = in_EAX;\n    return;\n}\n",
        "token_count": 135
    },
    "0040b40c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b40c(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x40b470;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.0040b38c();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x4b7044;\n    if (var_4h == *0x4b7044) {\n        *0x4b7044 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0040bf70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040bf70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 4);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0040bcb8();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *(in_EAX + 4) = 0;\n    fcn.004065b4();\n    fcn.0040bb14();\n    return;\n}\n",
        "token_count": 122
    },
    "0040d79c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d79c(int32_t **arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar1 = 0x4b7c3c;\n    do {\n        ppiVar2 = ppiVar1;\n        ppiVar1 = *ppiVar2;\n        if (ppiVar1 == NULL) break;\n    } while (arg_8h != ppiVar1);\n    if (arg_8h == *ppiVar2) {\n        *ppiVar2 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0041a0cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a0cc(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    for (uVar1 = in_EAX >> 4; uVar1 != 0; uVar1 = uVar1 >> 4) {\n    }\n    fcn.00419ea4(param_1, 0x30);\n    return;\n}\n",
        "token_count": 91
    },
    "0041bce2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bce2(void)\n\n{\n    int16_t iVar1;\n    int16_t *unaff_ESI;\n    \n    do {\n        iVar1 = *unaff_ESI;\n        if (iVar1 == 0) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (iVar1 == 0x20);\n    return;\n}\n",
        "token_count": 89
    },
    "0041dfc8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dfc8(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    int32_t iStack52;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack40;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t hMem;\n    \n    uStack44 = 0x3300;\n    if (param_2 != 0) {\n        uStack44 = 0x3b00;\n    }\n    uStack20 = 0;\n    uStack24 = 0;\n    puStack28 = &fcn.0041dfc8::hMem;\n    uStack32 = 0;\n    puStack48 = 0x41dff1;\n    iStack40 = param_2;\n    iVar2 = sub.kernel32.dll_FormatMessageW();\n    iStack52 = 0x41e03e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    for (; (0 < iVar2 && ((uVar1 = *(hMem + -2 + iVar2 * 2),  uVar1 < 0x21 || (uVar1 == 0x2e)))); iVar2 = iVar2 + -1) {\n    }\n    puStack48 = &stack0xfffffffc;\n    fcn.00407ba8();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41e045;\n    iStack52 = hMem;\n    uStack56 = 0x41e03d;\n    func_0x0040e310();\n    return;\n}\n",
        "token_count": 399
    },
    "004206f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004206f0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_cch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t iStack16;\n    uint uStack8;\n    \n    puStack20 = &stack0xfffffffc;\n    iStack16 = 0x19;\n    do {\n        uStack8 = 0;\n        iStack16 = iStack16 + -1;\n    } while (iStack16 != 0);\n    uStack24 = 0x420758;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00420684();\n    fcn.0041e0c4();\n    fcn.00408f5c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42075f;\n    uStack24 = 0x420757;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 223
    },
    "00428ed0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00428ed0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x429117;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00428ed0::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x428fa6;\n            var_10h = &stack0xfffffffc;\n            fcn.0040c9f0();\n            var_1ch = 0x428fb5;\n            fcn.0041f27c();\n            var_1ch = 0x428fba;\n            fcn.0040711c();\n            goto code_r0x004290ef;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x428f64;\n                var_10h = &stack0xfffffffc;\n                fcn.00428c40();\n                goto code_r0x004290ef;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x429018;\n                var_10h = &stack0xfffffffc;\n                fcn.0040c9f0();\n                var_1ch = 0x429027;\n                fcn.0041f27c();\n                var_1ch = 0x42902c;\n                fcn.0040711c();\n                goto code_r0x004290ef;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x429087;\n                var_10h = &stack0xfffffffc;\n                fcn.0040c9f0();\n                var_1ch = 0x429096;\n                fcn.0041f27c();\n                var_1ch = 0x42909b;\n                fcn.0040711c();\n                goto code_r0x004290ef;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x428f76;\n                var_10h = &stack0xfffffffc;\n                fcn.0040c9f0();\n                var_1ch = 0x428f85;\n                fcn.0041f27c();\n                var_1ch = 0x428f8a;\n                fcn.0040711c();\n                goto code_r0x004290ef;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x428f94;\n                var_10h = &stack0xfffffffc;\n                fcn.00428d38();\n                goto code_r0x004290ef;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x428fcc;\n            fcn.0040c9f0();\n            var_1ch = 0x428fdb;\n            fcn.0041f27c();\n            var_1ch = 0x428fe0;\n            fcn.0040711c();\n            goto code_r0x004290ef;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x428ff2;\n            var_10h = &stack0xfffffffc;\n            fcn.0040c9f0();\n            var_1ch = 0x429001;\n            fcn.0041f27c();\n            var_1ch = 0x429006;\n            fcn.0040711c();\n            goto code_r0x004290ef;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x42903e;\n            var_10h = &stack0xfffffffc;\n            fcn.0040c9f0();\n            var_1ch = 0x42904d;\n            fcn.0041f27c();\n            var_1ch = 0x429052;\n            fcn.0040711c();\n            goto code_r0x004290ef;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x429064;\n            var_10h = &stack0xfffffffc;\n            fcn.0040c9f0();\n            var_1ch = 0x429073;\n            fcn.0041f27c();\n            var_1ch = 0x429078;\n            fcn.0040711c();\n            goto code_r0x004290ef;\n        }\n    }\n    var_38h = **0x4ba74c;\n    var_34h._0_1_ = 0x11;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x4290be;\n    var_10h = &stack0xfffffffc;\n    fcn.0041dfc8();\n    var_1ch = &fcn.00428ed0::var_38h;\n    var_20h = 2;\n    var_24h = 0x4290db;\n    fcn.0040c9f0();\n    var_24h = 0x4290ea;\n    fcn.0041f2b8(var_20h, var_1ch);\n    var_24h = 0x4290ef;\n    fcn.0040711c();\ncode_r0x004290ef:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x42911e;\n    var_1ch = 0x429109;\n    fcn.00407a80();\n    var_1ch = 0x429116;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 1581
    },
    "0043040c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043040c(void)\n\n{\n    int16_t *in_EAX;\n    uint var_4h;\n    \n    for (; *in_EAX == 0x400c; in_EAX = *(in_EAX + 4)) {\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "004305f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004305f4(uint *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0x400c) {\n        uVar2 = fcn.004305f4();\n    }\n    else {\n        *param_2 = uVar1;\n        bVar3 = (*(param_2 + 1) & 0x20) != 0;\n        uVar2 = uVar1 & 0xff00 | bVar3;\n        if (bVar3) {\n            if ((*(param_2 + 1) & 0x40) == 0) {\n                *param_1 = *(in_EAX + 4);\n            }\n            else {\n                *param_1 = **(in_EAX + 4);\n            }\n        }\n        else {\n            *param_1 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 244
    },
    "0043c31c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c31c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_34h;\n    uint uStackY44;\n    uint *puStackY40;\n    uint arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    iVar5 = 0xf;\n    do {\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStackY40 = 0x43c34d;\n    iVar5 = (**(*in_EAX + 0x10))();\n    if (iVar5 == 0) {\n        puStackY40 = 0x43c359;\n        fcn.0043d6d8();\n        puStackY40 = 0x43c361;\n        fcn.00455bc4();\n        puStackY40 = 0x43c371;\n        fcn.00408f5c();\n        goto code_r0x0043c4cd;\n    }\n    puStackY40 = 0x43c37d;\n    uVar1 = (**(*in_EAX + 0xc))();\n    if (*0x43c504 != (uVar1 & *0x43c500)) {\n        puStackY40 = 0x43c395;\n        (**(*in_EAX + 0x10))();\n        puStackY40 = 0x43c39a;\n        iVar5 = fcn.00446cec();\n        puStackY40 = 0x43c3a4;\n        iVar3 = fcn.0043cbc0();\n        if (iVar5 != iVar3) {\n            puStackY40 = 0x43c3ba;\n            fcn.0041f338();\n            puStackY40 = 0x43c3bf;\n            fcn.0040711c();\n        }\n        puStackY40 = 0x43c3c7;\n        fcn.0043d6d8();\n        puStackY40 = 0x43c3cf;\n        fcn.00455bc4();\n        puStackY40 = 0x43c3df;\n        fcn.00408f5c();\n        goto code_r0x0043c4cd;\n    }\n    puStackY40 = 0x43c3eb;\n    uVar4 = (**(*in_EAX + 0xc))();\n    if ((uVar4 & 2) == 0) {\ncode_r0x0043c4a1:\n        puStackY40 = &fcn.0043c31c::var_7ch;\n        uStackY44 = 0x43c4ac;\n        (**(*in_EAX + 0x10))();\n        puStackY40 = 0x43c4b1;\n        fcn.00446cec();\n        puStackY40 = 0x43c4bd;\n        fcn.0043d174(arg_8h_00);\n        puStackY40 = 0x43c4cd;\n        fcn.00408f5c();\n    }\n    else {\n        puStackY40 = 0x43c3fa;\n        uVar4 = (**(*in_EAX + 0xc))();\n        if ((uVar4 & 0x10) == 0) {\n            puStackY40 = 0x43c405;\n            (**(*in_EAX + 0x10))();\n            puStackY40 = 0x43c40a;\n            fcn.00446cec();\n            puStackY40 = 0x43c415;\n            cVar2 = fcn.0043c264();\n            if (cVar2 == '\\0') goto code_r0x0043c4a1;\n        }\n        puStackY40 = 0x43c424;\n        (**(*in_EAX + 0x10))();\n        puStackY40 = 0x43c429;\n        iVar5 = fcn.00446cec();\n        if (iVar5 == *0x432e94) {\n            puStackY40 = 0x43c43c;\n            fcn.00455bf0();\n            puStackY40 = 0x43c44c;\n            fcn.00408f5c();\n        }\n        else {\n            puStackY40 = 0x43c455;\n            (**(*in_EAX + 0x10))();\n            puStackY40 = 0x43c45a;\n            iVar5 = fcn.00446cec();\n            puStackY40 = 0x43c464;\n            iVar3 = fcn.0043cbc0();\n            if (iVar5 != iVar3) {\n                puStackY40 = 0x43c47a;\n                fcn.0041f338();\n                puStackY40 = 0x43c47f;\n                fcn.0040711c();\n            }\n            puStackY40 = 0x43c487;\n            fcn.0043d6d8();\n            puStackY40 = 0x43c48f;\n            fcn.00455bc4();\n            puStackY40 = 0x43c49f;\n            fcn.00408f5c();\n        }\n    }\ncode_r0x0043c4cd:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 1282
    },
    "0043ebf0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0043ebf0(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar3 = 0xe;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack36 = 0x43ec1c;\n    fcn.00408bb4();\n    uStack40 = 0x43ed7a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    puVar2 = fcn.00467260();\n    uVar4 = puVar2[1];\n    uVar1 = *puVar2;\n    iVar3 = fcn.00467260();\n    if (*(iVar3 + 0xc) == uVar4) {\n        if (uVar1 <= *(iVar3 + 8)) {\ncode_r0x0043ecdd:\n            var_30h = *(in_EAX + 8);\n            uVar5 = *(in_EAX + 0xc);\n            puVar2 = fcn.00467260();\n            uVar4 = puVar2[1];\n            uVar1 = *puVar2;\n            iVar3 = fcn.00467260();\n            if (*(iVar3 + 0xc) == uVar4) {\n                if (uVar1 <= *(iVar3 + 8)) {\ncode_r0x0043ed38:\n                    fcn.00456164(var_30h);\n                    fcn.00408f5c(var_30h, uVar5);\n                    goto code_r0x0043ed57;\n                }\n            }\n            else if (uVar4 <= *(iVar3 + 0xc)) goto code_r0x0043ed38;\n            fcn.00456138(var_30h);\n            fcn.00408f5c(var_30h, uVar5);\n            goto code_r0x0043ed57;\n        }\n    }\n    else if (uVar4 <= *(iVar3 + 0xc)) goto code_r0x0043ecdd;\n    var_30h = *(in_EAX + 8);\n    uVar5 = *(in_EAX + 0xc);\n    puVar2 = fcn.00467260();\n    uVar4 = puVar2[1];\n    uVar1 = *puVar2;\n    iVar3 = fcn.00467260();\n    if (*(iVar3 + 0xc) == uVar4) {\n        if (uVar1 <= *(iVar3 + 8)) {\ncode_r0x0043ecbc:\n            fcn.00456164(var_30h);\n            fcn.00408f5c(var_30h, uVar5);\n            goto code_r0x0043ed57;\n        }\n    }\n    else if (uVar4 <= *(iVar3 + 0xc)) goto code_r0x0043ecbc;\n    fcn.00456138(var_30h);\n    fcn.00408f5c(var_30h, uVar5);\ncode_r0x0043ed57:\n    *in_FS_OFFSET = var_30h;\n    uStack44 = 0x43ed81;\n    fcn.00408d08();\n    return;\n}\n",
        "token_count": 891
    },
    "0043f808": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f808(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_64h;\n    uint var_54h;\n    uint var_3ch;\n    uint var_2ch;\n    uint uStack36;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_4h;\n    \n    iVar1 = 0xc;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puStack28 = 0x43f832;\n    fcn.00408bb4();\n    var_1ch = 0x43f906;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    iVar1 = fcn.0043cbc0();\n    if (param_2 == iVar1) {\n        fcn.00408f5c();\n    }\n    else if (param_2 == *0x401300) {\n        fcn.00455ef0();\n        fcn.0042f390();\n        fcn.00456190();\n        fcn.00408f5c();\n    }\n    else {\n        fcn.004561e8();\n        fcn.004561bc();\n        fcn.00408f5c();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43f90d;\n    var_1ch = 0x43f8d9;\n    fcn.004293d4();\n    var_1ch = 0x43f8e7;\n    fcn.00408c90();\n    var_1ch = 0x43f8ef;\n    fcn.004293d4();\n    var_1ch = 0x43f8f7;\n    fcn.004293d4();\n    var_1ch = 0x43f905;\n    fcn.00408c90();\n    return;\n}\n",
        "token_count": 456
    },
    "00449370": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449370(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(*(arg_8h + -4) + 8);\n    if (-1 < iVar5 + -1) {\n        uVar4 = 0;\n        do {\n            iVar3 = *(arg_8h + -4);\n            if (*(iVar3 + 8) <= uVar4) {\n                fcn.00431010();\n            }\n            piVar1 = *(*(iVar3 + 4) + uVar4 * 4);\n            cVar2 = fcn.00405f30();\n            if ((cVar2 != '\\0') && (iVar3 = (**(*piVar1 + 0x30))(),  iVar3 == in_EAX)) {\n                return 1;\n            }\n            uVar4 = uVar4 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "00449820": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449820(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(*(arg_8h + -4) + 8);\n    if (-1 < iVar4 + -1) {\n        uVar3 = 0;\n        do {\n            iVar2 = *(arg_8h + -4);\n            if (*(iVar2 + 8) <= uVar3) {\n                fcn.00431010();\n            }\n            iVar2 = *(*(iVar2 + 4) + uVar3 * 4);\n            cVar1 = fcn.00405f30();\n            if ((cVar1 != '\\0') && (iVar2 = (**(**(iVar2 + 0x1c) + 0x28))(),  iVar2 == in_EAX)) {\n                return 1;\n            }\n            uVar3 = uVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "00449b80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449b80(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = *(*(arg_8h + -4) + 8);\n    if (-1 < iVar5 + -1) {\n        uVar4 = 0;\n        do {\n            iVar3 = *(arg_8h + -4);\n            if (*(iVar3 + 8) <= uVar4) {\n                fcn.00431010();\n            }\n            piVar1 = *(*(iVar3 + 4) + uVar4 * 4);\n            cVar2 = fcn.00405f30();\n            if ((cVar2 != '\\0') && (iVar3 = (**(*piVar1 + 0x14))(),  iVar3 == in_EAX)) {\n                return 1;\n            }\n            uVar4 = uVar4 + 1;\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "0044a6c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a6c8(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    \n    if (0 < param_2) {\n        do {\n            in_EAX = fcn.0043fc88();\n            param_2 = param_2 + -1;\n        } while (0 < param_2);\n    }\n    return in_EAX;\n}\n",
        "token_count": 90
    },
    "0046b9fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0046b9fc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint var_30h;\n    uchar *var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar2 = 5;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_30h = 0;\n    uStack40 = 0x46bb68;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046b9fc::var_28h;\n    var_2ch = 0x46ba34;\n    fcn.0042977c();\n    var_2ch = 0x46ba3f;\n    fcn.0042977c();\n    var_30h = 0x46bad7;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_2ch = &stack0xfffffffc;\n    cVar1 = fcn.0043054c();\n    if (cVar1 == '\\0') {\n        *in_FS_OFFSET = uStack56;\n    }\n    else if (cVar1 == '\\x01') {\n        *in_FS_OFFSET = uStack56;\n    }\n    else if (cVar1 == '\\x02') {\n        *in_FS_OFFSET = uStack56;\n    }\n    else if (cVar1 == '\\x03') {\n        cVar1 = fcn.004304a0();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.004304b8();\n            if (cVar1 == '\\0') {\n                *in_FS_OFFSET = uStack56;\n                goto code_r0x0046bb3a;\n            }\n        }\n        *in_FS_OFFSET = uStack56;\n    }\n    else {\n        *in_FS_OFFSET = uStack56;\n    }\ncode_r0x0046bb3a:\n    *in_FS_OFFSET = var_28h;\n    puStack36 = 0x46bb6f;\n    uStack40 = 0x46bb5a;\n    fcn.00408d08();\n    uStack40 = 0x46bb67;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 579
    },
    "0048c410": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048c410(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*(in_EAX + 0xc) == 0) {\n        return;\n    }\n    puStack24 = 0x48c429;\n    iVar2 = fcn.0049a59c();\n    uStack28 = 0x48c477;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar2 = *(iVar2 + 8);\n    puStack24 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            puStack24 = puVar1;\n            fcn.0040b47c();\n            iVar2 = iVar2 + -1;\n            puVar1 = puStack24;\n        } while (iVar2 != 0);\n    }\n    fcn.00431648();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x48c47e;\n    uStack28 = 0x48c476;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 302
    },
    "0048cc8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048cc8c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    fcn.0040b47c();\n    if (in_EAX != NULL) {\n        iVar2 = fcn.00405fd0();\n        if (iVar2 == 0) {\n            cVar1 = fcn.00405f30();\n            if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.0040b47c();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n        else {\n            cVar1 = fcn.00405f30();\n            if ((cVar1 == '\\0') || ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.0040b47c();\n                fcn.0048cc8c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00490324": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00490324(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar2 + -1) {\n            uVar1 = 0;\n            do {\n                if (*(*(in_EAX + 0x30) + 8) <= uVar1) {\n                    fcn.00431010();\n                }\n                fcn.00405ce8();\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405ce8();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0049457c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049457c(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x494602;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00467260();\n    fcn.004955fc();\n    uVar1 = 0;\n    do {\n        bVar2 = uVar1 < 0x1f;\n        if (uVar1 < 0x20) {\n            bVar2 = (in_EAX >> (uVar1 & 0x1f) & 1) != 0;\n        }\n        if (bVar2) {\n            fcn.004681fc();\n            fcn.00495570();\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 0x20);\n    fcn.00495570();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x494609;\n    uStack28 = 0x494601;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 309
    },
    "004948f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004948f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (param_2 == in_EAX) {\n                return 1;\n            }\n            in_EAX = *(in_EAX + 4);\n        } while (in_EAX != 0);\n    }\n    return 0;\n}\n",
        "token_count": 98
    },
    "00499558": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00499558(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x499568;\n    iVar1 = fcn.0049df80();\n    uStack24 = 0x4995b9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar3 = *(iVar1 + 8);\n    if (-1 < iVar3 + -1) {\n        uVar2 = 0;\n        puStack20 = &stack0xfffffffc;\n        do {\n            if (*(iVar1 + 8) <= uVar2) {\n                fcn.00431010();\n            }\n            fcn.00405ce8();\n            uVar2 = uVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4995c0;\n    uStack24 = 0x4995b8;\n    fcn.00406868();\n    return;\n}\n",
        "token_count": 280
    },
    "004995d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004995d8(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar3 = *0x4c1c40;\n    uVar5 = 0;\n    if (*0x4c1c40 != 0) {\n        do {\n            uVar1 = *(uVar3 + 5);\n            uVar4 = uVar3;\n            uVar2 = *0x4c1c40;\n            if (((in_EAX <= uVar3) && (uVar3 <= param_2)) && (uVar4 = uVar5,  uVar2 = uVar1,  uVar5 != 0)) {\n                *(uVar5 + 5) = uVar1;\n                uVar2 = *0x4c1c40;\n            }\n            *0x4c1c40 = uVar2;\n            uVar3 = uVar1;\n            uVar5 = uVar4;\n        } while (uVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00499c8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00499c8c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x499d3a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0040b47c();\n    cVar1 = fcn.0049bf34();\n    if ((cVar1 != '\\0') && (iVar2 = (**(_pe_dos_header + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(_pe_dos_header + 0xc))();\n            fcn.0040b47c(0);\n            cVar1 = fcn.00421124();\n            if ((cVar1 != '\\0') && (cVar1 = (**(_pe_dos_header + 0x10))(),  cVar1 != '\\0')) break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x499d41;\n    uStack36 = 0x499d29;\n    fcn.0040b47c();\n    uStack36 = 0x499d31;\n    fcn.0040b47c();\n    uStack36 = 0x499d39;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 374
    },
    "00499d5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00499d5c(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    if (param_1 != NULL) {\n        *param_1 = 0;\n    }\n    uStack40 = 0x499e25;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.0040b47c();\n    cVar1 = fcn.0049bf34();\n    if ((cVar1 != '\\0') && (iVar2 = (**(_pe_dos_header + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(_pe_dos_header + 0xc))();\n            fcn.0040b47c(0);\n            cVar1 = fcn.00421124();\n            if ((cVar1 != '\\0') && (cVar1 = (**(_pe_dos_header + 0x10))(),  cVar1 != '\\0')) {\n                fcn.0040b494();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x499e2c;\n    uStack40 = 0x499e14;\n    fcn.0040b47c();\n    uStack40 = 0x499e1c;\n    fcn.0040b47c();\n    uStack40 = 0x499e24;\n    fcn.0040b47c();\n    return;\n}\n",
        "token_count": 422
    },
    "004af290": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004af290(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x4af2b4;\n    fcn.00407b04();\n    uStack52 = 0x4af389;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00422678();\n    fcn.00407e48();\n    iVar2 = fcn.00405720();\n    iVar3 = iVar2;\n    do {\n        iVar3 = iVar3 + 1;\n        if (0x1ffffff < iVar3) {\n            iVar3 = 0;\n        }\n        if (iVar2 == iVar3) {\n            fcn.004229d8();\n            fcn.00427050();\n            fcn.0041f27c();\n            fcn.0040711c();\n        }\n        fcn.004af218(0x4af3a8, in_EDX);\n        fcn.004087c4();\n        cVar1 = fcn.00427314();\n    } while (cVar1 != '\\0');\n    fcn.00407e00();\n    *in_FS_OFFSET = uStack56;\n    fcn.00407a80(0x4af390);\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 402
    },
    "004af3b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004af3b0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar2 = 5;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x4af4ab;\n    *in_FS_OFFSET = &fcn.004af3b0::var_1ch;\n    while( true ) {\n        var_1ch = &fcn.004af3b0::var_4h;\n        fcn.00422dd0();\n        fcn.004af290(var_1ch);\n        fcn.004084ec();\n        cVar1 = fcn.004aefa0();\n        if (cVar1 != '\\0') break;\n        if (var_8h != 0xb7) {\n            fcn.00427050(&fcn.004af3b0::var_10h);\n            var_1ch = var_8h;\n            fcn.00419e30(var_8h, 0);\n            var_18h = &fcn.004af3b0::var_10h;\n            fcn.00423434();\n            var_14h = NULL;\n            fcn.00427020(var_1ch);\n            fcn.0041f27c();\n            fcn.0040711c();\n        }\n    }\n    fcn.00407e00();\n    *in_FS_OFFSET = var_1ch;\n    var_18h = 0x4af4b2;\n    var_1ch = 0x4af495;\n    fcn.00407a80();\n    var_1ch = 0x4af4a2;\n    fcn.00407a80();\n    var_1ch = 0x4af4aa;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 593
    },
    "004af83c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004af83c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00422c40();\n    if (0 < iVar1) {\n        do {\n            fcn.00422ca0();\n            iVar2 = fcn.00419780();\n            if (iVar2 == 0) {\ncode_r0x004af8ab:\n                *0x4ba441 = 1;\n            }\n            else {\n                arg_8h = &var_8h;\n                fcn.004088ac(arg_8h);\n                iVar2 = fcn.00419780();\n                if (iVar2 == 0) goto code_r0x004af8ab;\n                arg_8h = &var_ch;\n                fcn.004088ac(arg_8h);\n                iVar2 = fcn.00419780();\n                if (iVar2 == 0) {\n                    arg_8h = 0x4c1c44;\n                    fcn.004088ac(0x4c1c44);\n                }\n                else {\n                    iVar2 = fcn.00419780();\n                    if ((iVar2 == 0) || (iVar2 = fcn.00419780(),  iVar2 == 0)) {\n                        *0x4ba440 = 1;\n                    }\n                }\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00407a80();\n    return;\n}\n",
        "token_count": 426
    },
    "004b5000": {
        "rules": [
            "get OS version",
            "accept command line arguments"
        ],
        "decompiled_code": "\nvoid fcn.004b5000(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    // [01] -r-x section size 8192 named .itext\n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4b50d7;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x4bb98c == 0;\n    *0x4bb98c = *0x4bb98c + -1;\n    if (bVar1) {\n        fcn.00405b74();\n        fcn.004051a8();\n        uStack20 = 0x400;\n        sub.kernel32.dll_SetThreadLocale();\n        fcn.0040a250();\n        *0x4b700c = 2;\n        *0x4bb01c = 0x4036b0;\n        *0x4bb020 = 0x4036b8;\n        *0x4bb05a = 2;\n        *0x4bb060 = fcn.0040caa4();\n        *0x4bb008 = 0x4095a0;\n        fcn.00405bb0();\n        fcn.00405bcc();\n        *0x4bb068 = 0xd7b0;\n        *0x4bb344 = 0xd7b0;\n        *0x4bb620 = 0xd7b0;\n        *0x4bb050 = sub.kernel32.dll_GetCommandLineW();\n        *0x4bb04c = fcn.00403810();\n        *0x4bb97c = sub.kernel32.dll_GetACP();\n        *0x4bb980 = 0x4b0;\n        *0x4bb044 = sub.kernel32.dll_GetCurrentThreadId();\n        fcn.0040cab8();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 460
    },
    "0041e098": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041e098(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = func_0x0040e198();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xffff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 85
    },
    "004af5e0": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nuint fcn.004af5e0(void)\n\n{\n    ushort in_AX;\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = func_0x0040e198(in_AX, 0x20001004, &lpLCData, 2);\n    if (iVar1 < 1) {\n        lpLCData = 0xffffffff;\n    }\n    return lpLCData;\n}\n",
        "token_count": 90
    },
    "0040cc60": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.0040cc60(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4be630 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x4b7c14 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4b7c14);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.0040cc1c();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x4b7c14);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4be64c;\n}\n",
        "token_count": 167
    },
    "00422bf0": {
        "rules": [
            "accept command line arguments"
        ],
        "decompiled_code": "\nvoid fcn.00422bf0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x422c32;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    func_0x0040e128();\n    fcn.00422b60();\n    fcn.00408550();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x422c39;\n    uStack20 = 0x422c31;\n    fcn.00407a20();\n    return;\n}\n",
        "token_count": 166
    },
    "004afdb8": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nint32_t fcn.004afdb8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.kernel32.dll_FindResourceW(0, 0x2b67, 10);\n    if (iVar1 == 0) {\n        fcn.004afbfc();\n    }\n    iVar2 = sub.kernel32.dll_SizeofResource(0, iVar1);\n    if (iVar2 != 0x2c) {\n        fcn.004afbfc();\n    }\n    iVar1 = sub.kernel32.dll_LoadResource(0, iVar1);\n    if (iVar1 == 0) {\n        fcn.004afbfc();\n    }\n    iVar1 = sub.kernel32.dll_LockResource(iVar1);\n    if (iVar1 == 0) {\n        fcn.004afbfc();\n    }\n    return iVar1;\n}\n",
        "token_count": 190
    }
}