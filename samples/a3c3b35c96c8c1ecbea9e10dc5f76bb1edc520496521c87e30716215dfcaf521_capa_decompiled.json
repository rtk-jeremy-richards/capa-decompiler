{
    "010010a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010010a2(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = *0x10040d4;\n    var_24h = 0;\n    var_20h = 0;\n    var_30h = 0x30;\n    var_2ch = 3;\n    var_28h = 0x1001159;\n    var_1ch = arg_8h;\n    var_18h = (**0x10040d4)(arg_8h, 0x6b);\n    var_14h = (**0x10040d0)(0, 0x7f00);\n    var_10h = 6;\n    var_8h = 0x1005520;\n    var_4h = (*pcVar1)(var_1ch, 0x6c);\n    (**0x10040cc)(&var_30h);\n    return;\n}\n",
        "token_count": 288
    },
    "01001176": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01001176(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    if (arg_ch != 0x110) {\n        if ((arg_ch != 0x111) || ((arg_10h != 1 && (arg_10h != 2)))) {\n            return 0;\n        }\n        (**0x10040e0)(arg_8h, arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 106
    },
    "01001a19": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01001a19(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint var_3ech;\n    int32_t var_348h;\n    int32_t var_33ch;\n    uint var_120h;\n    uint var_d8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_4ch;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = *0x1004034;\n    (**0x1004034)(0x409, 0, 0, 0x1005380, &var_120h, 0x46);\n    pcVar3 = *0x10040b8;\n    do {\n        (*pcVar2)(0x409, 0, 0, 0x1005380, &var_d8h, 0x46);\n        var_d8h._0_1_ = var_d8h + &var_d8h;\n        iVar5 = (*pcVar3)(&var_120h, &var_d8h);\n    } while (&var_d8h <= iVar5);\n    var_90h = 0;\n    puVar9 = &var_8ch;\n    for (iVar5 = 0x10; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    iVar5 = *(arg_ch + 0x3c) + arg_ch;\n    var_4h = iVar5;\n    var_ch = (**0x100560c)(0, *(iVar5 + 0x50), 0x1000, 0x40);\n    pcVar2 = *0x10040e0;\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (**0x10040e0)(*0x10053e0, 0);\n    }\n    iVar8 = *0x1005634;\n    if ((*0x10056c0 == *0x1005634) && (iVar8 = *0x1005634 + 1,  *0x10056c0 == *0x1005634 + 1)) {\n        iVar8 = *0x1005634 + 2;\n    }\n    *0x1005634 = iVar8;\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar2)(*0x10053e0, 0);\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    fcn.0100322e(var_ch, 0, *(iVar5 + 0x50));\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10053e0 != 0) {\n        if (*0x10053e0 == *0x10055e8) {\n            (*pcVar2)(*0x10053e0, 0);\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar2)(*0x10053e0, 0);\n        }\n    }\n    fcn.01003228(var_ch, arg_ch, *(iVar5 + 0x54));\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10053e0 != 0) {\n        if (*0x10053e0 == *0x10055e8) {\n            (*pcVar2)(*0x10053e0, 0);\n        }\n        if (*0x10053e0 != 0) {\n            if (*0x10053e0 == *0x10055e8) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n        }\n    }\n    uVar6 = *(var_4h + 0x54);\n    uVar1 = *(var_4h + 0x38);\n    if (uVar6 % uVar1 != 0) {\n        uVar6 = (uVar6 / uVar1 + 1) * uVar1;\n    }\n    var_14h = 0;\n    var_18h = uVar6 + var_ch;\n    if (*(var_4h + 6) != 0) {\n        var_1ch = 0;\n        iVar5 = *0x10053e0;\n        do {\n            iVar4 = *0x1005634;\n            iVar7 = var_1ch + *(arg_ch + 0x3c);\n            iVar8 = iVar7 + 0xf8 + arg_ch;\n            if (*(iVar7 + 0x108 + arg_ch) != 0) {\n                if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n                    *0x1005634 = iVar4 + 2;\n                }\n                iVar5 = *0x1005634;\n                uVar6 = *(iVar8 + 0x10);\n                if (*(iVar8 + 8) <= uVar6 && uVar6 != *(iVar8 + 8)) {\n                    if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n                        *0x1005634 = iVar5 + 2;\n                    }\n                    uVar6 = *(iVar8 + 8);\n                }\n                iVar5 = *0x1005634;\n                if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n                    *0x1005634 = iVar5 + 2;\n                }\n                fcn.01003228(var_18h, *(iVar8 + 0x14) + arg_ch, uVar6);\n                iVar5 = *0x10053e0;\n            }\n            if ((iVar5 != 0) && (iVar5 == *0x10055e8)) {\n                (*pcVar2)(iVar5, 0);\n                iVar5 = *0x10053e0;\n            }\n            iVar4 = *0x1005634;\n            if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n                *0x1005634 = iVar4 + 2;\n            }\n            if ((iVar5 != 0) && (iVar5 == *0x10055e8)) {\n                (*pcVar2)(iVar5, 0);\n                iVar5 = *0x10053e0;\n            }\n            uVar6 = *(iVar8 + 8);\n            uVar1 = *(var_4h + 0x38);\n            if (uVar6 % uVar1 != 0) {\n                uVar6 = (uVar6 / uVar1 + 1) * uVar1;\n            }\n            var_18h = var_18h + uVar6;\n            var_14h = var_14h + 1;\n            var_1ch = var_1ch + 0x28;\n        } while (var_14h < *(var_4h + 6));\n    }\n    (**0x1005698)(0, arg_8h, 0, 0, 0, 4, 0, 0, &var_90h, &var_2ch);\n    var_3ech = 0x10007;\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    (**0x1005650)(var_28h, &var_3ech);\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar2)(*0x10053e0, 0);\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    (**0x1005604)(var_2ch, var_348h + 8, &var_10h, 4, &var_30h);\n    iVar5 = var_10h;\n    while (iVar8 = (**0x10056b8)(var_2ch, iVar5, &var_4ch, 0x1c),  iVar8 != 0) {\n        if (var_3ch == 0x10000) {\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n            if (*0x10056c0 == *0x1005634) {\n                *0x1005634 = *0x1005634 + 1;\n            }\n            if (*0x10056c8 != 0) {\n                *0x1005634 = *0x1005634 + 1;\n            }\n            break;\n        }\n        iVar5 = iVar5 + var_40h;\n    }\n    uVar6 = iVar5 - var_10h;\n    if ((*(var_4h + 0x34) == var_10h) && (*(var_4h + 0x50) < uVar6 || *(var_4h + 0x50) == uVar6)) {\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar2)(*0x10053e0, 0);\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        var_8h = var_10h;\n        (**0x1005690)(var_2ch, var_10h, uVar6, 0x40, &arg_ch);\n        iVar5 = var_4h;\ncode_r0x01001f5b:\n        iVar8 = *0x1005634;\n        if ((*0x10056c0 != *0x1005634) || (*0x1005634 = *0x1005634 + 1,  iVar8 = *0x1005634,  *0x10056c0 != *0x1005634))\n        goto code_r0x01001f6e;\n    }\n    else {\n        (**0x1005624)(var_2ch, var_10h);\n        iVar5 = var_4h;\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        var_8h = (**0x100568c)(var_2ch, *(var_4h + 0x34), *(var_4h + 0x50), 0x3000, 0x40);\n        iVar8 = *0x1005634;\n        if ((*0x10056c0 == *0x1005634) && (iVar8 = *0x1005634 + 1,  *0x10056c0 == *0x1005634 + 1)) {\n            iVar8 = *0x1005634 + 2;\n        }\n        *0x1005634 = iVar8;\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        iVar8 = *0x1005634;\n        if ((*0x10056c0 == *0x1005634) && (iVar8 = *0x1005634 + 1,  *0x10056c0 == *0x1005634 + 1)) {\n            *0x1005634 = *0x1005634 + 2;\n            goto code_r0x01001f5b;\n        }\ncode_r0x01001f6e:\n        *0x1005634 = iVar8;\n        if (*0x1005634 != 0x342b) {\n            (**0x10056bc)(var_2ch, var_348h + 8, &var_8h, 4, 0);\n        }\n        if (*0x10056c0 != *0x1005634) goto code_r0x01001fa4;\n    }\n    *0x1005634 = *0x1005634 + 1;\ncode_r0x01001fa4:\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if ((*0x10056c0 != *0x1005634) && (*0x1005634 != 0x342b)) {\n        (**0x10056bc)(var_2ch, var_8h, var_ch, *(iVar5 + 0x50), 0);\n    }\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar2)(*0x10053e0, 0);\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    iVar8 = *0x1005634;\n    var_3ech = 0x10007;\n    if (var_8h == var_10h) {\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        var_33ch = *(iVar5 + 0x28) + *(iVar5 + 0x34);\n    }\n    else {\n        if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n            *0x1005634 = iVar8 + 2;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        var_33ch = *(iVar5 + 0x28) + var_8h;\n        if (*0x10053e0 != 0) {\n            if (*0x10053e0 == *0x1000000) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n        }\n        iVar5 = *0x1005634;\n        if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n            *0x1005634 = iVar5 + 2;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n    }\n    if (*0x10053e0 != 0) {\n        if (*0x10053e0 == *0x10055e8) {\n            (*pcVar2)(*0x10053e0, 0);\n        }\n        if (*0x10053e0 != 0) {\n            if (*0x10053e0 == *0x10055e8) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar2)(*0x10053e0, 0);\n            }\n        }\n    }\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar2)(*0x10053e0, 0);\n    }\n    iVar5 = *0x1005634;\n    if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n        *0x1005634 = iVar5 + 2;\n    }\n    (**0x1005660)(var_28h, &var_3ech);\n    iVar5 = *0x1005634;\n    if (((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) &&\n       (*0x1005634 = iVar5 + 2,  *0x10056c0 == *0x1005634)) {\n        *0x1005634 = iVar5 + 3;\n    }\n    (**0x1005688)(var_28h);\n    return;\n}\n",
        "token_count": 4689
    },
    "01002281": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.01002281(void)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t arg_10h;\n    int32_t *extraout_ECX;\n    int32_t *piVar9;\n    char extraout_DL;\n    char extraout_DL_00;\n    char extraout_DL_01;\n    char cVar10;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint32_t uVar11;\n    uint var_1h;\n    uint var_4bch;\n    int16_t var_4b4h;\n    int16_t var_4b2h;\n    uint32_t var_4b0h;\n    uint var_4ach;\n    int32_t var_228h;\n    int32_t var_224h;\n    uint var_220h;\n    uint var_120h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar1 = *0x1004024;\n    uVar3 = (**0x1004024)(*0x10056c4);\n    uVar4 = (*pcVar1)(*0x1005668);\n    (*pcVar1)(*0x1005608);\n    uVar5 = (*pcVar1)(*0x100561c);\n    uVar6 = (*pcVar1)(*0x100564c);\n    pcVar1 = *0x1004028;\n    *0x1005628 = (**0x1004028)(uVar3, *0x10056dc);\n    *0x1005620 = (*pcVar1)(uVar3, *0x1005614);\n    *0x10056d8 = (*pcVar1)(uVar3, *0x1005618);\n    *0x1005698 = (*pcVar1)(uVar3, *0x10055ec);\n    *0x1005624 = (*pcVar1)(uVar4, *0x1005684);\n    *0x100560c = (*pcVar1)(uVar3, *0x10056a8);\n    *0x100568c = (*pcVar1)(uVar3, *0x10056ac);\n    *0x1005690 = (*pcVar1)(uVar3, *0x1005658);\n    *0x10056b8 = (*pcVar1)(uVar3, *0x10055f4);\n    *0x10056bc = (*pcVar1)(uVar3, *0x100567c);\n    *0x1005604 = (*pcVar1)(uVar3, *0x1005678);\n    *0x1005650 = (*pcVar1)(uVar3, *0x10055fc);\n    *0x1005660 = (*pcVar1)(uVar3, *0x1005694);\n    *0x1005688 = (*pcVar1)(uVar3, *0x10056cc);\n    *0x100566c = (*pcVar1)(uVar3, *0x1005674);\n    *0x10056b0 = (*pcVar1)(uVar5, *0x10055f0);\n    *0x1005638 = (*pcVar1)(uVar3, *0x100562c);\n    *0x100569c = (*pcVar1)(uVar3, *0x10056a4);\n    *0x1005630 = (*pcVar1)(uVar3, *0x1005648);\n    *0x10055f8 = (*pcVar1)(uVar3, *0x1005640);\n    *0x100563c = (*pcVar1)(uVar6, *0x10056d0);\n    *0x100565c = (*pcVar1)(uVar3, *0x1005610);\n    *0x10056e0 = (*pcVar1)(uVar3, *0x1005664);\n    uVar11 = 1;\n    while (iVar7 = (**0x1005620)(0, uVar11 & 0xffff, 10),  iVar8 = *0x1005634,  pcVar1 = *0x1000101,  iVar7 == 0) {\n        uVar11 = uVar11 + 1;\n        if (9999 < uVar11) {\n            return 2;\n        }\n    }\n    if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n        *0x1005634 = iVar8 + 2;\n    }\n    if (*0x10053e0 != 0) {\n        if (*0x10053e0 == *0x10055e8) {\n            (**0x1000101)(*0x10053e0, 0);\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar1)(*0x10053e0, 0);\n        }\n    }\n    uVar3 = (**0x1005628)(0, iVar7);\n    iVar8 = (**0x10056d8)(uVar3);\n    if (iVar8 == 0) {\n        return 2;\n    }\n    uVar4 = 0x294;\n    uVar3 = fcn.01001872(iVar8 + 0x91c, iVar8, 0x294, 0x91c);\n    (**0x100408c)(&var_4bch, uVar3, uVar4);\n    cVar10 = extraout_DL;\n    if (var_4ach == 1) goto code_r0x01002565;\n    while (var_4bch._2_2_ != 0) {\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar1)(*0x10053e0, 0);\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        cVar2 = fcn.01001978();\n        cVar10 = extraout_DL_00;\n        if ((cVar2 == '\\0') && (cVar2 = fcn.010018f1(),  cVar10 = extraout_DL_01,  cVar2 == '\\0')) break;\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (var_4ach != 2) {\n            return 2;\n        }\ncode_r0x01002565:\n        *0xffffffff = *0xffffffff + cVar10;\n        if (var_4ach == 2) {\n            return 2;\n        }\n    }\n    if (var_4bch == 1) {\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10053e0 != 0) {\n            if (*0x10053e0 == *0x10055e8) {\n                (*pcVar1)(*0x10053e0, 0);\n            }\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar1)(*0x10053e0, 0);\n            }\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar1)(*0x10053e0, 0);\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar1)(*0x10053e0, 0);\n        }\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        fcn.01001872(iVar8 + 0xbb0, iVar8, var_4b0h, 0x91c);\n        fcn.0100322e(&var_120h, 0, 0x104);\n        if (var_4b4h == 0) {\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar1)(*0x10053e0, 0);\n            }\n            (**0x100566c)(0, &var_120h, 0x104);\n        }\n        else {\n            if (*0x10056c0 == *0x1005634) {\n                *0x1005634 = *0x1005634 + 1;\n            }\n            if (*0x10056c8 != 0) {\n                *0x1005634 = *0x1005634 + 1;\n            }\n            (**0x10056b0)(0, 2, *0x1005654, *0x10056a0, &var_120h, &var_8h);\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if (*0x10053e0 != 0) {\n            if (*0x10053e0 == *0x10055e8) {\n                (*pcVar1)(*0x10053e0, 0);\n            }\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar1)(*0x10053e0, 0);\n            }\n        }\n        uVar3 = (**0x1004090)(0x104);\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar1)(*0x10053e0, 0);\n        }\n        piVar9 = *0x1005600;\n        iVar7 = fcn.0100321c();\n        if (iVar7 == 0) {\n            if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                (*pcVar1)(*0x10053e0, 0);\n                piVar9 = extraout_ECX;\n            }\n            iVar7 = *0x1005634;\n            if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n                *0x1005634 = iVar7 + 2;\n            }\n            if (*0x10056c8 != 0) {\n                *0x1005634 = *0x1005634 + 2;\n            }\n            *piVar9 = *piVar9 + &var_120h;\n            *piVar9 = *piVar9 + &var_120h;\n            (**0x1004098)(uVar3, uVar3, &var_120h);\n        }\n        else {\n            (**0x1004098)(uVar3, \"\\\"%s\\\" %s\", &var_120h, *0x1005600);\n        }\n        fcn.01001a19(uVar3, iVar8 + 0xbb0);\n    }\n    else {\n        if ((var_4bch != 2) && (var_4bch != 3)) {\n            return 2;\n        }\n        var_10h = 0;\n        if (*0x10056c0 == *0x1005634) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n            (*pcVar1)(*0x10053e0, 0);\n        }\n        if (*0x10056c8 != 0) {\n            *0x1005634 = *0x1005634 + 1;\n        }\n        fcn.01001872(iVar8 + 0xbb0, iVar8, var_4b0h, 0x91c);\n        (**0x10040b0)(*0x10056d4);\n        if (var_4b0h != 0) {\n            var_4h = 0;\n            do {\n                if (*0x10056c0 == *0x1005634) {\n                    *0x1005634 = *0x1005634 + 1;\n                }\n                if (*0x10053e0 != 0) {\n                    if (*0x10053e0 == *0x10055e8) {\n                        (*pcVar1)(*0x10053e0, 0);\n                    }\n                    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                        (*pcVar1)(*0x10053e0, 0);\n                    }\n                }\n                (**0x100408c)(&var_228h, var_4h + iVar8 + 0xbb0, 0x108);\n                iVar7 = *0x1005634;\n                if ((*0x10056c0 == *0x1005634) && (*0x1005634 = *0x1005634 + 1,  *0x10056c0 == *0x1005634)) {\n                    *0x1005634 = iVar7 + 2;\n                }\n                if (*0x10056c8 != 0) {\n                    *0x1005634 = *0x1005634 + 1;\n                }\n                iVar7 = extraout_EDX;\n                if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                    (*pcVar1)(*0x10053e0, 0);\n                    iVar7 = extraout_EDX_00;\n                }\n                if (*0x10056c0 == *0x1005634) {\n                    *0x1005634 = *0x1005634 + 1;\n                }\n                piVar9 = iVar7 * 2 + 0x5357e4;\n                *piVar9 = &var_220h + *piVar9;\n                iVar7 = (**0x1005638)(0x10056e4, 0x40000000, 2, 0, 2, 0x80, 0);\n                if ((iVar7 != 0) && (iVar7 != -1)) {\n                    arg_10h = var_228h - var_10h;\n                    if ((0x1000 < arg_10h) && (var_4bch != 3)) {\n                        arg_10h = 0x1000;\n                    }\n                    arg_8h = iVar8 + 0xbb0 + var_4b0h + var_10h;\n                    fcn.01001872(arg_8h, iVar8, arg_10h, 0x91c);\n                    if (*0x10053e0 != 0) {\n                        if (*0x10053e0 == *0x10055e8) {\n                            (*pcVar1)(*0x10053e0, 0);\n                        }\n                        if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n                            (*pcVar1)(*0x10053e0, 0);\n                        }\n                    }\n                    (**0x100569c)(iVar7, 0, 0, 0);\n                    if (*0x10056c0 == *0x1005634) {\n                        *0x1005634 = *0x1005634 + 1;\n                    }\n                    (**0x1005630)(iVar7, arg_8h, var_228h - var_10h, &var_1ch, 0);\n                    (**0x10055f8)(iVar7);\n                    if ((var_4b2h == 1) || (var_4b2h == 3)) {\n                        (**0x100565c)(0x10056e4, 0, 4);\n                    }\n                    if (var_224h < 1) {\n                        (**0x100563c)(0, 0, 0x10056e4, 0, 0, 1);\n                    }\n                    else {\n                        iVar7 = fcn.01003234(0x108);\n                        fcn.01003228(iVar7, &var_228h, 0x108);\n                        fcn.01003228(iVar7 + 8, 0x10056e4, 0x100);\n                        *0x1005644 = *0x1005644 + 1;\n                        (**0x100402c)(0, 0, fcn.010021fd, iVar7, 0, 0);\n                    }\n                }\n                var_10h = var_228h;\n                var_4h = var_4h + 0x108;\n            } while (var_4h < var_4b0h);\n        }\n        while (*0x1005644 != 0) {\n            (**0x1004030)(2000);\n        }\n    }\n    if ((var_4b2h != 2) && (var_4b2h != 3)) {\n        return 2;\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar1)(*0x10053e0, 0);\n    }\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar1)(*0x10053e0, 0);\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    (**0x100566c)(0, &var_120h, 0x10104);\n    (**0x1004098)(&var_224h, *0x1005680, &var_120h, &var_120h);\n    (**0x10056e0)(*0x10056b4, &var_120h, 0x10104);\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar1)(*0x10053e0, 0);\n    }\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    (**0x100563c)(0, 0, &var_120h, &var_224h, 0, 0);\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 2;\n    }\n    if ((*0x10053e0 != 0) && (*0x10053e0 == *0x10055e8)) {\n        (*pcVar1)(*0x10053e0, 0);\n    }\n    if (*0x10056c0 != *0x1005634) {\n        return 2;\n    }\n    *0x1005634 = *0x1005634 + 1;\n    return 2;\n}\n",
        "token_count": 4798
    },
    "0100311b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0100311b(void)\n\n{\n    if (*0x10078a8 == 0) {\n        *0x10078a8 = (**0x10040ec)(*0x10055e8, 0x82);\n    }\n    fcn.01002f4a();\n    return;\n}\n",
        "token_count": 70
    },
    "01001200": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01001200(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x24);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    *(param_1 + 0x30) = iVar1 / 5;\n    if (iVar1 < 0xfb) {\n        if ((*(param_1 + 0x28) % 5 != 0) || (iVar1 < 0xb)) goto code_r0x01001238;\n        iVar1 = iVar1 + -1;\n    }\n    else {\n        iVar1 = iVar1 + -0x19;\n    }\n    *(param_1 + 0x24) = iVar1;\ncode_r0x01001238:\n    fcn.01003146();\n    (**0x1004098)(param_1 + 0x38, 0x10070a4, *(param_1 + 0x18));\n    (**0x10040e8)(*0x10053e0, 0xc, 0, param_1 + 0x38);\n    (**0x10040d8)(*0x10053e0);\n    return;\n}\n",
        "token_count": 280
    },
    "01001872": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01001872(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    uVar1 = 0;\n    uVar2 = 0;\n    if (arg_10h != 0) {\n        do {\n            if (arg_14h <= uVar1) {\n                uVar1 = 0;\n            }\n            *(uVar2 + arg_8h) = *(uVar2 + arg_8h) - (*(uVar1 + arg_ch) + iVar3) % 1000;\n            uVar1 = uVar1 + 1;\n            uVar2 = uVar2 + 1;\n            iVar3 = iVar3 + 9;\n        } while (uVar2 < arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 225
    },
    "01002d1a": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.01002d1a(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(unaff_ESI + -0xc) = var_ch;\n    *(unaff_ESI + -8) = var_4h;\n    *(unaff_ESI + -4) = var_8h * 0xf;\n    uVar2 = (**0x1004010)();\n    uVar3 = (**0x100400c)(uVar2, *0x10078a8);\n    *(unaff_ESI + 0x10) = uVar3;\n    // switch table (8 cases) at 0x1002ea0\n    switch(*unaff_EDI) {\n    case 0:\n        fcn.010011ad(arg_10h * 0xf, unaff_ESI + -0x10, 0xffffff);\n        goto code_r0x01002e88;\n    case 1:\n        iVar1 = unaff_EDI[1];\n        if (iVar1 == 1) {\n            uVar3 = 0x78;\n        }\n        else if (iVar1 == 2) {\n            uVar3 = 0x87;\n        }\n        else if (iVar1 == 3) {\n            uVar3 = 0x5a;\n        }\n        else {\n            if (iVar1 != 4) goto code_r0x01002e88;\n            uVar3 = 0x69;\n        }\n        break;\n    case 2:\n        iVar1 = unaff_EDI[1];\n        if (iVar1 == 1) {\n            uVar3 = 0x1e;\n        }\n        else if (iVar1 == 2) {\n            uVar3 = 0xf;\n        }\n        else if (iVar1 == 3) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar1 != 4) goto code_r0x01002e88;\n            uVar3 = 0x2d;\n        }\n        break;\n    case 3:\n        iVar1 = unaff_EDI[1];\n        if (iVar1 == 1) {\ncode_r0x01002e35:\n            uVar3 = 0x4b;\n        }\n        else {\n            if (iVar1 != 2) {\n                if (iVar1 == 3) goto code_r0x01002e35;\n                if (iVar1 != 4) goto code_r0x01002e88;\n            }\n            uVar3 = 0x3c;\n        }\n        break;\n    case 4:\n        uVar3 = 0xa5;\n        break;\n    case 5:\n        uVar3 = 0xb4;\n        break;\n    case 6:\n        uVar3 = 0xc3;\n        break;\n    case 7:\n        uVar3 = 0xd2;\n        break;\n    default:\n        goto code_r0x01002e88;\n    }\n    (**0x1004008)(arg_10h * 0xf, *(unaff_ESI + -0x10), *(unaff_ESI + -0xc), 0xf, 0xf, uVar2, uVar3, 0, 0xcc0020);\ncode_r0x01002e88:\n    (**0x100400c)(uVar2, *(unaff_ESI + 0x10));\n    (**0x1004004)(uVar2);\n    return;\n}\n",
        "token_count": 908
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0100102f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100102f(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    \n    *0x1005600 = arg_10h;\n    fcn.01003204(0x1005584, 0x10050a0);\n    fcn.01003204(0x1005520, 0x10050a0);\n    fcn.010010a2(arg_8h);\n    iVar1 = fcn.0100110f(arg_8h, arg_14h);\n    if (iVar1 != 0) {\n        do {\n            while (iVar1 = (**0x10040c8)(&var_1ch, 0, 0, 0, 1),  iVar1 == 0) {\n                fcn.01001274();\n            }\n            iVar1 = var_14h;\n        } while (var_18h != 0x12);\n    }\n    return iVar1;\n}\n",
        "token_count": 256
    },
    "01001308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid fcn.01001308(void)\n\n{\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 41
    },
    "0100140f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0100140f(void)\n\n{\n    uint var_20h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    (**0x1004104)(*0x10053e0, &var_10h);\n    (**0x1004108)(*0x10053e0, &var_20h);\n    (**0x100410c)(*0x10053e0, 0, 0, 0, 0x262, ((var_4h - var_14h) - var_ch) + 0x198, 6);\n    fcn.010013e1();\n    return 0;\n}\n",
        "token_count": 162
    },
    "0100146d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0100146d(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char *in_EAX;\n    uint uVar1;\n    uint var_40h;\n    uint uStack32;\n    uint uStack28;\n    uint *puStack24;\n    int32_t iStack20;\n    uint uStack16;\n    uint *puStack12;\n    \n    *in_EAX = *in_EAX + in_EAX;\n    *0x10053e0 = arg_8h;\n    if (arg_ch == 1) {\n        puStack12 = arg_14h;\n        uStack16 = arg_10h;\n        iStack20 = 0x1001517;\n        uVar1 = fcn.0100140f();\n    }\n    else {\n        if (arg_ch == 2) {\n            puStack12 = NULL;\n            uStack16 = 0x1001506;\n            (**0x1004100)();\n        }\n        else {\n            if (arg_ch != 0xf) {\n                if (arg_ch == 0x100) {\n                    puStack12 = arg_14h;\n                    uStack16 = arg_10h;\n                    iStack20 = 0x10014d7;\n                    uVar1 = fcn.01001308();\n                    return uVar1;\n                }\n                if (arg_ch != 0x101) {\n                    puStack12 = arg_14h;\n                    uStack16 = arg_10h;\n                    if (arg_ch != 0x111) {\n                        iStack20 = arg_ch;\n                        puStack24 = arg_8h;\n                        uStack28 = 0x10014b0;\n                        uVar1 = (**0x1004110)();\n                        return uVar1;\n                    }\n                    iStack20 = 0x10014b9;\n                    uVar1 = fcn.010012b2();\n                    return uVar1;\n                }\n                puStack12 = arg_14h;\n                uStack16 = arg_10h;\n                iStack20 = 0x10014c8;\n                uVar1 = fcn.010013d8();\n                return uVar1;\n            }\n            puStack12 = &fcn.0100146d::var_40h;\n            uStack16 = arg_8h;\n            iStack20 = 0x10014e4;\n            iStack20 = (**0x10040f8)();\n            puStack24 = 0x10014ec;\n            fcn.010012a6();\n            puStack24 = &fcn.0100146d::var_40h;\n            uStack28 = *0x10053e0;\n            uStack32 = 0x10014fc;\n            (**0x10040fc)();\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 632
    },
    "010018cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.010018cd(uint param_1, uint param_2)\n\n{\n    uint arg_14h;\n    \n    arg_14h = fcn.0100321c(0x10050ac);\n    fcn.01001872(param_1, 0x10050ac, param_2, arg_14h);\n    return;\n}\n",
        "token_count": 78
    },
    "01001978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "reference the VMWare IO port"
        ],
        "decompiled_code": "\nbool __fastcall fcn.01001978(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    uchar uStack20;\n    unkbyte3 Stack19;\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    *0x564d5868 = *0x564d5868 + 'h';\n    uVar2 = CONCAT11(0x68, unaff_EBX);\n    uVar3 = in(0x50);\n    *(uVar3 | 0x564d0000) = *(uVar3 | 0x564d0000) + uVar3;\n    *(param_1 + 10) = *(param_1 + 10) + (uVar2 >> 8);\n    in(0x5658);\n    Stack19 = uVar1 >> 8;\n    *in_FS_OFFSET = CONCAT13(0x22, Stack19);\n    return (unaff_EBX & 0xffff0000 | uVar2) == 0x564d5868;\n}\n",
        "token_count": 262
    },
    "01002f4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01002f4a(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = 0x10056ec;\n    do {\n        iVar2 = 0x28;\n        do {\n            puVar1[-1] = 0;\n            *puVar1 = 0;\n            puVar1 = puVar1 + 2;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    } while (puVar1 < 0x10078ac);\n    param_1[2] = 0x15;\n    param_1[5] = 0;\n    *param_1 = 0x14;\n    param_1[1] = 0x14;\n    param_1[3] = 0x14;\n    param_1[6] = 5;\n    *0x1007088 = 1;\n    *((param_1[1] + *param_1 * 0x28) * 8 + 0x10056ec) = 2;\n    *((param_1[3] + param_1[2] * 0x28) * 8 + 0x10056e8) = 2;\n    *((param_1[3] + param_1[2] * 0x28) * 8 + 0x10056ec) = 2;\n    fcn.01002c7c(*param_1, param_1[1]);\n    fcn.01002c7c(param_1[2], param_1[2]);\n    iVar2 = 0;\n    if (0 < param_1[4]) {\n        do {\n            fcn.0100302d();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < param_1[4]);\n    }\n    (**0x10040f0)(*0x10053e0, 0, 0);\n    (**0x10040d8)(*0x10053e0);\n    return;\n}\n",
        "token_count": 459
    },
    "01003194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01003194(uint param_1)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t arg_10h;\n    \n    arg_ch = 0;\n    iVar1 = 0x10056e8;\n    do {\n        arg_10h = 0;\n        do {\n            fcn.01002d1a(param_1, arg_ch, arg_10h);\n            arg_10h = arg_10h + 1;\n            iVar1 = iVar1 + 8;\n        } while (arg_10h < 0x28);\n        arg_ch = arg_ch + 1;\n    } while (iVar1 < 0x10078a8);\n    return;\n}\n",
        "token_count": 160
    },
    "0100325c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0100325c(void)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint8_t **ppuVar3;\n    uint arg_8h;\n    uint8_t *arg_14h;\n    char **in_FS_OFFSET;\n    uint var_18h;\n    uint noname_1;\n    uint arg_10h;\n    uchar auStack116 [4];\n    uint uStack112;\n    uint uStack108;\n    uchar auStack104 [4];\n    uchar auStack100 [4];\n    uchar auStack96 [44];\n    uint uStack52;\n    uchar *puStack28;\n    uint *puStack24;\n    char *pcStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x1004150;\n    uStack16 = 0x1003222;\n    pcStack20 = *in_FS_OFFSET;\n    *pcStack20 = *pcStack20 + pcStack20;\n    puStack28 = &stack0xffffff78;\n    var_4h = 0;\n    (**0x1004048)(2);\n    *0x10078c0 = 0xffffffff;\n    *0x10078c4 = 0xffffffff;\n    puVar2 = (**0x100404c)();\n    *puVar2 = *0x10078b8;\n    puVar2 = (**0x1004050)();\n    *puVar2 = *0x10078b4;\n    *0x10078bc = **0x1004054;\n    fcn.01001871();\n    if (*0x10053d8 == 0) {\n        (**0x1004058)(0x10033ea);\n    }\n    fcn.010033d8();\n    fcn.010033d2(0x1005098, 0x100509c);\n    uStack112 = *0x10078b0;\n    (**0x1004060)(auStack100, auStack116, auStack104, *0x10078ac, &uStack112);\n    fcn.010033d2(0x1005000, 0x1005094);\n    arg_14h = **0x1004064;\n    ppuVar3 = *0x1004064;\n    if (*arg_14h != 0x22) {\n        do {\n            if (*arg_14h < 0x21) goto code_r0x0100334f;\n            arg_14h = arg_14h + 1;\n        } while( true );\n    }\n    do {\n        arg_14h = arg_14h + 1;\n        uVar1 = *arg_14h;\n        ppuVar3 = ppuVar3 & 0xffffff00 | uVar1;\n        if (uVar1 == 0) break;\n    } while (uVar1 != 0x22);\n    *ppuVar3 = *ppuVar3 + '\\\"';\n    if (*ppuVar3 != '\\0') goto code_r0x0100334f;\n    do {\n        arg_14h = arg_14h + 1;\ncode_r0x0100334f:\n    } while ((*arg_14h != 0) && (*arg_14h < 0x21));\n    uStack52 = 0;\n    (**0x1004020)(auStack96);\n    arg_10h = 0;\n    noname_1 = 0;\n    arg_8h = (**0x1004038)();\n    uStack108 = fcn.0100102f(arg_8h, noname_1, arg_10h, arg_14h);\n    (**0x1004068)(uStack108);\n    fcn.010033cc(**puStack24, puStack24);\n    return;\n}\n",
        "token_count": 843
    },
    "01001274": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01001274(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**0x100403c)();\n    if (*(param_1 + 0x24) < iVar1 - *(param_1 + 0x20)) {\n        fcn.01001200();\n        *(param_1 + 0x20) = iVar1;\n    }\n    if (*(param_1 + 0x30) < iVar1 - *(param_1 + 0x2c)) {\n        *(param_1 + 0x34) = 0;\n        *(param_1 + 0x2c) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "010021fd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010021fd(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_108h;\n    int32_t var_104h;\n    uint var_100h;\n    \n    puVar2 = &var_108h;\n    for (iVar1 = 0x42; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    if (*0x10056c8 != 0) {\n        *0x1005634 = *0x1005634 + 2;\n    }\n    if (*0x10056c0 == *0x1005634) {\n        *0x1005634 = *0x1005634 + 1;\n    }\n    (**0x1004030)(var_104h * 1000);\n    (**0x100563c)(0, 0, &var_100h, 0, 0, 1);\n    *0x1005644 = *0x1005644 + -1;\n    return 0;\n}\n",
        "token_count": 313
    },
    "01003146": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.01003146(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01003210();\n    fcn.0100186e();\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.01002281();\n    if (iVar1 == 1) {\n        fcn.010013e1();\n    }\n    else if ((iVar1 == 2) || (iVar1 == 3)) {\n        (**0x10040e8)(*0x10053e0, 0x10, 0, 0);\n    }\n    (**0x100401c)(0);\n    iVar1 = 0;\n    iVar2 = 0x10056e8;\n    do {\n        arg_10h = 0;\n        do {\n            fcn.01002d1a(arg_8h, iVar1, arg_10h);\n            arg_10h = arg_10h + 1;\n            iVar2 = iVar2 + 8;\n        } while (arg_10h < 0x28);\n        iVar1 = iVar1 + 1;\n    } while (iVar2 < 0x10078a8);\n    return;\n}\n",
        "token_count": 341
    }
}